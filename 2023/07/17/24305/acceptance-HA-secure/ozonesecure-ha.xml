<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1 (Python 3.8.10 on linux)" generated="20230717 20:17:39.824" rpa="false" schemaversion="4">
<suite id="s1" name="ozonesecure-ha">
<suite id="s1-s1" name="Freon" source="/opt/hadoop/smoketest/freon">
<suite id="s1-s1-s1" name="echoRPCLoad" source="/opt/hadoop/smoketest/freon/echoRPCLoad.robot">
<test id="s1-s1-s1-t1" name="Ozone Echo RPC Load Generator with request payload and response payload" line="26">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ome -t=1 -n=${n} --payload-req=1 --payload-resp=1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:44:37.687" level="INFO">Running command 'ozone freon ome -t=1 -n=1 --payload-req=1 --payload-resp=1 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:44:45.531" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:44:45.531" level="INFO">${output} = 2023-07-17 18:44:41,275 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-17 18:44:41,561 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230717 18:44:37.683" endtime="20230717 18:44:45.531"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:44:45.532" level="INFO">2023-07-17 18:44:41,275 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-17 18:44:41,561 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-07-17 18:44:41,561 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-07-17 18:44:43,133 [main] INFO freon.BaseFreonGenerator: Executing test with prefix myqplbepp7 and number-of-tests 1
2023-07-17 18:44:43,194 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-17 18:44:44,203 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-17 18:44:45,204 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-07-17 18:44:45,464 [shutdown-hook-0] INFO metrics: type=TIMER, name=rpc-payload, count=1, min=1031.39118, max=1031.39118, mean=1031.39118, stddev=0.0, median=1031.39118, p75=1031.39118, p95=1031.39118, p98=1031.39118, p99=1031.39118, p999=1031.39118, mean_rate=0.4400781128264423, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-07-17 18:44:45,465 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2023-07-17 18:44:45,465 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-07-17 18:44:45,465 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230717 18:44:45.531" endtime="20230717 18:44:45.532"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:44:45.533" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:44:45.533" endtime="20230717 18:44:45.533"/>
</kw>
<status status="PASS" starttime="20230717 18:44:37.682" endtime="20230717 18:44:45.533"/>
</kw>
<msg timestamp="20230717 18:44:45.534" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:44:37.682" endtime="20230717 18:44:45.534"/>
</kw>
<msg timestamp="20230717 18:44:45.534" level="INFO">${result} = 2023-07-17 18:44:41,275 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-17 18:44:41,561 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230717 18:44:37.681" endtime="20230717 18:44:45.534"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 18:44:45.534" endtime="20230717 18:44:45.535"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 18:44:37.679" endtime="20230717 18:44:45.535"/>
</test>
<test id="s1-s1-s1-t2" name="Ozone Echo RPC Load Generator with request payload and empty response payload" line="30">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ome -t=1 -n=${n} --payload-req=1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:44:45.542" level="INFO">Running command 'ozone freon ome -t=1 -n=1 --payload-req=1 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:44:53.972" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:44:53.972" level="INFO">${output} = 2023-07-17 18:44:50,012 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-17 18:44:50,269 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230717 18:44:45.539" endtime="20230717 18:44:53.972"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:44:53.975" level="INFO">2023-07-17 18:44:50,012 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-17 18:44:50,269 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-07-17 18:44:50,269 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-07-17 18:44:51,763 [main] INFO freon.BaseFreonGenerator: Executing test with prefix 3uurs3ctmh and number-of-tests 1
2023-07-17 18:44:51,819 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-17 18:44:52,823 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-17 18:44:53,825 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-07-17 18:44:53,904 [shutdown-hook-0] INFO metrics: type=TIMER, name=rpc-payload, count=1, min=1003.34909, max=1003.34909, mean=1003.34909, stddev=0.0, median=1003.34909, p75=1003.34909, p95=1003.34909, p98=1003.34909, p99=1003.34909, p999=1003.34909, mean_rate=0.4793586141093606, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-07-17 18:44:53,905 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2023-07-17 18:44:53,906 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-07-17 18:44:53,906 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230717 18:44:53.973" endtime="20230717 18:44:53.976"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:44:53.976" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:44:53.976" endtime="20230717 18:44:53.977"/>
</kw>
<status status="PASS" starttime="20230717 18:44:45.538" endtime="20230717 18:44:53.977"/>
</kw>
<msg timestamp="20230717 18:44:53.977" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:44:45.538" endtime="20230717 18:44:53.977"/>
</kw>
<msg timestamp="20230717 18:44:53.978" level="INFO">${result} = 2023-07-17 18:44:50,012 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-17 18:44:50,269 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230717 18:44:45.537" endtime="20230717 18:44:53.978"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 18:44:53.978" endtime="20230717 18:44:53.978"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 18:44:45.536" endtime="20230717 18:44:53.979"/>
</test>
<test id="s1-s1-s1-t3" name="Ozone Echo RPC Load Generator with empty request payload and response payload" line="34">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ome -t=1 -n=${n} --payload-resp=1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:44:53.987" level="INFO">Running command 'ozone freon ome -t=1 -n=1 --payload-resp=1 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:45:01.003" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:45:01.003" level="INFO">${output} = 2023-07-17 18:44:58,206 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-17 18:44:58,442 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230717 18:44:53.983" endtime="20230717 18:45:01.003"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:45:01.005" level="INFO">2023-07-17 18:44:58,206 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-17 18:44:58,442 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-07-17 18:44:58,442 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-07-17 18:44:59,768 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ih8poarzyf and number-of-tests 1
2023-07-17 18:44:59,815 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-17 18:45:00,830 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-07-17 18:45:00,911 [shutdown-hook-0] INFO metrics: type=TIMER, name=rpc-payload, count=1, min=830.772595, max=830.772595, mean=830.772595, stddev=0.0, median=830.772595, p75=830.772595, p95=830.772595, p98=830.772595, p99=830.772595, p999=830.772595, mean_rate=0.9098906260240677, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-07-17 18:45:00,913 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 1
2023-07-17 18:45:00,913 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-07-17 18:45:00,913 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230717 18:45:01.004" endtime="20230717 18:45:01.005"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:45:01.005" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:45:01.005" endtime="20230717 18:45:01.006"/>
</kw>
<status status="PASS" starttime="20230717 18:44:53.983" endtime="20230717 18:45:01.006"/>
</kw>
<msg timestamp="20230717 18:45:01.006" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:44:53.982" endtime="20230717 18:45:01.006"/>
</kw>
<msg timestamp="20230717 18:45:01.006" level="INFO">${result} = 2023-07-17 18:44:58,206 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-17 18:44:58,442 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230717 18:44:53.981" endtime="20230717 18:45:01.006"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 18:45:01.007" endtime="20230717 18:45:01.007"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 18:44:53.980" endtime="20230717 18:45:01.007"/>
</test>
<test id="s1-s1-s1-t4" name="Ozone Echo RPC Load Generator with empty request payload and empty response payload" line="38">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ome -t=1 -n=${n}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:45:01.016" level="INFO">Running command 'ozone freon ome -t=1 -n=1 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:45:08.012" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:45:08.012" level="INFO">${output} = 2023-07-17 18:45:05,318 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-17 18:45:05,554 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230717 18:45:01.012" endtime="20230717 18:45:08.012"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:45:08.015" level="INFO">2023-07-17 18:45:05,318 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-17 18:45:05,554 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-07-17 18:45:05,554 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-07-17 18:45:06,762 [main] INFO freon.BaseFreonGenerator: Executing test with prefix nj6xeuqbau and number-of-tests 1
2023-07-17 18:45:06,814 [Thread-6] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-17 18:45:07,816 [Thread-6] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-07-17 18:45:07,892 [shutdown-hook-0] INFO metrics: type=TIMER, name=rpc-payload, count=1, min=897.174022, max=897.174022, mean=897.174022, stddev=0.0, median=897.174022, p75=897.174022, p95=897.174022, p98=897.174022, p99=897.174022, p999=897.174022, mean_rate=0.9339482761344758, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-07-17 18:45:07,894 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 1
2023-07-17 18:45:07,894 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-07-17 18:45:07,894 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230717 18:45:08.013" endtime="20230717 18:45:08.015"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:45:08.016" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:45:08.015" endtime="20230717 18:45:08.016"/>
</kw>
<status status="PASS" starttime="20230717 18:45:01.011" endtime="20230717 18:45:08.017"/>
</kw>
<msg timestamp="20230717 18:45:08.017" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:45:01.011" endtime="20230717 18:45:08.017"/>
</kw>
<msg timestamp="20230717 18:45:08.017" level="INFO">${result} = 2023-07-17 18:45:05,318 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-17 18:45:05,554 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230717 18:45:01.010" endtime="20230717 18:45:08.017"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 18:45:08.018" endtime="20230717 18:45:08.019"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 18:45:01.009" endtime="20230717 18:45:08.019"/>
</test>
<doc>Test freon echo RPC commands</doc>
<status status="PASS" starttime="20230717 18:44:37.635" endtime="20230717 18:45:08.022"/>
</suite>
<suite id="s1-s1-s2" name="Generate-Chunk" source="/opt/hadoop/smoketest/freon/generate-chunk.robot">
<test id="s1-s1-s2-t1" name="DN Chunk Generator" line="25">
<kw name="Freon DCG" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20230717 18:45:08.044" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:45:08.043" endtime="20230717 18:45:08.045"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcg -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<status status="NOT RUN" starttime="20230717 18:45:08.045" endtime="20230717 18:45:08.045"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230717 18:45:08.045" endtime="20230717 18:45:08.046"/>
</kw>
<status status="PASS" starttime="20230717 18:45:08.039" endtime="20230717 18:45:08.046"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 18:45:08.037" endtime="20230717 18:45:08.046"/>
</test>
<doc>Test freon chunk generation commands</doc>
<status status="PASS" starttime="20230717 18:45:08.025" endtime="20230717 18:45:08.047"/>
</suite>
<suite id="s1-s1-s3" name="Generate" source="/opt/hadoop/smoketest/freon/generate.robot">
<test id="s1-s1-s3-t1" name="Ozone Client Key Generator" line="25">
<kw name="Freon OCKG" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:45:08.073" level="INFO">Running command 'ozone freon ockg --om-service-id=omservice -t 1 -n1 -p ockg  2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:45:26.075" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:45:26.075" level="INFO">${output} = 2023-07-17 18:45:11,866 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-17 18:45:12,105 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230717 18:45:08.068" endtime="20230717 18:45:26.075"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:45:26.076" level="INFO">2023-07-17 18:45:11,866 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-17 18:45:12,105 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-07-17 18:45:12,105 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-07-17 18:45:12,241 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockg and number-of-tests 1
2023-07-17 18:45:12,316 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-17 18:45:13,322 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-17 18:45:14,322 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-17 18:45:15,323 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-17 18:45:16,325 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-17 18:45:16,430 [main] INFO rpc.RpcClient: Creating Volume: vol1, with testuser as owner and space quota set to -1 bytes, counts quota set to -1
2023-07-17 18:45:17,051 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and Encryption set to false, Replication Type set to server-side default replication type, Namespace Quota set to -1, Space Quota set to -1 
2023-07-17 18:45:17,329 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-17 18:45:18,329 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-17 18:45:19,377 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-17 18:45:19,773 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-07-17 18:45:19,847 [pool-2-thread-1] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig0-
2023-07-17 18:45:20,260 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-07-17 18:45:20,378 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-17 18:45:21,378 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-17 18:45:22,378 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-17 18:45:23,379 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-17 18:45:24,381 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-17 18:45:25,381 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-07-17 18:45:25,637 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=7574.265665, max=7574.265665, mean=7574.265665, stddev=0.0, median=7574.265665, p75=7574.265665, p95=7574.265665, p98=7574.265665, p99=7574.265665, p999=7574.265665, mean_rate=0.12239647843672258, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-07-17 18:45:25,638 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 13
2023-07-17 18:45:25,639 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-07-17 18:45:25,639 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230717 18:45:26.075" endtime="20230717 18:45:26.076"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:45:26.077" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:45:26.077" endtime="20230717 18:45:26.077"/>
</kw>
<status status="PASS" starttime="20230717 18:45:08.067" endtime="20230717 18:45:26.077"/>
</kw>
<msg timestamp="20230717 18:45:26.078" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:45:08.067" endtime="20230717 18:45:26.078"/>
</kw>
<msg timestamp="20230717 18:45:26.078" level="INFO">${result} = 2023-07-17 18:45:11,866 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-17 18:45:12,105 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230717 18:45:08.066" endtime="20230717 18:45:26.078"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 18:45:26.078" endtime="20230717 18:45:26.079"/>
</kw>
<status status="PASS" starttime="20230717 18:45:08.064" endtime="20230717 18:45:26.079"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 18:45:08.063" endtime="20230717 18:45:26.079"/>
</test>
<test id="s1-s1-s3-t2" name="OM Key Generator" line="28">
<kw name="Freon OMKG" library="freon">
<arg>prefix=omkg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon omkg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:45:26.089" level="INFO">Running command 'ozone freon omkg --om-service-id=omservice -t 1 -n1 -p omkg  2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:45:36.167" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:45:36.167" level="INFO">${output} = 2023-07-17 18:45:30,341 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-17 18:45:30,647 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230717 18:45:26.085" endtime="20230717 18:45:36.167"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:45:36.172" level="INFO">2023-07-17 18:45:30,341 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-17 18:45:30,647 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-07-17 18:45:30,648 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-07-17 18:45:30,786 [main] INFO freon.BaseFreonGenerator: Executing test with prefix omkg and number-of-tests 1
2023-07-17 18:45:30,861 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-17 18:45:31,870 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-17 18:45:32,871 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-17 18:45:33,872 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-17 18:45:34,872 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-17 18:45:35,873 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-07-17 18:45:36,051 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=395.656137, max=395.656137, mean=395.656137, stddev=0.0, median=395.656137, p75=395.656137, p95=395.656137, p98=395.656137, p99=395.656137, p999=395.656137, mean_rate=0.6209307832789795, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-07-17 18:45:36,052 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 5
2023-07-17 18:45:36,052 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-07-17 18:45:36,052 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230717 18:45:36.169" endtime="20230717 18:45:36.173"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:45:36.175" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:45:36.173" endtime="20230717 18:45:36.175"/>
</kw>
<status status="PASS" starttime="20230717 18:45:26.084" endtime="20230717 18:45:36.176"/>
</kw>
<msg timestamp="20230717 18:45:36.176" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:45:26.084" endtime="20230717 18:45:36.177"/>
</kw>
<msg timestamp="20230717 18:45:36.177" level="INFO">${result} = 2023-07-17 18:45:30,341 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-17 18:45:30,647 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230717 18:45:26.083" endtime="20230717 18:45:36.177"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 18:45:36.177" endtime="20230717 18:45:36.178"/>
</kw>
<status status="PASS" starttime="20230717 18:45:26.081" endtime="20230717 18:45:36.178"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 18:45:26.080" endtime="20230717 18:45:36.178"/>
</test>
<test id="s1-s1-s3-t3" name="OM Bucket Generator" line="31">
<kw name="Freon OMBG" library="freon">
<arg>prefix=ombg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ombg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:45:36.191" level="INFO">Running command 'ozone freon ombg --om-service-id=omservice -t 1 -n1 -p ombg  2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:45:44.960" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:45:44.960" level="INFO">${output} = 2023-07-17 18:45:39,845 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-17 18:45:40,087 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230717 18:45:36.188" endtime="20230717 18:45:44.960"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:45:44.962" level="INFO">2023-07-17 18:45:39,845 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-17 18:45:40,087 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-07-17 18:45:40,087 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-07-17 18:45:40,204 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombg and number-of-tests 1
2023-07-17 18:45:40,283 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-17 18:45:41,291 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-17 18:45:42,291 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-17 18:45:43,292 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-17 18:45:44,293 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-07-17 18:45:44,887 [shutdown-hook-0] INFO metrics: type=TIMER, name=bucket-create, count=1, min=117.401656, max=117.401656, mean=117.401656, stddev=0.0, median=117.401656, p75=117.401656, p95=117.401656, p98=117.401656, p99=117.401656, p999=117.401656, mean_rate=0.8787393401558597, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-07-17 18:45:44,888 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 5
2023-07-17 18:45:44,888 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-07-17 18:45:44,888 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230717 18:45:44.961" endtime="20230717 18:45:44.962"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:45:44.963" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:45:44.962" endtime="20230717 18:45:44.963"/>
</kw>
<status status="PASS" starttime="20230717 18:45:36.187" endtime="20230717 18:45:44.964"/>
</kw>
<msg timestamp="20230717 18:45:44.964" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:45:36.185" endtime="20230717 18:45:44.964"/>
</kw>
<msg timestamp="20230717 18:45:44.964" level="INFO">${result} = 2023-07-17 18:45:39,845 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-17 18:45:40,087 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230717 18:45:36.185" endtime="20230717 18:45:44.964"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 18:45:44.964" endtime="20230717 18:45:44.965"/>
</kw>
<status status="PASS" starttime="20230717 18:45:36.182" endtime="20230717 18:45:44.965"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 18:45:36.181" endtime="20230717 18:45:44.965"/>
</test>
<doc>Test freon data generation commands</doc>
<status status="PASS" starttime="20230717 18:45:08.050" endtime="20230717 18:45:44.967"/>
</suite>
<suite id="s1-s1-s4" name="Read-Write-Key" source="/opt/hadoop/smoketest/freon/read-write-key.robot">
<test id="s1-s1-s4-t1" name="Pre-generate 100 keys of size 1 byte each to Ozone" line="26">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ork -n 1 -t 10 -r 100 --size 1 -v voltest -b buckettest -p performanceTest</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:45:44.984" level="INFO">Running command 'ozone freon ork -n 1 -t 10 -r 100 --size 1 -v voltest -b buckettest -p performanceTest 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:46:21.764" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:46:21.764" level="INFO">${output} = 2023-07-17 18:45:48,940 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-17 18:45:49,207 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230717 18:45:44.980" endtime="20230717 18:46:21.764"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:46:21.766" level="INFO">2023-07-17 18:45:48,940 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-17 18:45:49,207 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-07-17 18:45:49,207 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-07-17 18:45:49,353 [main] INFO freon.BaseFreonGenerator: Executing test with prefix performanceTest and number-of-tests 1
2023-07-17 18:45:49,455 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-17 18:45:50,460 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-17 18:45:51,461 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-17 18:45:52,462 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-17 18:45:53,463 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-17 18:45:53,983 [main] INFO rpc.RpcClient: Creating Volume: voltest, with testuser as owner and space quota set to -1 bytes, counts quota set to -1
2023-07-17 18:45:54,117 [main] INFO rpc.RpcClient: Creating Bucket: voltest/buckettest, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and Encryption set to false, Replication Type set to server-side default replication type, Namespace Quota set to -1, Space Quota set to -1 
2023-07-17 18:45:54,468 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-17 18:45:54,885 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-07-17 18:45:54,988 [pool-2-thread-1] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig0-
2023-07-17 18:45:55,508 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-07-17 18:45:59,696 [pool-2-thread-1] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig1-
2023-07-17 18:46:21,365 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-read-write, count=1, min=26647.099005, max=26647.099005, mean=26647.099005, stddev=0.0, median=26647.099005, p75=26647.099005, p95=26647.099005, p98=26647.099005, p99=26647.099005, p999=26647.099005, mean_rate=0.03682292404213534, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-07-17 18:46:21,367 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 32
2023-07-17 18:46:21,367 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-07-17 18:46:21,367 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230717 18:46:21.765" endtime="20230717 18:46:21.766"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:46:21.767" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:46:21.766" endtime="20230717 18:46:21.767"/>
</kw>
<status status="PASS" starttime="20230717 18:45:44.979" endtime="20230717 18:46:21.767"/>
</kw>
<msg timestamp="20230717 18:46:21.767" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:45:44.979" endtime="20230717 18:46:21.768"/>
</kw>
<msg timestamp="20230717 18:46:21.768" level="INFO">${result} = 2023-07-17 18:45:48,940 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-17 18:45:49,207 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230717 18:45:44.978" endtime="20230717 18:46:21.768"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 18:45:44.977" endtime="20230717 18:46:21.768"/>
</test>
<test id="s1-s1-s4-t2" name="Read 10 keys from pre-generated keys" line="29">
<kw name="Set Variable" library="BuiltIn">
<var>${keysCount}</var>
<arg>10</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230717 18:46:21.778" level="INFO">${keysCount} = 10</msg>
<status status="PASS" starttime="20230717 18:46:21.778" endtime="20230717 18:46:21.779"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockrw -n ${keysCount} -t 10 -r 100 -v voltest -b buckettest -p performanceTest</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:46:21.786" level="INFO">Running command 'ozone freon ockrw -n 10 -t 10 -r 100 -v voltest -b buckettest -p performanceTest 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:46:37.018" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:46:37.019" level="INFO">${output} = 2023-07-17 18:46:25,653 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-17 18:46:26,028 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230717 18:46:21.780" endtime="20230717 18:46:37.019"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:46:37.020" level="INFO">2023-07-17 18:46:25,653 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-17 18:46:26,028 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-07-17 18:46:26,028 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-07-17 18:46:26,222 [main] INFO freon.BaseFreonGenerator: Executing test with prefix performanceTest and number-of-tests 10
2023-07-17 18:46:26,311 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-07-17 18:46:27,316 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-07-17 18:46:28,317 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-07-17 18:46:29,318 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-07-17 18:46:30,322 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-07-17 18:46:31,322 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-07-17 18:46:32,111 [pool-2-thread-8] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-07-17 18:46:32,330 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-07-17 18:46:33,330 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-07-17 18:46:34,331 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-07-17 18:46:35,332 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-07-17 18:46:36,332 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (10 out of 10)
2023-07-17 18:46:36,619 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-read-write, count=10, min=4664.705068, max=4672.357605, mean=4670.397013199999, stddev=2.3307123996595887, median=4671.887679, p75=4672.012786, p95=4672.357605, p98=4672.357605, p99=4672.357605, p999=4672.357605, mean_rate=1.7372016186169703, m1=2.0, m5=2.0, m15=2.0, rate_unit=events/second, duration_unit=milliseconds
2023-07-17 18:46:36,619 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 10
2023-07-17 18:46:36,620 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-07-17 18:46:36,620 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 10</msg>
<status status="PASS" starttime="20230717 18:46:37.019" endtime="20230717 18:46:37.020"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:46:37.021" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:46:37.021" endtime="20230717 18:46:37.021"/>
</kw>
<status status="PASS" starttime="20230717 18:46:21.780" endtime="20230717 18:46:37.022"/>
</kw>
<msg timestamp="20230717 18:46:37.022" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:46:21.779" endtime="20230717 18:46:37.022"/>
</kw>
<msg timestamp="20230717 18:46:37.022" level="INFO">${result} = 2023-07-17 18:46:25,653 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-17 18:46:26,028 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230717 18:46:21.779" endtime="20230717 18:46:37.022"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${keysCount}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 18:46:37.023" endtime="20230717 18:46:37.023"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 18:46:21.770" endtime="20230717 18:46:37.023"/>
</test>
<test id="s1-s1-s4-t3" name="Read 10 keys' metadata from pre-generated keys" line="34">
<kw name="Set Variable" library="BuiltIn">
<var>${keysCount}</var>
<arg>10</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230717 18:46:37.027" level="INFO">${keysCount} = 10</msg>
<status status="PASS" starttime="20230717 18:46:37.026" endtime="20230717 18:46:37.027"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockrw -n ${keysCount} -t 10 -m -r 100 -v voltest -b buckettest -p performanceTest</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:46:37.032" level="INFO">Running command 'ozone freon ockrw -n 10 -t 10 -m -r 100 -v voltest -b buckettest -p performanceTest 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:46:46.547" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:46:46.548" level="INFO">${output} = 2023-07-17 18:46:40,701 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-17 18:46:40,971 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230717 18:46:37.028" endtime="20230717 18:46:46.548"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:46:46.550" level="INFO">2023-07-17 18:46:40,701 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-17 18:46:40,971 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-07-17 18:46:40,972 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-07-17 18:46:41,109 [main] INFO freon.BaseFreonGenerator: Executing test with prefix performanceTest and number-of-tests 10
2023-07-17 18:46:41,226 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-07-17 18:46:42,228 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-07-17 18:46:43,229 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-07-17 18:46:44,229 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-07-17 18:46:45,230 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-07-17 18:46:46,231 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (10 out of 10)
2023-07-17 18:46:46,429 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-read-write, count=10, min=229.860604, max=251.963345, mean=241.72995970000005, stddev=5.625102809803783, median=241.314446, p75=245.360273, p95=251.963345, p98=251.963345, p99=251.963345, p999=251.963345, mean_rate=8.927310597394994, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-07-17 18:46:46,431 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 5
2023-07-17 18:46:46,432 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-07-17 18:46:46,432 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 10</msg>
<status status="PASS" starttime="20230717 18:46:46.549" endtime="20230717 18:46:46.550"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:46:46.551" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:46:46.550" endtime="20230717 18:46:46.551"/>
</kw>
<status status="PASS" starttime="20230717 18:46:37.028" endtime="20230717 18:46:46.552"/>
</kw>
<msg timestamp="20230717 18:46:46.552" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:46:37.028" endtime="20230717 18:46:46.553"/>
</kw>
<msg timestamp="20230717 18:46:46.553" level="INFO">${result} = 2023-07-17 18:46:40,701 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-17 18:46:40,971 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230717 18:46:37.027" endtime="20230717 18:46:46.553"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${keysCount}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 18:46:46.554" endtime="20230717 18:46:46.554"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 18:46:37.025" endtime="20230717 18:46:46.555"/>
</test>
<test id="s1-s1-s4-t4" name="Write 10 keys of size 1 byte each from key index 0 to 99" line="39">
<kw name="Set Variable" library="BuiltIn">
<var>${keysCount}</var>
<arg>10</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230717 18:46:46.558" level="INFO">${keysCount} = 10</msg>
<status status="PASS" starttime="20230717 18:46:46.558" endtime="20230717 18:46:46.558"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${size}</var>
<arg>1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230717 18:46:46.559" level="INFO">${size} = 1</msg>
<status status="PASS" starttime="20230717 18:46:46.558" endtime="20230717 18:46:46.559"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockrw -n ${keysCount} -t 10 --percentage-read 0 --size ${size} -r 100 -v voltest -b buckettest -p performanceTest</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:46:46.565" level="INFO">Running command 'ozone freon ockrw -n 10 -t 10 --percentage-read 0 --size 1 -r 100 -v voltest -b buckettest -p performanceTest 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:47:00.979" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:47:00.979" level="INFO">${output} = 2023-07-17 18:46:50,620 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-17 18:46:50,872 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230717 18:46:46.561" endtime="20230717 18:47:00.979"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:47:00.981" level="INFO">2023-07-17 18:46:50,620 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-17 18:46:50,872 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-07-17 18:46:50,872 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-07-17 18:46:51,016 [main] INFO freon.BaseFreonGenerator: Executing test with prefix performanceTest and number-of-tests 10
2023-07-17 18:46:51,115 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-07-17 18:46:52,120 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-07-17 18:46:53,120 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-07-17 18:46:54,121 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-07-17 18:46:55,122 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-07-17 18:46:55,824 [pool-2-thread-3] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-07-17 18:46:55,920 [pool-2-thread-2] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig6-
2023-07-17 18:46:55,922 [pool-2-thread-8] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig5-
2023-07-17 18:46:55,922 [pool-2-thread-10] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig1-
2023-07-17 18:46:55,922 [pool-2-thread-5] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig2-
2023-07-17 18:46:55,922 [pool-2-thread-6] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig9-
2023-07-17 18:46:55,922 [pool-2-thread-9] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig3-
2023-07-17 18:46:55,922 [pool-2-thread-1] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig8-
2023-07-17 18:46:55,922 [pool-2-thread-3] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig0-
2023-07-17 18:46:55,924 [pool-2-thread-4] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig7-
2023-07-17 18:46:55,943 [pool-2-thread-7] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig4-
2023-07-17 18:46:56,123 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-07-17 18:46:56,405 [pool-2-thread-7] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-07-17 18:46:57,123 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-07-17 18:46:58,124 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-07-17 18:46:59,125 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-07-17 18:47:00,126 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (10 out of 10)
2023-07-17 18:47:00,566 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-read-write, count=10, min=4518.180981, max=4696.571086, mean=4614.7287338999995, stddev=57.33156998240654, median=4625.590525, p75=4664.835871, p95=4696.571086, p98=4696.571086, p99=4696.571086, p999=4696.571086, mean_rate=1.7723973538258515, m1=2.0, m5=2.0, m15=2.0, rate_unit=events/second, duration_unit=milliseconds
2023-07-17 18:47:00,567 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 9
2023-07-17 18:47:00,567 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-07-17 18:47:00,567 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 10</msg>
<status status="PASS" starttime="20230717 18:47:00.980" endtime="20230717 18:47:00.981"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:47:00.982" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:47:00.981" endtime="20230717 18:47:00.982"/>
</kw>
<status status="PASS" starttime="20230717 18:46:46.560" endtime="20230717 18:47:00.983"/>
</kw>
<msg timestamp="20230717 18:47:00.983" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:46:46.560" endtime="20230717 18:47:00.983"/>
</kw>
<msg timestamp="20230717 18:47:00.984" level="INFO">${result} = 2023-07-17 18:46:50,620 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-17 18:46:50,872 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230717 18:46:46.559" endtime="20230717 18:47:00.984"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${keysCount}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 18:47:00.984" endtime="20230717 18:47:00.985"/>
</kw>
<kw name="Execute" library="os">
<var>${keyName}</var>
<arg>echo -n '1' | md5sum | head -c 7</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:47:00.992" level="INFO">Running command 'echo -n '1' | md5sum | head -c 7 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:47:01.008" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:47:01.008" level="INFO">${output} = c4ca423</msg>
<status status="PASS" starttime="20230717 18:47:00.988" endtime="20230717 18:47:01.008"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:47:01.012" level="INFO">c4ca423</msg>
<status status="PASS" starttime="20230717 18:47:01.009" endtime="20230717 18:47:01.013"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:47:01.015" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:47:01.013" endtime="20230717 18:47:01.015"/>
</kw>
<status status="PASS" starttime="20230717 18:47:00.987" endtime="20230717 18:47:01.015"/>
</kw>
<msg timestamp="20230717 18:47:01.015" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:47:00.987" endtime="20230717 18:47:01.016"/>
</kw>
<msg timestamp="20230717 18:47:01.016" level="INFO">${keyName} = c4ca423</msg>
<status status="PASS" starttime="20230717 18:47:00.986" endtime="20230717 18:47:01.016"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /voltest/buckettest/performanceTest/${keyName}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:47:01.038" level="INFO">Running command 'ozone sh key info /voltest/buckettest/performanceTest/c4ca423 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:47:10.128" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:47:10.129" level="INFO">${output} = {
  "volumeName" : "voltest",
  "bucketName" : "buckettest",
  "name" : "performanceTest/c4ca423",
  "dataSize" : 1,
  "creationTime" : "2023-07-17T18:45:58.074Z",
  "modificationTime" : "2023-07-17T1...</msg>
<status status="PASS" starttime="20230717 18:47:01.027" endtime="20230717 18:47:10.129"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:47:10.130" level="INFO">{
  "volumeName" : "voltest",
  "bucketName" : "buckettest",
  "name" : "performanceTest/c4ca423",
  "dataSize" : 1,
  "creationTime" : "2023-07-17T18:45:58.074Z",
  "modificationTime" : "2023-07-17T18:45:58.401Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "ozoneKeyLocations" : [ {
    "containerID" : 2,
    "localID" : 111677748019200004,
    "length" : 1,
    "offset" : 0,
    "keyOffset" : 0
  } ],
  "file" : true
}</msg>
<status status="PASS" starttime="20230717 18:47:10.129" endtime="20230717 18:47:10.131"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:47:10.131" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:47:10.131" endtime="20230717 18:47:10.132"/>
</kw>
<status status="PASS" starttime="20230717 18:47:01.019" endtime="20230717 18:47:10.132"/>
</kw>
<msg timestamp="20230717 18:47:10.132" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:47:01.018" endtime="20230717 18:47:10.132"/>
</kw>
<msg timestamp="20230717 18:47:10.132" level="INFO">${result} = {
  "volumeName" : "voltest",
  "bucketName" : "buckettest",
  "name" : "performanceTest/c4ca423",
  "dataSize" : 1,
  "creationTime" : "2023-07-17T18:45:58.074Z",
  "modificationTime" : "2023-07-17T1...</msg>
<status status="PASS" starttime="20230717 18:47:01.017" endtime="20230717 18:47:10.133"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"dataSize\" : 1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 18:47:10.133" endtime="20230717 18:47:10.133"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 18:46:46.556" endtime="20230717 18:47:10.134"/>
</test>
<test id="s1-s1-s4-t5" name="Run 90 % of read-key tasks and 10 % of write-key tasks for 10 keys from pre-generated keys" line="49">
<kw name="Set Variable" library="BuiltIn">
<var>${keysCount}</var>
<arg>10</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230717 18:47:10.137" level="INFO">${keysCount} = 10</msg>
<status status="PASS" starttime="20230717 18:47:10.137" endtime="20230717 18:47:10.137"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockrw -n ${keysCount} -t 10 --percentage-read 90 -r 100 -v voltest -b buckettest -p performanceTest</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:47:10.143" level="INFO">Running command 'ozone freon ockrw -n 10 -t 10 --percentage-read 90 -r 100 -v voltest -b buckettest -p performanceTest 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:47:23.219" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:47:23.219" level="INFO">${output} = 2023-07-17 18:47:14,134 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-17 18:47:14,391 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230717 18:47:10.139" endtime="20230717 18:47:23.219"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:47:23.221" level="INFO">2023-07-17 18:47:14,134 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-17 18:47:14,391 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-07-17 18:47:14,391 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-07-17 18:47:14,496 [main] INFO freon.BaseFreonGenerator: Executing test with prefix performanceTest and number-of-tests 10
2023-07-17 18:47:14,593 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-07-17 18:47:15,604 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-07-17 18:47:16,604 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-07-17 18:47:17,605 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-07-17 18:47:18,629 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-07-17 18:47:18,709 [pool-2-thread-9] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-07-17 18:47:19,013 [pool-2-thread-2] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig0-
2023-07-17 18:47:19,629 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-07-17 18:47:19,724 [pool-2-thread-2] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-07-17 18:47:20,630 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-07-17 18:47:21,633 [Thread-5] INFO freon.ProgressBar: Progress: 90.00 % (9 out of 10)
2023-07-17 18:47:22,634 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (10 out of 10)
2023-07-17 18:47:22,828 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-read-write, count=10, min=3277.691202, max=3542.976521, mean=3344.080405699999, stddev=72.39283373063452, median=3320.314031, p75=3332.608432, p95=3542.976521, p98=3542.976521, p99=3542.976521, p999=3542.976521, mean_rate=2.1239010662696347, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-07-17 18:47:22,829 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 8
2023-07-17 18:47:22,830 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-07-17 18:47:22,830 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 10</msg>
<status status="PASS" starttime="20230717 18:47:23.220" endtime="20230717 18:47:23.221"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:47:23.223" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:47:23.222" endtime="20230717 18:47:23.223"/>
</kw>
<status status="PASS" starttime="20230717 18:47:10.139" endtime="20230717 18:47:23.223"/>
</kw>
<msg timestamp="20230717 18:47:23.224" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:47:10.138" endtime="20230717 18:47:23.224"/>
</kw>
<msg timestamp="20230717 18:47:23.224" level="INFO">${result} = 2023-07-17 18:47:14,134 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-17 18:47:14,391 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230717 18:47:10.137" endtime="20230717 18:47:23.224"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${keysCount}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 18:47:23.225" endtime="20230717 18:47:23.225"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 18:47:10.135" endtime="20230717 18:47:23.226"/>
</test>
<doc>Test freon read/write key commands</doc>
<status status="PASS" starttime="20230717 18:45:44.969" endtime="20230717 18:47:23.228"/>
</suite>
<suite id="s1-s1-s5" name="Remove" source="/opt/hadoop/smoketest/freon/remove.robot">
<test id="s1-s1-s5-t1" name="Ozone Client Key Remover" line="26">
<kw name="Freon OCKG" library="freon" type="SETUP">
<arg>prefix=${OCKR_PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:47:23.259" level="INFO">Running command 'ozone freon ockg --om-service-id=omservice -t 1 -n1 -p ockr  2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:47:35.519" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:47:35.519" level="INFO">${output} = 2023-07-17 18:47:27,141 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-17 18:47:27,404 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230717 18:47:23.255" endtime="20230717 18:47:35.519"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:47:35.521" level="INFO">2023-07-17 18:47:27,141 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-17 18:47:27,404 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-07-17 18:47:27,404 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-07-17 18:47:27,564 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockr and number-of-tests 1
2023-07-17 18:47:27,917 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-17 18:47:28,920 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-17 18:47:29,920 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-17 18:47:30,921 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-17 18:47:31,903 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-07-17 18:47:31,922 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-17 18:47:31,989 [pool-2-thread-1] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig0-
2023-07-17 18:47:32,443 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-07-17 18:47:32,922 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-17 18:47:33,925 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-17 18:47:34,925 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-07-17 18:47:35,124 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=2882.739425, max=2882.739425, mean=2882.739425, stddev=0.0, median=2882.739425, p75=2882.739425, p95=2882.739425, p98=2882.739425, p99=2882.739425, p999=2882.739425, mean_rate=0.2603509267694627, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-07-17 18:47:35,125 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 7
2023-07-17 18:47:35,125 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-07-17 18:47:35,125 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230717 18:47:35.520" endtime="20230717 18:47:35.521"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:47:35.522" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:47:35.522" endtime="20230717 18:47:35.522"/>
</kw>
<status status="PASS" starttime="20230717 18:47:23.254" endtime="20230717 18:47:35.523"/>
</kw>
<msg timestamp="20230717 18:47:35.523" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:47:23.253" endtime="20230717 18:47:35.523"/>
</kw>
<msg timestamp="20230717 18:47:35.523" level="INFO">${result} = 2023-07-17 18:47:27,141 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-17 18:47:27,404 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230717 18:47:23.252" endtime="20230717 18:47:35.524"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 18:47:35.524" endtime="20230717 18:47:35.525"/>
</kw>
<status status="PASS" starttime="20230717 18:47:23.250" endtime="20230717 18:47:35.525"/>
</kw>
<kw name="Freon OCKR" library="freon">
<arg>prefix=${OCKR_PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockr ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:47:35.535" level="INFO">Running command 'ozone freon ockr --om-service-id=omservice -t 1 -n1 -p ockr  2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:47:44.732" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:47:44.732" level="INFO">${output} = 2023-07-17 18:47:39,719 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-17 18:47:40,033 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230717 18:47:35.529" endtime="20230717 18:47:44.732"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:47:44.734" level="INFO">2023-07-17 18:47:39,719 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-17 18:47:40,033 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-07-17 18:47:40,033 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-07-17 18:47:40,189 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockr and number-of-tests 1
2023-07-17 18:47:40,301 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-17 18:47:41,322 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-17 18:47:42,322 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-17 18:47:43,323 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-17 18:47:44,323 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-07-17 18:47:44,672 [shutdown-hook-0] INFO metrics: type=TIMER, name=remove, count=1, min=72.406719, max=72.406719, mean=72.406719, stddev=0.0, median=72.406719, p75=72.406719, p95=72.406719, p98=72.406719, p99=72.406719, p999=72.406719, mean_rate=0.8648911448394306, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-07-17 18:47:44,673 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2023-07-17 18:47:44,673 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-07-17 18:47:44,673 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230717 18:47:44.733" endtime="20230717 18:47:44.734"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:47:44.735" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:47:44.734" endtime="20230717 18:47:44.735"/>
</kw>
<status status="PASS" starttime="20230717 18:47:35.528" endtime="20230717 18:47:44.735"/>
</kw>
<msg timestamp="20230717 18:47:44.735" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:47:35.528" endtime="20230717 18:47:44.735"/>
</kw>
<msg timestamp="20230717 18:47:44.736" level="INFO">${result} = 2023-07-17 18:47:39,719 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-17 18:47:40,033 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230717 18:47:35.527" endtime="20230717 18:47:44.736"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 18:47:44.736" endtime="20230717 18:47:44.736"/>
</kw>
<status status="PASS" starttime="20230717 18:47:35.525" endtime="20230717 18:47:44.736"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 18:47:23.249" endtime="20230717 18:47:44.737"/>
</test>
<test id="s1-s1-s5-t2" name="OM Bucket Remover" line="30">
<kw name="Freon OMBG" library="freon" type="SETUP">
<arg>prefix=${OMBR_PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ombg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:47:44.747" level="INFO">Running command 'ozone freon ombg --om-service-id=omservice -t 1 -n1 -p ombr  2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:47:53.152" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:47:53.152" level="INFO">${output} = 2023-07-17 18:47:48,437 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-17 18:47:48,686 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230717 18:47:44.743" endtime="20230717 18:47:53.153"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:47:53.155" level="INFO">2023-07-17 18:47:48,437 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-17 18:47:48,686 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-07-17 18:47:48,686 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-07-17 18:47:48,854 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombr and number-of-tests 1
2023-07-17 18:47:48,950 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-17 18:47:49,960 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-17 18:47:50,960 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-17 18:47:51,961 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-17 18:47:52,962 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-07-17 18:47:53,068 [shutdown-hook-0] INFO metrics: type=TIMER, name=bucket-create, count=1, min=53.518782, max=53.518782, mean=53.518782, stddev=0.0, median=53.518782, p75=53.518782, p95=53.518782, p98=53.518782, p99=53.518782, p999=53.518782, mean_rate=0.8804326897723425, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-07-17 18:47:53,069 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2023-07-17 18:47:53,069 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-07-17 18:47:53,070 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230717 18:47:53.153" endtime="20230717 18:47:53.155"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:47:53.156" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:47:53.155" endtime="20230717 18:47:53.156"/>
</kw>
<status status="PASS" starttime="20230717 18:47:44.743" endtime="20230717 18:47:53.156"/>
</kw>
<msg timestamp="20230717 18:47:53.156" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:47:44.742" endtime="20230717 18:47:53.156"/>
</kw>
<msg timestamp="20230717 18:47:53.157" level="INFO">${result} = 2023-07-17 18:47:48,437 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-17 18:47:48,686 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230717 18:47:44.741" endtime="20230717 18:47:53.157"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 18:47:53.157" endtime="20230717 18:47:53.157"/>
</kw>
<status status="PASS" starttime="20230717 18:47:44.739" endtime="20230717 18:47:53.158"/>
</kw>
<kw name="Freon OMBR" library="freon">
<arg>prefix=${OMBR_PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ombr ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:47:53.166" level="INFO">Running command 'ozone freon ombr --om-service-id=omservice -t 1 -n1 -p ombr  2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:48:01.481" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:48:01.481" level="INFO">${output} = 2023-07-17 18:47:57,412 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-17 18:47:57,830 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230717 18:47:53.162" endtime="20230717 18:48:01.481"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:48:01.483" level="INFO">2023-07-17 18:47:57,412 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-17 18:47:57,830 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-07-17 18:47:57,830 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-07-17 18:47:58,129 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombr and number-of-tests 1
2023-07-17 18:47:58,238 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-17 18:47:59,240 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-17 18:48:00,241 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-17 18:48:01,241 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-07-17 18:48:01,386 [shutdown-hook-0] INFO metrics: type=TIMER, name=bucket-remove, count=1, min=993.409831, max=993.409831, mean=993.409831, stddev=0.0, median=993.409831, p75=993.409831, p95=993.409831, p98=993.409831, p99=993.409831, p999=993.409831, mean_rate=0.6185799684381572, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-07-17 18:48:01,387 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2023-07-17 18:48:01,387 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-07-17 18:48:01,387 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230717 18:48:01.482" endtime="20230717 18:48:01.483"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:48:01.484" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:48:01.483" endtime="20230717 18:48:01.484"/>
</kw>
<status status="PASS" starttime="20230717 18:47:53.161" endtime="20230717 18:48:01.484"/>
</kw>
<msg timestamp="20230717 18:48:01.484" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:47:53.161" endtime="20230717 18:48:01.485"/>
</kw>
<msg timestamp="20230717 18:48:01.485" level="INFO">${result} = 2023-07-17 18:47:57,412 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-17 18:47:57,830 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230717 18:47:53.160" endtime="20230717 18:48:01.485"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 18:48:01.485" endtime="20230717 18:48:01.486"/>
</kw>
<status status="PASS" starttime="20230717 18:47:53.158" endtime="20230717 18:48:01.486"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 18:47:44.738" endtime="20230717 18:48:01.486"/>
</test>
<doc>Test freon data remove commands</doc>
<status status="PASS" starttime="20230717 18:47:23.231" endtime="20230717 18:48:01.488"/>
</suite>
<suite id="s1-s1-s6" name="Validate-Chunk" source="/opt/hadoop/smoketest/freon/validate-chunk.robot">
<test id="s1-s1-s6-t1" name="DN Chunk Validator" line="25">
<kw name="Freon DCV" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20230717 18:48:01.507" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:48:01.506" endtime="20230717 18:48:01.507"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcv -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<status status="NOT RUN" starttime="20230717 18:48:01.507" endtime="20230717 18:48:01.507"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230717 18:48:01.507" endtime="20230717 18:48:01.507"/>
</kw>
<status status="PASS" starttime="20230717 18:48:01.504" endtime="20230717 18:48:01.507"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 18:48:01.503" endtime="20230717 18:48:01.508"/>
</test>
<doc>Test freon chunk validation commands</doc>
<status status="PASS" starttime="20230717 18:48:01.492" endtime="20230717 18:48:01.508"/>
</suite>
<suite id="s1-s1-s7" name="Validate" source="/opt/hadoop/smoketest/freon/validate.robot">
<test id="s1-s1-s7-t1" name="Ozone Client Key Validator" line="25">
<kw name="Freon OCKV" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:48:01.526" level="INFO">Running command 'ozone freon ockv --om-service-id=omservice -t 1 -n1 -p ockg  2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:48:13.187" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:48:13.187" level="INFO">${output} = 2023-07-17 18:48:05,469 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-17 18:48:05,677 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230717 18:48:01.523" endtime="20230717 18:48:13.187"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:48:13.189" level="INFO">2023-07-17 18:48:05,469 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-17 18:48:05,677 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-07-17 18:48:05,677 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-07-17 18:48:05,852 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockg and number-of-tests 1
2023-07-17 18:48:05,921 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-17 18:48:06,922 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-17 18:48:07,922 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-17 18:48:08,923 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-17 18:48:09,347 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-07-17 18:48:09,924 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-17 18:48:10,924 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-17 18:48:11,925 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-07-17 18:48:12,777 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=71.112508, max=71.112508, mean=71.112508, stddev=0.0, median=71.112508, p75=71.112508, p95=71.112508, p98=71.112508, p99=71.112508, p999=71.112508, mean_rate=0.6687478152176064, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-07-17 18:48:12,780 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 7
2023-07-17 18:48:12,781 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-07-17 18:48:12,781 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230717 18:48:13.188" endtime="20230717 18:48:13.189"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:48:13.191" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:48:13.189" endtime="20230717 18:48:13.191"/>
</kw>
<status status="PASS" starttime="20230717 18:48:01.522" endtime="20230717 18:48:13.191"/>
</kw>
<msg timestamp="20230717 18:48:13.191" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:48:01.522" endtime="20230717 18:48:13.191"/>
</kw>
<msg timestamp="20230717 18:48:13.191" level="INFO">${result} = 2023-07-17 18:48:05,469 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-17 18:48:05,677 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230717 18:48:01.521" endtime="20230717 18:48:13.192"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 18:48:13.192" endtime="20230717 18:48:13.192"/>
</kw>
<status status="PASS" starttime="20230717 18:48:01.519" endtime="20230717 18:48:13.192"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 18:48:01.519" endtime="20230717 18:48:13.193"/>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" starttime="20230717 18:48:01.511" endtime="20230717 18:48:13.195"/>
</suite>
<status status="PASS" starttime="20230717 18:44:37.593" endtime="20230717 18:48:13.201"/>
</suite>
<suite id="s1-s2" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s2-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 20:09:44.009" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 20:09:44.028" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 20:09:44.029" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230717 20:09:43.994" endtime="20230717 20:09:44.029"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 20:09:44.033" level="INFO">scm</msg>
<status status="PASS" starttime="20230717 20:09:44.031" endtime="20230717 20:09:44.033"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 20:09:44.034" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 20:09:44.034" endtime="20230717 20:09:44.035"/>
</kw>
<status status="PASS" starttime="20230717 20:09:43.993" endtime="20230717 20:09:44.035"/>
</kw>
<msg timestamp="20230717 20:09:44.035" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 20:09:43.993" endtime="20230717 20:09:44.035"/>
</kw>
<msg timestamp="20230717 20:09:44.035" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230717 20:09:43.989" endtime="20230717 20:09:44.036"/>
</kw>
<msg timestamp="20230717 20:09:44.036" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230717 20:09:43.986" endtime="20230717 20:09:44.036"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230717 20:09:44.037" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230717 20:09:44.036" endtime="20230717 20:09:44.037"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 20:09:44.045" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 20:09:44.122" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 20:09:44.122" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 20:09:44.040" endtime="20230717 20:09:44.122"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 20:09:44.128" level="INFO"/>
<status status="PASS" starttime="20230717 20:09:44.123" endtime="20230717 20:09:44.128"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 20:09:44.131" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 20:09:44.129" endtime="20230717 20:09:44.131"/>
</kw>
<status status="PASS" starttime="20230717 20:09:44.040" endtime="20230717 20:09:44.131"/>
</kw>
<msg timestamp="20230717 20:09:44.132" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 20:09:44.039" endtime="20230717 20:09:44.133"/>
</kw>
<status status="PASS" starttime="20230717 20:09:44.038" endtime="20230717 20:09:44.133"/>
</kw>
<status status="PASS" starttime="20230717 20:09:44.037" endtime="20230717 20:09:44.133"/>
</kw>
<status status="PASS" starttime="20230717 20:09:43.981" endtime="20230717 20:09:44.133"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230717 20:09:43.976" endtime="20230717 20:09:44.135"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20230717 20:09:43.473" endtime="20230717 20:09:44.143"/>
</suite>
<suite id="s1-s3" name="Primordial-Scm" source="/opt/hadoop/smoketest/scmha/primordial-scm.robot">
<test id="s1-s3-t1" name="Verify SCM Count" line="33">
<kw name="Get SCM Node Count">
<var>${scm_count}</var>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm roles --service-id=scmservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 20:10:15.361" level="INFO">Running command 'ozone admin scm roles --service-id=scmservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 20:10:32.873" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 20:10:32.874" level="INFO">${output} = scm1.org:9894:LEADER:da3b10bc-ec4c-480f-b5d0-63f9c7e74e53:172.25.0.116
scm4.org:9894:FOLLOWER:be2b7640-b274-4851-a24b-581e7856d4b5:172.25.0.120
scm3.org:9894:FOLLOWER:0cb57506-2706-4c25-9881-ed7ad0f47...</msg>
<status status="PASS" starttime="20230717 20:10:15.356" endtime="20230717 20:10:32.874"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 20:10:32.876" level="INFO">scm1.org:9894:LEADER:da3b10bc-ec4c-480f-b5d0-63f9c7e74e53:172.25.0.116
scm4.org:9894:FOLLOWER:be2b7640-b274-4851-a24b-581e7856d4b5:172.25.0.120
scm3.org:9894:FOLLOWER:0cb57506-2706-4c25-9881-ed7ad0f47ea8:172.25.0.118
scm2.org:9894:FOLLOWER:58d8a3f7-6c81-4819-84ff-6aff5b0ce812:172.25.0.117</msg>
<status status="PASS" starttime="20230717 20:10:32.874" endtime="20230717 20:10:32.876"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 20:10:32.877" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 20:10:32.876" endtime="20230717 20:10:32.877"/>
</kw>
<status status="PASS" starttime="20230717 20:10:15.353" endtime="20230717 20:10:32.878"/>
</kw>
<msg timestamp="20230717 20:10:32.878" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 20:10:15.353" endtime="20230717 20:10:32.878"/>
</kw>
<msg timestamp="20230717 20:10:32.879" level="INFO">${result} = scm1.org:9894:LEADER:da3b10bc-ec4c-480f-b5d0-63f9c7e74e53:172.25.0.116
scm4.org:9894:FOLLOWER:be2b7640-b274-4851-a24b-581e7856d4b5:172.25.0.120
scm3.org:9894:FOLLOWER:0cb57506-2706-4c25-9881-ed7ad0f47...</msg>
<status status="PASS" starttime="20230717 20:10:15.352" endtime="20230717 20:10:32.879"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 20:10:32.880" level="INFO">scm1.org:9894:LEADER:da3b10bc-ec4c-480f-b5d0-63f9c7e74e53:172.25.0.116
scm4.org:9894:FOLLOWER:be2b7640-b274-4851-a24b-581e7856d4b5:172.25.0.120
scm3.org:9894:FOLLOWER:0cb57506-2706-4c25-9881-ed7ad0f47ea8:172.25.0.118
scm2.org:9894:FOLLOWER:58d8a3f7-6c81-4819-84ff-6aff5b0ce812:172.25.0.117</msg>
<status status="PASS" starttime="20230717 20:10:32.879" endtime="20230717 20:10:32.880"/>
</kw>
<kw name="Get Line Count" library="String">
<var>${scm_count}</var>
<arg>${result}</arg>
<doc>Returns and logs the number of lines in the given string.</doc>
<msg timestamp="20230717 20:10:32.881" level="INFO">4 lines</msg>
<msg timestamp="20230717 20:10:32.882" level="INFO">${scm_count} = 4</msg>
<status status="PASS" starttime="20230717 20:10:32.880" endtime="20230717 20:10:32.882"/>
</kw>
<msg timestamp="20230717 20:10:32.882" level="INFO">${scm_count} = 4</msg>
<status status="PASS" starttime="20230717 20:10:15.351" endtime="20230717 20:10:32.883"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>SCM Instance Count: ${scm_count}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 20:10:32.884" level="INFO">SCM Instance Count: 4</msg>
<status status="PASS" starttime="20230717 20:10:32.883" endtime="20230717 20:10:32.884"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${scm_count}</var>
<arg>${scm_count}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230717 20:10:32.885" level="INFO">${scm_count} = 4</msg>
<status status="PASS" starttime="20230717 20:10:32.884" endtime="20230717 20:10:32.885"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>4</arg>
<arg>${scm_count}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230717 20:10:32.885" endtime="20230717 20:10:32.886"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 20:10:15.349" endtime="20230717 20:10:32.887"/>
</test>
<test id="s1-s3-t2" name="Transfer Leader to SCM4" line="39">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm roles --service-id=scmservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 20:10:32.898" level="INFO">Running command 'ozone admin scm roles --service-id=scmservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 20:10:50.805" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 20:10:50.805" level="INFO">${output} = scm1.org:9894:LEADER:da3b10bc-ec4c-480f-b5d0-63f9c7e74e53:172.25.0.116
scm4.org:9894:FOLLOWER:be2b7640-b274-4851-a24b-581e7856d4b5:172.25.0.120
scm3.org:9894:FOLLOWER:0cb57506-2706-4c25-9881-ed7ad0f47...</msg>
<status status="PASS" starttime="20230717 20:10:32.893" endtime="20230717 20:10:50.805"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 20:10:50.807" level="INFO">scm1.org:9894:LEADER:da3b10bc-ec4c-480f-b5d0-63f9c7e74e53:172.25.0.116
scm4.org:9894:FOLLOWER:be2b7640-b274-4851-a24b-581e7856d4b5:172.25.0.120
scm3.org:9894:FOLLOWER:0cb57506-2706-4c25-9881-ed7ad0f47ea8:172.25.0.118
scm2.org:9894:FOLLOWER:58d8a3f7-6c81-4819-84ff-6aff5b0ce812:172.25.0.117</msg>
<status status="PASS" starttime="20230717 20:10:50.806" endtime="20230717 20:10:50.808"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 20:10:50.809" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 20:10:50.808" endtime="20230717 20:10:50.809"/>
</kw>
<status status="PASS" starttime="20230717 20:10:32.892" endtime="20230717 20:10:50.809"/>
</kw>
<msg timestamp="20230717 20:10:50.809" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 20:10:32.890" endtime="20230717 20:10:50.810"/>
</kw>
<msg timestamp="20230717 20:10:50.810" level="INFO">${result} = scm1.org:9894:LEADER:da3b10bc-ec4c-480f-b5d0-63f9c7e74e53:172.25.0.116
scm4.org:9894:FOLLOWER:be2b7640-b274-4851-a24b-581e7856d4b5:172.25.0.120
scm3.org:9894:FOLLOWER:0cb57506-2706-4c25-9881-ed7ad0f47...</msg>
<status status="PASS" starttime="20230717 20:10:32.889" endtime="20230717 20:10:50.810"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 20:10:50.811" level="INFO">scm1.org:9894:LEADER:da3b10bc-ec4c-480f-b5d0-63f9c7e74e53:172.25.0.116
scm4.org:9894:FOLLOWER:be2b7640-b274-4851-a24b-581e7856d4b5:172.25.0.120
scm3.org:9894:FOLLOWER:0cb57506-2706-4c25-9881-ed7ad0f47ea8:172.25.0.118
scm2.org:9894:FOLLOWER:58d8a3f7-6c81-4819-84ff-6aff5b0ce812:172.25.0.117</msg>
<status status="PASS" starttime="20230717 20:10:50.810" endtime="20230717 20:10:50.811"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${scm4_line}</var>
<arg>${result}</arg>
<arg>scm4.org</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20230717 20:10:50.812" level="INFO">1 out of 4 lines matched</msg>
<msg timestamp="20230717 20:10:50.812" level="INFO">${scm4_line} = scm4.org:9894:FOLLOWER:be2b7640-b274-4851-a24b-581e7856d4b5:172.25.0.120</msg>
<status status="PASS" starttime="20230717 20:10:50.811" endtime="20230717 20:10:50.812"/>
</kw>
<kw name="Split String" library="String">
<var>${scm4_split}</var>
<arg>${scm4_line}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230717 20:10:50.814" level="INFO">${scm4_split} = ['scm4.org', '9894', 'FOLLOWER', 'be2b7640-b274-4851-a24b-581e7856d4b5', '172.25.0.120']</msg>
<status status="PASS" starttime="20230717 20:10:50.813" endtime="20230717 20:10:50.814"/>
</kw>
<kw name="Strip String" library="String">
<var>${scm4_uuid}</var>
<arg>${scm4_split[3]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230717 20:10:50.817" level="INFO">${scm4_uuid} = be2b7640-b274-4851-a24b-581e7856d4b5</msg>
<status status="PASS" starttime="20230717 20:10:50.814" endtime="20230717 20:10:50.817"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm transfer --service-id=scmservice -n ${scm4_uuid}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 20:10:50.827" level="INFO">Running command 'ozone admin scm transfer --service-id=scmservice -n be2b7640-b274-4851-a24b-581e7856d4b5 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 20:11:12.672" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 20:11:12.672" level="INFO">${output} = Transfer leadership successfully to be2b7640-b274-4851-a24b-581e7856d4b5.</msg>
<status status="PASS" starttime="20230717 20:10:50.820" endtime="20230717 20:11:12.672"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 20:11:12.677" level="INFO">Transfer leadership successfully to be2b7640-b274-4851-a24b-581e7856d4b5.</msg>
<status status="PASS" starttime="20230717 20:11:12.673" endtime="20230717 20:11:12.677"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 20:11:12.680" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 20:11:12.678" endtime="20230717 20:11:12.680"/>
</kw>
<status status="PASS" starttime="20230717 20:10:50.819" endtime="20230717 20:11:12.680"/>
</kw>
<msg timestamp="20230717 20:11:12.680" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 20:10:50.818" endtime="20230717 20:11:12.680"/>
</kw>
<msg timestamp="20230717 20:11:12.683" level="INFO">${result} = Transfer leadership successfully to be2b7640-b274-4851-a24b-581e7856d4b5.</msg>
<status status="PASS" starttime="20230717 20:10:50.817" endtime="20230717 20:11:12.684"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 20:11:12.686" level="INFO">Transfer leadership successfully to be2b7640-b274-4851-a24b-581e7856d4b5.</msg>
<status status="PASS" starttime="20230717 20:11:12.684" endtime="20230717 20:11:12.686"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Transfer leadership successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 20:11:12.686" endtime="20230717 20:11:12.687"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 20:10:32.888" endtime="20230717 20:11:12.688"/>
</test>
<test id="s1-s3-t3" name="Verify SCM4 Certificate" line="50">
<kw name="Execute" library="os">
<var>${root_ca_output}</var>
<arg>ozone admin cert list -c 1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 20:11:12.704" level="INFO">Running command 'ozone admin cert list -c 1 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 20:11:34.617" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 20:11:34.617" level="INFO">${output} = Certificate list:(Type=VALID, BatchSize=1, CertCount=1)
The certificate list could be longer than the batch size: 1. Please use the "-c" option to see more certificates.
SerialNumber      Valid From  ...</msg>
<status status="PASS" starttime="20230717 20:11:12.697" endtime="20230717 20:11:34.617"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 20:11:34.619" level="INFO">Certificate list:(Type=VALID, BatchSize=1, CertCount=1)
The certificate list could be longer than the batch size: 1. Please use the "-c" option to see more certificates.
SerialNumber      Valid From                     Expiry                         Subject                                                                                                        Issuer                                                                                                        
852499839548      Mon Jul 17 18:40:34 UTC 2023   Thu Aug 24 18:40:34 UTC 2028   CN=scm-sub-852204892760@scm1.org,OU=da3b10bc-ec4c-480f-b5d0-63f9c7e74e53,O=CID-dd9bf909-4ea0-4c2a-a63e-78b5ec6fbb59 CN=scm-1@scm1.org,OU=da3b10bc-ec4c-480f-b5d0-63f9c7e74e53,O=CID-dd9bf909-4ea0-4c2a-a63e-78b5ec6fbb59          </msg>
<status status="PASS" starttime="20230717 20:11:34.618" endtime="20230717 20:11:34.619"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 20:11:34.621" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 20:11:34.620" endtime="20230717 20:11:34.621"/>
</kw>
<status status="PASS" starttime="20230717 20:11:12.695" endtime="20230717 20:11:34.621"/>
</kw>
<msg timestamp="20230717 20:11:34.621" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 20:11:12.694" endtime="20230717 20:11:34.621"/>
</kw>
<msg timestamp="20230717 20:11:34.622" level="INFO">${root_ca_output} = Certificate list:(Type=VALID, BatchSize=1, CertCount=1)
The certificate list could be longer than the batch size: 1. Please use the "-c" option to see more certificates.
SerialNumber      Valid From  ...</msg>
<status status="PASS" starttime="20230717 20:11:12.691" endtime="20230717 20:11:34.622"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${root_ca_cert}</var>
<arg>${root_ca_output}</arg>
<arg>scm1.org</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20230717 20:11:34.623" level="INFO">1 out of 4 lines matched</msg>
<msg timestamp="20230717 20:11:34.623" level="INFO">${root_ca_cert} = 852499839548      Mon Jul 17 18:40:34 UTC 2023   Thu Aug 24 18:40:34 UTC 2028   CN=scm-sub-852204892760@scm1.org,OU=da3b10bc-ec4c-480f-b5d0-63f9c7e74e53,O=CID-dd9bf909-4ea0-4c2a-a63e-78b5ec6fbb59 CN=s...</msg>
<status status="PASS" starttime="20230717 20:11:34.622" endtime="20230717 20:11:34.624"/>
</kw>
<kw name="Split String" library="String">
<var>${root_ca_cert_split}</var>
<arg>${root_ca_cert}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230717 20:11:34.625" level="INFO">${root_ca_cert_split} = ['852499839548', 'Mon', 'Jul', '17', '18:40:34', 'UTC', '2023', 'Thu', 'Aug', '24', '18:40:34', 'UTC', '2028', 'CN=scm-sub-852204892760@scm1.org,OU=da3b10bc-ec4c-480f-b5d0-63f9c7e74e53,O=CID-dd9bf909-...</msg>
<status status="PASS" starttime="20230717 20:11:34.624" endtime="20230717 20:11:34.627"/>
</kw>
<kw name="Strip String" library="String">
<var>${root_ca_cert_subject}</var>
<arg>${root_ca_cert_split[3]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230717 20:11:34.631" level="INFO">${root_ca_cert_subject} = 17</msg>
<status status="PASS" starttime="20230717 20:11:34.627" endtime="20230717 20:11:34.631"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin cert list -c 1000000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 20:11:34.653" level="INFO">Running command 'ozone admin cert list -c 1000000 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 20:11:56.505" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 20:11:56.505" level="INFO">${output} = Certificate list:(Type=VALID, BatchSize=1000000, CertCount=12)
SerialNumber      Valid From                     Expiry                         Subject                                                  ...</msg>
<status status="PASS" starttime="20230717 20:11:34.638" endtime="20230717 20:11:56.505"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 20:11:56.507" level="INFO">Certificate list:(Type=VALID, BatchSize=1000000, CertCount=12)
SerialNumber      Valid From                     Expiry                         Subject                                                                                                        Issuer                                                                                                        
852499839548      Mon Jul 17 18:40:34 UTC 2023   Thu Aug 24 18:40:34 UTC 2028   CN=scm-sub-852204892760@scm1.org,OU=da3b10bc-ec4c-480f-b5d0-63f9c7e74e53,O=CID-dd9bf909-4ea0-4c2a-a63e-78b5ec6fbb59 CN=scm-1@scm1.org,OU=da3b10bc-ec4c-480f-b5d0-63f9c7e74e53,O=CID-dd9bf909-4ea0-4c2a-a63e-78b5ec6fbb59          
884513867268      Mon Jul 17 18:41:06 UTC 2023   Tue Jul 16 18:41:06 UTC 2024   CN=recon@recon,OU=da3b10bc-ec4c-480f-b5d0-63f9c7e74e53,O=CID-dd9bf909-4ea0-4c2a-a63e-78b5ec6fbb59              CN=scm-sub-852204892760@scm1.org,OU=da3b10bc-ec4c-480f-b5d0-63f9c7e74e53,O=CID-dd9bf909-4ea0-4c2a-a63e-78b5ec6fbb59
884642352884      Mon Jul 17 18:41:06 UTC 2023   Thu Aug 24 18:41:06 UTC 2028   CN=scm-sub-883973919742@scm2.org,OU=58d8a3f7-6c81-4819-84ff-6aff5b0ce812,O=CID-dd9bf909-4ea0-4c2a-a63e-78b5ec6fbb59 CN=scm-1@scm1.org,OU=da3b10bc-ec4c-480f-b5d0-63f9c7e74e53,O=CID-dd9bf909-4ea0-4c2a-a63e-78b5ec6fbb59          
911991594077      Mon Jul 17 18:41:34 UTC 2023   Thu Aug 24 18:41:34 UTC 2028   CN=scm-sub-911745127761@scm3.org,OU=0cb57506-2706-4c25-9881-ed7ad0f47ea8,O=CID-dd9bf909-4ea0-4c2a-a63e-78b5ec6fbb59 CN=scm-1@scm1.org,OU=da3b10bc-ec4c-480f-b5d0-63f9c7e74e53,O=CID-dd9bf909-4ea0-4c2a-a63e-78b5ec6fbb59          
961816107337      Mon Jul 17 18:42:23 UTC 2023   Tue Jul 16 18:42:23 UTC 2024   CN=dn@c7003881c11f,OU=da3b10bc-ec4c-480f-b5d0-63f9c7e74e53,O=CID-dd9bf909-4ea0-4c2a-a63e-78b5ec6fbb59          CN=scm-sub-852204892760@scm1.org,OU=da3b10bc-ec4c-480f-b5d0-63f9c7e74e53,O=CID-dd9bf909-4ea0-4c2a-a63e-78b5ec6fbb59
965109690379      Mon Jul 17 18:42:27 UTC 2023   Tue Jul 16 18:42:27 UTC 2024   CN=dn@6807a881c6ca,OU=da3b10bc-ec4c-480f-b5d0-63f9c7e74e53,O=CID-dd9bf909-4ea0-4c2a-a63e-78b5ec6fbb59          CN=scm-sub-852204892760@scm1.org,OU=da3b10bc-ec4c-480f-b5d0-63f9c7e74e53,O=CID-dd9bf909-4ea0-4c2a-a63e-78b5ec6fbb59
968210158057      Mon Jul 17 18:42:30 UTC 2023   Tue Jul 16 18:42:30 UTC 2024   CN=dn@952e24e18cd7,OU=da3b10bc-ec4c-480f-b5d0-63f9c7e74e53,O=CID-dd9bf909-4ea0-4c2a-a63e-78b5ec6fbb59          CN=scm-sub-852204892760@scm1.org,OU=da3b10bc-ec4c-480f-b5d0-63f9c7e74e53,O=CID-dd9bf909-4ea0-4c2a-a63e-78b5ec6fbb59
969288087944      Mon Jul 17 18:42:31 UTC 2023   Tue Jul 16 18:42:31 UTC 2024   CN=om3,OU=da3b10bc-ec4c-480f-b5d0-63f9c7e74e53,O=CID-dd9bf909-4ea0-4c2a-a63e-78b5ec6fbb59                      CN=scm-sub-852204892760@scm1.org,OU=da3b10bc-ec4c-480f-b5d0-63f9c7e74e53,O=CID-dd9bf909-4ea0-4c2a-a63e-78b5ec6fbb59
970786205041      Mon Jul 17 18:42:32 UTC 2023   Tue Jul 16 18:42:32 UTC 2024   CN=om2,OU=da3b10bc-ec4c-480f-b5d0-63f9c7e74e53,O=CID-dd9bf909-4ea0-4c2a-a63e-78b5ec6fbb59                      CN=scm-sub-852204892760@scm1.org,OU=da3b10bc-ec4c-480f-b5d0-63f9c7e74e53,O=CID-dd9bf909-4ea0-4c2a-a63e-78b5ec6fbb59
973711856883      Mon Jul 17 18:42:35 UTC 2023   Tue Jul 16 18:42:35 UTC 2024   CN=om1,OU=da3b10bc-ec4c-480f-b5d0-63f9c7e74e53,O=CID-dd9bf909-4ea0-4c2a-a63e-78b5ec6fbb59                      CN=scm-sub-852204892760@scm1.org,OU=da3b10bc-ec4c-480f-b5d0-63f9c7e74e53,O=CID-dd9bf909-4ea0-4c2a-a63e-78b5ec6fbb59
1                 Mon Jul 17 18:40:33 UTC 2023   Thu Aug 24 18:40:33 UTC 2028   CN=scm-1@scm1.org,OU=da3b10bc-ec4c-480f-b5d0-63f9c7e74e53,O=CID-dd9bf909-4ea0-4c2a-a63e-78b5ec6fbb59           CN=scm-1@scm1.org,OU=da3b10bc-ec4c-480f-b5d0-63f9c7e74e53,O=CID-dd9bf909-4ea0-4c2a-a63e-78b5ec6fbb59          
6147600982487     Mon Jul 17 20:08:49 UTC 2023   Thu Aug 24 20:08:49 UTC 2028   CN=scm-sub-6146189357055@scm4.org,OU=be2b7640-b274-4851-a24b-581e7856d4b5,O=CID-dd9bf909-4ea0-4c2a-a63e-78b5ec6fbb59 CN=scm-1@scm1.org,OU=da3b10bc-ec4c-480f-b5d0-63f9c7e74e53,O=CID-dd9bf909-4ea0-4c2a-a63e-78b5ec6fbb59          </msg>
<status status="PASS" starttime="20230717 20:11:56.506" endtime="20230717 20:11:56.507"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 20:11:56.515" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 20:11:56.507" endtime="20230717 20:11:56.515"/>
</kw>
<status status="PASS" starttime="20230717 20:11:34.636" endtime="20230717 20:11:56.515"/>
</kw>
<msg timestamp="20230717 20:11:56.515" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 20:11:34.633" endtime="20230717 20:11:56.515"/>
</kw>
<msg timestamp="20230717 20:11:56.523" level="INFO">${output} = Certificate list:(Type=VALID, BatchSize=1000000, CertCount=12)
SerialNumber      Valid From                     Expiry                         Subject                                                  ...</msg>
<status status="PASS" starttime="20230717 20:11:34.632" endtime="20230717 20:11:56.523"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${scm4_cert}</var>
<arg>${output}</arg>
<arg>scm4.org</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20230717 20:11:56.527" level="INFO">1 out of 14 lines matched</msg>
<msg timestamp="20230717 20:11:56.527" level="INFO">${scm4_cert} = 6147600982487     Mon Jul 17 20:08:49 UTC 2023   Thu Aug 24 20:08:49 UTC 2028   CN=scm-sub-6146189357055@scm4.org,OU=be2b7640-b274-4851-a24b-581e7856d4b5,O=CID-dd9bf909-4ea0-4c2a-a63e-78b5ec6fbb59 CN=...</msg>
<status status="PASS" starttime="20230717 20:11:56.526" endtime="20230717 20:11:56.528"/>
</kw>
<kw name="Split String" library="String">
<var>${scm4_cert_split}</var>
<arg>${scm4_cert}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230717 20:11:56.528" level="INFO">${scm4_cert_split} = ['6147600982487', 'Mon', 'Jul', '17', '20:08:49', 'UTC', '2023', 'Thu', 'Aug', '24', '20:08:49', 'UTC', '2028', 'CN=scm-sub-6146189357055@scm4.org,OU=be2b7640-b274-4851-a24b-581e7856d4b5,O=CID-dd9bf90...</msg>
<status status="PASS" starttime="20230717 20:11:56.528" endtime="20230717 20:11:56.529"/>
</kw>
<kw name="Strip String" library="String">
<var>${scm4_cert_issuer}</var>
<arg>${scm4_cert_split[4]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230717 20:11:56.541" level="INFO">${scm4_cert_issuer} = 20:08:49</msg>
<status status="PASS" starttime="20230717 20:11:56.529" endtime="20230717 20:11:56.542"/>
</kw>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<arg>${scm4_cert_issuer}</arg>
<arg>${root_ca_cert_subject}</arg>
<doc>Fails if objects are equal after converting them to strings.</doc>
<status status="PASS" starttime="20230717 20:11:56.543" endtime="20230717 20:11:56.545"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 20:11:12.690" endtime="20230717 20:11:56.545"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230717 20:10:15.166" endtime="20230717 20:11:56.549"/>
</suite>
<suite id="s1-s4" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s4-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 20:14:13.387" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 20:14:13.401" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 20:14:13.402" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230717 20:14:13.381" endtime="20230717 20:14:13.402"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 20:14:13.406" level="INFO">scm</msg>
<status status="PASS" starttime="20230717 20:14:13.403" endtime="20230717 20:14:13.407"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 20:14:13.410" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 20:14:13.408" endtime="20230717 20:14:13.410"/>
</kw>
<status status="PASS" starttime="20230717 20:14:13.380" endtime="20230717 20:14:13.411"/>
</kw>
<msg timestamp="20230717 20:14:13.411" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 20:14:13.379" endtime="20230717 20:14:13.413"/>
</kw>
<msg timestamp="20230717 20:14:13.413" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230717 20:14:13.378" endtime="20230717 20:14:13.413"/>
</kw>
<msg timestamp="20230717 20:14:13.413" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230717 20:14:13.376" endtime="20230717 20:14:13.413"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230717 20:14:13.417" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230717 20:14:13.414" endtime="20230717 20:14:13.417"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 20:14:13.431" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 20:14:13.512" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 20:14:13.512" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 20:14:13.426" endtime="20230717 20:14:13.512"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 20:14:13.514" level="INFO"/>
<status status="PASS" starttime="20230717 20:14:13.513" endtime="20230717 20:14:13.514"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 20:14:13.519" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 20:14:13.515" endtime="20230717 20:14:13.522"/>
</kw>
<status status="PASS" starttime="20230717 20:14:13.423" endtime="20230717 20:14:13.522"/>
</kw>
<msg timestamp="20230717 20:14:13.522" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 20:14:13.422" endtime="20230717 20:14:13.522"/>
</kw>
<status status="PASS" starttime="20230717 20:14:13.420" endtime="20230717 20:14:13.522"/>
</kw>
<status status="PASS" starttime="20230717 20:14:13.418" endtime="20230717 20:14:13.523"/>
</kw>
<status status="PASS" starttime="20230717 20:14:13.367" endtime="20230717 20:14:13.523"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230717 20:14:13.365" endtime="20230717 20:14:13.523"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20230717 20:14:13.186" endtime="20230717 20:14:13.526"/>
</suite>
<suite id="s1-s5" name="Scm-Decommission" source="/opt/hadoop/smoketest/scmha/scm-decommission.robot">
<test id="s1-s5-t1" name="Transfer Leader to non-primordial node Follower" line="28">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm roles --service-id=scmservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 20:14:37.927" level="INFO">Running command 'ozone admin scm roles --service-id=scmservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 20:14:54.136" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 20:14:54.136" level="INFO">${output} = scm1.org:9894:LEADER:da3b10bc-ec4c-480f-b5d0-63f9c7e74e53:172.25.0.116
scm3.org:9894:FOLLOWER:0cb57506-2706-4c25-9881-ed7ad0f47ea8:172.25.0.118
scm2.org:9894:FOLLOWER:58d8a3f7-6c81-4819-84ff-6aff5b0ce...</msg>
<status status="PASS" starttime="20230717 20:14:37.912" endtime="20230717 20:14:54.136"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 20:14:54.139" level="INFO">scm1.org:9894:LEADER:da3b10bc-ec4c-480f-b5d0-63f9c7e74e53:172.25.0.116
scm3.org:9894:FOLLOWER:0cb57506-2706-4c25-9881-ed7ad0f47ea8:172.25.0.118
scm2.org:9894:FOLLOWER:58d8a3f7-6c81-4819-84ff-6aff5b0ce812:172.25.0.117</msg>
<status status="PASS" starttime="20230717 20:14:54.137" endtime="20230717 20:14:54.139"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 20:14:54.140" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 20:14:54.139" endtime="20230717 20:14:54.140"/>
</kw>
<status status="PASS" starttime="20230717 20:14:37.909" endtime="20230717 20:14:54.140"/>
</kw>
<msg timestamp="20230717 20:14:54.140" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 20:14:37.906" endtime="20230717 20:14:54.141"/>
</kw>
<msg timestamp="20230717 20:14:54.142" level="INFO">${result} = scm1.org:9894:LEADER:da3b10bc-ec4c-480f-b5d0-63f9c7e74e53:172.25.0.116
scm3.org:9894:FOLLOWER:0cb57506-2706-4c25-9881-ed7ad0f47ea8:172.25.0.118
scm2.org:9894:FOLLOWER:58d8a3f7-6c81-4819-84ff-6aff5b0ce...</msg>
<status status="PASS" starttime="20230717 20:14:37.902" endtime="20230717 20:14:54.142"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 20:14:54.142" level="INFO">scm1.org:9894:LEADER:da3b10bc-ec4c-480f-b5d0-63f9c7e74e53:172.25.0.116
scm3.org:9894:FOLLOWER:0cb57506-2706-4c25-9881-ed7ad0f47ea8:172.25.0.118
scm2.org:9894:FOLLOWER:58d8a3f7-6c81-4819-84ff-6aff5b0ce812:172.25.0.117</msg>
<status status="PASS" starttime="20230717 20:14:54.142" endtime="20230717 20:14:54.143"/>
</kw>
<kw name="Get Lines Matching Pattern" library="String">
<var>${follower_nodes}</var>
<arg>${result}</arg>
<arg>scm[23].org:9894:FOLLOWER*</arg>
<doc>Returns lines of the given ``string`` that match the ``pattern``.</doc>
<msg timestamp="20230717 20:14:54.145" level="INFO">2 out of 3 lines matched</msg>
<msg timestamp="20230717 20:14:54.145" level="INFO">${follower_nodes} = scm3.org:9894:FOLLOWER:0cb57506-2706-4c25-9881-ed7ad0f47ea8:172.25.0.118
scm2.org:9894:FOLLOWER:58d8a3f7-6c81-4819-84ff-6aff5b0ce812:172.25.0.117</msg>
<status status="PASS" starttime="20230717 20:14:54.143" endtime="20230717 20:14:54.145"/>
</kw>
<kw name="Get Line" library="String">
<var>${follower_node}</var>
<arg>${follower_nodes}</arg>
<arg>0</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20230717 20:14:54.146" level="INFO">${follower_node} = scm3.org:9894:FOLLOWER:0cb57506-2706-4c25-9881-ed7ad0f47ea8:172.25.0.118</msg>
<status status="PASS" starttime="20230717 20:14:54.145" endtime="20230717 20:14:54.147"/>
</kw>
<kw name="Split String" library="String">
<var>${follower_split}</var>
<arg>${follower_node}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230717 20:14:54.148" level="INFO">${follower_split} = ['scm3.org', '9894', 'FOLLOWER', '0cb57506-2706-4c25-9881-ed7ad0f47ea8', '172.25.0.118']</msg>
<status status="PASS" starttime="20230717 20:14:54.148" endtime="20230717 20:14:54.148"/>
</kw>
<kw name="Strip String" library="String">
<var>${follower_scmId}</var>
<arg>${follower_split[3]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230717 20:14:54.151" level="INFO">${follower_scmId} = 0cb57506-2706-4c25-9881-ed7ad0f47ea8</msg>
<status status="PASS" starttime="20230717 20:14:54.148" endtime="20230717 20:14:54.151"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm transfer --service-id=scmservice -n ${follower_scmId}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 20:14:54.160" level="INFO">Running command 'ozone admin scm transfer --service-id=scmservice -n 0cb57506-2706-4c25-9881-ed7ad0f47ea8 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 20:15:14.365" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 20:15:14.366" level="INFO">${output} = Transfer leadership successfully to 0cb57506-2706-4c25-9881-ed7ad0f47ea8.</msg>
<status status="PASS" starttime="20230717 20:14:54.155" endtime="20230717 20:15:14.366"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 20:15:14.371" level="INFO">Transfer leadership successfully to 0cb57506-2706-4c25-9881-ed7ad0f47ea8.</msg>
<status status="PASS" starttime="20230717 20:15:14.368" endtime="20230717 20:15:14.371"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 20:15:14.373" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 20:15:14.372" endtime="20230717 20:15:14.373"/>
</kw>
<status status="PASS" starttime="20230717 20:14:54.154" endtime="20230717 20:15:14.373"/>
</kw>
<msg timestamp="20230717 20:15:14.373" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 20:14:54.152" endtime="20230717 20:15:14.375"/>
</kw>
<msg timestamp="20230717 20:15:14.376" level="INFO">${result} = Transfer leadership successfully to 0cb57506-2706-4c25-9881-ed7ad0f47ea8.</msg>
<status status="PASS" starttime="20230717 20:14:54.151" endtime="20230717 20:15:14.376"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 20:15:14.377" level="INFO">Transfer leadership successfully to 0cb57506-2706-4c25-9881-ed7ad0f47ea8.</msg>
<status status="PASS" starttime="20230717 20:15:14.376" endtime="20230717 20:15:14.377"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Transfer leadership successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 20:15:14.378" endtime="20230717 20:15:14.378"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 20:14:37.896" endtime="20230717 20:15:14.379"/>
</test>
<test id="s1-s5-t2" name="Decommission SCM Primordial Node" line="40">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm roles --service-id=scmservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 20:15:14.401" level="INFO">Running command 'ozone admin scm roles --service-id=scmservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 20:15:34.564" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 20:15:34.565" level="INFO">${output} = scm1.org:9894:FOLLOWER:da3b10bc-ec4c-480f-b5d0-63f9c7e74e53:172.25.0.116
scm3.org:9894:LEADER:0cb57506-2706-4c25-9881-ed7ad0f47ea8:172.25.0.118
scm2.org:9894:FOLLOWER:58d8a3f7-6c81-4819-84ff-6aff5b0ce...</msg>
<status status="PASS" starttime="20230717 20:15:14.396" endtime="20230717 20:15:34.565"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 20:15:34.567" level="INFO">scm1.org:9894:FOLLOWER:da3b10bc-ec4c-480f-b5d0-63f9c7e74e53:172.25.0.116
scm3.org:9894:LEADER:0cb57506-2706-4c25-9881-ed7ad0f47ea8:172.25.0.118
scm2.org:9894:FOLLOWER:58d8a3f7-6c81-4819-84ff-6aff5b0ce812:172.25.0.117</msg>
<status status="PASS" starttime="20230717 20:15:34.565" endtime="20230717 20:15:34.568"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 20:15:34.570" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 20:15:34.569" endtime="20230717 20:15:34.571"/>
</kw>
<status status="PASS" starttime="20230717 20:15:14.395" endtime="20230717 20:15:34.573"/>
</kw>
<msg timestamp="20230717 20:15:34.573" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 20:15:14.392" endtime="20230717 20:15:34.573"/>
</kw>
<msg timestamp="20230717 20:15:34.573" level="INFO">${result} = scm1.org:9894:FOLLOWER:da3b10bc-ec4c-480f-b5d0-63f9c7e74e53:172.25.0.116
scm3.org:9894:LEADER:0cb57506-2706-4c25-9881-ed7ad0f47ea8:172.25.0.118
scm2.org:9894:FOLLOWER:58d8a3f7-6c81-4819-84ff-6aff5b0ce...</msg>
<status status="PASS" starttime="20230717 20:15:14.390" endtime="20230717 20:15:34.573"/>
</kw>
<kw name="Get Lines Matching Pattern" library="String">
<var>${nodes_in_quorum}</var>
<arg>${result}</arg>
<arg>scm[1234].org:9894:*</arg>
<doc>Returns lines of the given ``string`` that match the ``pattern``.</doc>
<msg timestamp="20230717 20:15:34.575" level="INFO">3 out of 3 lines matched</msg>
<msg timestamp="20230717 20:15:34.575" level="INFO">${nodes_in_quorum} = scm1.org:9894:FOLLOWER:da3b10bc-ec4c-480f-b5d0-63f9c7e74e53:172.25.0.116
scm3.org:9894:LEADER:0cb57506-2706-4c25-9881-ed7ad0f47ea8:172.25.0.118
scm2.org:9894:FOLLOWER:58d8a3f7-6c81-4819-84ff-6aff5b0ce...</msg>
<status status="PASS" starttime="20230717 20:15:34.573" endtime="20230717 20:15:34.576"/>
</kw>
<kw name="Get Line Count" library="String">
<var>${node_count}</var>
<arg>${nodes_in_quorum}</arg>
<doc>Returns and logs the number of lines in the given string.</doc>
<msg timestamp="20230717 20:15:34.577" level="INFO">3 lines</msg>
<msg timestamp="20230717 20:15:34.577" level="INFO">${node_count} = 3</msg>
<status status="PASS" starttime="20230717 20:15:34.576" endtime="20230717 20:15:34.577"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${node_count_pre}</var>
<arg>${node_count}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230717 20:15:34.579" level="INFO">${node_count_pre} = 3</msg>
<status status="PASS" starttime="20230717 20:15:34.578" endtime="20230717 20:15:34.579"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${n}</var>
<arg>${node_count}-1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230717 20:15:34.581" level="INFO">${n} = 2</msg>
<status status="PASS" starttime="20230717 20:15:34.579" endtime="20230717 20:15:34.581"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${node_count_expect}</var>
<arg>${n}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230717 20:15:34.582" level="INFO">${node_count_expect} = 2</msg>
<status status="PASS" starttime="20230717 20:15:34.581" endtime="20230717 20:15:34.582"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>SCM Instance Count before SCM Decommission: ${node_count_pre}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 20:15:34.584" level="INFO">SCM Instance Count before SCM Decommission: 3</msg>
<status status="PASS" starttime="20230717 20:15:34.584" endtime="20230717 20:15:34.584"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${primordial_node}</var>
<arg>${result}</arg>
<arg>scm1</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20230717 20:15:34.585" level="INFO">1 out of 3 lines matched</msg>
<msg timestamp="20230717 20:15:34.585" level="INFO">${primordial_node} = scm1.org:9894:FOLLOWER:da3b10bc-ec4c-480f-b5d0-63f9c7e74e53:172.25.0.116</msg>
<status status="PASS" starttime="20230717 20:15:34.584" endtime="20230717 20:15:34.585"/>
</kw>
<kw name="Split String" library="String">
<var>${primordial_split}</var>
<arg>${primordial_node}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230717 20:15:34.588" level="INFO">${primordial_split} = ['scm1.org', '9894', 'FOLLOWER', 'da3b10bc-ec4c-480f-b5d0-63f9c7e74e53', '172.25.0.116']</msg>
<status status="PASS" starttime="20230717 20:15:34.587" endtime="20230717 20:15:34.588"/>
</kw>
<kw name="Strip String" library="String">
<var>${primordial_scmId}</var>
<arg>${primordial_split[3]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230717 20:15:34.594" level="INFO">${primordial_scmId} = da3b10bc-ec4c-480f-b5d0-63f9c7e74e53</msg>
<status status="PASS" starttime="20230717 20:15:34.588" endtime="20230717 20:15:34.594"/>
</kw>
<kw name="Execute" library="os">
<var>${decommission_res}</var>
<arg>ozone admin scm decommission --nodeid=${primordial_scmId}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 20:15:34.607" level="INFO">Running command 'ozone admin scm decommission --nodeid=da3b10bc-ec4c-480f-b5d0-63f9c7e74e53 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 20:15:56.693" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 20:15:56.693" level="INFO">${output} = Decommissioned Scm da3b10bc-ec4c-480f-b5d0-63f9c7e74e53</msg>
<status status="PASS" starttime="20230717 20:15:34.599" endtime="20230717 20:15:56.694"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 20:15:56.696" level="INFO">Decommissioned Scm da3b10bc-ec4c-480f-b5d0-63f9c7e74e53</msg>
<status status="PASS" starttime="20230717 20:15:56.695" endtime="20230717 20:15:56.696"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 20:15:56.697" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 20:15:56.697" endtime="20230717 20:15:56.698"/>
</kw>
<status status="PASS" starttime="20230717 20:15:34.598" endtime="20230717 20:15:56.698"/>
</kw>
<msg timestamp="20230717 20:15:56.698" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 20:15:34.596" endtime="20230717 20:15:56.698"/>
</kw>
<msg timestamp="20230717 20:15:56.698" level="INFO">${decommission_res} = Decommissioned Scm da3b10bc-ec4c-480f-b5d0-63f9c7e74e53</msg>
<status status="PASS" starttime="20230717 20:15:34.594" endtime="20230717 20:15:56.698"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${decommission_res}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 20:15:56.700" level="INFO">Decommissioned Scm da3b10bc-ec4c-480f-b5d0-63f9c7e74e53</msg>
<status status="PASS" starttime="20230717 20:15:56.699" endtime="20230717 20:15:56.700"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${decommission_res}</arg>
<arg>Decommissioned</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 20:15:56.700" endtime="20230717 20:15:56.701"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm roles --service-id=scmservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 20:15:56.709" level="INFO">Running command 'ozone admin scm roles --service-id=scmservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 20:17:08.152" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 20:17:08.152" level="INFO">${output} = Retrying connect to server: scm1.org/172.25.0.116:9860. Already tried 0 time(s); maxRetries=45
Retrying connect to server: scm1.org/172.25.0.116:9860. Already tried 1 time(s); maxRetries=45
scm3.org:9...</msg>
<status status="PASS" starttime="20230717 20:15:56.705" endtime="20230717 20:17:08.154"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 20:17:08.157" level="INFO">Retrying connect to server: scm1.org/172.25.0.116:9860. Already tried 0 time(s); maxRetries=45
Retrying connect to server: scm1.org/172.25.0.116:9860. Already tried 1 time(s); maxRetries=45
scm3.org:9894:LEADER:0cb57506-2706-4c25-9881-ed7ad0f47ea8:172.25.0.118
scm2.org:9894:FOLLOWER:58d8a3f7-6c81-4819-84ff-6aff5b0ce812:172.25.0.117</msg>
<status status="PASS" starttime="20230717 20:17:08.154" endtime="20230717 20:17:08.157"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 20:17:08.159" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 20:17:08.157" endtime="20230717 20:17:08.159"/>
</kw>
<status status="PASS" starttime="20230717 20:15:56.703" endtime="20230717 20:17:08.160"/>
</kw>
<msg timestamp="20230717 20:17:08.161" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 20:15:56.702" endtime="20230717 20:17:08.161"/>
</kw>
<msg timestamp="20230717 20:17:08.161" level="INFO">${result} = Retrying connect to server: scm1.org/172.25.0.116:9860. Already tried 0 time(s); maxRetries=45
Retrying connect to server: scm1.org/172.25.0.116:9860. Already tried 1 time(s); maxRetries=45
scm3.org:9...</msg>
<status status="PASS" starttime="20230717 20:15:56.701" endtime="20230717 20:17:08.162"/>
</kw>
<kw name="Get Lines Matching Pattern" library="String">
<var>${nodes_in_quorum}</var>
<arg>${result}</arg>
<arg>scm[1234].org:9894:*</arg>
<doc>Returns lines of the given ``string`` that match the ``pattern``.</doc>
<msg timestamp="20230717 20:17:08.162" level="INFO">2 out of 4 lines matched</msg>
<msg timestamp="20230717 20:17:08.163" level="INFO">${nodes_in_quorum} = scm3.org:9894:LEADER:0cb57506-2706-4c25-9881-ed7ad0f47ea8:172.25.0.118
scm2.org:9894:FOLLOWER:58d8a3f7-6c81-4819-84ff-6aff5b0ce812:172.25.0.117</msg>
<status status="PASS" starttime="20230717 20:17:08.162" endtime="20230717 20:17:08.163"/>
</kw>
<kw name="Get Line Count" library="String">
<var>${node_count}</var>
<arg>${nodes_in_quorum}</arg>
<doc>Returns and logs the number of lines in the given string.</doc>
<msg timestamp="20230717 20:17:08.165" level="INFO">2 lines</msg>
<msg timestamp="20230717 20:17:08.165" level="INFO">${node_count} = 2</msg>
<status status="PASS" starttime="20230717 20:17:08.163" endtime="20230717 20:17:08.165"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${node_count_post}</var>
<arg>${node_count}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230717 20:17:08.168" level="INFO">${node_count_post} = 2</msg>
<status status="PASS" starttime="20230717 20:17:08.167" endtime="20230717 20:17:08.168"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>SCM Instance Count after SCM Decommission: ${node_count_post}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 20:17:08.171" level="INFO">SCM Instance Count after SCM Decommission: 2</msg>
<status status="PASS" starttime="20230717 20:17:08.168" endtime="20230717 20:17:08.172"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${node_count_expect}</arg>
<arg>${node_count_post}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230717 20:17:08.172" endtime="20230717 20:17:08.174"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 20:15:14.387" endtime="20230717 20:17:08.174"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230717 20:14:37.754" endtime="20230717 20:17:08.180"/>
</suite>
<suite id="s1-s6" name="ozonefs-o3fs-link" source="/opt/hadoop/smoketest/ozonefs/ozonefs.robot">
<kw name="Setup for FS test" library="setup" type="SETUP">
<kw name="Assign suite vars for FS test" library="setup">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230717 18:48:19.492" level="INFO">${random} = 82532</msg>
<status status="PASS" starttime="20230717 18:48:19.491" endtime="20230717 18:48:19.492"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<arg>${random}-${BUCKET_TYPE}1-${SCHEME}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230717 18:48:19.493" level="INFO">${BUCKET} = 82532-link1-o3fs</msg>
<status status="PASS" starttime="20230717 18:48:19.492" endtime="20230717 18:48:19.493"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET2}</arg>
<arg>${random}-${BUCKET_TYPE}2-${SCHEME}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230717 18:48:19.494" level="INFO">${BUCKET2} = 82532-link2-o3fs</msg>
<status status="PASS" starttime="20230717 18:48:19.493" endtime="20230717 18:48:19.494"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET_IN_VOL2}</arg>
<arg>${random}-${BUCKET_TYPE}3-${SCHEME}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230717 18:48:19.495" level="INFO">${BUCKET_IN_VOL2} = 82532-link3-o3fs</msg>
<status status="PASS" starttime="20230717 18:48:19.494" endtime="20230717 18:48:19.495"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${BASE_URL}</var>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
<arg>/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230717 18:48:19.499" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20230717 18:48:19.499" endtime="20230717 18:48:19.499"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230717 18:48:19.500" level="INFO">${result} = .omservice</msg>
<status status="PASS" starttime="20230717 18:48:19.500" endtime="20230717 18:48:19.500"/>
</kw>
<status status="PASS" starttime="20230717 18:48:19.498" endtime="20230717 18:48:19.500"/>
</kw>
<msg timestamp="20230717 18:48:19.501" level="INFO">${om_with_leading} = .omservice</msg>
<status status="PASS" starttime="20230717 18:48:19.497" endtime="20230717 18:48:19.501"/>
</kw>
<status status="PASS" starttime="20230717 18:48:19.496" endtime="20230717 18:48:19.501"/>
</kw>
<msg timestamp="20230717 18:48:19.501" level="INFO">${url} = o3fs://82532-link1-o3fs.fstest1.omservice//</msg>
<status status="PASS" starttime="20230717 18:48:19.495" endtime="20230717 18:48:19.501"/>
</kw>
<msg timestamp="20230717 18:48:19.501" level="INFO">${BASE_URL} = o3fs://82532-link1-o3fs.fstest1.omservice//</msg>
<status status="PASS" starttime="20230717 18:48:19.495" endtime="20230717 18:48:19.501"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BASE_URL}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230717 18:48:19.502" level="INFO">${BASE_URL} = o3fs://82532-link1-o3fs.fstest1.omservice//</msg>
<status status="PASS" starttime="20230717 18:48:19.501" endtime="20230717 18:48:19.502"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${DEEP_URL}</arg>
<arg>${BASE_URL}${DEEP_DIR}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230717 18:48:19.504" level="INFO">${DEEP_URL} = o3fs://82532-link1-o3fs.fstest1.omservice//test/o3fs/dir</msg>
<status status="PASS" starttime="20230717 18:48:19.502" endtime="20230717 18:48:19.504"/>
</kw>
<status status="PASS" starttime="20230717 18:48:19.491" endtime="20230717 18:48:19.504"/>
</kw>
<kw name="Create volumes for FS test" library="setup">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone sh volume create ${VOLUME} --space-quota 100TB</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:48:19.508" level="INFO">Running command 'ozone sh volume create fstest1 --space-quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:48:27.834" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:48:27.834" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 18:48:19.505" endtime="20230717 18:48:27.834"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:48:27.845" level="INFO"/>
<status status="PASS" starttime="20230717 18:48:27.842" endtime="20230717 18:48:27.845"/>
</kw>
<status status="PASS" starttime="20230717 18:48:19.505" endtime="20230717 18:48:27.845"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone sh volume create ${VOL2} --space-quota 100TB</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:48:27.876" level="INFO">Running command 'ozone sh volume create fstest2 --space-quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:48:36.015" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:48:36.015" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 18:48:27.858" endtime="20230717 18:48:36.015"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:48:36.016" level="INFO"/>
<status status="PASS" starttime="20230717 18:48:36.016" endtime="20230717 18:48:36.017"/>
</kw>
<status status="PASS" starttime="20230717 18:48:27.855" endtime="20230717 18:48:36.017"/>
</kw>
<status status="PASS" starttime="20230717 18:48:19.504" endtime="20230717 18:48:36.017"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create ${BUCKET_TYPE}s for FS test</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create links for FS test" library="setup">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone sh volume create ${VOLUME}-src --space-quota 100TB</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:48:36.027" level="INFO">Running command 'ozone sh volume create fstest1-src --space-quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:48:43.636" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:48:43.636" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 18:48:36.023" endtime="20230717 18:48:43.636"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:48:43.638" level="INFO"/>
<status status="PASS" starttime="20230717 18:48:43.637" endtime="20230717 18:48:43.638"/>
</kw>
<status status="PASS" starttime="20230717 18:48:36.023" endtime="20230717 18:48:43.639"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arg>ozone sh volume create ${VOL2}-src --space-quota 100TB</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:48:43.644" level="INFO">Running command 'ozone sh volume create fstest2-src --space-quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:48:51.089" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:48:51.090" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 18:48:43.640" endtime="20230717 18:48:51.090"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:48:51.091" level="INFO"/>
<status status="PASS" starttime="20230717 18:48:51.090" endtime="20230717 18:48:51.091"/>
</kw>
<status status="PASS" starttime="20230717 18:48:43.639" endtime="20230717 18:48:51.092"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${VOLUME}-src/${BUCKET}-src --space-quota 1TB --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:48:51.097" level="INFO">Running command 'ozone sh bucket create fstest1-src/82532-link1-o3fs-src --space-quota 1TB --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:48:59.261" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:48:59.261" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 18:48:51.094" endtime="20230717 18:48:59.261"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:48:59.263" level="INFO"/>
<status status="PASS" starttime="20230717 18:48:59.262" endtime="20230717 18:48:59.263"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:48:59.264" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:48:59.263" endtime="20230717 18:48:59.264"/>
</kw>
<status status="PASS" starttime="20230717 18:48:51.093" endtime="20230717 18:48:59.264"/>
</kw>
<msg timestamp="20230717 18:48:59.264" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:48:51.093" endtime="20230717 18:48:59.265"/>
</kw>
<status status="PASS" starttime="20230717 18:48:51.092" endtime="20230717 18:48:59.265"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${VOLUME}-src/${BUCKET2}-src --space-quota 1TB --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:48:59.271" level="INFO">Running command 'ozone sh bucket create fstest1-src/82532-link2-o3fs-src --space-quota 1TB --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:49:06.522" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:49:06.522" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 18:48:59.267" endtime="20230717 18:49:06.522"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:49:06.523" level="INFO"/>
<status status="PASS" starttime="20230717 18:49:06.523" endtime="20230717 18:49:06.523"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:49:06.524" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:49:06.524" endtime="20230717 18:49:06.524"/>
</kw>
<status status="PASS" starttime="20230717 18:48:59.266" endtime="20230717 18:49:06.525"/>
</kw>
<msg timestamp="20230717 18:49:06.525" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:48:59.266" endtime="20230717 18:49:06.525"/>
</kw>
<status status="PASS" starttime="20230717 18:48:59.265" endtime="20230717 18:49:06.525"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${VOL2}-src/${BUCKET_IN_VOL2}-src --space-quota 1TB --layout FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:49:06.531" level="INFO">Running command 'ozone sh bucket create fstest2-src/82532-link3-o3fs-src --space-quota 1TB --layout FILE_SYSTEM_OPTIMIZED 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:49:14.656" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:49:14.656" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 18:49:06.528" endtime="20230717 18:49:14.656"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:49:14.658" level="INFO"/>
<status status="PASS" starttime="20230717 18:49:14.657" endtime="20230717 18:49:14.658"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:49:14.658" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:49:14.658" endtime="20230717 18:49:14.658"/>
</kw>
<status status="PASS" starttime="20230717 18:49:06.527" endtime="20230717 18:49:14.659"/>
</kw>
<msg timestamp="20230717 18:49:14.659" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:49:06.526" endtime="20230717 18:49:14.659"/>
</kw>
<status status="PASS" starttime="20230717 18:49:06.525" endtime="20230717 18:49:14.659"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${VOLUME}-src/${BUCKET}-src ${VOLUME}/${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:49:14.665" level="INFO">Running command 'ozone sh bucket link fstest1-src/82532-link1-o3fs-src fstest1/82532-link1-o3fs 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:49:22.229" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:49:22.229" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 18:49:14.662" endtime="20230717 18:49:22.229"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:49:22.231" level="INFO"/>
<status status="PASS" starttime="20230717 18:49:22.230" endtime="20230717 18:49:22.231"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:49:22.231" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:49:22.231" endtime="20230717 18:49:22.231"/>
</kw>
<status status="PASS" starttime="20230717 18:49:14.661" endtime="20230717 18:49:22.232"/>
</kw>
<msg timestamp="20230717 18:49:22.232" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:49:14.660" endtime="20230717 18:49:22.232"/>
</kw>
<status status="PASS" starttime="20230717 18:49:14.659" endtime="20230717 18:49:22.233"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${VOLUME}-src/${BUCKET2}-src ${VOLUME}/${BUCKET2}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:49:22.240" level="INFO">Running command 'ozone sh bucket link fstest1-src/82532-link2-o3fs-src fstest1/82532-link2-o3fs 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:49:30.414" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:49:30.414" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 18:49:22.235" endtime="20230717 18:49:30.414"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:49:30.416" level="INFO"/>
<status status="PASS" starttime="20230717 18:49:30.415" endtime="20230717 18:49:30.416"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:49:30.417" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:49:30.416" endtime="20230717 18:49:30.417"/>
</kw>
<status status="PASS" starttime="20230717 18:49:22.234" endtime="20230717 18:49:30.417"/>
</kw>
<msg timestamp="20230717 18:49:30.417" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:49:22.234" endtime="20230717 18:49:30.418"/>
</kw>
<status status="PASS" starttime="20230717 18:49:22.233" endtime="20230717 18:49:30.418"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${VOL2}-src/${BUCKET_IN_VOL2}-src ${VOL2}/${BUCKET_IN_VOL2}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:49:30.425" level="INFO">Running command 'ozone sh bucket link fstest2-src/82532-link3-o3fs-src fstest2/82532-link3-o3fs 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:49:38.402" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:49:38.402" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 18:49:30.420" endtime="20230717 18:49:38.402"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:49:38.403" level="INFO"/>
<status status="PASS" starttime="20230717 18:49:38.403" endtime="20230717 18:49:38.404"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:49:38.404" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:49:38.404" endtime="20230717 18:49:38.404"/>
</kw>
<status status="PASS" starttime="20230717 18:49:30.420" endtime="20230717 18:49:38.405"/>
</kw>
<msg timestamp="20230717 18:49:38.405" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:49:30.419" endtime="20230717 18:49:38.405"/>
</kw>
<status status="PASS" starttime="20230717 18:49:30.418" endtime="20230717 18:49:38.405"/>
</kw>
<status status="PASS" starttime="20230717 18:48:36.022" endtime="20230717 18:49:38.405"/>
</kw>
<status status="PASS" starttime="20230717 18:48:36.018" endtime="20230717 18:49:38.405"/>
</kw>
<kw name="Sanity check for FS test" library="setup">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:49:38.412" level="INFO">Running command 'ozone sh volume list 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:49:46.829" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:49:46.830" level="INFO">${output} = [ {
  "metadata" : { },
  "name" : "fstest1",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 2,
  "creationTime" : "...</msg>
<status status="PASS" starttime="20230717 18:49:38.408" endtime="20230717 18:49:46.830"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:49:46.831" level="INFO">[ {
  "metadata" : { },
  "name" : "fstest1",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 2,
  "creationTime" : "2023-07-17T18:48:27.457Z",
  "modificationTime" : "2023-07-17T18:48:27.457Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "fstest1-src",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 2,
  "creationTime" : "2023-07-17T18:48:43.427Z",
  "modificationTime" : "2023-07-17T18:48:43.427Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "fstest2",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-07-17T18:48:35.890Z",
  "modificationTime" : "2023-07-17T18:48:35.890Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "fstest2-src",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-07-17T18:48:50.952Z",
  "modificationTime" : "2023-07-17T18:48:50.952Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "s3v",
  "admin" : "om",
  "owner" : "om",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 0,
  "creationTime" : "2023-07-17T18:43:34.569Z",
  "modificationTime" : "2023-07-17T18:43:34.569Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "om",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "om",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "vol1",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 2,
  "creationTime" : "2023-07-17T18:45:16.457Z",
  "modificationTime" : "2023-07-17T18:45:16.457Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "voltest",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-07-17T18:45:54.004Z",
  "modificationTime" : "2023-07-17T18:45:54.004Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "testuser",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
} ]</msg>
<status status="PASS" starttime="20230717 18:49:46.830" endtime="20230717 18:49:46.831"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:49:46.832" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:49:46.831" endtime="20230717 18:49:46.832"/>
</kw>
<status status="PASS" starttime="20230717 18:49:38.407" endtime="20230717 18:49:46.832"/>
</kw>
<msg timestamp="20230717 18:49:46.832" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:49:38.407" endtime="20230717 18:49:46.832"/>
</kw>
<msg timestamp="20230717 18:49:46.833" level="INFO">${result} = [ {
  "metadata" : { },
  "name" : "fstest1",
  "admin" : "testuser",
  "owner" : "testuser",
  "quotaInBytes" : 109951162777600,
  "quotaInNamespace" : -1,
  "usedNamespace" : 2,
  "creationTime" : "...</msg>
<status status="PASS" starttime="20230717 18:49:38.406" endtime="20230717 18:49:46.833"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${VOLUME}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 18:49:46.833" endtime="20230717 18:49:46.834"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${VOL2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 18:49:46.834" endtime="20230717 18:49:46.834"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>"admin" : "(hadoop|testuser)"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230717 18:49:46.834" endtime="20230717 18:49:46.835"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${VOLUME}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:49:46.842" level="INFO">Running command 'ozone sh bucket list fstest1 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:49:55.007" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:49:55.007" level="INFO">${output} = [ {
  "volumeName" : "fstest1",
  "bucketName" : "82532-link1-o3fs",
  "sourceVolume" : "fstest1-src",
  "sourceBucket" : "82532-link1-o3fs-src",
  "creationTime" : "2023-07-17T18:49:21.934Z",
  "modi...</msg>
<status status="PASS" starttime="20230717 18:49:46.838" endtime="20230717 18:49:55.007"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:49:55.009" level="INFO">[ {
  "volumeName" : "fstest1",
  "bucketName" : "82532-link1-o3fs",
  "sourceVolume" : "fstest1-src",
  "sourceBucket" : "82532-link1-o3fs-src",
  "creationTime" : "2023-07-17T18:49:21.934Z",
  "modificationTime" : "2023-07-17T18:49:21.934Z",
  "owner" : "testuser"
}, {
  "volumeName" : "fstest1",
  "bucketName" : "82532-link2-o3fs",
  "sourceVolume" : "fstest1-src",
  "sourceBucket" : "82532-link2-o3fs-src",
  "creationTime" : "2023-07-17T18:49:30.304Z",
  "modificationTime" : "2023-07-17T18:49:30.304Z",
  "owner" : "testuser"
} ]</msg>
<status status="PASS" starttime="20230717 18:49:55.008" endtime="20230717 18:49:55.009"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:49:55.010" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:49:55.010" endtime="20230717 18:49:55.010"/>
</kw>
<status status="PASS" starttime="20230717 18:49:46.837" endtime="20230717 18:49:55.011"/>
</kw>
<msg timestamp="20230717 18:49:55.011" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:49:46.837" endtime="20230717 18:49:55.011"/>
</kw>
<msg timestamp="20230717 18:49:55.011" level="INFO">${result} = [ {
  "volumeName" : "fstest1",
  "bucketName" : "82532-link1-o3fs",
  "sourceVolume" : "fstest1-src",
  "sourceBucket" : "82532-link1-o3fs-src",
  "creationTime" : "2023-07-17T18:49:21.934Z",
  "modi...</msg>
<status status="PASS" starttime="20230717 18:49:46.836" endtime="20230717 18:49:55.011"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 18:49:55.012" endtime="20230717 18:49:55.012"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 18:49:55.012" endtime="20230717 18:49:55.013"/>
</kw>
<status status="PASS" starttime="20230717 18:49:38.405" endtime="20230717 18:49:55.013"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Completed setup for ${SCHEME} tests with ${BUCKET_TYPE}s in ${VOLUME}/${BUCKET} using FS base URL: ${BASE_URL}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:49:55.013" level="INFO">Completed setup for o3fs tests with links in fstest1/82532-link1-o3fs using FS base URL: o3fs://82532-link1-o3fs.fstest1.omservice//</msg>
<status status="PASS" starttime="20230717 18:49:55.013" endtime="20230717 18:49:55.014"/>
</kw>
<status status="PASS" starttime="20230717 18:48:19.489" endtime="20230717 18:49:55.014"/>
</kw>
<test id="s1-s6-t1" name="List root" line="26">
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230717 18:49:55.022" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20230717 18:49:55.021" endtime="20230717 18:49:55.022"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230717 18:49:55.023" level="INFO">${result} = .omservice</msg>
<status status="PASS" starttime="20230717 18:49:55.022" endtime="20230717 18:49:55.023"/>
</kw>
<status status="PASS" starttime="20230717 18:49:55.021" endtime="20230717 18:49:55.023"/>
</kw>
<msg timestamp="20230717 18:49:55.023" level="INFO">${om_with_leading} = .omservice</msg>
<status status="PASS" starttime="20230717 18:49:55.019" endtime="20230717 18:49:55.023"/>
</kw>
<status status="PASS" starttime="20230717 18:49:55.019" endtime="20230717 18:49:55.023"/>
</kw>
<msg timestamp="20230717 18:49:55.024" level="INFO">${url} = o3fs://82532-link1-o3fs.fstest1.omservice/</msg>
<status status="PASS" starttime="20230717 18:49:55.018" endtime="20230717 18:49:55.024"/>
</kw>
<msg timestamp="20230717 18:49:55.024" level="INFO">${root} = o3fs://82532-link1-o3fs.fstest1.omservice/</msg>
<status status="PASS" starttime="20230717 18:49:55.016" endtime="20230717 18:49:55.024"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -ls ${root}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:49:55.032" level="INFO">Running command 'ozone fs -ls o3fs://82532-link1-o3fs.fstest1.omservice/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:50:01.625" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:50:01.625" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 18:49:55.025" endtime="20230717 18:50:01.625"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:50:01.627" level="INFO"/>
<status status="PASS" starttime="20230717 18:50:01.626" endtime="20230717 18:50:01.627"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:50:01.628" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:50:01.627" endtime="20230717 18:50:01.628"/>
</kw>
<status status="PASS" starttime="20230717 18:49:55.025" endtime="20230717 18:50:01.628"/>
</kw>
<msg timestamp="20230717 18:50:01.628" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:49:55.024" endtime="20230717 18:50:01.628"/>
</kw>
<status status="PASS" starttime="20230717 18:49:55.024" endtime="20230717 18:50:01.629"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 18:49:55.014" endtime="20230717 18:50:01.629"/>
</test>
<test id="s1-s6-t2" name="List non-existent volume" line="30">
<kw name="Format FS URL" library="fs">
<var>${url}</var>
<arg>${SCHEME}</arg>
<arg>no-such-volume</arg>
<arg>${BUCKET}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230717 18:50:01.637" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20230717 18:50:01.636" endtime="20230717 18:50:01.637"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230717 18:50:01.637" level="INFO">${result} = .omservice</msg>
<status status="PASS" starttime="20230717 18:50:01.637" endtime="20230717 18:50:01.637"/>
</kw>
<status status="PASS" starttime="20230717 18:50:01.636" endtime="20230717 18:50:01.638"/>
</kw>
<msg timestamp="20230717 18:50:01.638" level="INFO">${om_with_leading} = .omservice</msg>
<status status="PASS" starttime="20230717 18:50:01.634" endtime="20230717 18:50:01.638"/>
</kw>
<status status="PASS" starttime="20230717 18:50:01.634" endtime="20230717 18:50:01.638"/>
</kw>
<msg timestamp="20230717 18:50:01.638" level="INFO">${url} = o3fs://82532-link1-o3fs.no-such-volume.omservice/</msg>
<status status="PASS" starttime="20230717 18:50:01.633" endtime="20230717 18:50:01.638"/>
</kw>
<msg timestamp="20230717 18:50:01.639" level="INFO">${url} = o3fs://82532-link1-o3fs.no-such-volume.omservice/</msg>
<status status="PASS" starttime="20230717 18:50:01.631" endtime="20230717 18:50:01.639"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${url}</arg>
<arg>1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:50:01.643" level="INFO">Running command 'ozone fs -ls o3fs://82532-link1-o3fs.no-such-volume.omservice/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:50:08.189" level="INFO">${rc} = 1</msg>
<msg timestamp="20230717 18:50:08.189" level="INFO">${output} = ls: Volume no-such-volume is not found</msg>
<status status="PASS" starttime="20230717 18:50:01.640" endtime="20230717 18:50:08.189"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:50:08.192" level="INFO">ls: Volume no-such-volume is not found</msg>
<status status="PASS" starttime="20230717 18:50:08.191" endtime="20230717 18:50:08.192"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:50:08.193" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:50:08.192" endtime="20230717 18:50:08.193"/>
</kw>
<msg timestamp="20230717 18:50:08.193" level="INFO">${result} = ls: Volume no-such-volume is not found</msg>
<status status="PASS" starttime="20230717 18:50:01.639" endtime="20230717 18:50:08.193"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>(Check access operation failed)|(Volume no-such-volume is not found)|(No such file or directory)</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230717 18:50:08.194" endtime="20230717 18:50:08.195"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 18:50:01.630" endtime="20230717 18:50:08.195"/>
</test>
<test id="s1-s6-t3" name="List non-existent bucket" line="35">
<kw name="Format FS URL" library="fs">
<var>${url}</var>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>no-such-bucket</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230717 18:50:08.205" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20230717 18:50:08.204" endtime="20230717 18:50:08.205"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230717 18:50:08.205" level="INFO">${result} = .omservice</msg>
<status status="PASS" starttime="20230717 18:50:08.205" endtime="20230717 18:50:08.205"/>
</kw>
<status status="PASS" starttime="20230717 18:50:08.203" endtime="20230717 18:50:08.206"/>
</kw>
<msg timestamp="20230717 18:50:08.206" level="INFO">${om_with_leading} = .omservice</msg>
<status status="PASS" starttime="20230717 18:50:08.202" endtime="20230717 18:50:08.206"/>
</kw>
<status status="PASS" starttime="20230717 18:50:08.201" endtime="20230717 18:50:08.206"/>
</kw>
<msg timestamp="20230717 18:50:08.206" level="INFO">${url} = o3fs://no-such-bucket.fstest1.omservice/</msg>
<status status="PASS" starttime="20230717 18:50:08.200" endtime="20230717 18:50:08.206"/>
</kw>
<msg timestamp="20230717 18:50:08.206" level="INFO">${url} = o3fs://no-such-bucket.fstest1.omservice/</msg>
<status status="PASS" starttime="20230717 18:50:08.198" endtime="20230717 18:50:08.207"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${url}</arg>
<arg>1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:50:08.212" level="INFO">Running command 'ozone fs -ls o3fs://no-such-bucket.fstest1.omservice/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:50:14.221" level="INFO">${rc} = 1</msg>
<msg timestamp="20230717 18:50:14.222" level="INFO">${output} = ls: Bucket not found</msg>
<status status="PASS" starttime="20230717 18:50:08.207" endtime="20230717 18:50:14.222"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:50:14.224" level="INFO">ls: Bucket not found</msg>
<status status="PASS" starttime="20230717 18:50:14.222" endtime="20230717 18:50:14.224"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:50:14.226" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:50:14.225" endtime="20230717 18:50:14.226"/>
</kw>
<msg timestamp="20230717 18:50:14.226" level="INFO">${result} = ls: Bucket not found</msg>
<status status="PASS" starttime="20230717 18:50:08.207" endtime="20230717 18:50:14.226"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>(Check access operation failed)|(Bucket not found)|(No such file or directory)</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230717 18:50:14.226" endtime="20230717 18:50:14.228"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 18:50:08.197" endtime="20230717 18:50:14.228"/>
</test>
<test id="s1-s6-t4" name="Create dir with parents" line="40">
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${DEEP_URL}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:50:14.238" level="INFO">Running command 'ozone fs -mkdir -p o3fs://82532-link1-o3fs.fstest1.omservice//test/o3fs/dir 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:50:20.822" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:50:20.822" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 18:50:14.234" endtime="20230717 18:50:20.822"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:50:20.825" level="INFO"/>
<status status="PASS" starttime="20230717 18:50:20.823" endtime="20230717 18:50:20.825"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:50:20.826" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:50:20.825" endtime="20230717 18:50:20.826"/>
</kw>
<status status="PASS" starttime="20230717 18:50:14.233" endtime="20230717 18:50:20.826"/>
</kw>
<msg timestamp="20230717 18:50:20.827" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:50:14.232" endtime="20230717 18:50:20.827"/>
</kw>
<status status="PASS" starttime="20230717 18:50:14.232" endtime="20230717 18:50:20.827"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:50:20.833" level="INFO">Running command 'ozone sh key list fstest1/82532-link1-o3fs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:50:29.677" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:50:29.677" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/</msg>
<status status="PASS" starttime="20230717 18:50:20.829" endtime="20230717 18:50:29.677"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:50:29.679" level="INFO">test/
test/o3fs/
test/o3fs/dir/</msg>
<status status="PASS" starttime="20230717 18:50:29.678" endtime="20230717 18:50:29.680"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:50:29.681" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:50:29.680" endtime="20230717 18:50:29.681"/>
</kw>
<status status="PASS" starttime="20230717 18:50:20.828" endtime="20230717 18:50:29.681"/>
</kw>
<msg timestamp="20230717 18:50:29.681" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:50:20.828" endtime="20230717 18:50:29.681"/>
</kw>
<msg timestamp="20230717 18:50:29.681" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/</msg>
<status status="PASS" starttime="20230717 18:50:20.827" endtime="20230717 18:50:29.682"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${DEEP_DIR}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 18:50:29.682" endtime="20230717 18:50:29.682"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 18:50:14.231" endtime="20230717 18:50:29.683"/>
</test>
<test id="s1-s6-t5" name="Copy from local" line="45">
<kw name="Execute" library="os">
<arg>ozone fs -copyFromLocal NOTICE.txt ${DEEP_URL}/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:50:29.699" level="INFO">Running command 'ozone fs -copyFromLocal NOTICE.txt o3fs://82532-link1-o3fs.fstest1.omservice//test/o3fs/dir/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:50:40.617" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:50:40.617" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 18:50:29.693" endtime="20230717 18:50:40.618"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:50:40.619" level="INFO"/>
<status status="PASS" starttime="20230717 18:50:40.618" endtime="20230717 18:50:40.619"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:50:40.620" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:50:40.619" endtime="20230717 18:50:40.620"/>
</kw>
<status status="PASS" starttime="20230717 18:50:29.692" endtime="20230717 18:50:40.620"/>
</kw>
<msg timestamp="20230717 18:50:40.620" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:50:29.692" endtime="20230717 18:50:40.620"/>
</kw>
<status status="PASS" starttime="20230717 18:50:29.691" endtime="20230717 18:50:40.620"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:50:40.625" level="INFO">Running command 'ozone sh key list fstest1/82532-link1-o3fs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:50:49.238" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:50:49.238" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt</msg>
<status status="PASS" starttime="20230717 18:50:40.622" endtime="20230717 18:50:49.238"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:50:49.240" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt</msg>
<status status="PASS" starttime="20230717 18:50:49.239" endtime="20230717 18:50:49.240"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:50:49.241" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:50:49.240" endtime="20230717 18:50:49.241"/>
</kw>
<status status="PASS" starttime="20230717 18:50:40.621" endtime="20230717 18:50:49.241"/>
</kw>
<msg timestamp="20230717 18:50:49.241" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:50:40.621" endtime="20230717 18:50:49.241"/>
</kw>
<msg timestamp="20230717 18:50:49.241" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt</msg>
<status status="PASS" starttime="20230717 18:50:40.620" endtime="20230717 18:50:49.241"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 18:50:49.242" endtime="20230717 18:50:49.242"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${VOLUME}/${BUCKET}/${DEEP_DIR}/NOTICE.txt | jq -r '.replicationConfig.replicationFactor'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:50:49.249" level="INFO">Running command 'ozone sh key info fstest1/82532-link1-o3fs/test/o3fs/dir/NOTICE.txt | jq -r '.replicationConfig.replicationFactor' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:50:57.760" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:50:57.760" level="INFO">${output} = THREE</msg>
<status status="PASS" starttime="20230717 18:50:49.245" endtime="20230717 18:50:57.760"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:50:57.761" level="INFO">THREE</msg>
<status status="PASS" starttime="20230717 18:50:57.760" endtime="20230717 18:50:57.761"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:50:57.762" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:50:57.762" endtime="20230717 18:50:57.762"/>
</kw>
<status status="PASS" starttime="20230717 18:50:49.244" endtime="20230717 18:50:57.769"/>
</kw>
<msg timestamp="20230717 18:50:57.769" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:50:49.244" endtime="20230717 18:50:57.769"/>
</kw>
<msg timestamp="20230717 18:50:57.770" level="INFO">${result} = THREE</msg>
<status status="PASS" starttime="20230717 18:50:49.242" endtime="20230717 18:50:57.770"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>THREE</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230717 18:50:57.772" endtime="20230717 18:50:57.774"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 18:50:29.689" endtime="20230717 18:50:57.774"/>
</test>
<test id="s1-s6-t6" name="Put" line="52">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -put NOTICE.txt ${DEEP_URL}/PUTFILE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:50:57.812" level="INFO">Running command 'ozone fs -put NOTICE.txt o3fs://82532-link1-o3fs.fstest1.omservice//test/o3fs/dir/PUTFILE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:51:07.361" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:51:07.361" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 18:50:57.799" endtime="20230717 18:51:07.362"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:51:07.363" level="INFO"/>
<status status="PASS" starttime="20230717 18:51:07.362" endtime="20230717 18:51:07.363"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:51:07.364" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:51:07.364" endtime="20230717 18:51:07.365"/>
</kw>
<status status="PASS" starttime="20230717 18:50:57.793" endtime="20230717 18:51:07.365"/>
</kw>
<msg timestamp="20230717 18:51:07.365" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:50:57.787" endtime="20230717 18:51:07.365"/>
</kw>
<msg timestamp="20230717 18:51:07.366" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230717 18:50:57.785" endtime="20230717 18:51:07.366"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20230717 18:51:07.366" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20230717 18:51:07.366" endtime="20230717 18:51:07.366"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:51:07.374" level="INFO">Running command 'ozone sh key list fstest1/82532-link1-o3fs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:51:15.509" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:51:15.510" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt
test/o3fs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20230717 18:51:07.369" endtime="20230717 18:51:15.510"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:51:15.512" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt
test/o3fs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20230717 18:51:15.511" endtime="20230717 18:51:15.512"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:51:15.513" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:51:15.512" endtime="20230717 18:51:15.513"/>
</kw>
<status status="PASS" starttime="20230717 18:51:07.368" endtime="20230717 18:51:15.513"/>
</kw>
<msg timestamp="20230717 18:51:15.513" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:51:07.367" endtime="20230717 18:51:15.513"/>
</kw>
<msg timestamp="20230717 18:51:15.514" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt
test/o3fs/dir/PUTFILE.txt</msg>
<status status="PASS" starttime="20230717 18:51:07.367" endtime="20230717 18:51:15.514"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PUTFILE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 18:51:15.514" endtime="20230717 18:51:15.514"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 18:50:57.780" endtime="20230717 18:51:15.515"/>
</test>
<test id="s1-s6-t7" name="Check disk usage after create a file which uses RATIS replication type" line="59">
<kw name="Generate Random String" library="String">
<var>${vol}</var>
<arg>8</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230717 18:51:15.517" level="INFO">${vol} = xfegeppv</msg>
<status status="PASS" starttime="20230717 18:51:15.517" endtime="20230717 18:51:15.518"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${bucket}</var>
<arg>8</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230717 18:51:15.518" level="INFO">${bucket} = rwlshwab</msg>
<status status="PASS" starttime="20230717 18:51:15.518" endtime="20230717 18:51:15.518"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${vol}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:51:15.523" level="INFO">Running command 'ozone sh volume create /xfegeppv 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:51:23.124" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:51:23.124" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 18:51:15.520" endtime="20230717 18:51:23.124"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:51:23.126" level="INFO"/>
<status status="PASS" starttime="20230717 18:51:23.124" endtime="20230717 18:51:23.126"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:51:23.133" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:51:23.126" endtime="20230717 18:51:23.133"/>
</kw>
<status status="PASS" starttime="20230717 18:51:15.519" endtime="20230717 18:51:23.133"/>
</kw>
<msg timestamp="20230717 18:51:23.133" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:51:15.519" endtime="20230717 18:51:23.133"/>
</kw>
<status status="PASS" starttime="20230717 18:51:15.518" endtime="20230717 18:51:23.136"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${vol}/${bucket} --type RATIS --replication 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:51:23.154" level="INFO">Running command 'ozone sh bucket create /xfegeppv/rwlshwab --type RATIS --replication 3 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:51:31.559" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:51:31.559" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 18:51:23.150" endtime="20230717 18:51:31.560"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:51:31.561" level="INFO"/>
<status status="PASS" starttime="20230717 18:51:31.560" endtime="20230717 18:51:31.561"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:51:31.562" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:51:31.562" endtime="20230717 18:51:31.562"/>
</kw>
<status status="PASS" starttime="20230717 18:51:23.141" endtime="20230717 18:51:31.563"/>
</kw>
<msg timestamp="20230717 18:51:31.563" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:51:23.140" endtime="20230717 18:51:31.563"/>
</kw>
<status status="PASS" starttime="20230717 18:51:23.138" endtime="20230717 18:51:31.563"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -put NOTICE.txt /${vol}/${bucket}/PUTFILE1.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:51:31.570" level="INFO">Running command 'ozone fs -put NOTICE.txt /xfegeppv/rwlshwab/PUTFILE1.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:51:41.328" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:51:41.328" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 18:51:31.565" endtime="20230717 18:51:41.328"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:51:41.330" level="INFO"/>
<status status="PASS" starttime="20230717 18:51:41.329" endtime="20230717 18:51:41.330"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:51:41.331" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:51:41.330" endtime="20230717 18:51:41.331"/>
</kw>
<status status="PASS" starttime="20230717 18:51:31.564" endtime="20230717 18:51:41.331"/>
</kw>
<msg timestamp="20230717 18:51:41.331" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:51:31.564" endtime="20230717 18:51:41.331"/>
</kw>
<status status="PASS" starttime="20230717 18:51:31.563" endtime="20230717 18:51:41.331"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedFileLength}</var>
<arg>stat -c %s NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:51:41.337" level="INFO">Running command 'stat -c %s NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:51:41.343" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:51:41.343" level="INFO">${output} = 17289</msg>
<status status="PASS" starttime="20230717 18:51:41.333" endtime="20230717 18:51:41.343"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:51:41.344" level="INFO">17289</msg>
<status status="PASS" starttime="20230717 18:51:41.343" endtime="20230717 18:51:41.345"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:51:41.345" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:51:41.345" endtime="20230717 18:51:41.346"/>
</kw>
<status status="PASS" starttime="20230717 18:51:41.333" endtime="20230717 18:51:41.346"/>
</kw>
<msg timestamp="20230717 18:51:41.346" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:51:41.332" endtime="20230717 18:51:41.346"/>
</kw>
<msg timestamp="20230717 18:51:41.346" level="INFO">${expectedFileLength} = 17289</msg>
<status status="PASS" starttime="20230717 18:51:41.332" endtime="20230717 18:51:41.346"/>
</kw>
<kw name="Get Disk Usage of File with RATIS Replication">
<var>${expectedDiskUsage}</var>
<arg>${expectedFileLength}</arg>
<arg>3</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${expectedDiskUsage}</var>
<arg>${fileLength} * ${replicationFactor}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230717 18:51:41.348" level="INFO">${expectedDiskUsage} = 51867</msg>
<status status="PASS" starttime="20230717 18:51:41.347" endtime="20230717 18:51:41.348"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${expectedDiskUsage}</var>
<arg>${expectedDiskUsage}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230717 18:51:41.349" level="INFO">${expectedDiskUsage} = 51867</msg>
<status status="PASS" starttime="20230717 18:51:41.348" endtime="20230717 18:51:41.349"/>
</kw>
<msg timestamp="20230717 18:51:41.349" level="INFO">${expectedDiskUsage} = 51867</msg>
<status status="PASS" starttime="20230717 18:51:41.347" endtime="20230717 18:51:41.349"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -du /${vol}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:51:41.354" level="INFO">Running command 'ozone fs -du /xfegeppv/rwlshwab 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:51:47.747" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:51:47.748" level="INFO">${output} = 17289  51867  /xfegeppv/rwlshwab/PUTFILE1.txt</msg>
<status status="PASS" starttime="20230717 18:51:41.351" endtime="20230717 18:51:47.748"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:51:47.750" level="INFO">17289  51867  /xfegeppv/rwlshwab/PUTFILE1.txt</msg>
<status status="PASS" starttime="20230717 18:51:47.749" endtime="20230717 18:51:47.750"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:51:47.752" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:51:47.751" endtime="20230717 18:51:47.752"/>
</kw>
<status status="PASS" starttime="20230717 18:51:41.350" endtime="20230717 18:51:47.752"/>
</kw>
<msg timestamp="20230717 18:51:47.752" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:51:41.350" endtime="20230717 18:51:47.753"/>
</kw>
<msg timestamp="20230717 18:51:47.753" level="INFO">${result} = 17289  51867  /xfegeppv/rwlshwab/PUTFILE1.txt</msg>
<status status="PASS" starttime="20230717 18:51:41.349" endtime="20230717 18:51:47.753"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PUTFILE1.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 18:51:47.753" endtime="20230717 18:51:47.754"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expectedFileLength}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 18:51:47.754" endtime="20230717 18:51:47.755"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expectedDiskUsage}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 18:51:47.755" endtime="20230717 18:51:47.756"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 18:51:15.516" endtime="20230717 18:51:47.756"/>
</test>
<test id="s1-s6-t8" name="Put with Streaming" line="73">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -D ozone.fs.datastream.enabled=true -put NOTICE.txt ${DEEP_URL}/STREAMING.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:51:47.764" level="INFO">Running command 'ozone fs -D ozone.fs.datastream.enabled=true -put NOTICE.txt o3fs://82532-link1-o3fs.fstest1.omservice//test/o3fs/dir/STREAMING.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:51:57.505" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:51:57.505" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 18:51:47.760" endtime="20230717 18:51:57.505"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:51:57.508" level="INFO"/>
<status status="PASS" starttime="20230717 18:51:57.506" endtime="20230717 18:51:57.508"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:51:57.509" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:51:57.508" endtime="20230717 18:51:57.510"/>
</kw>
<status status="PASS" starttime="20230717 18:51:47.759" endtime="20230717 18:51:57.510"/>
</kw>
<msg timestamp="20230717 18:51:57.510" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:51:47.759" endtime="20230717 18:51:57.511"/>
</kw>
<msg timestamp="20230717 18:51:57.511" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230717 18:51:47.758" endtime="20230717 18:51:57.511"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${result}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20230717 18:51:57.512" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20230717 18:51:57.512" endtime="20230717 18:51:57.512"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:51:57.520" level="INFO">Running command 'ozone sh key list fstest1/82532-link1-o3fs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:52:06.756" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:52:06.756" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt</msg>
<status status="PASS" starttime="20230717 18:51:57.515" endtime="20230717 18:52:06.756"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:52:06.758" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt</msg>
<status status="PASS" starttime="20230717 18:52:06.757" endtime="20230717 18:52:06.758"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:52:06.759" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:52:06.758" endtime="20230717 18:52:06.759"/>
</kw>
<status status="PASS" starttime="20230717 18:51:57.514" endtime="20230717 18:52:06.759"/>
</kw>
<msg timestamp="20230717 18:52:06.760" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:51:57.513" endtime="20230717 18:52:06.760"/>
</kw>
<msg timestamp="20230717 18:52:06.760" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/NOTICE.txt
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt</msg>
<status status="PASS" starttime="20230717 18:51:57.512" endtime="20230717 18:52:06.760"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STREAMING.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 18:52:06.760" endtime="20230717 18:52:06.761"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 18:51:47.757" endtime="20230717 18:52:06.761"/>
</test>
<test id="s1-s6-t9" name="List" line="80">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${DEEP_URL}/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:52:06.769" level="INFO">Running command 'ozone fs -ls o3fs://82532-link1-o3fs.fstest1.omservice//test/o3fs/dir/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:52:13.349" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:52:13.349" level="INFO">${output} = Found 3 items
-rw-rw-rw-   3 testuser testuser      17289 2023-07-17 18:50 o3fs://82532-link1-o3fs.fstest1.omservice/test/o3fs/dir/NOTICE.txt
-rw-rw-rw-   3 testuser testuser      17289 2023-07-17 18:...</msg>
<status status="PASS" starttime="20230717 18:52:06.765" endtime="20230717 18:52:13.349"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:52:13.351" level="INFO">Found 3 items
-rw-rw-rw-   3 testuser testuser      17289 2023-07-17 18:50 o3fs://82532-link1-o3fs.fstest1.omservice/test/o3fs/dir/NOTICE.txt
-rw-rw-rw-   3 testuser testuser      17289 2023-07-17 18:51 o3fs://82532-link1-o3fs.fstest1.omservice/test/o3fs/dir/PUTFILE.txt
-rw-rw-rw-   3 testuser testuser      17289 2023-07-17 18:51 o3fs://82532-link1-o3fs.fstest1.omservice/test/o3fs/dir/STREAMING.txt</msg>
<status status="PASS" starttime="20230717 18:52:13.350" endtime="20230717 18:52:13.352"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:52:13.353" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:52:13.352" endtime="20230717 18:52:13.353"/>
</kw>
<status status="PASS" starttime="20230717 18:52:06.765" endtime="20230717 18:52:13.353"/>
</kw>
<msg timestamp="20230717 18:52:13.353" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:52:06.764" endtime="20230717 18:52:13.354"/>
</kw>
<msg timestamp="20230717 18:52:13.354" level="INFO">${result} = Found 3 items
-rw-rw-rw-   3 testuser testuser      17289 2023-07-17 18:50 o3fs://82532-link1-o3fs.fstest1.omservice/test/o3fs/dir/NOTICE.txt
-rw-rw-rw-   3 testuser testuser      17289 2023-07-17 18:...</msg>
<status status="PASS" starttime="20230717 18:52:06.764" endtime="20230717 18:52:13.354"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 18:52:13.354" endtime="20230717 18:52:13.355"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PUTFILE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 18:52:13.355" endtime="20230717 18:52:13.355"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STREAMING.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 18:52:13.356" endtime="20230717 18:52:13.356"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 18:52:06.763" endtime="20230717 18:52:13.357"/>
</test>
<test id="s1-s6-t10" name="Move" line="86">
<kw name="Execute" library="os">
<arg>ozone fs -mv ${DEEP_URL}/NOTICE.txt ${DEEP_URL}/MOVED.TXT</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:52:13.366" level="INFO">Running command 'ozone fs -mv o3fs://82532-link1-o3fs.fstest1.omservice//test/o3fs/dir/NOTICE.txt o3fs://82532-link1-o3fs.fstest1.omservice//test/o3fs/dir/MOVED.TXT 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:52:20.256" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:52:20.256" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 18:52:13.361" endtime="20230717 18:52:20.256"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:52:20.258" level="INFO"/>
<status status="PASS" starttime="20230717 18:52:20.257" endtime="20230717 18:52:20.258"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:52:20.259" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:52:20.258" endtime="20230717 18:52:20.259"/>
</kw>
<status status="PASS" starttime="20230717 18:52:13.360" endtime="20230717 18:52:20.259"/>
</kw>
<msg timestamp="20230717 18:52:20.259" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:52:13.360" endtime="20230717 18:52:20.260"/>
</kw>
<status status="PASS" starttime="20230717 18:52:13.359" endtime="20230717 18:52:20.260"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:52:20.266" level="INFO">Running command 'ozone sh key list fstest1/82532-link1-o3fs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:52:29.064" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:52:29.064" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt</msg>
<status status="PASS" starttime="20230717 18:52:20.262" endtime="20230717 18:52:29.064"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:52:29.066" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt</msg>
<status status="PASS" starttime="20230717 18:52:29.065" endtime="20230717 18:52:29.066"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:52:29.067" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:52:29.067" endtime="20230717 18:52:29.068"/>
</kw>
<status status="PASS" starttime="20230717 18:52:20.262" endtime="20230717 18:52:29.068"/>
</kw>
<msg timestamp="20230717 18:52:29.068" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:52:20.261" endtime="20230717 18:52:29.068"/>
</kw>
<msg timestamp="20230717 18:52:29.068" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt</msg>
<status status="PASS" starttime="20230717 18:52:20.260" endtime="20230717 18:52:29.068"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>MOVED.TXT</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 18:52:29.069" endtime="20230717 18:52:29.069"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 18:52:29.069" endtime="20230717 18:52:29.070"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 18:52:13.358" endtime="20230717 18:52:29.070"/>
</test>
<test id="s1-s6-t11" name="Copy within FS" line="92">
<kw name="Execute" library="os" type="SETUP">
<arg>ozone fs -mkdir -p ${DEEP_URL}/subdir1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:52:29.079" level="INFO">Running command 'ozone fs -mkdir -p o3fs://82532-link1-o3fs.fstest1.omservice//test/o3fs/dir/subdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:52:35.478" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:52:35.478" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 18:52:29.075" endtime="20230717 18:52:35.478"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:52:35.480" level="INFO"/>
<status status="PASS" starttime="20230717 18:52:35.479" endtime="20230717 18:52:35.480"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:52:35.480" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:52:35.480" endtime="20230717 18:52:35.481"/>
</kw>
<status status="PASS" starttime="20230717 18:52:29.074" endtime="20230717 18:52:35.481"/>
</kw>
<msg timestamp="20230717 18:52:35.481" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:52:29.074" endtime="20230717 18:52:35.481"/>
</kw>
<status status="PASS" starttime="20230717 18:52:29.072" endtime="20230717 18:52:35.481"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -cp ${DEEP_URL}/MOVED.TXT ${DEEP_URL}/subdir1/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:52:35.487" level="INFO">Running command 'ozone fs -cp o3fs://82532-link1-o3fs.fstest1.omservice//test/o3fs/dir/MOVED.TXT o3fs://82532-link1-o3fs.fstest1.omservice//test/o3fs/dir/subdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:52:45.936" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:52:45.936" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 18:52:35.484" endtime="20230717 18:52:45.936"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:52:45.938" level="INFO"/>
<status status="PASS" starttime="20230717 18:52:45.937" endtime="20230717 18:52:45.938"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:52:45.939" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:52:45.938" endtime="20230717 18:52:45.939"/>
</kw>
<status status="PASS" starttime="20230717 18:52:35.483" endtime="20230717 18:52:45.939"/>
</kw>
<msg timestamp="20230717 18:52:45.939" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:52:35.483" endtime="20230717 18:52:45.940"/>
</kw>
<status status="PASS" starttime="20230717 18:52:35.482" endtime="20230717 18:52:45.940"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:52:45.945" level="INFO">Running command 'ozone sh key list fstest1/82532-link1-o3fs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:52:54.902" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:52:54.902" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt
test/o3fs/dir/subdir1/
test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20230717 18:52:45.942" endtime="20230717 18:52:54.902"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:52:54.903" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt
test/o3fs/dir/subdir1/
test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20230717 18:52:54.902" endtime="20230717 18:52:54.904"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:52:54.905" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:52:54.904" endtime="20230717 18:52:54.905"/>
</kw>
<status status="PASS" starttime="20230717 18:52:45.941" endtime="20230717 18:52:54.905"/>
</kw>
<msg timestamp="20230717 18:52:54.905" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:52:45.941" endtime="20230717 18:52:54.905"/>
</kw>
<msg timestamp="20230717 18:52:54.905" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt
test/o3fs/dir/subdir1/
test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20230717 18:52:45.940" endtime="20230717 18:52:54.905"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>subdir1/NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 18:52:54.906" endtime="20230717 18:52:54.906"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${DEEP_URL}/subdir1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:52:54.912" level="INFO">Running command 'ozone fs -ls o3fs://82532-link1-o3fs.fstest1.omservice//test/o3fs/dir/subdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:53:01.245" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:53:01.245" level="INFO">${output} = Found 1 items
-rw-rw-rw-   3 testuser testuser      17289 2023-07-17 18:52 o3fs://82532-link1-o3fs.fstest1.omservice/test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20230717 18:52:54.908" endtime="20230717 18:53:01.245"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:53:01.247" level="INFO">Found 1 items
-rw-rw-rw-   3 testuser testuser      17289 2023-07-17 18:52 o3fs://82532-link1-o3fs.fstest1.omservice/test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20230717 18:53:01.246" endtime="20230717 18:53:01.247"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:53:01.248" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:53:01.247" endtime="20230717 18:53:01.248"/>
</kw>
<status status="PASS" starttime="20230717 18:52:54.907" endtime="20230717 18:53:01.248"/>
</kw>
<msg timestamp="20230717 18:53:01.249" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:52:54.907" endtime="20230717 18:53:01.249"/>
</kw>
<msg timestamp="20230717 18:53:01.249" level="INFO">${result} = Found 1 items
-rw-rw-rw-   3 testuser testuser      17289 2023-07-17 18:52 o3fs://82532-link1-o3fs.fstest1.omservice/test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20230717 18:52:54.906" endtime="20230717 18:53:01.249"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 18:53:01.249" endtime="20230717 18:53:01.250"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 18:53:01.250" endtime="20230717 18:53:01.250"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 18:52:29.071" endtime="20230717 18:53:01.251"/>
</test>
<test id="s1-s6-t12" name="Cat file" line="102">
<kw name="Execute" library="os">
<arg>ozone fs -cat ${DEEP_URL}/subdir1/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:53:01.258" level="INFO">Running command 'ozone fs -cat o3fs://82532-link1-o3fs.fstest1.omservice//test/o3fs/dir/subdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:53:11.081" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:53:11.081" level="INFO">${output} = Apache Ozone
Copyright 2022 The Apache Software Foundation

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).

Export Control Notice
----------------...</msg>
<status status="PASS" starttime="20230717 18:53:01.254" endtime="20230717 18:53:11.081"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:53:11.083" level="INFO">Apache Ozone
Copyright 2022 The Apache Software Foundation

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).

Export Control Notice
---------------------

This distribution includes cryptographic software.  The country in
which you currently reside may have restrictions on the import,
possession, use, and/or re-export to another country, of
encryption software.  BEFORE using any encryption software, please
check your country's laws, regulations and policies concerning the
import, possession, or use, and re-export of encryption software, to
see if this is permitted.  See &lt;http://www.wassenaar.org/&gt; for more
information.

The U.S. Government Department of Commerce, Bureau of Industry and
Security (BIS), has classified this software as Export Commodity
Control Number (ECCN) 5D002.C.1, which includes information security
software using or performing cryptographic functions with asymmetric
algorithms.  The form and manner of this Apache Software Foundation
distribution makes it eligible for export under the License Exception
ENC Technology Software Unrestricted (TSU) exception (see the BIS
Export Administration Regulations, Section 740.13) for both object
code and source code.

This software uses the SSL libraries from the Jetty project written
by mortbay.org abd BouncyCastle Java cryptography APIs written by the
 Legion of the Bouncy Castle Inc.

**********************
THIRD PARTY COMPONENTS
**********************
This software includes third party software subject to the following copyrights:

io.netty:netty-all
====================


                            The Netty Project
                            =================

Please visit the Netty web site for more information:

  * https://netty.io/

Copyright 2014 The Netty Project

The Netty Project licenses this file to you under the Apache License,
version 2.0 (the "License"); you may not use this file except in compliance
with the License. You may obtain a copy of the License at:

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations
under the License.

Also, please refer to each LICENSE.&lt;component&gt;.txt file, which is located in
the 'license' directory of the distribution file, for the license terms of the
components that this product depends on.

-------------------------------------------------------------------------------
This product contains the extensions to Java Collections Framework which has
been derived from the works by JSR-166 EG, Doug Lea, and Jason T. Greene:

  * LICENSE:
    * license/LICENSE.jsr166y.txt (Public Domain)
  * HOMEPAGE:
    * http://gee.cs.oswego.edu/cgi-bin/viewcvs.cgi/jsr166/
    * http://viewvc.jboss.org/cgi-bin/viewvc.cgi/jbosscache/experimental/jsr166/

This product contains a modified version of Robert Harder's Public Domain
Base64 Encoder and Decoder, which can be obtained at:

  * LICENSE:
    * license/LICENSE.base64.txt (Public Domain)
  * HOMEPAGE:
    * http://iharder.sourceforge.net/current/java/base64/

This product contains a modified portion of 'Webbit', an event based
WebSocket and HTTP server, which can be obtained at:

  * LICENSE:
    * license/LICENSE.webbit.txt (BSD License)
  * HOMEPAGE:
    * https://github.com/joewalnes/webbit

This product contains a modified portion of 'SLF4J', a simple logging
facade for Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.slf4j.txt (MIT License)
  * HOMEPAGE:
    * http://www.slf4j.org/

This product contains a modified portion of 'Apache Harmony', an open source
Java SE, which can be obtained at:

  * NOTICE:
    * license/NOTICE.harmony.txt
  * LICENSE:
    * license/LICENSE.harmony.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://archive.apache.org/dist/harmony/

This product contains a modified portion of 'jbzip2', a Java bzip2 compression
and decompression library written by Matthew J. Francis. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jbzip2.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jbzip2/

This product contains a modified portion of 'libdivsufsort', a C API library to construct
the suffix array and the Burrows-Wheeler transformed string for any input string of
a constant-size alphabet written by Yuta Mori. It can be obtained at:

  * LICENSE:
    * license/LICENSE.libdivsufsort.txt (MIT License)
  * HOMEPAGE:
    * https://github.com/y-256/libdivsufsort

This product contains a modified portion of Nitsan Wakart's 'JCTools', Java Concurrency Tools for the JVM,
 which can be obtained at:

  * LICENSE:
    * license/LICENSE.jctools.txt (ASL2 License)
  * HOMEPAGE:
    * https://github.com/JCTools/JCTools

This product optionally depends on 'JZlib', a re-implementation of zlib in
pure Java, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jzlib.txt (BSD style License)
  * HOMEPAGE:
    * http://www.jcraft.com/jzlib/

This product optionally depends on 'Compress-LZF', a Java library for encoding and
decoding data in LZF format, written by Tatu Saloranta. It can be obtained at:

  * LICENSE:
    * license/LICENSE.compress-lzf.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/ning/compress

This product optionally depends on 'lz4', a LZ4 Java compression
and decompression library written by Adrien Grand. It can be obtained at:

  * LICENSE:
    * license/LICENSE.lz4.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jpountz/lz4-java

This product optionally depends on 'lzma-java', a LZMA Java compression
and decompression library, which can be obtained at:

  * LICENSE:
    * license/LICENSE.lzma-java.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jponge/lzma-java

This product contains a modified portion of 'jfastlz', a Java port of FastLZ compression
and decompression library written by William Kinney. It can be obtained at:

  * LICENSE:
    * license/LICENSE.jfastlz.txt (MIT License)
  * HOMEPAGE:
    * https://code.google.com/p/jfastlz/

This product contains a modified portion of and optionally depends on 'Protocol Buffers', Google's data
interchange format, which can be obtained at:

  * LICENSE:
    * license/LICENSE.protobuf.txt (New BSD License)
  * HOMEPAGE:
    * https://github.com/google/protobuf

This product optionally depends on 'Bouncy Castle Crypto APIs' to generate
a temporary self-signed X.509 certificate when the JVM does not provide the
equivalent functionality.  It can be obtained at:

  * LICENSE:
    * license/LICENSE.bouncycastle.txt (MIT License)
  * HOMEPAGE:
    * http://www.bouncycastle.org/

This product optionally depends on 'Snappy', a compression library produced
by Google Inc, which can be obtained at:

  * LICENSE:
    * license/LICENSE.snappy.txt (New BSD License)
  * HOMEPAGE:
    * https://github.com/google/snappy

This product optionally depends on 'JBoss Marshalling', an alternative Java
serialization API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.jboss-marshalling.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/jboss-remoting/jboss-marshalling

This product optionally depends on 'Caliper', Google's micro-
benchmarking framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.caliper.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/google/caliper

This product optionally depends on 'Apache Commons Logging', a logging
framework, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-logging.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://commons.apache.org/logging/

This product optionally depends on 'Apache Log4J', a logging framework, which
can be obtained at:

  * LICENSE:
    * license/LICENSE.log4j.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://logging.apache.org/log4j/

This product optionally depends on 'Aalto XML', an ultra-high performance
non-blocking XML processor, which can be obtained at:

  * LICENSE:
    * license/LICENSE.aalto-xml.txt (Apache License 2.0)
  * HOMEPAGE:
    * http://wiki.fasterxml.com/AaltoHome

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Twitter. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hpack.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/twitter/hpack

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Cory Benfield. It can be obtained at:

  * LICENSE:
    * license/LICENSE.hyper-hpack.txt (MIT License)
  * HOMEPAGE:
    * https://github.com/python-hyper/hpack/

This product contains a modified version of 'HPACK', a Java implementation of
the HTTP/2 HPACK algorithm written by Tatsuhiro Tsujikawa. It can be obtained at:

  * LICENSE:
    * license/LICENSE.nghttp2-hpack.txt (MIT License)
  * HOMEPAGE:
    * https://github.com/nghttp2/nghttp2/

This product contains a modified portion of 'Apache Commons Lang', a Java library
provides utilities for the java.lang API, which can be obtained at:

  * LICENSE:
    * license/LICENSE.commons-lang.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://commons.apache.org/proper/commons-lang/


This product contains the Maven wrapper scripts from 'Maven Wrapper', that provides an easy way to ensure a user has everything necessary to run the Maven build.

  * LICENSE:
    * license/LICENSE.mvn-wrapper.txt (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/takari/maven-wrapper


io.grpc:grpc-core
====================

Copyright 2014 The gRPC Authors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

-----------------------------------------------------------------------

This product contains a modified portion of 'OkHttp', an open source
HTTP &amp; SPDY client for Android and Java applications, which can be obtained
at:

  * LICENSE:
    * okhttp/third_party/okhttp/LICENSE (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/square/okhttp
  * LOCATION_IN_GRPC:
    * okhttp/third_party/okhttp

This product contains a modified portion of 'Envoy', an open source
cloud-native high-performance edge/middle/service proxy, which can be
obtained at:

  * LICENSE:
    * xds/third_party/envoy/LICENSE (Apache License 2.0)
  * NOTICE:
    * xds/third_party/envoy/NOTICE
  * HOMEPAGE:
    * https://www.envoyproxy.io
  * LOCATION_IN_GRPC:
    * xds/third_party/envoy

This product contains a modified portion of 'gogoprotobuf',
an open source Protocol Buffers support for Go with Gadgets,
which can be obtained at:

  * LICENSE:
    * xds/third_party/gogoproto/LICENSE
  * HOMEPAGE:
    * https://github.com/gogo/protobuf
  * LOCATION_IN_GRPC:
    * xds/third_party/gogoproto

This product contains a modified portion of 'protoc-gen-validate (PGV)',
an open source protoc plugin to generate polyglot message validators,
which can be obtained at:

  * LICENSE:
    * xds/third_party/protoc-gen-validate/LICENSE (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/lyft/protoc-gen-validate
  * LOCATION_IN_GRPC:
    * xds/third_party/protoc-gen-validate

This product contains a modified portion of 'udpa',
an open source universal data plane API, which can be obtained at:

  * LICENSE:
    * xds/third_party/udpa/LICENSE (Apache License 2.0)
  * HOMEPAGE:
    * https://github.com/cncf/udpa
  * LOCATION_IN_GRPC:
    * xds/third_party/udpa


com.fasterxml.jackson.dataformat:jackson-dataformat-xml
====================

# Jackson JSON processor

Jackson is a high-performance, Free/Open Source JSON processing library.
It was originally written by Tatu Saloranta (tatu.saloranta@iki.fi), and has
been in development since 2007.
It is currently developed by a community of developers, as well as supported
commercially by FasterXML.com.

## Licensing

Jackson core and extension components may licensed under different licenses.
To find the details that apply to this artifact see the accompanying LICENSE file.
For more information, including possible other licensing options, contact
FasterXML.com (http://fasterxml.com).

## Credits

A list of contributors may be found from CREDITS file, which is included
in some artifacts (usually source distributions); but is always available
from the source code management (SCM) system project uses.


com.jolbox:bonecp
====================

   =========================================================================
   ==  NOTICE file corresponding to the section 4 d of                    ==
   ==  the Apache License, Version 2.0,                                   ==
   ==  in this case for the BoneCP (Java connection pool).                ==
   =========================================================================

   BoneCP
   Copyright 2010 Wallace Wadge

   This product includes software developed by
   Wallace Wadge (http://jolbox.com/).

org.codehaus.jackson:jackson-mapper-asl
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


com.google.inject:guice
====================


Google Guice - Core Library
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).




com.google.inject.extensions:guice-assistedinject
====================


Google Guice - Extensions - AssistedInject
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).




org.codehaus.jackson:jackson-xc
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


org.codehaus.jackson:jackson-jaxrs
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


com.google.inject.extensions:guice-servlet
====================


Google Guice - Extensions - Servlet
Copyright 2006-2015 Google, Inc.

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).




org.codehaus.jackson:jackson-core-asl
====================

This product currently only contains code developed by authors
of specific components, as identified by the source code files;
if such notes are missing files have been created by
Tatu Saloranta.

For additional credits (generally to people who reported problems)
see CREDITS file.


org.bouncycastle:bcprov-jdk15on
====================

Copyright (c) 2000 - 2019 The Legion of the Bouncy Castle Inc. (https://www.bouncycastle.org)

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

Source: https://bouncycastle.org/license.html

ch.qos.reload4j:reload4j
====================

Apache log4j
Copyright 2007 The Apache Software Foundation

This product includes software developed at
The Apache Software Foundation (http://www.apache.org/).


====================
ratis-thirdparty-misc is a shaded dependency which includes additional 3rd party dependencies in shaded form.
For the detailed list of the dependencies and the associated NOTICE file see licenses/NOTICE-ratis-thirdparty-misc.txt.</msg>
<status status="PASS" starttime="20230717 18:53:11.082" endtime="20230717 18:53:11.083"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:53:11.084" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:53:11.084" endtime="20230717 18:53:11.084"/>
</kw>
<status status="PASS" starttime="20230717 18:53:01.254" endtime="20230717 18:53:11.084"/>
</kw>
<msg timestamp="20230717 18:53:11.085" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:53:01.253" endtime="20230717 18:53:11.085"/>
</kw>
<status status="PASS" starttime="20230717 18:53:01.252" endtime="20230717 18:53:11.086"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 18:53:01.252" endtime="20230717 18:53:11.086"/>
</test>
<test id="s1-s6-t13" name="Delete file" line="105">
<kw name="Execute" library="os">
<arg>ozone fs -rm -skipTrash ${DEEP_URL}/subdir1/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:53:11.094" level="INFO">Running command 'ozone fs -rm -skipTrash o3fs://82532-link1-o3fs.fstest1.omservice//test/o3fs/dir/subdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:53:17.401" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:53:17.401" level="INFO">${output} = Deleted o3fs://82532-link1-o3fs.fstest1.omservice/test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20230717 18:53:11.090" endtime="20230717 18:53:17.401"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:53:17.404" level="INFO">Deleted o3fs://82532-link1-o3fs.fstest1.omservice/test/o3fs/dir/subdir1/NOTICE.txt</msg>
<status status="PASS" starttime="20230717 18:53:17.402" endtime="20230717 18:53:17.404"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:53:17.405" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:53:17.404" endtime="20230717 18:53:17.405"/>
</kw>
<status status="PASS" starttime="20230717 18:53:11.090" endtime="20230717 18:53:17.405"/>
</kw>
<msg timestamp="20230717 18:53:17.405" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:53:11.089" endtime="20230717 18:53:17.406"/>
</kw>
<status status="PASS" starttime="20230717 18:53:11.088" endtime="20230717 18:53:17.406"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:53:17.412" level="INFO">Running command 'ozone sh key list fstest1/82532-link1-o3fs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:53:25.588" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:53:25.589" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt
test/o3fs/dir/subdir1/</msg>
<status status="PASS" starttime="20230717 18:53:17.408" endtime="20230717 18:53:25.589"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:53:25.591" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt
test/o3fs/dir/subdir1/</msg>
<status status="PASS" starttime="20230717 18:53:25.590" endtime="20230717 18:53:25.591"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:53:25.592" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:53:25.591" endtime="20230717 18:53:25.592"/>
</kw>
<status status="PASS" starttime="20230717 18:53:17.407" endtime="20230717 18:53:25.592"/>
</kw>
<msg timestamp="20230717 18:53:25.592" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:53:17.407" endtime="20230717 18:53:25.593"/>
</kw>
<msg timestamp="20230717 18:53:25.593" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt
test/o3fs/dir/subdir1/</msg>
<status status="PASS" starttime="20230717 18:53:17.406" endtime="20230717 18:53:25.593"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 18:53:25.593" endtime="20230717 18:53:25.593"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 18:53:11.087" endtime="20230717 18:53:25.594"/>
</test>
<test id="s1-s6-t14" name="Delete dir" line="110">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -rmdir ${DEEP_URL}/subdir1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:53:25.603" level="INFO">Running command 'ozone fs -rmdir o3fs://82532-link1-o3fs.fstest1.omservice//test/o3fs/dir/subdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:53:31.775" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:53:31.776" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 18:53:25.598" endtime="20230717 18:53:31.776"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:53:31.778" level="INFO"/>
<status status="PASS" starttime="20230717 18:53:31.776" endtime="20230717 18:53:31.778"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:53:31.779" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:53:31.778" endtime="20230717 18:53:31.779"/>
</kw>
<status status="PASS" starttime="20230717 18:53:25.597" endtime="20230717 18:53:31.779"/>
</kw>
<msg timestamp="20230717 18:53:31.779" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:53:25.597" endtime="20230717 18:53:31.780"/>
</kw>
<msg timestamp="20230717 18:53:31.780" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230717 18:53:25.596" endtime="20230717 18:53:31.780"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:53:31.787" level="INFO">Running command 'ozone sh key list fstest1/82532-link1-o3fs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:53:40.394" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:53:40.394" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt</msg>
<status status="PASS" starttime="20230717 18:53:31.783" endtime="20230717 18:53:40.394"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:53:40.395" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt</msg>
<status status="PASS" starttime="20230717 18:53:40.394" endtime="20230717 18:53:40.395"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:53:40.396" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:53:40.396" endtime="20230717 18:53:40.396"/>
</kw>
<status status="PASS" starttime="20230717 18:53:31.782" endtime="20230717 18:53:40.396"/>
</kw>
<msg timestamp="20230717 18:53:40.396" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:53:31.781" endtime="20230717 18:53:40.397"/>
</kw>
<msg timestamp="20230717 18:53:40.397" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt</msg>
<status status="PASS" starttime="20230717 18:53:31.780" endtime="20230717 18:53:40.397"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>subdir1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 18:53:40.397" endtime="20230717 18:53:40.397"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 18:53:25.596" endtime="20230717 18:53:40.398"/>
</test>
<test id="s1-s6-t15" name="Touch file" line="115">
<kw name="Execute" library="os">
<arg>ozone fs -touch ${DEEP_URL}/TOUCHFILE-${SCHEME}.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:53:40.406" level="INFO">Running command 'ozone fs -touch o3fs://82532-link1-o3fs.fstest1.omservice//test/o3fs/dir/TOUCHFILE-o3fs.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:53:47.410" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:53:47.410" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 18:53:40.402" endtime="20230717 18:53:47.411"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:53:47.412" level="INFO"/>
<status status="PASS" starttime="20230717 18:53:47.411" endtime="20230717 18:53:47.412"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:53:47.413" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:53:47.413" endtime="20230717 18:53:47.413"/>
</kw>
<status status="PASS" starttime="20230717 18:53:40.401" endtime="20230717 18:53:47.414"/>
</kw>
<msg timestamp="20230717 18:53:47.414" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:53:40.400" endtime="20230717 18:53:47.414"/>
</kw>
<status status="PASS" starttime="20230717 18:53:40.400" endtime="20230717 18:53:47.414"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:53:47.420" level="INFO">Running command 'ozone sh key list fstest1/82532-link1-o3fs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:53:56.074" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:53:56.074" level="INFO">${output} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt
test/o3fs/dir/TOUCHFILE-o3fs.txt</msg>
<status status="PASS" starttime="20230717 18:53:47.416" endtime="20230717 18:53:56.074"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:53:56.076" level="INFO">test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt
test/o3fs/dir/TOUCHFILE-o3fs.txt</msg>
<status status="PASS" starttime="20230717 18:53:56.075" endtime="20230717 18:53:56.076"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:53:56.078" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:53:56.077" endtime="20230717 18:53:56.078"/>
</kw>
<status status="PASS" starttime="20230717 18:53:47.416" endtime="20230717 18:53:56.078"/>
</kw>
<msg timestamp="20230717 18:53:56.078" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:53:47.415" endtime="20230717 18:53:56.078"/>
</kw>
<msg timestamp="20230717 18:53:56.079" level="INFO">${result} = test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt
test/o3fs/dir/TOUCHFILE-o3fs.txt</msg>
<status status="PASS" starttime="20230717 18:53:47.414" endtime="20230717 18:53:56.079"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>TOUCHFILE-${SCHEME}.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 18:53:56.079" endtime="20230717 18:53:56.080"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 18:53:40.399" endtime="20230717 18:53:56.081"/>
</test>
<test id="s1-s6-t16" name="Delete file with Trash" line="120">
<kw name="Execute" library="os">
<arg>ozone fs -touch ${DEEP_URL}/testFile.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:53:56.091" level="INFO">Running command 'ozone fs -touch o3fs://82532-link1-o3fs.fstest1.omservice//test/o3fs/dir/testFile.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:54:02.444" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:54:02.444" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 18:53:56.086" endtime="20230717 18:54:02.444"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:54:02.446" level="INFO"/>
<status status="PASS" starttime="20230717 18:54:02.445" endtime="20230717 18:54:02.446"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:54:02.447" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:54:02.446" endtime="20230717 18:54:02.447"/>
</kw>
<status status="PASS" starttime="20230717 18:53:56.085" endtime="20230717 18:54:02.447"/>
</kw>
<msg timestamp="20230717 18:54:02.447" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:53:56.085" endtime="20230717 18:54:02.447"/>
</kw>
<status status="PASS" starttime="20230717 18:53:56.084" endtime="20230717 18:54:02.447"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -rm ${DEEP_URL}/testFile.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:54:02.454" level="INFO">Running command 'ozone fs -rm o3fs://82532-link1-o3fs.fstest1.omservice//test/o3fs/dir/testFile.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:54:08.821" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:54:08.821" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 18:54:02.449" endtime="20230717 18:54:08.822"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:54:08.823" level="INFO"/>
<status status="PASS" starttime="20230717 18:54:08.822" endtime="20230717 18:54:08.823"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:54:08.824" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:54:08.824" endtime="20230717 18:54:08.824"/>
</kw>
<status status="PASS" starttime="20230717 18:54:02.449" endtime="20230717 18:54:08.825"/>
</kw>
<msg timestamp="20230717 18:54:08.825" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:54:02.448" endtime="20230717 18:54:08.825"/>
</kw>
<status status="PASS" starttime="20230717 18:54:02.448" endtime="20230717 18:54:08.825"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls -R ${BASE_URL}/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:54:08.831" level="INFO">Running command 'ozone fs -ls -R o3fs://82532-link1-o3fs.fstest1.omservice/// 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:54:15.022" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:54:15.022" level="INFO">${output} = drwxrwxrwx   - testuser testuser          0 2023-07-17 18:54 o3fs://82532-link1-o3fs.fstest1.omservice/.Trash
drwxrwxrwx   - testuser testuser          0 2023-07-17 18:54 o3fs://82532-link1-o3fs.fstes...</msg>
<status status="PASS" starttime="20230717 18:54:08.827" endtime="20230717 18:54:15.022"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:54:15.024" level="INFO">drwxrwxrwx   - testuser testuser          0 2023-07-17 18:54 o3fs://82532-link1-o3fs.fstest1.omservice/.Trash
drwxrwxrwx   - testuser testuser          0 2023-07-17 18:54 o3fs://82532-link1-o3fs.fstest1.omservice/.Trash/testuser
drwxrwxrwx   - testuser testuser          0 2023-07-17 18:54 o3fs://82532-link1-o3fs.fstest1.omservice/.Trash/testuser/Current
drwxrwxrwx   - testuser testuser          0 2023-07-17 18:54 o3fs://82532-link1-o3fs.fstest1.omservice/.Trash/testuser/Current/test
drwxrwxrwx   - testuser testuser          0 2023-07-17 18:54 o3fs://82532-link1-o3fs.fstest1.omservice/.Trash/testuser/Current/test/o3fs
drwxrwxrwx   - testuser testuser          0 2023-07-17 18:54 o3fs://82532-link1-o3fs.fstest1.omservice/.Trash/testuser/Current/test/o3fs/dir
-rw-rw-rw-   3 testuser testuser          0 2023-07-17 18:54 o3fs://82532-link1-o3fs.fstest1.omservice/.Trash/testuser/Current/test/o3fs/dir/testFile.txt
drwxrwxrwx   - testuser testuser          0 2023-07-17 18:50 o3fs://82532-link1-o3fs.fstest1.omservice/test
drwxrwxrwx   - testuser testuser          0 2023-07-17 18:50 o3fs://82532-link1-o3fs.fstest1.omservice/test/o3fs
drwxrwxrwx   - testuser testuser          0 2023-07-17 18:54 o3fs://82532-link1-o3fs.fstest1.omservice/test/o3fs/dir
-rw-rw-rw-   3 testuser testuser      17289 2023-07-17 18:50 o3fs://82532-link1-o3fs.fstest1.omservice/test/o3fs/dir/MOVED.TXT
-rw-rw-rw-   3 testuser testuser      17289 2023-07-17 18:51 o3fs://82532-link1-o3fs.fstest1.omservice/test/o3fs/dir/PUTFILE.txt
-rw-rw-rw-   3 testuser testuser      17289 2023-07-17 18:51 o3fs://82532-link1-o3fs.fstest1.omservice/test/o3fs/dir/STREAMING.txt
-rw-rw-rw-   3 testuser testuser          0 2023-07-17 18:53 o3fs://82532-link1-o3fs.fstest1.omservice/test/o3fs/dir/TOUCHFILE-o3fs.txt</msg>
<status status="PASS" starttime="20230717 18:54:15.023" endtime="20230717 18:54:15.024"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:54:15.025" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:54:15.024" endtime="20230717 18:54:15.025"/>
</kw>
<status status="PASS" starttime="20230717 18:54:08.827" endtime="20230717 18:54:15.025"/>
</kw>
<msg timestamp="20230717 18:54:15.025" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:54:08.826" endtime="20230717 18:54:15.025"/>
</kw>
<msg timestamp="20230717 18:54:15.026" level="INFO">${result} = drwxrwxrwx   - testuser testuser          0 2023-07-17 18:54 o3fs://82532-link1-o3fs.fstest1.omservice/.Trash
drwxrwxrwx   - testuser testuser          0 2023-07-17 18:54 o3fs://82532-link1-o3fs.fstes...</msg>
<status status="PASS" starttime="20230717 18:54:08.825" endtime="20230717 18:54:15.026"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${DEEP_URL}/testFile.txt</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 18:54:15.026" endtime="20230717 18:54:15.027"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>.Trash/hadoop</arg>
<arg>.Trash/testuser</arg>
<arg>.Trash/root</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20230717 18:54:15.027" endtime="20230717 18:54:15.027"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${DEEP_DIR}/testFile.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 18:54:15.028" endtime="20230717 18:54:15.028"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 18:53:56.083" endtime="20230717 18:54:15.028"/>
</test>
<test id="s1-s6-t17" name="Delete recursively" line="128">
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${DEEP_URL}/subdir2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:54:15.036" level="INFO">Running command 'ozone fs -mkdir -p o3fs://82532-link1-o3fs.fstest1.omservice//test/o3fs/dir/subdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:54:21.064" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:54:21.065" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 18:54:15.032" endtime="20230717 18:54:21.065"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:54:21.067" level="INFO"/>
<status status="PASS" starttime="20230717 18:54:21.066" endtime="20230717 18:54:21.067"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:54:21.068" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:54:21.068" endtime="20230717 18:54:21.068"/>
</kw>
<status status="PASS" starttime="20230717 18:54:15.032" endtime="20230717 18:54:21.069"/>
</kw>
<msg timestamp="20230717 18:54:21.069" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:54:15.031" endtime="20230717 18:54:21.069"/>
</kw>
<status status="PASS" starttime="20230717 18:54:15.031" endtime="20230717 18:54:21.069"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -rm -skipTrash -r ${DEEP_URL}/subdir2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:54:21.077" level="INFO">Running command 'ozone fs -rm -skipTrash -r o3fs://82532-link1-o3fs.fstest1.omservice//test/o3fs/dir/subdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:54:27.381" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:54:27.381" level="INFO">${output} = Deleted o3fs://82532-link1-o3fs.fstest1.omservice/test/o3fs/dir/subdir2</msg>
<status status="PASS" starttime="20230717 18:54:21.072" endtime="20230717 18:54:27.381"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:54:27.383" level="INFO">Deleted o3fs://82532-link1-o3fs.fstest1.omservice/test/o3fs/dir/subdir2</msg>
<status status="PASS" starttime="20230717 18:54:27.382" endtime="20230717 18:54:27.383"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:54:27.384" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:54:27.383" endtime="20230717 18:54:27.384"/>
</kw>
<status status="PASS" starttime="20230717 18:54:21.071" endtime="20230717 18:54:27.385"/>
</kw>
<msg timestamp="20230717 18:54:27.385" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:54:21.071" endtime="20230717 18:54:27.385"/>
</kw>
<status status="PASS" starttime="20230717 18:54:21.070" endtime="20230717 18:54:27.385"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${VOLUME}/${BUCKET} | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:54:27.392" level="INFO">Running command 'ozone sh key list fstest1/82532-link1-o3fs | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:54:35.910" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:54:35.910" level="INFO">${output} = .Trash/
.Trash/testuser/
.Trash/testuser/Current/
.Trash/testuser/Current/test/
.Trash/testuser/Current/test/o3fs/
.Trash/testuser/Current/test/o3fs/dir/
.Trash/testuser/Current/test/o3fs/dir/testFile...</msg>
<status status="PASS" starttime="20230717 18:54:27.388" endtime="20230717 18:54:35.910"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:54:35.912" level="INFO">.Trash/
.Trash/testuser/
.Trash/testuser/Current/
.Trash/testuser/Current/test/
.Trash/testuser/Current/test/o3fs/
.Trash/testuser/Current/test/o3fs/dir/
.Trash/testuser/Current/test/o3fs/dir/testFile.txt
test/
test/o3fs/
test/o3fs/dir/
test/o3fs/dir/MOVED.TXT
test/o3fs/dir/PUTFILE.txt
test/o3fs/dir/STREAMING.txt
test/o3fs/dir/TOUCHFILE-o3fs.txt</msg>
<status status="PASS" starttime="20230717 18:54:35.911" endtime="20230717 18:54:35.912"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:54:35.913" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:54:35.912" endtime="20230717 18:54:35.913"/>
</kw>
<status status="PASS" starttime="20230717 18:54:27.387" endtime="20230717 18:54:35.914"/>
</kw>
<msg timestamp="20230717 18:54:35.914" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:54:27.386" endtime="20230717 18:54:35.914"/>
</kw>
<msg timestamp="20230717 18:54:35.914" level="INFO">${result} = .Trash/
.Trash/testuser/
.Trash/testuser/Current/
.Trash/testuser/Current/test/
.Trash/testuser/Current/test/o3fs/
.Trash/testuser/Current/test/o3fs/dir/
.Trash/testuser/Current/test/o3fs/dir/testFile...</msg>
<status status="PASS" starttime="20230717 18:54:27.385" endtime="20230717 18:54:35.914"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${DEEP_DIR}/subdir2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 18:54:35.914" endtime="20230717 18:54:35.915"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 18:54:15.030" endtime="20230717 18:54:35.916"/>
</test>
<test id="s1-s6-t18" name="List recursively" line="134">
<kw name="Setup localdir1" type="SETUP">
<kw name="Execute" library="os">
<arg>rm -Rf /tmp/localdir1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:54:35.924" level="INFO">Running command 'rm -Rf /tmp/localdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:54:35.930" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:54:35.930" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 18:54:35.920" endtime="20230717 18:54:35.930"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:54:35.931" level="INFO"/>
<status status="PASS" starttime="20230717 18:54:35.930" endtime="20230717 18:54:35.931"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:54:35.932" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:54:35.931" endtime="20230717 18:54:35.932"/>
</kw>
<status status="PASS" starttime="20230717 18:54:35.919" endtime="20230717 18:54:35.932"/>
</kw>
<msg timestamp="20230717 18:54:35.933" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:54:35.919" endtime="20230717 18:54:35.933"/>
</kw>
<status status="PASS" starttime="20230717 18:54:35.919" endtime="20230717 18:54:35.933"/>
</kw>
<kw name="Execute" library="os">
<arg>mkdir /tmp/localdir1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:54:35.939" level="INFO">Running command 'mkdir /tmp/localdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:54:35.944" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:54:35.944" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 18:54:35.935" endtime="20230717 18:54:35.944"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:54:35.945" level="INFO"/>
<status status="PASS" starttime="20230717 18:54:35.944" endtime="20230717 18:54:35.945"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:54:35.946" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:54:35.945" endtime="20230717 18:54:35.946"/>
</kw>
<status status="PASS" starttime="20230717 18:54:35.934" endtime="20230717 18:54:35.946"/>
</kw>
<msg timestamp="20230717 18:54:35.946" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:54:35.934" endtime="20230717 18:54:35.946"/>
</kw>
<status status="PASS" starttime="20230717 18:54:35.933" endtime="20230717 18:54:35.947"/>
</kw>
<kw name="Execute" library="os">
<arg>cp NOTICE.txt /tmp/localdir1/LOCAL.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:54:35.956" level="INFO">Running command 'cp NOTICE.txt /tmp/localdir1/LOCAL.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:54:35.961" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:54:35.961" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 18:54:35.949" endtime="20230717 18:54:35.961"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:54:35.963" level="INFO"/>
<status status="PASS" starttime="20230717 18:54:35.962" endtime="20230717 18:54:35.963"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:54:35.964" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:54:35.963" endtime="20230717 18:54:35.964"/>
</kw>
<status status="PASS" starttime="20230717 18:54:35.948" endtime="20230717 18:54:35.965"/>
</kw>
<msg timestamp="20230717 18:54:35.965" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:54:35.948" endtime="20230717 18:54:35.965"/>
</kw>
<status status="PASS" starttime="20230717 18:54:35.947" endtime="20230717 18:54:35.965"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${BASE_URL}testdir1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:54:35.972" level="INFO">Running command 'ozone fs -mkdir -p o3fs://82532-link1-o3fs.fstest1.omservice//testdir1 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:54:42.303" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:54:42.303" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 18:54:35.968" endtime="20230717 18:54:42.303"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:54:42.305" level="INFO"/>
<status status="PASS" starttime="20230717 18:54:42.304" endtime="20230717 18:54:42.305"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:54:42.306" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:54:42.305" endtime="20230717 18:54:42.306"/>
</kw>
<status status="PASS" starttime="20230717 18:54:35.967" endtime="20230717 18:54:42.306"/>
</kw>
<msg timestamp="20230717 18:54:42.306" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:54:35.966" endtime="20230717 18:54:42.306"/>
</kw>
<status status="PASS" starttime="20230717 18:54:35.966" endtime="20230717 18:54:42.306"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -copyFromLocal /tmp/localdir1 ${BASE_URL}testdir1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:54:42.312" level="INFO">Running command 'ozone fs -copyFromLocal /tmp/localdir1 o3fs://82532-link1-o3fs.fstest1.omservice//testdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:54:51.723" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:54:51.723" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 18:54:42.309" endtime="20230717 18:54:51.723"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:54:51.725" level="INFO"/>
<status status="PASS" starttime="20230717 18:54:51.724" endtime="20230717 18:54:51.725"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:54:51.726" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:54:51.725" endtime="20230717 18:54:51.726"/>
</kw>
<status status="PASS" starttime="20230717 18:54:42.308" endtime="20230717 18:54:51.726"/>
</kw>
<msg timestamp="20230717 18:54:51.726" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:54:42.308" endtime="20230717 18:54:51.727"/>
</kw>
<status status="PASS" starttime="20230717 18:54:42.307" endtime="20230717 18:54:51.727"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -put NOTICE.txt ${BASE_URL}testdir1/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:54:51.733" level="INFO">Running command 'ozone fs -put NOTICE.txt o3fs://82532-link1-o3fs.fstest1.omservice//testdir1/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:55:02.084" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:55:02.084" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 18:54:51.729" endtime="20230717 18:55:02.084"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:55:02.086" level="INFO"/>
<status status="PASS" starttime="20230717 18:55:02.085" endtime="20230717 18:55:02.086"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:55:02.087" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:55:02.086" endtime="20230717 18:55:02.087"/>
</kw>
<status status="PASS" starttime="20230717 18:54:51.729" endtime="20230717 18:55:02.087"/>
</kw>
<msg timestamp="20230717 18:55:02.087" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:54:51.728" endtime="20230717 18:55:02.088"/>
</kw>
<status status="PASS" starttime="20230717 18:54:51.727" endtime="20230717 18:55:02.088"/>
</kw>
<status status="PASS" starttime="20230717 18:54:35.918" endtime="20230717 18:55:02.088"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls -R ${BASE_URL}testdir1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:55:02.094" level="INFO">Running command 'ozone fs -ls -R o3fs://82532-link1-o3fs.fstest1.omservice//testdir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:55:08.842" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:55:08.842" level="INFO">${output} = -rw-rw-rw-   3 testuser testuser      17289 2023-07-17 18:55 o3fs://82532-link1-o3fs.fstest1.omservice/testdir1/NOTICE.txt
drwxrwxrwx   - testuser testuser          0 2023-07-17 18:54 o3fs://82532-lin...</msg>
<status status="PASS" starttime="20230717 18:55:02.090" endtime="20230717 18:55:08.842"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:55:08.844" level="INFO">-rw-rw-rw-   3 testuser testuser      17289 2023-07-17 18:55 o3fs://82532-link1-o3fs.fstest1.omservice/testdir1/NOTICE.txt
drwxrwxrwx   - testuser testuser          0 2023-07-17 18:54 o3fs://82532-link1-o3fs.fstest1.omservice/testdir1/localdir1
-rw-rw-rw-   3 testuser testuser      17289 2023-07-17 18:54 o3fs://82532-link1-o3fs.fstest1.omservice/testdir1/localdir1/LOCAL.txt</msg>
<status status="PASS" starttime="20230717 18:55:08.843" endtime="20230717 18:55:08.844"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:55:08.845" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:55:08.844" endtime="20230717 18:55:08.845"/>
</kw>
<status status="PASS" starttime="20230717 18:55:02.089" endtime="20230717 18:55:08.845"/>
</kw>
<msg timestamp="20230717 18:55:08.845" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:55:02.089" endtime="20230717 18:55:08.846"/>
</kw>
<msg timestamp="20230717 18:55:08.846" level="INFO">${result} = -rw-rw-rw-   3 testuser testuser      17289 2023-07-17 18:55 o3fs://82532-link1-o3fs.fstest1.omservice/testdir1/NOTICE.txt
drwxrwxrwx   - testuser testuser          0 2023-07-17 18:54 o3fs://82532-lin...</msg>
<status status="PASS" starttime="20230717 18:55:02.088" endtime="20230717 18:55:08.846"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>localdir1/LOCAL.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 18:55:08.846" endtime="20230717 18:55:08.847"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>testdir1/NOTICE.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 18:55:08.847" endtime="20230717 18:55:08.847"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 18:54:35.917" endtime="20230717 18:55:08.847"/>
</test>
<test id="s1-s6-t19" name="Copy to other bucket" line="140">
<kw name="Format FS URL" library="fs">
<var>${target}</var>
<arg>${SCHEME}</arg>
<arg>${VOLUME}</arg>
<arg>${BUCKET2}</arg>
<arg>testdir2</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230717 18:55:08.873" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20230717 18:55:08.854" endtime="20230717 18:55:08.873"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230717 18:55:08.874" level="INFO">${result} = .omservice</msg>
<status status="PASS" starttime="20230717 18:55:08.873" endtime="20230717 18:55:08.874"/>
</kw>
<status status="PASS" starttime="20230717 18:55:08.854" endtime="20230717 18:55:08.874"/>
</kw>
<msg timestamp="20230717 18:55:08.874" level="INFO">${om_with_leading} = .omservice</msg>
<status status="PASS" starttime="20230717 18:55:08.852" endtime="20230717 18:55:08.874"/>
</kw>
<status status="PASS" starttime="20230717 18:55:08.851" endtime="20230717 18:55:08.875"/>
</kw>
<msg timestamp="20230717 18:55:08.875" level="INFO">${url} = o3fs://82532-link2-o3fs.fstest1.omservice/testdir2</msg>
<status status="PASS" starttime="20230717 18:55:08.850" endtime="20230717 18:55:08.875"/>
</kw>
<msg timestamp="20230717 18:55:08.875" level="INFO">${target} = o3fs://82532-link2-o3fs.fstest1.omservice/testdir2</msg>
<status status="PASS" starttime="20230717 18:55:08.850" endtime="20230717 18:55:08.875"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:55:08.880" level="INFO">Running command 'ozone fs -mkdir -p o3fs://82532-link2-o3fs.fstest1.omservice/testdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:55:15.167" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:55:15.167" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 18:55:08.876" endtime="20230717 18:55:15.167"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:55:15.169" level="INFO"/>
<status status="PASS" starttime="20230717 18:55:15.167" endtime="20230717 18:55:15.169"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:55:15.170" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:55:15.169" endtime="20230717 18:55:15.170"/>
</kw>
<status status="PASS" starttime="20230717 18:55:08.876" endtime="20230717 18:55:15.170"/>
</kw>
<msg timestamp="20230717 18:55:15.170" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:55:08.876" endtime="20230717 18:55:15.170"/>
</kw>
<status status="PASS" starttime="20230717 18:55:08.875" endtime="20230717 18:55:15.170"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -cp ${BASE_URL}/testdir1/localdir1 ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:55:15.176" level="INFO">Running command 'ozone fs -cp o3fs://82532-link1-o3fs.fstest1.omservice///testdir1/localdir1 o3fs://82532-link2-o3fs.fstest1.omservice/testdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:55:25.489" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:55:25.489" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 18:55:15.173" endtime="20230717 18:55:25.489"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:55:25.491" level="INFO"/>
<status status="PASS" starttime="20230717 18:55:25.490" endtime="20230717 18:55:25.491"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:55:25.492" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:55:25.491" endtime="20230717 18:55:25.492"/>
</kw>
<status status="PASS" starttime="20230717 18:55:15.172" endtime="20230717 18:55:25.492"/>
</kw>
<msg timestamp="20230717 18:55:25.493" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:55:15.172" endtime="20230717 18:55:25.493"/>
</kw>
<status status="PASS" starttime="20230717 18:55:15.171" endtime="20230717 18:55:25.493"/>
</kw>
<kw name="Execute" library="os" type="TEARDOWN">
<arg>ozone fs -rm -r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:55:25.500" level="INFO">Running command 'ozone fs -rm -r o3fs://82532-link2-o3fs.fstest1.omservice/testdir2 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:55:31.899" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:55:31.899" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 18:55:25.496" endtime="20230717 18:55:31.899"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:55:31.901" level="INFO"/>
<status status="PASS" starttime="20230717 18:55:31.900" endtime="20230717 18:55:31.901"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:55:31.902" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:55:31.902" endtime="20230717 18:55:31.902"/>
</kw>
<status status="PASS" starttime="20230717 18:55:25.495" endtime="20230717 18:55:31.903"/>
</kw>
<msg timestamp="20230717 18:55:31.903" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:55:25.494" endtime="20230717 18:55:31.903"/>
</kw>
<status status="PASS" starttime="20230717 18:55:25.494" endtime="20230717 18:55:31.903"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 18:55:08.849" endtime="20230717 18:55:31.904"/>
</test>
<test id="s1-s6-t20" name="Copy to other volume" line="146">
<kw name="Format FS URL" library="fs">
<var>${target}</var>
<arg>${SCHEME}</arg>
<arg>${VOL2}</arg>
<arg>${BUCKET_IN_VOL2}</arg>
<arg>testdir3</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20230717 18:55:31.912" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20230717 18:55:31.912" endtime="20230717 18:55:31.912"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230717 18:55:31.913" level="INFO">${result} = .omservice</msg>
<status status="PASS" starttime="20230717 18:55:31.913" endtime="20230717 18:55:31.913"/>
</kw>
<status status="PASS" starttime="20230717 18:55:31.911" endtime="20230717 18:55:31.914"/>
</kw>
<msg timestamp="20230717 18:55:31.914" level="INFO">${om_with_leading} = .omservice</msg>
<status status="PASS" starttime="20230717 18:55:31.909" endtime="20230717 18:55:31.914"/>
</kw>
<status status="PASS" starttime="20230717 18:55:31.908" endtime="20230717 18:55:31.914"/>
</kw>
<msg timestamp="20230717 18:55:31.914" level="INFO">${url} = o3fs://82532-link3-o3fs.fstest2.omservice/testdir3</msg>
<status status="PASS" starttime="20230717 18:55:31.907" endtime="20230717 18:55:31.915"/>
</kw>
<msg timestamp="20230717 18:55:31.915" level="INFO">${target} = o3fs://82532-link3-o3fs.fstest2.omservice/testdir3</msg>
<status status="PASS" starttime="20230717 18:55:31.906" endtime="20230717 18:55:31.915"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir -p ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:55:31.920" level="INFO">Running command 'ozone fs -mkdir -p o3fs://82532-link3-o3fs.fstest2.omservice/testdir3 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:55:38.088" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:55:38.088" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 18:55:31.917" endtime="20230717 18:55:38.088"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:55:38.090" level="INFO"/>
<status status="PASS" starttime="20230717 18:55:38.088" endtime="20230717 18:55:38.090"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:55:38.091" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:55:38.090" endtime="20230717 18:55:38.091"/>
</kw>
<status status="PASS" starttime="20230717 18:55:31.916" endtime="20230717 18:55:38.091"/>
</kw>
<msg timestamp="20230717 18:55:38.091" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:55:31.916" endtime="20230717 18:55:38.091"/>
</kw>
<status status="PASS" starttime="20230717 18:55:31.915" endtime="20230717 18:55:38.091"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -cp ${BASE_URL}/testdir1/localdir1 ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:55:38.097" level="INFO">Running command 'ozone fs -cp o3fs://82532-link1-o3fs.fstest1.omservice///testdir1/localdir1 o3fs://82532-link3-o3fs.fstest2.omservice/testdir3 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:55:47.737" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:55:47.737" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 18:55:38.093" endtime="20230717 18:55:47.737"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:55:47.739" level="INFO"/>
<status status="PASS" starttime="20230717 18:55:47.738" endtime="20230717 18:55:47.739"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:55:47.740" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:55:47.739" endtime="20230717 18:55:47.740"/>
</kw>
<status status="PASS" starttime="20230717 18:55:38.093" endtime="20230717 18:55:47.740"/>
</kw>
<msg timestamp="20230717 18:55:47.740" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:55:38.092" endtime="20230717 18:55:47.741"/>
</kw>
<status status="PASS" starttime="20230717 18:55:38.092" endtime="20230717 18:55:47.741"/>
</kw>
<kw name="Execute" library="os" type="TEARDOWN">
<arg>ozone fs -rm -r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:55:47.746" level="INFO">Running command 'ozone fs -rm -r o3fs://82532-link3-o3fs.fstest2.omservice/testdir3 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:55:54.441" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:55:54.441" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 18:55:47.743" endtime="20230717 18:55:54.441"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:55:54.443" level="INFO"/>
<status status="PASS" starttime="20230717 18:55:54.442" endtime="20230717 18:55:54.443"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:55:54.445" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:55:54.444" endtime="20230717 18:55:54.445"/>
</kw>
<status status="PASS" starttime="20230717 18:55:47.742" endtime="20230717 18:55:54.445"/>
</kw>
<msg timestamp="20230717 18:55:54.445" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:55:47.742" endtime="20230717 18:55:54.446"/>
</kw>
<status status="PASS" starttime="20230717 18:55:47.741" endtime="20230717 18:55:54.446"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 18:55:31.905" endtime="20230717 18:55:54.446"/>
</test>
<test id="s1-s6-t21" name="List file created via shell" line="152">
<kw name="Execute" library="os" type="SETUP">
<arg>ozone sh key put ${VOLUME}/${BUCKET}/${SCHEME}.txt NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:55:54.455" level="INFO">Running command 'ozone sh key put fstest1/82532-link1-o3fs/o3fs.txt NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:56:06.198" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:56:06.198" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 18:55:54.451" endtime="20230717 18:56:06.198"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:56:06.200" level="INFO"/>
<status status="PASS" starttime="20230717 18:56:06.199" endtime="20230717 18:56:06.201"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:56:06.202" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:56:06.201" endtime="20230717 18:56:06.202"/>
</kw>
<status status="PASS" starttime="20230717 18:55:54.450" endtime="20230717 18:56:06.203"/>
</kw>
<msg timestamp="20230717 18:56:06.203" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:55:54.450" endtime="20230717 18:56:06.203"/>
</kw>
<status status="PASS" starttime="20230717 18:55:54.449" endtime="20230717 18:56:06.203"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -ls ${BASE_URL}${SCHEME}.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:56:06.220" level="INFO">Running command 'ozone fs -ls o3fs://82532-link1-o3fs.fstest1.omservice//o3fs.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:56:12.783" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:56:12.783" level="INFO">${output} = -rw-rw-rw-   3 testuser testuser      17289 2023-07-17 18:56 o3fs://82532-link1-o3fs.fstest1.omservice/o3fs.txt</msg>
<status status="PASS" starttime="20230717 18:56:06.216" endtime="20230717 18:56:12.783"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:56:12.785" level="INFO">-rw-rw-rw-   3 testuser testuser      17289 2023-07-17 18:56 o3fs://82532-link1-o3fs.fstest1.omservice/o3fs.txt</msg>
<status status="PASS" starttime="20230717 18:56:12.784" endtime="20230717 18:56:12.785"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:56:12.786" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:56:12.785" endtime="20230717 18:56:12.786"/>
</kw>
<status status="PASS" starttime="20230717 18:56:06.214" endtime="20230717 18:56:12.786"/>
</kw>
<msg timestamp="20230717 18:56:12.787" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:56:06.204" endtime="20230717 18:56:12.787"/>
</kw>
<msg timestamp="20230717 18:56:12.787" level="INFO">${result} = -rw-rw-rw-   3 testuser testuser      17289 2023-07-17 18:56 o3fs://82532-link1-o3fs.fstest1.omservice/o3fs.txt</msg>
<status status="PASS" starttime="20230717 18:56:06.203" endtime="20230717 18:56:12.787"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${SCHEME}.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 18:56:12.787" endtime="20230717 18:56:12.788"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 18:55:54.448" endtime="20230717 18:56:12.788"/>
</test>
<test id="s1-s6-t22" name="Reject overwrite existing" line="157">
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone fs -copyFromLocal NOTICE.txt ${BASE_URL}${SCHEME}.txt</arg>
<arg>1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:56:12.795" level="INFO">Running command 'ozone fs -copyFromLocal NOTICE.txt o3fs://82532-link1-o3fs.fstest1.omservice//o3fs.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:56:18.723" level="INFO">${rc} = 1</msg>
<msg timestamp="20230717 18:56:18.723" level="INFO">${output} = copyFromLocal: `o3fs://82532-link1-o3fs.fstest1.omservice/o3fs.txt': File exists</msg>
<status status="PASS" starttime="20230717 18:56:12.791" endtime="20230717 18:56:18.723"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:56:18.725" level="INFO">copyFromLocal: `o3fs://82532-link1-o3fs.fstest1.omservice/o3fs.txt': File exists</msg>
<status status="PASS" starttime="20230717 18:56:18.724" endtime="20230717 18:56:18.726"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:56:18.727" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:56:18.726" endtime="20230717 18:56:18.727"/>
</kw>
<msg timestamp="20230717 18:56:18.727" level="INFO">${result} = copyFromLocal: `o3fs://82532-link1-o3fs.fstest1.omservice/o3fs.txt': File exists</msg>
<status status="PASS" starttime="20230717 18:56:12.791" endtime="20230717 18:56:18.727"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>File exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 18:56:18.727" endtime="20230717 18:56:18.728"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 18:56:12.790" endtime="20230717 18:56:18.728"/>
</test>
<test id="s1-s6-t23" name="Get file" line="161">
<kw name="Execute" library="os" type="SETUP">
<arg>rm -Rf /tmp/GET.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:56:18.737" level="INFO">Running command 'rm -Rf /tmp/GET.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:56:18.741" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:56:18.741" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 18:56:18.733" endtime="20230717 18:56:18.741"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:56:18.743" level="INFO"/>
<status status="PASS" starttime="20230717 18:56:18.742" endtime="20230717 18:56:18.743"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:56:18.744" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:56:18.743" endtime="20230717 18:56:18.744"/>
</kw>
<status status="PASS" starttime="20230717 18:56:18.732" endtime="20230717 18:56:18.744"/>
</kw>
<msg timestamp="20230717 18:56:18.745" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:56:18.732" endtime="20230717 18:56:18.745"/>
</kw>
<status status="PASS" starttime="20230717 18:56:18.731" endtime="20230717 18:56:18.745"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -get ${BASE_URL}${SCHEME}.txt /tmp/GET.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:56:18.751" level="INFO">Running command 'ozone fs -get o3fs://82532-link1-o3fs.fstest1.omservice//o3fs.txt /tmp/GET.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:56:28.322" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:56:28.322" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 18:56:18.747" endtime="20230717 18:56:28.322"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:56:28.323" level="INFO"/>
<status status="PASS" starttime="20230717 18:56:28.323" endtime="20230717 18:56:28.324"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:56:28.324" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:56:28.324" endtime="20230717 18:56:28.324"/>
</kw>
<status status="PASS" starttime="20230717 18:56:18.747" endtime="20230717 18:56:28.325"/>
</kw>
<msg timestamp="20230717 18:56:28.325" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:56:18.746" endtime="20230717 18:56:28.325"/>
</kw>
<status status="PASS" starttime="20230717 18:56:18.745" endtime="20230717 18:56:28.325"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>/tmp/GET.txt</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20230717 18:56:28.326" level="INFO" html="true">File '&lt;a href="file:///tmp/GET.txt"&gt;/tmp/GET.txt&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20230717 18:56:28.325" endtime="20230717 18:56:28.326"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 18:56:18.729" endtime="20230717 18:56:28.326"/>
</test>
<doc>Ozone FS tests</doc>
<status status="PASS" starttime="20230717 18:48:19.403" endtime="20230717 18:56:28.329"/>
</suite>
<suite id="s1-s7" name="Links" source="/opt/hadoop/smoketest/basic/links.robot">
<kw name="Create volumes" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230717 18:56:34.053" level="INFO">${random} = 33192</msg>
<status status="PASS" starttime="20230717 18:56:34.053" endtime="20230717 18:56:34.053"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${source}</arg>
<arg>${random}-source</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230717 18:56:34.055" level="INFO">${source} = 33192-source</msg>
<status status="PASS" starttime="20230717 18:56:34.053" endtime="20230717 18:56:34.055"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${target}</arg>
<arg>${random}-target</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230717 18:56:34.057" level="INFO">${target} = 33192-target</msg>
<status status="PASS" starttime="20230717 18:56:34.055" endtime="20230717 18:56:34.057"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:56:34.062" level="INFO">Running command 'ozone sh volume create 33192-source 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:56:41.853" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:56:41.853" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 18:56:34.058" endtime="20230717 18:56:41.853"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:56:41.854" level="INFO"/>
<status status="PASS" starttime="20230717 18:56:41.853" endtime="20230717 18:56:41.854"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:56:41.855" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:56:41.854" endtime="20230717 18:56:41.855"/>
</kw>
<status status="PASS" starttime="20230717 18:56:34.058" endtime="20230717 18:56:41.855"/>
</kw>
<msg timestamp="20230717 18:56:41.855" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:56:34.057" endtime="20230717 18:56:41.855"/>
</kw>
<status status="PASS" starttime="20230717 18:56:34.057" endtime="20230717 18:56:41.855"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:56:41.863" level="INFO">Running command 'ozone sh volume create 33192-target 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:56:49.759" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:56:49.759" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 18:56:41.857" endtime="20230717 18:56:49.759"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:56:49.760" level="INFO"/>
<status status="PASS" starttime="20230717 18:56:49.760" endtime="20230717 18:56:49.761"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:56:49.761" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:56:49.761" endtime="20230717 18:56:49.761"/>
</kw>
<status status="PASS" starttime="20230717 18:56:41.857" endtime="20230717 18:56:49.762"/>
</kw>
<msg timestamp="20230717 18:56:49.762" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:56:41.856" endtime="20230717 18:56:49.762"/>
</kw>
<status status="PASS" starttime="20230717 18:56:41.856" endtime="20230717 18:56:49.762"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:56:49.768" level="INFO">Running command 'ozone sh bucket create 33192-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:56:57.862" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:56:57.862" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 18:56:49.764" endtime="20230717 18:56:57.863"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:56:57.864" level="INFO"/>
<status status="PASS" starttime="20230717 18:56:57.863" endtime="20230717 18:56:57.864"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:56:57.865" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:56:57.865" endtime="20230717 18:56:57.865"/>
</kw>
<status status="PASS" starttime="20230717 18:56:49.764" endtime="20230717 18:56:57.866"/>
</kw>
<msg timestamp="20230717 18:56:57.866" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:56:49.764" endtime="20230717 18:56:57.866"/>
</kw>
<status status="PASS" starttime="20230717 18:56:49.763" endtime="20230717 18:56:57.866"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:56:57.872" level="INFO">Running command 'ozone sh key put 33192-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:57:08.898" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:57:08.898" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 18:56:57.868" endtime="20230717 18:57:08.898"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:57:08.900" level="INFO"/>
<status status="PASS" starttime="20230717 18:57:08.899" endtime="20230717 18:57:08.900"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:57:08.900" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:57:08.900" endtime="20230717 18:57:08.900"/>
</kw>
<status status="PASS" starttime="20230717 18:56:57.868" endtime="20230717 18:57:08.901"/>
</kw>
<msg timestamp="20230717 18:57:08.901" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:56:57.867" endtime="20230717 18:57:08.901"/>
</kw>
<status status="PASS" starttime="20230717 18:56:57.866" endtime="20230717 18:57:08.901"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:57:08.908" level="INFO">Running command 'ozone sh bucket create 33192-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:57:16.305" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:57:16.306" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 18:57:08.904" endtime="20230717 18:57:16.306"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:57:16.308" level="INFO"/>
<status status="PASS" starttime="20230717 18:57:16.306" endtime="20230717 18:57:16.308"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:57:16.309" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:57:16.308" endtime="20230717 18:57:16.309"/>
</kw>
<status status="PASS" starttime="20230717 18:57:08.903" endtime="20230717 18:57:16.310"/>
</kw>
<msg timestamp="20230717 18:57:16.310" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:57:08.902" endtime="20230717 18:57:16.310"/>
</kw>
<status status="PASS" starttime="20230717 18:57:08.902" endtime="20230717 18:57:16.310"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:57:16.316" level="INFO">Running command 'ozone sh bucket link 33192-source/unreadable-bucket 33192-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:57:24.053" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:57:24.053" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 18:57:16.313" endtime="20230717 18:57:24.054"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:57:24.055" level="INFO"/>
<status status="PASS" starttime="20230717 18:57:24.054" endtime="20230717 18:57:24.055"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:57:24.056" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:57:24.056" endtime="20230717 18:57:24.056"/>
</kw>
<status status="PASS" starttime="20230717 18:57:16.311" endtime="20230717 18:57:24.057"/>
</kw>
<msg timestamp="20230717 18:57:24.057" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:57:16.311" endtime="20230717 18:57:24.057"/>
</kw>
<status status="PASS" starttime="20230717 18:57:16.310" endtime="20230717 18:57:24.057"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2:r[DEFAULT] ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:57:24.063" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2:r[DEFAULT] 33192-target 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:57:31.738" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:57:31.738" level="INFO">${output} = ACL user:testuser2:r[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20230717 18:57:24.059" endtime="20230717 18:57:31.739"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:57:31.740" level="INFO">ACL user:testuser2:r[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20230717 18:57:31.739" endtime="20230717 18:57:31.740"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:57:31.741" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:57:31.741" endtime="20230717 18:57:31.741"/>
</kw>
<status status="PASS" starttime="20230717 18:57:24.059" endtime="20230717 18:57:31.742"/>
</kw>
<msg timestamp="20230717 18:57:31.742" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:57:24.058" endtime="20230717 18:57:31.742"/>
</kw>
<status status="PASS" starttime="20230717 18:57:24.057" endtime="20230717 18:57:31.742"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:57:31.748" level="INFO">Running command 'ozone sh bucket link 33192-source/readable-bucket 33192-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:57:39.140" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:57:39.140" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 18:57:31.744" endtime="20230717 18:57:39.140"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:57:39.141" level="INFO"/>
<status status="PASS" starttime="20230717 18:57:39.141" endtime="20230717 18:57:39.142"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:57:39.142" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:57:39.142" endtime="20230717 18:57:39.142"/>
</kw>
<status status="PASS" starttime="20230717 18:57:31.744" endtime="20230717 18:57:39.143"/>
</kw>
<msg timestamp="20230717 18:57:39.143" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:57:31.743" endtime="20230717 18:57:39.143"/>
</kw>
<status status="PASS" starttime="20230717 18:57:31.742" endtime="20230717 18:57:39.143"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:57:39.149" level="INFO">Running command 'ozone sh bucket link 33192-source/readable-bucket 33192-target/readable-link2 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:57:46.217" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:57:46.217" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 18:57:39.145" endtime="20230717 18:57:46.217"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:57:46.219" level="INFO"/>
<status status="PASS" starttime="20230717 18:57:46.218" endtime="20230717 18:57:46.219"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:57:46.219" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:57:46.219" endtime="20230717 18:57:46.220"/>
</kw>
<status status="PASS" starttime="20230717 18:57:39.145" endtime="20230717 18:57:46.220"/>
</kw>
<msg timestamp="20230717 18:57:46.220" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:57:39.144" endtime="20230717 18:57:46.220"/>
</kw>
<status status="PASS" starttime="20230717 18:57:39.143" endtime="20230717 18:57:46.220"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2:rl ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:57:46.225" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2:rl 33192-source 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:57:53.853" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:57:53.853" level="INFO">${output} = ACL user:testuser2:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230717 18:57:46.222" endtime="20230717 18:57:53.853"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:57:53.854" level="INFO">ACL user:testuser2:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230717 18:57:53.853" endtime="20230717 18:57:53.854"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:57:53.855" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:57:53.855" endtime="20230717 18:57:53.855"/>
</kw>
<status status="PASS" starttime="20230717 18:57:46.222" endtime="20230717 18:57:53.856"/>
</kw>
<msg timestamp="20230717 18:57:53.856" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:57:46.221" endtime="20230717 18:57:53.856"/>
</kw>
<status status="PASS" starttime="20230717 18:57:46.220" endtime="20230717 18:57:53.856"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2:rl ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:57:53.862" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2:rl 33192-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:58:01.198" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:58:01.198" level="INFO">${output} = ACL user:testuser2:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230717 18:57:53.858" endtime="20230717 18:58:01.199"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:58:01.200" level="INFO">ACL user:testuser2:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230717 18:58:01.199" endtime="20230717 18:58:01.200"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:58:01.201" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:58:01.200" endtime="20230717 18:58:01.201"/>
</kw>
<status status="PASS" starttime="20230717 18:57:53.857" endtime="20230717 18:58:01.201"/>
</kw>
<msg timestamp="20230717 18:58:01.201" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:57:53.857" endtime="20230717 18:58:01.202"/>
</kw>
<status status="PASS" starttime="20230717 18:57:53.856" endtime="20230717 18:58:01.202"/>
</kw>
<status status="PASS" starttime="20230717 18:56:49.763" endtime="20230717 18:58:01.202"/>
</kw>
<status status="PASS" starttime="20230717 18:56:49.762" endtime="20230717 18:58:01.202"/>
</kw>
<status status="PASS" starttime="20230717 18:56:34.052" endtime="20230717 18:58:01.202"/>
</kw>
<test id="s1-s7-t1" name="Link to non-existent bucket" line="94">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:58:01.211" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:58:01.218" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:58:01.218" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20230717 18:58:01.207" endtime="20230717 18:58:01.218"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:58:01.220" level="INFO">s3g</msg>
<status status="PASS" starttime="20230717 18:58:01.219" endtime="20230717 18:58:01.220"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:58:01.221" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:58:01.220" endtime="20230717 18:58:01.221"/>
</kw>
<status status="PASS" starttime="20230717 18:58:01.206" endtime="20230717 18:58:01.221"/>
</kw>
<msg timestamp="20230717 18:58:01.222" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:58:01.206" endtime="20230717 18:58:01.222"/>
</kw>
<msg timestamp="20230717 18:58:01.222" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20230717 18:58:01.205" endtime="20230717 18:58:01.222"/>
</kw>
<msg timestamp="20230717 18:58:01.222" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230717 18:58:01.205" endtime="20230717 18:58:01.223"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230717 18:58:01.224" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230717 18:58:01.223" endtime="20230717 18:58:01.224"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:58:01.230" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:58:01.313" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:58:01.313" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 18:58:01.226" endtime="20230717 18:58:01.313"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:58:01.315" level="INFO"/>
<status status="PASS" starttime="20230717 18:58:01.314" endtime="20230717 18:58:01.315"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:58:01.316" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:58:01.316" endtime="20230717 18:58:01.316"/>
</kw>
<status status="PASS" starttime="20230717 18:58:01.226" endtime="20230717 18:58:01.317"/>
</kw>
<msg timestamp="20230717 18:58:01.317" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:58:01.225" endtime="20230717 18:58:01.317"/>
</kw>
<status status="PASS" starttime="20230717 18:58:01.225" endtime="20230717 18:58:01.317"/>
</kw>
<status status="PASS" starttime="20230717 18:58:01.224" endtime="20230717 18:58:01.317"/>
</kw>
<status status="PASS" starttime="20230717 18:58:01.204" endtime="20230717 18:58:01.317"/>
</kw>
<status status="PASS" starttime="20230717 18:58:01.204" endtime="20230717 18:58:01.317"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:58:01.323" level="INFO">Running command 'ozone sh bucket link 33192-source/no-such-bucket 33192-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:58:08.481" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:58:08.481" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 18:58:01.319" endtime="20230717 18:58:08.481"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:58:08.483" level="INFO"/>
<status status="PASS" starttime="20230717 18:58:08.482" endtime="20230717 18:58:08.483"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:58:08.483" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:58:08.483" endtime="20230717 18:58:08.483"/>
</kw>
<status status="PASS" starttime="20230717 18:58:01.319" endtime="20230717 18:58:08.484"/>
</kw>
<msg timestamp="20230717 18:58:08.484" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:58:01.319" endtime="20230717 18:58:08.484"/>
</kw>
<status status="PASS" starttime="20230717 18:58:01.318" endtime="20230717 18:58:08.484"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/dangling-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:58:08.489" level="INFO">Running command 'ozone sh key list 33192-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:58:15.650" level="INFO">${rc} = 255</msg>
<msg timestamp="20230717 18:58:15.650" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20230717 18:58:08.485" endtime="20230717 18:58:15.650"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:58:15.652" level="INFO">BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20230717 18:58:15.651" endtime="20230717 18:58:15.652"/>
</kw>
<msg timestamp="20230717 18:58:15.652" level="INFO">${result} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20230717 18:58:08.485" endtime="20230717 18:58:15.652"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 18:58:15.653" endtime="20230717 18:58:15.653"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20230717 18:58:01.202" endtime="20230717 18:58:15.654"/>
</test>
<test id="s1-s7-t2" name="Key create passthrough" line="99">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:58:15.664" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:58:15.669" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:58:15.669" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20230717 18:58:15.660" endtime="20230717 18:58:15.669"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:58:15.670" level="INFO">s3g</msg>
<status status="PASS" starttime="20230717 18:58:15.669" endtime="20230717 18:58:15.670"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:58:15.671" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:58:15.671" endtime="20230717 18:58:15.671"/>
</kw>
<status status="PASS" starttime="20230717 18:58:15.660" endtime="20230717 18:58:15.672"/>
</kw>
<msg timestamp="20230717 18:58:15.672" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:58:15.659" endtime="20230717 18:58:15.672"/>
</kw>
<msg timestamp="20230717 18:58:15.672" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20230717 18:58:15.658" endtime="20230717 18:58:15.672"/>
</kw>
<msg timestamp="20230717 18:58:15.672" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230717 18:58:15.658" endtime="20230717 18:58:15.672"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230717 18:58:15.673" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230717 18:58:15.673" endtime="20230717 18:58:15.673"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:58:15.680" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:58:15.749" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:58:15.749" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 18:58:15.676" endtime="20230717 18:58:15.749"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:58:15.751" level="INFO"/>
<status status="PASS" starttime="20230717 18:58:15.750" endtime="20230717 18:58:15.751"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:58:15.752" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:58:15.752" endtime="20230717 18:58:15.752"/>
</kw>
<status status="PASS" starttime="20230717 18:58:15.675" endtime="20230717 18:58:15.753"/>
</kw>
<msg timestamp="20230717 18:58:15.753" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:58:15.675" endtime="20230717 18:58:15.753"/>
</kw>
<status status="PASS" starttime="20230717 18:58:15.674" endtime="20230717 18:58:15.753"/>
</kw>
<status status="PASS" starttime="20230717 18:58:15.674" endtime="20230717 18:58:15.753"/>
</kw>
<status status="PASS" starttime="20230717 18:58:15.657" endtime="20230717 18:58:15.753"/>
</kw>
<status status="PASS" starttime="20230717 18:58:15.656" endtime="20230717 18:58:15.753"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:58:15.760" level="INFO">Running command 'ozone sh bucket link 33192-source/bucket1 33192-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:58:23.906" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:58:23.906" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 18:58:15.756" endtime="20230717 18:58:23.906"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:58:23.908" level="INFO"/>
<status status="PASS" starttime="20230717 18:58:23.907" endtime="20230717 18:58:23.908"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:58:23.909" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:58:23.908" endtime="20230717 18:58:23.909"/>
</kw>
<status status="PASS" starttime="20230717 18:58:15.755" endtime="20230717 18:58:23.910"/>
</kw>
<msg timestamp="20230717 18:58:23.910" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:58:15.755" endtime="20230717 18:58:23.910"/>
</kw>
<status status="PASS" starttime="20230717 18:58:15.754" endtime="20230717 18:58:23.910"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:58:23.916" level="INFO">Running command 'ozone sh bucket create 33192-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:58:31.047" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:58:31.047" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 18:58:23.912" endtime="20230717 18:58:31.047"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:58:31.049" level="INFO"/>
<status status="PASS" starttime="20230717 18:58:31.048" endtime="20230717 18:58:31.049"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:58:31.050" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:58:31.050" endtime="20230717 18:58:31.050"/>
</kw>
<status status="PASS" starttime="20230717 18:58:23.911" endtime="20230717 18:58:31.051"/>
</kw>
<msg timestamp="20230717 18:58:31.051" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:58:23.911" endtime="20230717 18:58:31.051"/>
</kw>
<status status="PASS" starttime="20230717 18:58:23.910" endtime="20230717 18:58:31.051"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:58:31.062" level="INFO">Running command 'ozone sh key put 33192-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:58:41.736" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:58:41.736" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 18:58:31.053" endtime="20230717 18:58:41.736"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:58:41.738" level="INFO"/>
<status status="PASS" starttime="20230717 18:58:41.737" endtime="20230717 18:58:41.738"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:58:41.739" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:58:41.738" endtime="20230717 18:58:41.739"/>
</kw>
<status status="PASS" starttime="20230717 18:58:31.053" endtime="20230717 18:58:41.739"/>
</kw>
<msg timestamp="20230717 18:58:41.739" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:58:31.052" endtime="20230717 18:58:41.739"/>
</kw>
<status status="PASS" starttime="20230717 18:58:31.051" endtime="20230717 18:58:41.739"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230717 18:58:41.742" level="INFO">${postfix} = 99908</msg>
<status status="PASS" starttime="20230717 18:58:41.741" endtime="20230717 18:58:41.742"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230717 18:58:41.742" level="INFO">${tmpfile} = /tmp/tempkey-99908</msg>
<status status="PASS" starttime="20230717 18:58:41.742" endtime="20230717 18:58:41.743"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:58:41.747" level="INFO">Running command 'ozone sh key get 33192-target/link1/key1 /tmp/tempkey-99908 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:58:51.147" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:58:51.147" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 18:58:41.744" endtime="20230717 18:58:51.147"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:58:51.149" level="INFO"/>
<status status="PASS" starttime="20230717 18:58:51.148" endtime="20230717 18:58:51.149"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:58:51.149" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:58:51.149" endtime="20230717 18:58:51.150"/>
</kw>
<status status="PASS" starttime="20230717 18:58:41.744" endtime="20230717 18:58:51.150"/>
</kw>
<msg timestamp="20230717 18:58:51.150" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:58:41.743" endtime="20230717 18:58:51.150"/>
</kw>
<status status="PASS" starttime="20230717 18:58:41.743" endtime="20230717 18:58:51.150"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20230717 18:58:51.155" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-99908 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:58:51.161" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20230717 18:58:51.151" endtime="20230717 18:58:51.161"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:58:51.169" level="INFO">Running command 'rm -f /tmp/tempkey-99908 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:58:51.173" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:58:51.173" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 18:58:51.165" endtime="20230717 18:58:51.173"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:58:51.175" level="INFO"/>
<status status="PASS" starttime="20230717 18:58:51.174" endtime="20230717 18:58:51.175"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:58:51.176" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:58:51.175" endtime="20230717 18:58:51.176"/>
</kw>
<status status="PASS" starttime="20230717 18:58:51.164" endtime="20230717 18:58:51.176"/>
</kw>
<msg timestamp="20230717 18:58:51.176" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:58:51.163" endtime="20230717 18:58:51.176"/>
</kw>
<status status="PASS" starttime="20230717 18:58:51.162" endtime="20230717 18:58:51.177"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230717 18:58:51.177" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20230717 18:58:51.177" endtime="20230717 18:58:51.177"/>
</kw>
<msg timestamp="20230717 18:58:51.178" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20230717 18:58:41.740" endtime="20230717 18:58:51.178"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230717 18:58:51.178" endtime="20230717 18:58:51.178"/>
</kw>
<status status="PASS" starttime="20230717 18:58:41.740" endtime="20230717 18:58:51.178"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20230717 18:58:15.655" endtime="20230717 18:58:51.179"/>
</test>
<test id="s1-s7-t3" name="Key read passthrough" line="105">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:58:51.189" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:58:51.194" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:58:51.195" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20230717 18:58:51.185" endtime="20230717 18:58:51.195"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:58:51.196" level="INFO">s3g</msg>
<status status="PASS" starttime="20230717 18:58:51.195" endtime="20230717 18:58:51.196"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:58:51.197" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:58:51.196" endtime="20230717 18:58:51.197"/>
</kw>
<status status="PASS" starttime="20230717 18:58:51.184" endtime="20230717 18:58:51.198"/>
</kw>
<msg timestamp="20230717 18:58:51.198" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:58:51.184" endtime="20230717 18:58:51.198"/>
</kw>
<msg timestamp="20230717 18:58:51.198" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20230717 18:58:51.183" endtime="20230717 18:58:51.198"/>
</kw>
<msg timestamp="20230717 18:58:51.199" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230717 18:58:51.183" endtime="20230717 18:58:51.199"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230717 18:58:51.200" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230717 18:58:51.199" endtime="20230717 18:58:51.200"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:58:51.209" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:58:51.259" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:58:51.260" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 18:58:51.205" endtime="20230717 18:58:51.260"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:58:51.262" level="INFO"/>
<status status="PASS" starttime="20230717 18:58:51.260" endtime="20230717 18:58:51.262"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:58:51.263" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:58:51.262" endtime="20230717 18:58:51.263"/>
</kw>
<status status="PASS" starttime="20230717 18:58:51.204" endtime="20230717 18:58:51.264"/>
</kw>
<msg timestamp="20230717 18:58:51.264" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:58:51.204" endtime="20230717 18:58:51.264"/>
</kw>
<status status="PASS" starttime="20230717 18:58:51.203" endtime="20230717 18:58:51.264"/>
</kw>
<status status="PASS" starttime="20230717 18:58:51.201" endtime="20230717 18:58:51.264"/>
</kw>
<status status="PASS" starttime="20230717 18:58:51.182" endtime="20230717 18:58:51.264"/>
</kw>
<status status="PASS" starttime="20230717 18:58:51.182" endtime="20230717 18:58:51.265"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:58:51.273" level="INFO">Running command 'ozone sh key put 33192-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:59:02.561" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:59:02.562" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 18:58:51.267" endtime="20230717 18:59:02.562"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:59:02.564" level="INFO"/>
<status status="PASS" starttime="20230717 18:59:02.563" endtime="20230717 18:59:02.564"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:59:02.566" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:59:02.565" endtime="20230717 18:59:02.566"/>
</kw>
<status status="PASS" starttime="20230717 18:58:51.267" endtime="20230717 18:59:02.567"/>
</kw>
<msg timestamp="20230717 18:59:02.567" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:58:51.266" endtime="20230717 18:59:02.567"/>
</kw>
<status status="PASS" starttime="20230717 18:58:51.265" endtime="20230717 18:59:02.568"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230717 18:59:02.572" level="INFO">${postfix} = 27136</msg>
<status status="PASS" starttime="20230717 18:59:02.571" endtime="20230717 18:59:02.572"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230717 18:59:02.573" level="INFO">${tmpfile} = /tmp/tempkey-27136</msg>
<status status="PASS" starttime="20230717 18:59:02.572" endtime="20230717 18:59:02.573"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:59:02.587" level="INFO">Running command 'ozone sh key get 33192-source/bucket1/key2 /tmp/tempkey-27136 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:59:13.267" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:59:13.267" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 18:59:02.577" endtime="20230717 18:59:13.267"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:59:13.269" level="INFO"/>
<status status="PASS" starttime="20230717 18:59:13.268" endtime="20230717 18:59:13.269"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:59:13.270" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:59:13.270" endtime="20230717 18:59:13.271"/>
</kw>
<status status="PASS" starttime="20230717 18:59:02.576" endtime="20230717 18:59:13.271"/>
</kw>
<msg timestamp="20230717 18:59:13.271" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:59:02.575" endtime="20230717 18:59:13.271"/>
</kw>
<status status="PASS" starttime="20230717 18:59:02.574" endtime="20230717 18:59:13.272"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20230717 18:59:13.276" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/tempkey-27136 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:59:13.280" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20230717 18:59:13.272" endtime="20230717 18:59:13.280"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:59:13.286" level="INFO">Running command 'rm -f /tmp/tempkey-27136 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:59:13.289" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:59:13.289" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 18:59:13.283" endtime="20230717 18:59:13.289"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:59:13.290" level="INFO"/>
<status status="PASS" starttime="20230717 18:59:13.289" endtime="20230717 18:59:13.290"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:59:13.291" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:59:13.291" endtime="20230717 18:59:13.291"/>
</kw>
<status status="PASS" starttime="20230717 18:59:13.282" endtime="20230717 18:59:13.291"/>
</kw>
<msg timestamp="20230717 18:59:13.291" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:59:13.281" endtime="20230717 18:59:13.292"/>
</kw>
<status status="PASS" starttime="20230717 18:59:13.280" endtime="20230717 18:59:13.292"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230717 18:59:13.293" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20230717 18:59:13.292" endtime="20230717 18:59:13.293"/>
</kw>
<msg timestamp="20230717 18:59:13.293" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20230717 18:59:02.569" endtime="20230717 18:59:13.293"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230717 18:59:13.293" endtime="20230717 18:59:13.294"/>
</kw>
<status status="PASS" starttime="20230717 18:59:02.568" endtime="20230717 18:59:13.294"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20230717 18:58:51.180" endtime="20230717 18:59:13.294"/>
</test>
<test id="s1-s7-t4" name="Key list passthrough" line="109">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:59:13.303" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:59:13.307" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:59:13.307" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20230717 18:59:13.300" endtime="20230717 18:59:13.308"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:59:13.309" level="INFO">s3g</msg>
<status status="PASS" starttime="20230717 18:59:13.308" endtime="20230717 18:59:13.309"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:59:13.309" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:59:13.309" endtime="20230717 18:59:13.310"/>
</kw>
<status status="PASS" starttime="20230717 18:59:13.299" endtime="20230717 18:59:13.310"/>
</kw>
<msg timestamp="20230717 18:59:13.310" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:59:13.299" endtime="20230717 18:59:13.310"/>
</kw>
<msg timestamp="20230717 18:59:13.310" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20230717 18:59:13.299" endtime="20230717 18:59:13.310"/>
</kw>
<msg timestamp="20230717 18:59:13.311" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230717 18:59:13.298" endtime="20230717 18:59:13.311"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230717 18:59:13.311" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230717 18:59:13.311" endtime="20230717 18:59:13.312"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:59:13.317" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:59:13.394" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:59:13.394" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 18:59:13.314" endtime="20230717 18:59:13.394"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:59:13.396" level="INFO"/>
<status status="PASS" starttime="20230717 18:59:13.395" endtime="20230717 18:59:13.396"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:59:13.397" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:59:13.397" endtime="20230717 18:59:13.397"/>
</kw>
<status status="PASS" starttime="20230717 18:59:13.313" endtime="20230717 18:59:13.398"/>
</kw>
<msg timestamp="20230717 18:59:13.398" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:59:13.313" endtime="20230717 18:59:13.398"/>
</kw>
<status status="PASS" starttime="20230717 18:59:13.312" endtime="20230717 18:59:13.398"/>
</kw>
<status status="PASS" starttime="20230717 18:59:13.312" endtime="20230717 18:59:13.398"/>
</kw>
<status status="PASS" starttime="20230717 18:59:13.297" endtime="20230717 18:59:13.398"/>
</kw>
<status status="PASS" starttime="20230717 18:59:13.297" endtime="20230717 18:59:13.398"/>
</kw>
<kw name="Execute" library="os">
<var>${target_list}</var>
<arg>ozone sh key list ${target}/link1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:59:13.404" level="INFO">Running command 'ozone sh key list 33192-target/link1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:59:21.542" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:59:21.542" level="INFO">${output} = key1
key2</msg>
<status status="PASS" starttime="20230717 18:59:13.400" endtime="20230717 18:59:21.542"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:59:21.544" level="INFO">key1
key2</msg>
<status status="PASS" starttime="20230717 18:59:21.543" endtime="20230717 18:59:21.544"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:59:21.545" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:59:21.545" endtime="20230717 18:59:21.545"/>
</kw>
<status status="PASS" starttime="20230717 18:59:13.400" endtime="20230717 18:59:21.546"/>
</kw>
<msg timestamp="20230717 18:59:21.546" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:59:13.399" endtime="20230717 18:59:21.546"/>
</kw>
<msg timestamp="20230717 18:59:21.546" level="INFO">${target_list} = key1
key2</msg>
<status status="PASS" starttime="20230717 18:59:13.399" endtime="20230717 18:59:21.546"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:59:21.553" level="INFO">Running command 'ozone sh key list 33192-source/bucket1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:59:30.009" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:59:30.009" level="INFO">${output} = key1
key2</msg>
<status status="PASS" starttime="20230717 18:59:21.549" endtime="20230717 18:59:30.009"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:59:30.011" level="INFO">key1
key2</msg>
<status status="PASS" starttime="20230717 18:59:30.010" endtime="20230717 18:59:30.011"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:59:30.012" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:59:30.012" endtime="20230717 18:59:30.012"/>
</kw>
<status status="PASS" starttime="20230717 18:59:21.548" endtime="20230717 18:59:30.013"/>
</kw>
<msg timestamp="20230717 18:59:30.013" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:59:21.548" endtime="20230717 18:59:30.013"/>
</kw>
<msg timestamp="20230717 18:59:30.013" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" starttime="20230717 18:59:21.547" endtime="20230717 18:59:30.013"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${target_list}</arg>
<arg>${source_list}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230717 18:59:30.014" endtime="20230717 18:59:30.014"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 18:59:30.014" endtime="20230717 18:59:30.015"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 18:59:30.015" endtime="20230717 18:59:30.016"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20230717 18:59:13.296" endtime="20230717 18:59:30.016"/>
</test>
<test id="s1-s7-t5" name="Key delete passthrough" line="116">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:59:30.026" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:59:30.031" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:59:30.031" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20230717 18:59:30.022" endtime="20230717 18:59:30.031"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:59:30.033" level="INFO">s3g</msg>
<status status="PASS" starttime="20230717 18:59:30.032" endtime="20230717 18:59:30.033"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:59:30.034" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:59:30.033" endtime="20230717 18:59:30.034"/>
</kw>
<status status="PASS" starttime="20230717 18:59:30.021" endtime="20230717 18:59:30.034"/>
</kw>
<msg timestamp="20230717 18:59:30.034" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:59:30.021" endtime="20230717 18:59:30.035"/>
</kw>
<msg timestamp="20230717 18:59:30.035" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20230717 18:59:30.020" endtime="20230717 18:59:30.035"/>
</kw>
<msg timestamp="20230717 18:59:30.035" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230717 18:59:30.020" endtime="20230717 18:59:30.035"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230717 18:59:30.036" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230717 18:59:30.036" endtime="20230717 18:59:30.036"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:59:30.043" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:59:30.097" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:59:30.098" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 18:59:30.039" endtime="20230717 18:59:30.098"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:59:30.100" level="INFO"/>
<status status="PASS" starttime="20230717 18:59:30.099" endtime="20230717 18:59:30.100"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:59:30.101" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:59:30.100" endtime="20230717 18:59:30.101"/>
</kw>
<status status="PASS" starttime="20230717 18:59:30.038" endtime="20230717 18:59:30.101"/>
</kw>
<msg timestamp="20230717 18:59:30.101" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:59:30.038" endtime="20230717 18:59:30.101"/>
</kw>
<status status="PASS" starttime="20230717 18:59:30.037" endtime="20230717 18:59:30.102"/>
</kw>
<status status="PASS" starttime="20230717 18:59:30.037" endtime="20230717 18:59:30.102"/>
</kw>
<status status="PASS" starttime="20230717 18:59:30.019" endtime="20230717 18:59:30.102"/>
</kw>
<status status="PASS" starttime="20230717 18:59:30.019" endtime="20230717 18:59:30.102"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete --skipTrash ${target}/link1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:59:30.109" level="INFO">Running command 'ozone sh key delete --skipTrash 33192-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:59:38.482" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:59:38.482" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 18:59:30.105" endtime="20230717 18:59:38.482"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:59:38.484" level="INFO"/>
<status status="PASS" starttime="20230717 18:59:38.483" endtime="20230717 18:59:38.484"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:59:38.485" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:59:38.484" endtime="20230717 18:59:38.485"/>
</kw>
<status status="PASS" starttime="20230717 18:59:30.104" endtime="20230717 18:59:38.485"/>
</kw>
<msg timestamp="20230717 18:59:38.485" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:59:30.103" endtime="20230717 18:59:38.485"/>
</kw>
<status status="PASS" starttime="20230717 18:59:30.103" endtime="20230717 18:59:38.486"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:59:38.491" level="INFO">Running command 'ozone sh key list 33192-source/bucket1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:59:46.898" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:59:46.898" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20230717 18:59:38.487" endtime="20230717 18:59:46.898"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:59:46.900" level="INFO">key1</msg>
<status status="PASS" starttime="20230717 18:59:46.899" endtime="20230717 18:59:46.900"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:59:46.901" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:59:46.900" endtime="20230717 18:59:46.901"/>
</kw>
<status status="PASS" starttime="20230717 18:59:38.487" endtime="20230717 18:59:46.901"/>
</kw>
<msg timestamp="20230717 18:59:46.901" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:59:38.486" endtime="20230717 18:59:46.901"/>
</kw>
<msg timestamp="20230717 18:59:46.902" level="INFO">${source_list} = key1</msg>
<status status="PASS" starttime="20230717 18:59:38.486" endtime="20230717 18:59:46.902"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 18:59:46.902" endtime="20230717 18:59:46.902"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20230717 18:59:30.018" endtime="20230717 18:59:46.903"/>
</test>
<test id="s1-s7-t6" name="Bucket list contains links" line="121">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:59:46.912" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:59:46.917" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:59:46.918" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20230717 18:59:46.908" endtime="20230717 18:59:46.918"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:59:46.920" level="INFO">s3g</msg>
<status status="PASS" starttime="20230717 18:59:46.918" endtime="20230717 18:59:46.920"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:59:46.921" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:59:46.920" endtime="20230717 18:59:46.921"/>
</kw>
<status status="PASS" starttime="20230717 18:59:46.908" endtime="20230717 18:59:46.921"/>
</kw>
<msg timestamp="20230717 18:59:46.921" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:59:46.907" endtime="20230717 18:59:46.921"/>
</kw>
<msg timestamp="20230717 18:59:46.922" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20230717 18:59:46.906" endtime="20230717 18:59:46.922"/>
</kw>
<msg timestamp="20230717 18:59:46.922" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230717 18:59:46.906" endtime="20230717 18:59:46.922"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230717 18:59:46.923" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230717 18:59:46.922" endtime="20230717 18:59:46.923"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:59:46.929" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:59:46.989" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:59:46.989" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 18:59:46.926" endtime="20230717 18:59:46.989"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:59:46.991" level="INFO"/>
<status status="PASS" starttime="20230717 18:59:46.990" endtime="20230717 18:59:46.991"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:59:46.992" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:59:46.991" endtime="20230717 18:59:46.992"/>
</kw>
<status status="PASS" starttime="20230717 18:59:46.925" endtime="20230717 18:59:46.992"/>
</kw>
<msg timestamp="20230717 18:59:46.992" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:59:46.925" endtime="20230717 18:59:46.993"/>
</kw>
<status status="PASS" starttime="20230717 18:59:46.924" endtime="20230717 18:59:46.993"/>
</kw>
<status status="PASS" starttime="20230717 18:59:46.923" endtime="20230717 18:59:46.993"/>
</kw>
<status status="PASS" starttime="20230717 18:59:46.905" endtime="20230717 18:59:46.993"/>
</kw>
<status status="PASS" starttime="20230717 18:59:46.904" endtime="20230717 18:59:46.993"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:59:46.999" level="INFO">Running command 'ozone sh bucket list 33192-target 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:59:55.056" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:59:55.057" level="INFO">${output} = [ {
  "volumeName" : "33192-target",
  "bucketName" : "dangling-link",
  "sourceVolume" : "33192-source",
  "sourceBucket" : "no-such-bucket",
  "creationTime" : "2023-07-17T18:58:08.360Z",
  "modific...</msg>
<status status="PASS" starttime="20230717 18:59:46.995" endtime="20230717 18:59:55.057"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:59:55.059" level="INFO">[ {
  "volumeName" : "33192-target",
  "bucketName" : "dangling-link",
  "sourceVolume" : "33192-source",
  "sourceBucket" : "no-such-bucket",
  "creationTime" : "2023-07-17T18:58:08.360Z",
  "modificationTime" : "2023-07-17T18:58:08.360Z",
  "owner" : "testuser"
}, {
  "volumeName" : "33192-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "33192-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2023-07-17T18:57:23.874Z",
  "modificationTime" : "2023-07-17T18:57:23.874Z",
  "owner" : "testuser"
}, {
  "volumeName" : "33192-target",
  "bucketName" : "link1",
  "sourceVolume" : "33192-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2023-07-17T18:58:23.748Z",
  "modificationTime" : "2023-07-17T18:58:23.748Z",
  "owner" : "testuser"
}, {
  "volumeName" : "33192-target",
  "bucketName" : "readable-link",
  "sourceVolume" : "33192-source",
  "sourceBucket" : "readable-bucket",
  "creationTime" : "2023-07-17T18:57:39.001Z",
  "modificationTime" : "2023-07-17T18:57:39.001Z",
  "owner" : "testuser"
}, {
  "volumeName" : "33192-target",
  "bucketName" : "readable-link2",
  "sourceVolume" : "33192-source",
  "sourceBucket" : "readable-bucket",
  "creationTime" : "2023-07-17T18:57:46.044Z",
  "modificationTime" : "2023-07-17T18:57:46.044Z",
  "owner" : "testuser"
} ]</msg>
<status status="PASS" starttime="20230717 18:59:55.058" endtime="20230717 18:59:55.059"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:59:55.060" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:59:55.059" endtime="20230717 18:59:55.060"/>
</kw>
<status status="PASS" starttime="20230717 18:59:46.995" endtime="20230717 18:59:55.060"/>
</kw>
<msg timestamp="20230717 18:59:55.060" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:59:46.994" endtime="20230717 18:59:55.060"/>
</kw>
<msg timestamp="20230717 18:59:55.060" level="INFO">${result} = [ {
  "volumeName" : "33192-target",
  "bucketName" : "dangling-link",
  "sourceVolume" : "33192-source",
  "sourceBucket" : "no-such-bucket",
  "creationTime" : "2023-07-17T18:58:08.360Z",
  "modific...</msg>
<status status="PASS" starttime="20230717 18:59:46.993" endtime="20230717 18:59:55.060"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 18:59:55.061" endtime="20230717 18:59:55.061"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dangling-link</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 18:59:55.062" endtime="20230717 18:59:55.062"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20230717 18:59:46.903" endtime="20230717 18:59:55.062"/>
</test>
<test id="s1-s7-t7" name="Bucket info shows source" line="126">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:59:55.074" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:59:55.080" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:59:55.081" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20230717 18:59:55.070" endtime="20230717 18:59:55.081"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:59:55.083" level="INFO">s3g</msg>
<status status="PASS" starttime="20230717 18:59:55.082" endtime="20230717 18:59:55.083"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:59:55.084" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:59:55.083" endtime="20230717 18:59:55.084"/>
</kw>
<status status="PASS" starttime="20230717 18:59:55.069" endtime="20230717 18:59:55.084"/>
</kw>
<msg timestamp="20230717 18:59:55.084" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:59:55.068" endtime="20230717 18:59:55.084"/>
</kw>
<msg timestamp="20230717 18:59:55.085" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20230717 18:59:55.067" endtime="20230717 18:59:55.085"/>
</kw>
<msg timestamp="20230717 18:59:55.085" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230717 18:59:55.067" endtime="20230717 18:59:55.085"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230717 18:59:55.086" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230717 18:59:55.086" endtime="20230717 18:59:55.086"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:59:55.093" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:59:55.114" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:59:55.114" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 18:59:55.089" endtime="20230717 18:59:55.115"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:59:55.117" level="INFO"/>
<status status="PASS" starttime="20230717 18:59:55.116" endtime="20230717 18:59:55.117"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:59:55.118" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:59:55.117" endtime="20230717 18:59:55.118"/>
</kw>
<status status="PASS" starttime="20230717 18:59:55.088" endtime="20230717 18:59:55.118"/>
</kw>
<msg timestamp="20230717 18:59:55.118" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:59:55.088" endtime="20230717 18:59:55.119"/>
</kw>
<status status="PASS" starttime="20230717 18:59:55.087" endtime="20230717 18:59:55.119"/>
</kw>
<status status="PASS" starttime="20230717 18:59:55.087" endtime="20230717 18:59:55.119"/>
</kw>
<status status="PASS" starttime="20230717 18:59:55.066" endtime="20230717 18:59:55.119"/>
</kw>
<status status="PASS" starttime="20230717 18:59:55.065" endtime="20230717 18:59:55.119"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:59:55.126" level="INFO">Running command 'ozone sh bucket info 33192-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:00:03.541" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:00:03.541" level="INFO">${output} = {
  "volumeName" : "33192-target",
  "bucketName" : "link1",
  "sourceVolume" : "33192-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2023-07-17T18:58:23.748Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20230717 18:59:55.121" endtime="20230717 19:00:03.541"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:00:03.543" level="INFO">{
  "volumeName" : "33192-target",
  "bucketName" : "link1",
  "sourceVolume" : "33192-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2023-07-17T18:58:23.748Z",
  "modificationTime" : "2023-07-17T18:58:23.748Z",
  "owner" : "testuser"
}</msg>
<status status="PASS" starttime="20230717 19:00:03.542" endtime="20230717 19:00:03.543"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:00:03.544" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:00:03.543" endtime="20230717 19:00:03.544"/>
</kw>
<status status="PASS" starttime="20230717 18:59:55.121" endtime="20230717 19:00:03.544"/>
</kw>
<msg timestamp="20230717 19:00:03.544" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:59:55.120" endtime="20230717 19:00:03.544"/>
</kw>
<msg timestamp="20230717 19:00:03.544" level="INFO">${result} = {
  "volumeName" : "33192-target",
  "bucketName" : "link1",
  "sourceVolume" : "33192-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2023-07-17T18:58:23.748Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20230717 18:59:55.119" endtime="20230717 19:00:03.545"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${source}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:00:03.545" endtime="20230717 19:00:03.545"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bucket1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:00:03.545" endtime="20230717 19:00:03.546"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${target}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:00:03.546" endtime="20230717 19:00:03.546"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:00:03.547" endtime="20230717 19:00:03.547"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>modificationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:00:03.547" endtime="20230717 19:00:03.548"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:00:03.548" endtime="20230717 19:00:03.548"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>metadata</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:00:03.549" endtime="20230717 19:00:03.549"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20230717 18:59:55.064" endtime="20230717 19:00:03.549"/>
</test>
<test id="s1-s7-t8" name="Source and target bucket have different ACLs" line="136">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:00:03.578" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:00:03.583" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:00:03.583" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20230717 19:00:03.574" endtime="20230717 19:00:03.583"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:00:03.585" level="INFO">s3g</msg>
<status status="PASS" starttime="20230717 19:00:03.584" endtime="20230717 19:00:03.585"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:00:03.587" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:00:03.586" endtime="20230717 19:00:03.587"/>
</kw>
<status status="PASS" starttime="20230717 19:00:03.557" endtime="20230717 19:00:03.587"/>
</kw>
<msg timestamp="20230717 19:00:03.587" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:00:03.556" endtime="20230717 19:00:03.587"/>
</kw>
<msg timestamp="20230717 19:00:03.588" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20230717 19:00:03.556" endtime="20230717 19:00:03.588"/>
</kw>
<msg timestamp="20230717 19:00:03.588" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230717 19:00:03.556" endtime="20230717 19:00:03.588"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230717 19:00:03.589" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230717 19:00:03.589" endtime="20230717 19:00:03.589"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:00:03.597" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:00:03.632" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:00:03.632" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:00:03.592" endtime="20230717 19:00:03.632"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:00:03.634" level="INFO"/>
<status status="PASS" starttime="20230717 19:00:03.633" endtime="20230717 19:00:03.634"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:00:03.635" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:00:03.634" endtime="20230717 19:00:03.635"/>
</kw>
<status status="PASS" starttime="20230717 19:00:03.591" endtime="20230717 19:00:03.635"/>
</kw>
<msg timestamp="20230717 19:00:03.636" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:00:03.591" endtime="20230717 19:00:03.636"/>
</kw>
<status status="PASS" starttime="20230717 19:00:03.590" endtime="20230717 19:00:03.636"/>
</kw>
<status status="PASS" starttime="20230717 19:00:03.589" endtime="20230717 19:00:03.636"/>
</kw>
<status status="PASS" starttime="20230717 19:00:03.555" endtime="20230717 19:00:03.636"/>
</kw>
<status status="PASS" starttime="20230717 19:00:03.554" endtime="20230717 19:00:03.636"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:00:03.644" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 33192-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:00:11.529" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:00:11.529" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230717 19:00:03.638" endtime="20230717 19:00:11.529"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:00:11.531" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230717 19:00:11.529" endtime="20230717 19:00:11.531"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:00:11.532" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:00:11.531" endtime="20230717 19:00:11.532"/>
</kw>
<status status="PASS" starttime="20230717 19:00:03.638" endtime="20230717 19:00:11.532"/>
</kw>
<msg timestamp="20230717 19:00:11.532" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:00:03.637" endtime="20230717 19:00:11.532"/>
</kw>
<status status="PASS" starttime="20230717 19:00:03.637" endtime="20230717 19:00:11.533"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:00:11.541" level="INFO">Running command 'ozone sh bucket getacl 33192-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:00:20.154" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:00:20.154" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:00:11.537" endtime="20230717 19:00:20.154"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:00:20.157" level="INFO"/>
<status status="PASS" starttime="20230717 19:00:20.155" endtime="20230717 19:00:20.157"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:00:20.158" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:00:20.157" endtime="20230717 19:00:20.158"/>
</kw>
<status status="PASS" starttime="20230717 19:00:11.536" endtime="20230717 19:00:20.159"/>
</kw>
<msg timestamp="20230717 19:00:20.159" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:00:11.536" endtime="20230717 19:00:20.159"/>
</kw>
<msg timestamp="20230717 19:00:20.159" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20230717 19:00:11.535" endtime="20230717 19:00:20.159"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230717 19:00:20.159" endtime="20230717 19:00:20.160"/>
</kw>
<status status="PASS" starttime="20230717 19:00:11.533" endtime="20230717 19:00:20.160"/>
</kw>
<kw name="Verify Bucket ACL">
<arg>--source=false</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh bucket getacl ${source_option} ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:00:20.169" level="INFO">Running command 'ozone sh bucket getacl --source=false 33192-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:00:28.470" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:00:28.470" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:00:20.165" endtime="20230717 19:00:28.470"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:00:28.472" level="INFO"/>
<status status="PASS" starttime="20230717 19:00:28.471" endtime="20230717 19:00:28.472"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:00:28.473" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:00:28.473" endtime="20230717 19:00:28.474"/>
</kw>
<status status="PASS" starttime="20230717 19:00:20.164" endtime="20230717 19:00:28.474"/>
</kw>
<msg timestamp="20230717 19:00:28.474" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:00:20.164" endtime="20230717 19:00:28.474"/>
</kw>
<msg timestamp="20230717 19:00:28.474" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20230717 19:00:20.163" endtime="20230717 19:00:28.474"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230717 19:00:28.474" endtime="20230717 19:00:28.475"/>
</kw>
<status status="PASS" starttime="20230717 19:00:20.161" endtime="20230717 19:00:28.475"/>
</kw>
<kw name="Verify Bucket ACL">
<arg>--source</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh bucket getacl ${source_option} ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:00:28.488" level="INFO">Running command 'ozone sh bucket getacl --source 33192-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:00:37.021" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:00:37.021" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20230717 19:00:28.484" endtime="20230717 19:00:37.021"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:00:37.023" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20230717 19:00:37.022" endtime="20230717 19:00:37.023"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:00:37.024" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:00:37.024" endtime="20230717 19:00:37.024"/>
</kw>
<status status="PASS" starttime="20230717 19:00:28.483" endtime="20230717 19:00:37.025"/>
</kw>
<msg timestamp="20230717 19:00:37.025" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:00:28.478" endtime="20230717 19:00:37.025"/>
</kw>
<msg timestamp="20230717 19:00:37.025" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20230717 19:00:28.477" endtime="20230717 19:00:37.025"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230717 19:00:37.025" endtime="20230717 19:00:37.026"/>
</kw>
<status status="PASS" starttime="20230717 19:00:28.476" endtime="20230717 19:00:37.026"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:00:37.034" level="INFO">Running command 'ozone sh bucket getacl 33192-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:00:44.969" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:00:44.969" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20230717 19:00:37.029" endtime="20230717 19:00:44.969"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:00:44.971" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20230717 19:00:44.970" endtime="20230717 19:00:44.971"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:00:44.972" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:00:44.971" endtime="20230717 19:00:44.972"/>
</kw>
<status status="PASS" starttime="20230717 19:00:37.029" endtime="20230717 19:00:44.972"/>
</kw>
<msg timestamp="20230717 19:00:44.973" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:00:37.028" endtime="20230717 19:00:44.973"/>
</kw>
<msg timestamp="20230717 19:00:44.973" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20230717 19:00:37.027" endtime="20230717 19:00:44.973"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230717 19:00:44.973" endtime="20230717 19:00:44.974"/>
</kw>
<status status="PASS" starttime="20230717 19:00:37.026" endtime="20230717 19:00:44.974"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket removeacl --acl user:user1:y ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:00:44.980" level="INFO">Running command 'ozone sh bucket removeacl --acl user:user1:y 33192-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:00:51.940" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:00:51.940" level="INFO">${output} = ACL user:user1:y[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20230717 19:00:44.976" endtime="20230717 19:00:51.940"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:00:51.942" level="INFO">ACL user:user1:y[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20230717 19:00:51.941" endtime="20230717 19:00:51.942"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:00:51.943" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:00:51.942" endtime="20230717 19:00:51.943"/>
</kw>
<status status="PASS" starttime="20230717 19:00:44.975" endtime="20230717 19:00:51.943"/>
</kw>
<msg timestamp="20230717 19:00:51.943" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:00:44.975" endtime="20230717 19:00:51.943"/>
</kw>
<status status="PASS" starttime="20230717 19:00:44.974" endtime="20230717 19:00:51.943"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:00:51.951" level="INFO">Running command 'ozone sh bucket getacl 33192-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:00:59.864" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:00:59.864" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:00:51.947" endtime="20230717 19:00:59.864"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:00:59.866" level="INFO"/>
<status status="PASS" starttime="20230717 19:00:59.865" endtime="20230717 19:00:59.866"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:00:59.867" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:00:59.866" endtime="20230717 19:00:59.867"/>
</kw>
<status status="PASS" starttime="20230717 19:00:51.947" endtime="20230717 19:00:59.868"/>
</kw>
<msg timestamp="20230717 19:00:59.868" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:00:51.946" endtime="20230717 19:00:59.868"/>
</kw>
<msg timestamp="20230717 19:00:59.868" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20230717 19:00:51.945" endtime="20230717 19:00:59.868"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230717 19:00:59.869" endtime="20230717 19:00:59.870"/>
</kw>
<status status="PASS" starttime="20230717 19:00:51.944" endtime="20230717 19:00:59.870"/>
</kw>
<kw name="Verify Bucket ACL">
<arg>--source</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh bucket getacl ${source_option} ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:00:59.877" level="INFO">Running command 'ozone sh bucket getacl --source 33192-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:01:07.558" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:01:07.558" level="INFO">${output} = READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20230717 19:00:59.873" endtime="20230717 19:01:07.558"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:01:07.560" level="INFO">READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20230717 19:01:07.559" endtime="20230717 19:01:07.560"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:01:07.561" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:01:07.560" endtime="20230717 19:01:07.561"/>
</kw>
<status status="PASS" starttime="20230717 19:00:59.872" endtime="20230717 19:01:07.562"/>
</kw>
<msg timestamp="20230717 19:01:07.562" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:00:59.872" endtime="20230717 19:01:07.562"/>
</kw>
<msg timestamp="20230717 19:01:07.562" level="INFO">${actual_acls} = READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20230717 19:00:59.871" endtime="20230717 19:01:07.562"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230717 19:01:07.562" endtime="20230717 19:01:07.563"/>
</kw>
<status status="PASS" starttime="20230717 19:00:59.870" endtime="20230717 19:01:07.564"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setacl --acl user:user1:rw ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:01:07.570" level="INFO">Running command 'ozone sh bucket setacl --acl user:user1:rw 33192-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:01:15.363" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:01:15.363" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20230717 19:01:07.566" endtime="20230717 19:01:15.363"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:01:15.364" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20230717 19:01:15.364" endtime="20230717 19:01:15.365"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:01:15.366" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:01:15.365" endtime="20230717 19:01:15.366"/>
</kw>
<status status="PASS" starttime="20230717 19:01:07.565" endtime="20230717 19:01:15.366"/>
</kw>
<msg timestamp="20230717 19:01:15.366" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:01:07.565" endtime="20230717 19:01:15.366"/>
</kw>
<status status="PASS" starttime="20230717 19:01:07.564" endtime="20230717 19:01:15.366"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:01:15.375" level="INFO">Running command 'ozone sh bucket getacl 33192-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:01:23.199" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:01:23.199" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:01:15.370" endtime="20230717 19:01:23.199"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:01:23.201" level="INFO"/>
<status status="PASS" starttime="20230717 19:01:23.200" endtime="20230717 19:01:23.201"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:01:23.202" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:01:23.201" endtime="20230717 19:01:23.202"/>
</kw>
<status status="PASS" starttime="20230717 19:01:15.370" endtime="20230717 19:01:23.202"/>
</kw>
<msg timestamp="20230717 19:01:23.202" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:01:15.369" endtime="20230717 19:01:23.203"/>
</kw>
<msg timestamp="20230717 19:01:23.203" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20230717 19:01:15.368" endtime="20230717 19:01:23.203"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230717 19:01:23.203" endtime="20230717 19:01:23.203"/>
</kw>
<status status="PASS" starttime="20230717 19:01:15.367" endtime="20230717 19:01:23.204"/>
</kw>
<kw name="Verify Bucket ACL">
<arg>--source</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh bucket getacl ${source_option} ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:01:23.210" level="INFO">Running command 'ozone sh bucket getacl --source 33192-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:01:32.042" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:01:32.042" level="INFO">${output} = READ WRITE</msg>
<status status="PASS" starttime="20230717 19:01:23.207" endtime="20230717 19:01:32.043"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:01:32.044" level="INFO">READ WRITE</msg>
<status status="PASS" starttime="20230717 19:01:32.043" endtime="20230717 19:01:32.045"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:01:32.045" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:01:32.045" endtime="20230717 19:01:32.046"/>
</kw>
<status status="PASS" starttime="20230717 19:01:23.206" endtime="20230717 19:01:32.046"/>
</kw>
<msg timestamp="20230717 19:01:32.046" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:01:23.205" endtime="20230717 19:01:32.046"/>
</kw>
<msg timestamp="20230717 19:01:32.047" level="INFO">${actual_acls} = READ WRITE</msg>
<status status="PASS" starttime="20230717 19:01:23.205" endtime="20230717 19:01:32.047"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230717 19:01:32.047" endtime="20230717 19:01:32.047"/>
</kw>
<status status="PASS" starttime="20230717 19:01:23.204" endtime="20230717 19:01:32.047"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:01:32.058" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 33192-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:01:39.415" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:01:39.415" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230717 19:01:32.049" endtime="20230717 19:01:39.415"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:01:39.417" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230717 19:01:39.416" endtime="20230717 19:01:39.418"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:01:39.419" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:01:39.418" endtime="20230717 19:01:39.419"/>
</kw>
<status status="PASS" starttime="20230717 19:01:32.049" endtime="20230717 19:01:39.420"/>
</kw>
<msg timestamp="20230717 19:01:39.420" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:01:32.048" endtime="20230717 19:01:39.420"/>
</kw>
<status status="PASS" starttime="20230717 19:01:32.048" endtime="20230717 19:01:39.420"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:01:39.429" level="INFO">Running command 'ozone sh bucket getacl 33192-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:01:47.070" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:01:47.070" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:01:39.425" endtime="20230717 19:01:47.070"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:01:47.072" level="INFO"/>
<status status="PASS" starttime="20230717 19:01:47.071" endtime="20230717 19:01:47.072"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:01:47.073" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:01:47.072" endtime="20230717 19:01:47.073"/>
</kw>
<status status="PASS" starttime="20230717 19:01:39.424" endtime="20230717 19:01:47.074"/>
</kw>
<msg timestamp="20230717 19:01:47.074" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:01:39.423" endtime="20230717 19:01:47.074"/>
</kw>
<msg timestamp="20230717 19:01:47.074" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20230717 19:01:39.422" endtime="20230717 19:01:47.074"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230717 19:01:47.074" endtime="20230717 19:01:47.075"/>
</kw>
<status status="PASS" starttime="20230717 19:01:39.420" endtime="20230717 19:01:47.075"/>
</kw>
<kw name="Verify Bucket ACL">
<arg>--source</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh bucket getacl ${source_option} ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:01:47.083" level="INFO">Running command 'ozone sh bucket getacl --source 33192-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:01:54.922" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:01:54.922" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20230717 19:01:47.079" endtime="20230717 19:01:54.922"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:01:54.924" level="INFO">READ</msg>
<status status="PASS" starttime="20230717 19:01:54.923" endtime="20230717 19:01:54.924"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:01:54.924" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:01:54.924" endtime="20230717 19:01:54.925"/>
</kw>
<status status="PASS" starttime="20230717 19:01:47.078" endtime="20230717 19:01:54.925"/>
</kw>
<msg timestamp="20230717 19:01:54.925" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:01:47.078" endtime="20230717 19:01:54.925"/>
</kw>
<msg timestamp="20230717 19:01:54.925" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20230717 19:01:47.077" endtime="20230717 19:01:54.925"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230717 19:01:54.926" endtime="20230717 19:01:54.926"/>
</kw>
<status status="PASS" starttime="20230717 19:01:47.075" endtime="20230717 19:01:54.926"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20230717 19:00:03.550" endtime="20230717 19:01:54.927"/>
</test>
<test id="s1-s7-t9" name="Source and target key have same ACLs" line="155">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:01:54.936" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:01:54.942" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:01:54.942" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20230717 19:01:54.932" endtime="20230717 19:01:54.942"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:01:54.943" level="INFO">s3g</msg>
<status status="PASS" starttime="20230717 19:01:54.942" endtime="20230717 19:01:54.943"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:01:54.944" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:01:54.944" endtime="20230717 19:01:54.944"/>
</kw>
<status status="PASS" starttime="20230717 19:01:54.931" endtime="20230717 19:01:54.945"/>
</kw>
<msg timestamp="20230717 19:01:54.945" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:01:54.931" endtime="20230717 19:01:54.945"/>
</kw>
<msg timestamp="20230717 19:01:54.945" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20230717 19:01:54.931" endtime="20230717 19:01:54.945"/>
</kw>
<msg timestamp="20230717 19:01:54.945" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230717 19:01:54.930" endtime="20230717 19:01:54.945"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230717 19:01:54.946" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230717 19:01:54.946" endtime="20230717 19:01:54.946"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:01:54.952" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:01:54.985" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:01:54.985" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:01:54.949" endtime="20230717 19:01:54.985"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:01:54.987" level="INFO"/>
<status status="PASS" starttime="20230717 19:01:54.986" endtime="20230717 19:01:54.987"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:01:54.988" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:01:54.988" endtime="20230717 19:01:54.989"/>
</kw>
<status status="PASS" starttime="20230717 19:01:54.948" endtime="20230717 19:01:54.989"/>
</kw>
<msg timestamp="20230717 19:01:54.989" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:01:54.948" endtime="20230717 19:01:54.989"/>
</kw>
<status status="PASS" starttime="20230717 19:01:54.947" endtime="20230717 19:01:54.989"/>
</kw>
<status status="PASS" starttime="20230717 19:01:54.946" endtime="20230717 19:01:54.990"/>
</kw>
<status status="PASS" starttime="20230717 19:01:54.930" endtime="20230717 19:01:54.990"/>
</kw>
<status status="PASS" starttime="20230717 19:01:54.929" endtime="20230717 19:01:54.990"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key addacl --acl user:user1:rwxy ${source}/bucket1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:01:54.996" level="INFO">Running command 'ozone sh key addacl --acl user:user1:rwxy 33192-source/bucket1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:02:02.938" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:02:02.939" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230717 19:01:54.992" endtime="20230717 19:02:02.939"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:02:02.941" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230717 19:02:02.940" endtime="20230717 19:02:02.941"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:02:02.942" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:02:02.941" endtime="20230717 19:02:02.942"/>
</kw>
<status status="PASS" starttime="20230717 19:01:54.991" endtime="20230717 19:02:02.942"/>
</kw>
<msg timestamp="20230717 19:02:02.942" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:01:54.991" endtime="20230717 19:02:02.942"/>
</kw>
<status status="PASS" starttime="20230717 19:01:54.990" endtime="20230717 19:02:02.943"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>key</arg>
<arg>${target}/link1/key1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:02:02.950" level="INFO">Running command 'ozone sh key getacl 33192-target/link1/key1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:02:10.974" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:02:10.974" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20230717 19:02:02.946" endtime="20230717 19:02:10.974"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:02:10.976" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20230717 19:02:10.975" endtime="20230717 19:02:10.976"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:02:10.977" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:02:10.977" endtime="20230717 19:02:10.977"/>
</kw>
<status status="PASS" starttime="20230717 19:02:02.945" endtime="20230717 19:02:10.978"/>
</kw>
<msg timestamp="20230717 19:02:10.978" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:02:02.945" endtime="20230717 19:02:10.978"/>
</kw>
<msg timestamp="20230717 19:02:10.978" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20230717 19:02:02.944" endtime="20230717 19:02:10.978"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230717 19:02:10.978" endtime="20230717 19:02:10.979"/>
</kw>
<status status="PASS" starttime="20230717 19:02:02.943" endtime="20230717 19:02:10.979"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>key</arg>
<arg>${source}/bucket1/key1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:02:10.986" level="INFO">Running command 'ozone sh key getacl 33192-source/bucket1/key1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:02:18.759" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:02:18.759" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20230717 19:02:10.982" endtime="20230717 19:02:18.759"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:02:18.761" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20230717 19:02:18.760" endtime="20230717 19:02:18.761"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:02:18.762" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:02:18.761" endtime="20230717 19:02:18.762"/>
</kw>
<status status="PASS" starttime="20230717 19:02:10.982" endtime="20230717 19:02:18.762"/>
</kw>
<msg timestamp="20230717 19:02:18.762" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:02:10.981" endtime="20230717 19:02:18.762"/>
</kw>
<msg timestamp="20230717 19:02:18.763" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20230717 19:02:10.980" endtime="20230717 19:02:18.763"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230717 19:02:18.763" endtime="20230717 19:02:18.763"/>
</kw>
<status status="PASS" starttime="20230717 19:02:10.979" endtime="20230717 19:02:18.763"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key removeacl --acl user:user1:y ${target}/link1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:02:18.770" level="INFO">Running command 'ozone sh key removeacl --acl user:user1:y 33192-target/link1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:02:25.765" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:02:25.766" level="INFO">${output} = ACL user:user1:y[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20230717 19:02:18.766" endtime="20230717 19:02:25.766"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:02:25.768" level="INFO">ACL user:user1:y[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20230717 19:02:25.767" endtime="20230717 19:02:25.768"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:02:25.769" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:02:25.768" endtime="20230717 19:02:25.769"/>
</kw>
<status status="PASS" starttime="20230717 19:02:18.765" endtime="20230717 19:02:25.769"/>
</kw>
<msg timestamp="20230717 19:02:25.769" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:02:18.764" endtime="20230717 19:02:25.769"/>
</kw>
<status status="PASS" starttime="20230717 19:02:18.764" endtime="20230717 19:02:25.770"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>key</arg>
<arg>${target}/link1/key1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:02:25.777" level="INFO">Running command 'ozone sh key getacl 33192-target/link1/key1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:02:33.652" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:02:33.652" level="INFO">${output} = READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20230717 19:02:25.773" endtime="20230717 19:02:33.653"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:02:33.654" level="INFO">READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20230717 19:02:33.653" endtime="20230717 19:02:33.655"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:02:33.655" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:02:33.655" endtime="20230717 19:02:33.656"/>
</kw>
<status status="PASS" starttime="20230717 19:02:25.772" endtime="20230717 19:02:33.656"/>
</kw>
<msg timestamp="20230717 19:02:33.656" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:02:25.772" endtime="20230717 19:02:33.656"/>
</kw>
<msg timestamp="20230717 19:02:33.656" level="INFO">${actual_acls} = READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20230717 19:02:25.771" endtime="20230717 19:02:33.656"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230717 19:02:33.657" endtime="20230717 19:02:33.657"/>
</kw>
<status status="PASS" starttime="20230717 19:02:25.770" endtime="20230717 19:02:33.657"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>key</arg>
<arg>${source}/bucket1/key1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:02:33.665" level="INFO">Running command 'ozone sh key getacl 33192-source/bucket1/key1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:02:40.858" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:02:40.858" level="INFO">${output} = READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20230717 19:02:33.660" endtime="20230717 19:02:40.858"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:02:40.860" level="INFO">READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20230717 19:02:40.859" endtime="20230717 19:02:40.860"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:02:40.861" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:02:40.860" endtime="20230717 19:02:40.861"/>
</kw>
<status status="PASS" starttime="20230717 19:02:33.660" endtime="20230717 19:02:40.861"/>
</kw>
<msg timestamp="20230717 19:02:40.861" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:02:33.659" endtime="20230717 19:02:40.861"/>
</kw>
<msg timestamp="20230717 19:02:40.862" level="INFO">${actual_acls} = READ WRITE READ_ACL</msg>
<status status="PASS" starttime="20230717 19:02:33.658" endtime="20230717 19:02:40.862"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230717 19:02:40.862" endtime="20230717 19:02:40.862"/>
</kw>
<status status="PASS" starttime="20230717 19:02:33.658" endtime="20230717 19:02:40.862"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key setacl --acl user:user1:rw ${source}/bucket1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:02:40.868" level="INFO">Running command 'ozone sh key setacl --acl user:user1:rw 33192-source/bucket1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:02:47.981" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:02:47.981" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20230717 19:02:40.864" endtime="20230717 19:02:47.981"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:02:47.983" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20230717 19:02:47.982" endtime="20230717 19:02:47.983"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:02:47.984" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:02:47.983" endtime="20230717 19:02:47.984"/>
</kw>
<status status="PASS" starttime="20230717 19:02:40.864" endtime="20230717 19:02:47.984"/>
</kw>
<msg timestamp="20230717 19:02:47.984" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:02:40.863" endtime="20230717 19:02:47.984"/>
</kw>
<status status="PASS" starttime="20230717 19:02:40.863" endtime="20230717 19:02:47.985"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>key</arg>
<arg>${target}/link1/key1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:02:47.992" level="INFO">Running command 'ozone sh key getacl 33192-target/link1/key1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:02:55.967" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:02:55.967" level="INFO">${output} = READ WRITE</msg>
<status status="PASS" starttime="20230717 19:02:47.988" endtime="20230717 19:02:55.967"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:02:55.969" level="INFO">READ WRITE</msg>
<status status="PASS" starttime="20230717 19:02:55.968" endtime="20230717 19:02:55.969"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:02:55.970" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:02:55.969" endtime="20230717 19:02:55.970"/>
</kw>
<status status="PASS" starttime="20230717 19:02:47.988" endtime="20230717 19:02:55.971"/>
</kw>
<msg timestamp="20230717 19:02:55.971" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:02:47.987" endtime="20230717 19:02:55.971"/>
</kw>
<msg timestamp="20230717 19:02:55.971" level="INFO">${actual_acls} = READ WRITE</msg>
<status status="PASS" starttime="20230717 19:02:47.986" endtime="20230717 19:02:55.971"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230717 19:02:55.971" endtime="20230717 19:02:55.972"/>
</kw>
<status status="PASS" starttime="20230717 19:02:47.985" endtime="20230717 19:02:55.972"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>key</arg>
<arg>${source}/bucket1/key1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:02:55.979" level="INFO">Running command 'ozone sh key getacl 33192-source/bucket1/key1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:03:03.989" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:03:03.989" level="INFO">${output} = READ WRITE</msg>
<status status="PASS" starttime="20230717 19:02:55.975" endtime="20230717 19:03:03.989"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:03:03.991" level="INFO">READ WRITE</msg>
<status status="PASS" starttime="20230717 19:03:03.990" endtime="20230717 19:03:03.991"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:03:03.992" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:03:03.991" endtime="20230717 19:03:03.992"/>
</kw>
<status status="PASS" starttime="20230717 19:02:55.974" endtime="20230717 19:03:03.992"/>
</kw>
<msg timestamp="20230717 19:03:03.992" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:02:55.974" endtime="20230717 19:03:03.993"/>
</kw>
<msg timestamp="20230717 19:03:03.993" level="INFO">${actual_acls} = READ WRITE</msg>
<status status="PASS" starttime="20230717 19:02:55.973" endtime="20230717 19:03:03.993"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230717 19:03:03.993" endtime="20230717 19:03:03.994"/>
</kw>
<status status="PASS" starttime="20230717 19:02:55.972" endtime="20230717 19:03:03.994"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key addacl --acl group:group2:r ${source}/bucket1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:03:04.000" level="INFO">Running command 'ozone sh key addacl --acl group:group2:r 33192-source/bucket1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:03:12.118" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:03:12.119" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230717 19:03:03.996" endtime="20230717 19:03:12.119"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:03:12.122" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20230717 19:03:12.120" endtime="20230717 19:03:12.122"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:03:12.123" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:03:12.122" endtime="20230717 19:03:12.123"/>
</kw>
<status status="PASS" starttime="20230717 19:03:03.995" endtime="20230717 19:03:12.124"/>
</kw>
<msg timestamp="20230717 19:03:12.125" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:03:03.995" endtime="20230717 19:03:12.125"/>
</kw>
<status status="PASS" starttime="20230717 19:03:03.994" endtime="20230717 19:03:12.125"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>key</arg>
<arg>${target}/link1/key1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:03:12.135" level="INFO">Running command 'ozone sh key getacl 33192-target/link1/key1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:03:19.934" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:03:19.934" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20230717 19:03:12.131" endtime="20230717 19:03:19.935"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:03:19.937" level="INFO">READ</msg>
<status status="PASS" starttime="20230717 19:03:19.935" endtime="20230717 19:03:19.937"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:03:19.939" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:03:19.938" endtime="20230717 19:03:19.939"/>
</kw>
<status status="PASS" starttime="20230717 19:03:12.130" endtime="20230717 19:03:19.940"/>
</kw>
<msg timestamp="20230717 19:03:19.940" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:03:12.129" endtime="20230717 19:03:19.940"/>
</kw>
<msg timestamp="20230717 19:03:19.940" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20230717 19:03:12.127" endtime="20230717 19:03:19.940"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230717 19:03:19.940" endtime="20230717 19:03:19.941"/>
</kw>
<status status="PASS" starttime="20230717 19:03:12.126" endtime="20230717 19:03:19.941"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>key</arg>
<arg>${source}/bucket1/key1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:03:19.947" level="INFO">Running command 'ozone sh key getacl 33192-source/bucket1/key1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:03:27.248" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:03:27.248" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20230717 19:03:19.944" endtime="20230717 19:03:27.248"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:03:27.250" level="INFO">READ</msg>
<status status="PASS" starttime="20230717 19:03:27.249" endtime="20230717 19:03:27.250"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:03:27.251" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:03:27.251" endtime="20230717 19:03:27.251"/>
</kw>
<status status="PASS" starttime="20230717 19:03:19.943" endtime="20230717 19:03:27.252"/>
</kw>
<msg timestamp="20230717 19:03:27.252" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:03:19.943" endtime="20230717 19:03:27.252"/>
</kw>
<msg timestamp="20230717 19:03:27.252" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20230717 19:03:19.942" endtime="20230717 19:03:27.252"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230717 19:03:27.252" endtime="20230717 19:03:27.253"/>
</kw>
<status status="PASS" starttime="20230717 19:03:19.941" endtime="20230717 19:03:27.253"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20230717 19:01:54.928" endtime="20230717 19:03:27.254"/>
</test>
<test id="s1-s7-t10" name="Buckets and links share namespace" line="170">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:03:27.268" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:03:27.275" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:03:27.285" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20230717 19:03:27.260" endtime="20230717 19:03:27.285"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:03:27.288" level="INFO">s3g</msg>
<status status="PASS" starttime="20230717 19:03:27.287" endtime="20230717 19:03:27.288"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:03:27.289" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:03:27.289" endtime="20230717 19:03:27.290"/>
</kw>
<status status="PASS" starttime="20230717 19:03:27.259" endtime="20230717 19:03:27.291"/>
</kw>
<msg timestamp="20230717 19:03:27.291" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:03:27.259" endtime="20230717 19:03:27.291"/>
</kw>
<msg timestamp="20230717 19:03:27.292" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20230717 19:03:27.258" endtime="20230717 19:03:27.292"/>
</kw>
<msg timestamp="20230717 19:03:27.292" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230717 19:03:27.258" endtime="20230717 19:03:27.292"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230717 19:03:27.294" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230717 19:03:27.293" endtime="20230717 19:03:27.294"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:03:27.305" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:03:27.344" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:03:27.345" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:03:27.299" endtime="20230717 19:03:27.345"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:03:27.347" level="INFO"/>
<status status="PASS" starttime="20230717 19:03:27.346" endtime="20230717 19:03:27.347"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:03:27.348" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:03:27.348" endtime="20230717 19:03:27.349"/>
</kw>
<status status="PASS" starttime="20230717 19:03:27.298" endtime="20230717 19:03:27.349"/>
</kw>
<msg timestamp="20230717 19:03:27.349" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:03:27.297" endtime="20230717 19:03:27.349"/>
</kw>
<status status="PASS" starttime="20230717 19:03:27.296" endtime="20230717 19:03:27.349"/>
</kw>
<status status="PASS" starttime="20230717 19:03:27.294" endtime="20230717 19:03:27.349"/>
</kw>
<status status="PASS" starttime="20230717 19:03:27.257" endtime="20230717 19:03:27.350"/>
</kw>
<status status="PASS" starttime="20230717 19:03:27.256" endtime="20230717 19:03:27.350"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:03:27.356" level="INFO">Running command 'ozone sh bucket link 33192-source/bucket2 33192-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:03:35.152" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:03:35.152" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:03:27.352" endtime="20230717 19:03:35.152"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:03:35.154" level="INFO"/>
<status status="PASS" starttime="20230717 19:03:35.153" endtime="20230717 19:03:35.155"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:03:35.155" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:03:35.155" endtime="20230717 19:03:35.156"/>
</kw>
<status status="PASS" starttime="20230717 19:03:27.351" endtime="20230717 19:03:35.156"/>
</kw>
<msg timestamp="20230717 19:03:35.156" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:03:27.351" endtime="20230717 19:03:35.156"/>
</kw>
<status status="PASS" starttime="20230717 19:03:27.350" endtime="20230717 19:03:35.156"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${target}/link2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:03:35.161" level="INFO">Running command 'ozone sh bucket create 33192-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:03:42.960" level="INFO">${rc} = 255</msg>
<msg timestamp="20230717 19:03:42.960" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20230717 19:03:35.157" endtime="20230717 19:03:42.961"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:03:42.962" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20230717 19:03:42.961" endtime="20230717 19:03:42.962"/>
</kw>
<msg timestamp="20230717 19:03:42.963" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20230717 19:03:35.157" endtime="20230717 19:03:42.963"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:03:42.963" endtime="20230717 19:03:42.963"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${target}/bucket3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:03:42.969" level="INFO">Running command 'ozone sh bucket create 33192-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:03:51.007" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:03:51.007" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:03:42.965" endtime="20230717 19:03:51.007"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:03:51.009" level="INFO"/>
<status status="PASS" starttime="20230717 19:03:51.008" endtime="20230717 19:03:51.009"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:03:51.010" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:03:51.010" endtime="20230717 19:03:51.010"/>
</kw>
<status status="PASS" starttime="20230717 19:03:42.965" endtime="20230717 19:03:51.011"/>
</kw>
<msg timestamp="20230717 19:03:51.011" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:03:42.964" endtime="20230717 19:03:51.011"/>
</kw>
<status status="PASS" starttime="20230717 19:03:42.964" endtime="20230717 19:03:51.011"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:03:51.016" level="INFO">Running command 'ozone sh bucket link 33192-source/bucket1 33192-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:03:59.377" level="INFO">${rc} = 255</msg>
<msg timestamp="20230717 19:03:59.377" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20230717 19:03:51.012" endtime="20230717 19:03:59.377"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:03:59.379" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20230717 19:03:59.378" endtime="20230717 19:03:59.379"/>
</kw>
<msg timestamp="20230717 19:03:59.379" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20230717 19:03:51.012" endtime="20230717 19:03:59.379"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:03:59.379" endtime="20230717 19:03:59.380"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20230717 19:03:27.255" endtime="20230717 19:03:59.380"/>
</test>
<test id="s1-s7-t11" name="Can follow link with read access" line="179">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:03:59.391" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:03:59.396" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:03:59.396" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20230717 19:03:59.387" endtime="20230717 19:03:59.396"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:03:59.398" level="INFO">s3g</msg>
<status status="PASS" starttime="20230717 19:03:59.397" endtime="20230717 19:03:59.398"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:03:59.399" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:03:59.398" endtime="20230717 19:03:59.400"/>
</kw>
<status status="PASS" starttime="20230717 19:03:59.386" endtime="20230717 19:03:59.400"/>
</kw>
<msg timestamp="20230717 19:03:59.400" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:03:59.385" endtime="20230717 19:03:59.401"/>
</kw>
<msg timestamp="20230717 19:03:59.401" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20230717 19:03:59.384" endtime="20230717 19:03:59.401"/>
</kw>
<msg timestamp="20230717 19:03:59.402" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230717 19:03:59.384" endtime="20230717 19:03:59.402"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230717 19:03:59.403" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230717 19:03:59.402" endtime="20230717 19:03:59.403"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:03:59.410" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:03:59.469" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:03:59.469" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:03:59.407" endtime="20230717 19:03:59.469"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:03:59.471" level="INFO"/>
<status status="PASS" starttime="20230717 19:03:59.470" endtime="20230717 19:03:59.471"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:03:59.472" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:03:59.472" endtime="20230717 19:03:59.472"/>
</kw>
<status status="PASS" starttime="20230717 19:03:59.406" endtime="20230717 19:03:59.473"/>
</kw>
<msg timestamp="20230717 19:03:59.473" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:03:59.405" endtime="20230717 19:03:59.473"/>
</kw>
<status status="PASS" starttime="20230717 19:03:59.404" endtime="20230717 19:03:59.473"/>
</kw>
<status status="PASS" starttime="20230717 19:03:59.403" endtime="20230717 19:03:59.473"/>
</kw>
<status status="PASS" starttime="20230717 19:03:59.383" endtime="20230717 19:03:59.473"/>
</kw>
<status status="PASS" starttime="20230717 19:03:59.382" endtime="20230717 19:03:59.473"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:03:59.480" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:03:59.488" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:03:59.488" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:03:59.477" endtime="20230717 19:03:59.488"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:03:59.489" level="INFO"/>
<status status="PASS" starttime="20230717 19:03:59.488" endtime="20230717 19:03:59.489"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:03:59.490" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:03:59.489" endtime="20230717 19:03:59.490"/>
</kw>
<status status="PASS" starttime="20230717 19:03:59.476" endtime="20230717 19:03:59.490"/>
</kw>
<msg timestamp="20230717 19:03:59.490" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:03:59.476" endtime="20230717 19:03:59.491"/>
</kw>
<status status="PASS" starttime="20230717 19:03:59.475" endtime="20230717 19:03:59.491"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:03:59.499" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:03:59.506" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:03:59.506" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20230717 19:03:59.494" endtime="20230717 19:03:59.506"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:03:59.507" level="INFO">s3g</msg>
<status status="PASS" starttime="20230717 19:03:59.506" endtime="20230717 19:03:59.508"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:03:59.508" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:03:59.508" endtime="20230717 19:03:59.509"/>
</kw>
<status status="PASS" starttime="20230717 19:03:59.493" endtime="20230717 19:03:59.509"/>
</kw>
<msg timestamp="20230717 19:03:59.509" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:03:59.493" endtime="20230717 19:03:59.509"/>
</kw>
<msg timestamp="20230717 19:03:59.509" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20230717 19:03:59.492" endtime="20230717 19:03:59.509"/>
</kw>
<msg timestamp="20230717 19:03:59.510" level="INFO">${TEST_USER} = testuser2/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230717 19:03:59.492" endtime="20230717 19:03:59.510"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230717 19:03:59.510" level="INFO">${TEST_USER} = testuser2/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230717 19:03:59.510" endtime="20230717 19:03:59.511"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:03:59.517" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser2.keytab testuser2/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:03:59.538" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:03:59.538" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:03:59.513" endtime="20230717 19:03:59.539"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:03:59.540" level="INFO"/>
<status status="PASS" starttime="20230717 19:03:59.539" endtime="20230717 19:03:59.540"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:03:59.541" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:03:59.541" endtime="20230717 19:03:59.541"/>
</kw>
<status status="PASS" starttime="20230717 19:03:59.513" endtime="20230717 19:03:59.542"/>
</kw>
<msg timestamp="20230717 19:03:59.542" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:03:59.512" endtime="20230717 19:03:59.542"/>
</kw>
<status status="PASS" starttime="20230717 19:03:59.512" endtime="20230717 19:03:59.542"/>
</kw>
<status status="PASS" starttime="20230717 19:03:59.511" endtime="20230717 19:03:59.542"/>
</kw>
<status status="PASS" starttime="20230717 19:03:59.491" endtime="20230717 19:03:59.542"/>
</kw>
<status status="PASS" starttime="20230717 19:03:59.491" endtime="20230717 19:03:59.542"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/readable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:03:59.547" level="INFO">Running command 'ozone sh key list 33192-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:04:08.171" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:04:08.171" level="INFO">${output} = [ {
  "volumeName" : "33192-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 988,
  "creationTime" : "2023-07-17T18:57:05.546Z",
  "modificationTime" : ...</msg>
<status status="PASS" starttime="20230717 19:03:59.543" endtime="20230717 19:04:08.171"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:04:08.173" level="INFO">[ {
  "volumeName" : "33192-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 988,
  "creationTime" : "2023-07-17T18:57:05.546Z",
  "modificationTime" : "2023-07-17T18:57:08.353Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "file" : false
} ]</msg>
<status status="PASS" starttime="20230717 19:04:08.172" endtime="20230717 19:04:08.173"/>
</kw>
<msg timestamp="20230717 19:04:08.173" level="INFO">${result} = [ {
  "volumeName" : "33192-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 988,
  "creationTime" : "2023-07-17T18:57:05.546Z",
  "modificationTime" : ...</msg>
<status status="PASS" starttime="20230717 19:03:59.543" endtime="20230717 19:04:08.173"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:04:08.174" endtime="20230717 19:04:08.174"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/readable-link2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:04:08.184" level="INFO">Running command 'ozone sh key list 33192-target/readable-link2 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:04:16.105" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:04:16.105" level="INFO">${output} = [ {
  "volumeName" : "33192-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 988,
  "creationTime" : "2023-07-17T18:57:05.546Z",
  "modificationTime" : ...</msg>
<status status="PASS" starttime="20230717 19:04:08.175" endtime="20230717 19:04:16.105"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:04:16.107" level="INFO">[ {
  "volumeName" : "33192-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 988,
  "creationTime" : "2023-07-17T18:57:05.546Z",
  "modificationTime" : "2023-07-17T18:57:08.353Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "file" : false
} ]</msg>
<status status="PASS" starttime="20230717 19:04:16.106" endtime="20230717 19:04:16.108"/>
</kw>
<msg timestamp="20230717 19:04:16.108" level="INFO">${result} = [ {
  "volumeName" : "33192-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 988,
  "creationTime" : "2023-07-17T18:57:05.546Z",
  "modificationTime" : ...</msg>
<status status="PASS" starttime="20230717 19:04:08.174" endtime="20230717 19:04:16.108"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:04:16.108" endtime="20230717 19:04:16.109"/>
</kw>
<status status="PASS" starttime="20230717 19:03:59.474" endtime="20230717 19:04:16.109"/>
</kw>
<status status="PASS" starttime="20230717 19:03:59.474" endtime="20230717 19:04:16.109"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20230717 19:03:59.381" endtime="20230717 19:04:16.109"/>
</test>
<test id="s1-s7-t12" name="Cannot follow link without read access" line="182">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:04:16.120" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:04:16.123" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:04:16.124" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20230717 19:04:16.115" endtime="20230717 19:04:16.124"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:04:16.125" level="INFO">s3g</msg>
<status status="PASS" starttime="20230717 19:04:16.124" endtime="20230717 19:04:16.125"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:04:16.126" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:04:16.125" endtime="20230717 19:04:16.126"/>
</kw>
<status status="PASS" starttime="20230717 19:04:16.114" endtime="20230717 19:04:16.126"/>
</kw>
<msg timestamp="20230717 19:04:16.126" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:04:16.114" endtime="20230717 19:04:16.127"/>
</kw>
<msg timestamp="20230717 19:04:16.127" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20230717 19:04:16.114" endtime="20230717 19:04:16.127"/>
</kw>
<msg timestamp="20230717 19:04:16.127" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230717 19:04:16.113" endtime="20230717 19:04:16.127"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230717 19:04:16.128" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230717 19:04:16.127" endtime="20230717 19:04:16.128"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:04:16.135" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:04:16.190" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:04:16.190" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:04:16.131" endtime="20230717 19:04:16.190"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:04:16.192" level="INFO"/>
<status status="PASS" starttime="20230717 19:04:16.191" endtime="20230717 19:04:16.192"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:04:16.194" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:04:16.193" endtime="20230717 19:04:16.194"/>
</kw>
<status status="PASS" starttime="20230717 19:04:16.130" endtime="20230717 19:04:16.194"/>
</kw>
<msg timestamp="20230717 19:04:16.195" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:04:16.130" endtime="20230717 19:04:16.195"/>
</kw>
<status status="PASS" starttime="20230717 19:04:16.129" endtime="20230717 19:04:16.195"/>
</kw>
<status status="PASS" starttime="20230717 19:04:16.128" endtime="20230717 19:04:16.195"/>
</kw>
<status status="PASS" starttime="20230717 19:04:16.112" endtime="20230717 19:04:16.195"/>
</kw>
<status status="PASS" starttime="20230717 19:04:16.112" endtime="20230717 19:04:16.195"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:04:16.202" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:04:16.208" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:04:16.208" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:04:16.199" endtime="20230717 19:04:16.208"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:04:16.209" level="INFO"/>
<status status="PASS" starttime="20230717 19:04:16.208" endtime="20230717 19:04:16.209"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:04:16.210" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:04:16.210" endtime="20230717 19:04:16.211"/>
</kw>
<status status="PASS" starttime="20230717 19:04:16.198" endtime="20230717 19:04:16.211"/>
</kw>
<msg timestamp="20230717 19:04:16.211" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:04:16.198" endtime="20230717 19:04:16.211"/>
</kw>
<status status="PASS" starttime="20230717 19:04:16.197" endtime="20230717 19:04:16.212"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:04:16.219" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:04:16.223" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:04:16.223" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20230717 19:04:16.215" endtime="20230717 19:04:16.223"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:04:16.224" level="INFO">s3g</msg>
<status status="PASS" starttime="20230717 19:04:16.224" endtime="20230717 19:04:16.224"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:04:16.226" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:04:16.225" endtime="20230717 19:04:16.226"/>
</kw>
<status status="PASS" starttime="20230717 19:04:16.215" endtime="20230717 19:04:16.226"/>
</kw>
<msg timestamp="20230717 19:04:16.226" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:04:16.214" endtime="20230717 19:04:16.226"/>
</kw>
<msg timestamp="20230717 19:04:16.226" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20230717 19:04:16.214" endtime="20230717 19:04:16.226"/>
</kw>
<msg timestamp="20230717 19:04:16.227" level="INFO">${TEST_USER} = testuser2/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230717 19:04:16.213" endtime="20230717 19:04:16.227"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230717 19:04:16.227" level="INFO">${TEST_USER} = testuser2/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230717 19:04:16.227" endtime="20230717 19:04:16.227"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:04:16.232" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser2.keytab testuser2/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:04:16.272" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:04:16.272" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:04:16.229" endtime="20230717 19:04:16.272"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:04:16.275" level="INFO"/>
<status status="PASS" starttime="20230717 19:04:16.273" endtime="20230717 19:04:16.275"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:04:16.276" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:04:16.275" endtime="20230717 19:04:16.276"/>
</kw>
<status status="PASS" starttime="20230717 19:04:16.229" endtime="20230717 19:04:16.277"/>
</kw>
<msg timestamp="20230717 19:04:16.277" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:04:16.229" endtime="20230717 19:04:16.277"/>
</kw>
<status status="PASS" starttime="20230717 19:04:16.228" endtime="20230717 19:04:16.277"/>
</kw>
<status status="PASS" starttime="20230717 19:04:16.228" endtime="20230717 19:04:16.277"/>
</kw>
<status status="PASS" starttime="20230717 19:04:16.212" endtime="20230717 19:04:16.277"/>
</kw>
<status status="PASS" starttime="20230717 19:04:16.212" endtime="20230717 19:04:16.277"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:04:16.283" level="INFO">Running command 'ozone sh key list 33192-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:04:24.027" level="INFO">${rc} = 255</msg>
<msg timestamp="20230717 19:04:24.027" level="INFO">${output} = PERMISSION_DENIED User testuser2 doesn't have READ permission to access bucket Volume:33192-source Bucket:unreadable-bucket Key:</msg>
<status status="PASS" starttime="20230717 19:04:16.279" endtime="20230717 19:04:24.027"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:04:24.029" level="INFO">PERMISSION_DENIED User testuser2 doesn't have READ permission to access bucket Volume:33192-source Bucket:unreadable-bucket Key:</msg>
<status status="PASS" starttime="20230717 19:04:24.028" endtime="20230717 19:04:24.029"/>
</kw>
<msg timestamp="20230717 19:04:24.030" level="INFO">${result} = PERMISSION_DENIED User testuser2 doesn't have READ permission to access bucket Volume:33192-source Bucket:unreadable-bucket Key:</msg>
<status status="PASS" starttime="20230717 19:04:16.278" endtime="20230717 19:04:24.030"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:04:24.030" endtime="20230717 19:04:24.030"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${source}/unreadable-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:04:24.035" level="INFO">Running command 'ozone sh key list 33192-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:04:31.640" level="INFO">${rc} = 255</msg>
<msg timestamp="20230717 19:04:31.641" level="INFO">${output} = PERMISSION_DENIED User testuser2 doesn't have READ permission to access bucket Volume:33192-source Bucket:unreadable-bucket </msg>
<status status="PASS" starttime="20230717 19:04:24.031" endtime="20230717 19:04:31.641"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:04:31.643" level="INFO">PERMISSION_DENIED User testuser2 doesn't have READ permission to access bucket Volume:33192-source Bucket:unreadable-bucket </msg>
<status status="PASS" starttime="20230717 19:04:31.642" endtime="20230717 19:04:31.643"/>
</kw>
<msg timestamp="20230717 19:04:31.643" level="INFO">${result} = PERMISSION_DENIED User testuser2 doesn't have READ permission to access bucket Volume:33192-source Bucket:unreadable-bucket </msg>
<status status="PASS" starttime="20230717 19:04:24.031" endtime="20230717 19:04:31.643"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:04:31.643" endtime="20230717 19:04:31.644"/>
</kw>
<status status="PASS" starttime="20230717 19:04:16.196" endtime="20230717 19:04:31.644"/>
</kw>
<status status="PASS" starttime="20230717 19:04:16.196" endtime="20230717 19:04:31.644"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20230717 19:04:16.111" endtime="20230717 19:04:31.645"/>
</test>
<test id="s1-s7-t13" name="ACL verified on source and target bucket" line="185">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:04:31.656" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:04:31.662" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:04:31.663" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20230717 19:04:31.652" endtime="20230717 19:04:31.663"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:04:31.664" level="INFO">s3g</msg>
<status status="PASS" starttime="20230717 19:04:31.663" endtime="20230717 19:04:31.664"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:04:31.666" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:04:31.665" endtime="20230717 19:04:31.666"/>
</kw>
<status status="PASS" starttime="20230717 19:04:31.652" endtime="20230717 19:04:31.666"/>
</kw>
<msg timestamp="20230717 19:04:31.666" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:04:31.651" endtime="20230717 19:04:31.666"/>
</kw>
<msg timestamp="20230717 19:04:31.667" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20230717 19:04:31.651" endtime="20230717 19:04:31.667"/>
</kw>
<msg timestamp="20230717 19:04:31.667" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230717 19:04:31.650" endtime="20230717 19:04:31.667"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230717 19:04:31.668" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230717 19:04:31.668" endtime="20230717 19:04:31.668"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:04:31.675" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:04:31.750" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:04:31.750" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:04:31.671" endtime="20230717 19:04:31.750"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:04:31.752" level="INFO"/>
<status status="PASS" starttime="20230717 19:04:31.751" endtime="20230717 19:04:31.752"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:04:31.753" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:04:31.753" endtime="20230717 19:04:31.753"/>
</kw>
<status status="PASS" starttime="20230717 19:04:31.670" endtime="20230717 19:04:31.754"/>
</kw>
<msg timestamp="20230717 19:04:31.754" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:04:31.670" endtime="20230717 19:04:31.754"/>
</kw>
<status status="PASS" starttime="20230717 19:04:31.669" endtime="20230717 19:04:31.754"/>
</kw>
<status status="PASS" starttime="20230717 19:04:31.668" endtime="20230717 19:04:31.754"/>
</kw>
<status status="PASS" starttime="20230717 19:04:31.649" endtime="20230717 19:04:31.754"/>
</kw>
<status status="PASS" starttime="20230717 19:04:31.649" endtime="20230717 19:04:31.754"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source and target bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="ACL verified on source and target bucket">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:04:31.761" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:04:31.766" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:04:31.766" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:04:31.757" endtime="20230717 19:04:31.766"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:04:31.767" level="INFO"/>
<status status="PASS" starttime="20230717 19:04:31.766" endtime="20230717 19:04:31.767"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:04:31.768" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:04:31.767" endtime="20230717 19:04:31.768"/>
</kw>
<status status="PASS" starttime="20230717 19:04:31.757" endtime="20230717 19:04:31.768"/>
</kw>
<msg timestamp="20230717 19:04:31.768" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:04:31.756" endtime="20230717 19:04:31.769"/>
</kw>
<status status="PASS" starttime="20230717 19:04:31.756" endtime="20230717 19:04:31.769"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:04:31.775" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:04:31.782" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:04:31.782" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20230717 19:04:31.772" endtime="20230717 19:04:31.783"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:04:31.784" level="INFO">s3g</msg>
<status status="PASS" starttime="20230717 19:04:31.783" endtime="20230717 19:04:31.784"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:04:31.785" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:04:31.784" endtime="20230717 19:04:31.785"/>
</kw>
<status status="PASS" starttime="20230717 19:04:31.771" endtime="20230717 19:04:31.786"/>
</kw>
<msg timestamp="20230717 19:04:31.786" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:04:31.771" endtime="20230717 19:04:31.786"/>
</kw>
<msg timestamp="20230717 19:04:31.786" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20230717 19:04:31.770" endtime="20230717 19:04:31.786"/>
</kw>
<msg timestamp="20230717 19:04:31.787" level="INFO">${TEST_USER} = testuser2/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230717 19:04:31.770" endtime="20230717 19:04:31.787"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230717 19:04:31.787" level="INFO">${TEST_USER} = testuser2/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230717 19:04:31.787" endtime="20230717 19:04:31.787"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:04:31.803" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser2.keytab testuser2/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:04:31.835" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:04:31.835" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:04:31.791" endtime="20230717 19:04:31.835"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:04:31.840" level="INFO"/>
<status status="PASS" starttime="20230717 19:04:31.836" endtime="20230717 19:04:31.840"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:04:31.843" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:04:31.842" endtime="20230717 19:04:31.843"/>
</kw>
<status status="PASS" starttime="20230717 19:04:31.790" endtime="20230717 19:04:31.845"/>
</kw>
<msg timestamp="20230717 19:04:31.845" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:04:31.789" endtime="20230717 19:04:31.845"/>
</kw>
<status status="PASS" starttime="20230717 19:04:31.789" endtime="20230717 19:04:31.845"/>
</kw>
<status status="PASS" starttime="20230717 19:04:31.788" endtime="20230717 19:04:31.845"/>
</kw>
<status status="PASS" starttime="20230717 19:04:31.769" endtime="20230717 19:04:31.846"/>
</kw>
<status status="PASS" starttime="20230717 19:04:31.769" endtime="20230717 19:04:31.846"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:04:31.860" level="INFO">Running command 'ozone sh bucket info 33192-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:04:40.035" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:04:40.035" level="INFO">${output} = {
  "volumeName" : "33192-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "33192-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2023-07-17T18:57:23.874Z...</msg>
<status status="PASS" starttime="20230717 19:04:31.852" endtime="20230717 19:04:40.035"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:04:40.037" level="INFO">{
  "volumeName" : "33192-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "33192-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2023-07-17T18:57:23.874Z",
  "modificationTime" : "2023-07-17T18:57:23.874Z",
  "owner" : "testuser"
}</msg>
<status status="PASS" starttime="20230717 19:04:40.036" endtime="20230717 19:04:40.037"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:04:40.038" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:04:40.037" endtime="20230717 19:04:40.038"/>
</kw>
<status status="PASS" starttime="20230717 19:04:31.850" endtime="20230717 19:04:40.038"/>
</kw>
<msg timestamp="20230717 19:04:40.039" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:04:31.849" endtime="20230717 19:04:40.039"/>
</kw>
<msg timestamp="20230717 19:04:40.039" level="INFO">${result} = {
  "volumeName" : "33192-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "33192-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2023-07-17T18:57:23.874Z...</msg>
<status status="PASS" starttime="20230717 19:04:31.846" endtime="20230717 19:04:40.039"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:04:40.039" endtime="20230717 19:04:40.040"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:04:40.040" endtime="20230717 19:04:40.040"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${source}/unreadable-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:04:40.045" level="INFO">Running command 'ozone sh bucket info 33192-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:04:47.003" level="INFO">${rc} = 255</msg>
<msg timestamp="20230717 19:04:47.003" level="INFO">${output} = PERMISSION_DENIED User testuser2 doesn't have READ permission to access bucket Volume:33192-source Bucket:unreadable-bucket </msg>
<status status="PASS" starttime="20230717 19:04:40.041" endtime="20230717 19:04:47.003"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:04:47.005" level="INFO">PERMISSION_DENIED User testuser2 doesn't have READ permission to access bucket Volume:33192-source Bucket:unreadable-bucket </msg>
<status status="PASS" starttime="20230717 19:04:47.004" endtime="20230717 19:04:47.005"/>
</kw>
<msg timestamp="20230717 19:04:47.005" level="INFO">${result} = PERMISSION_DENIED User testuser2 doesn't have READ permission to access bucket Volume:33192-source Bucket:unreadable-bucket </msg>
<status status="PASS" starttime="20230717 19:04:40.041" endtime="20230717 19:04:47.005"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:04:47.006" endtime="20230717 19:04:47.006"/>
</kw>
<status status="PASS" starttime="20230717 19:04:31.755" endtime="20230717 19:04:47.006"/>
</kw>
<status status="PASS" starttime="20230717 19:04:31.754" endtime="20230717 19:04:47.006"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20230717 19:04:31.646" endtime="20230717 19:04:47.007"/>
</test>
<test id="s1-s7-t14" name="Loop in link chain is detected" line="188">
<kw name="Create link loop" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:04:47.016" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:04:47.021" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:04:47.021" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20230717 19:04:47.013" endtime="20230717 19:04:47.021"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:04:47.023" level="INFO">s3g</msg>
<status status="PASS" starttime="20230717 19:04:47.022" endtime="20230717 19:04:47.023"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:04:47.024" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:04:47.024" endtime="20230717 19:04:47.024"/>
</kw>
<status status="PASS" starttime="20230717 19:04:47.012" endtime="20230717 19:04:47.025"/>
</kw>
<msg timestamp="20230717 19:04:47.025" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:04:47.012" endtime="20230717 19:04:47.025"/>
</kw>
<msg timestamp="20230717 19:04:47.025" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20230717 19:04:47.011" endtime="20230717 19:04:47.025"/>
</kw>
<msg timestamp="20230717 19:04:47.026" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230717 19:04:47.011" endtime="20230717 19:04:47.026"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230717 19:04:47.026" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230717 19:04:47.026" endtime="20230717 19:04:47.026"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:04:47.033" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:04:47.086" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:04:47.086" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:04:47.030" endtime="20230717 19:04:47.086"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:04:47.088" level="INFO"/>
<status status="PASS" starttime="20230717 19:04:47.087" endtime="20230717 19:04:47.088"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:04:47.089" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:04:47.089" endtime="20230717 19:04:47.089"/>
</kw>
<status status="PASS" starttime="20230717 19:04:47.029" endtime="20230717 19:04:47.090"/>
</kw>
<msg timestamp="20230717 19:04:47.090" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:04:47.028" endtime="20230717 19:04:47.090"/>
</kw>
<status status="PASS" starttime="20230717 19:04:47.027" endtime="20230717 19:04:47.090"/>
</kw>
<status status="PASS" starttime="20230717 19:04:47.027" endtime="20230717 19:04:47.090"/>
</kw>
<status status="PASS" starttime="20230717 19:04:47.010" endtime="20230717 19:04:47.090"/>
</kw>
<status status="PASS" starttime="20230717 19:04:47.009" endtime="20230717 19:04:47.090"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:04:47.097" level="INFO">Running command 'ozone sh bucket link 33192-target/loop1 33192-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:04:55.059" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:04:55.059" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:04:47.093" endtime="20230717 19:04:55.059"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:04:55.061" level="INFO"/>
<status status="PASS" starttime="20230717 19:04:55.060" endtime="20230717 19:04:55.061"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:04:55.062" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:04:55.061" endtime="20230717 19:04:55.062"/>
</kw>
<status status="PASS" starttime="20230717 19:04:47.092" endtime="20230717 19:04:55.063"/>
</kw>
<msg timestamp="20230717 19:04:55.063" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:04:47.091" endtime="20230717 19:04:55.063"/>
</kw>
<status status="PASS" starttime="20230717 19:04:47.091" endtime="20230717 19:04:55.063"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:04:55.070" level="INFO">Running command 'ozone sh bucket link 33192-target/loop2 33192-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:05:02.942" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:05:02.942" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:04:55.066" endtime="20230717 19:05:02.942"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:05:02.944" level="INFO"/>
<status status="PASS" starttime="20230717 19:05:02.943" endtime="20230717 19:05:02.944"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:05:02.945" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:05:02.945" endtime="20230717 19:05:02.945"/>
</kw>
<status status="PASS" starttime="20230717 19:04:55.065" endtime="20230717 19:05:02.946"/>
</kw>
<msg timestamp="20230717 19:05:02.946" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:04:55.065" endtime="20230717 19:05:02.946"/>
</kw>
<status status="PASS" starttime="20230717 19:04:55.063" endtime="20230717 19:05:02.946"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:05:02.951" level="INFO">Running command 'ozone sh bucket link 33192-target/loop3 33192-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:05:10.518" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:05:10.518" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:05:02.948" endtime="20230717 19:05:10.519"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:05:10.520" level="INFO"/>
<status status="PASS" starttime="20230717 19:05:10.519" endtime="20230717 19:05:10.521"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:05:10.521" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:05:10.521" endtime="20230717 19:05:10.522"/>
</kw>
<status status="PASS" starttime="20230717 19:05:02.947" endtime="20230717 19:05:10.522"/>
</kw>
<msg timestamp="20230717 19:05:10.522" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:05:02.947" endtime="20230717 19:05:10.522"/>
</kw>
<status status="PASS" starttime="20230717 19:05:02.946" endtime="20230717 19:05:10.522"/>
</kw>
<status status="PASS" starttime="20230717 19:04:47.009" endtime="20230717 19:05:10.522"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/loop2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:05:10.527" level="INFO">Running command 'ozone sh key list 33192-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:05:18.044" level="INFO">${rc} = 255</msg>
<msg timestamp="20230717 19:05:18.044" level="INFO">${output} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links. Bucket name: loop2, Volume name: 33192-target</msg>
<status status="PASS" starttime="20230717 19:05:10.524" endtime="20230717 19:05:18.045"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:05:18.046" level="INFO">DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links. Bucket name: loop2, Volume name: 33192-target</msg>
<status status="PASS" starttime="20230717 19:05:18.045" endtime="20230717 19:05:18.047"/>
</kw>
<msg timestamp="20230717 19:05:18.047" level="INFO">${result} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links. Bucket name: loop2, Volume name: 33192-target</msg>
<status status="PASS" starttime="20230717 19:05:10.523" endtime="20230717 19:05:18.047"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:05:18.047" endtime="20230717 19:05:18.048"/>
</kw>
<kw name="Delete link loop" type="TEARDOWN">
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${target}/loop1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:05:18.057" level="INFO">Running command 'ozone sh bucket delete 33192-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:05:25.711" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:05:25.711" level="INFO">${output} = Bucket loop1 is deleted</msg>
<status status="PASS" starttime="20230717 19:05:18.051" endtime="20230717 19:05:25.711"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:05:25.713" level="INFO">Bucket loop1 is deleted</msg>
<status status="PASS" starttime="20230717 19:05:25.712" endtime="20230717 19:05:25.713"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:05:25.714" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:05:25.713" endtime="20230717 19:05:25.714"/>
</kw>
<status status="PASS" starttime="20230717 19:05:18.050" endtime="20230717 19:05:25.714"/>
</kw>
<msg timestamp="20230717 19:05:25.714" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:05:18.050" endtime="20230717 19:05:25.715"/>
</kw>
<status status="PASS" starttime="20230717 19:05:18.049" endtime="20230717 19:05:25.715"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${target}/loop2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:05:25.723" level="INFO">Running command 'ozone sh bucket delete 33192-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:05:33.168" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:05:33.169" level="INFO">${output} = Bucket loop2 is deleted</msg>
<status status="PASS" starttime="20230717 19:05:25.718" endtime="20230717 19:05:33.169"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:05:33.170" level="INFO">Bucket loop2 is deleted</msg>
<status status="PASS" starttime="20230717 19:05:33.169" endtime="20230717 19:05:33.170"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:05:33.171" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:05:33.170" endtime="20230717 19:05:33.171"/>
</kw>
<status status="PASS" starttime="20230717 19:05:25.717" endtime="20230717 19:05:33.172"/>
</kw>
<msg timestamp="20230717 19:05:33.172" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:05:25.716" endtime="20230717 19:05:33.183"/>
</kw>
<status status="PASS" starttime="20230717 19:05:25.715" endtime="20230717 19:05:33.183"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${target}/loop3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:05:33.190" level="INFO">Running command 'ozone sh bucket delete 33192-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:05:40.641" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:05:40.642" level="INFO">${output} = Bucket loop3 is deleted</msg>
<status status="PASS" starttime="20230717 19:05:33.187" endtime="20230717 19:05:40.642"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:05:40.643" level="INFO">Bucket loop3 is deleted</msg>
<status status="PASS" starttime="20230717 19:05:40.642" endtime="20230717 19:05:40.643"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:05:40.644" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:05:40.643" endtime="20230717 19:05:40.644"/>
</kw>
<status status="PASS" starttime="20230717 19:05:33.184" endtime="20230717 19:05:40.644"/>
</kw>
<msg timestamp="20230717 19:05:40.645" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:05:33.184" endtime="20230717 19:05:40.645"/>
</kw>
<status status="PASS" starttime="20230717 19:05:33.183" endtime="20230717 19:05:40.645"/>
</kw>
<status status="PASS" starttime="20230717 19:05:18.048" endtime="20230717 19:05:40.645"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20230717 19:04:47.008" endtime="20230717 19:05:40.645"/>
</test>
<test id="s1-s7-t15" name="Multiple links to same bucket are allowed" line="194">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:05:40.656" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:05:40.661" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:05:40.661" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20230717 19:05:40.652" endtime="20230717 19:05:40.661"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:05:40.663" level="INFO">s3g</msg>
<status status="PASS" starttime="20230717 19:05:40.662" endtime="20230717 19:05:40.663"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:05:40.664" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:05:40.663" endtime="20230717 19:05:40.664"/>
</kw>
<status status="PASS" starttime="20230717 19:05:40.651" endtime="20230717 19:05:40.665"/>
</kw>
<msg timestamp="20230717 19:05:40.665" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:05:40.651" endtime="20230717 19:05:40.665"/>
</kw>
<msg timestamp="20230717 19:05:40.665" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20230717 19:05:40.650" endtime="20230717 19:05:40.665"/>
</kw>
<msg timestamp="20230717 19:05:40.666" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230717 19:05:40.650" endtime="20230717 19:05:40.666"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230717 19:05:40.667" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230717 19:05:40.666" endtime="20230717 19:05:40.667"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:05:40.674" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:05:40.704" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:05:40.704" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:05:40.670" endtime="20230717 19:05:40.705"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:05:40.707" level="INFO"/>
<status status="PASS" starttime="20230717 19:05:40.705" endtime="20230717 19:05:40.707"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:05:40.708" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:05:40.707" endtime="20230717 19:05:40.708"/>
</kw>
<status status="PASS" starttime="20230717 19:05:40.670" endtime="20230717 19:05:40.708"/>
</kw>
<msg timestamp="20230717 19:05:40.709" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:05:40.669" endtime="20230717 19:05:40.709"/>
</kw>
<status status="PASS" starttime="20230717 19:05:40.668" endtime="20230717 19:05:40.709"/>
</kw>
<status status="PASS" starttime="20230717 19:05:40.667" endtime="20230717 19:05:40.709"/>
</kw>
<status status="PASS" starttime="20230717 19:05:40.649" endtime="20230717 19:05:40.709"/>
</kw>
<status status="PASS" starttime="20230717 19:05:40.648" endtime="20230717 19:05:40.709"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:05:40.715" level="INFO">Running command 'ozone sh bucket link 33192-source/bucket1 33192-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:05:48.712" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:05:48.712" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:05:40.711" endtime="20230717 19:05:48.712"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:05:48.714" level="INFO"/>
<status status="PASS" starttime="20230717 19:05:48.713" endtime="20230717 19:05:48.714"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:05:48.715" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:05:48.714" endtime="20230717 19:05:48.715"/>
</kw>
<status status="PASS" starttime="20230717 19:05:40.711" endtime="20230717 19:05:48.715"/>
</kw>
<msg timestamp="20230717 19:05:48.715" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:05:40.710" endtime="20230717 19:05:48.715"/>
</kw>
<status status="PASS" starttime="20230717 19:05:40.710" endtime="20230717 19:05:48.716"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:05:48.721" level="INFO">Running command 'ozone sh key put 33192-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:06:00.303" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:06:00.303" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:05:48.718" endtime="20230717 19:06:00.304"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:06:00.305" level="INFO"/>
<status status="PASS" starttime="20230717 19:06:00.304" endtime="20230717 19:06:00.305"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:06:00.306" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:06:00.305" endtime="20230717 19:06:00.306"/>
</kw>
<status status="PASS" starttime="20230717 19:05:48.717" endtime="20230717 19:06:00.307"/>
</kw>
<msg timestamp="20230717 19:06:00.307" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:05:48.717" endtime="20230717 19:06:00.307"/>
</kw>
<status status="PASS" starttime="20230717 19:05:48.716" endtime="20230717 19:06:00.307"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230717 19:06:00.310" level="INFO">${postfix} = 85781</msg>
<status status="PASS" starttime="20230717 19:06:00.309" endtime="20230717 19:06:00.310"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230717 19:06:00.311" level="INFO">${tmpfile} = /tmp/tempkey-85781</msg>
<status status="PASS" starttime="20230717 19:06:00.310" endtime="20230717 19:06:00.311"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:06:00.317" level="INFO">Running command 'ozone sh key get 33192-target/link1/key3 /tmp/tempkey-85781 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:06:11.013" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:06:11.013" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:06:00.313" endtime="20230717 19:06:11.013"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:06:11.015" level="INFO"/>
<status status="PASS" starttime="20230717 19:06:11.014" endtime="20230717 19:06:11.015"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:06:11.016" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:06:11.015" endtime="20230717 19:06:11.016"/>
</kw>
<status status="PASS" starttime="20230717 19:06:00.312" endtime="20230717 19:06:11.016"/>
</kw>
<msg timestamp="20230717 19:06:11.016" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:06:00.312" endtime="20230717 19:06:11.017"/>
</kw>
<status status="PASS" starttime="20230717 19:06:00.311" endtime="20230717 19:06:11.017"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20230717 19:06:11.020" level="INFO">Running command 'diff -q /etc/group /tmp/tempkey-85781 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:06:11.023" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20230717 19:06:11.017" endtime="20230717 19:06:11.023"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:06:11.031" level="INFO">Running command 'rm -f /tmp/tempkey-85781 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:06:11.034" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:06:11.035" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:06:11.027" endtime="20230717 19:06:11.035"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:06:11.036" level="INFO"/>
<status status="PASS" starttime="20230717 19:06:11.035" endtime="20230717 19:06:11.037"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:06:11.037" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:06:11.037" endtime="20230717 19:06:11.038"/>
</kw>
<status status="PASS" starttime="20230717 19:06:11.026" endtime="20230717 19:06:11.038"/>
</kw>
<msg timestamp="20230717 19:06:11.038" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:06:11.025" endtime="20230717 19:06:11.038"/>
</kw>
<status status="PASS" starttime="20230717 19:06:11.024" endtime="20230717 19:06:11.039"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230717 19:06:11.041" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20230717 19:06:11.039" endtime="20230717 19:06:11.041"/>
</kw>
<msg timestamp="20230717 19:06:11.041" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20230717 19:06:00.308" endtime="20230717 19:06:11.041"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230717 19:06:11.041" endtime="20230717 19:06:11.042"/>
</kw>
<status status="PASS" starttime="20230717 19:06:00.307" endtime="20230717 19:06:11.042"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20230717 19:05:40.647" endtime="20230717 19:06:11.042"/>
</test>
<test id="s1-s7-t16" name="Source bucket not affected by deleting link" line="199">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:06:11.053" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:06:11.065" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:06:11.069" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20230717 19:06:11.049" endtime="20230717 19:06:11.069"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:06:11.075" level="INFO">s3g</msg>
<status status="PASS" starttime="20230717 19:06:11.071" endtime="20230717 19:06:11.076"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:06:11.078" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:06:11.077" endtime="20230717 19:06:11.078"/>
</kw>
<status status="PASS" starttime="20230717 19:06:11.048" endtime="20230717 19:06:11.078"/>
</kw>
<msg timestamp="20230717 19:06:11.078" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:06:11.048" endtime="20230717 19:06:11.078"/>
</kw>
<msg timestamp="20230717 19:06:11.079" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20230717 19:06:11.047" endtime="20230717 19:06:11.079"/>
</kw>
<msg timestamp="20230717 19:06:11.080" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230717 19:06:11.046" endtime="20230717 19:06:11.080"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230717 19:06:11.080" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230717 19:06:11.080" endtime="20230717 19:06:11.080"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:06:11.089" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:06:11.194" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:06:11.194" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:06:11.084" endtime="20230717 19:06:11.195"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:06:11.199" level="INFO"/>
<status status="PASS" starttime="20230717 19:06:11.196" endtime="20230717 19:06:11.199"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:06:11.200" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:06:11.199" endtime="20230717 19:06:11.200"/>
</kw>
<status status="PASS" starttime="20230717 19:06:11.084" endtime="20230717 19:06:11.200"/>
</kw>
<msg timestamp="20230717 19:06:11.200" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:06:11.083" endtime="20230717 19:06:11.201"/>
</kw>
<status status="PASS" starttime="20230717 19:06:11.082" endtime="20230717 19:06:11.201"/>
</kw>
<status status="PASS" starttime="20230717 19:06:11.081" endtime="20230717 19:06:11.201"/>
</kw>
<status status="PASS" starttime="20230717 19:06:11.046" endtime="20230717 19:06:11.202"/>
</kw>
<status status="PASS" starttime="20230717 19:06:11.045" endtime="20230717 19:06:11.202"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:06:11.209" level="INFO">Running command 'ozone sh bucket delete 33192-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:06:18.840" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:06:18.840" level="INFO">${output} = Bucket link1 is deleted</msg>
<status status="PASS" starttime="20230717 19:06:11.205" endtime="20230717 19:06:18.840"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:06:18.842" level="INFO">Bucket link1 is deleted</msg>
<status status="PASS" starttime="20230717 19:06:18.841" endtime="20230717 19:06:18.842"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:06:18.843" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:06:18.842" endtime="20230717 19:06:18.843"/>
</kw>
<status status="PASS" starttime="20230717 19:06:11.204" endtime="20230717 19:06:18.843"/>
</kw>
<msg timestamp="20230717 19:06:18.843" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:06:11.204" endtime="20230717 19:06:18.843"/>
</kw>
<status status="PASS" starttime="20230717 19:06:11.203" endtime="20230717 19:06:18.843"/>
</kw>
<kw name="Execute" library="os">
<var>${bucket_list}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:06:18.849" level="INFO">Running command 'ozone sh bucket list 33192-target 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:06:26.352" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:06:26.352" level="INFO">${output} = [ {
  "metadata" : { },
  "volumeName" : "33192-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2023-07-1...</msg>
<status status="PASS" starttime="20230717 19:06:18.845" endtime="20230717 19:06:26.352"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:06:26.355" level="INFO">[ {
  "metadata" : { },
  "volumeName" : "33192-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2023-07-17T19:03:50.692Z",
  "modificationTime" : "2023-07-17T19:03:50.692Z",
  "sourcePathExist" : true,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "FILE_SYSTEM_OPTIMIZED",
  "owner" : "testuser",
  "link" : false
}, {
  "volumeName" : "33192-target",
  "bucketName" : "dangling-link",
  "sourceVolume" : "33192-source",
  "sourceBucket" : "no-such-bucket",
  "creationTime" : "2023-07-17T18:58:08.360Z",
  "modificationTime" : "2023-07-17T18:58:08.360Z",
  "owner" : "testuser"
}, {
  "volumeName" : "33192-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "33192-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2023-07-17T18:57:23.874Z",
  "modificationTime" : "2023-07-17T18:57:23.874Z",
  "owner" : "testuser"
}, {
  "volumeName" : "33192-target",
  "bucketName" : "link2",
  "sourceVolume" : "33192-source",
  "sourceBucket" : "bucket2",
  "creationTime" : "2023-07-17T19:03:35.028Z",
  "modificationTime" : "2023-07-17T19:03:35.028Z",
  "owner" : "testuser"
}, {
  "volumeName" : "33192-target",
  "bucketName" : "link3",
  "sourceVolume" : "33192-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2023-07-17T19:05:48.371Z",
  "modificationTime" : "2023-07-17T19:05:48.371Z",
  "owner" : "testuser"
}, {
  "volumeName" : "33192-target",
  "bucketName" : "readable-link",
  "sourceVolume" : "33192-source",
  "sourceBucket" : "readable-bucket",
  "creationTime" : "2023-07-17T18:57:39.001Z",
  "modificationTime" : "2023-07-17T18:57:39.001Z",
  "owner" : "testuser"
}, {
  "volumeName" : "33192-target",
  "bucketName" : "readable-link2",
  "sourceVolume" : "33192-source",
  "sourceBucket" : "readable-bucket",
  "creationTime" : "2023-07-17T18:57:46.044Z",
  "modificationTime" : "2023-07-17T18:57:46.044Z",
  "owner" : "testuser"
} ]</msg>
<status status="PASS" starttime="20230717 19:06:26.353" endtime="20230717 19:06:26.355"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:06:26.356" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:06:26.356" endtime="20230717 19:06:26.356"/>
</kw>
<status status="PASS" starttime="20230717 19:06:18.845" endtime="20230717 19:06:26.356"/>
</kw>
<msg timestamp="20230717 19:06:26.356" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:06:18.844" endtime="20230717 19:06:26.357"/>
</kw>
<msg timestamp="20230717 19:06:26.357" level="INFO">${bucket_list} = [ {
  "metadata" : { },
  "volumeName" : "33192-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2023-07-1...</msg>
<status status="PASS" starttime="20230717 19:06:18.844" endtime="20230717 19:06:26.357"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${bucket_list}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:06:26.357" endtime="20230717 19:06:26.357"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.[].name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:06:26.363" level="INFO">Running command 'ozone sh key list 33192-source/bucket1 | jq -r '.[].name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:06:34.411" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:06:34.411" level="INFO">${output} = key1
key3</msg>
<status status="PASS" starttime="20230717 19:06:26.359" endtime="20230717 19:06:34.411"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:06:34.413" level="INFO">key1
key3</msg>
<status status="PASS" starttime="20230717 19:06:34.412" endtime="20230717 19:06:34.413"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:06:34.415" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:06:34.414" endtime="20230717 19:06:34.415"/>
</kw>
<status status="PASS" starttime="20230717 19:06:26.359" endtime="20230717 19:06:34.415"/>
</kw>
<msg timestamp="20230717 19:06:34.415" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:06:26.358" endtime="20230717 19:06:34.416"/>
</kw>
<msg timestamp="20230717 19:06:34.416" level="INFO">${source_list} = key1
key3</msg>
<status status="PASS" starttime="20230717 19:06:26.358" endtime="20230717 19:06:34.416"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:06:34.416" endtime="20230717 19:06:34.417"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20230717 19:06:11.044" endtime="20230717 19:06:34.417"/>
</test>
<test id="s1-s7-t17" name="Setting bucket property on link not allowed" line="206">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:06:34.428" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:06:34.433" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:06:34.433" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20230717 19:06:34.424" endtime="20230717 19:06:34.433"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:06:34.434" level="INFO">s3g</msg>
<status status="PASS" starttime="20230717 19:06:34.433" endtime="20230717 19:06:34.434"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:06:34.435" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:06:34.435" endtime="20230717 19:06:34.435"/>
</kw>
<status status="PASS" starttime="20230717 19:06:34.424" endtime="20230717 19:06:34.436"/>
</kw>
<msg timestamp="20230717 19:06:34.436" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:06:34.423" endtime="20230717 19:06:34.436"/>
</kw>
<msg timestamp="20230717 19:06:34.436" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20230717 19:06:34.422" endtime="20230717 19:06:34.436"/>
</kw>
<msg timestamp="20230717 19:06:34.436" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230717 19:06:34.422" endtime="20230717 19:06:34.436"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230717 19:06:34.437" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230717 19:06:34.437" endtime="20230717 19:06:34.437"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:06:34.443" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:06:34.484" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:06:34.484" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:06:34.439" endtime="20230717 19:06:34.484"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:06:34.486" level="INFO"/>
<status status="PASS" starttime="20230717 19:06:34.484" endtime="20230717 19:06:34.486"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:06:34.487" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:06:34.486" endtime="20230717 19:06:34.487"/>
</kw>
<status status="PASS" starttime="20230717 19:06:34.439" endtime="20230717 19:06:34.487"/>
</kw>
<msg timestamp="20230717 19:06:34.487" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:06:34.439" endtime="20230717 19:06:34.487"/>
</kw>
<status status="PASS" starttime="20230717 19:06:34.438" endtime="20230717 19:06:34.488"/>
</kw>
<status status="PASS" starttime="20230717 19:06:34.437" endtime="20230717 19:06:34.488"/>
</kw>
<status status="PASS" starttime="20230717 19:06:34.421" endtime="20230717 19:06:34.488"/>
</kw>
<status status="PASS" starttime="20230717 19:06:34.420" endtime="20230717 19:06:34.488"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:06:34.494" level="INFO">Running command 'ozone sh bucket link 33192-source/bucket1 33192-target/link4 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:06:42.262" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:06:42.262" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:06:34.490" endtime="20230717 19:06:42.262"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:06:42.263" level="INFO"/>
<status status="PASS" starttime="20230717 19:06:42.262" endtime="20230717 19:06:42.263"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:06:42.265" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:06:42.264" endtime="20230717 19:06:42.265"/>
</kw>
<status status="PASS" starttime="20230717 19:06:34.489" endtime="20230717 19:06:42.265"/>
</kw>
<msg timestamp="20230717 19:06:42.265" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:06:34.489" endtime="20230717 19:06:42.265"/>
</kw>
<status status="PASS" starttime="20230717 19:06:34.488" endtime="20230717 19:06:42.265"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket setquota ${target}/link4 --quota 1GB</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:06:42.270" level="INFO">Running command 'ozone sh bucket setquota 33192-target/link4 --quota 1GB 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:06:49.609" level="INFO">${rc} = 255</msg>
<msg timestamp="20230717 19:06:49.609" level="INFO">${output} = NOT_SUPPORTED_OPERATION Cannot set property on link</msg>
<status status="PASS" starttime="20230717 19:06:42.266" endtime="20230717 19:06:49.609"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:06:49.611" level="INFO">NOT_SUPPORTED_OPERATION Cannot set property on link</msg>
<status status="PASS" starttime="20230717 19:06:49.609" endtime="20230717 19:06:49.611"/>
</kw>
<msg timestamp="20230717 19:06:49.611" level="INFO">${result} = NOT_SUPPORTED_OPERATION Cannot set property on link</msg>
<status status="PASS" starttime="20230717 19:06:42.266" endtime="20230717 19:06:49.611"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOT_SUPPORTED_OPERATION</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:06:49.611" endtime="20230717 19:06:49.612"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:06:49.618" level="INFO">Running command 'ozone sh bucket info 33192-target/link4 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:06:57.890" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:06:57.890" level="INFO">${output} = {
  "volumeName" : "33192-target",
  "bucketName" : "link4",
  "sourceVolume" : "33192-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2023-07-17T19:06:41.973Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20230717 19:06:49.614" endtime="20230717 19:06:57.890"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:06:57.892" level="INFO">{
  "volumeName" : "33192-target",
  "bucketName" : "link4",
  "sourceVolume" : "33192-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2023-07-17T19:06:41.973Z",
  "modificationTime" : "2023-07-17T19:06:41.973Z",
  "owner" : "testuser"
}</msg>
<status status="PASS" starttime="20230717 19:06:57.891" endtime="20230717 19:06:57.893"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:06:57.894" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:06:57.893" endtime="20230717 19:06:57.894"/>
</kw>
<status status="PASS" starttime="20230717 19:06:49.613" endtime="20230717 19:06:57.894"/>
</kw>
<msg timestamp="20230717 19:06:57.894" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:06:49.613" endtime="20230717 19:06:57.894"/>
</kw>
<msg timestamp="20230717 19:06:57.895" level="INFO">${result} = {
  "volumeName" : "33192-target",
  "bucketName" : "link4",
  "sourceVolume" : "33192-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2023-07-17T19:06:41.973Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20230717 19:06:49.612" endtime="20230717 19:06:57.895"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>sourceBucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:06:57.895" endtime="20230717 19:06:57.895"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20230717 19:06:34.419" endtime="20230717 19:06:57.896"/>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="PASS" starttime="20230717 18:56:33.968" endtime="20230717 19:06:57.904"/>
</suite>
<suite id="s1-s8" name="s3-encrypted" source="/opt/hadoop/smoketest/s3">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230717 19:07:03.906" endtime="20230717 19:07:03.906"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230717 19:07:03.908" level="INFO">${randStr} = 2696310688</msg>
<status status="PASS" starttime="20230717 19:07:03.908" endtime="20230717 19:07:03.908"/>
</kw>
<msg timestamp="20230717 19:07:03.909" level="INFO">${random} = ozone-test-2696310688</msg>
<status status="PASS" starttime="20230717 19:07:03.907" endtime="20230717 19:07:03.909"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230717 19:07:03.911" level="INFO">${PREFIX} = ozone-test-2696310688</msg>
<status status="PASS" starttime="20230717 19:07:03.909" endtime="20230717 19:07:03.911"/>
</kw>
<status status="PASS" starttime="20230717 19:07:03.907" endtime="20230717 19:07:03.911"/>
</kw>
<status status="PASS" starttime="20230717 19:07:03.906" endtime="20230717 19:07:03.911"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which aws</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:07:03.916" level="INFO">Running command 'which aws 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:07:03.921" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:07:03.922" level="INFO">${output} = /usr/local/bin/aws</msg>
<status status="PASS" starttime="20230717 19:07:03.912" endtime="20230717 19:07:03.922"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20230717 19:07:03.923" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:07:03.922" endtime="20230717 19:07:03.923"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="NOT RUN" starttime="20230717 19:07:03.923" endtime="20230717 19:07:03.923"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:07:03.923" endtime="20230717 19:07:03.923"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="NOT RUN" starttime="20230717 19:07:03.924" endtime="20230717 19:07:03.924"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:07:03.924" endtime="20230717 19:07:03.924"/>
</kw>
<status status="PASS" starttime="20230717 19:07:03.912" endtime="20230717 19:07:03.924"/>
</kw>
<status status="PASS" starttime="20230717 19:07:03.911" endtime="20230717 19:07:03.924"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:07:03.931" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:07:03.937" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:07:03.937" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20230717 19:07:03.928" endtime="20230717 19:07:03.937"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:07:03.939" level="INFO">s3g</msg>
<status status="PASS" starttime="20230717 19:07:03.938" endtime="20230717 19:07:03.939"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:07:03.940" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:07:03.939" endtime="20230717 19:07:03.940"/>
</kw>
<status status="PASS" starttime="20230717 19:07:03.927" endtime="20230717 19:07:03.940"/>
</kw>
<msg timestamp="20230717 19:07:03.941" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:07:03.927" endtime="20230717 19:07:03.941"/>
</kw>
<msg timestamp="20230717 19:07:03.942" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20230717 19:07:03.927" endtime="20230717 19:07:03.942"/>
</kw>
<msg timestamp="20230717 19:07:03.942" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230717 19:07:03.926" endtime="20230717 19:07:03.943"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230717 19:07:03.944" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230717 19:07:03.943" endtime="20230717 19:07:03.944"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:07:03.952" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:07:03.977" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:07:03.977" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:07:03.948" endtime="20230717 19:07:03.977"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:07:03.979" level="INFO"/>
<status status="PASS" starttime="20230717 19:07:03.978" endtime="20230717 19:07:03.979"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:07:03.980" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:07:03.979" endtime="20230717 19:07:03.980"/>
</kw>
<status status="PASS" starttime="20230717 19:07:03.947" endtime="20230717 19:07:03.980"/>
</kw>
<msg timestamp="20230717 19:07:03.980" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:07:03.946" endtime="20230717 19:07:03.980"/>
</kw>
<status status="PASS" starttime="20230717 19:07:03.945" endtime="20230717 19:07:03.981"/>
</kw>
<status status="PASS" starttime="20230717 19:07:03.944" endtime="20230717 19:07:03.981"/>
</kw>
<status status="PASS" starttime="20230717 19:07:03.926" endtime="20230717 19:07:03.981"/>
</kw>
<status status="PASS" starttime="20230717 19:07:03.925" endtime="20230717 19:07:03.981"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:07:03.987" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:07:10.409" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:07:10.409" level="INFO">${output} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=a8d1ffb55aca2830802a7cd52acea5687eae1cfc99bf6833c91d448948438bff</msg>
<status status="PASS" starttime="20230717 19:07:03.984" endtime="20230717 19:07:10.409"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:07:10.411" level="INFO">awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=a8d1ffb55aca2830802a7cd52acea5687eae1cfc99bf6833c91d448948438bff</msg>
<status status="PASS" starttime="20230717 19:07:10.410" endtime="20230717 19:07:10.411"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:07:10.412" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:07:10.411" endtime="20230717 19:07:10.412"/>
</kw>
<status status="PASS" starttime="20230717 19:07:03.984" endtime="20230717 19:07:10.412"/>
</kw>
<msg timestamp="20230717 19:07:10.412" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:07:03.983" endtime="20230717 19:07:10.413"/>
</kw>
<msg timestamp="20230717 19:07:10.413" level="INFO">${result} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=a8d1ffb55aca2830802a7cd52acea5687eae1cfc99bf6833c91d448948438bff</msg>
<status status="PASS" starttime="20230717 19:07:03.983" endtime="20230717 19:07:10.413"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230717 19:07:10.414" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20230717 19:07:10.413" endtime="20230717 19:07:10.414"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20230717 19:07:10.415" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20230717 19:07:10.414" endtime="20230717 19:07:10.415"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230717 19:07:10.415" level="INFO">${secret} = ['a8d1ffb55aca2830802a7cd52acea5687eae1cfc99bf6833c91d448948438bff']</msg>
<status status="PASS" starttime="20230717 19:07:10.415" endtime="20230717 19:07:10.415"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230717 19:07:10.417" level="INFO">${accessKey} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230717 19:07:10.416" endtime="20230717 19:07:10.417"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230717 19:07:10.418" level="INFO">${secret} = a8d1ffb55aca2830802a7cd52acea5687eae1cfc99bf6833c91d448948438bff</msg>
<status status="PASS" starttime="20230717 19:07:10.417" endtime="20230717 19:07:10.418"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:07:10.425" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:07:11.799" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:07:11.800" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:07:10.420" endtime="20230717 19:07:11.800"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:07:11.802" level="INFO"/>
<status status="PASS" starttime="20230717 19:07:11.801" endtime="20230717 19:07:11.802"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:07:11.803" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:07:11.802" endtime="20230717 19:07:11.803"/>
</kw>
<status status="PASS" starttime="20230717 19:07:10.420" endtime="20230717 19:07:11.804"/>
</kw>
<msg timestamp="20230717 19:07:11.804" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:07:10.419" endtime="20230717 19:07:11.804"/>
</kw>
<status status="PASS" starttime="20230717 19:07:10.419" endtime="20230717 19:07:11.804"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:07:11.810" level="INFO">Running command 'aws configure set aws_access_key_id testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:07:12.493" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:07:12.493" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:07:11.806" endtime="20230717 19:07:12.493"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:07:12.495" level="INFO"/>
<status status="PASS" starttime="20230717 19:07:12.494" endtime="20230717 19:07:12.495"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:07:12.495" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:07:12.495" endtime="20230717 19:07:12.495"/>
</kw>
<status status="PASS" starttime="20230717 19:07:11.806" endtime="20230717 19:07:12.496"/>
</kw>
<msg timestamp="20230717 19:07:12.496" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:07:11.805" endtime="20230717 19:07:12.496"/>
</kw>
<status status="PASS" starttime="20230717 19:07:11.805" endtime="20230717 19:07:12.496"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:07:12.501" level="INFO">Running command 'aws configure set aws_secret_access_key a8d1ffb55aca2830802a7cd52acea5687eae1cfc99bf6833c91d448948438bff 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:07:13.168" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:07:13.168" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:07:12.498" endtime="20230717 19:07:13.168"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:07:13.169" level="INFO"/>
<status status="PASS" starttime="20230717 19:07:13.168" endtime="20230717 19:07:13.169"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:07:13.170" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:07:13.169" endtime="20230717 19:07:13.170"/>
</kw>
<status status="PASS" starttime="20230717 19:07:12.498" endtime="20230717 19:07:13.170"/>
</kw>
<msg timestamp="20230717 19:07:13.170" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:07:12.497" endtime="20230717 19:07:13.170"/>
</kw>
<status status="PASS" starttime="20230717 19:07:12.496" endtime="20230717 19:07:13.171"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:07:13.175" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:07:13.887" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:07:13.887" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:07:13.172" endtime="20230717 19:07:13.887"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:07:13.889" level="INFO"/>
<status status="PASS" starttime="20230717 19:07:13.888" endtime="20230717 19:07:13.889"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:07:13.890" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:07:13.889" endtime="20230717 19:07:13.890"/>
</kw>
<status status="PASS" starttime="20230717 19:07:13.172" endtime="20230717 19:07:13.890"/>
</kw>
<msg timestamp="20230717 19:07:13.890" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:07:13.171" endtime="20230717 19:07:13.890"/>
</kw>
<status status="PASS" starttime="20230717 19:07:13.171" endtime="20230717 19:07:13.890"/>
</kw>
<status status="PASS" starttime="20230717 19:07:03.982" endtime="20230717 19:07:13.890"/>
</kw>
<status status="PASS" starttime="20230717 19:07:03.981" endtime="20230717 19:07:13.891"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230717 19:07:13.891" endtime="20230717 19:07:13.891"/>
</kw>
<status status="PASS" starttime="20230717 19:07:03.925" endtime="20230717 19:07:13.891"/>
</kw>
<status status="PASS" starttime="20230717 19:07:03.924" endtime="20230717 19:07:13.891"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230717 19:07:13.891" endtime="20230717 19:07:13.892"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230717 19:07:13.892" endtime="20230717 19:07:13.892"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create encrypted bucket" library="commonawslib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230717 19:07:13.893" endtime="20230717 19:07:13.894"/>
</kw>
<kw name="Bucket Exists" library="shell">
<var>${exists}</var>
<arg>o3://${OM_SERVICE_ID}/s3v/encrypted</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:07:13.898" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://omservice/s3v/encrypted 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:07:21.168" level="INFO">${rc} = 255</msg>
<msg timestamp="20230717 19:07:21.168" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20230717 19:07:13.894" endtime="20230717 19:07:21.168"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20230717 19:07:21.169" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:07:21.169" endtime="20230717 19:07:21.170"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:07:21.170" endtime="20230717 19:07:21.170"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:07:21.170" endtime="20230717 19:07:21.170"/>
</kw>
<msg timestamp="20230717 19:07:21.171" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20230717 19:07:13.894" endtime="20230717 19:07:21.171"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${exists}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230717 19:07:21.171" endtime="20230717 19:07:21.171"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create -k ${KEY_NAME} o3://${OM_SERVICE_ID}/s3v/encrypted</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:07:21.178" level="INFO">Running command 'ozone sh bucket create -k key1 o3://omservice/s3v/encrypted 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:07:29.367" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:07:29.367" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:07:21.174" endtime="20230717 19:07:29.367"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:07:29.369" level="INFO"/>
<status status="PASS" starttime="20230717 19:07:29.368" endtime="20230717 19:07:29.369"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:07:29.370" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:07:29.369" endtime="20230717 19:07:29.370"/>
</kw>
<status status="PASS" starttime="20230717 19:07:21.173" endtime="20230717 19:07:29.370"/>
</kw>
<msg timestamp="20230717 19:07:29.370" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:07:21.172" endtime="20230717 19:07:29.370"/>
</kw>
<status status="PASS" starttime="20230717 19:07:21.172" endtime="20230717 19:07:29.371"/>
</kw>
<status status="PASS" starttime="20230717 19:07:13.893" endtime="20230717 19:07:29.372"/>
</kw>
<status status="PASS" starttime="20230717 19:07:13.892" endtime="20230717 19:07:29.372"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230717 19:07:29.372" endtime="20230717 19:07:29.373"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230717 19:07:29.375" level="INFO">${OZONE_S3_TESTS_SET_UP} = True</msg>
<status status="PASS" starttime="20230717 19:07:29.374" endtime="20230717 19:07:29.375"/>
</kw>
<status status="PASS" starttime="20230717 19:07:03.905" endtime="20230717 19:07:29.375"/>
</kw>
<suite id="s1-s8-s1" name="Awss3" source="/opt/hadoop/smoketest/s3/awss3.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20230717 19:07:29.456" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:07:29.455" endtime="20230717 19:07:29.456"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20230717 19:07:29.457" endtime="20230717 19:07:29.457"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20230717 19:07:29.457" endtime="20230717 19:07:29.457"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:07:29.457" endtime="20230717 19:07:29.457"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:07:29.458" endtime="20230717 19:07:29.458"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:07:29.458" endtime="20230717 19:07:29.458"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:07:29.459" endtime="20230717 19:07:29.459"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:07:29.459" endtime="20230717 19:07:29.459"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20230717 19:07:29.459" endtime="20230717 19:07:29.459"/>
</kw>
<status status="PASS" starttime="20230717 19:07:29.455" endtime="20230717 19:07:29.459"/>
</kw>
<test id="s1-s8-s1-t1" name="File upload and directory list" line="31">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:07:29.469" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20230717 19:07:29.476" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:07:29.476" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:07:29.464" endtime="20230717 19:07:29.476"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:07:29.478" level="INFO"/>
<status status="PASS" starttime="20230717 19:07:29.477" endtime="20230717 19:07:29.478"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:07:29.480" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:07:29.479" endtime="20230717 19:07:29.480"/>
</kw>
<status status="PASS" starttime="20230717 19:07:29.463" endtime="20230717 19:07:29.480"/>
</kw>
<msg timestamp="20230717 19:07:29.480" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:07:29.462" endtime="20230717 19:07:29.481"/>
</kw>
<status status="PASS" starttime="20230717 19:07:29.461" endtime="20230717 19:07:29.481"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:07:29.488" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://encrypted 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:07:42.153" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:07:42.153" level="INFO">${output} = Completed 29 Bytes/29 Bytes (2 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/testfile           </msg>
<status status="PASS" starttime="20230717 19:07:29.485" endtime="20230717 19:07:42.153"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:07:42.155" level="INFO">Completed 29 Bytes/29 Bytes (2 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/testfile           </msg>
<status status="PASS" starttime="20230717 19:07:42.154" endtime="20230717 19:07:42.155"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:07:42.156" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:07:42.156" endtime="20230717 19:07:42.157"/>
</kw>
<status status="PASS" starttime="20230717 19:07:29.484" endtime="20230717 19:07:42.157"/>
</kw>
<msg timestamp="20230717 19:07:42.157" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:07:29.483" endtime="20230717 19:07:42.157"/>
</kw>
<msg timestamp="20230717 19:07:42.158" level="INFO">${output} = Completed 29 Bytes/29 Bytes (2 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/testfile           </msg>
<status status="PASS" starttime="20230717 19:07:29.482" endtime="20230717 19:07:42.158"/>
</kw>
<msg timestamp="20230717 19:07:42.158" level="INFO">${result} = Completed 29 Bytes/29 Bytes (2 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/testfile           </msg>
<status status="PASS" starttime="20230717 19:07:29.481" endtime="20230717 19:07:42.158"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>upload</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:07:42.159" endtime="20230717 19:07:42.161"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}/dir1/dir2/file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:07:42.169" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://encrypted/dir1/dir2/file 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:07:43.303" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:07:43.303" level="INFO">${output} = Completed 29 Bytes/29 Bytes (101 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/dir1/dir2/file       </msg>
<status status="PASS" starttime="20230717 19:07:42.164" endtime="20230717 19:07:43.303"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:07:43.305" level="INFO">Completed 29 Bytes/29 Bytes (101 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/dir1/dir2/file       </msg>
<status status="PASS" starttime="20230717 19:07:43.304" endtime="20230717 19:07:43.305"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:07:43.306" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:07:43.306" endtime="20230717 19:07:43.306"/>
</kw>
<status status="PASS" starttime="20230717 19:07:42.164" endtime="20230717 19:07:43.307"/>
</kw>
<msg timestamp="20230717 19:07:43.307" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:07:42.163" endtime="20230717 19:07:43.307"/>
</kw>
<msg timestamp="20230717 19:07:43.307" level="INFO">${output} = Completed 29 Bytes/29 Bytes (101 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/dir1/dir2/file       </msg>
<status status="PASS" starttime="20230717 19:07:42.162" endtime="20230717 19:07:43.307"/>
</kw>
<msg timestamp="20230717 19:07:43.307" level="INFO">${result} = Completed 29 Bytes/29 Bytes (101 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/dir1/dir2/file       </msg>
<status status="PASS" starttime="20230717 19:07:42.161" endtime="20230717 19:07:43.307"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>upload</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:07:43.308" endtime="20230717 19:07:43.308"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:07:43.315" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://encrypted 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:07:44.437" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:07:44.437" level="INFO">${output} =                            PRE dir1/
2023-07-17 19:07:41         29 testfile</msg>
<status status="PASS" starttime="20230717 19:07:43.311" endtime="20230717 19:07:44.437"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:07:44.439" level="INFO">                           PRE dir1/
2023-07-17 19:07:41         29 testfile</msg>
<status status="PASS" starttime="20230717 19:07:44.438" endtime="20230717 19:07:44.439"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:07:44.440" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:07:44.439" endtime="20230717 19:07:44.440"/>
</kw>
<status status="PASS" starttime="20230717 19:07:43.311" endtime="20230717 19:07:44.440"/>
</kw>
<msg timestamp="20230717 19:07:44.440" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:07:43.310" endtime="20230717 19:07:44.440"/>
</kw>
<msg timestamp="20230717 19:07:44.440" level="INFO">${output} =                            PRE dir1/
2023-07-17 19:07:41         29 testfile</msg>
<status status="PASS" starttime="20230717 19:07:43.309" endtime="20230717 19:07:44.441"/>
</kw>
<msg timestamp="20230717 19:07:44.441" level="INFO">${result} =                            PRE dir1/
2023-07-17 19:07:41         29 testfile</msg>
<status status="PASS" starttime="20230717 19:07:43.309" endtime="20230717 19:07:44.441"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>testfile</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:07:44.441" endtime="20230717 19:07:44.441"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:07:44.442" endtime="20230717 19:07:44.442"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:07:44.442" endtime="20230717 19:07:44.443"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/dir1/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:07:44.449" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://encrypted/dir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:07:45.366" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:07:45.367" level="INFO">${output} =                            PRE dir2/
2023-07-17 19:07:42          0 </msg>
<status status="PASS" starttime="20230717 19:07:44.445" endtime="20230717 19:07:45.367"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:07:45.368" level="INFO">                           PRE dir2/
2023-07-17 19:07:42          0 </msg>
<status status="PASS" starttime="20230717 19:07:45.367" endtime="20230717 19:07:45.368"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:07:45.369" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:07:45.368" endtime="20230717 19:07:45.369"/>
</kw>
<status status="PASS" starttime="20230717 19:07:44.445" endtime="20230717 19:07:45.369"/>
</kw>
<msg timestamp="20230717 19:07:45.369" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:07:44.444" endtime="20230717 19:07:45.370"/>
</kw>
<msg timestamp="20230717 19:07:45.370" level="INFO">${output} =                            PRE dir2/
2023-07-17 19:07:42          0 </msg>
<status status="PASS" starttime="20230717 19:07:44.444" endtime="20230717 19:07:45.370"/>
</kw>
<msg timestamp="20230717 19:07:45.370" level="INFO">${result} =                            PRE dir2/
2023-07-17 19:07:42          0 </msg>
<status status="PASS" starttime="20230717 19:07:44.443" endtime="20230717 19:07:45.370"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>testfile</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:07:45.370" endtime="20230717 19:07:45.371"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:07:45.371" endtime="20230717 19:07:45.371"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:07:45.371" endtime="20230717 19:07:45.372"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/dir1/dir2/file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:07:45.378" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://encrypted/dir1/dir2/file 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:07:46.314" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:07:46.315" level="INFO">${output} = 2023-07-17 19:07:43         29 file
2023-07-17 19:07:43         29 file</msg>
<status status="PASS" starttime="20230717 19:07:45.375" endtime="20230717 19:07:46.315"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:07:46.316" level="INFO">2023-07-17 19:07:43         29 file
2023-07-17 19:07:43         29 file</msg>
<status status="PASS" starttime="20230717 19:07:46.316" endtime="20230717 19:07:46.317"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:07:46.317" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:07:46.317" endtime="20230717 19:07:46.317"/>
</kw>
<status status="PASS" starttime="20230717 19:07:45.374" endtime="20230717 19:07:46.318"/>
</kw>
<msg timestamp="20230717 19:07:46.318" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:07:45.374" endtime="20230717 19:07:46.318"/>
</kw>
<msg timestamp="20230717 19:07:46.318" level="INFO">${output} = 2023-07-17 19:07:43         29 file
2023-07-17 19:07:43         29 file</msg>
<status status="PASS" starttime="20230717 19:07:45.373" endtime="20230717 19:07:46.318"/>
</kw>
<msg timestamp="20230717 19:07:46.318" level="INFO">${result} = 2023-07-17 19:07:43         29 file
2023-07-17 19:07:43         29 file</msg>
<status status="PASS" starttime="20230717 19:07:45.372" endtime="20230717 19:07:46.318"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>testfile</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:07:46.319" endtime="20230717 19:07:46.319"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:07:46.320" endtime="20230717 19:07:46.320"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>file</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:07:46.320" endtime="20230717 19:07:46.321"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:07:29.460" endtime="20230717 19:07:46.321"/>
</test>
<test id="s1-s8-s1-t2" name="File upload with special chars" line="50">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:07:46.330" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20230717 19:07:46.334" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:07:46.334" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:07:46.326" endtime="20230717 19:07:46.334"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:07:46.337" level="INFO"/>
<status status="PASS" starttime="20230717 19:07:46.336" endtime="20230717 19:07:46.337"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:07:46.338" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:07:46.337" endtime="20230717 19:07:46.338"/>
</kw>
<status status="PASS" starttime="20230717 19:07:46.325" endtime="20230717 19:07:46.338"/>
</kw>
<msg timestamp="20230717 19:07:46.339" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:07:46.325" endtime="20230717 19:07:46.339"/>
</kw>
<status status="PASS" starttime="20230717 19:07:46.324" endtime="20230717 19:07:46.339"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}/specialchars/a+b</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:07:46.346" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://encrypted/specialchars/a+b 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:07:47.569" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:07:47.570" level="INFO">${output} = Completed 29 Bytes/29 Bytes (73 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/specialchars/a+b    </msg>
<status status="PASS" starttime="20230717 19:07:46.342" endtime="20230717 19:07:47.570"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:07:47.571" level="INFO">Completed 29 Bytes/29 Bytes (73 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/specialchars/a+b    </msg>
<status status="PASS" starttime="20230717 19:07:47.570" endtime="20230717 19:07:47.571"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:07:47.572" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:07:47.572" endtime="20230717 19:07:47.572"/>
</kw>
<status status="PASS" starttime="20230717 19:07:46.342" endtime="20230717 19:07:47.572"/>
</kw>
<msg timestamp="20230717 19:07:47.572" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:07:46.341" endtime="20230717 19:07:47.573"/>
</kw>
<msg timestamp="20230717 19:07:47.573" level="INFO">${output} = Completed 29 Bytes/29 Bytes (73 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/specialchars/a+b    </msg>
<status status="PASS" starttime="20230717 19:07:46.340" endtime="20230717 19:07:47.573"/>
</kw>
<msg timestamp="20230717 19:07:47.573" level="INFO">${result} = Completed 29 Bytes/29 Bytes (73 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/specialchars/a+b    </msg>
<status status="PASS" starttime="20230717 19:07:46.340" endtime="20230717 19:07:47.573"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>upload</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:07:47.573" endtime="20230717 19:07:47.574"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/specialchars/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:07:47.581" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://encrypted/specialchars/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:07:48.617" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:07:48.618" level="INFO">${output} = 2023-07-17 19:07:47          0 
2023-07-17 19:07:47         29 a+b</msg>
<status status="PASS" starttime="20230717 19:07:47.577" endtime="20230717 19:07:48.618"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:07:48.619" level="INFO">2023-07-17 19:07:47          0 
2023-07-17 19:07:47         29 a+b</msg>
<status status="PASS" starttime="20230717 19:07:48.618" endtime="20230717 19:07:48.619"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:07:48.620" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:07:48.619" endtime="20230717 19:07:48.620"/>
</kw>
<status status="PASS" starttime="20230717 19:07:47.576" endtime="20230717 19:07:48.620"/>
</kw>
<msg timestamp="20230717 19:07:48.620" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:07:47.575" endtime="20230717 19:07:48.621"/>
</kw>
<msg timestamp="20230717 19:07:48.621" level="INFO">${output} = 2023-07-17 19:07:47          0 
2023-07-17 19:07:47         29 a+b</msg>
<status status="PASS" starttime="20230717 19:07:47.575" endtime="20230717 19:07:48.621"/>
</kw>
<msg timestamp="20230717 19:07:48.621" level="INFO">${result} = 2023-07-17 19:07:47          0 
2023-07-17 19:07:47         29 a+b</msg>
<status status="PASS" starttime="20230717 19:07:47.574" endtime="20230717 19:07:48.621"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>'a b'</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:07:48.621" endtime="20230717 19:07:48.622"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>a+b</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:07:48.622" endtime="20230717 19:07:48.622"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:07:46.323" endtime="20230717 19:07:48.623"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20230717 19:07:29.376" endtime="20230717 19:07:48.625"/>
</suite>
<suite id="s1-s8-s2" name="Boto3" source="/opt/hadoop/smoketest/s3/boto3.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20230717 19:07:48.648" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:07:48.648" endtime="20230717 19:07:48.648"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20230717 19:07:48.648" endtime="20230717 19:07:48.648"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20230717 19:07:48.648" endtime="20230717 19:07:48.648"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:07:48.649" endtime="20230717 19:07:48.649"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:07:48.649" endtime="20230717 19:07:48.649"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:07:48.649" endtime="20230717 19:07:48.649"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:07:48.649" endtime="20230717 19:07:48.649"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:07:48.650" endtime="20230717 19:07:48.650"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20230717 19:07:48.650" endtime="20230717 19:07:48.650"/>
</kw>
<status status="PASS" starttime="20230717 19:07:48.647" endtime="20230717 19:07:48.650"/>
</kw>
<test id="s1-s8-s2-t1" name="Boto3 Client Test" line="34">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>python3 ${S3_SMOKETEST_DIR}/boto_client.py ${ENDPOINT_URL} ${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:07:48.657" level="INFO">Running command 'python3 /opt/hadoop/smoketest/s3/boto_client.py http://s3g:9878 encrypted 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:08:56.037" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:08:56.037" level="INFO">${output} = test_create_bucket (__main__.TestBotoClient) ... /usr/local/lib/python3.6/site-packages/boto3/compat.py:88: PythonDeprecationWarning: Boto3 will no longer support Python 3.6 starting May 30, 2022. To ...</msg>
<status status="PASS" starttime="20230717 19:07:48.653" endtime="20230717 19:08:56.037"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:08:56.041" level="INFO">test_create_bucket (__main__.TestBotoClient) ... /usr/local/lib/python3.6/site-packages/boto3/compat.py:88: PythonDeprecationWarning: Boto3 will no longer support Python 3.6 starting May 30, 2022. To continue receiving service updates, bug fixes, and security updates please upgrade to Python 3.7 or later. More information can be found here: https://aws.amazon.com/blogs/developer/python-support-policy-updates-for-aws-sdks-and-tools/
  warnings.warn(warning, PythonDeprecationWarning)
ok
test_list_bucket (__main__.TestBotoClient) ... ok
test_head_bucket (__main__.TestBotoClient) ... ok
test_bucket_delete (__main__.TestBotoClient) ... ok
test_upload_file (__main__.TestBotoClient) ... ok
test_download_file (__main__.TestBotoClient) ... ok
test_delete_objects (__main__.TestBotoClient) ... ok
test_head_object (__main__.TestBotoClient) ... ok
test_multi_uploads (__main__.TestBotoClient) ... ok

----------------------------------------------------------------------
Ran 9 tests in 66.630s

OK
{'ResponseMetadata': {'RequestId': 'af133a4d-3330-48d0-be5b-afbc8c8b23fb', 'HostId': 'LbhNGD3nr', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Mon, 17 Jul 2023 19:07:49 GMT', 'cache-control': 'no-cache', 'expires': 'Mon, 17 Jul 2023 19:07:49 GMT', 'pragma': 'no-cache', 'content-type': 'text/plain;charset=utf-8', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'location': 'http://s3g:9878/ozone-test-vmozmgwljx', 'server': 'Ozone', 'x-amz-id-2': 'LbhNGD3nr', 'x-amz-request-id': 'af133a4d-3330-48d0-be5b-afbc8c8b23fb', 'content-length': '0'}, 'RetryAttempts': 0}, 'Location': 'http://s3g:9878/ozone-test-vmozmgwljx'}
None
None
None
{'ResponseMetadata': {'RequestId': '70dc145f-67df-4d64-851e-889f14404793', 'HostId': '8DDsCpjZbdc', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Mon, 17 Jul 2023 19:08:46 GMT', 'cache-control': 'no-cache', 'expires': 'Mon, 17 Jul 2023 19:08:46 GMT', 'pragma': 'no-cache', 'content-type': 'text/plain;charset=utf-8', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'location': 'http://s3g:9878/bucket-logiskeuzf', 'server': 'Ozone', 'x-amz-id-2': '8DDsCpjZbdc', 'x-amz-request-id': '70dc145f-67df-4d64-851e-889f14404793', 'content-length': '0'}, 'RetryAttempts': 0}, 'Location': 'http://s3g:9878/bucket-logiskeuzf'}
{'ResponseMetadata': {'RequestId': '2fab09d9-c9e5-4d3a-b089-f87ed352d1cc', 'HostId': 'gR6maPVOgiIXjj', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Mon, 17 Jul 2023 19:08:46 GMT', 'cache-control': 'no-cache', 'expires': 'Mon, 17 Jul 2023 19:08:46 GMT', 'pragma': 'no-cache', 'content-type': 'application/xml', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': 'gR6maPVOgiIXjj', 'x-amz-request-id': '2fab09d9-c9e5-4d3a-b089-f87ed352d1cc', 'content-length': '467'}, 'RetryAttempts': 0}, 'Buckets': [{'Name': 'bucket-logiskeuzf', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 8, 46, 849000, tzinfo=tzlocal())}, {'Name': 'encrypted', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 7, 28, 175000, tzinfo=tzlocal())}, {'Name': 'ozone-test-vmozmgwljx', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 7, 49, 437000, tzinfo=tzlocal())}]}
{'ResponseMetadata': {'RequestId': 'b6bb6dbe-3b1b-4f54-81dd-fa50db93d00b', 'HostId': '3TaOrUWAo112', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Mon, 17 Jul 2023 19:08:47 GMT', 'cache-control': 'no-cache', 'expires': 'Mon, 17 Jul 2023 19:08:47 GMT', 'pragma': 'no-cache', 'content-type': 'text/xml', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': '3TaOrUWAo112', 'x-amz-request-id': 'b6bb6dbe-3b1b-4f54-81dd-fa50db93d00b', 'content-length': '0'}, 'RetryAttempts': 0}}
{'ResponseMetadata': {'RequestId': '47c18c16-ade4-4e1c-87a4-a8351f973bdc', 'HostId': '9LBOTCHEFB5z', 'HTTPStatusCode': 204, 'HTTPHeaders': {'date': 'Mon, 17 Jul 2023 19:08:47 GMT', 'cache-control': 'no-cache', 'expires': 'Mon, 17 Jul 2023 19:08:47 GMT', 'pragma': 'no-cache', 'content-type': 'text/plain;charset=utf-8', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': '9LBOTCHEFB5z', 'x-amz-request-id': '47c18c16-ade4-4e1c-87a4-a8351f973bdc'}, 'RetryAttempts': 0}}
{'ResponseMetadata': {'RequestId': '4482d6cc-852b-4989-aafd-5864f414fc1a', 'HostId': 'bnImP75ZeiO', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Mon, 17 Jul 2023 19:08:48 GMT', 'cache-control': 'no-cache', 'expires': 'Mon, 17 Jul 2023 19:08:48 GMT', 'pragma': 'no-cache', 'content-type': 'binary/octet-stream', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'etag': '2023-07-17T19:08:47.938Z', 'last-modified': 'Mon, 17 Jul 2023 19:08:47 GMT', 'server': 'Ozone', 'x-amz-id-2': 'bnImP75ZeiO', 'x-amz-request-id': '4482d6cc-852b-4989-aafd-5864f414fc1a', 'content-length': '4068'}, 'RetryAttempts': 0}, 'LastModified': datetime.datetime(2023, 7, 17, 19, 8, 47, tzinfo=tzutc()), 'ContentLength': 4068, 'ETag': '2023-07-17T19:08:47.938Z', 'CacheControl': 'no-cache', 'ContentType': 'binary/octet-stream', 'Expires': datetime.datetime(2023, 7, 17, 19, 8, 48, tzinfo=tzutc()), 'Metadata': {}}
{'ResponseMetadata': {'RequestId': '4ab75b9c-d860-45be-a6e4-9a3fddc6e3d2', 'HostId': '9ILQvXeeam8nNIA', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Mon, 17 Jul 2023 19:08:49 GMT', 'cache-control': 'no-cache', 'expires': 'Mon, 17 Jul 2023 19:08:49 GMT', 'pragma': 'no-cache', 'content-type': 'application/xml', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': '9ILQvXeeam8nNIA', 'x-amz-request-id': '4ab75b9c-d860-45be-a6e4-9a3fddc6e3d2', 'content-length': '212'}, 'RetryAttempts': 0}, 'Deleted': [{'Key': 'README4.md'}, {'Key': 'README3.md'}]}
{'ResponseMetadata': {'RequestId': '0edfcbf8-9f02-4bf2-9fd6-5619728409ef', 'HostId': 'PQAiTgl8ckri', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Mon, 17 Jul 2023 19:08:49 GMT', 'cache-control': 'no-cache', 'expires': 'Mon, 17 Jul 2023 19:08:49 GMT', 'pragma': 'no-cache', 'content-type': 'binary/octet-stream', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'etag': '2023-07-17T19:07:50.590Z', 'last-modified': 'Mon, 17 Jul 2023 19:07:50 GMT', 'server': 'Ozone', 'x-amz-id-2': 'PQAiTgl8ckri', 'x-amz-request-id': '0edfcbf8-9f02-4bf2-9fd6-5619728409ef', 'content-length': '4068'}, 'RetryAttempts': 0}, 'LastModified': datetime.datetime(2023, 7, 17, 19, 7, 50, tzinfo=tzutc()), 'ContentLength': 4068, 'ETag': '2023-07-17T19:07:50.590Z', 'CacheControl': 'no-cache', 'ContentType': 'binary/octet-stream', 'Expires': datetime.datetime(2023, 7, 17, 19, 8, 49, tzinfo=tzutc()), 'Metadata': {}}
{'ResponseMetadata': {'RequestId': 'f758784b-9959-4114-b237-340e517a4fcc', 'HostId': 'BrDJT9SsW', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Mon, 17 Jul 2023 19:08:49 GMT', 'cache-control': 'no-cache', 'expires': 'Mon, 17 Jul 2023 19:08:49 GMT', 'pragma': 'no-cache', 'content-type': 'application/xml', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': 'BrDJT9SsW', 'x-amz-request-id': 'f758784b-9959-4114-b237-340e517a4fcc', 'content-length': '289'}, 'RetryAttempts': 0}, 'Bucket': 'encrypted', 'Key': 'eriqbfvszg', 'UploadId': '207a53c7-65fc-4674-a894-1b7125d5595f-110730997251375248'}
{'ResponseMetadata': {'RequestId': '5eb9fa93-0603-41e0-8fe1-eac1ec1305bf', 'HostId': '582bBgFIsvp', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Mon, 17 Jul 2023 19:08:55 GMT', 'cache-control': 'no-cache', 'expires': 'Mon, 17 Jul 2023 19:08:55 GMT', 'pragma': 'no-cache', 'content-type': 'application/xml', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': '582bBgFIsvp', 'x-amz-request-id': '5eb9fa93-0603-41e0-8fe1-eac1ec1305bf', 'content-length': '320'}, 'RetryAttempts': 0}, 'Location': 'encrypted', 'Bucket': 'encrypted', 'Key': 'eriqbfvszg', 'ETag': 'a02829a95954def9dae13a14c7ec85d4d9cbf220a55478cb6b15936e982ee351'}
Boto3 Client Test PASSED!</msg>
<status status="PASS" starttime="20230717 19:08:56.038" endtime="20230717 19:08:56.043"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:08:56.044" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:08:56.043" endtime="20230717 19:08:56.044"/>
</kw>
<status status="PASS" starttime="20230717 19:07:48.653" endtime="20230717 19:08:56.044"/>
</kw>
<msg timestamp="20230717 19:08:56.045" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:07:48.652" endtime="20230717 19:08:56.045"/>
</kw>
<msg timestamp="20230717 19:08:56.045" level="INFO">${result} = test_create_bucket (__main__.TestBotoClient) ... /usr/local/lib/python3.6/site-packages/boto3/compat.py:88: PythonDeprecationWarning: Boto3 will no longer support Python 3.6 starting May 30, 2022. To ...</msg>
<status status="PASS" starttime="20230717 19:07:48.652" endtime="20230717 19:08:56.047"/>
</kw>
<timeout value="15 minutes"/>
<status status="PASS" starttime="20230717 19:07:48.651" endtime="20230717 19:08:56.047"/>
</test>
<doc>S3 gateway test with Boto3 Client</doc>
<status status="PASS" starttime="20230717 19:07:48.627" endtime="20230717 19:08:56.049"/>
</suite>
<suite id="s1-s8-s3" name="Bucketcreate" source="/opt/hadoop/smoketest/s3/bucketcreate.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20230717 19:08:56.108" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:08:56.107" endtime="20230717 19:08:56.108"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20230717 19:08:56.109" endtime="20230717 19:08:56.110"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20230717 19:08:56.110" endtime="20230717 19:08:56.110"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:08:56.110" endtime="20230717 19:08:56.110"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:08:56.111" endtime="20230717 19:08:56.111"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:08:56.111" endtime="20230717 19:08:56.111"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:08:56.114" endtime="20230717 19:08:56.114"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:08:56.114" endtime="20230717 19:08:56.114"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20230717 19:08:56.114" endtime="20230717 19:08:56.114"/>
</kw>
<status status="PASS" starttime="20230717 19:08:56.107" endtime="20230717 19:08:56.116"/>
</kw>
<test id="s1-s8-s3-t1" name="Create new bucket" line="32">
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Ozone String" library="commonawslib">
<var>${postfix}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230717 19:08:56.126" level="INFO">${randStr} = 0061864334</msg>
<status status="PASS" starttime="20230717 19:08:56.124" endtime="20230717 19:08:56.126"/>
</kw>
<msg timestamp="20230717 19:08:56.127" level="INFO">${postfix} = ozone-test-0061864334</msg>
<status status="PASS" starttime="20230717 19:08:56.121" endtime="20230717 19:08:56.127"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230717 19:08:56.131" level="INFO">${bucket} = bucket-ozone-test-0061864334</msg>
<status status="PASS" starttime="20230717 19:08:56.129" endtime="20230717 19:08:56.131"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:08:56.156" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-ozone-test-0061864334 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:08:58.482" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:08:58.482" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-0061864334"
}</msg>
<status status="PASS" starttime="20230717 19:08:56.142" endtime="20230717 19:08:58.482"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:08:58.484" level="INFO">{
    "Location": "http://s3g:9878/bucket-ozone-test-0061864334"
}</msg>
<status status="PASS" starttime="20230717 19:08:58.483" endtime="20230717 19:08:58.484"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:08:58.492" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:08:58.484" endtime="20230717 19:08:58.493"/>
</kw>
<status status="PASS" starttime="20230717 19:08:56.140" endtime="20230717 19:08:58.496"/>
</kw>
<msg timestamp="20230717 19:08:58.496" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:08:56.139" endtime="20230717 19:08:58.499"/>
</kw>
<msg timestamp="20230717 19:08:58.499" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-0061864334"
}</msg>
<status status="PASS" starttime="20230717 19:08:56.135" endtime="20230717 19:08:58.499"/>
</kw>
<msg timestamp="20230717 19:08:58.499" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-ozone-test-0061864334"
}</msg>
<status status="PASS" starttime="20230717 19:08:56.133" endtime="20230717 19:08:58.503"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:08:58.503" endtime="20230717 19:08:58.506"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:08:58.510" endtime="20230717 19:08:58.510"/>
</kw>
<status status="PASS" starttime="20230717 19:08:56.131" endtime="20230717 19:08:58.510"/>
</kw>
<status status="PASS" starttime="20230717 19:08:56.120" endtime="20230717 19:08:58.511"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:08:56.116" endtime="20230717 19:08:58.511"/>
</test>
<test id="s1-s8-s3-t2" name="Create bucket which already exists" line="35">
<kw name="Create bucket" library="commonawslib">
<var>${bucket}</var>
<kw name="Generate Ozone String" library="commonawslib">
<var>${postfix}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230717 19:08:58.517" level="INFO">${randStr} = 9909917004</msg>
<status status="PASS" starttime="20230717 19:08:58.516" endtime="20230717 19:08:58.517"/>
</kw>
<msg timestamp="20230717 19:08:58.517" level="INFO">${postfix} = ozone-test-9909917004</msg>
<status status="PASS" starttime="20230717 19:08:58.515" endtime="20230717 19:08:58.517"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230717 19:08:58.519" level="INFO">${bucket} = bucket-ozone-test-9909917004</msg>
<status status="PASS" starttime="20230717 19:08:58.519" endtime="20230717 19:08:58.519"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:08:58.532" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-ozone-test-9909917004 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:09:00.722" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:09:00.722" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-9909917004"
}</msg>
<status status="PASS" starttime="20230717 19:08:58.526" endtime="20230717 19:09:00.722"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:09:00.726" level="INFO">{
    "Location": "http://s3g:9878/bucket-ozone-test-9909917004"
}</msg>
<status status="PASS" starttime="20230717 19:09:00.723" endtime="20230717 19:09:00.726"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:09:00.728" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:09:00.727" endtime="20230717 19:09:00.728"/>
</kw>
<status status="PASS" starttime="20230717 19:08:58.524" endtime="20230717 19:09:00.728"/>
</kw>
<msg timestamp="20230717 19:09:00.728" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:08:58.523" endtime="20230717 19:09:00.728"/>
</kw>
<msg timestamp="20230717 19:09:00.730" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-9909917004"
}</msg>
<status status="PASS" starttime="20230717 19:08:58.522" endtime="20230717 19:09:00.730"/>
</kw>
<msg timestamp="20230717 19:09:00.730" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-ozone-test-9909917004"
}</msg>
<status status="PASS" starttime="20230717 19:08:58.520" endtime="20230717 19:09:00.730"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:09:00.730" endtime="20230717 19:09:00.732"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:09:00.732" endtime="20230717 19:09:00.733"/>
</kw>
<status status="PASS" starttime="20230717 19:08:58.520" endtime="20230717 19:09:00.733"/>
</kw>
<msg timestamp="20230717 19:09:00.734" level="INFO">${bucket} = bucket-ozone-test-9909917004</msg>
<status status="PASS" starttime="20230717 19:08:58.514" endtime="20230717 19:09:00.734"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:09:00.751" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-ozone-test-9909917004 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:09:02.927" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:09:02.927" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-9909917004"
}</msg>
<status status="PASS" starttime="20230717 19:09:00.742" endtime="20230717 19:09:02.928"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:09:02.931" level="INFO">{
    "Location": "http://s3g:9878/bucket-ozone-test-9909917004"
}</msg>
<status status="PASS" starttime="20230717 19:09:02.929" endtime="20230717 19:09:02.933"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:09:02.934" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:09:02.933" endtime="20230717 19:09:02.934"/>
</kw>
<status status="PASS" starttime="20230717 19:09:00.740" endtime="20230717 19:09:02.935"/>
</kw>
<msg timestamp="20230717 19:09:02.935" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:09:00.739" endtime="20230717 19:09:02.935"/>
</kw>
<msg timestamp="20230717 19:09:02.935" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-9909917004"
}</msg>
<status status="PASS" starttime="20230717 19:09:00.738" endtime="20230717 19:09:02.935"/>
</kw>
<msg timestamp="20230717 19:09:02.936" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-ozone-test-9909917004"
}</msg>
<status status="PASS" starttime="20230717 19:09:00.736" endtime="20230717 19:09:02.936"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:09:02.936" endtime="20230717 19:09:02.937"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:09:02.937" endtime="20230717 19:09:02.937"/>
</kw>
<status status="PASS" starttime="20230717 19:09:00.734" endtime="20230717 19:09:02.939"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:08:58.512" endtime="20230717 19:09:02.939"/>
</test>
<test id="s1-s8-s3-t3" name="Create bucket with invalid bucket name" line="39">
<kw name="Generate Ozone String" library="commonawslib">
<var>${randStr}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230717 19:09:02.946" level="INFO">${randStr} = 2085149291</msg>
<status status="PASS" starttime="20230717 19:09:02.945" endtime="20230717 19:09:02.946"/>
</kw>
<msg timestamp="20230717 19:09:02.946" level="INFO">${randStr} = ozone-test-2085149291</msg>
<status status="PASS" starttime="20230717 19:09:02.944" endtime="20230717 19:09:02.948"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket invalid_bucket_${randStr}</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:09:02.965" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket invalid_bucket_ozone-test-2085149291 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:09:05.444" level="INFO">${rc} = 255</msg>
<msg timestamp="20230717 19:09:05.445" level="INFO">${output} = 
An error occurred (InvalidBucketName) when calling the CreateBucket operation: The specified bucket is not valid.</msg>
<status status="PASS" starttime="20230717 19:09:02.953" endtime="20230717 19:09:05.445"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:09:05.453" level="INFO">
An error occurred (InvalidBucketName) when calling the CreateBucket operation: The specified bucket is not valid.</msg>
<status status="PASS" starttime="20230717 19:09:05.449" endtime="20230717 19:09:05.455"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:09:05.460" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:09:05.457" endtime="20230717 19:09:05.462"/>
</kw>
<msg timestamp="20230717 19:09:05.463" level="INFO">${output} = 
An error occurred (InvalidBucketName) when calling the CreateBucket operation: The specified bucket is not valid.</msg>
<status status="PASS" starttime="20230717 19:09:02.952" endtime="20230717 19:09:05.463"/>
</kw>
<msg timestamp="20230717 19:09:05.466" level="INFO">${result} = 
An error occurred (InvalidBucketName) when calling the CreateBucket operation: The specified bucket is not valid.</msg>
<status status="PASS" starttime="20230717 19:09:02.948" endtime="20230717 19:09:05.466"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidBucketName</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:09:05.468" endtime="20230717 19:09:05.471"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:09:02.941" endtime="20230717 19:09:05.472"/>
</test>
<test id="s1-s8-s3-t4" name="Create new bucket and check no group ACL" line="43">
<kw name="Create bucket" library="commonawslib">
<var>${bucket}</var>
<kw name="Generate Ozone String" library="commonawslib">
<var>${postfix}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230717 19:09:05.490" level="INFO">${randStr} = 4697753491</msg>
<status status="PASS" starttime="20230717 19:09:05.489" endtime="20230717 19:09:05.491"/>
</kw>
<msg timestamp="20230717 19:09:05.493" level="INFO">${postfix} = ozone-test-4697753491</msg>
<status status="PASS" starttime="20230717 19:09:05.485" endtime="20230717 19:09:05.493"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230717 19:09:05.496" level="INFO">${bucket} = bucket-ozone-test-4697753491</msg>
<status status="PASS" starttime="20230717 19:09:05.494" endtime="20230717 19:09:05.497"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:09:05.519" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-ozone-test-4697753491 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:09:08.067" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:09:08.070" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-4697753491"
}</msg>
<status status="PASS" starttime="20230717 19:09:05.508" endtime="20230717 19:09:08.070"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:09:08.086" level="INFO">{
    "Location": "http://s3g:9878/bucket-ozone-test-4697753491"
}</msg>
<status status="PASS" starttime="20230717 19:09:08.072" endtime="20230717 19:09:08.098"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:09:08.104" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:09:08.098" endtime="20230717 19:09:08.109"/>
</kw>
<status status="PASS" starttime="20230717 19:09:05.507" endtime="20230717 19:09:08.109"/>
</kw>
<msg timestamp="20230717 19:09:08.110" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:09:05.503" endtime="20230717 19:09:08.117"/>
</kw>
<msg timestamp="20230717 19:09:08.118" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-4697753491"
}</msg>
<status status="PASS" starttime="20230717 19:09:05.502" endtime="20230717 19:09:08.118"/>
</kw>
<msg timestamp="20230717 19:09:08.118" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-ozone-test-4697753491"
}</msg>
<status status="PASS" starttime="20230717 19:09:05.500" endtime="20230717 19:09:08.118"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:09:08.119" endtime="20230717 19:09:08.120"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:09:08.120" endtime="20230717 19:09:08.132"/>
</kw>
<status status="PASS" starttime="20230717 19:09:05.497" endtime="20230717 19:09:08.132"/>
</kw>
<msg timestamp="20230717 19:09:08.138" level="INFO">${bucket} = bucket-ozone-test-4697753491</msg>
<status status="PASS" starttime="20230717 19:09:05.482" endtime="20230717 19:09:08.138"/>
</kw>
<kw name="Execute" library="os">
<var>${acl}</var>
<arg>ozone sh bucket getacl s3v/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:09:08.170" level="INFO">Running command 'ozone sh bucket getacl s3v/bucket-ozone-test-4697753491 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:09:37.040" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:09:37.040" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/s3g@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20230717 19:09:08.152" endtime="20230717 19:09:37.040"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:09:37.042" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/s3g@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "NONE" ]
} ]</msg>
<status status="PASS" starttime="20230717 19:09:37.041" endtime="20230717 19:09:37.042"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:09:37.043" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:09:37.042" endtime="20230717 19:09:37.043"/>
</kw>
<status status="PASS" starttime="20230717 19:09:08.150" endtime="20230717 19:09:37.044"/>
</kw>
<msg timestamp="20230717 19:09:37.044" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:09:08.149" endtime="20230717 19:09:37.044"/>
</kw>
<msg timestamp="20230717 19:09:37.044" level="INFO">${acl} = [ {
  "type" : "USER",
  "name" : "testuser/s3g@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20230717 19:09:08.139" endtime="20230717 19:09:37.044"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${group}</var>
<arg>${acl}</arg>
<arg>"GROUP"</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230717 19:09:37.048" level="INFO">${group} = ['"GROUP"']</msg>
<status status="PASS" starttime="20230717 19:09:37.046" endtime="20230717 19:09:37.048"/>
</kw>
<if>
<branch type="IF" condition="'${group}' is not '[]'">
<kw name="Evaluate" library="BuiltIn">
<var>${json}</var>
<arg>json.loads('''${acl}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230717 19:09:37.052" level="INFO">${json} = [{'type': 'USER', 'name': 'testuser/s3g@EXAMPLE.COM', 'aclScope': 'ACCESS', 'aclList': ['ALL']}, {'type': 'GROUP', 'name': 'testuser', 'aclScope': 'ACCESS', 'aclList': ['NONE']}]</msg>
<status status="PASS" starttime="20230717 19:09:37.052" endtime="20230717 19:09:37.054"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${json}[1][type]</arg>
<arg>GROUP</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:09:37.054" endtime="20230717 19:09:37.054"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${json}[1][aclList]</arg>
<arg>NONE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:09:37.056" endtime="20230717 19:09:37.056"/>
</kw>
<status status="PASS" starttime="20230717 19:09:37.050" endtime="20230717 19:09:37.057"/>
</branch>
<status status="PASS" starttime="20230717 19:09:37.049" endtime="20230717 19:09:37.057"/>
</if>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:09:05.478" endtime="20230717 19:09:37.057"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20230717 19:08:56.058" endtime="20230717 19:09:37.061"/>
</suite>
<suite id="s1-s8-s4" name="Bucketdelete" source="/opt/hadoop/smoketest/s3/bucketdelete.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20230717 19:09:37.106" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:09:37.105" endtime="20230717 19:09:37.106"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20230717 19:09:37.106" endtime="20230717 19:09:37.106"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20230717 19:09:37.107" endtime="20230717 19:09:37.107"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:09:37.107" endtime="20230717 19:09:37.107"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:09:37.107" endtime="20230717 19:09:37.107"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:09:37.108" endtime="20230717 19:09:37.108"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:09:37.108" endtime="20230717 19:09:37.110"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:09:37.111" endtime="20230717 19:09:37.111"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20230717 19:09:37.111" endtime="20230717 19:09:37.111"/>
</kw>
<status status="PASS" starttime="20230717 19:09:37.104" endtime="20230717 19:09:37.112"/>
</kw>
<test id="s1-s8-s4-t1" name="Delete existing bucket" line="37">
<kw name="Create bucket to be deleted">
<var>${bucket}</var>
<kw name="Run Keyword If" library="BuiltIn">
<var>${bucket}</var>
<arg>'${BUCKET}' == 'link'</arg>
<arg>Create link</arg>
<arg>to-be-deleted</arg>
<arg>ELSE</arg>
<arg>Run Keyword</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create bucket</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Ozone String" library="commonawslib">
<var>${postfix}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230717 19:09:37.126" level="INFO">${randStr} = 7404244051</msg>
<status status="PASS" starttime="20230717 19:09:37.125" endtime="20230717 19:09:37.126"/>
</kw>
<msg timestamp="20230717 19:09:37.128" level="INFO">${postfix} = ozone-test-7404244051</msg>
<status status="PASS" starttime="20230717 19:09:37.124" endtime="20230717 19:09:37.128"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230717 19:09:37.130" level="INFO">${bucket} = bucket-ozone-test-7404244051</msg>
<status status="PASS" starttime="20230717 19:09:37.128" endtime="20230717 19:09:37.130"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:09:37.147" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-ozone-test-7404244051 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:09:39.347" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:09:39.348" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-7404244051"
}</msg>
<status status="PASS" starttime="20230717 19:09:37.137" endtime="20230717 19:09:39.348"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:09:39.352" level="INFO">{
    "Location": "http://s3g:9878/bucket-ozone-test-7404244051"
}</msg>
<status status="PASS" starttime="20230717 19:09:39.349" endtime="20230717 19:09:39.352"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:09:39.360" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:09:39.356" endtime="20230717 19:09:39.360"/>
</kw>
<status status="PASS" starttime="20230717 19:09:37.135" endtime="20230717 19:09:39.360"/>
</kw>
<msg timestamp="20230717 19:09:39.360" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:09:37.135" endtime="20230717 19:09:39.362"/>
</kw>
<msg timestamp="20230717 19:09:39.364" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-7404244051"
}</msg>
<status status="PASS" starttime="20230717 19:09:37.134" endtime="20230717 19:09:39.364"/>
</kw>
<msg timestamp="20230717 19:09:39.366" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-ozone-test-7404244051"
}</msg>
<status status="PASS" starttime="20230717 19:09:37.133" endtime="20230717 19:09:39.367"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:09:39.367" endtime="20230717 19:09:39.368"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:09:39.370" endtime="20230717 19:09:39.370"/>
</kw>
<status status="PASS" starttime="20230717 19:09:37.131" endtime="20230717 19:09:39.371"/>
</kw>
<status status="PASS" starttime="20230717 19:09:37.120" endtime="20230717 19:09:39.371"/>
</kw>
<status status="PASS" starttime="20230717 19:09:37.118" endtime="20230717 19:09:39.371"/>
</kw>
<msg timestamp="20230717 19:09:39.371" level="INFO">${bucket} = bucket-ozone-test-7404244051</msg>
<status status="PASS" starttime="20230717 19:09:37.116" endtime="20230717 19:09:39.371"/>
</kw>
<msg timestamp="20230717 19:09:39.371" level="INFO">${bucket} = bucket-ozone-test-7404244051</msg>
<status status="PASS" starttime="20230717 19:09:37.115" endtime="20230717 19:09:39.372"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>delete-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:09:39.396" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket bucket-ozone-test-7404244051 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:09:41.469" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:09:41.469" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:09:39.380" endtime="20230717 19:09:41.469"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:09:41.473" level="INFO"/>
<status status="PASS" starttime="20230717 19:09:41.470" endtime="20230717 19:09:41.473"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:09:41.480" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:09:41.477" endtime="20230717 19:09:41.480"/>
</kw>
<status status="PASS" starttime="20230717 19:09:39.379" endtime="20230717 19:09:41.480"/>
</kw>
<msg timestamp="20230717 19:09:41.480" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:09:39.378" endtime="20230717 19:09:41.482"/>
</kw>
<msg timestamp="20230717 19:09:41.482" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:09:39.375" endtime="20230717 19:09:41.482"/>
</kw>
<status status="PASS" starttime="20230717 19:09:39.374" endtime="20230717 19:09:41.482"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:09:37.113" endtime="20230717 19:09:41.483"/>
</test>
<test id="s1-s8-s4-t2" name="Delete non-existent bucket" line="41">
<kw name="Generate Ozone String" library="commonawslib">
<var>${randStr}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230717 19:09:41.489" level="INFO">${randStr} = 9214281227</msg>
<status status="PASS" starttime="20230717 19:09:41.488" endtime="20230717 19:09:41.489"/>
</kw>
<msg timestamp="20230717 19:09:41.489" level="INFO">${randStr} = ozone-test-9214281227</msg>
<status status="PASS" starttime="20230717 19:09:41.487" endtime="20230717 19:09:41.489"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>delete-bucket --bucket nosuchbucket-${randStr}</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:09:41.496" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket nosuchbucket-ozone-test-9214281227 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:09:43.589" level="INFO">${rc} = 255</msg>
<msg timestamp="20230717 19:09:43.589" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the DeleteBucket operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20230717 19:09:41.491" endtime="20230717 19:09:43.589"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:09:43.595" level="INFO">
An error occurred (NoSuchBucket) when calling the DeleteBucket operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20230717 19:09:43.591" endtime="20230717 19:09:43.596"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:09:43.600" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:09:43.596" endtime="20230717 19:09:43.601"/>
</kw>
<msg timestamp="20230717 19:09:43.602" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the DeleteBucket operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20230717 19:09:41.490" endtime="20230717 19:09:43.602"/>
</kw>
<msg timestamp="20230717 19:09:43.602" level="INFO">${result} = 
An error occurred (NoSuchBucket) when calling the DeleteBucket operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20230717 19:09:41.489" endtime="20230717 19:09:43.602"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchBucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:09:43.603" endtime="20230717 19:09:43.605"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:09:41.486" endtime="20230717 19:09:43.606"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20230717 19:09:37.068" endtime="20230717 19:09:43.610"/>
</suite>
<suite id="s1-s8-s5" name="Buckethead" source="/opt/hadoop/smoketest/s3/buckethead.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20230717 19:09:43.660" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:09:43.657" endtime="20230717 19:09:43.660"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20230717 19:09:43.660" endtime="20230717 19:09:43.660"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20230717 19:09:43.661" endtime="20230717 19:09:43.661"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:09:43.663" endtime="20230717 19:09:43.663"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:09:43.663" endtime="20230717 19:09:43.663"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:09:43.664" endtime="20230717 19:09:43.664"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:09:43.664" endtime="20230717 19:09:43.664"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:09:43.664" endtime="20230717 19:09:43.664"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20230717 19:09:43.664" endtime="20230717 19:09:43.664"/>
</kw>
<status status="PASS" starttime="20230717 19:09:43.657" endtime="20230717 19:09:43.664"/>
</kw>
<test id="s1-s8-s5-t1" name="Head Bucket" line="31">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>head-bucket --bucket ${BUCKET}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:09:43.687" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-bucket --bucket encrypted 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:09:45.706" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:09:45.706" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:09:43.676" endtime="20230717 19:09:45.706"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:09:45.708" level="INFO"/>
<status status="PASS" starttime="20230717 19:09:45.707" endtime="20230717 19:09:45.708"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:09:45.709" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:09:45.709" endtime="20230717 19:09:45.710"/>
</kw>
<status status="PASS" starttime="20230717 19:09:43.675" endtime="20230717 19:09:45.711"/>
</kw>
<msg timestamp="20230717 19:09:45.711" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:09:43.673" endtime="20230717 19:09:45.711"/>
</kw>
<msg timestamp="20230717 19:09:45.711" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:09:43.669" endtime="20230717 19:09:45.711"/>
</kw>
<msg timestamp="20230717 19:09:45.713" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230717 19:09:43.669" endtime="20230717 19:09:45.713"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:09:43.665" endtime="20230717 19:09:45.713"/>
</test>
<test id="s1-s8-s5-t2" name="Head Bucket not existent" line="34">
<kw name="Generate Ozone String" library="commonawslib">
<var>${randStr}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230717 19:09:45.723" level="INFO">${randStr} = 5665578491</msg>
<status status="PASS" starttime="20230717 19:09:45.721" endtime="20230717 19:09:45.723"/>
</kw>
<msg timestamp="20230717 19:09:45.725" level="INFO">${randStr} = ozone-test-5665578491</msg>
<status status="PASS" starttime="20230717 19:09:45.720" endtime="20230717 19:09:45.725"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-bucket --bucket ozonenosuchbucketqqweqwe-${randStr}</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:09:45.744" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-bucket --bucket ozonenosuchbucketqqweqwe-ozone-test-5665578491 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:09:47.416" level="INFO">${rc} = 255</msg>
<msg timestamp="20230717 19:09:47.416" level="INFO">${output} = 
An error occurred (404) when calling the HeadBucket operation: Not Found</msg>
<status status="PASS" starttime="20230717 19:09:45.730" endtime="20230717 19:09:47.416"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:09:47.418" level="INFO">
An error occurred (404) when calling the HeadBucket operation: Not Found</msg>
<status status="PASS" starttime="20230717 19:09:47.417" endtime="20230717 19:09:47.418"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:09:47.419" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:09:47.419" endtime="20230717 19:09:47.421"/>
</kw>
<msg timestamp="20230717 19:09:47.421" level="INFO">${output} = 
An error occurred (404) when calling the HeadBucket operation: Not Found</msg>
<status status="PASS" starttime="20230717 19:09:45.728" endtime="20230717 19:09:47.422"/>
</kw>
<msg timestamp="20230717 19:09:47.422" level="INFO">${result} = 
An error occurred (404) when calling the HeadBucket operation: Not Found</msg>
<status status="PASS" starttime="20230717 19:09:45.726" endtime="20230717 19:09:47.422"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>404</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:09:47.422" endtime="20230717 19:09:47.423"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Not Found</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:09:47.424" endtime="20230717 19:09:47.425"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:09:45.716" endtime="20230717 19:09:47.425"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20230717 19:09:43.614" endtime="20230717 19:09:47.431"/>
</suite>
<suite id="s1-s8-s6" name="Bucketlist" source="/opt/hadoop/smoketest/s3/bucketlist.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20230717 19:09:47.485" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:09:47.485" endtime="20230717 19:09:47.485"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20230717 19:09:47.485" endtime="20230717 19:09:47.486"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20230717 19:09:47.486" endtime="20230717 19:09:47.486"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:09:47.486" endtime="20230717 19:09:47.486"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:09:47.487" endtime="20230717 19:09:47.487"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:09:47.488" endtime="20230717 19:09:47.488"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:09:47.488" endtime="20230717 19:09:47.488"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:09:47.489" endtime="20230717 19:09:47.489"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20230717 19:09:47.489" endtime="20230717 19:09:47.489"/>
</kw>
<status status="PASS" starttime="20230717 19:09:47.483" endtime="20230717 19:09:47.490"/>
</kw>
<test id="s1-s8-s6-t1" name="List buckets" line="31">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-buckets | jq -r '.Buckets[].Name'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:09:47.503" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-buckets | jq -r '.Buckets[].Name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:09:49.539" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:09:49.540" level="INFO">${output} = bucket-logiskeuzf
bucket-ozone-test-0061864334
bucket-ozone-test-4697753491
bucket-ozone-test-9909917004
encrypted</msg>
<status status="PASS" starttime="20230717 19:09:47.497" endtime="20230717 19:09:49.540"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:09:49.542" level="INFO">bucket-logiskeuzf
bucket-ozone-test-0061864334
bucket-ozone-test-4697753491
bucket-ozone-test-9909917004
encrypted</msg>
<status status="PASS" starttime="20230717 19:09:49.540" endtime="20230717 19:09:49.543"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:09:49.544" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:09:49.543" endtime="20230717 19:09:49.544"/>
</kw>
<status status="PASS" starttime="20230717 19:09:47.493" endtime="20230717 19:09:49.545"/>
</kw>
<msg timestamp="20230717 19:09:49.545" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:09:47.493" endtime="20230717 19:09:49.550"/>
</kw>
<msg timestamp="20230717 19:09:49.551" level="INFO">${output} = bucket-logiskeuzf
bucket-ozone-test-0061864334
bucket-ozone-test-4697753491
bucket-ozone-test-9909917004
encrypted</msg>
<status status="PASS" starttime="20230717 19:09:47.492" endtime="20230717 19:09:49.551"/>
</kw>
<msg timestamp="20230717 19:09:49.551" level="INFO">${result} = bucket-logiskeuzf
bucket-ozone-test-0061864334
bucket-ozone-test-4697753491
bucket-ozone-test-9909917004
encrypted</msg>
<status status="PASS" starttime="20230717 19:09:47.491" endtime="20230717 19:09:49.551"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:09:49.552" endtime="20230717 19:09:49.554"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:09:47.490" endtime="20230717 19:09:49.554"/>
</test>
<test id="s1-s8-s6-t2" name="Get bucket info with Ozone Shell to check the owner field" line="35">
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skipping this check as security is not enabled</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230717 19:09:49.557" endtime="20230717 19:09:49.558"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /s3v/${BUCKET} | jq -r '.owner'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:09:49.571" level="INFO">Running command 'ozone sh bucket info /s3v/encrypted | jq -r '.owner' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:10:15.440" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:10:15.440" level="INFO">${output} = testuser</msg>
<status status="PASS" starttime="20230717 19:09:49.563" endtime="20230717 19:10:15.440"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:10:15.442" level="INFO">testuser</msg>
<status status="PASS" starttime="20230717 19:10:15.441" endtime="20230717 19:10:15.442"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:10:15.445" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:10:15.445" endtime="20230717 19:10:15.447"/>
</kw>
<status status="PASS" starttime="20230717 19:09:49.562" endtime="20230717 19:10:15.447"/>
</kw>
<msg timestamp="20230717 19:10:15.447" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:09:49.560" endtime="20230717 19:10:15.449"/>
</kw>
<msg timestamp="20230717 19:10:15.450" level="INFO">${result} = testuser</msg>
<status status="PASS" starttime="20230717 19:09:49.558" endtime="20230717 19:10:15.450"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>testuser</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230717 19:10:15.450" endtime="20230717 19:10:15.452"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:09:49.555" endtime="20230717 19:10:15.453"/>
</test>
<test id="s1-s8-s6-t3" name="List buckets with empty access id" line="43">
<kw name="Save AWS access key" library="commonawslib" type="SETUP">
<kw name="Execute" library="os">
<var>${OZONE_AWS_ACCESS_KEY_ID}</var>
<arg>aws configure get aws_access_key_id</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:10:15.475" level="INFO">Running command 'aws configure get aws_access_key_id 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:10:16.739" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:10:16.739" level="INFO">${output} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230717 19:10:15.468" endtime="20230717 19:10:16.739"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:10:16.744" level="INFO">testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230717 19:10:16.741" endtime="20230717 19:10:16.744"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:10:16.745" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:10:16.744" endtime="20230717 19:10:16.745"/>
</kw>
<status status="PASS" starttime="20230717 19:10:15.465" endtime="20230717 19:10:16.746"/>
</kw>
<msg timestamp="20230717 19:10:16.747" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:10:15.463" endtime="20230717 19:10:16.747"/>
</kw>
<msg timestamp="20230717 19:10:16.747" level="INFO">${OZONE_AWS_ACCESS_KEY_ID} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230717 19:10:15.459" endtime="20230717 19:10:16.748"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${OZONE_AWS_ACCESS_KEY_ID}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230717 19:10:16.750" level="INFO">${OZONE_AWS_ACCESS_KEY_ID} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230717 19:10:16.749" endtime="20230717 19:10:16.750"/>
</kw>
<status status="PASS" starttime="20230717 19:10:15.457" endtime="20230717 19:10:16.751"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ''</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:10:16.770" level="INFO">Running command 'aws configure set aws_access_key_id '' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:10:18.536" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:10:18.536" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:10:16.760" endtime="20230717 19:10:18.537"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:10:18.543" level="INFO"/>
<status status="PASS" starttime="20230717 19:10:18.539" endtime="20230717 19:10:18.543"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:10:18.544" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:10:18.543" endtime="20230717 19:10:18.546"/>
</kw>
<status status="PASS" starttime="20230717 19:10:16.758" endtime="20230717 19:10:18.547"/>
</kw>
<msg timestamp="20230717 19:10:18.547" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:10:16.752" endtime="20230717 19:10:18.547"/>
</kw>
<status status="PASS" starttime="20230717 19:10:16.751" endtime="20230717 19:10:18.547"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>list-buckets</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:10:18.561" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-buckets 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:10:20.566" level="INFO">${rc} = 255</msg>
<msg timestamp="20230717 19:10:20.566" level="INFO">${output} = 
An error occurred (AuthorizationHeaderMalformed) when calling the ListBuckets operation: The authorization header you provided is invalid.</msg>
<status status="PASS" starttime="20230717 19:10:18.552" endtime="20230717 19:10:20.566"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:10:20.574" level="INFO">
An error occurred (AuthorizationHeaderMalformed) when calling the ListBuckets operation: The authorization header you provided is invalid.</msg>
<status status="PASS" starttime="20230717 19:10:20.567" endtime="20230717 19:10:20.574"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:10:20.578" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:10:20.575" endtime="20230717 19:10:20.578"/>
</kw>
<msg timestamp="20230717 19:10:20.582" level="INFO">${output} = 
An error occurred (AuthorizationHeaderMalformed) when calling the ListBuckets operation: The authorization header you provided is invalid.</msg>
<status status="PASS" starttime="20230717 19:10:18.551" endtime="20230717 19:10:20.582"/>
</kw>
<msg timestamp="20230717 19:10:20.582" level="INFO">${result} = 
An error occurred (AuthorizationHeaderMalformed) when calling the ListBuckets operation: The authorization header you provided is invalid.</msg>
<status status="PASS" starttime="20230717 19:10:18.547" endtime="20230717 19:10:20.582"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>The authorization header you provided is invalid</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:10:20.584" endtime="20230717 19:10:20.585"/>
</kw>
<kw name="Restore AWS access key" library="commonawslib" type="TEARDOWN">
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${OZONE_AWS_ACCESS_KEY_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:10:20.599" level="INFO">Running command 'aws configure set aws_access_key_id testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:10:22.044" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:10:22.044" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:10:20.590" endtime="20230717 19:10:22.044"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:10:22.045" level="INFO"/>
<status status="PASS" starttime="20230717 19:10:22.045" endtime="20230717 19:10:22.045"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:10:22.046" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:10:22.046" endtime="20230717 19:10:22.046"/>
</kw>
<status status="PASS" starttime="20230717 19:10:20.589" endtime="20230717 19:10:22.050"/>
</kw>
<msg timestamp="20230717 19:10:22.050" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:10:20.588" endtime="20230717 19:10:22.050"/>
</kw>
<status status="PASS" starttime="20230717 19:10:20.587" endtime="20230717 19:10:22.050"/>
</kw>
<status status="PASS" starttime="20230717 19:10:20.586" endtime="20230717 19:10:22.050"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:10:15.455" endtime="20230717 19:10:22.051"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20230717 19:09:47.435" endtime="20230717 19:10:22.057"/>
</suite>
<suite id="s1-s8-s7" name="Freon" source="/opt/hadoop/smoketest/s3/freon.robot">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:10:22.126" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:10:22.138" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:10:22.138" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20230717 19:10:22.120" endtime="20230717 19:10:22.138"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:10:22.139" level="INFO">s3g</msg>
<status status="PASS" starttime="20230717 19:10:22.139" endtime="20230717 19:10:22.139"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:10:22.140" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:10:22.140" endtime="20230717 19:10:22.140"/>
</kw>
<status status="PASS" starttime="20230717 19:10:22.119" endtime="20230717 19:10:22.140"/>
</kw>
<msg timestamp="20230717 19:10:22.140" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:10:22.118" endtime="20230717 19:10:22.141"/>
</kw>
<msg timestamp="20230717 19:10:22.141" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20230717 19:10:22.118" endtime="20230717 19:10:22.141"/>
</kw>
<msg timestamp="20230717 19:10:22.141" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230717 19:10:22.117" endtime="20230717 19:10:22.141"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230717 19:10:22.142" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230717 19:10:22.142" endtime="20230717 19:10:22.142"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:10:22.148" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:10:22.239" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:10:22.240" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:10:22.144" endtime="20230717 19:10:22.240"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:10:22.241" level="INFO"/>
<status status="PASS" starttime="20230717 19:10:22.240" endtime="20230717 19:10:22.241"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:10:22.242" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:10:22.241" endtime="20230717 19:10:22.242"/>
</kw>
<status status="PASS" starttime="20230717 19:10:22.144" endtime="20230717 19:10:22.242"/>
</kw>
<msg timestamp="20230717 19:10:22.242" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:10:22.143" endtime="20230717 19:10:22.243"/>
</kw>
<status status="PASS" starttime="20230717 19:10:22.143" endtime="20230717 19:10:22.243"/>
</kw>
<status status="PASS" starttime="20230717 19:10:22.142" endtime="20230717 19:10:22.243"/>
</kw>
<status status="PASS" starttime="20230717 19:10:22.115" endtime="20230717 19:10:22.243"/>
</kw>
<status status="PASS" starttime="20230717 19:10:22.113" endtime="20230717 19:10:22.243"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:10:22.255" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:10:39.616" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:10:39.617" level="INFO">${output} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=a8d1ffb55aca2830802a7cd52acea5687eae1cfc99bf6833c91d448948438bff</msg>
<status status="PASS" starttime="20230717 19:10:22.250" endtime="20230717 19:10:39.617"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:10:39.623" level="INFO">awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=a8d1ffb55aca2830802a7cd52acea5687eae1cfc99bf6833c91d448948438bff</msg>
<status status="PASS" starttime="20230717 19:10:39.622" endtime="20230717 19:10:39.624"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:10:39.625" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:10:39.624" endtime="20230717 19:10:39.625"/>
</kw>
<status status="PASS" starttime="20230717 19:10:22.249" endtime="20230717 19:10:39.627"/>
</kw>
<msg timestamp="20230717 19:10:39.627" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:10:22.246" endtime="20230717 19:10:39.627"/>
</kw>
<msg timestamp="20230717 19:10:39.629" level="INFO">${result} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=a8d1ffb55aca2830802a7cd52acea5687eae1cfc99bf6833c91d448948438bff</msg>
<status status="PASS" starttime="20230717 19:10:22.246" endtime="20230717 19:10:39.629"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230717 19:10:39.634" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20230717 19:10:39.629" endtime="20230717 19:10:39.634"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20230717 19:10:39.637" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20230717 19:10:39.634" endtime="20230717 19:10:39.637"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230717 19:10:39.639" level="INFO">${secret} = ['a8d1ffb55aca2830802a7cd52acea5687eae1cfc99bf6833c91d448948438bff']</msg>
<status status="PASS" starttime="20230717 19:10:39.637" endtime="20230717 19:10:39.639"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230717 19:10:39.643" level="INFO">${accessKey} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230717 19:10:39.639" endtime="20230717 19:10:39.643"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230717 19:10:39.647" level="INFO">${secret} = a8d1ffb55aca2830802a7cd52acea5687eae1cfc99bf6833c91d448948438bff</msg>
<status status="PASS" starttime="20230717 19:10:39.643" endtime="20230717 19:10:39.647"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:10:39.661" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:10:41.229" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:10:41.229" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:10:39.654" endtime="20230717 19:10:41.229"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:10:41.231" level="INFO"/>
<status status="PASS" starttime="20230717 19:10:41.231" endtime="20230717 19:10:41.232"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:10:41.232" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:10:41.232" endtime="20230717 19:10:41.232"/>
</kw>
<status status="PASS" starttime="20230717 19:10:39.651" endtime="20230717 19:10:41.232"/>
</kw>
<msg timestamp="20230717 19:10:41.233" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:10:39.650" endtime="20230717 19:10:41.233"/>
</kw>
<status status="PASS" starttime="20230717 19:10:39.649" endtime="20230717 19:10:41.233"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:10:41.241" level="INFO">Running command 'aws configure set aws_access_key_id testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:10:42.325" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:10:42.325" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:10:41.236" endtime="20230717 19:10:42.325"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:10:42.328" level="INFO"/>
<status status="PASS" starttime="20230717 19:10:42.326" endtime="20230717 19:10:42.328"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:10:42.329" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:10:42.328" endtime="20230717 19:10:42.329"/>
</kw>
<status status="PASS" starttime="20230717 19:10:41.235" endtime="20230717 19:10:42.330"/>
</kw>
<msg timestamp="20230717 19:10:42.330" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:10:41.235" endtime="20230717 19:10:42.330"/>
</kw>
<status status="PASS" starttime="20230717 19:10:41.234" endtime="20230717 19:10:42.330"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:10:42.340" level="INFO">Running command 'aws configure set aws_secret_access_key a8d1ffb55aca2830802a7cd52acea5687eae1cfc99bf6833c91d448948438bff 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:10:43.640" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:10:43.640" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:10:42.335" endtime="20230717 19:10:43.640"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:10:43.643" level="INFO"/>
<status status="PASS" starttime="20230717 19:10:43.641" endtime="20230717 19:10:43.644"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:10:43.645" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:10:43.645" endtime="20230717 19:10:43.645"/>
</kw>
<status status="PASS" starttime="20230717 19:10:42.333" endtime="20230717 19:10:43.646"/>
</kw>
<msg timestamp="20230717 19:10:43.646" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:10:42.332" endtime="20230717 19:10:43.646"/>
</kw>
<status status="PASS" starttime="20230717 19:10:42.331" endtime="20230717 19:10:43.647"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:10:43.656" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:10:44.908" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:10:44.908" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:10:43.651" endtime="20230717 19:10:44.908"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:10:44.910" level="INFO"/>
<status status="PASS" starttime="20230717 19:10:44.909" endtime="20230717 19:10:44.910"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:10:44.912" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:10:44.910" endtime="20230717 19:10:44.912"/>
</kw>
<status status="PASS" starttime="20230717 19:10:43.649" endtime="20230717 19:10:44.913"/>
</kw>
<msg timestamp="20230717 19:10:44.913" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:10:43.648" endtime="20230717 19:10:44.913"/>
</kw>
<status status="PASS" starttime="20230717 19:10:43.647" endtime="20230717 19:10:44.915"/>
</kw>
<status status="PASS" starttime="20230717 19:10:22.244" endtime="20230717 19:10:44.916"/>
</kw>
<status status="PASS" starttime="20230717 19:10:22.243" endtime="20230717 19:10:44.916"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230717 19:10:44.916" endtime="20230717 19:10:44.920"/>
</kw>
<status status="PASS" starttime="20230717 19:10:22.113" endtime="20230717 19:10:44.920"/>
</kw>
<test id="s1-s8-s7-t1" name="Run Freon S3BG" line="42">
<kw name="Setup aws credentials" type="SETUP">
<kw name="Execute" library="os">
<var>${accessKey}</var>
<arg>aws configure get aws_access_key_id</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:10:44.933" level="INFO">Running command 'aws configure get aws_access_key_id 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:10:46.017" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:10:46.017" level="INFO">${output} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230717 19:10:44.928" endtime="20230717 19:10:46.017"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:10:46.021" level="INFO">testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230717 19:10:46.020" endtime="20230717 19:10:46.021"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:10:46.023" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:10:46.022" endtime="20230717 19:10:46.023"/>
</kw>
<status status="PASS" starttime="20230717 19:10:44.927" endtime="20230717 19:10:46.023"/>
</kw>
<msg timestamp="20230717 19:10:46.024" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:10:44.926" endtime="20230717 19:10:46.024"/>
</kw>
<msg timestamp="20230717 19:10:46.025" level="INFO">${accessKey} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230717 19:10:44.923" endtime="20230717 19:10:46.025"/>
</kw>
<kw name="Execute" library="os">
<var>${secret}</var>
<arg>aws configure get aws_secret_access_key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:10:46.034" level="INFO">Running command 'aws configure get aws_secret_access_key 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:10:47.411" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:10:47.411" level="INFO">${output} = a8d1ffb55aca2830802a7cd52acea5687eae1cfc99bf6833c91d448948438bff</msg>
<status status="PASS" starttime="20230717 19:10:46.028" endtime="20230717 19:10:47.412"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:10:47.416" level="INFO">a8d1ffb55aca2830802a7cd52acea5687eae1cfc99bf6833c91d448948438bff</msg>
<status status="PASS" starttime="20230717 19:10:47.412" endtime="20230717 19:10:47.417"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:10:47.420" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:10:47.419" endtime="20230717 19:10:47.420"/>
</kw>
<status status="PASS" starttime="20230717 19:10:46.027" endtime="20230717 19:10:47.420"/>
</kw>
<msg timestamp="20230717 19:10:47.421" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:10:46.026" endtime="20230717 19:10:47.421"/>
</kw>
<msg timestamp="20230717 19:10:47.421" level="INFO">${secret} = a8d1ffb55aca2830802a7cd52acea5687eae1cfc99bf6833c91d448948438bff</msg>
<status status="PASS" starttime="20230717 19:10:46.025" endtime="20230717 19:10:47.421"/>
</kw>
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>AWS_SECRET_ACCESS_KEY</arg>
<arg>${secret}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20230717 19:10:47.426" level="INFO">Environment variable 'AWS_SECRET_ACCESS_KEY' set to value 'a8d1ffb55aca2830802a7cd52acea5687eae1cfc99bf6833c91d448948438bff'.</msg>
<status status="PASS" starttime="20230717 19:10:47.423" endtime="20230717 19:10:47.426"/>
</kw>
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>AWS_ACCESS_KEY_ID</arg>
<arg>${accessKey}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20230717 19:10:47.429" level="INFO">Environment variable 'AWS_ACCESS_KEY_ID' set to value 'testuser/s3g@EXAMPLE.COM'.</msg>
<status status="PASS" starttime="20230717 19:10:47.428" endtime="20230717 19:10:47.429"/>
</kw>
<status status="PASS" starttime="20230717 19:10:44.923" endtime="20230717 19:10:47.429"/>
</kw>
<kw name="Freon S3BG">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon s3bg -e ${ENDPOINT_URL} -t ${threads} -n ${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:10:47.451" level="INFO">Running command 'ozone freon s3bg -e http://s3g:9878 -t 10 -n 100 -p s3bg  2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:11:10.404" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:11:10.406" level="INFO">${output} = 2023-07-17 19:10:57,382 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-17 19:10:58,298 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230717 19:10:47.443" endtime="20230717 19:11:10.407"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:11:10.414" level="INFO">2023-07-17 19:10:57,382 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-17 19:10:58,298 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-07-17 19:10:58,308 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-07-17 19:10:58,665 [main] INFO freon.BaseFreonGenerator: Executing test with prefix s3bg and number-of-tests 100
2023-07-17 19:10:58,887 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-07-17 19:10:59,942 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-07-17 19:11:00,945 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-07-17 19:11:01,946 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-07-17 19:11:02,946 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-07-17 19:11:03,947 [Thread-5] INFO freon.ProgressBar: Progress: 4.00 % (4 out of 100)
2023-07-17 19:11:04,948 [Thread-5] INFO freon.ProgressBar: Progress: 21.00 % (21 out of 100)
2023-07-17 19:11:05,949 [Thread-5] INFO freon.ProgressBar: Progress: 37.00 % (37 out of 100)
2023-07-17 19:11:06,955 [Thread-5] INFO freon.ProgressBar: Progress: 49.00 % (49 out of 100)
2023-07-17 19:11:07,956 [Thread-5] INFO freon.ProgressBar: Progress: 69.00 % (69 out of 100)
2023-07-17 19:11:08,957 [Thread-5] INFO freon.ProgressBar: Progress: 84.00 % (84 out of 100)
2023-07-17 19:11:09,957 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2023-07-17 19:11:10,128 [shutdown-hook-0] INFO metrics: type=TIMER, name=bucket-create, count=100, min=228.270402, max=1431.790599, mean=658.4921225209712, stddev=223.27189322368847, median=614.418358, p75=730.341959, p95=1195.651555, p98=1353.18149, p99=1398.346922, p999=1431.790599, mean_rate=13.555830577632022, m1=12.8, m5=12.8, m15=12.8, rate_unit=events/second, duration_unit=milliseconds
2023-07-17 19:11:10,141 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 11
2023-07-17 19:11:10,143 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-07-17 19:11:10,143 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20230717 19:11:10.411" endtime="20230717 19:11:10.414"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:11:10.415" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:11:10.414" endtime="20230717 19:11:10.415"/>
</kw>
<status status="PASS" starttime="20230717 19:10:47.442" endtime="20230717 19:11:10.415"/>
</kw>
<msg timestamp="20230717 19:11:10.415" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:10:47.439" endtime="20230717 19:11:10.417"/>
</kw>
<msg timestamp="20230717 19:11:10.417" level="INFO">${result} = 2023-07-17 19:10:57,382 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-17 19:10:58,298 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230717 19:10:47.434" endtime="20230717 19:11:10.417"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:11:10.418" endtime="20230717 19:11:10.418"/>
</kw>
<status status="PASS" starttime="20230717 19:10:47.430" endtime="20230717 19:11:10.418"/>
</kw>
<status status="PASS" starttime="20230717 19:10:44.920" endtime="20230717 19:11:10.420"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20230717 19:10:22.065" endtime="20230717 19:11:10.424"/>
</suite>
<suite id="s1-s8-s8" name="MultipartUpload" source="/opt/hadoop/smoketest/s3/MultipartUpload.robot">
<kw name="Setup Multipart Tests" type="SETUP">
<kw name="Setup s3 tests" library="commonawslib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20230717 19:11:10.510" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:11:10.508" endtime="20230717 19:11:10.511"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20230717 19:11:10.513" endtime="20230717 19:11:10.513"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20230717 19:11:10.513" endtime="20230717 19:11:10.513"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:11:10.513" endtime="20230717 19:11:10.513"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:11:10.513" endtime="20230717 19:11:10.515"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:11:10.515" endtime="20230717 19:11:10.515"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:11:10.515" endtime="20230717 19:11:10.515"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:11:10.516" endtime="20230717 19:11:10.516"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20230717 19:11:10.517" endtime="20230717 19:11:10.517"/>
</kw>
<status status="PASS" starttime="20230717 19:11:10.507" endtime="20230717 19:11:10.517"/>
</kw>
<kw name="Create Random File KB">
<arg>/tmp/part1</arg>
<arg>5121</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=${file} bs=1024 count=${size_in_kilobytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:11:10.539" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1024 count=5121 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:11:10.648" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:11:10.648" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:11:10.527" endtime="20230717 19:11:10.648"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:11:10.652" level="INFO"/>
<status status="PASS" starttime="20230717 19:11:10.651" endtime="20230717 19:11:10.653"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:11:10.660" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:11:10.658" endtime="20230717 19:11:10.662"/>
</kw>
<status status="PASS" starttime="20230717 19:11:10.524" endtime="20230717 19:11:10.663"/>
</kw>
<msg timestamp="20230717 19:11:10.663" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:11:10.522" endtime="20230717 19:11:10.663"/>
</kw>
<status status="PASS" starttime="20230717 19:11:10.520" endtime="20230717 19:11:10.663"/>
</kw>
<status status="PASS" starttime="20230717 19:11:10.518" endtime="20230717 19:11:10.666"/>
</kw>
<kw name="Create Random File KB">
<arg>/tmp/part2</arg>
<arg>1023</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=${file} bs=1024 count=${size_in_kilobytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:11:10.693" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part2 bs=1024 count=1023 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:11:10.727" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:11:10.727" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:11:10.680" endtime="20230717 19:11:10.729"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:11:10.732" level="INFO"/>
<status status="PASS" starttime="20230717 19:11:10.730" endtime="20230717 19:11:10.734"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:11:10.738" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:11:10.734" endtime="20230717 19:11:10.738"/>
</kw>
<status status="PASS" starttime="20230717 19:11:10.676" endtime="20230717 19:11:10.739"/>
</kw>
<msg timestamp="20230717 19:11:10.739" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:11:10.675" endtime="20230717 19:11:10.739"/>
</kw>
<status status="PASS" starttime="20230717 19:11:10.670" endtime="20230717 19:11:10.740"/>
</kw>
<status status="PASS" starttime="20230717 19:11:10.668" endtime="20230717 19:11:10.740"/>
</kw>
<status status="PASS" starttime="20230717 19:11:10.505" endtime="20230717 19:11:10.741"/>
</kw>
<test id="s1-s8-s8-t1" name="Test Multipart Upload With Adjusted Length" line="57">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230717 19:11:10.751" level="INFO">${randStr} = 3411857718</msg>
<status status="PASS" starttime="20230717 19:11:10.748" endtime="20230717 19:11:10.751"/>
</kw>
<msg timestamp="20230717 19:11:10.752" level="INFO">${random} = ozone-test-3411857718</msg>
<status status="PASS" starttime="20230717 19:11:10.747" endtime="20230717 19:11:10.752"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230717 19:11:10.756" level="INFO">${PREFIX} = ozone-test-3411857718</msg>
<status status="PASS" starttime="20230717 19:11:10.752" endtime="20230717 19:11:10.756"/>
</kw>
<status status="PASS" starttime="20230717 19:11:10.746" endtime="20230717 19:11:10.756"/>
</kw>
<kw name="Perform Multipart Upload" library="commonawslib">
<arg>${BUCKET}</arg>
<arg>multipart/adjusted_length_${PREFIX}</arg>
<arg>/tmp/part1</arg>
<arg>/tmp/part2</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:11:10.774" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key multipart/adjusted_length_ozone-test-3411857718 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:11:12.872" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:11:12.872" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "multipart/adjusted_length_ozone-test-3411857718",
    "UploadId": "029a364c-eca9-4946-a9c2-b2f0ebc4dc2e-110731006611095699"
}</msg>
<status status="PASS" starttime="20230717 19:11:10.768" endtime="20230717 19:11:12.872"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:11:12.877" level="INFO">{
    "Bucket": "encrypted",
    "Key": "multipart/adjusted_length_ozone-test-3411857718",
    "UploadId": "029a364c-eca9-4946-a9c2-b2f0ebc4dc2e-110731006611095699"
}</msg>
<status status="PASS" starttime="20230717 19:11:12.873" endtime="20230717 19:11:12.879"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:11:12.885" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:11:12.881" endtime="20230717 19:11:12.886"/>
</kw>
<status status="PASS" starttime="20230717 19:11:10.764" endtime="20230717 19:11:12.887"/>
</kw>
<msg timestamp="20230717 19:11:12.887" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:11:10.764" endtime="20230717 19:11:12.887"/>
</kw>
<msg timestamp="20230717 19:11:12.889" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "multipart/adjusted_length_ozone-test-3411857718",
    "UploadId": "029a364c-eca9-4946-a9c2-b2f0ebc4dc2e-110731006611095699"
}</msg>
<status status="PASS" starttime="20230717 19:11:10.763" endtime="20230717 19:11:12.889"/>
</kw>
<msg timestamp="20230717 19:11:12.891" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "multipart/adjusted_length_ozone-test-3411857718",
    "UploadId": "029a364c-eca9-4946-a9c2-b2f0ebc4dc2e-110731006611095699"
}</msg>
<status status="PASS" starttime="20230717 19:11:10.759" endtime="20230717 19:11:12.891"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:11:12.907" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "multipart/adjusted_length_ozone-test-3411857718",
    "UploadId": "029a364c-eca9-4946-a9c2-b2f0ebc4dc2e-110731006611095699"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:11:13.060" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:11:13.060" level="INFO">${output} = 029a364c-eca9-4946-a9c2-b2f0ebc4dc2e-110731006611095699</msg>
<status status="PASS" starttime="20230717 19:11:12.897" endtime="20230717 19:11:13.061"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:11:13.067" level="INFO">029a364c-eca9-4946-a9c2-b2f0ebc4dc2e-110731006611095699</msg>
<status status="PASS" starttime="20230717 19:11:13.064" endtime="20230717 19:11:13.067"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:11:13.069" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:11:13.068" endtime="20230717 19:11:13.069"/>
</kw>
<msg timestamp="20230717 19:11:13.072" level="INFO">${upload_id} = 029a364c-eca9-4946-a9c2-b2f0ebc4dc2e-110731006611095699</msg>
<status status="PASS" starttime="20230717 19:11:12.892" endtime="20230717 19:11:13.072"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{etags}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230717 19:11:13.074" level="INFO">@{etags} = [ ]</msg>
<status status="PASS" starttime="20230717 19:11:13.072" endtime="20230717 19:11:13.074"/>
</kw>
<for flavor="IN ENUMERATE">
<var>${i}</var>
<var>${file}</var>
<value>@{files}</value>
<iter>
<var name="${i}">0</var>
<var name="${file}">/tmp/part1</var>
<kw name="Evaluate" library="BuiltIn">
<var>${part}</var>
<arg>${i} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230717 19:11:13.081" level="INFO">${part} = 1</msg>
<status status="PASS" starttime="20230717 19:11:13.077" endtime="20230717 19:11:13.081"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${bucket} --key ${key} --part-number ${part} --body ${file} --upload-id ${upload_id}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:11:13.100" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket encrypted --key multipart/adjusted_length_ozone-test-3411857718 --part-number 1 --body /tmp/part1 --upload-id 029a364c-eca9-4946-a9c2-b2f0ebc4dc2e-110731006611095699 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:11:38.591" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:11:38.592" level="INFO">${output} = {
    "ETag": "/s3v/encrypted/multipart/adjusted_length_ozone-test-3411857718-029a364c-eca9-4946-a9c2-b2f0ebc4dc2e-110731006611095699-1"
}</msg>
<status status="PASS" starttime="20230717 19:11:13.090" endtime="20230717 19:11:38.592"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:11:38.596" level="INFO">{
    "ETag": "/s3v/encrypted/multipart/adjusted_length_ozone-test-3411857718-029a364c-eca9-4946-a9c2-b2f0ebc4dc2e-110731006611095699-1"
}</msg>
<status status="PASS" starttime="20230717 19:11:38.594" endtime="20230717 19:11:38.596"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:11:38.597" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:11:38.596" endtime="20230717 19:11:38.597"/>
</kw>
<status status="PASS" starttime="20230717 19:11:13.089" endtime="20230717 19:11:38.597"/>
</kw>
<msg timestamp="20230717 19:11:38.597" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:11:13.088" endtime="20230717 19:11:38.599"/>
</kw>
<msg timestamp="20230717 19:11:38.599" level="INFO">${output} = {
    "ETag": "/s3v/encrypted/multipart/adjusted_length_ozone-test-3411857718-029a364c-eca9-4946-a9c2-b2f0ebc4dc2e-110731006611095699-1"
}</msg>
<status status="PASS" starttime="20230717 19:11:13.083" endtime="20230717 19:11:38.599"/>
</kw>
<msg timestamp="20230717 19:11:38.600" level="INFO">${result} = {
    "ETag": "/s3v/encrypted/multipart/adjusted_length_ozone-test-3411857718-029a364c-eca9-4946-a9c2-b2f0ebc4dc2e-110731006611095699-1"
}</msg>
<status status="PASS" starttime="20230717 19:11:13.081" endtime="20230717 19:11:38.600"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:11:38.613" level="INFO">Running command 'echo '{
    "ETag": "/s3v/encrypted/multipart/adjusted_length_ozone-test-3411857718-029a364c-eca9-4946-a9c2-b2f0ebc4dc2e-110731006611095699-1"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:11:38.734" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:11:38.734" level="INFO">${output} = /s3v/encrypted/multipart/adjusted_length_ozone-test-3411857718-029a364c-eca9-4946-a9c2-b2f0ebc4dc2e-110731006611095699-1</msg>
<status status="PASS" starttime="20230717 19:11:38.604" endtime="20230717 19:11:38.734"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:11:38.739" level="INFO">/s3v/encrypted/multipart/adjusted_length_ozone-test-3411857718-029a364c-eca9-4946-a9c2-b2f0ebc4dc2e-110731006611095699-1</msg>
<status status="PASS" starttime="20230717 19:11:38.738" endtime="20230717 19:11:38.739"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:11:38.741" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:11:38.739" endtime="20230717 19:11:38.741"/>
</kw>
<status status="PASS" starttime="20230717 19:11:38.603" endtime="20230717 19:11:38.743"/>
</kw>
<msg timestamp="20230717 19:11:38.743" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:11:38.603" endtime="20230717 19:11:38.743"/>
</kw>
<msg timestamp="20230717 19:11:38.743" level="INFO">${etag} = /s3v/encrypted/multipart/adjusted_length_ozone-test-3411857718-029a364c-eca9-4946-a9c2-b2f0ebc4dc2e-110731006611095699-1</msg>
<status status="PASS" starttime="20230717 19:11:38.601" endtime="20230717 19:11:38.743"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${etags}</arg>
<arg>{ETag=${etag},PartNumber=${part}}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230717 19:11:38.744" endtime="20230717 19:11:38.745"/>
</kw>
<status status="PASS" starttime="20230717 19:11:13.076" endtime="20230717 19:11:38.745"/>
</iter>
<iter>
<var name="${i}">1</var>
<var name="${file}">/tmp/part2</var>
<kw name="Evaluate" library="BuiltIn">
<var>${part}</var>
<arg>${i} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230717 19:11:38.748" level="INFO">${part} = 2</msg>
<status status="PASS" starttime="20230717 19:11:38.747" endtime="20230717 19:11:38.748"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${bucket} --key ${key} --part-number ${part} --body ${file} --upload-id ${upload_id}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:11:38.759" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket encrypted --key multipart/adjusted_length_ozone-test-3411857718 --part-number 2 --body /tmp/part2 --upload-id 029a364c-eca9-4946-a9c2-b2f0ebc4dc2e-110731006611095699 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:12:01.384" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:12:01.384" level="INFO">${output} = {
    "ETag": "/s3v/encrypted/multipart/adjusted_length_ozone-test-3411857718-029a364c-eca9-4946-a9c2-b2f0ebc4dc2e-110731006611095699-2"
}</msg>
<status status="PASS" starttime="20230717 19:11:38.753" endtime="20230717 19:12:01.384"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:12:01.394" level="INFO">{
    "ETag": "/s3v/encrypted/multipart/adjusted_length_ozone-test-3411857718-029a364c-eca9-4946-a9c2-b2f0ebc4dc2e-110731006611095699-2"
}</msg>
<status status="PASS" starttime="20230717 19:12:01.385" endtime="20230717 19:12:01.394"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:12:01.401" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:12:01.397" endtime="20230717 19:12:01.401"/>
</kw>
<status status="PASS" starttime="20230717 19:11:38.752" endtime="20230717 19:12:01.401"/>
</kw>
<msg timestamp="20230717 19:12:01.401" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:11:38.751" endtime="20230717 19:12:01.402"/>
</kw>
<msg timestamp="20230717 19:12:01.402" level="INFO">${output} = {
    "ETag": "/s3v/encrypted/multipart/adjusted_length_ozone-test-3411857718-029a364c-eca9-4946-a9c2-b2f0ebc4dc2e-110731006611095699-2"
}</msg>
<status status="PASS" starttime="20230717 19:11:38.750" endtime="20230717 19:12:01.402"/>
</kw>
<msg timestamp="20230717 19:12:01.403" level="INFO">${result} = {
    "ETag": "/s3v/encrypted/multipart/adjusted_length_ozone-test-3411857718-029a364c-eca9-4946-a9c2-b2f0ebc4dc2e-110731006611095699-2"
}</msg>
<status status="PASS" starttime="20230717 19:11:38.748" endtime="20230717 19:12:01.403"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:12:01.420" level="INFO">Running command 'echo '{
    "ETag": "/s3v/encrypted/multipart/adjusted_length_ozone-test-3411857718-029a364c-eca9-4946-a9c2-b2f0ebc4dc2e-110731006611095699-2"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:12:01.501" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:12:01.501" level="INFO">${output} = /s3v/encrypted/multipart/adjusted_length_ozone-test-3411857718-029a364c-eca9-4946-a9c2-b2f0ebc4dc2e-110731006611095699-2</msg>
<status status="PASS" starttime="20230717 19:12:01.412" endtime="20230717 19:12:01.502"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:12:01.509" level="INFO">/s3v/encrypted/multipart/adjusted_length_ozone-test-3411857718-029a364c-eca9-4946-a9c2-b2f0ebc4dc2e-110731006611095699-2</msg>
<status status="PASS" starttime="20230717 19:12:01.506" endtime="20230717 19:12:01.509"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:12:01.511" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:12:01.509" endtime="20230717 19:12:01.511"/>
</kw>
<status status="PASS" starttime="20230717 19:12:01.411" endtime="20230717 19:12:01.511"/>
</kw>
<msg timestamp="20230717 19:12:01.511" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:12:01.409" endtime="20230717 19:12:01.512"/>
</kw>
<msg timestamp="20230717 19:12:01.512" level="INFO">${etag} = /s3v/encrypted/multipart/adjusted_length_ozone-test-3411857718-029a364c-eca9-4946-a9c2-b2f0ebc4dc2e-110731006611095699-2</msg>
<status status="PASS" starttime="20230717 19:12:01.406" endtime="20230717 19:12:01.512"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${etags}</arg>
<arg>{ETag=${etag},PartNumber=${part}}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230717 19:12:01.512" endtime="20230717 19:12:01.514"/>
</kw>
<status status="PASS" starttime="20230717 19:11:38.746" endtime="20230717 19:12:01.515"/>
</iter>
<status status="PASS" starttime="20230717 19:11:13.075" endtime="20230717 19:12:01.515"/>
</for>
<kw name="Catenate" library="BuiltIn">
<var>${parts}</var>
<arg>SEPARATOR=,</arg>
<arg>@{etags}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230717 19:12:01.516" level="INFO">${parts} = {ETag=/s3v/encrypted/multipart/adjusted_length_ozone-test-3411857718-029a364c-eca9-4946-a9c2-b2f0ebc4dc2e-110731006611095699-1,PartNumber=1},{ETag=/s3v/encrypted/multipart/adjusted_length_ozone-test-3...</msg>
<status status="PASS" starttime="20230717 19:12:01.515" endtime="20230717 19:12:01.516"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>complete-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id} --multipart-upload 'Parts=[${parts}]'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:12:01.531" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --bucket encrypted --key multipart/adjusted_length_ozone-test-3411857718 --upload-id 029a364c-eca9-4946-a9c2-b2f0ebc4dc2e-110731006611095699 --multipart-upload 'Parts=[{ETag=/s3v/encrypted/multipart/adjusted_length_ozone-test-3411857718-029a364c-eca9-4946-a9c2-b2f0ebc4dc2e-110731006611095699-1,PartNumber=1},{ETag=/s3v/encrypted/multipart/adjusted_length_ozone-test-3411857718-029a364c-eca9-4946-a9c2-b2f0ebc4dc2e-110731006611095699-2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:12:03.298" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:12:03.298" level="INFO">${output} = {
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "multipart/adjusted_length_ozone-test-3411857718",
    "ETag": "b49b0966f966a8be3d11a329a5439b4ed0b0e1b4780cb4a09214efdf5045e481"
}</msg>
<status status="PASS" starttime="20230717 19:12:01.523" endtime="20230717 19:12:03.298"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:12:03.304" level="INFO">{
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "multipart/adjusted_length_ozone-test-3411857718",
    "ETag": "b49b0966f966a8be3d11a329a5439b4ed0b0e1b4780cb4a09214efdf5045e481"
}</msg>
<status status="PASS" starttime="20230717 19:12:03.301" endtime="20230717 19:12:03.304"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:12:03.309" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:12:03.305" endtime="20230717 19:12:03.310"/>
</kw>
<status status="PASS" starttime="20230717 19:12:01.523" endtime="20230717 19:12:03.311"/>
</kw>
<msg timestamp="20230717 19:12:03.311" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:12:01.521" endtime="20230717 19:12:03.311"/>
</kw>
<msg timestamp="20230717 19:12:03.313" level="INFO">${output} = {
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "multipart/adjusted_length_ozone-test-3411857718",
    "ETag": "b49b0966f966a8be3d11a329a5439b4ed0b0e1b4780cb4a09214efdf5045e481"
}</msg>
<status status="PASS" starttime="20230717 19:12:01.519" endtime="20230717 19:12:03.313"/>
</kw>
<status status="PASS" starttime="20230717 19:12:01.517" endtime="20230717 19:12:03.314"/>
</kw>
<status status="PASS" starttime="20230717 19:11:10.756" endtime="20230717 19:12:03.314"/>
</kw>
<kw name="Verify Multipart Upload" library="commonawslib">
<arg>${BUCKET}</arg>
<arg>multipart/adjusted_length_${PREFIX}</arg>
<arg>/tmp/part1</arg>
<arg>/tmp/part2</arg>
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230717 19:12:03.321" level="INFO">${randStr} = 2130751658</msg>
<status status="PASS" starttime="20230717 19:12:03.321" endtime="20230717 19:12:03.322"/>
</kw>
<msg timestamp="20230717 19:12:03.322" level="INFO">${random} = ozone-test-2130751658</msg>
<status status="PASS" starttime="20230717 19:12:03.316" endtime="20230717 19:12:03.322"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${bucket} --key ${key} /tmp/verify${random}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:12:03.336" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key multipart/adjusted_length_ozone-test-3411857718 /tmp/verifyozone-test-2130751658 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:12:06.727" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:12:06.727" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:12:02 GMT",
    "ContentLength": 6291456,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Ex...</msg>
<status status="PASS" starttime="20230717 19:12:03.329" endtime="20230717 19:12:06.727"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:12:06.729" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:12:02 GMT",
    "ContentLength": 6291456,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Mon, 17 Jul 2023 19:12:04 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230717 19:12:06.728" endtime="20230717 19:12:06.730"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:12:06.731" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:12:06.730" endtime="20230717 19:12:06.731"/>
</kw>
<status status="PASS" starttime="20230717 19:12:03.326" endtime="20230717 19:12:06.732"/>
</kw>
<msg timestamp="20230717 19:12:06.732" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:12:03.325" endtime="20230717 19:12:06.732"/>
</kw>
<msg timestamp="20230717 19:12:06.732" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:12:02 GMT",
    "ContentLength": 6291456,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Ex...</msg>
<status status="PASS" starttime="20230717 19:12:03.323" endtime="20230717 19:12:06.732"/>
</kw>
<status status="PASS" starttime="20230717 19:12:03.323" endtime="20230717 19:12:06.733"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${tmp}</var>
<arg>@{files}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230717 19:12:06.734" level="INFO">${tmp} = /tmp/part1 /tmp/part2</msg>
<status status="PASS" starttime="20230717 19:12:06.733" endtime="20230717 19:12:06.734"/>
</kw>
<kw name="Execute" library="os">
<arg>cat ${tmp} &gt; /tmp/original${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:12:06.756" level="INFO">Running command 'cat /tmp/part1 /tmp/part2 &gt; /tmp/originalozone-test-2130751658'.</msg>
<msg timestamp="20230717 19:12:06.808" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:12:06.809" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:12:06.741" endtime="20230717 19:12:06.809"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:12:06.814" level="INFO"/>
<status status="PASS" starttime="20230717 19:12:06.811" endtime="20230717 19:12:06.815"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:12:06.819" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:12:06.816" endtime="20230717 19:12:06.820"/>
</kw>
<status status="PASS" starttime="20230717 19:12:06.738" endtime="20230717 19:12:06.823"/>
</kw>
<msg timestamp="20230717 19:12:06.823" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:12:06.738" endtime="20230717 19:12:06.823"/>
</kw>
<status status="PASS" starttime="20230717 19:12:06.734" endtime="20230717 19:12:06.823"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/original${random}</arg>
<arg>/tmp/verify${random}</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:12:06.842" level="INFO">Running command 'md5sum /tmp/originalozone-test-2130751658 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:12:06.908" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:12:06.908" level="INFO">${output} = 2fd976ebffc26f5f32bf713616cdf03a</msg>
<status status="PASS" starttime="20230717 19:12:06.837" endtime="20230717 19:12:06.908"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:12:06.911" level="INFO">2fd976ebffc26f5f32bf713616cdf03a</msg>
<status status="PASS" starttime="20230717 19:12:06.909" endtime="20230717 19:12:06.911"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:12:06.913" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:12:06.911" endtime="20230717 19:12:06.914"/>
</kw>
<status status="PASS" starttime="20230717 19:12:06.833" endtime="20230717 19:12:06.915"/>
</kw>
<msg timestamp="20230717 19:12:06.915" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:12:06.830" endtime="20230717 19:12:06.916"/>
</kw>
<msg timestamp="20230717 19:12:06.917" level="INFO">${checksumbefore} = 2fd976ebffc26f5f32bf713616cdf03a</msg>
<status status="PASS" starttime="20230717 19:12:06.828" endtime="20230717 19:12:06.917"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:12:06.930" level="INFO">Running command 'md5sum /tmp/verifyozone-test-2130751658 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:12:06.959" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:12:06.959" level="INFO">${output} = 2fd976ebffc26f5f32bf713616cdf03a</msg>
<status status="PASS" starttime="20230717 19:12:06.923" endtime="20230717 19:12:06.959"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:12:06.960" level="INFO">2fd976ebffc26f5f32bf713616cdf03a</msg>
<status status="PASS" starttime="20230717 19:12:06.959" endtime="20230717 19:12:06.960"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:12:06.961" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:12:06.961" endtime="20230717 19:12:06.961"/>
</kw>
<status status="PASS" starttime="20230717 19:12:06.921" endtime="20230717 19:12:06.961"/>
</kw>
<msg timestamp="20230717 19:12:06.962" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:12:06.919" endtime="20230717 19:12:06.962"/>
</kw>
<msg timestamp="20230717 19:12:06.962" level="INFO">${checksumafter} = 2fd976ebffc26f5f32bf713616cdf03a</msg>
<status status="PASS" starttime="20230717 19:12:06.917" endtime="20230717 19:12:06.962"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230717 19:12:06.962" endtime="20230717 19:12:06.963"/>
</kw>
<status status="PASS" starttime="20230717 19:12:06.825" endtime="20230717 19:12:06.963"/>
</kw>
<status status="PASS" starttime="20230717 19:12:03.315" endtime="20230717 19:12:06.963"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:11:10.742" endtime="20230717 19:12:06.965"/>
</test>
<test id="s1-s8-s8-t2" name="Test Multipart Upload" line="61">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230717 19:12:06.974" level="INFO">${randStr} = 9291681881</msg>
<status status="PASS" starttime="20230717 19:12:06.970" endtime="20230717 19:12:06.974"/>
</kw>
<msg timestamp="20230717 19:12:06.974" level="INFO">${random} = ozone-test-9291681881</msg>
<status status="PASS" starttime="20230717 19:12:06.970" endtime="20230717 19:12:06.974"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230717 19:12:06.978" level="INFO">${PREFIX} = ozone-test-9291681881</msg>
<status status="PASS" starttime="20230717 19:12:06.977" endtime="20230717 19:12:06.979"/>
</kw>
<status status="PASS" starttime="20230717 19:12:06.969" endtime="20230717 19:12:06.979"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:12:06.993" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-9291681881/multipartKey 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:12:08.834" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:12:08.834" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-9291681881/multipartKey",
    "UploadId": "c5052eac-9902-4027-a60c-0588faaa4dd7-110731010271150230"
}</msg>
<status status="PASS" starttime="20230717 19:12:06.984" endtime="20230717 19:12:08.834"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:12:08.840" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-9291681881/multipartKey",
    "UploadId": "c5052eac-9902-4027-a60c-0588faaa4dd7-110731010271150230"
}</msg>
<status status="PASS" starttime="20230717 19:12:08.838" endtime="20230717 19:12:08.840"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:12:08.842" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:12:08.840" endtime="20230717 19:12:08.843"/>
</kw>
<status status="PASS" starttime="20230717 19:12:06.984" endtime="20230717 19:12:08.843"/>
</kw>
<msg timestamp="20230717 19:12:08.843" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:12:06.982" endtime="20230717 19:12:08.843"/>
</kw>
<msg timestamp="20230717 19:12:08.844" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-9291681881/multipartKey",
    "UploadId": "c5052eac-9902-4027-a60c-0588faaa4dd7-110731010271150230"
}</msg>
<status status="PASS" starttime="20230717 19:12:06.980" endtime="20230717 19:12:08.844"/>
</kw>
<msg timestamp="20230717 19:12:08.844" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-9291681881/multipartKey",
    "UploadId": "c5052eac-9902-4027-a60c-0588faaa4dd7-110731010271150230"
}</msg>
<status status="PASS" starttime="20230717 19:12:06.979" endtime="20230717 19:12:08.844"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:12:08.851" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-9291681881/multipartKey",
    "UploadId": "c5052eac-9902-4027-a60c-0588faaa4dd7-110731010271150230"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:12:08.932" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:12:08.932" level="INFO">${output} = c5052eac-9902-4027-a60c-0588faaa4dd7-110731010271150230</msg>
<status status="PASS" starttime="20230717 19:12:08.846" endtime="20230717 19:12:08.935"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:12:08.945" level="INFO">c5052eac-9902-4027-a60c-0588faaa4dd7-110731010271150230</msg>
<status status="PASS" starttime="20230717 19:12:08.940" endtime="20230717 19:12:08.945"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:12:08.947" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:12:08.945" endtime="20230717 19:12:08.949"/>
</kw>
<msg timestamp="20230717 19:12:08.949" level="INFO">${uploadID} = c5052eac-9902-4027-a60c-0588faaa4dd7-110731010271150230</msg>
<status status="PASS" starttime="20230717 19:12:08.845" endtime="20230717 19:12:08.949"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:12:08.950" endtime="20230717 19:12:08.953"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:12:08.954" endtime="20230717 19:12:08.955"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:12:08.956" endtime="20230717 19:12:08.958"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:12:08.982" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-9291681881/multipartKey 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:12:10.828" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:12:10.828" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-9291681881/multipartKey",
    "UploadId": "96f3e065-b34e-4a18-8a83-ffac72d18afa-110731010396389527"
}</msg>
<status status="PASS" starttime="20230717 19:12:08.970" endtime="20230717 19:12:10.828"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:12:10.830" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-9291681881/multipartKey",
    "UploadId": "96f3e065-b34e-4a18-8a83-ffac72d18afa-110731010396389527"
}</msg>
<status status="PASS" starttime="20230717 19:12:10.829" endtime="20230717 19:12:10.830"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:12:10.834" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:12:10.832" endtime="20230717 19:12:10.836"/>
</kw>
<status status="PASS" starttime="20230717 19:12:08.965" endtime="20230717 19:12:10.837"/>
</kw>
<msg timestamp="20230717 19:12:10.837" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:12:08.964" endtime="20230717 19:12:10.839"/>
</kw>
<msg timestamp="20230717 19:12:10.840" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-9291681881/multipartKey",
    "UploadId": "96f3e065-b34e-4a18-8a83-ffac72d18afa-110731010396389527"
}</msg>
<status status="PASS" starttime="20230717 19:12:08.962" endtime="20230717 19:12:10.840"/>
</kw>
<msg timestamp="20230717 19:12:10.841" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-9291681881/multipartKey",
    "UploadId": "96f3e065-b34e-4a18-8a83-ffac72d18afa-110731010396389527"
}</msg>
<status status="PASS" starttime="20230717 19:12:08.959" endtime="20230717 19:12:10.841"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${nextUploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:12:10.857" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-9291681881/multipartKey",
    "UploadId": "96f3e065-b34e-4a18-8a83-ffac72d18afa-110731010396389527"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:12:10.955" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:12:10.955" level="INFO">${output} = 96f3e065-b34e-4a18-8a83-ffac72d18afa-110731010396389527</msg>
<status status="PASS" starttime="20230717 19:12:10.847" endtime="20230717 19:12:10.955"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:12:10.968" level="INFO">96f3e065-b34e-4a18-8a83-ffac72d18afa-110731010396389527</msg>
<status status="PASS" starttime="20230717 19:12:10.960" endtime="20230717 19:12:10.968"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:12:10.973" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:12:10.969" endtime="20230717 19:12:10.973"/>
</kw>
<msg timestamp="20230717 19:12:10.976" level="INFO">${nextUploadID} = 96f3e065-b34e-4a18-8a83-ffac72d18afa-110731010396389527</msg>
<status status="PASS" starttime="20230717 19:12:10.841" endtime="20230717 19:12:10.976"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:12:10.976" endtime="20230717 19:12:10.980"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:12:10.981" endtime="20230717 19:12:10.982"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:12:10.982" endtime="20230717 19:12:10.986"/>
</kw>
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${uploadID}</arg>
<arg>${nextUploadID}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="PASS" starttime="20230717 19:12:10.986" endtime="20230717 19:12:10.990"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>5</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>5</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:12:11.005" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:12:11.078" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:12:11.078" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:12:10.999" endtime="20230717 19:12:11.080"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:12:11.087" level="INFO"/>
<status status="PASS" starttime="20230717 19:12:11.083" endtime="20230717 19:12:11.088"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:12:11.091" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:12:11.089" endtime="20230717 19:12:11.091"/>
</kw>
<status status="PASS" starttime="20230717 19:12:10.997" endtime="20230717 19:12:11.092"/>
</kw>
<msg timestamp="20230717 19:12:11.092" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:12:10.995" endtime="20230717 19:12:11.092"/>
</kw>
<status status="PASS" starttime="20230717 19:12:10.994" endtime="20230717 19:12:11.092"/>
</kw>
<status status="PASS" starttime="20230717 19:12:10.992" endtime="20230717 19:12:11.093"/>
</kw>
<status status="PASS" starttime="20230717 19:12:10.990" endtime="20230717 19:12:11.094"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey --part-number 1 --body /tmp/part1 --upload-id ${nextUploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:12:11.109" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket encrypted --key ozone-test-9291681881/multipartKey --part-number 1 --body /tmp/part1 --upload-id 96f3e065-b34e-4a18-8a83-ffac72d18afa-110731010396389527 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:12:35.642" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:12:35.642" level="INFO">${output} = {
    "ETag": "/s3v/encrypted/ozone-test-9291681881/multipartKey-96f3e065-b34e-4a18-8a83-ffac72d18afa-110731010396389527-1"
}</msg>
<status status="PASS" starttime="20230717 19:12:11.103" endtime="20230717 19:12:35.642"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:12:35.647" level="INFO">{
    "ETag": "/s3v/encrypted/ozone-test-9291681881/multipartKey-96f3e065-b34e-4a18-8a83-ffac72d18afa-110731010396389527-1"
}</msg>
<status status="PASS" starttime="20230717 19:12:35.644" endtime="20230717 19:12:35.648"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:12:35.650" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:12:35.649" endtime="20230717 19:12:35.651"/>
</kw>
<status status="PASS" starttime="20230717 19:12:11.101" endtime="20230717 19:12:35.653"/>
</kw>
<msg timestamp="20230717 19:12:35.653" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:12:11.100" endtime="20230717 19:12:35.653"/>
</kw>
<msg timestamp="20230717 19:12:35.653" level="INFO">${output} = {
    "ETag": "/s3v/encrypted/ozone-test-9291681881/multipartKey-96f3e065-b34e-4a18-8a83-ffac72d18afa-110731010396389527-1"
}</msg>
<status status="PASS" starttime="20230717 19:12:11.096" endtime="20230717 19:12:35.654"/>
</kw>
<msg timestamp="20230717 19:12:35.654" level="INFO">${result} = {
    "ETag": "/s3v/encrypted/ozone-test-9291681881/multipartKey-96f3e065-b34e-4a18-8a83-ffac72d18afa-110731010396389527-1"
}</msg>
<status status="PASS" starttime="20230717 19:12:11.094" endtime="20230717 19:12:35.654"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:12:35.656" endtime="20230717 19:12:35.656"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>5</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>5</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:12:35.676" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:12:35.740" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:12:35.741" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:12:35.667" endtime="20230717 19:12:35.741"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:12:35.745" level="INFO"/>
<status status="PASS" starttime="20230717 19:12:35.742" endtime="20230717 19:12:35.745"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:12:35.750" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:12:35.746" endtime="20230717 19:12:35.750"/>
</kw>
<status status="PASS" starttime="20230717 19:12:35.666" endtime="20230717 19:12:35.750"/>
</kw>
<msg timestamp="20230717 19:12:35.750" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:12:35.664" endtime="20230717 19:12:35.750"/>
</kw>
<status status="PASS" starttime="20230717 19:12:35.661" endtime="20230717 19:12:35.751"/>
</kw>
<status status="PASS" starttime="20230717 19:12:35.659" endtime="20230717 19:12:35.751"/>
</kw>
<status status="PASS" starttime="20230717 19:12:35.658" endtime="20230717 19:12:35.751"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey --part-number 1 --body /tmp/part1 --upload-id ${nextUploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:12:35.762" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket encrypted --key ozone-test-9291681881/multipartKey --part-number 1 --body /tmp/part1 --upload-id 96f3e065-b34e-4a18-8a83-ffac72d18afa-110731010396389527 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:12:59.918" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:12:59.918" level="INFO">${output} = {
    "ETag": "/s3v/encrypted/ozone-test-9291681881/multipartKey-96f3e065-b34e-4a18-8a83-ffac72d18afa-110731010396389527-1"
}</msg>
<status status="PASS" starttime="20230717 19:12:35.757" endtime="20230717 19:12:59.918"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:12:59.920" level="INFO">{
    "ETag": "/s3v/encrypted/ozone-test-9291681881/multipartKey-96f3e065-b34e-4a18-8a83-ffac72d18afa-110731010396389527-1"
}</msg>
<status status="PASS" starttime="20230717 19:12:59.919" endtime="20230717 19:12:59.920"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:12:59.920" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:12:59.920" endtime="20230717 19:12:59.921"/>
</kw>
<status status="PASS" starttime="20230717 19:12:35.755" endtime="20230717 19:12:59.922"/>
</kw>
<msg timestamp="20230717 19:12:59.922" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:12:35.754" endtime="20230717 19:12:59.922"/>
</kw>
<msg timestamp="20230717 19:12:59.922" level="INFO">${output} = {
    "ETag": "/s3v/encrypted/ozone-test-9291681881/multipartKey-96f3e065-b34e-4a18-8a83-ffac72d18afa-110731010396389527-1"
}</msg>
<status status="PASS" starttime="20230717 19:12:35.752" endtime="20230717 19:12:59.922"/>
</kw>
<msg timestamp="20230717 19:12:59.922" level="INFO">${result} = {
    "ETag": "/s3v/encrypted/ozone-test-9291681881/multipartKey-96f3e065-b34e-4a18-8a83-ffac72d18afa-110731010396389527-1"
}</msg>
<status status="PASS" starttime="20230717 19:12:35.751" endtime="20230717 19:12:59.922"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:12:59.923" endtime="20230717 19:12:59.923"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:12:06.967" endtime="20230717 19:12:59.923"/>
</test>
<test id="s1-s8-s8-t3" name="Test Multipart Upload Complete" line="89">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230717 19:12:59.937" level="INFO">${randStr} = 4448353722</msg>
<status status="PASS" starttime="20230717 19:12:59.934" endtime="20230717 19:12:59.938"/>
</kw>
<msg timestamp="20230717 19:12:59.938" level="INFO">${random} = ozone-test-4448353722</msg>
<status status="PASS" starttime="20230717 19:12:59.931" endtime="20230717 19:12:59.938"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230717 19:12:59.939" level="INFO">${PREFIX} = ozone-test-4448353722</msg>
<status status="PASS" starttime="20230717 19:12:59.938" endtime="20230717 19:12:59.939"/>
</kw>
<status status="PASS" starttime="20230717 19:12:59.929" endtime="20230717 19:12:59.939"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:12:59.948" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-4448353722/multipartKey1 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:13:02.002" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:13:02.005" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-4448353722/multipartKey1",
    "UploadId": "14a7e178-9bd0-4d08-b8aa-7a187ea1a4c4-110731013745148058"
}</msg>
<status status="PASS" starttime="20230717 19:12:59.942" endtime="20230717 19:13:02.007"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:13:02.020" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-4448353722/multipartKey1",
    "UploadId": "14a7e178-9bd0-4d08-b8aa-7a187ea1a4c4-110731013745148058"
}</msg>
<status status="PASS" starttime="20230717 19:13:02.009" endtime="20230717 19:13:02.020"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:13:02.022" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:13:02.020" endtime="20230717 19:13:02.022"/>
</kw>
<status status="PASS" starttime="20230717 19:12:59.941" endtime="20230717 19:13:02.022"/>
</kw>
<msg timestamp="20230717 19:13:02.022" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:12:59.941" endtime="20230717 19:13:02.023"/>
</kw>
<msg timestamp="20230717 19:13:02.023" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-4448353722/multipartKey1",
    "UploadId": "14a7e178-9bd0-4d08-b8aa-7a187ea1a4c4-110731013745148058"
}</msg>
<status status="PASS" starttime="20230717 19:12:59.940" endtime="20230717 19:13:02.023"/>
</kw>
<msg timestamp="20230717 19:13:02.023" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-4448353722/multipartKey1",
    "UploadId": "14a7e178-9bd0-4d08-b8aa-7a187ea1a4c4-110731013745148058"
}</msg>
<status status="PASS" starttime="20230717 19:12:59.939" endtime="20230717 19:13:02.023"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:13:02.032" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-4448353722/multipartKey1",
    "UploadId": "14a7e178-9bd0-4d08-b8aa-7a187ea1a4c4-110731013745148058"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:13:02.142" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:13:02.142" level="INFO">${output} = 14a7e178-9bd0-4d08-b8aa-7a187ea1a4c4-110731013745148058</msg>
<status status="PASS" starttime="20230717 19:13:02.025" endtime="20230717 19:13:02.142"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:13:02.144" level="INFO">14a7e178-9bd0-4d08-b8aa-7a187ea1a4c4-110731013745148058</msg>
<status status="PASS" starttime="20230717 19:13:02.143" endtime="20230717 19:13:02.144"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:13:02.145" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:13:02.144" endtime="20230717 19:13:02.145"/>
</kw>
<msg timestamp="20230717 19:13:02.145" level="INFO">${uploadID} = 14a7e178-9bd0-4d08-b8aa-7a187ea1a4c4-110731013745148058</msg>
<status status="PASS" starttime="20230717 19:13:02.024" endtime="20230717 19:13:02.145"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:13:02.145" endtime="20230717 19:13:02.146"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:13:02.146" endtime="20230717 19:13:02.146"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:13:02.147" endtime="20230717 19:13:02.147"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>5</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>5</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:13:02.173" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:13:02.236" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:13:02.236" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:13:02.155" endtime="20230717 19:13:02.236"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:13:02.240" level="INFO"/>
<status status="PASS" starttime="20230717 19:13:02.238" endtime="20230717 19:13:02.240"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:13:02.242" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:13:02.241" endtime="20230717 19:13:02.242"/>
</kw>
<status status="PASS" starttime="20230717 19:13:02.154" endtime="20230717 19:13:02.242"/>
</kw>
<msg timestamp="20230717 19:13:02.243" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:13:02.154" endtime="20230717 19:13:02.243"/>
</kw>
<status status="PASS" starttime="20230717 19:13:02.152" endtime="20230717 19:13:02.243"/>
</kw>
<status status="PASS" starttime="20230717 19:13:02.149" endtime="20230717 19:13:02.243"/>
</kw>
<status status="PASS" starttime="20230717 19:13:02.149" endtime="20230717 19:13:02.243"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 --part-number 1 --body /tmp/part1 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:13:02.256" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket encrypted --key ozone-test-4448353722/multipartKey1 --part-number 1 --body /tmp/part1 --upload-id 14a7e178-9bd0-4d08-b8aa-7a187ea1a4c4-110731013745148058 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:13:26.345" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:13:26.345" level="INFO">${output} = {
    "ETag": "/s3v/encrypted/ozone-test-4448353722/multipartKey1-14a7e178-9bd0-4d08-b8aa-7a187ea1a4c4-110731013745148058-1"
}</msg>
<status status="PASS" starttime="20230717 19:13:02.250" endtime="20230717 19:13:26.345"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:13:26.352" level="INFO">{
    "ETag": "/s3v/encrypted/ozone-test-4448353722/multipartKey1-14a7e178-9bd0-4d08-b8aa-7a187ea1a4c4-110731013745148058-1"
}</msg>
<status status="PASS" starttime="20230717 19:13:26.346" endtime="20230717 19:13:26.352"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:13:26.357" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:13:26.355" endtime="20230717 19:13:26.358"/>
</kw>
<status status="PASS" starttime="20230717 19:13:02.249" endtime="20230717 19:13:26.358"/>
</kw>
<msg timestamp="20230717 19:13:26.359" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:13:02.247" endtime="20230717 19:13:26.359"/>
</kw>
<msg timestamp="20230717 19:13:26.359" level="INFO">${output} = {
    "ETag": "/s3v/encrypted/ozone-test-4448353722/multipartKey1-14a7e178-9bd0-4d08-b8aa-7a187ea1a4c4-110731013745148058-1"
}</msg>
<status status="PASS" starttime="20230717 19:13:02.246" endtime="20230717 19:13:26.359"/>
</kw>
<msg timestamp="20230717 19:13:26.361" level="INFO">${result} = {
    "ETag": "/s3v/encrypted/ozone-test-4448353722/multipartKey1-14a7e178-9bd0-4d08-b8aa-7a187ea1a4c4-110731013745148058-1"
}</msg>
<status status="PASS" starttime="20230717 19:13:02.244" endtime="20230717 19:13:26.361"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:13:26.369" level="INFO">Running command 'echo '{
    "ETag": "/s3v/encrypted/ozone-test-4448353722/multipartKey1-14a7e178-9bd0-4d08-b8aa-7a187ea1a4c4-110731013745148058-1"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:13:26.448" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:13:26.448" level="INFO">${output} = /s3v/encrypted/ozone-test-4448353722/multipartKey1-14a7e178-9bd0-4d08-b8aa-7a187ea1a4c4-110731013745148058-1</msg>
<status status="PASS" starttime="20230717 19:13:26.363" endtime="20230717 19:13:26.448"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:13:26.451" level="INFO">/s3v/encrypted/ozone-test-4448353722/multipartKey1-14a7e178-9bd0-4d08-b8aa-7a187ea1a4c4-110731013745148058-1</msg>
<status status="PASS" starttime="20230717 19:13:26.449" endtime="20230717 19:13:26.451"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:13:26.452" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:13:26.451" endtime="20230717 19:13:26.452"/>
</kw>
<msg timestamp="20230717 19:13:26.453" level="INFO">${eTag1} = /s3v/encrypted/ozone-test-4448353722/multipartKey1-14a7e178-9bd0-4d08-b8aa-7a187ea1a4c4-110731013745148058-1</msg>
<status status="PASS" starttime="20230717 19:13:26.361" endtime="20230717 19:13:26.455"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:13:26.455" endtime="20230717 19:13:26.456"/>
</kw>
<kw name="Execute" library="os">
<arg>echo "Part2" &gt; /tmp/part2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:13:26.467" level="INFO">Running command 'echo "Part2" &gt; /tmp/part2'.</msg>
<msg timestamp="20230717 19:13:26.473" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:13:26.473" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:13:26.461" endtime="20230717 19:13:26.473"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:13:26.476" level="INFO"/>
<status status="PASS" starttime="20230717 19:13:26.474" endtime="20230717 19:13:26.476"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:13:26.478" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:13:26.477" endtime="20230717 19:13:26.479"/>
</kw>
<status status="PASS" starttime="20230717 19:13:26.459" endtime="20230717 19:13:26.480"/>
</kw>
<msg timestamp="20230717 19:13:26.480" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:13:26.458" endtime="20230717 19:13:26.480"/>
</kw>
<status status="PASS" starttime="20230717 19:13:26.457" endtime="20230717 19:13:26.480"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 --part-number 2 --body /tmp/part2 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:13:26.493" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket encrypted --key ozone-test-4448353722/multipartKey1 --part-number 2 --body /tmp/part2 --upload-id 14a7e178-9bd0-4d08-b8aa-7a187ea1a4c4-110731013745148058 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:13:49.250" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:13:49.251" level="INFO">${output} = {
    "ETag": "/s3v/encrypted/ozone-test-4448353722/multipartKey1-14a7e178-9bd0-4d08-b8aa-7a187ea1a4c4-110731013745148058-2"
}</msg>
<status status="PASS" starttime="20230717 19:13:26.487" endtime="20230717 19:13:49.251"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:13:49.255" level="INFO">{
    "ETag": "/s3v/encrypted/ozone-test-4448353722/multipartKey1-14a7e178-9bd0-4d08-b8aa-7a187ea1a4c4-110731013745148058-2"
}</msg>
<status status="PASS" starttime="20230717 19:13:49.252" endtime="20230717 19:13:49.255"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:13:49.257" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:13:49.256" endtime="20230717 19:13:49.257"/>
</kw>
<status status="PASS" starttime="20230717 19:13:26.484" endtime="20230717 19:13:49.259"/>
</kw>
<msg timestamp="20230717 19:13:49.259" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:13:26.484" endtime="20230717 19:13:49.259"/>
</kw>
<msg timestamp="20230717 19:13:49.260" level="INFO">${output} = {
    "ETag": "/s3v/encrypted/ozone-test-4448353722/multipartKey1-14a7e178-9bd0-4d08-b8aa-7a187ea1a4c4-110731013745148058-2"
}</msg>
<status status="PASS" starttime="20230717 19:13:26.482" endtime="20230717 19:13:49.260"/>
</kw>
<msg timestamp="20230717 19:13:49.260" level="INFO">${result} = {
    "ETag": "/s3v/encrypted/ozone-test-4448353722/multipartKey1-14a7e178-9bd0-4d08-b8aa-7a187ea1a4c4-110731013745148058-2"
}</msg>
<status status="PASS" starttime="20230717 19:13:26.481" endtime="20230717 19:13:49.260"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:13:49.272" level="INFO">Running command 'echo '{
    "ETag": "/s3v/encrypted/ozone-test-4448353722/multipartKey1-14a7e178-9bd0-4d08-b8aa-7a187ea1a4c4-110731013745148058-2"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:13:49.397" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:13:49.397" level="INFO">${output} = /s3v/encrypted/ozone-test-4448353722/multipartKey1-14a7e178-9bd0-4d08-b8aa-7a187ea1a4c4-110731013745148058-2</msg>
<status status="PASS" starttime="20230717 19:13:49.264" endtime="20230717 19:13:49.397"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:13:49.401" level="INFO">/s3v/encrypted/ozone-test-4448353722/multipartKey1-14a7e178-9bd0-4d08-b8aa-7a187ea1a4c4-110731013745148058-2</msg>
<status status="PASS" starttime="20230717 19:13:49.398" endtime="20230717 19:13:49.401"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:13:49.404" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:13:49.402" endtime="20230717 19:13:49.404"/>
</kw>
<msg timestamp="20230717 19:13:49.407" level="INFO">${eTag2} = /s3v/encrypted/ozone-test-4448353722/multipartKey1-14a7e178-9bd0-4d08-b8aa-7a187ea1a4c4-110731013745148058-2</msg>
<status status="PASS" starttime="20230717 19:13:49.261" endtime="20230717 19:13:49.407"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:13:49.407" endtime="20230717 19:13:49.409"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=${eTag2},PartNumber=2}]'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:13:49.427" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 14a7e178-9bd0-4d08-b8aa-7a187ea1a4c4-110731013745148058 --bucket encrypted --key ozone-test-4448353722/multipartKey1 --multipart-upload 'Parts=[{ETag=/s3v/encrypted/ozone-test-4448353722/multipartKey1-14a7e178-9bd0-4d08-b8aa-7a187ea1a4c4-110731013745148058-1,PartNumber=1},{ETag=/s3v/encrypted/ozone-test-4448353722/multipartKey1-14a7e178-9bd0-4d08-b8aa-7a187ea1a4c4-110731013745148058-2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:13:51.251" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:13:51.251" level="INFO">${output} = {
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-4448353722/multipartKey1",
    "ETag": "4a886ba1f8682dec6770eb42005b7411ef59f97e8c8ae8580ed56bb68ca555ef"
}</msg>
<status status="PASS" starttime="20230717 19:13:49.420" endtime="20230717 19:13:51.251"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:13:51.254" level="INFO">{
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-4448353722/multipartKey1",
    "ETag": "4a886ba1f8682dec6770eb42005b7411ef59f97e8c8ae8580ed56bb68ca555ef"
}</msg>
<status status="PASS" starttime="20230717 19:13:51.252" endtime="20230717 19:13:51.254"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:13:51.255" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:13:51.254" endtime="20230717 19:13:51.256"/>
</kw>
<status status="PASS" starttime="20230717 19:13:49.418" endtime="20230717 19:13:51.256"/>
</kw>
<msg timestamp="20230717 19:13:51.256" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:13:49.416" endtime="20230717 19:13:51.256"/>
</kw>
<msg timestamp="20230717 19:13:51.256" level="INFO">${output} = {
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-4448353722/multipartKey1",
    "ETag": "4a886ba1f8682dec6770eb42005b7411ef59f97e8c8ae8580ed56bb68ca555ef"
}</msg>
<status status="PASS" starttime="20230717 19:13:49.414" endtime="20230717 19:13:51.257"/>
</kw>
<msg timestamp="20230717 19:13:51.257" level="INFO">${result} = {
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-4448353722/multipartKey1",
    "ETag": "4a886ba1f8682dec6770eb42005b7411ef59f97e8c8ae8580ed56bb68ca555ef"
}</msg>
<status status="PASS" starttime="20230717 19:13:49.410" endtime="20230717 19:13:51.257"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:13:51.257" endtime="20230717 19:13:51.258"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:13:51.258" endtime="20230717 19:13:51.259"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:13:51.259" endtime="20230717 19:13:51.260"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 /tmp/${PREFIX}-multipartKey1.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:13:51.270" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-4448353722/multipartKey1 /tmp/ozone-test-4448353722-multipartKey1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:13:54.252" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:13:54.252" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:13:51 GMT",
    "ContentLength": 5242886,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Ex...</msg>
<status status="PASS" starttime="20230717 19:13:51.265" endtime="20230717 19:13:54.253"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:13:54.256" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:13:51 GMT",
    "ContentLength": 5242886,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Mon, 17 Jul 2023 19:13:52 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230717 19:13:54.254" endtime="20230717 19:13:54.258"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:13:54.259" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:13:54.258" endtime="20230717 19:13:54.259"/>
</kw>
<status status="PASS" starttime="20230717 19:13:51.264" endtime="20230717 19:13:54.260"/>
</kw>
<msg timestamp="20230717 19:13:54.260" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:13:51.263" endtime="20230717 19:13:54.260"/>
</kw>
<msg timestamp="20230717 19:13:54.261" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:13:51 GMT",
    "ContentLength": 5242886,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Ex...</msg>
<status status="PASS" starttime="20230717 19:13:51.262" endtime="20230717 19:13:54.261"/>
</kw>
<msg timestamp="20230717 19:13:54.261" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:13:51 GMT",
    "ContentLength": 5242886,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Ex...</msg>
<status status="PASS" starttime="20230717 19:13:51.260" endtime="20230717 19:13:54.261"/>
</kw>
<kw name="Execute" library="os">
<arg>cat /tmp/part1 /tmp/part2 &gt; /tmp/${PREFIX}-multipartKey1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:13:54.276" level="INFO">Running command 'cat /tmp/part1 /tmp/part2 &gt; /tmp/ozone-test-4448353722-multipartKey1'.</msg>
<msg timestamp="20230717 19:13:54.287" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:13:54.287" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:13:54.267" endtime="20230717 19:13:54.287"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:13:54.289" level="INFO"/>
<status status="PASS" starttime="20230717 19:13:54.288" endtime="20230717 19:13:54.289"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:13:54.290" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:13:54.290" endtime="20230717 19:13:54.290"/>
</kw>
<status status="PASS" starttime="20230717 19:13:54.265" endtime="20230717 19:13:54.291"/>
</kw>
<msg timestamp="20230717 19:13:54.291" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:13:54.264" endtime="20230717 19:13:54.291"/>
</kw>
<status status="PASS" starttime="20230717 19:13:54.262" endtime="20230717 19:13:54.291"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/${PREFIX}-multipartKey1</arg>
<arg>/tmp/${PREFIX}-multipartKey1.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:13:54.298" level="INFO">Running command 'md5sum /tmp/ozone-test-4448353722-multipartKey1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:13:54.331" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:13:54.331" level="INFO">${output} = 03a74bc2f5e56c0d121cc703b227db59</msg>
<status status="PASS" starttime="20230717 19:13:54.294" endtime="20230717 19:13:54.331"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:13:54.332" level="INFO">03a74bc2f5e56c0d121cc703b227db59</msg>
<status status="PASS" starttime="20230717 19:13:54.332" endtime="20230717 19:13:54.332"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:13:54.333" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:13:54.333" endtime="20230717 19:13:54.333"/>
</kw>
<status status="PASS" starttime="20230717 19:13:54.293" endtime="20230717 19:13:54.338"/>
</kw>
<msg timestamp="20230717 19:13:54.338" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:13:54.293" endtime="20230717 19:13:54.342"/>
</kw>
<msg timestamp="20230717 19:13:54.344" level="INFO">${checksumbefore} = 03a74bc2f5e56c0d121cc703b227db59</msg>
<status status="PASS" starttime="20230717 19:13:54.292" endtime="20230717 19:13:54.344"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:13:54.356" level="INFO">Running command 'md5sum /tmp/ozone-test-4448353722-multipartKey1.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:13:54.421" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:13:54.421" level="INFO">${output} = 03a74bc2f5e56c0d121cc703b227db59</msg>
<status status="PASS" starttime="20230717 19:13:54.351" endtime="20230717 19:13:54.421"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:13:54.426" level="INFO">03a74bc2f5e56c0d121cc703b227db59</msg>
<status status="PASS" starttime="20230717 19:13:54.423" endtime="20230717 19:13:54.426"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:13:54.428" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:13:54.427" endtime="20230717 19:13:54.429"/>
</kw>
<status status="PASS" starttime="20230717 19:13:54.350" endtime="20230717 19:13:54.429"/>
</kw>
<msg timestamp="20230717 19:13:54.429" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:13:54.350" endtime="20230717 19:13:54.431"/>
</kw>
<msg timestamp="20230717 19:13:54.432" level="INFO">${checksumafter} = 03a74bc2f5e56c0d121cc703b227db59</msg>
<status status="PASS" starttime="20230717 19:13:54.344" endtime="20230717 19:13:54.432"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230717 19:13:54.434" endtime="20230717 19:13:54.434"/>
</kw>
<status status="PASS" starttime="20230717 19:13:54.291" endtime="20230717 19:13:54.436"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:12:59.926" endtime="20230717 19:13:54.436"/>
</test>
<test id="s1-s8-s8-t4" name="Test Multipart Upload Complete Entity too small" line="118">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230717 19:13:54.452" level="INFO">${randStr} = 4107754892</msg>
<status status="PASS" starttime="20230717 19:13:54.447" endtime="20230717 19:13:54.452"/>
</kw>
<msg timestamp="20230717 19:13:54.454" level="INFO">${random} = ozone-test-4107754892</msg>
<status status="PASS" starttime="20230717 19:13:54.447" endtime="20230717 19:13:54.454"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230717 19:13:54.457" level="INFO">${PREFIX} = ozone-test-4107754892</msg>
<status status="PASS" starttime="20230717 19:13:54.455" endtime="20230717 19:13:54.457"/>
</kw>
<status status="PASS" starttime="20230717 19:13:54.446" endtime="20230717 19:13:54.457"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey2</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:13:54.477" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-4107754892/multipartKey2 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:13:56.044" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:13:56.044" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-4107754892/multipartKey2",
    "UploadId": "f84b1619-2eea-4077-a670-fe138fcb2be1-110731017313517725"
}</msg>
<status status="PASS" starttime="20230717 19:13:54.465" endtime="20230717 19:13:56.044"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:13:56.047" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-4107754892/multipartKey2",
    "UploadId": "f84b1619-2eea-4077-a670-fe138fcb2be1-110731017313517725"
}</msg>
<status status="PASS" starttime="20230717 19:13:56.045" endtime="20230717 19:13:56.047"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:13:56.048" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:13:56.047" endtime="20230717 19:13:56.049"/>
</kw>
<status status="PASS" starttime="20230717 19:13:54.463" endtime="20230717 19:13:56.049"/>
</kw>
<msg timestamp="20230717 19:13:56.050" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:13:54.462" endtime="20230717 19:13:56.050"/>
</kw>
<msg timestamp="20230717 19:13:56.050" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-4107754892/multipartKey2",
    "UploadId": "f84b1619-2eea-4077-a670-fe138fcb2be1-110731017313517725"
}</msg>
<status status="PASS" starttime="20230717 19:13:54.462" endtime="20230717 19:13:56.051"/>
</kw>
<msg timestamp="20230717 19:13:56.051" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-4107754892/multipartKey2",
    "UploadId": "f84b1619-2eea-4077-a670-fe138fcb2be1-110731017313517725"
}</msg>
<status status="PASS" starttime="20230717 19:13:54.459" endtime="20230717 19:13:56.051"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:13:56.058" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-4107754892/multipartKey2",
    "UploadId": "f84b1619-2eea-4077-a670-fe138fcb2be1-110731017313517725"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:13:56.131" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:13:56.131" level="INFO">${output} = f84b1619-2eea-4077-a670-fe138fcb2be1-110731017313517725</msg>
<status status="PASS" starttime="20230717 19:13:56.053" endtime="20230717 19:13:56.131"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:13:56.134" level="INFO">f84b1619-2eea-4077-a670-fe138fcb2be1-110731017313517725</msg>
<status status="PASS" starttime="20230717 19:13:56.132" endtime="20230717 19:13:56.134"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:13:56.135" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:13:56.134" endtime="20230717 19:13:56.135"/>
</kw>
<msg timestamp="20230717 19:13:56.136" level="INFO">${uploadID} = f84b1619-2eea-4077-a670-fe138fcb2be1-110731017313517725</msg>
<status status="PASS" starttime="20230717 19:13:56.051" endtime="20230717 19:13:56.136"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:13:56.136" endtime="20230717 19:13:56.138"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:13:56.138" endtime="20230717 19:13:56.139"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:13:56.139" endtime="20230717 19:13:56.140"/>
</kw>
<kw name="Execute" library="os">
<arg>echo "Part1" &gt; /tmp/part1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:13:56.149" level="INFO">Running command 'echo "Part1" &gt; /tmp/part1'.</msg>
<msg timestamp="20230717 19:13:56.155" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:13:56.155" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:13:56.144" endtime="20230717 19:13:56.155"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:13:56.161" level="INFO"/>
<status status="PASS" starttime="20230717 19:13:56.156" endtime="20230717 19:13:56.161"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:13:56.162" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:13:56.161" endtime="20230717 19:13:56.162"/>
</kw>
<status status="PASS" starttime="20230717 19:13:56.143" endtime="20230717 19:13:56.163"/>
</kw>
<msg timestamp="20230717 19:13:56.163" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:13:56.142" endtime="20230717 19:13:56.163"/>
</kw>
<status status="PASS" starttime="20230717 19:13:56.140" endtime="20230717 19:13:56.163"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey2 --part-number 1 --body /tmp/part1 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:13:56.173" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket encrypted --key ozone-test-4107754892/multipartKey2 --part-number 1 --body /tmp/part1 --upload-id f84b1619-2eea-4077-a670-fe138fcb2be1-110731017313517725 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:14:18.199" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:14:18.199" level="INFO">${output} = {
    "ETag": "/s3v/encrypted/ozone-test-4107754892/multipartKey2-f84b1619-2eea-4077-a670-fe138fcb2be1-110731017313517725-1"
}</msg>
<status status="PASS" starttime="20230717 19:13:56.167" endtime="20230717 19:14:18.199"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:14:18.201" level="INFO">{
    "ETag": "/s3v/encrypted/ozone-test-4107754892/multipartKey2-f84b1619-2eea-4077-a670-fe138fcb2be1-110731017313517725-1"
}</msg>
<status status="PASS" starttime="20230717 19:14:18.200" endtime="20230717 19:14:18.202"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:14:18.203" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:14:18.202" endtime="20230717 19:14:18.203"/>
</kw>
<status status="PASS" starttime="20230717 19:13:56.167" endtime="20230717 19:14:18.204"/>
</kw>
<msg timestamp="20230717 19:14:18.204" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:13:56.166" endtime="20230717 19:14:18.204"/>
</kw>
<msg timestamp="20230717 19:14:18.204" level="INFO">${output} = {
    "ETag": "/s3v/encrypted/ozone-test-4107754892/multipartKey2-f84b1619-2eea-4077-a670-fe138fcb2be1-110731017313517725-1"
}</msg>
<status status="PASS" starttime="20230717 19:13:56.165" endtime="20230717 19:14:18.204"/>
</kw>
<msg timestamp="20230717 19:14:18.205" level="INFO">${result} = {
    "ETag": "/s3v/encrypted/ozone-test-4107754892/multipartKey2-f84b1619-2eea-4077-a670-fe138fcb2be1-110731017313517725-1"
}</msg>
<status status="PASS" starttime="20230717 19:13:56.164" endtime="20230717 19:14:18.205"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:14:18.226" level="INFO">Running command 'echo '{
    "ETag": "/s3v/encrypted/ozone-test-4107754892/multipartKey2-f84b1619-2eea-4077-a670-fe138fcb2be1-110731017313517725-1"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:14:18.353" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:14:18.353" level="INFO">${output} = /s3v/encrypted/ozone-test-4107754892/multipartKey2-f84b1619-2eea-4077-a670-fe138fcb2be1-110731017313517725-1</msg>
<status status="PASS" starttime="20230717 19:14:18.213" endtime="20230717 19:14:18.353"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:14:18.357" level="INFO">/s3v/encrypted/ozone-test-4107754892/multipartKey2-f84b1619-2eea-4077-a670-fe138fcb2be1-110731017313517725-1</msg>
<status status="PASS" starttime="20230717 19:14:18.355" endtime="20230717 19:14:18.357"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:14:18.358" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:14:18.357" endtime="20230717 19:14:18.359"/>
</kw>
<msg timestamp="20230717 19:14:18.359" level="INFO">${eTag1} = /s3v/encrypted/ozone-test-4107754892/multipartKey2-f84b1619-2eea-4077-a670-fe138fcb2be1-110731017313517725-1</msg>
<status status="PASS" starttime="20230717 19:14:18.208" endtime="20230717 19:14:18.359"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:14:18.360" endtime="20230717 19:14:18.361"/>
</kw>
<kw name="Execute" library="os">
<arg>echo "Part2" &gt; /tmp/part2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:14:18.372" level="INFO">Running command 'echo "Part2" &gt; /tmp/part2'.</msg>
<msg timestamp="20230717 19:14:18.376" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:14:18.376" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:14:18.365" endtime="20230717 19:14:18.376"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:14:18.378" level="INFO"/>
<status status="PASS" starttime="20230717 19:14:18.377" endtime="20230717 19:14:18.378"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:14:18.385" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:14:18.379" endtime="20230717 19:14:18.385"/>
</kw>
<status status="PASS" starttime="20230717 19:14:18.363" endtime="20230717 19:14:18.385"/>
</kw>
<msg timestamp="20230717 19:14:18.386" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:14:18.362" endtime="20230717 19:14:18.386"/>
</kw>
<status status="PASS" starttime="20230717 19:14:18.361" endtime="20230717 19:14:18.387"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey2 --part-number 2 --body /tmp/part2 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:14:18.404" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket encrypted --key ozone-test-4107754892/multipartKey2 --part-number 2 --body /tmp/part2 --upload-id f84b1619-2eea-4077-a670-fe138fcb2be1-110731017313517725 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:14:40.438" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:14:40.438" level="INFO">${output} = {
    "ETag": "/s3v/encrypted/ozone-test-4107754892/multipartKey2-f84b1619-2eea-4077-a670-fe138fcb2be1-110731017313517725-2"
}</msg>
<status status="PASS" starttime="20230717 19:14:18.396" endtime="20230717 19:14:40.439"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:14:40.448" level="INFO">{
    "ETag": "/s3v/encrypted/ozone-test-4107754892/multipartKey2-f84b1619-2eea-4077-a670-fe138fcb2be1-110731017313517725-2"
}</msg>
<status status="PASS" starttime="20230717 19:14:40.442" endtime="20230717 19:14:40.448"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:14:40.452" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:14:40.448" endtime="20230717 19:14:40.454"/>
</kw>
<status status="PASS" starttime="20230717 19:14:18.395" endtime="20230717 19:14:40.456"/>
</kw>
<msg timestamp="20230717 19:14:40.457" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:14:18.393" endtime="20230717 19:14:40.457"/>
</kw>
<msg timestamp="20230717 19:14:40.457" level="INFO">${output} = {
    "ETag": "/s3v/encrypted/ozone-test-4107754892/multipartKey2-f84b1619-2eea-4077-a670-fe138fcb2be1-110731017313517725-2"
}</msg>
<status status="PASS" starttime="20230717 19:14:18.391" endtime="20230717 19:14:40.457"/>
</kw>
<msg timestamp="20230717 19:14:40.458" level="INFO">${result} = {
    "ETag": "/s3v/encrypted/ozone-test-4107754892/multipartKey2-f84b1619-2eea-4077-a670-fe138fcb2be1-110731017313517725-2"
}</msg>
<status status="PASS" starttime="20230717 19:14:18.388" endtime="20230717 19:14:40.458"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:14:40.475" level="INFO">Running command 'echo '{
    "ETag": "/s3v/encrypted/ozone-test-4107754892/multipartKey2-f84b1619-2eea-4077-a670-fe138fcb2be1-110731017313517725-2"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:14:40.566" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:14:40.566" level="INFO">${output} = /s3v/encrypted/ozone-test-4107754892/multipartKey2-f84b1619-2eea-4077-a670-fe138fcb2be1-110731017313517725-2</msg>
<status status="PASS" starttime="20230717 19:14:40.466" endtime="20230717 19:14:40.566"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:14:40.577" level="INFO">/s3v/encrypted/ozone-test-4107754892/multipartKey2-f84b1619-2eea-4077-a670-fe138fcb2be1-110731017313517725-2</msg>
<status status="PASS" starttime="20230717 19:14:40.568" endtime="20230717 19:14:40.577"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:14:40.582" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:14:40.580" endtime="20230717 19:14:40.583"/>
</kw>
<msg timestamp="20230717 19:14:40.584" level="INFO">${eTag2} = /s3v/encrypted/ozone-test-4107754892/multipartKey2-f84b1619-2eea-4077-a670-fe138fcb2be1-110731017313517725-2</msg>
<status status="PASS" starttime="20230717 19:14:40.458" endtime="20230717 19:14:40.584"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:14:40.585" endtime="20230717 19:14:40.587"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey2 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=${eTag2},PartNumber=2}]'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:14:40.604" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id f84b1619-2eea-4077-a670-fe138fcb2be1-110731017313517725 --bucket encrypted --key ozone-test-4107754892/multipartKey2 --multipart-upload 'Parts=[{ETag=/s3v/encrypted/ozone-test-4107754892/multipartKey2-f84b1619-2eea-4077-a670-fe138fcb2be1-110731017313517725-1,PartNumber=1},{ETag=/s3v/encrypted/ozone-test-4107754892/multipartKey2-f84b1619-2eea-4077-a670-fe138fcb2be1-110731017313517725-2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:14:42.414" level="INFO">${rc} = 255</msg>
<msg timestamp="20230717 19:14:42.414" level="INFO">${output} = 
An error occurred (EntityTooSmall) when calling the CompleteMultipartUpload operation: Your proposed upload is smaller than the minimum allowed object size. Each part must be at least 5 MB in size, e...</msg>
<status status="PASS" starttime="20230717 19:14:40.596" endtime="20230717 19:14:42.414"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:14:42.425" level="INFO">
An error occurred (EntityTooSmall) when calling the CompleteMultipartUpload operation: Your proposed upload is smaller than the minimum allowed object size. Each part must be at least 5 MB in size, except the last part.</msg>
<status status="PASS" starttime="20230717 19:14:42.419" endtime="20230717 19:14:42.425"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:14:42.434" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:14:42.425" endtime="20230717 19:14:42.435"/>
</kw>
<msg timestamp="20230717 19:14:42.437" level="INFO">${output} = 
An error occurred (EntityTooSmall) when calling the CompleteMultipartUpload operation: Your proposed upload is smaller than the minimum allowed object size. Each part must be at least 5 MB in size, e...</msg>
<status status="PASS" starttime="20230717 19:14:40.593" endtime="20230717 19:14:42.437"/>
</kw>
<msg timestamp="20230717 19:14:42.437" level="INFO">${result} = 
An error occurred (EntityTooSmall) when calling the CompleteMultipartUpload operation: Your proposed upload is smaller than the minimum allowed object size. Each part must be at least 5 MB in size, e...</msg>
<status status="PASS" starttime="20230717 19:14:40.588" endtime="20230717 19:14:42.437"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>EntityTooSmall</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:14:42.444" endtime="20230717 19:14:42.444"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:13:54.441" endtime="20230717 19:14:42.446"/>
</test>
<test id="s1-s8-s8-t5" name="Test Multipart Upload Complete Invalid part errors and complete mpu with few parts" line="141">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230717 19:14:42.453" level="INFO">${randStr} = 2485593730</msg>
<status status="PASS" starttime="20230717 19:14:42.452" endtime="20230717 19:14:42.453"/>
</kw>
<msg timestamp="20230717 19:14:42.454" level="INFO">${random} = ozone-test-2485593730</msg>
<status status="PASS" starttime="20230717 19:14:42.451" endtime="20230717 19:14:42.455"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230717 19:14:42.456" level="INFO">${PREFIX} = ozone-test-2485593730</msg>
<status status="PASS" starttime="20230717 19:14:42.455" endtime="20230717 19:14:42.456"/>
</kw>
<status status="PASS" starttime="20230717 19:14:42.450" endtime="20230717 19:14:42.456"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey3</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:14:42.467" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-2485593730/multipartKey3 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:14:44.366" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:14:44.366" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2485593730/multipartKey3",
    "UploadId": "f54352ad-8dd4-4f3a-b212-0ff9e1cd8035-110731020454199456"
}</msg>
<status status="PASS" starttime="20230717 19:14:42.461" endtime="20230717 19:14:44.366"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:14:44.373" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-2485593730/multipartKey3",
    "UploadId": "f54352ad-8dd4-4f3a-b212-0ff9e1cd8035-110731020454199456"
}</msg>
<status status="PASS" starttime="20230717 19:14:44.367" endtime="20230717 19:14:44.373"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:14:44.387" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:14:44.382" endtime="20230717 19:14:44.387"/>
</kw>
<status status="PASS" starttime="20230717 19:14:42.460" endtime="20230717 19:14:44.394"/>
</kw>
<msg timestamp="20230717 19:14:44.394" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:14:42.459" endtime="20230717 19:14:44.394"/>
</kw>
<msg timestamp="20230717 19:14:44.395" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2485593730/multipartKey3",
    "UploadId": "f54352ad-8dd4-4f3a-b212-0ff9e1cd8035-110731020454199456"
}</msg>
<status status="PASS" starttime="20230717 19:14:42.458" endtime="20230717 19:14:44.395"/>
</kw>
<msg timestamp="20230717 19:14:44.395" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2485593730/multipartKey3",
    "UploadId": "f54352ad-8dd4-4f3a-b212-0ff9e1cd8035-110731020454199456"
}</msg>
<status status="PASS" starttime="20230717 19:14:42.456" endtime="20230717 19:14:44.395"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:14:44.403" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-2485593730/multipartKey3",
    "UploadId": "f54352ad-8dd4-4f3a-b212-0ff9e1cd8035-110731020454199456"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:14:44.488" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:14:44.488" level="INFO">${output} = f54352ad-8dd4-4f3a-b212-0ff9e1cd8035-110731020454199456</msg>
<status status="PASS" starttime="20230717 19:14:44.396" endtime="20230717 19:14:44.488"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:14:44.491" level="INFO">f54352ad-8dd4-4f3a-b212-0ff9e1cd8035-110731020454199456</msg>
<status status="PASS" starttime="20230717 19:14:44.490" endtime="20230717 19:14:44.491"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:14:44.493" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:14:44.492" endtime="20230717 19:14:44.493"/>
</kw>
<msg timestamp="20230717 19:14:44.494" level="INFO">${uploadID} = f54352ad-8dd4-4f3a-b212-0ff9e1cd8035-110731020454199456</msg>
<status status="PASS" starttime="20230717 19:14:44.395" endtime="20230717 19:14:44.494"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:14:44.494" endtime="20230717 19:14:44.495"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:14:44.495" endtime="20230717 19:14:44.496"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:14:44.496" endtime="20230717 19:14:44.497"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}]'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:14:44.507" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id f54352ad-8dd4-4f3a-b212-0ff9e1cd8035-110731020454199456 --bucket encrypted --key ozone-test-2485593730/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:14:46.256" level="INFO">${rc} = 255</msg>
<msg timestamp="20230717 19:14:46.256" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20230717 19:14:44.502" endtime="20230717 19:14:46.256"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:14:46.258" level="INFO">
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified entity tag might not have matched the part's entity tag.</msg>
<status status="PASS" starttime="20230717 19:14:46.257" endtime="20230717 19:14:46.258"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:14:46.267" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:14:46.265" endtime="20230717 19:14:46.268"/>
</kw>
<msg timestamp="20230717 19:14:46.268" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20230717 19:14:44.500" endtime="20230717 19:14:46.268"/>
</kw>
<msg timestamp="20230717 19:14:46.269" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20230717 19:14:44.498" endtime="20230717 19:14:46.269"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPart</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:14:46.270" endtime="20230717 19:14:46.272"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=2},{ETag=etag2,PartNumber=1}]'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:14:46.285" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id f54352ad-8dd4-4f3a-b212-0ff9e1cd8035-110731020454199456 --bucket encrypted --key ozone-test-2485593730/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=2},{ETag=etag2,PartNumber=1}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:14:47.803" level="INFO">${rc} = 255</msg>
<msg timestamp="20230717 19:14:47.803" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20230717 19:14:46.275" endtime="20230717 19:14:47.803"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:14:47.806" level="INFO">
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified entity tag might not have matched the part's entity tag.</msg>
<status status="PASS" starttime="20230717 19:14:47.804" endtime="20230717 19:14:47.806"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:14:47.808" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:14:47.807" endtime="20230717 19:14:47.808"/>
</kw>
<msg timestamp="20230717 19:14:47.808" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20230717 19:14:46.274" endtime="20230717 19:14:47.808"/>
</kw>
<msg timestamp="20230717 19:14:47.809" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20230717 19:14:46.272" endtime="20230717 19:14:47.809"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPart</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:14:47.810" endtime="20230717 19:14:47.811"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>5</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>5</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:14:47.824" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:14:47.891" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:14:47.891" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:14:47.818" endtime="20230717 19:14:47.891"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:14:47.893" level="INFO"/>
<status status="PASS" starttime="20230717 19:14:47.892" endtime="20230717 19:14:47.893"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:14:47.895" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:14:47.894" endtime="20230717 19:14:47.895"/>
</kw>
<status status="PASS" starttime="20230717 19:14:47.816" endtime="20230717 19:14:47.895"/>
</kw>
<msg timestamp="20230717 19:14:47.896" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:14:47.815" endtime="20230717 19:14:47.896"/>
</kw>
<status status="PASS" starttime="20230717 19:14:47.815" endtime="20230717 19:14:47.896"/>
</kw>
<status status="PASS" starttime="20230717 19:14:47.813" endtime="20230717 19:14:47.896"/>
</kw>
<status status="PASS" starttime="20230717 19:14:47.811" endtime="20230717 19:14:47.896"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --part-number 1 --body /tmp/part1 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:14:47.914" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket encrypted --key ozone-test-2485593730/multipartKey3 --part-number 1 --body /tmp/part1 --upload-id f54352ad-8dd4-4f3a-b212-0ff9e1cd8035-110731020454199456 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:15:12.450" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:15:12.450" level="INFO">${output} = {
    "ETag": "/s3v/encrypted/ozone-test-2485593730/multipartKey3-f54352ad-8dd4-4f3a-b212-0ff9e1cd8035-110731020454199456-1"
}</msg>
<status status="PASS" starttime="20230717 19:14:47.906" endtime="20230717 19:15:12.450"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:15:12.458" level="INFO">{
    "ETag": "/s3v/encrypted/ozone-test-2485593730/multipartKey3-f54352ad-8dd4-4f3a-b212-0ff9e1cd8035-110731020454199456-1"
}</msg>
<status status="PASS" starttime="20230717 19:15:12.452" endtime="20230717 19:15:12.460"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:15:12.464" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:15:12.460" endtime="20230717 19:15:12.464"/>
</kw>
<status status="PASS" starttime="20230717 19:14:47.904" endtime="20230717 19:15:12.466"/>
</kw>
<msg timestamp="20230717 19:15:12.466" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:14:47.900" endtime="20230717 19:15:12.467"/>
</kw>
<msg timestamp="20230717 19:15:12.467" level="INFO">${output} = {
    "ETag": "/s3v/encrypted/ozone-test-2485593730/multipartKey3-f54352ad-8dd4-4f3a-b212-0ff9e1cd8035-110731020454199456-1"
}</msg>
<status status="PASS" starttime="20230717 19:14:47.899" endtime="20230717 19:15:12.467"/>
</kw>
<msg timestamp="20230717 19:15:12.469" level="INFO">${result} = {
    "ETag": "/s3v/encrypted/ozone-test-2485593730/multipartKey3-f54352ad-8dd4-4f3a-b212-0ff9e1cd8035-110731020454199456-1"
}</msg>
<status status="PASS" starttime="20230717 19:14:47.897" endtime="20230717 19:15:12.469"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:15:12.481" level="INFO">Running command 'echo '{
    "ETag": "/s3v/encrypted/ozone-test-2485593730/multipartKey3-f54352ad-8dd4-4f3a-b212-0ff9e1cd8035-110731020454199456-1"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:15:12.598" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:15:12.599" level="INFO">${output} = /s3v/encrypted/ozone-test-2485593730/multipartKey3-f54352ad-8dd4-4f3a-b212-0ff9e1cd8035-110731020454199456-1</msg>
<status status="PASS" starttime="20230717 19:15:12.471" endtime="20230717 19:15:12.599"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:15:12.603" level="INFO">/s3v/encrypted/ozone-test-2485593730/multipartKey3-f54352ad-8dd4-4f3a-b212-0ff9e1cd8035-110731020454199456-1</msg>
<status status="PASS" starttime="20230717 19:15:12.600" endtime="20230717 19:15:12.603"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:15:12.605" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:15:12.604" endtime="20230717 19:15:12.605"/>
</kw>
<msg timestamp="20230717 19:15:12.605" level="INFO">${eTag1} = /s3v/encrypted/ozone-test-2485593730/multipartKey3-f54352ad-8dd4-4f3a-b212-0ff9e1cd8035-110731020454199456-1</msg>
<status status="PASS" starttime="20230717 19:15:12.469" endtime="20230717 19:15:12.606"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:15:12.606" endtime="20230717 19:15:12.607"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --part-number 2 --body /tmp/part1 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:15:12.632" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket encrypted --key ozone-test-2485593730/multipartKey3 --part-number 2 --body /tmp/part1 --upload-id f54352ad-8dd4-4f3a-b212-0ff9e1cd8035-110731020454199456 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:15:37.429" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:15:37.429" level="INFO">${output} = {
    "ETag": "/s3v/encrypted/ozone-test-2485593730/multipartKey3-f54352ad-8dd4-4f3a-b212-0ff9e1cd8035-110731020454199456-2"
}</msg>
<status status="PASS" starttime="20230717 19:15:12.626" endtime="20230717 19:15:37.429"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:15:37.439" level="INFO">{
    "ETag": "/s3v/encrypted/ozone-test-2485593730/multipartKey3-f54352ad-8dd4-4f3a-b212-0ff9e1cd8035-110731020454199456-2"
}</msg>
<status status="PASS" starttime="20230717 19:15:37.436" endtime="20230717 19:15:37.441"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:15:37.445" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:15:37.442" endtime="20230717 19:15:37.445"/>
</kw>
<status status="PASS" starttime="20230717 19:15:12.623" endtime="20230717 19:15:37.447"/>
</kw>
<msg timestamp="20230717 19:15:37.447" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:15:12.622" endtime="20230717 19:15:37.447"/>
</kw>
<msg timestamp="20230717 19:15:37.447" level="INFO">${output} = {
    "ETag": "/s3v/encrypted/ozone-test-2485593730/multipartKey3-f54352ad-8dd4-4f3a-b212-0ff9e1cd8035-110731020454199456-2"
}</msg>
<status status="PASS" starttime="20230717 19:15:12.619" endtime="20230717 19:15:37.447"/>
</kw>
<msg timestamp="20230717 19:15:37.450" level="INFO">${result} = {
    "ETag": "/s3v/encrypted/ozone-test-2485593730/multipartKey3-f54352ad-8dd4-4f3a-b212-0ff9e1cd8035-110731020454199456-2"
}</msg>
<status status="PASS" starttime="20230717 19:15:12.616" endtime="20230717 19:15:37.450"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:15:37.467" level="INFO">Running command 'echo '{
    "ETag": "/s3v/encrypted/ozone-test-2485593730/multipartKey3-f54352ad-8dd4-4f3a-b212-0ff9e1cd8035-110731020454199456-2"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:15:37.608" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:15:37.609" level="INFO">${output} = /s3v/encrypted/ozone-test-2485593730/multipartKey3-f54352ad-8dd4-4f3a-b212-0ff9e1cd8035-110731020454199456-2</msg>
<status status="PASS" starttime="20230717 19:15:37.453" endtime="20230717 19:15:37.609"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:15:37.614" level="INFO">/s3v/encrypted/ozone-test-2485593730/multipartKey3-f54352ad-8dd4-4f3a-b212-0ff9e1cd8035-110731020454199456-2</msg>
<status status="PASS" starttime="20230717 19:15:37.610" endtime="20230717 19:15:37.614"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:15:37.619" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:15:37.616" endtime="20230717 19:15:37.619"/>
</kw>
<msg timestamp="20230717 19:15:37.619" level="INFO">${eTag2} = /s3v/encrypted/ozone-test-2485593730/multipartKey3-f54352ad-8dd4-4f3a-b212-0ff9e1cd8035-110731020454199456-2</msg>
<status status="PASS" starttime="20230717 19:15:37.450" endtime="20230717 19:15:37.619"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:15:37.620" endtime="20230717 19:15:37.622"/>
</kw>
<kw name="Execute" library="os">
<arg>echo "Part3" &gt; /tmp/part3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:15:37.638" level="INFO">Running command 'echo "Part3" &gt; /tmp/part3'.</msg>
<msg timestamp="20230717 19:15:37.647" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:15:37.647" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:15:37.627" endtime="20230717 19:15:37.647"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:15:37.654" level="INFO"/>
<status status="PASS" starttime="20230717 19:15:37.651" endtime="20230717 19:15:37.655"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:15:37.659" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:15:37.655" endtime="20230717 19:15:37.659"/>
</kw>
<status status="PASS" starttime="20230717 19:15:37.626" endtime="20230717 19:15:37.661"/>
</kw>
<msg timestamp="20230717 19:15:37.661" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:15:37.625" endtime="20230717 19:15:37.661"/>
</kw>
<status status="PASS" starttime="20230717 19:15:37.623" endtime="20230717 19:15:37.661"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --part-number 3 --body /tmp/part3 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:15:37.688" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket encrypted --key ozone-test-2485593730/multipartKey3 --part-number 3 --body /tmp/part3 --upload-id f54352ad-8dd4-4f3a-b212-0ff9e1cd8035-110731020454199456 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:15:59.805" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:15:59.805" level="INFO">${output} = {
    "ETag": "/s3v/encrypted/ozone-test-2485593730/multipartKey3-f54352ad-8dd4-4f3a-b212-0ff9e1cd8035-110731020454199456-3"
}</msg>
<status status="PASS" starttime="20230717 19:15:37.677" endtime="20230717 19:15:59.805"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:15:59.809" level="INFO">{
    "ETag": "/s3v/encrypted/ozone-test-2485593730/multipartKey3-f54352ad-8dd4-4f3a-b212-0ff9e1cd8035-110731020454199456-3"
}</msg>
<status status="PASS" starttime="20230717 19:15:59.807" endtime="20230717 19:15:59.810"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:15:59.812" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:15:59.811" endtime="20230717 19:15:59.812"/>
</kw>
<status status="PASS" starttime="20230717 19:15:37.671" endtime="20230717 19:15:59.813"/>
</kw>
<msg timestamp="20230717 19:15:59.813" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:15:37.671" endtime="20230717 19:15:59.813"/>
</kw>
<msg timestamp="20230717 19:15:59.814" level="INFO">${output} = {
    "ETag": "/s3v/encrypted/ozone-test-2485593730/multipartKey3-f54352ad-8dd4-4f3a-b212-0ff9e1cd8035-110731020454199456-3"
}</msg>
<status status="PASS" starttime="20230717 19:15:37.667" endtime="20230717 19:15:59.814"/>
</kw>
<msg timestamp="20230717 19:15:59.814" level="INFO">${result} = {
    "ETag": "/s3v/encrypted/ozone-test-2485593730/multipartKey3-f54352ad-8dd4-4f3a-b212-0ff9e1cd8035-110731020454199456-3"
}</msg>
<status status="PASS" starttime="20230717 19:15:37.664" endtime="20230717 19:15:59.814"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag3}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:15:59.823" level="INFO">Running command 'echo '{
    "ETag": "/s3v/encrypted/ozone-test-2485593730/multipartKey3-f54352ad-8dd4-4f3a-b212-0ff9e1cd8035-110731020454199456-3"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:15:59.905" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:15:59.905" level="INFO">${output} = /s3v/encrypted/ozone-test-2485593730/multipartKey3-f54352ad-8dd4-4f3a-b212-0ff9e1cd8035-110731020454199456-3</msg>
<status status="PASS" starttime="20230717 19:15:59.816" endtime="20230717 19:15:59.905"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:15:59.907" level="INFO">/s3v/encrypted/ozone-test-2485593730/multipartKey3-f54352ad-8dd4-4f3a-b212-0ff9e1cd8035-110731020454199456-3</msg>
<status status="PASS" starttime="20230717 19:15:59.906" endtime="20230717 19:15:59.908"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:15:59.909" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:15:59.908" endtime="20230717 19:15:59.909"/>
</kw>
<msg timestamp="20230717 19:15:59.910" level="INFO">${eTag3} = /s3v/encrypted/ozone-test-2485593730/multipartKey3-f54352ad-8dd4-4f3a-b212-0ff9e1cd8035-110731020454199456-3</msg>
<status status="PASS" starttime="20230717 19:15:59.815" endtime="20230717 19:15:59.910"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:15:59.910" endtime="20230717 19:15:59.911"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}]'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:15:59.919" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id f54352ad-8dd4-4f3a-b212-0ff9e1cd8035-110731020454199456 --bucket encrypted --key ozone-test-2485593730/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:16:01.950" level="INFO">${rc} = 255</msg>
<msg timestamp="20230717 19:16:01.952" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20230717 19:15:59.914" endtime="20230717 19:16:01.952"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:16:01.956" level="INFO">
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified entity tag might not have matched the part's entity tag.</msg>
<status status="PASS" starttime="20230717 19:16:01.953" endtime="20230717 19:16:01.956"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:16:01.961" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:16:01.957" endtime="20230717 19:16:01.961"/>
</kw>
<msg timestamp="20230717 19:16:01.962" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20230717 19:15:59.913" endtime="20230717 19:16:01.962"/>
</kw>
<msg timestamp="20230717 19:16:01.964" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20230717 19:15:59.911" endtime="20230717 19:16:01.964"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPart</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:16:01.964" endtime="20230717 19:16:01.966"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=etag2,PartNumber=2}]'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:16:01.978" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id f54352ad-8dd4-4f3a-b212-0ff9e1cd8035-110731020454199456 --bucket encrypted --key ozone-test-2485593730/multipartKey3 --multipart-upload 'Parts=[{ETag=/s3v/encrypted/ozone-test-2485593730/multipartKey3-f54352ad-8dd4-4f3a-b212-0ff9e1cd8035-110731020454199456-1,PartNumber=1},{ETag=etag2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:16:03.645" level="INFO">${rc} = 255</msg>
<msg timestamp="20230717 19:16:03.645" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20230717 19:16:01.972" endtime="20230717 19:16:03.645"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:16:03.647" level="INFO">
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified entity tag might not have matched the part's entity tag.</msg>
<status status="PASS" starttime="20230717 19:16:03.646" endtime="20230717 19:16:03.647"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:16:03.648" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:16:03.647" endtime="20230717 19:16:03.648"/>
</kw>
<msg timestamp="20230717 19:16:03.648" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20230717 19:16:01.971" endtime="20230717 19:16:03.649"/>
</kw>
<msg timestamp="20230717 19:16:03.649" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20230717 19:16:01.967" endtime="20230717 19:16:03.649"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPart</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:16:03.649" endtime="20230717 19:16:03.650"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=4},{ETag=etag2,PartNumber=2}]'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:16:03.663" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id f54352ad-8dd4-4f3a-b212-0ff9e1cd8035-110731020454199456 --bucket encrypted --key ozone-test-2485593730/multipartKey3 --multipart-upload 'Parts=[{ETag=/s3v/encrypted/ozone-test-2485593730/multipartKey3-f54352ad-8dd4-4f3a-b212-0ff9e1cd8035-110731020454199456-1,PartNumber=4},{ETag=etag2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:16:05.165" level="INFO">${rc} = 255</msg>
<msg timestamp="20230717 19:16:05.165" level="INFO">${output} = 
An error occurred (InvalidPartOrder) when calling the CompleteMultipartUpload operation: The list of parts was not in ascending order. The parts list must be specified in order by part number.</msg>
<status status="PASS" starttime="20230717 19:16:03.652" endtime="20230717 19:16:05.165"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:16:05.170" level="INFO">
An error occurred (InvalidPartOrder) when calling the CompleteMultipartUpload operation: The list of parts was not in ascending order. The parts list must be specified in order by part number.</msg>
<status status="PASS" starttime="20230717 19:16:05.166" endtime="20230717 19:16:05.170"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:16:05.171" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:16:05.170" endtime="20230717 19:16:05.172"/>
</kw>
<msg timestamp="20230717 19:16:05.172" level="INFO">${output} = 
An error occurred (InvalidPartOrder) when calling the CompleteMultipartUpload operation: The list of parts was not in ascending order. The parts list must be specified in order by part number.</msg>
<status status="PASS" starttime="20230717 19:16:03.652" endtime="20230717 19:16:05.172"/>
</kw>
<msg timestamp="20230717 19:16:05.173" level="INFO">${result} = 
An error occurred (InvalidPartOrder) when calling the CompleteMultipartUpload operation: The list of parts was not in ascending order. The parts list must be specified in order by part number.</msg>
<status status="PASS" starttime="20230717 19:16:03.650" endtime="20230717 19:16:05.173"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPartOrder</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:16:05.173" endtime="20230717 19:16:05.175"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=${eTag3},PartNumber=3}]'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:16:05.189" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id f54352ad-8dd4-4f3a-b212-0ff9e1cd8035-110731020454199456 --bucket encrypted --key ozone-test-2485593730/multipartKey3 --multipart-upload 'Parts=[{ETag=/s3v/encrypted/ozone-test-2485593730/multipartKey3-f54352ad-8dd4-4f3a-b212-0ff9e1cd8035-110731020454199456-1,PartNumber=1},{ETag=/s3v/encrypted/ozone-test-2485593730/multipartKey3-f54352ad-8dd4-4f3a-b212-0ff9e1cd8035-110731020454199456-3,PartNumber=3}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:16:06.730" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:16:06.731" level="INFO">${output} = {
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-2485593730/multipartKey3",
    "ETag": "a58e5b10503e03f21074aed623786ce089db234639c4b402ee989dcefc297788"
}</msg>
<status status="PASS" starttime="20230717 19:16:05.182" endtime="20230717 19:16:06.731"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:16:06.737" level="INFO">{
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-2485593730/multipartKey3",
    "ETag": "a58e5b10503e03f21074aed623786ce089db234639c4b402ee989dcefc297788"
}</msg>
<status status="PASS" starttime="20230717 19:16:06.733" endtime="20230717 19:16:06.737"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:16:06.741" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:16:06.740" endtime="20230717 19:16:06.742"/>
</kw>
<status status="PASS" starttime="20230717 19:16:05.180" endtime="20230717 19:16:06.742"/>
</kw>
<msg timestamp="20230717 19:16:06.742" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:16:05.180" endtime="20230717 19:16:06.743"/>
</kw>
<msg timestamp="20230717 19:16:06.743" level="INFO">${output} = {
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-2485593730/multipartKey3",
    "ETag": "a58e5b10503e03f21074aed623786ce089db234639c4b402ee989dcefc297788"
}</msg>
<status status="PASS" starttime="20230717 19:16:05.178" endtime="20230717 19:16:06.746"/>
</kw>
<msg timestamp="20230717 19:16:06.747" level="INFO">${result} = {
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-2485593730/multipartKey3",
    "ETag": "a58e5b10503e03f21074aed623786ce089db234639c4b402ee989dcefc297788"
}</msg>
<status status="PASS" starttime="20230717 19:16:05.175" endtime="20230717 19:16:06.747"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:16:06.747" endtime="20230717 19:16:06.749"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:16:06.749" endtime="20230717 19:16:06.751"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:16:06.751" endtime="20230717 19:16:06.753"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 /tmp/${PREFIX}-multipartKey3.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:16:06.774" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-2485593730/multipartKey3 /tmp/ozone-test-2485593730-multipartKey3.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:16:09.720" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:16:09.720" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:16:06 GMT",
    "ContentLength": 5242886,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Ex...</msg>
<status status="PASS" starttime="20230717 19:16:06.764" endtime="20230717 19:16:09.720"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:16:09.723" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:16:06 GMT",
    "ContentLength": 5242886,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Mon, 17 Jul 2023 19:16:08 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230717 19:16:09.722" endtime="20230717 19:16:09.723"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:16:09.725" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:16:09.725" endtime="20230717 19:16:09.726"/>
</kw>
<status status="PASS" starttime="20230717 19:16:06.762" endtime="20230717 19:16:09.726"/>
</kw>
<msg timestamp="20230717 19:16:09.726" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:16:06.762" endtime="20230717 19:16:09.726"/>
</kw>
<msg timestamp="20230717 19:16:09.727" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:16:06 GMT",
    "ContentLength": 5242886,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Ex...</msg>
<status status="PASS" starttime="20230717 19:16:06.758" endtime="20230717 19:16:09.727"/>
</kw>
<msg timestamp="20230717 19:16:09.727" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:16:06 GMT",
    "ContentLength": 5242886,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Ex...</msg>
<status status="PASS" starttime="20230717 19:16:06.753" endtime="20230717 19:16:09.727"/>
</kw>
<kw name="Execute" library="os">
<arg>cat /tmp/part1 /tmp/part3 &gt; /tmp/${PREFIX}-multipartKey3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:16:09.736" level="INFO">Running command 'cat /tmp/part1 /tmp/part3 &gt; /tmp/ozone-test-2485593730-multipartKey3'.</msg>
<msg timestamp="20230717 19:16:09.751" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:16:09.751" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:16:09.731" endtime="20230717 19:16:09.751"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:16:09.753" level="INFO"/>
<status status="PASS" starttime="20230717 19:16:09.752" endtime="20230717 19:16:09.754"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:16:09.755" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:16:09.754" endtime="20230717 19:16:09.755"/>
</kw>
<status status="PASS" starttime="20230717 19:16:09.730" endtime="20230717 19:16:09.756"/>
</kw>
<msg timestamp="20230717 19:16:09.756" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:16:09.729" endtime="20230717 19:16:09.756"/>
</kw>
<status status="PASS" starttime="20230717 19:16:09.728" endtime="20230717 19:16:09.756"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/${PREFIX}-multipartKey3</arg>
<arg>/tmp/${PREFIX}-multipartKey3.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:16:09.766" level="INFO">Running command 'md5sum /tmp/ozone-test-2485593730-multipartKey3 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:16:09.793" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:16:09.793" level="INFO">${output} = 963a7ea8d1fda135e4ffcbd2de81fa63</msg>
<status status="PASS" starttime="20230717 19:16:09.761" endtime="20230717 19:16:09.793"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:16:09.796" level="INFO">963a7ea8d1fda135e4ffcbd2de81fa63</msg>
<status status="PASS" starttime="20230717 19:16:09.794" endtime="20230717 19:16:09.796"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:16:09.797" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:16:09.796" endtime="20230717 19:16:09.798"/>
</kw>
<status status="PASS" starttime="20230717 19:16:09.760" endtime="20230717 19:16:09.798"/>
</kw>
<msg timestamp="20230717 19:16:09.798" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:16:09.759" endtime="20230717 19:16:09.798"/>
</kw>
<msg timestamp="20230717 19:16:09.799" level="INFO">${checksumbefore} = 963a7ea8d1fda135e4ffcbd2de81fa63</msg>
<status status="PASS" starttime="20230717 19:16:09.758" endtime="20230717 19:16:09.799"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:16:09.807" level="INFO">Running command 'md5sum /tmp/ozone-test-2485593730-multipartKey3.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:16:09.834" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:16:09.834" level="INFO">${output} = 963a7ea8d1fda135e4ffcbd2de81fa63</msg>
<status status="PASS" starttime="20230717 19:16:09.802" endtime="20230717 19:16:09.835"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:16:09.838" level="INFO">963a7ea8d1fda135e4ffcbd2de81fa63</msg>
<status status="PASS" starttime="20230717 19:16:09.836" endtime="20230717 19:16:09.838"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:16:09.839" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:16:09.838" endtime="20230717 19:16:09.839"/>
</kw>
<status status="PASS" starttime="20230717 19:16:09.801" endtime="20230717 19:16:09.840"/>
</kw>
<msg timestamp="20230717 19:16:09.840" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:16:09.801" endtime="20230717 19:16:09.840"/>
</kw>
<msg timestamp="20230717 19:16:09.841" level="INFO">${checksumafter} = 963a7ea8d1fda135e4ffcbd2de81fa63</msg>
<status status="PASS" starttime="20230717 19:16:09.799" endtime="20230717 19:16:09.841"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230717 19:16:09.841" endtime="20230717 19:16:09.842"/>
</kw>
<status status="PASS" starttime="20230717 19:16:09.757" endtime="20230717 19:16:09.843"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:14:42.448" endtime="20230717 19:16:09.843"/>
</test>
<test id="s1-s8-s8-t6" name="Test abort Multipart upload" line="186">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230717 19:16:09.851" level="INFO">${randStr} = 1944761847</msg>
<status status="PASS" starttime="20230717 19:16:09.849" endtime="20230717 19:16:09.851"/>
</kw>
<msg timestamp="20230717 19:16:09.852" level="INFO">${random} = ozone-test-1944761847</msg>
<status status="PASS" starttime="20230717 19:16:09.847" endtime="20230717 19:16:09.852"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230717 19:16:09.854" level="INFO">${PREFIX} = ozone-test-1944761847</msg>
<status status="PASS" starttime="20230717 19:16:09.853" endtime="20230717 19:16:09.854"/>
</kw>
<status status="PASS" starttime="20230717 19:16:09.847" endtime="20230717 19:16:09.854"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey4 --storage-class REDUCED_REDUNDANCY</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:16:09.863" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-1944761847/multipartKey4 --storage-class REDUCED_REDUNDANCY 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:16:11.343" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:16:11.344" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-1944761847/multipartKey4",
    "UploadId": "b54555be-9013-4174-a8a2-33612a844018-110731026180276388"
}</msg>
<status status="PASS" starttime="20230717 19:16:09.858" endtime="20230717 19:16:11.344"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:16:11.346" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-1944761847/multipartKey4",
    "UploadId": "b54555be-9013-4174-a8a2-33612a844018-110731026180276388"
}</msg>
<status status="PASS" starttime="20230717 19:16:11.345" endtime="20230717 19:16:11.346"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:16:11.348" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:16:11.347" endtime="20230717 19:16:11.348"/>
</kw>
<status status="PASS" starttime="20230717 19:16:09.857" endtime="20230717 19:16:11.348"/>
</kw>
<msg timestamp="20230717 19:16:11.348" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:16:09.857" endtime="20230717 19:16:11.349"/>
</kw>
<msg timestamp="20230717 19:16:11.349" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-1944761847/multipartKey4",
    "UploadId": "b54555be-9013-4174-a8a2-33612a844018-110731026180276388"
}</msg>
<status status="PASS" starttime="20230717 19:16:09.856" endtime="20230717 19:16:11.349"/>
</kw>
<msg timestamp="20230717 19:16:11.350" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-1944761847/multipartKey4",
    "UploadId": "b54555be-9013-4174-a8a2-33612a844018-110731026180276388"
}</msg>
<status status="PASS" starttime="20230717 19:16:09.855" endtime="20230717 19:16:11.350"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:16:11.357" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-1944761847/multipartKey4",
    "UploadId": "b54555be-9013-4174-a8a2-33612a844018-110731026180276388"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:16:11.428" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:16:11.428" level="INFO">${output} = b54555be-9013-4174-a8a2-33612a844018-110731026180276388</msg>
<status status="PASS" starttime="20230717 19:16:11.352" endtime="20230717 19:16:11.428"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:16:11.432" level="INFO">b54555be-9013-4174-a8a2-33612a844018-110731026180276388</msg>
<status status="PASS" starttime="20230717 19:16:11.430" endtime="20230717 19:16:11.432"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:16:11.433" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:16:11.432" endtime="20230717 19:16:11.433"/>
</kw>
<msg timestamp="20230717 19:16:11.434" level="INFO">${uploadID} = b54555be-9013-4174-a8a2-33612a844018-110731026180276388</msg>
<status status="PASS" starttime="20230717 19:16:11.350" endtime="20230717 19:16:11.434"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:16:11.434" endtime="20230717 19:16:11.435"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:16:11.436" endtime="20230717 19:16:11.436"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:16:11.437" endtime="20230717 19:16:11.438"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey4 --upload-id ${uploadID}</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:16:11.448" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket encrypted --key ozone-test-1944761847/multipartKey4 --upload-id b54555be-9013-4174-a8a2-33612a844018-110731026180276388 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:16:12.737" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:16:12.737" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:16:11.441" endtime="20230717 19:16:12.737"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:16:12.739" level="INFO"/>
<status status="PASS" starttime="20230717 19:16:12.738" endtime="20230717 19:16:12.739"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:16:12.740" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:16:12.739" endtime="20230717 19:16:12.740"/>
</kw>
<msg timestamp="20230717 19:16:12.741" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:16:11.440" endtime="20230717 19:16:12.741"/>
</kw>
<msg timestamp="20230717 19:16:12.741" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230717 19:16:11.438" endtime="20230717 19:16:12.741"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:16:09.845" endtime="20230717 19:16:12.742"/>
</test>
<test id="s1-s8-s8-t7" name="Test abort Multipart upload with invalid uploadId" line="195">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230717 19:16:12.748" level="INFO">${randStr} = 6205767554</msg>
<status status="PASS" starttime="20230717 19:16:12.747" endtime="20230717 19:16:12.748"/>
</kw>
<msg timestamp="20230717 19:16:12.748" level="INFO">${random} = ozone-test-6205767554</msg>
<status status="PASS" starttime="20230717 19:16:12.746" endtime="20230717 19:16:12.748"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230717 19:16:12.749" level="INFO">${PREFIX} = ozone-test-6205767554</msg>
<status status="PASS" starttime="20230717 19:16:12.749" endtime="20230717 19:16:12.749"/>
</kw>
<status status="PASS" starttime="20230717 19:16:12.745" endtime="20230717 19:16:12.749"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id "random"</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:16:12.762" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket encrypted --key ozone-test-6205767554/multipartKey5 --upload-id "random" 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:16:14.646" level="INFO">${rc} = 255</msg>
<msg timestamp="20230717 19:16:14.646" level="INFO">${output} = 
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have bee...</msg>
<status status="PASS" starttime="20230717 19:16:12.755" endtime="20230717 19:16:14.649"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:16:14.654" level="INFO">
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted or completed.</msg>
<status status="PASS" starttime="20230717 19:16:14.651" endtime="20230717 19:16:14.655"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:16:14.659" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:16:14.656" endtime="20230717 19:16:14.659"/>
</kw>
<msg timestamp="20230717 19:16:14.660" level="INFO">${output} = 
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have bee...</msg>
<status status="PASS" starttime="20230717 19:16:12.752" endtime="20230717 19:16:14.660"/>
</kw>
<msg timestamp="20230717 19:16:14.660" level="INFO">${result} = 
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have bee...</msg>
<status status="PASS" starttime="20230717 19:16:12.751" endtime="20230717 19:16:14.660"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:16:12.743" endtime="20230717 19:16:14.660"/>
</test>
<test id="s1-s8-s8-t8" name="Upload part with Incorrect uploadID" line="198">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230717 19:16:14.677" level="INFO">${randStr} = 7338153387</msg>
<status status="PASS" starttime="20230717 19:16:14.674" endtime="20230717 19:16:14.678"/>
</kw>
<msg timestamp="20230717 19:16:14.679" level="INFO">${random} = ozone-test-7338153387</msg>
<status status="PASS" starttime="20230717 19:16:14.672" endtime="20230717 19:16:14.679"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230717 19:16:14.683" level="INFO">${PREFIX} = ozone-test-7338153387</msg>
<status status="PASS" starttime="20230717 19:16:14.680" endtime="20230717 19:16:14.683"/>
</kw>
<status status="PASS" starttime="20230717 19:16:14.669" endtime="20230717 19:16:14.683"/>
</kw>
<kw name="Skip" library="BuiltIn">
<arg>TODO: HDDS-7811</arg>
<doc>Skips the rest of the current test.</doc>
<msg timestamp="20230717 19:16:14.685" level="SKIP">TODO: HDDS-7811</msg>
<status status="SKIP" starttime="20230717 19:16:14.683" endtime="20230717 19:16:14.685"/>
</kw>
<kw name="Execute" library="os">
<arg>echo "Multipart upload" &gt; /tmp/testfile</arg>
<status status="NOT RUN" starttime="20230717 19:16:14.687" endtime="20230717 19:16:14.687"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey --part-number 1 --body /tmp/testfile --upload-id "random"</arg>
<arg>255</arg>
<status status="NOT RUN" starttime="20230717 19:16:14.687" endtime="20230717 19:16:14.687"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchUpload</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230717 19:16:14.687" endtime="20230717 19:16:14.687"/>
</kw>
<timeout value="5 minutes"/>
<status status="SKIP" starttime="20230717 19:16:14.666" endtime="20230717 19:16:14.689">TODO: HDDS-7811</status>
</test>
<test id="s1-s8-s8-t9" name="Test list parts" line="204">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230717 19:16:14.700" level="INFO">${randStr} = 2028311903</msg>
<status status="PASS" starttime="20230717 19:16:14.699" endtime="20230717 19:16:14.700"/>
</kw>
<msg timestamp="20230717 19:16:14.701" level="INFO">${random} = ozone-test-2028311903</msg>
<status status="PASS" starttime="20230717 19:16:14.697" endtime="20230717 19:16:14.701"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230717 19:16:14.705" level="INFO">${PREFIX} = ozone-test-2028311903</msg>
<status status="PASS" starttime="20230717 19:16:14.701" endtime="20230717 19:16:14.705"/>
</kw>
<status status="PASS" starttime="20230717 19:16:14.695" endtime="20230717 19:16:14.705"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey5</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:16:14.726" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-2028311903/multipartKey5 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:16:16.552" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:16:16.552" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2028311903/multipartKey5",
    "UploadId": "7481a1bc-1e72-4559-8eda-b6ac4a588c66-110731026523095205"
}</msg>
<status status="PASS" starttime="20230717 19:16:14.714" endtime="20230717 19:16:16.553"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:16:16.558" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-2028311903/multipartKey5",
    "UploadId": "7481a1bc-1e72-4559-8eda-b6ac4a588c66-110731026523095205"
}</msg>
<status status="PASS" starttime="20230717 19:16:16.554" endtime="20230717 19:16:16.558"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:16:16.564" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:16:16.559" endtime="20230717 19:16:16.564"/>
</kw>
<status status="PASS" starttime="20230717 19:16:14.711" endtime="20230717 19:16:16.569"/>
</kw>
<msg timestamp="20230717 19:16:16.572" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:16:14.710" endtime="20230717 19:16:16.573"/>
</kw>
<msg timestamp="20230717 19:16:16.573" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2028311903/multipartKey5",
    "UploadId": "7481a1bc-1e72-4559-8eda-b6ac4a588c66-110731026523095205"
}</msg>
<status status="PASS" starttime="20230717 19:16:14.707" endtime="20230717 19:16:16.573"/>
</kw>
<msg timestamp="20230717 19:16:16.575" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-2028311903/multipartKey5",
    "UploadId": "7481a1bc-1e72-4559-8eda-b6ac4a588c66-110731026523095205"
}</msg>
<status status="PASS" starttime="20230717 19:16:14.706" endtime="20230717 19:16:16.575"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:16:16.589" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-2028311903/multipartKey5",
    "UploadId": "7481a1bc-1e72-4559-8eda-b6ac4a588c66-110731026523095205"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:16:16.650" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:16:16.650" level="INFO">${output} = 7481a1bc-1e72-4559-8eda-b6ac4a588c66-110731026523095205</msg>
<status status="PASS" starttime="20230717 19:16:16.581" endtime="20230717 19:16:16.650"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:16:16.652" level="INFO">7481a1bc-1e72-4559-8eda-b6ac4a588c66-110731026523095205</msg>
<status status="PASS" starttime="20230717 19:16:16.651" endtime="20230717 19:16:16.653"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:16:16.654" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:16:16.653" endtime="20230717 19:16:16.654"/>
</kw>
<msg timestamp="20230717 19:16:16.655" level="INFO">${uploadID} = 7481a1bc-1e72-4559-8eda-b6ac4a588c66-110731026523095205</msg>
<status status="PASS" starttime="20230717 19:16:16.577" endtime="20230717 19:16:16.655"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:16:16.655" endtime="20230717 19:16:16.655"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:16:16.656" endtime="20230717 19:16:16.656"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:16:16.657" endtime="20230717 19:16:16.657"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>5</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>5</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:16:16.688" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:16:16.791" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:16:16.791" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:16:16.679" endtime="20230717 19:16:16.792"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:16:16.794" level="INFO"/>
<status status="PASS" starttime="20230717 19:16:16.793" endtime="20230717 19:16:16.794"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:16:16.795" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:16:16.794" endtime="20230717 19:16:16.795"/>
</kw>
<status status="PASS" starttime="20230717 19:16:16.677" endtime="20230717 19:16:16.795"/>
</kw>
<msg timestamp="20230717 19:16:16.796" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:16:16.673" endtime="20230717 19:16:16.796"/>
</kw>
<status status="PASS" starttime="20230717 19:16:16.672" endtime="20230717 19:16:16.796"/>
</kw>
<status status="PASS" starttime="20230717 19:16:16.659" endtime="20230717 19:16:16.796"/>
</kw>
<status status="PASS" starttime="20230717 19:16:16.659" endtime="20230717 19:16:16.796"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --part-number 1 --body /tmp/part1 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:16:16.804" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket encrypted --key ozone-test-2028311903/multipartKey5 --part-number 1 --body /tmp/part1 --upload-id 7481a1bc-1e72-4559-8eda-b6ac4a588c66-110731026523095205 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:16:40.488" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:16:40.488" level="INFO">${output} = {
    "ETag": "/s3v/encrypted/ozone-test-2028311903/multipartKey5-7481a1bc-1e72-4559-8eda-b6ac4a588c66-110731026523095205-1"
}</msg>
<status status="PASS" starttime="20230717 19:16:16.800" endtime="20230717 19:16:40.488"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:16:40.490" level="INFO">{
    "ETag": "/s3v/encrypted/ozone-test-2028311903/multipartKey5-7481a1bc-1e72-4559-8eda-b6ac4a588c66-110731026523095205-1"
}</msg>
<status status="PASS" starttime="20230717 19:16:40.488" endtime="20230717 19:16:40.490"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:16:40.493" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:16:40.491" endtime="20230717 19:16:40.498"/>
</kw>
<status status="PASS" starttime="20230717 19:16:16.799" endtime="20230717 19:16:40.499"/>
</kw>
<msg timestamp="20230717 19:16:40.501" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:16:16.798" endtime="20230717 19:16:40.502"/>
</kw>
<msg timestamp="20230717 19:16:40.502" level="INFO">${output} = {
    "ETag": "/s3v/encrypted/ozone-test-2028311903/multipartKey5-7481a1bc-1e72-4559-8eda-b6ac4a588c66-110731026523095205-1"
}</msg>
<status status="PASS" starttime="20230717 19:16:16.797" endtime="20230717 19:16:40.502"/>
</kw>
<msg timestamp="20230717 19:16:40.502" level="INFO">${result} = {
    "ETag": "/s3v/encrypted/ozone-test-2028311903/multipartKey5-7481a1bc-1e72-4559-8eda-b6ac4a588c66-110731026523095205-1"
}</msg>
<status status="PASS" starttime="20230717 19:16:16.796" endtime="20230717 19:16:40.503"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:16:40.512" level="INFO">Running command 'echo '{
    "ETag": "/s3v/encrypted/ozone-test-2028311903/multipartKey5-7481a1bc-1e72-4559-8eda-b6ac4a588c66-110731026523095205-1"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:16:40.577" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:16:40.577" level="INFO">${output} = /s3v/encrypted/ozone-test-2028311903/multipartKey5-7481a1bc-1e72-4559-8eda-b6ac4a588c66-110731026523095205-1</msg>
<status status="PASS" starttime="20230717 19:16:40.506" endtime="20230717 19:16:40.577"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:16:40.580" level="INFO">/s3v/encrypted/ozone-test-2028311903/multipartKey5-7481a1bc-1e72-4559-8eda-b6ac4a588c66-110731026523095205-1</msg>
<status status="PASS" starttime="20230717 19:16:40.578" endtime="20230717 19:16:40.580"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:16:40.581" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:16:40.581" endtime="20230717 19:16:40.582"/>
</kw>
<msg timestamp="20230717 19:16:40.582" level="INFO">${eTag1} = /s3v/encrypted/ozone-test-2028311903/multipartKey5-7481a1bc-1e72-4559-8eda-b6ac4a588c66-110731026523095205-1</msg>
<status status="PASS" starttime="20230717 19:16:40.503" endtime="20230717 19:16:40.582"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:16:40.583" endtime="20230717 19:16:40.583"/>
</kw>
<kw name="Execute" library="os">
<arg>echo "Part2" &gt; /tmp/part2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:16:40.591" level="INFO">Running command 'echo "Part2" &gt; /tmp/part2'.</msg>
<msg timestamp="20230717 19:16:40.595" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:16:40.595" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:16:40.586" endtime="20230717 19:16:40.596"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:16:40.597" level="INFO"/>
<status status="PASS" starttime="20230717 19:16:40.596" endtime="20230717 19:16:40.598"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:16:40.600" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:16:40.598" endtime="20230717 19:16:40.600"/>
</kw>
<status status="PASS" starttime="20230717 19:16:40.585" endtime="20230717 19:16:40.601"/>
</kw>
<msg timestamp="20230717 19:16:40.601" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:16:40.585" endtime="20230717 19:16:40.601"/>
</kw>
<status status="PASS" starttime="20230717 19:16:40.584" endtime="20230717 19:16:40.601"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --part-number 2 --body /tmp/part2 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:16:40.611" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket encrypted --key ozone-test-2028311903/multipartKey5 --part-number 2 --body /tmp/part2 --upload-id 7481a1bc-1e72-4559-8eda-b6ac4a588c66-110731026523095205 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:17:02.583" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:17:02.584" level="INFO">${output} = {
    "ETag": "/s3v/encrypted/ozone-test-2028311903/multipartKey5-7481a1bc-1e72-4559-8eda-b6ac4a588c66-110731026523095205-2"
}</msg>
<status status="PASS" starttime="20230717 19:16:40.606" endtime="20230717 19:17:02.584"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:17:02.587" level="INFO">{
    "ETag": "/s3v/encrypted/ozone-test-2028311903/multipartKey5-7481a1bc-1e72-4559-8eda-b6ac4a588c66-110731026523095205-2"
}</msg>
<status status="PASS" starttime="20230717 19:17:02.585" endtime="20230717 19:17:02.587"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:17:02.589" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:17:02.588" endtime="20230717 19:17:02.589"/>
</kw>
<status status="PASS" starttime="20230717 19:16:40.605" endtime="20230717 19:17:02.589"/>
</kw>
<msg timestamp="20230717 19:17:02.590" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:16:40.604" endtime="20230717 19:17:02.590"/>
</kw>
<msg timestamp="20230717 19:17:02.590" level="INFO">${output} = {
    "ETag": "/s3v/encrypted/ozone-test-2028311903/multipartKey5-7481a1bc-1e72-4559-8eda-b6ac4a588c66-110731026523095205-2"
}</msg>
<status status="PASS" starttime="20230717 19:16:40.603" endtime="20230717 19:17:02.590"/>
</kw>
<msg timestamp="20230717 19:17:02.591" level="INFO">${result} = {
    "ETag": "/s3v/encrypted/ozone-test-2028311903/multipartKey5-7481a1bc-1e72-4559-8eda-b6ac4a588c66-110731026523095205-2"
}</msg>
<status status="PASS" starttime="20230717 19:16:40.602" endtime="20230717 19:17:02.591"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:17:02.598" level="INFO">Running command 'echo '{
    "ETag": "/s3v/encrypted/ozone-test-2028311903/multipartKey5-7481a1bc-1e72-4559-8eda-b6ac4a588c66-110731026523095205-2"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:17:02.701" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:17:02.701" level="INFO">${output} = /s3v/encrypted/ozone-test-2028311903/multipartKey5-7481a1bc-1e72-4559-8eda-b6ac4a588c66-110731026523095205-2</msg>
<status status="PASS" starttime="20230717 19:17:02.593" endtime="20230717 19:17:02.701"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:17:02.705" level="INFO">/s3v/encrypted/ozone-test-2028311903/multipartKey5-7481a1bc-1e72-4559-8eda-b6ac4a588c66-110731026523095205-2</msg>
<status status="PASS" starttime="20230717 19:17:02.702" endtime="20230717 19:17:02.707"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:17:02.713" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:17:02.707" endtime="20230717 19:17:02.714"/>
</kw>
<msg timestamp="20230717 19:17:02.715" level="INFO">${eTag2} = /s3v/encrypted/ozone-test-2028311903/multipartKey5-7481a1bc-1e72-4559-8eda-b6ac4a588c66-110731026523095205-2</msg>
<status status="PASS" starttime="20230717 19:17:02.591" endtime="20230717 19:17:02.715"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:17:02.717" endtime="20230717 19:17:02.717"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-parts --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:17:02.733" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-parts --bucket encrypted --key ozone-test-2028311903/multipartKey5 --upload-id 7481a1bc-1e72-4559-8eda-b6ac4a588c66-110731026523095205 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:17:04.285" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:17:04.285" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2023-07-17T19:16:40.288Z",
            "ETag": "/s3v/encrypted/ozone-test-2028311903/multipartKey5-7481a1bc-1e72-45...</msg>
<status status="PASS" starttime="20230717 19:17:02.726" endtime="20230717 19:17:04.285"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:17:04.288" level="INFO">{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2023-07-17T19:16:40.288Z",
            "ETag": "/s3v/encrypted/ozone-test-2028311903/multipartKey5-7481a1bc-1e72-4559-8eda-b6ac4a588c66-110731026523095205-1",
            "Size": 5242880
        },
        {
            "PartNumber": 2,
            "LastModified": "2023-07-17T19:17:02.357Z",
            "ETag": "/s3v/encrypted/ozone-test-2028311903/multipartKey5-7481a1bc-1e72-4559-8eda-b6ac4a588c66-110731026523095205-2",
            "Size": 6
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD"
}</msg>
<status status="PASS" starttime="20230717 19:17:04.287" endtime="20230717 19:17:04.289"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:17:04.290" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:17:04.289" endtime="20230717 19:17:04.290"/>
</kw>
<status status="PASS" starttime="20230717 19:17:02.724" endtime="20230717 19:17:04.291"/>
</kw>
<msg timestamp="20230717 19:17:04.291" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:17:02.723" endtime="20230717 19:17:04.291"/>
</kw>
<msg timestamp="20230717 19:17:04.292" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2023-07-17T19:16:40.288Z",
            "ETag": "/s3v/encrypted/ozone-test-2028311903/multipartKey5-7481a1bc-1e72-45...</msg>
<status status="PASS" starttime="20230717 19:17:02.721" endtime="20230717 19:17:04.292"/>
</kw>
<msg timestamp="20230717 19:17:04.292" level="INFO">${result} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2023-07-17T19:16:40.288Z",
            "ETag": "/s3v/encrypted/ozone-test-2028311903/multipartKey5-7481a1bc-1e72-45...</msg>
<status status="PASS" starttime="20230717 19:17:02.718" endtime="20230717 19:17:04.292"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${part1}</var>
<arg>echo '${result}' | jq -r '.Parts[0].ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:17:04.299" level="INFO">Running command 'echo '{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2023-07-17T19:16:40.288Z",
            "ETag": "/s3v/encrypted/ozone-test-2028311903/multipartKey5-7481a1bc-1e72-4559-8eda-b6ac4a588c66-110731026523095205-1",
            "Size": 5242880
        },
        {
            "PartNumber": 2,
            "LastModified": "2023-07-17T19:17:02.357Z",
            "ETag": "/s3v/encrypted/ozone-test-2028311903/multipartKey5-7481a1bc-1e72-4559-8eda-b6ac4a588c66-110731026523095205-2",
            "Size": 6
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD"
}' | jq -r '.Parts[0].ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:17:04.371" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:17:04.371" level="INFO">${output} = /s3v/encrypted/ozone-test-2028311903/multipartKey5-7481a1bc-1e72-4559-8eda-b6ac4a588c66-110731026523095205-1</msg>
<status status="PASS" starttime="20230717 19:17:04.294" endtime="20230717 19:17:04.372"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:17:04.375" level="INFO">/s3v/encrypted/ozone-test-2028311903/multipartKey5-7481a1bc-1e72-4559-8eda-b6ac4a588c66-110731026523095205-1</msg>
<status status="PASS" starttime="20230717 19:17:04.373" endtime="20230717 19:17:04.375"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:17:04.376" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:17:04.375" endtime="20230717 19:17:04.376"/>
</kw>
<msg timestamp="20230717 19:17:04.377" level="INFO">${part1} = /s3v/encrypted/ozone-test-2028311903/multipartKey5-7481a1bc-1e72-4559-8eda-b6ac4a588c66-110731026523095205-1</msg>
<status status="PASS" starttime="20230717 19:17:04.293" endtime="20230717 19:17:04.377"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${part2}</var>
<arg>echo '${result}' | jq -r '.Parts[1].ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:17:04.385" level="INFO">Running command 'echo '{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2023-07-17T19:16:40.288Z",
            "ETag": "/s3v/encrypted/ozone-test-2028311903/multipartKey5-7481a1bc-1e72-4559-8eda-b6ac4a588c66-110731026523095205-1",
            "Size": 5242880
        },
        {
            "PartNumber": 2,
            "LastModified": "2023-07-17T19:17:02.357Z",
            "ETag": "/s3v/encrypted/ozone-test-2028311903/multipartKey5-7481a1bc-1e72-4559-8eda-b6ac4a588c66-110731026523095205-2",
            "Size": 6
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD"
}' | jq -r '.Parts[1].ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:17:04.460" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:17:04.460" level="INFO">${output} = /s3v/encrypted/ozone-test-2028311903/multipartKey5-7481a1bc-1e72-4559-8eda-b6ac4a588c66-110731026523095205-2</msg>
<status status="PASS" starttime="20230717 19:17:04.379" endtime="20230717 19:17:04.460"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:17:04.463" level="INFO">/s3v/encrypted/ozone-test-2028311903/multipartKey5-7481a1bc-1e72-4559-8eda-b6ac4a588c66-110731026523095205-2</msg>
<status status="PASS" starttime="20230717 19:17:04.461" endtime="20230717 19:17:04.463"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:17:04.465" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:17:04.464" endtime="20230717 19:17:04.465"/>
</kw>
<msg timestamp="20230717 19:17:04.466" level="INFO">${part2} = /s3v/encrypted/ozone-test-2028311903/multipartKey5-7481a1bc-1e72-4559-8eda-b6ac4a588c66-110731026523095205-2</msg>
<status status="PASS" starttime="20230717 19:17:04.377" endtime="20230717 19:17:04.466"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${part1}</arg>
<arg>${eTag1}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230717 19:17:04.466" endtime="20230717 19:17:04.467"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${part2}</arg>
<arg>${eTag2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:17:04.468" endtime="20230717 19:17:04.469"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:17:04.469" endtime="20230717 19:17:04.470"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-parts --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id ${uploadID} --max-items 1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:17:04.481" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-parts --bucket encrypted --key ozone-test-2028311903/multipartKey5 --upload-id 7481a1bc-1e72-4559-8eda-b6ac4a588c66-110731026523095205 --max-items 1 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:17:06.361" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:17:06.362" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2023-07-17T19:16:40.288Z",
            "ETag": "/s3v/encrypted/ozone-test-2028311903/multipartKey5-7481a1bc-1e72-45...</msg>
<status status="PASS" starttime="20230717 19:17:04.475" endtime="20230717 19:17:06.362"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:17:06.367" level="INFO">{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2023-07-17T19:16:40.288Z",
            "ETag": "/s3v/encrypted/ozone-test-2028311903/multipartKey5-7481a1bc-1e72-4559-8eda-b6ac4a588c66-110731026523095205-1",
            "Size": 5242880
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD",
    "NextToken": "eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0="
}</msg>
<status status="PASS" starttime="20230717 19:17:06.363" endtime="20230717 19:17:06.367"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:17:06.370" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:17:06.369" endtime="20230717 19:17:06.370"/>
</kw>
<status status="PASS" starttime="20230717 19:17:04.474" endtime="20230717 19:17:06.370"/>
</kw>
<msg timestamp="20230717 19:17:06.372" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:17:04.473" endtime="20230717 19:17:06.372"/>
</kw>
<msg timestamp="20230717 19:17:06.373" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2023-07-17T19:16:40.288Z",
            "ETag": "/s3v/encrypted/ozone-test-2028311903/multipartKey5-7481a1bc-1e72-45...</msg>
<status status="PASS" starttime="20230717 19:17:04.472" endtime="20230717 19:17:06.374"/>
</kw>
<msg timestamp="20230717 19:17:06.374" level="INFO">${result} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2023-07-17T19:16:40.288Z",
            "ETag": "/s3v/encrypted/ozone-test-2028311903/multipartKey5-7481a1bc-1e72-45...</msg>
<status status="PASS" starttime="20230717 19:17:04.470" endtime="20230717 19:17:06.374"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${part1}</var>
<arg>echo '${result}' | jq -r '.Parts[0].ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:17:06.386" level="INFO">Running command 'echo '{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2023-07-17T19:16:40.288Z",
            "ETag": "/s3v/encrypted/ozone-test-2028311903/multipartKey5-7481a1bc-1e72-4559-8eda-b6ac4a588c66-110731026523095205-1",
            "Size": 5242880
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD",
    "NextToken": "eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0="
}' | jq -r '.Parts[0].ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:17:06.457" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:17:06.459" level="INFO">${output} = /s3v/encrypted/ozone-test-2028311903/multipartKey5-7481a1bc-1e72-4559-8eda-b6ac4a588c66-110731026523095205-1</msg>
<status status="PASS" starttime="20230717 19:17:06.379" endtime="20230717 19:17:06.459"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:17:06.467" level="INFO">/s3v/encrypted/ozone-test-2028311903/multipartKey5-7481a1bc-1e72-4559-8eda-b6ac4a588c66-110731026523095205-1</msg>
<status status="PASS" starttime="20230717 19:17:06.464" endtime="20230717 19:17:06.467"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:17:06.470" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:17:06.468" endtime="20230717 19:17:06.470"/>
</kw>
<msg timestamp="20230717 19:17:06.471" level="INFO">${part1} = /s3v/encrypted/ozone-test-2028311903/multipartKey5-7481a1bc-1e72-4559-8eda-b6ac4a588c66-110731026523095205-1</msg>
<status status="PASS" starttime="20230717 19:17:06.376" endtime="20230717 19:17:06.471"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${token}</var>
<arg>echo '${result}' | jq -r '.NextToken'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:17:06.484" level="INFO">Running command 'echo '{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2023-07-17T19:16:40.288Z",
            "ETag": "/s3v/encrypted/ozone-test-2028311903/multipartKey5-7481a1bc-1e72-4559-8eda-b6ac4a588c66-110731026523095205-1",
            "Size": 5242880
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD",
    "NextToken": "eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0="
}' | jq -r '.NextToken' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:17:06.557" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:17:06.557" level="INFO">${output} = eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0=</msg>
<status status="PASS" starttime="20230717 19:17:06.475" endtime="20230717 19:17:06.557"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:17:06.560" level="INFO">eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0=</msg>
<status status="PASS" starttime="20230717 19:17:06.558" endtime="20230717 19:17:06.560"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:17:06.561" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:17:06.560" endtime="20230717 19:17:06.561"/>
</kw>
<msg timestamp="20230717 19:17:06.562" level="INFO">${token} = eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0=</msg>
<status status="PASS" starttime="20230717 19:17:06.471" endtime="20230717 19:17:06.562"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${part1}</arg>
<arg>${eTag1}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230717 19:17:06.563" endtime="20230717 19:17:06.564"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:17:06.564" endtime="20230717 19:17:06.565"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-parts --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id ${uploadID} --max-items 1 --starting-token ${token}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:17:06.574" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-parts --bucket encrypted --key ozone-test-2028311903/multipartKey5 --upload-id 7481a1bc-1e72-4559-8eda-b6ac4a588c66-110731026523095205 --max-items 1 --starting-token eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0= 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:17:08.251" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:17:08.252" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 2,
            "LastModified": "2023-07-17T19:17:02.357Z",
            "ETag": "/s3v/encrypted/ozone-test-2028311903/multipartKey5-7481a1bc-1e72-45...</msg>
<status status="PASS" starttime="20230717 19:17:06.569" endtime="20230717 19:17:08.252"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:17:08.258" level="INFO">{
    "Parts": [
        {
            "PartNumber": 2,
            "LastModified": "2023-07-17T19:17:02.357Z",
            "ETag": "/s3v/encrypted/ozone-test-2028311903/multipartKey5-7481a1bc-1e72-4559-8eda-b6ac4a588c66-110731026523095205-2",
            "Size": 6
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD"
}</msg>
<status status="PASS" starttime="20230717 19:17:08.254" endtime="20230717 19:17:08.258"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:17:08.261" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:17:08.258" endtime="20230717 19:17:08.262"/>
</kw>
<status status="PASS" starttime="20230717 19:17:06.568" endtime="20230717 19:17:08.262"/>
</kw>
<msg timestamp="20230717 19:17:08.262" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:17:06.568" endtime="20230717 19:17:08.263"/>
</kw>
<msg timestamp="20230717 19:17:08.263" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 2,
            "LastModified": "2023-07-17T19:17:02.357Z",
            "ETag": "/s3v/encrypted/ozone-test-2028311903/multipartKey5-7481a1bc-1e72-45...</msg>
<status status="PASS" starttime="20230717 19:17:06.567" endtime="20230717 19:17:08.263"/>
</kw>
<msg timestamp="20230717 19:17:08.263" level="INFO">${result} = {
    "Parts": [
        {
            "PartNumber": 2,
            "LastModified": "2023-07-17T19:17:02.357Z",
            "ETag": "/s3v/encrypted/ozone-test-2028311903/multipartKey5-7481a1bc-1e72-45...</msg>
<status status="PASS" starttime="20230717 19:17:06.565" endtime="20230717 19:17:08.263"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${part2}</var>
<arg>echo '${result}' | jq -r '.Parts[0].ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:17:08.290" level="INFO">Running command 'echo '{
    "Parts": [
        {
            "PartNumber": 2,
            "LastModified": "2023-07-17T19:17:02.357Z",
            "ETag": "/s3v/encrypted/ozone-test-2028311903/multipartKey5-7481a1bc-1e72-4559-8eda-b6ac4a588c66-110731026523095205-2",
            "Size": 6
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD"
}' | jq -r '.Parts[0].ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:17:08.493" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:17:08.493" level="INFO">${output} = /s3v/encrypted/ozone-test-2028311903/multipartKey5-7481a1bc-1e72-4559-8eda-b6ac4a588c66-110731026523095205-2</msg>
<status status="PASS" starttime="20230717 19:17:08.268" endtime="20230717 19:17:08.493"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:17:08.501" level="INFO">/s3v/encrypted/ozone-test-2028311903/multipartKey5-7481a1bc-1e72-4559-8eda-b6ac4a588c66-110731026523095205-2</msg>
<status status="PASS" starttime="20230717 19:17:08.498" endtime="20230717 19:17:08.502"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:17:08.504" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:17:08.502" endtime="20230717 19:17:08.504"/>
</kw>
<msg timestamp="20230717 19:17:08.505" level="INFO">${part2} = /s3v/encrypted/ozone-test-2028311903/multipartKey5-7481a1bc-1e72-4559-8eda-b6ac4a588c66-110731026523095205-2</msg>
<status status="PASS" starttime="20230717 19:17:08.265" endtime="20230717 19:17:08.505"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${part2}</arg>
<arg>${eTag2}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230717 19:17:08.505" endtime="20230717 19:17:08.508"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:17:08.508" endtime="20230717 19:17:08.510"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id ${uploadID}</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:17:08.526" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket encrypted --key ozone-test-2028311903/multipartKey5 --upload-id 7481a1bc-1e72-4559-8eda-b6ac4a588c66-110731026523095205 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:17:10.426" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:17:10.426" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:17:08.515" endtime="20230717 19:17:10.426"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:17:10.430" level="INFO"/>
<status status="PASS" starttime="20230717 19:17:10.427" endtime="20230717 19:17:10.431"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:17:10.433" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:17:10.432" endtime="20230717 19:17:10.436"/>
</kw>
<msg timestamp="20230717 19:17:10.436" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:17:08.512" endtime="20230717 19:17:10.436"/>
</kw>
<msg timestamp="20230717 19:17:10.436" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230717 19:17:08.511" endtime="20230717 19:17:10.436"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:16:14.693" endtime="20230717 19:17:10.438"/>
</test>
<test id="s1-s8-s8-t10" name="Test Multipart Upload with the simplified aws s3 cp API" line="246">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230717 19:17:10.443" level="INFO">${randStr} = 5386276869</msg>
<status status="PASS" starttime="20230717 19:17:10.442" endtime="20230717 19:17:10.443"/>
</kw>
<msg timestamp="20230717 19:17:10.444" level="INFO">${random} = ozone-test-5386276869</msg>
<status status="PASS" starttime="20230717 19:17:10.442" endtime="20230717 19:17:10.444"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230717 19:17:10.445" level="INFO">${PREFIX} = ozone-test-5386276869</msg>
<status status="PASS" starttime="20230717 19:17:10.444" endtime="20230717 19:17:10.446"/>
</kw>
<status status="PASS" starttime="20230717 19:17:10.441" endtime="20230717 19:17:10.446"/>
</kw>
<kw name="Create Random file">
<arg>22</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:17:10.458" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=22 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:17:10.658" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:17:10.658" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:17:10.452" endtime="20230717 19:17:10.658"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:17:10.662" level="INFO"/>
<status status="PASS" starttime="20230717 19:17:10.660" endtime="20230717 19:17:10.662"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:17:10.667" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:17:10.662" endtime="20230717 19:17:10.667"/>
</kw>
<status status="PASS" starttime="20230717 19:17:10.450" endtime="20230717 19:17:10.669"/>
</kw>
<msg timestamp="20230717 19:17:10.669" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:17:10.449" endtime="20230717 19:17:10.669"/>
</kw>
<status status="PASS" starttime="20230717 19:17:10.447" endtime="20230717 19:17:10.670"/>
</kw>
<status status="PASS" starttime="20230717 19:17:10.446" endtime="20230717 19:17:10.671"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>cp /tmp/part1 s3://${BUCKET}/mpyawscli</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:17:10.690" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/part1 s3://encrypted/mpyawscli 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:17:43.942" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:17:43.942" level="INFO">${output} = Completed 256.0 KiB/22.0 MiB (724.8 KiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (1.4 MiB/s) with 1 file(s) remaining  
Completed 768.0 KiB/22.0 MiB (2.1 MiB/s) with 1 file(s) remainin...</msg>
<status status="PASS" starttime="20230717 19:17:10.683" endtime="20230717 19:17:43.942"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:17:43.945" level="INFO">Completed 256.0 KiB/22.0 MiB (724.8 KiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (1.4 MiB/s) with 1 file(s) remaining  
Completed 768.0 KiB/22.0 MiB (2.1 MiB/s) with 1 file(s) remaining  
Completed 1.0 MiB/22.0 MiB (2.8 MiB/s) with 1 file(s) remaining    
Completed 1.2 MiB/22.0 MiB (3.5 MiB/s) with 1 file(s) remaining    
Completed 1.5 MiB/22.0 MiB (4.2 MiB/s) with 1 file(s) remaining    
Completed 1.8 MiB/22.0 MiB (4.4 MiB/s) with 1 file(s) remaining    
Completed 2.0 MiB/22.0 MiB (5.0 MiB/s) with 1 file(s) remaining    
Completed 2.2 MiB/22.0 MiB (5.4 MiB/s) with 1 file(s) remaining    
Completed 2.5 MiB/22.0 MiB (5.7 MiB/s) with 1 file(s) remaining    
Completed 2.8 MiB/22.0 MiB (5.0 MiB/s) with 1 file(s) remaining    
Completed 3.0 MiB/22.0 MiB (5.5 MiB/s) with 1 file(s) remaining    
Completed 3.2 MiB/22.0 MiB (5.7 MiB/s) with 1 file(s) remaining    
Completed 3.5 MiB/22.0 MiB (6.1 MiB/s) with 1 file(s) remaining    
Completed 3.8 MiB/22.0 MiB (6.5 MiB/s) with 1 file(s) remaining    
Completed 4.0 MiB/22.0 MiB (6.9 MiB/s) with 1 file(s) remaining    
Completed 4.2 MiB/22.0 MiB (7.1 MiB/s) with 1 file(s) remaining    
Completed 4.5 MiB/22.0 MiB (7.5 MiB/s) with 1 file(s) remaining    
Completed 4.8 MiB/22.0 MiB (7.5 MiB/s) with 1 file(s) remaining    
Completed 5.0 MiB/22.0 MiB (7.7 MiB/s) with 1 file(s) remaining    
Completed 5.2 MiB/22.0 MiB (8.1 MiB/s) with 1 file(s) remaining    
Completed 5.5 MiB/22.0 MiB (8.4 MiB/s) with 1 file(s) remaining    
Completed 5.8 MiB/22.0 MiB (7.1 MiB/s) with 1 file(s) remaining    
Completed 6.0 MiB/22.0 MiB (7.4 MiB/s) with 1 file(s) remaining    
Completed 6.2 MiB/22.0 MiB (7.6 MiB/s) with 1 file(s) remaining    
Completed 6.5 MiB/22.0 MiB (7.8 MiB/s) with 1 file(s) remaining    
Completed 6.8 MiB/22.0 MiB (8.1 MiB/s) with 1 file(s) remaining    
Completed 7.0 MiB/22.0 MiB (8.3 MiB/s) with 1 file(s) remaining    
Completed 7.2 MiB/22.0 MiB (8.5 MiB/s) with 1 file(s) remaining    
Completed 7.5 MiB/22.0 MiB (8.7 MiB/s) with 1 file(s) remaining    
Completed 7.8 MiB/22.0 MiB (4.7 MiB/s) with 1 file(s) remaining    
Completed 8.0 MiB/22.0 MiB (4.7 MiB/s) with 1 file(s) remaining    
Completed 8.2 MiB/22.0 MiB (4.8 MiB/s) with 1 file(s) remaining    
Completed 8.5 MiB/22.0 MiB (3.9 MiB/s) with 1 file(s) remaining    
Completed 8.8 MiB/22.0 MiB (4.0 MiB/s) with 1 file(s) remaining    
Completed 9.0 MiB/22.0 MiB (3.9 MiB/s) with 1 file(s) remaining    
Completed 9.2 MiB/22.0 MiB (3.4 MiB/s) with 1 file(s) remaining    
Completed 9.5 MiB/22.0 MiB (3.5 MiB/s) with 1 file(s) remaining    
Completed 9.8 MiB/22.0 MiB (3.5 MiB/s) with 1 file(s) remaining    
Completed 10.0 MiB/22.0 MiB (3.6 MiB/s) with 1 file(s) remaining   
Completed 10.2 MiB/22.0 MiB (3.5 MiB/s) with 1 file(s) remaining   
Completed 10.5 MiB/22.0 MiB (3.4 MiB/s) with 1 file(s) remaining   
Completed 10.8 MiB/22.0 MiB (3.3 MiB/s) with 1 file(s) remaining   
Completed 11.0 MiB/22.0 MiB (3.3 MiB/s) with 1 file(s) remaining   
Completed 11.2 MiB/22.0 MiB (3.2 MiB/s) with 1 file(s) remaining   
Completed 11.5 MiB/22.0 MiB (3.1 MiB/s) with 1 file(s) remaining   
Completed 11.8 MiB/22.0 MiB (3.0 MiB/s) with 1 file(s) remaining   
Completed 12.0 MiB/22.0 MiB (3.1 MiB/s) with 1 file(s) remaining   
Completed 12.2 MiB/22.0 MiB (3.1 MiB/s) with 1 file(s) remaining   
Completed 12.5 MiB/22.0 MiB (3.0 MiB/s) with 1 file(s) remaining   
Completed 12.8 MiB/22.0 MiB (3.0 MiB/s) with 1 file(s) remaining   
Completed 13.0 MiB/22.0 MiB (3.1 MiB/s) with 1 file(s) remaining   
Completed 13.2 MiB/22.0 MiB (3.0 MiB/s) with 1 file(s) remaining   
Completed 13.5 MiB/22.0 MiB (3.0 MiB/s) with 1 file(s) remaining   
Completed 13.8 MiB/22.0 MiB (3.0 MiB/s) with 1 file(s) remaining   
Completed 14.0 MiB/22.0 MiB (3.0 MiB/s) with 1 file(s) remaining   
Completed 14.2 MiB/22.0 MiB (2.9 MiB/s) with 1 file(s) remaining   
Completed 14.5 MiB/22.0 MiB (2.9 MiB/s) with 1 file(s) remaining   
Completed 14.8 MiB/22.0 MiB (2.9 MiB/s) with 1 file(s) remaining   
Completed 15.0 MiB/22.0 MiB (2.9 MiB/s) with 1 file(s) remaining   
Completed 15.2 MiB/22.0 MiB (2.9 MiB/s) with 1 file(s) remaining   
Completed 15.5 MiB/22.0 MiB (2.9 MiB/s) with 1 file(s) remaining   
Completed 15.8 MiB/22.0 MiB (2.9 MiB/s) with 1 file(s) remaining   
Completed 16.0 MiB/22.0 MiB (2.9 MiB/s) with 1 file(s) remaining   
Completed 16.2 MiB/22.0 MiB (2.9 MiB/s) with 1 file(s) remaining   
Completed 16.5 MiB/22.0 MiB (2.9 MiB/s) with 1 file(s) remaining   
Completed 16.8 MiB/22.0 MiB (2.9 MiB/s) with 1 file(s) remaining   
Completed 17.0 MiB/22.0 MiB (2.9 MiB/s) with 1 file(s) remaining   
Completed 17.2 MiB/22.0 MiB (2.9 MiB/s) with 1 file(s) remaining   
Completed 17.5 MiB/22.0 MiB (2.9 MiB/s) with 1 file(s) remaining   
Completed 17.8 MiB/22.0 MiB (2.9 MiB/s) with 1 file(s) remaining   
Completed 18.0 MiB/22.0 MiB (2.9 MiB/s) with 1 file(s) remaining   
Completed 18.2 MiB/22.0 MiB (2.8 MiB/s) with 1 file(s) remaining   
Completed 18.5 MiB/22.0 MiB (2.8 MiB/s) with 1 file(s) remaining   
Completed 18.8 MiB/22.0 MiB (2.9 MiB/s) with 1 file(s) remaining   
Completed 19.0 MiB/22.0 MiB (2.9 MiB/s) with 1 file(s) remaining   
Completed 19.2 MiB/22.0 MiB (2.8 MiB/s) with 1 file(s) remaining   
Completed 19.5 MiB/22.0 MiB (2.8 MiB/s) with 1 file(s) remaining   
Completed 19.8 MiB/22.0 MiB (2.7 MiB/s) with 1 file(s) remaining   
Completed 20.0 MiB/22.0 MiB (2.7 MiB/s) with 1 file(s) remaining   
Completed 20.2 MiB/22.0 MiB (2.7 MiB/s) with 1 file(s) remaining   
Completed 20.5 MiB/22.0 MiB (2.7 MiB/s) with 1 file(s) remaining   
Completed 20.8 MiB/22.0 MiB (2.6 MiB/s) with 1 file(s) remaining   
Completed 21.0 MiB/22.0 MiB (2.6 MiB/s) with 1 file(s) remaining   
Completed 21.2 MiB/22.0 MiB (2.6 MiB/s) with 1 file(s) remaining   
Completed 21.5 MiB/22.0 MiB (2.6 MiB/s) with 1 file(s) remaining   
Completed 21.8 MiB/22.0 MiB (2.5 MiB/s) with 1 file(s) remaining   
Completed 22.0 MiB/22.0 MiB (2.5 MiB/s) with 1 file(s) remaining   
upload: ../../tmp/part1 to s3://encrypted/mpyawscli                </msg>
<status status="PASS" starttime="20230717 19:17:43.943" endtime="20230717 19:17:43.946"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:17:43.948" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:17:43.947" endtime="20230717 19:17:43.948"/>
</kw>
<status status="PASS" starttime="20230717 19:17:10.682" endtime="20230717 19:17:43.949"/>
</kw>
<msg timestamp="20230717 19:17:43.949" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:17:10.678" endtime="20230717 19:17:43.949"/>
</kw>
<msg timestamp="20230717 19:17:43.950" level="INFO">${output} = Completed 256.0 KiB/22.0 MiB (724.8 KiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (1.4 MiB/s) with 1 file(s) remaining  
Completed 768.0 KiB/22.0 MiB (2.1 MiB/s) with 1 file(s) remainin...</msg>
<status status="PASS" starttime="20230717 19:17:10.676" endtime="20230717 19:17:43.950"/>
</kw>
<status status="PASS" starttime="20230717 19:17:10.671" endtime="20230717 19:17:43.950"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>cp s3://${BUCKET}/mpyawscli /tmp/part1.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:17:43.960" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp s3://encrypted/mpyawscli /tmp/part1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:17:50.322" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:17:50.322" level="INFO">${output} = Completed 256.0 KiB/22.0 MiB (633.7 KiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (1.1 MiB/s) with 1 file(s) remaining  
Completed 768.0 KiB/22.0 MiB (1.4 MiB/s) with 1 file(s) remainin...</msg>
<status status="PASS" starttime="20230717 19:17:43.955" endtime="20230717 19:17:50.322"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:17:50.327" level="INFO">Completed 256.0 KiB/22.0 MiB (633.7 KiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (1.1 MiB/s) with 1 file(s) remaining  
Completed 768.0 KiB/22.0 MiB (1.4 MiB/s) with 1 file(s) remaining  
Completed 1.0 MiB/22.0 MiB (1.8 MiB/s) with 1 file(s) remaining    
Completed 1.2 MiB/22.0 MiB (2.1 MiB/s) with 1 file(s) remaining    
Completed 1.5 MiB/22.0 MiB (2.3 MiB/s) with 1 file(s) remaining    
Completed 1.8 MiB/22.0 MiB (2.6 MiB/s) with 1 file(s) remaining    
Completed 2.0 MiB/22.0 MiB (2.7 MiB/s) with 1 file(s) remaining    
Completed 2.2 MiB/22.0 MiB (3.0 MiB/s) with 1 file(s) remaining    
Completed 2.5 MiB/22.0 MiB (2.9 MiB/s) with 1 file(s) remaining    
Completed 2.8 MiB/22.0 MiB (2.9 MiB/s) with 1 file(s) remaining    
Completed 3.0 MiB/22.0 MiB (3.0 MiB/s) with 1 file(s) remaining    
Completed 3.2 MiB/22.0 MiB (3.1 MiB/s) with 1 file(s) remaining    
Completed 3.5 MiB/22.0 MiB (3.3 MiB/s) with 1 file(s) remaining    
Completed 3.8 MiB/22.0 MiB (3.5 MiB/s) with 1 file(s) remaining    
Completed 4.0 MiB/22.0 MiB (3.3 MiB/s) with 1 file(s) remaining    
Completed 4.2 MiB/22.0 MiB (3.5 MiB/s) with 1 file(s) remaining    
Completed 4.5 MiB/22.0 MiB (3.5 MiB/s) with 1 file(s) remaining    
Completed 4.8 MiB/22.0 MiB (3.7 MiB/s) with 1 file(s) remaining    
Completed 5.0 MiB/22.0 MiB (3.8 MiB/s) with 1 file(s) remaining    
Completed 5.2 MiB/22.0 MiB (3.8 MiB/s) with 1 file(s) remaining    
Completed 5.5 MiB/22.0 MiB (4.0 MiB/s) with 1 file(s) remaining    
Completed 5.8 MiB/22.0 MiB (4.1 MiB/s) with 1 file(s) remaining    
Completed 6.0 MiB/22.0 MiB (4.1 MiB/s) with 1 file(s) remaining    
Completed 6.2 MiB/22.0 MiB (4.2 MiB/s) with 1 file(s) remaining    
Completed 6.5 MiB/22.0 MiB (4.3 MiB/s) with 1 file(s) remaining    
Completed 6.8 MiB/22.0 MiB (4.4 MiB/s) with 1 file(s) remaining    
Completed 7.0 MiB/22.0 MiB (4.2 MiB/s) with 1 file(s) remaining    
Completed 7.2 MiB/22.0 MiB (4.4 MiB/s) with 1 file(s) remaining    
Completed 7.5 MiB/22.0 MiB (4.5 MiB/s) with 1 file(s) remaining    
Completed 7.8 MiB/22.0 MiB (4.4 MiB/s) with 1 file(s) remaining    
Completed 8.0 MiB/22.0 MiB (4.5 MiB/s) with 1 file(s) remaining    
Completed 8.2 MiB/22.0 MiB (4.6 MiB/s) with 1 file(s) remaining    
Completed 8.5 MiB/22.0 MiB (4.7 MiB/s) with 1 file(s) remaining    
Completed 8.8 MiB/22.0 MiB (4.8 MiB/s) with 1 file(s) remaining    
Completed 9.0 MiB/22.0 MiB (4.9 MiB/s) with 1 file(s) remaining    
Completed 9.2 MiB/22.0 MiB (4.8 MiB/s) with 1 file(s) remaining    
Completed 9.5 MiB/22.0 MiB (4.8 MiB/s) with 1 file(s) remaining    
Completed 9.8 MiB/22.0 MiB (4.8 MiB/s) with 1 file(s) remaining    
Completed 10.0 MiB/22.0 MiB (4.8 MiB/s) with 1 file(s) remaining   
Completed 10.2 MiB/22.0 MiB (4.7 MiB/s) with 1 file(s) remaining   
Completed 10.5 MiB/22.0 MiB (4.8 MiB/s) with 1 file(s) remaining   
Completed 10.8 MiB/22.0 MiB (4.8 MiB/s) with 1 file(s) remaining   
Completed 11.0 MiB/22.0 MiB (4.8 MiB/s) with 1 file(s) remaining   
Completed 11.2 MiB/22.0 MiB (4.8 MiB/s) with 1 file(s) remaining   
Completed 11.5 MiB/22.0 MiB (4.9 MiB/s) with 1 file(s) remaining   
Completed 11.8 MiB/22.0 MiB (4.9 MiB/s) with 1 file(s) remaining   
Completed 12.0 MiB/22.0 MiB (5.0 MiB/s) with 1 file(s) remaining   
Completed 12.2 MiB/22.0 MiB (5.0 MiB/s) with 1 file(s) remaining   
Completed 12.5 MiB/22.0 MiB (5.0 MiB/s) with 1 file(s) remaining   
Completed 12.8 MiB/22.0 MiB (5.1 MiB/s) with 1 file(s) remaining   
Completed 13.0 MiB/22.0 MiB (5.1 MiB/s) with 1 file(s) remaining   
Completed 13.2 MiB/22.0 MiB (5.0 MiB/s) with 1 file(s) remaining   
Completed 13.5 MiB/22.0 MiB (5.1 MiB/s) with 1 file(s) remaining   
Completed 13.8 MiB/22.0 MiB (5.1 MiB/s) with 1 file(s) remaining   
Completed 14.0 MiB/22.0 MiB (4.7 MiB/s) with 1 file(s) remaining   
Completed 14.2 MiB/22.0 MiB (4.8 MiB/s) with 1 file(s) remaining   
Completed 14.5 MiB/22.0 MiB (4.8 MiB/s) with 1 file(s) remaining   
Completed 14.8 MiB/22.0 MiB (4.8 MiB/s) with 1 file(s) remaining   
Completed 15.0 MiB/22.0 MiB (4.8 MiB/s) with 1 file(s) remaining   
Completed 15.2 MiB/22.0 MiB (4.9 MiB/s) with 1 file(s) remaining   
Completed 15.5 MiB/22.0 MiB (4.9 MiB/s) with 1 file(s) remaining   
Completed 15.8 MiB/22.0 MiB (5.0 MiB/s) with 1 file(s) remaining   
Completed 16.0 MiB/22.0 MiB (5.0 MiB/s) with 1 file(s) remaining   
Completed 16.2 MiB/22.0 MiB (5.0 MiB/s) with 1 file(s) remaining   
Completed 16.5 MiB/22.0 MiB (4.9 MiB/s) with 1 file(s) remaining   
Completed 16.8 MiB/22.0 MiB (5.0 MiB/s) with 1 file(s) remaining   
Completed 17.0 MiB/22.0 MiB (4.9 MiB/s) with 1 file(s) remaining   
Completed 17.2 MiB/22.0 MiB (4.9 MiB/s) with 1 file(s) remaining   
Completed 17.5 MiB/22.0 MiB (4.9 MiB/s) with 1 file(s) remaining   
Completed 17.8 MiB/22.0 MiB (4.9 MiB/s) with 1 file(s) remaining   
Completed 18.0 MiB/22.0 MiB (4.9 MiB/s) with 1 file(s) remaining   
Completed 18.2 MiB/22.0 MiB (5.0 MiB/s) with 1 file(s) remaining   
Completed 18.5 MiB/22.0 MiB (5.0 MiB/s) with 1 file(s) remaining   
Completed 18.8 MiB/22.0 MiB (5.0 MiB/s) with 1 file(s) remaining   
Completed 19.0 MiB/22.0 MiB (5.0 MiB/s) with 1 file(s) remaining   
Completed 19.2 MiB/22.0 MiB (5.0 MiB/s) with 1 file(s) remaining   
Completed 19.5 MiB/22.0 MiB (5.0 MiB/s) with 1 file(s) remaining   
Completed 19.8 MiB/22.0 MiB (5.0 MiB/s) with 1 file(s) remaining   
Completed 20.0 MiB/22.0 MiB (4.9 MiB/s) with 1 file(s) remaining   
Completed 20.2 MiB/22.0 MiB (4.9 MiB/s) with 1 file(s) remaining   
Completed 20.5 MiB/22.0 MiB (4.8 MiB/s) with 1 file(s) remaining   
Completed 20.8 MiB/22.0 MiB (4.9 MiB/s) with 1 file(s) remaining   
Completed 21.0 MiB/22.0 MiB (4.8 MiB/s) with 1 file(s) remaining   
Completed 21.2 MiB/22.0 MiB (4.8 MiB/s) with 1 file(s) remaining   
Completed 21.5 MiB/22.0 MiB (4.8 MiB/s) with 1 file(s) remaining   
Completed 21.8 MiB/22.0 MiB (4.8 MiB/s) with 1 file(s) remaining   
Completed 22.0 MiB/22.0 MiB (4.7 MiB/s) with 1 file(s) remaining   
download: s3://encrypted/mpyawscli to ../../tmp/part1.result       </msg>
<status status="PASS" starttime="20230717 19:17:50.324" endtime="20230717 19:17:50.328"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:17:50.331" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:17:50.329" endtime="20230717 19:17:50.331"/>
</kw>
<status status="PASS" starttime="20230717 19:17:43.953" endtime="20230717 19:17:50.332"/>
</kw>
<msg timestamp="20230717 19:17:50.332" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:17:43.953" endtime="20230717 19:17:50.332"/>
</kw>
<msg timestamp="20230717 19:17:50.332" level="INFO">${output} = Completed 256.0 KiB/22.0 MiB (633.7 KiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (1.1 MiB/s) with 1 file(s) remaining  
Completed 768.0 KiB/22.0 MiB (1.4 MiB/s) with 1 file(s) remainin...</msg>
<status status="PASS" starttime="20230717 19:17:43.952" endtime="20230717 19:17:50.334"/>
</kw>
<status status="PASS" starttime="20230717 19:17:43.950" endtime="20230717 19:17:50.334"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>rm s3://${BUCKET}/mpyawscli</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:17:50.351" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 rm s3://encrypted/mpyawscli 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:17:52.103" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:17:52.103" level="INFO">${output} = delete: s3://encrypted/mpyawscli</msg>
<status status="PASS" starttime="20230717 19:17:50.343" endtime="20230717 19:17:52.103"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:17:52.107" level="INFO">delete: s3://encrypted/mpyawscli</msg>
<status status="PASS" starttime="20230717 19:17:52.104" endtime="20230717 19:17:52.107"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:17:52.109" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:17:52.108" endtime="20230717 19:17:52.110"/>
</kw>
<status status="PASS" starttime="20230717 19:17:50.341" endtime="20230717 19:17:52.111"/>
</kw>
<msg timestamp="20230717 19:17:52.111" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:17:50.340" endtime="20230717 19:17:52.111"/>
</kw>
<msg timestamp="20230717 19:17:52.111" level="INFO">${output} = delete: s3://encrypted/mpyawscli</msg>
<status status="PASS" starttime="20230717 19:17:50.338" endtime="20230717 19:17:52.111"/>
</kw>
<status status="PASS" starttime="20230717 19:17:50.334" endtime="20230717 19:17:52.111"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part1</arg>
<arg>/tmp/part1.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:17:52.118" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:17:52.237" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:17:52.237" level="INFO">${output} = 455e17f53b1b67968d5b959f7bfa5b71</msg>
<status status="PASS" starttime="20230717 19:17:52.114" endtime="20230717 19:17:52.237"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:17:52.240" level="INFO">455e17f53b1b67968d5b959f7bfa5b71</msg>
<status status="PASS" starttime="20230717 19:17:52.238" endtime="20230717 19:17:52.240"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:17:52.241" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:17:52.241" endtime="20230717 19:17:52.242"/>
</kw>
<status status="PASS" starttime="20230717 19:17:52.113" endtime="20230717 19:17:52.242"/>
</kw>
<msg timestamp="20230717 19:17:52.242" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:17:52.113" endtime="20230717 19:17:52.242"/>
</kw>
<msg timestamp="20230717 19:17:52.243" level="INFO">${checksumbefore} = 455e17f53b1b67968d5b959f7bfa5b71</msg>
<status status="PASS" starttime="20230717 19:17:52.112" endtime="20230717 19:17:52.243"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:17:52.259" level="INFO">Running command 'md5sum /tmp/part1.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:17:52.362" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:17:52.362" level="INFO">${output} = 455e17f53b1b67968d5b959f7bfa5b71</msg>
<status status="PASS" starttime="20230717 19:17:52.252" endtime="20230717 19:17:52.362"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:17:52.364" level="INFO">455e17f53b1b67968d5b959f7bfa5b71</msg>
<status status="PASS" starttime="20230717 19:17:52.363" endtime="20230717 19:17:52.364"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:17:52.365" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:17:52.365" endtime="20230717 19:17:52.366"/>
</kw>
<status status="PASS" starttime="20230717 19:17:52.249" endtime="20230717 19:17:52.366"/>
</kw>
<msg timestamp="20230717 19:17:52.366" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:17:52.245" endtime="20230717 19:17:52.366"/>
</kw>
<msg timestamp="20230717 19:17:52.367" level="INFO">${checksumafter} = 455e17f53b1b67968d5b959f7bfa5b71</msg>
<status status="PASS" starttime="20230717 19:17:52.243" endtime="20230717 19:17:52.367"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230717 19:17:52.367" endtime="20230717 19:17:52.369"/>
</kw>
<status status="PASS" starttime="20230717 19:17:52.112" endtime="20230717 19:17:52.370"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:17:10.439" endtime="20230717 19:17:52.370"/>
</test>
<test id="s1-s8-s8-t11" name="Test Multipart Upload Put With Copy" line="253">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230717 19:17:52.379" level="INFO">${randStr} = 6733911992</msg>
<status status="PASS" starttime="20230717 19:17:52.378" endtime="20230717 19:17:52.379"/>
</kw>
<msg timestamp="20230717 19:17:52.379" level="INFO">${random} = ozone-test-6733911992</msg>
<status status="PASS" starttime="20230717 19:17:52.377" endtime="20230717 19:17:52.379"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230717 19:17:52.380" level="INFO">${PREFIX} = ozone-test-6733911992</msg>
<status status="PASS" starttime="20230717 19:17:52.380" endtime="20230717 19:17:52.380"/>
</kw>
<status status="PASS" starttime="20230717 19:17:52.376" endtime="20230717 19:17:52.381"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>5</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>5</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:17:52.391" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:17:52.434" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:17:52.435" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:17:52.386" endtime="20230717 19:17:52.435"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:17:52.437" level="INFO"/>
<status status="PASS" starttime="20230717 19:17:52.436" endtime="20230717 19:17:52.437"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:17:52.439" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:17:52.438" endtime="20230717 19:17:52.439"/>
</kw>
<status status="PASS" starttime="20230717 19:17:52.385" endtime="20230717 19:17:52.439"/>
</kw>
<msg timestamp="20230717 19:17:52.439" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:17:52.384" endtime="20230717 19:17:52.440"/>
</kw>
<status status="PASS" starttime="20230717 19:17:52.383" endtime="20230717 19:17:52.440"/>
</kw>
<status status="PASS" starttime="20230717 19:17:52.381" endtime="20230717 19:17:52.440"/>
</kw>
<status status="PASS" starttime="20230717 19:17:52.381" endtime="20230717 19:17:52.440"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/copytest/source --body /tmp/part1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:17:52.450" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-6733911992/copytest/source --body /tmp/part1 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:18:16.619" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:18:16.619" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:17:52.445" endtime="20230717 19:18:16.619"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:18:16.621" level="INFO"/>
<status status="PASS" starttime="20230717 19:18:16.620" endtime="20230717 19:18:16.621"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:18:16.622" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:18:16.621" endtime="20230717 19:18:16.622"/>
</kw>
<status status="PASS" starttime="20230717 19:17:52.444" endtime="20230717 19:18:16.623"/>
</kw>
<msg timestamp="20230717 19:18:16.623" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:17:52.443" endtime="20230717 19:18:16.623"/>
</kw>
<msg timestamp="20230717 19:18:16.623" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:17:52.442" endtime="20230717 19:18:16.623"/>
</kw>
<msg timestamp="20230717 19:18:16.624" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230717 19:17:52.440" endtime="20230717 19:18:16.624"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/copytest/destination</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:18:16.642" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-6733911992/copytest/destination 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:18:18.476" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:18:18.476" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-6733911992/copytest/destination",
    "UploadId": "0e24cb3e-dd59-46cd-9f82-6556f4fad370-110731034508132525"
}</msg>
<status status="PASS" starttime="20230717 19:18:16.632" endtime="20230717 19:18:18.476"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:18:18.479" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-6733911992/copytest/destination",
    "UploadId": "0e24cb3e-dd59-46cd-9f82-6556f4fad370-110731034508132525"
}</msg>
<status status="PASS" starttime="20230717 19:18:18.477" endtime="20230717 19:18:18.479"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:18:18.482" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:18:18.480" endtime="20230717 19:18:18.483"/>
</kw>
<status status="PASS" starttime="20230717 19:18:16.630" endtime="20230717 19:18:18.484"/>
</kw>
<msg timestamp="20230717 19:18:18.484" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:18:16.629" endtime="20230717 19:18:18.485"/>
</kw>
<msg timestamp="20230717 19:18:18.486" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-6733911992/copytest/destination",
    "UploadId": "0e24cb3e-dd59-46cd-9f82-6556f4fad370-110731034508132525"
}</msg>
<status status="PASS" starttime="20230717 19:18:16.625" endtime="20230717 19:18:18.486"/>
</kw>
<msg timestamp="20230717 19:18:18.486" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-6733911992/copytest/destination",
    "UploadId": "0e24cb3e-dd59-46cd-9f82-6556f4fad370-110731034508132525"
}</msg>
<status status="PASS" starttime="20230717 19:18:16.624" endtime="20230717 19:18:18.486"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:18:18.493" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-6733911992/copytest/destination",
    "UploadId": "0e24cb3e-dd59-46cd-9f82-6556f4fad370-110731034508132525"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:18:18.636" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:18:18.636" level="INFO">${output} = 0e24cb3e-dd59-46cd-9f82-6556f4fad370-110731034508132525</msg>
<status status="PASS" starttime="20230717 19:18:18.487" endtime="20230717 19:18:18.636"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:18:18.638" level="INFO">0e24cb3e-dd59-46cd-9f82-6556f4fad370-110731034508132525</msg>
<status status="PASS" starttime="20230717 19:18:18.637" endtime="20230717 19:18:18.638"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:18:18.641" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:18:18.641" endtime="20230717 19:18:18.642"/>
</kw>
<msg timestamp="20230717 19:18:18.645" level="INFO">${uploadID} = 0e24cb3e-dd59-46cd-9f82-6556f4fad370-110731034508132525</msg>
<status status="PASS" starttime="20230717 19:18:18.486" endtime="20230717 19:18:18.646"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:18:18.646" endtime="20230717 19:18:18.649"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:18:18.649" endtime="20230717 19:18:18.651"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copytest/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copytest/source</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:18:18.666" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket encrypted --key ozone-test-6733911992/copytest/destination --upload-id 0e24cb3e-dd59-46cd-9f82-6556f4fad370-110731034508132525 --part-number 1 --copy-source encrypted/ozone-test-6733911992/copytest/source 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:18:21.620" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:18:21.620" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/s3v/encrypted/ozone-test-6733911992/copytest/destination-0e24cb3e-dd59-46cd-9f82-6556f4fad370-110731034508132525-1",
        "LastModified": "2023-07-17T19:...</msg>
<status status="PASS" starttime="20230717 19:18:18.659" endtime="20230717 19:18:21.620"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:18:21.622" level="INFO">{
    "CopyPartResult": {
        "ETag": "/s3v/encrypted/ozone-test-6733911992/copytest/destination-0e24cb3e-dd59-46cd-9f82-6556f4fad370-110731034508132525-1",
        "LastModified": "2023-07-17T19:18:21.335Z"
    }
}</msg>
<status status="PASS" starttime="20230717 19:18:21.621" endtime="20230717 19:18:21.623"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:18:21.623" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:18:21.623" endtime="20230717 19:18:21.626"/>
</kw>
<status status="PASS" starttime="20230717 19:18:18.658" endtime="20230717 19:18:21.626"/>
</kw>
<msg timestamp="20230717 19:18:21.626" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:18:18.656" endtime="20230717 19:18:21.626"/>
</kw>
<msg timestamp="20230717 19:18:21.627" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/s3v/encrypted/ozone-test-6733911992/copytest/destination-0e24cb3e-dd59-46cd-9f82-6556f4fad370-110731034508132525-1",
        "LastModified": "2023-07-17T19:...</msg>
<status status="PASS" starttime="20230717 19:18:18.655" endtime="20230717 19:18:21.630"/>
</kw>
<msg timestamp="20230717 19:18:21.630" level="INFO">${result} = {
    "CopyPartResult": {
        "ETag": "/s3v/encrypted/ozone-test-6733911992/copytest/destination-0e24cb3e-dd59-46cd-9f82-6556f4fad370-110731034508132525-1",
        "LastModified": "2023-07-17T19:...</msg>
<status status="PASS" starttime="20230717 19:18:18.652" endtime="20230717 19:18:21.630"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:18:21.630" endtime="20230717 19:18:21.631"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:18:21.631" endtime="20230717 19:18:21.631"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:18:21.637" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "ETag": "/s3v/encrypted/ozone-test-6733911992/copytest/destination-0e24cb3e-dd59-46cd-9f82-6556f4fad370-110731034508132525-1",
        "LastModified": "2023-07-17T19:18:21.335Z"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:18:21.780" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:18:21.780" level="INFO">${output} = /s3v/encrypted/ozone-test-6733911992/copytest/destination-0e24cb3e-dd59-46cd-9f82-6556f4fad370-110731034508132525-1</msg>
<status status="PASS" starttime="20230717 19:18:21.632" endtime="20230717 19:18:21.780"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:18:21.790" level="INFO">/s3v/encrypted/ozone-test-6733911992/copytest/destination-0e24cb3e-dd59-46cd-9f82-6556f4fad370-110731034508132525-1</msg>
<status status="PASS" starttime="20230717 19:18:21.782" endtime="20230717 19:18:21.790"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:18:21.796" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:18:21.791" endtime="20230717 19:18:21.797"/>
</kw>
<msg timestamp="20230717 19:18:21.798" level="INFO">${eTag1} = /s3v/encrypted/ozone-test-6733911992/copytest/destination-0e24cb3e-dd59-46cd-9f82-6556f4fad370-110731034508132525-1</msg>
<status status="PASS" starttime="20230717 19:18:21.631" endtime="20230717 19:18:21.798"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/copytest/destination --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1}]'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:18:21.821" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 0e24cb3e-dd59-46cd-9f82-6556f4fad370-110731034508132525 --bucket encrypted --key ozone-test-6733911992/copytest/destination --multipart-upload 'Parts=[{ETag=/s3v/encrypted/ozone-test-6733911992/copytest/destination-0e24cb3e-dd59-46cd-9f82-6556f4fad370-110731034508132525-1,PartNumber=1}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:18:23.939" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:18:23.939" level="INFO">${output} = {
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-6733911992/copytest/destination",
    "ETag": "46b3bbeaf719655d1a2848eb42b68c43f4b550a36cf64c1e12d211e8288d39de"
}</msg>
<status status="PASS" starttime="20230717 19:18:21.812" endtime="20230717 19:18:23.939"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:18:23.941" level="INFO">{
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-6733911992/copytest/destination",
    "ETag": "46b3bbeaf719655d1a2848eb42b68c43f4b550a36cf64c1e12d211e8288d39de"
}</msg>
<status status="PASS" starttime="20230717 19:18:23.940" endtime="20230717 19:18:23.944"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:18:23.947" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:18:23.945" endtime="20230717 19:18:23.947"/>
</kw>
<status status="PASS" starttime="20230717 19:18:21.809" endtime="20230717 19:18:23.947"/>
</kw>
<msg timestamp="20230717 19:18:23.947" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:18:21.807" endtime="20230717 19:18:23.949"/>
</kw>
<msg timestamp="20230717 19:18:23.949" level="INFO">${output} = {
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-6733911992/copytest/destination",
    "ETag": "46b3bbeaf719655d1a2848eb42b68c43f4b550a36cf64c1e12d211e8288d39de"
}</msg>
<status status="PASS" starttime="20230717 19:18:21.805" endtime="20230717 19:18:23.949"/>
</kw>
<status status="PASS" starttime="20230717 19:18:21.799" endtime="20230717 19:18:23.950"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/copytest/destination /tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:18:23.967" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-6733911992/copytest/destination /tmp/part-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:18:27.222" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:18:27.222" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:18:23 GMT",
    "ContentLength": 5242880,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Ex...</msg>
<status status="PASS" starttime="20230717 19:18:23.959" endtime="20230717 19:18:27.222"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:18:27.230" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:18:23 GMT",
    "ContentLength": 5242880,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Mon, 17 Jul 2023 19:18:25 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230717 19:18:27.225" endtime="20230717 19:18:27.231"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:18:27.232" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:18:27.231" endtime="20230717 19:18:27.233"/>
</kw>
<status status="PASS" starttime="20230717 19:18:23.957" endtime="20230717 19:18:27.233"/>
</kw>
<msg timestamp="20230717 19:18:27.233" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:18:23.955" endtime="20230717 19:18:27.233"/>
</kw>
<msg timestamp="20230717 19:18:27.233" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:18:23 GMT",
    "ContentLength": 5242880,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Ex...</msg>
<status status="PASS" starttime="20230717 19:18:23.952" endtime="20230717 19:18:27.237"/>
</kw>
<status status="PASS" starttime="20230717 19:18:23.951" endtime="20230717 19:18:27.237"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part1</arg>
<arg>/tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:18:27.259" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:18:27.329" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:18:27.329" level="INFO">${output} = bcb5a1d06262afa6bd4007e51415ffaa</msg>
<status status="PASS" starttime="20230717 19:18:27.250" endtime="20230717 19:18:27.329"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:18:27.337" level="INFO">bcb5a1d06262afa6bd4007e51415ffaa</msg>
<status status="PASS" starttime="20230717 19:18:27.334" endtime="20230717 19:18:27.342"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:18:27.347" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:18:27.343" endtime="20230717 19:18:27.347"/>
</kw>
<status status="PASS" starttime="20230717 19:18:27.247" endtime="20230717 19:18:27.348"/>
</kw>
<msg timestamp="20230717 19:18:27.348" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:18:27.243" endtime="20230717 19:18:27.350"/>
</kw>
<msg timestamp="20230717 19:18:27.351" level="INFO">${checksumbefore} = bcb5a1d06262afa6bd4007e51415ffaa</msg>
<status status="PASS" starttime="20230717 19:18:27.240" endtime="20230717 19:18:27.351"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:18:27.379" level="INFO">Running command 'md5sum /tmp/part-result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:18:27.418" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:18:27.418" level="INFO">${output} = bcb5a1d06262afa6bd4007e51415ffaa</msg>
<status status="PASS" starttime="20230717 19:18:27.364" endtime="20230717 19:18:27.418"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:18:27.421" level="INFO">bcb5a1d06262afa6bd4007e51415ffaa</msg>
<status status="PASS" starttime="20230717 19:18:27.419" endtime="20230717 19:18:27.421"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:18:27.425" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:18:27.423" endtime="20230717 19:18:27.425"/>
</kw>
<status status="PASS" starttime="20230717 19:18:27.361" endtime="20230717 19:18:27.427"/>
</kw>
<msg timestamp="20230717 19:18:27.427" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:18:27.358" endtime="20230717 19:18:27.428"/>
</kw>
<msg timestamp="20230717 19:18:27.429" level="INFO">${checksumafter} = bcb5a1d06262afa6bd4007e51415ffaa</msg>
<status status="PASS" starttime="20230717 19:18:27.355" endtime="20230717 19:18:27.429"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230717 19:18:27.429" endtime="20230717 19:18:27.431"/>
</kw>
<status status="PASS" starttime="20230717 19:18:27.239" endtime="20230717 19:18:27.433"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:17:52.373" endtime="20230717 19:18:27.434"/>
</test>
<test id="s1-s8-s8-t12" name="Test Multipart Upload Put With Copy and range" line="275">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230717 19:18:27.459" level="INFO">${randStr} = 8941437988</msg>
<status status="PASS" starttime="20230717 19:18:27.458" endtime="20230717 19:18:27.459"/>
</kw>
<msg timestamp="20230717 19:18:27.460" level="INFO">${random} = ozone-test-8941437988</msg>
<status status="PASS" starttime="20230717 19:18:27.448" endtime="20230717 19:18:27.460"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230717 19:18:27.467" level="INFO">${PREFIX} = ozone-test-8941437988</msg>
<status status="PASS" starttime="20230717 19:18:27.460" endtime="20230717 19:18:27.467"/>
</kw>
<status status="PASS" starttime="20230717 19:18:27.444" endtime="20230717 19:18:27.468"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>10</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>10</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:18:27.513" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=10 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:18:27.680" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:18:27.680" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:18:27.491" endtime="20230717 19:18:27.680"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:18:27.683" level="INFO"/>
<status status="PASS" starttime="20230717 19:18:27.681" endtime="20230717 19:18:27.683"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:18:27.685" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:18:27.684" endtime="20230717 19:18:27.685"/>
</kw>
<status status="PASS" starttime="20230717 19:18:27.489" endtime="20230717 19:18:27.686"/>
</kw>
<msg timestamp="20230717 19:18:27.686" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:18:27.485" endtime="20230717 19:18:27.686"/>
</kw>
<status status="PASS" starttime="20230717 19:18:27.481" endtime="20230717 19:18:27.687"/>
</kw>
<status status="PASS" starttime="20230717 19:18:27.477" endtime="20230717 19:18:27.687"/>
</kw>
<status status="PASS" starttime="20230717 19:18:27.473" endtime="20230717 19:18:27.687"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/source --body /tmp/part1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:18:27.715" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-8941437988/copyrange/source --body /tmp/part1 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:18:53.112" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:18:53.112" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:18:27.692" endtime="20230717 19:18:53.112"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:18:53.118" level="INFO"/>
<status status="PASS" starttime="20230717 19:18:53.115" endtime="20230717 19:18:53.118"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:18:53.121" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:18:53.119" endtime="20230717 19:18:53.122"/>
</kw>
<status status="PASS" starttime="20230717 19:18:27.691" endtime="20230717 19:18:53.122"/>
</kw>
<msg timestamp="20230717 19:18:53.124" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:18:27.690" endtime="20230717 19:18:53.124"/>
</kw>
<msg timestamp="20230717 19:18:53.125" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:18:27.689" endtime="20230717 19:18:53.125"/>
</kw>
<msg timestamp="20230717 19:18:53.125" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230717 19:18:27.688" endtime="20230717 19:18:53.125"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:18:53.150" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-8941437988/copyrange/destination 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:18:54.629" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:18:54.629" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-8941437988/copyrange/destination",
    "UploadId": "ad8e58ce-02b0-4111-9b44-fc7e3c8de09b-110731036882043056"
}</msg>
<status status="PASS" starttime="20230717 19:18:53.140" endtime="20230717 19:18:54.629"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:18:54.635" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-8941437988/copyrange/destination",
    "UploadId": "ad8e58ce-02b0-4111-9b44-fc7e3c8de09b-110731036882043056"
}</msg>
<status status="PASS" starttime="20230717 19:18:54.630" endtime="20230717 19:18:54.636"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:18:54.639" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:18:54.637" endtime="20230717 19:18:54.639"/>
</kw>
<status status="PASS" starttime="20230717 19:18:53.139" endtime="20230717 19:18:54.641"/>
</kw>
<msg timestamp="20230717 19:18:54.641" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:18:53.139" endtime="20230717 19:18:54.641"/>
</kw>
<msg timestamp="20230717 19:18:54.642" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-8941437988/copyrange/destination",
    "UploadId": "ad8e58ce-02b0-4111-9b44-fc7e3c8de09b-110731036882043056"
}</msg>
<status status="PASS" starttime="20230717 19:18:53.132" endtime="20230717 19:18:54.642"/>
</kw>
<msg timestamp="20230717 19:18:54.643" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-8941437988/copyrange/destination",
    "UploadId": "ad8e58ce-02b0-4111-9b44-fc7e3c8de09b-110731036882043056"
}</msg>
<status status="PASS" starttime="20230717 19:18:53.125" endtime="20230717 19:18:54.643"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:18:54.653" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-8941437988/copyrange/destination",
    "UploadId": "ad8e58ce-02b0-4111-9b44-fc7e3c8de09b-110731036882043056"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:18:54.784" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:18:54.784" level="INFO">${output} = ad8e58ce-02b0-4111-9b44-fc7e3c8de09b-110731036882043056</msg>
<status status="PASS" starttime="20230717 19:18:54.645" endtime="20230717 19:18:54.785"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:18:54.791" level="INFO">ad8e58ce-02b0-4111-9b44-fc7e3c8de09b-110731036882043056</msg>
<status status="PASS" starttime="20230717 19:18:54.788" endtime="20230717 19:18:54.791"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:18:54.795" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:18:54.792" endtime="20230717 19:18:54.796"/>
</kw>
<msg timestamp="20230717 19:18:54.797" level="INFO">${uploadID} = ad8e58ce-02b0-4111-9b44-fc7e3c8de09b-110731036882043056</msg>
<status status="PASS" starttime="20230717 19:18:54.644" endtime="20230717 19:18:54.798"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:18:54.799" endtime="20230717 19:18:54.801"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:18:54.801" endtime="20230717 19:18:54.803"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=0-10485757</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:18:54.826" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket encrypted --key ozone-test-8941437988/copyrange/destination --upload-id ad8e58ce-02b0-4111-9b44-fc7e3c8de09b-110731036882043056 --part-number 1 --copy-source encrypted/ozone-test-8941437988/copyrange/source --copy-source-range bytes=0-10485757 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:18:58.287" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:18:58.287" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/s3v/encrypted/ozone-test-8941437988/copyrange/destination-ad8e58ce-02b0-4111-9b44-fc7e3c8de09b-110731036882043056-1",
        "LastModified": "2023-07-17T19...</msg>
<status status="PASS" starttime="20230717 19:18:54.818" endtime="20230717 19:18:58.288"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:18:58.293" level="INFO">{
    "CopyPartResult": {
        "ETag": "/s3v/encrypted/ozone-test-8941437988/copyrange/destination-ad8e58ce-02b0-4111-9b44-fc7e3c8de09b-110731036882043056-1",
        "LastModified": "2023-07-17T19:18:57.577Z"
    }
}</msg>
<status status="PASS" starttime="20230717 19:18:58.291" endtime="20230717 19:18:58.297"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:18:58.300" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:18:58.299" endtime="20230717 19:18:58.301"/>
</kw>
<status status="PASS" starttime="20230717 19:18:54.816" endtime="20230717 19:18:58.301"/>
</kw>
<msg timestamp="20230717 19:18:58.301" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:18:54.814" endtime="20230717 19:18:58.301"/>
</kw>
<msg timestamp="20230717 19:18:58.304" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/s3v/encrypted/ozone-test-8941437988/copyrange/destination-ad8e58ce-02b0-4111-9b44-fc7e3c8de09b-110731036882043056-1",
        "LastModified": "2023-07-17T19...</msg>
<status status="PASS" starttime="20230717 19:18:54.812" endtime="20230717 19:18:58.304"/>
</kw>
<msg timestamp="20230717 19:18:58.308" level="INFO">${result} = {
    "CopyPartResult": {
        "ETag": "/s3v/encrypted/ozone-test-8941437988/copyrange/destination-ad8e58ce-02b0-4111-9b44-fc7e3c8de09b-110731036882043056-1",
        "LastModified": "2023-07-17T19...</msg>
<status status="PASS" starttime="20230717 19:18:54.803" endtime="20230717 19:18:58.308"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:18:58.308" endtime="20230717 19:18:58.311"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:18:58.312" endtime="20230717 19:18:58.313"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:18:58.319" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "ETag": "/s3v/encrypted/ozone-test-8941437988/copyrange/destination-ad8e58ce-02b0-4111-9b44-fc7e3c8de09b-110731036882043056-1",
        "LastModified": "2023-07-17T19:18:57.577Z"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:18:58.472" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:18:58.472" level="INFO">${output} = /s3v/encrypted/ozone-test-8941437988/copyrange/destination-ad8e58ce-02b0-4111-9b44-fc7e3c8de09b-110731036882043056-1</msg>
<status status="PASS" starttime="20230717 19:18:58.316" endtime="20230717 19:18:58.472"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:18:58.479" level="INFO">/s3v/encrypted/ozone-test-8941437988/copyrange/destination-ad8e58ce-02b0-4111-9b44-fc7e3c8de09b-110731036882043056-1</msg>
<status status="PASS" starttime="20230717 19:18:58.473" endtime="20230717 19:18:58.479"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:18:58.485" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:18:58.482" endtime="20230717 19:18:58.485"/>
</kw>
<msg timestamp="20230717 19:18:58.487" level="INFO">${eTag1} = /s3v/encrypted/ozone-test-8941437988/copyrange/destination-ad8e58ce-02b0-4111-9b44-fc7e3c8de09b-110731036882043056-1</msg>
<status status="PASS" starttime="20230717 19:18:58.314" endtime="20230717 19:18:58.487"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 2 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=10485758-10485759</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:18:58.512" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket encrypted --key ozone-test-8941437988/copyrange/destination --upload-id ad8e58ce-02b0-4111-9b44-fc7e3c8de09b-110731036882043056 --part-number 2 --copy-source encrypted/ozone-test-8941437988/copyrange/source --copy-source-range bytes=10485758-10485759 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:19:00.918" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:19:00.918" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/s3v/encrypted/ozone-test-8941437988/copyrange/destination-ad8e58ce-02b0-4111-9b44-fc7e3c8de09b-110731036882043056-2",
        "LastModified": "2023-07-17T19...</msg>
<status status="PASS" starttime="20230717 19:18:58.501" endtime="20230717 19:19:00.919"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:19:00.931" level="INFO">{
    "CopyPartResult": {
        "ETag": "/s3v/encrypted/ozone-test-8941437988/copyrange/destination-ad8e58ce-02b0-4111-9b44-fc7e3c8de09b-110731036882043056-2",
        "LastModified": "2023-07-17T19:19:00.647Z"
    }
}</msg>
<status status="PASS" starttime="20230717 19:19:00.929" endtime="20230717 19:19:00.932"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:19:00.936" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:19:00.935" endtime="20230717 19:19:00.937"/>
</kw>
<status status="PASS" starttime="20230717 19:18:58.498" endtime="20230717 19:19:00.937"/>
</kw>
<msg timestamp="20230717 19:19:00.937" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:18:58.497" endtime="20230717 19:19:00.939"/>
</kw>
<msg timestamp="20230717 19:19:00.939" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/s3v/encrypted/ozone-test-8941437988/copyrange/destination-ad8e58ce-02b0-4111-9b44-fc7e3c8de09b-110731036882043056-2",
        "LastModified": "2023-07-17T19...</msg>
<status status="PASS" starttime="20230717 19:18:58.493" endtime="20230717 19:19:00.939"/>
</kw>
<msg timestamp="20230717 19:19:00.943" level="INFO">${result} = {
    "CopyPartResult": {
        "ETag": "/s3v/encrypted/ozone-test-8941437988/copyrange/destination-ad8e58ce-02b0-4111-9b44-fc7e3c8de09b-110731036882043056-2",
        "LastModified": "2023-07-17T19...</msg>
<status status="PASS" starttime="20230717 19:18:58.489" endtime="20230717 19:19:00.943"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:19:00.943" endtime="20230717 19:19:00.946"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:19:00.946" endtime="20230717 19:19:00.947"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:19:00.964" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "ETag": "/s3v/encrypted/ozone-test-8941437988/copyrange/destination-ad8e58ce-02b0-4111-9b44-fc7e3c8de09b-110731036882043056-2",
        "LastModified": "2023-07-17T19:19:00.647Z"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:19:01.162" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:19:01.163" level="INFO">${output} = /s3v/encrypted/ozone-test-8941437988/copyrange/destination-ad8e58ce-02b0-4111-9b44-fc7e3c8de09b-110731036882043056-2</msg>
<status status="PASS" starttime="20230717 19:19:00.954" endtime="20230717 19:19:01.163"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:19:01.170" level="INFO">/s3v/encrypted/ozone-test-8941437988/copyrange/destination-ad8e58ce-02b0-4111-9b44-fc7e3c8de09b-110731036882043056-2</msg>
<status status="PASS" starttime="20230717 19:19:01.166" endtime="20230717 19:19:01.170"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:19:01.174" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:19:01.171" endtime="20230717 19:19:01.174"/>
</kw>
<msg timestamp="20230717 19:19:01.176" level="INFO">${eTag2} = /s3v/encrypted/ozone-test-8941437988/copyrange/destination-ad8e58ce-02b0-4111-9b44-fc7e3c8de09b-110731036882043056-2</msg>
<status status="PASS" starttime="20230717 19:19:00.949" endtime="20230717 19:19:01.177"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=${eTag2},PartNumber=2}]'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:19:01.202" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id ad8e58ce-02b0-4111-9b44-fc7e3c8de09b-110731036882043056 --bucket encrypted --key ozone-test-8941437988/copyrange/destination --multipart-upload 'Parts=[{ETag=/s3v/encrypted/ozone-test-8941437988/copyrange/destination-ad8e58ce-02b0-4111-9b44-fc7e3c8de09b-110731036882043056-1,PartNumber=1},{ETag=/s3v/encrypted/ozone-test-8941437988/copyrange/destination-ad8e58ce-02b0-4111-9b44-fc7e3c8de09b-110731036882043056-2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:19:03.008" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:19:03.008" level="INFO">${output} = {
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-8941437988/copyrange/destination",
    "ETag": "dac52e55c49cecf9a878e7155497f90cbf458f1fc3616eedba77d994b9e6e2ce"
}</msg>
<status status="PASS" starttime="20230717 19:19:01.191" endtime="20230717 19:19:03.008"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:19:03.011" level="INFO">{
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-8941437988/copyrange/destination",
    "ETag": "dac52e55c49cecf9a878e7155497f90cbf458f1fc3616eedba77d994b9e6e2ce"
}</msg>
<status status="PASS" starttime="20230717 19:19:03.009" endtime="20230717 19:19:03.011"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:19:03.013" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:19:03.012" endtime="20230717 19:19:03.013"/>
</kw>
<status status="PASS" starttime="20230717 19:19:01.185" endtime="20230717 19:19:03.013"/>
</kw>
<msg timestamp="20230717 19:19:03.013" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:19:01.184" endtime="20230717 19:19:03.013"/>
</kw>
<msg timestamp="20230717 19:19:03.014" level="INFO">${output} = {
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-8941437988/copyrange/destination",
    "ETag": "dac52e55c49cecf9a878e7155497f90cbf458f1fc3616eedba77d994b9e6e2ce"
}</msg>
<status status="PASS" starttime="20230717 19:19:01.182" endtime="20230717 19:19:03.014"/>
</kw>
<status status="PASS" starttime="20230717 19:19:01.177" endtime="20230717 19:19:03.014"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination /tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:19:03.023" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-8941437988/copyrange/destination /tmp/part-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:19:06.392" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:19:06.392" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:19:02 GMT",
    "ContentLength": 10485760,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "E...</msg>
<status status="PASS" starttime="20230717 19:19:03.018" endtime="20230717 19:19:06.392"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:19:06.406" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:19:02 GMT",
    "ContentLength": 10485760,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Mon, 17 Jul 2023 19:19:04 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230717 19:19:06.397" endtime="20230717 19:19:06.406"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:19:06.414" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:19:06.409" endtime="20230717 19:19:06.414"/>
</kw>
<status status="PASS" starttime="20230717 19:19:03.017" endtime="20230717 19:19:06.415"/>
</kw>
<msg timestamp="20230717 19:19:06.416" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:19:03.017" endtime="20230717 19:19:06.416"/>
</kw>
<msg timestamp="20230717 19:19:06.416" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:19:02 GMT",
    "ContentLength": 10485760,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "E...</msg>
<status status="PASS" starttime="20230717 19:19:03.016" endtime="20230717 19:19:06.416"/>
</kw>
<status status="PASS" starttime="20230717 19:19:03.014" endtime="20230717 19:19:06.417"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part1</arg>
<arg>/tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:19:06.428" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:19:06.481" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:19:06.482" level="INFO">${output} = 5ee30d02f7393f319fe8762d0f4d0c4d</msg>
<status status="PASS" starttime="20230717 19:19:06.422" endtime="20230717 19:19:06.482"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:19:06.484" level="INFO">5ee30d02f7393f319fe8762d0f4d0c4d</msg>
<status status="PASS" starttime="20230717 19:19:06.483" endtime="20230717 19:19:06.484"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:19:06.485" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:19:06.484" endtime="20230717 19:19:06.486"/>
</kw>
<status status="PASS" starttime="20230717 19:19:06.421" endtime="20230717 19:19:06.486"/>
</kw>
<msg timestamp="20230717 19:19:06.486" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:19:06.420" endtime="20230717 19:19:06.486"/>
</kw>
<msg timestamp="20230717 19:19:06.487" level="INFO">${checksumbefore} = 5ee30d02f7393f319fe8762d0f4d0c4d</msg>
<status status="PASS" starttime="20230717 19:19:06.419" endtime="20230717 19:19:06.487"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:19:06.496" level="INFO">Running command 'md5sum /tmp/part-result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:19:06.541" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:19:06.542" level="INFO">${output} = 5ee30d02f7393f319fe8762d0f4d0c4d</msg>
<status status="PASS" starttime="20230717 19:19:06.490" endtime="20230717 19:19:06.542"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:19:06.544" level="INFO">5ee30d02f7393f319fe8762d0f4d0c4d</msg>
<status status="PASS" starttime="20230717 19:19:06.543" endtime="20230717 19:19:06.545"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:19:06.546" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:19:06.545" endtime="20230717 19:19:06.546"/>
</kw>
<status status="PASS" starttime="20230717 19:19:06.490" endtime="20230717 19:19:06.547"/>
</kw>
<msg timestamp="20230717 19:19:06.547" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:19:06.489" endtime="20230717 19:19:06.547"/>
</kw>
<msg timestamp="20230717 19:19:06.547" level="INFO">${checksumafter} = 5ee30d02f7393f319fe8762d0f4d0c4d</msg>
<status status="PASS" starttime="20230717 19:19:06.487" endtime="20230717 19:19:06.548"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230717 19:19:06.548" endtime="20230717 19:19:06.549"/>
</kw>
<status status="PASS" starttime="20230717 19:19:06.417" endtime="20230717 19:19:06.549"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:18:27.438" endtime="20230717 19:19:06.550"/>
</test>
<test id="s1-s8-s8-t13" name="Test Multipart Upload Put With Copy and range with IfModifiedSince" line="302">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230717 19:19:06.556" level="INFO">${randStr} = 4825590057</msg>
<status status="PASS" starttime="20230717 19:19:06.555" endtime="20230717 19:19:06.557"/>
</kw>
<msg timestamp="20230717 19:19:06.557" level="INFO">${random} = ozone-test-4825590057</msg>
<status status="PASS" starttime="20230717 19:19:06.554" endtime="20230717 19:19:06.557"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230717 19:19:06.558" level="INFO">${PREFIX} = ozone-test-4825590057</msg>
<status status="PASS" starttime="20230717 19:19:06.558" endtime="20230717 19:19:06.558"/>
</kw>
<status status="PASS" starttime="20230717 19:19:06.553" endtime="20230717 19:19:06.559"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>10</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>10</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:19:06.570" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=10 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:19:06.656" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:19:06.656" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:19:06.564" endtime="20230717 19:19:06.656"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:19:06.659" level="INFO"/>
<status status="PASS" starttime="20230717 19:19:06.657" endtime="20230717 19:19:06.659"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:19:06.660" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:19:06.659" endtime="20230717 19:19:06.661"/>
</kw>
<status status="PASS" starttime="20230717 19:19:06.562" endtime="20230717 19:19:06.661"/>
</kw>
<msg timestamp="20230717 19:19:06.661" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:19:06.562" endtime="20230717 19:19:06.661"/>
</kw>
<status status="PASS" starttime="20230717 19:19:06.560" endtime="20230717 19:19:06.662"/>
</kw>
<status status="PASS" starttime="20230717 19:19:06.559" endtime="20230717 19:19:06.662"/>
</kw>
<status status="PASS" starttime="20230717 19:19:06.559" endtime="20230717 19:19:06.662"/>
</kw>
<kw name="Get Current Date" library="DateTime">
<var>${curDate}</var>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20230717 19:19:06.664" level="INFO">${curDate} = 2023-07-17 19:19:06.663</msg>
<status status="PASS" starttime="20230717 19:19:06.662" endtime="20230717 19:19:06.664"/>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<var>${beforeCreate}</var>
<arg>${curDate}</arg>
<arg>1 day</arg>
<doc>Subtracts time from date and returns the resulting date.</doc>
<msg timestamp="20230717 19:19:06.677" level="INFO">${beforeCreate} = 2023-07-16 19:19:06.663</msg>
<status status="PASS" starttime="20230717 19:19:06.664" endtime="20230717 19:19:06.677"/>
</kw>
<kw name="Add Time To Date" library="DateTime">
<var>${tomorrow}</var>
<arg>${curDate}</arg>
<arg>1 day</arg>
<doc>Adds time to date and returns the resulting date.</doc>
<msg timestamp="20230717 19:19:06.680" level="INFO">${tomorrow} = 2023-07-18 19:19:06.663</msg>
<status status="PASS" starttime="20230717 19:19:06.679" endtime="20230717 19:19:06.680"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/source --body /tmp/part1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:19:06.694" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-4825590057/copyrange/source --body /tmp/part1 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:19:33.132" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:19:33.132" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:19:06.687" endtime="20230717 19:19:33.132"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:19:33.136" level="INFO"/>
<status status="PASS" starttime="20230717 19:19:33.134" endtime="20230717 19:19:33.136"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:19:33.139" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:19:33.136" endtime="20230717 19:19:33.139"/>
</kw>
<status status="PASS" starttime="20230717 19:19:06.685" endtime="20230717 19:19:33.140"/>
</kw>
<msg timestamp="20230717 19:19:33.140" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:19:06.684" endtime="20230717 19:19:33.141"/>
</kw>
<msg timestamp="20230717 19:19:33.146" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:19:06.683" endtime="20230717 19:19:33.146"/>
</kw>
<msg timestamp="20230717 19:19:33.146" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230717 19:19:06.681" endtime="20230717 19:19:33.146"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:19:33.167" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-4825590057/copyrange/destination 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:19:34.980" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:19:34.980" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-4825590057/copyrange/destination",
    "UploadId": "20f41046-5fa3-4d39-9acc-32b821b1089d-110731039504269492"
}</msg>
<status status="PASS" starttime="20230717 19:19:33.160" endtime="20230717 19:19:34.980"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:19:34.983" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-4825590057/copyrange/destination",
    "UploadId": "20f41046-5fa3-4d39-9acc-32b821b1089d-110731039504269492"
}</msg>
<status status="PASS" starttime="20230717 19:19:34.981" endtime="20230717 19:19:34.983"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:19:34.995" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:19:34.988" endtime="20230717 19:19:34.995"/>
</kw>
<status status="PASS" starttime="20230717 19:19:33.156" endtime="20230717 19:19:35.000"/>
</kw>
<msg timestamp="20230717 19:19:35.002" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:19:33.154" endtime="20230717 19:19:35.002"/>
</kw>
<msg timestamp="20230717 19:19:35.002" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-4825590057/copyrange/destination",
    "UploadId": "20f41046-5fa3-4d39-9acc-32b821b1089d-110731039504269492"
}</msg>
<status status="PASS" starttime="20230717 19:19:33.150" endtime="20230717 19:19:35.002"/>
</kw>
<msg timestamp="20230717 19:19:35.003" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-4825590057/copyrange/destination",
    "UploadId": "20f41046-5fa3-4d39-9acc-32b821b1089d-110731039504269492"
}</msg>
<status status="PASS" starttime="20230717 19:19:33.147" endtime="20230717 19:19:35.003"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:19:35.044" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-4825590057/copyrange/destination",
    "UploadId": "20f41046-5fa3-4d39-9acc-32b821b1089d-110731039504269492"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:19:35.228" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:19:35.228" level="INFO">${output} = 20f41046-5fa3-4d39-9acc-32b821b1089d-110731039504269492</msg>
<status status="PASS" starttime="20230717 19:19:35.018" endtime="20230717 19:19:35.229"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:19:35.231" level="INFO">20f41046-5fa3-4d39-9acc-32b821b1089d-110731039504269492</msg>
<status status="PASS" starttime="20230717 19:19:35.229" endtime="20230717 19:19:35.231"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:19:35.232" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:19:35.231" endtime="20230717 19:19:35.232"/>
</kw>
<msg timestamp="20230717 19:19:35.233" level="INFO">${uploadID} = 20f41046-5fa3-4d39-9acc-32b821b1089d-110731039504269492</msg>
<status status="PASS" starttime="20230717 19:19:35.011" endtime="20230717 19:19:35.233"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:19:35.233" endtime="20230717 19:19:35.234"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:19:35.234" endtime="20230717 19:19:35.236"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/source</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:19:35.261" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket encrypted --key ozone-test-4825590057/copyrange/source 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:19:37.151" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:19:37.151" level="INFO">${output} = {
    "LastModified": "Mon, 17 Jul 2023 19:19:32 GMT",
    "ContentLength": 10485760,
    "ETag": "2023-07-17T19:19:32.840Z",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
...</msg>
<status status="PASS" starttime="20230717 19:19:35.244" endtime="20230717 19:19:37.151"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:19:37.154" level="INFO">{
    "LastModified": "Mon, 17 Jul 2023 19:19:32 GMT",
    "ContentLength": 10485760,
    "ETag": "2023-07-17T19:19:32.840Z",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Mon, 17 Jul 2023 19:19:36 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230717 19:19:37.152" endtime="20230717 19:19:37.154"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:19:37.155" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:19:37.154" endtime="20230717 19:19:37.155"/>
</kw>
<status status="PASS" starttime="20230717 19:19:35.242" endtime="20230717 19:19:37.155"/>
</kw>
<msg timestamp="20230717 19:19:37.155" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:19:35.241" endtime="20230717 19:19:37.156"/>
</kw>
<msg timestamp="20230717 19:19:37.156" level="INFO">${output} = {
    "LastModified": "Mon, 17 Jul 2023 19:19:32 GMT",
    "ContentLength": 10485760,
    "ETag": "2023-07-17T19:19:32.840Z",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
...</msg>
<status status="PASS" starttime="20230717 19:19:35.239" endtime="20230717 19:19:37.156"/>
</kw>
<msg timestamp="20230717 19:19:37.157" level="INFO">${result} = {
    "LastModified": "Mon, 17 Jul 2023 19:19:32 GMT",
    "ContentLength": 10485760,
    "ETag": "2023-07-17T19:19:32.840Z",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
...</msg>
<status status="PASS" starttime="20230717 19:19:35.236" endtime="20230717 19:19:37.157"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${lastModified}</var>
<arg>echo '${result}' | jq -r '.LastModified'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:19:37.163" level="INFO">Running command 'echo '{
    "LastModified": "Mon, 17 Jul 2023 19:19:32 GMT",
    "ContentLength": 10485760,
    "ETag": "2023-07-17T19:19:32.840Z",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Mon, 17 Jul 2023 19:19:36 GMT",
    "Metadata": {}
}' | jq -r '.LastModified' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:19:37.230" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:19:37.230" level="INFO">${output} = Mon, 17 Jul 2023 19:19:32 GMT</msg>
<status status="PASS" starttime="20230717 19:19:37.158" endtime="20230717 19:19:37.230"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:19:37.232" level="INFO">Mon, 17 Jul 2023 19:19:32 GMT</msg>
<status status="PASS" starttime="20230717 19:19:37.231" endtime="20230717 19:19:37.232"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:19:37.233" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:19:37.232" endtime="20230717 19:19:37.233"/>
</kw>
<msg timestamp="20230717 19:19:37.234" level="INFO">${lastModified} = Mon, 17 Jul 2023 19:19:32 GMT</msg>
<status status="PASS" starttime="20230717 19:19:37.157" endtime="20230717 19:19:37.234"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${LastModified}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:19:37.234" endtime="20230717 19:19:37.235"/>
</kw>
<kw name="Convert Date" library="DateTime">
<var>${lmDate}</var>
<arg>${lastModified}</arg>
<arg>date_format=%a, %d %b %Y %H:%M:%S %Z</arg>
<doc>Converts between supported `date formats`.</doc>
<msg timestamp="20230717 19:19:37.243" level="INFO">${lmDate} = 2023-07-17 19:19:32.000</msg>
<status status="PASS" starttime="20230717 19:19:37.235" endtime="20230717 19:19:37.243"/>
</kw>
<kw name="Add Time To Date" library="DateTime">
<var>${afterCreate}</var>
<arg>${lmDate}</arg>
<arg>3 seconds</arg>
<doc>Adds time to date and returns the resulting date.</doc>
<msg timestamp="20230717 19:19:37.248" level="INFO">${afterCreate} = 2023-07-17 19:19:35.000</msg>
<status status="PASS" starttime="20230717 19:19:37.245" endtime="20230717 19:19:37.248"/>
</kw>
<kw name="Wait Til Date Past">
<arg>${afterCreate}</arg>
<kw name="Get Current Date" library="DateTime">
<var>${latestDate}</var>
<arg>UTC</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20230717 19:19:37.252" level="INFO">${latestDate} = 2023-07-17 19:19:37.252</msg>
<status status="PASS" starttime="20230717 19:19:37.251" endtime="20230717 19:19:37.252"/>
</kw>
<kw name="Subtract Date From Date" library="DateTime">
<var>${sleepSeconds}</var>
<arg>${date}</arg>
<arg>${latestDate}</arg>
<doc>Subtracts date from another date and returns time between.</doc>
<msg timestamp="20230717 19:19:37.254" level="INFO">${sleepSeconds} = -2.252</msg>
<status status="PASS" starttime="20230717 19:19:37.252" endtime="20230717 19:19:37.254"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${sleepSeconds} &gt; 0</arg>
<arg>Sleep</arg>
<arg>${sleepSeconds}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230717 19:19:37.254" endtime="20230717 19:19:37.256"/>
</kw>
<status status="PASS" starttime="20230717 19:19:37.249" endtime="20230717 19:19:37.258"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '${afterCreate}'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:19:37.283" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket encrypted --key ozone-test-4825590057/copyrange/destination --upload-id 20f41046-5fa3-4d39-9acc-32b821b1089d-110731039504269492 --part-number 1 --copy-source encrypted/ozone-test-4825590057/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '2023-07-17 19:19:35.000' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:19:39.063" level="INFO">${rc} = 255</msg>
<msg timestamp="20230717 19:19:39.063" level="INFO">${output} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20230717 19:19:37.271" endtime="20230717 19:19:39.063"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:19:39.066" level="INFO">
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20230717 19:19:39.064" endtime="20230717 19:19:39.066"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:19:39.067" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:19:39.066" endtime="20230717 19:19:39.067"/>
</kw>
<msg timestamp="20230717 19:19:39.067" level="INFO">${output} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20230717 19:19:37.260" endtime="20230717 19:19:39.067"/>
</kw>
<msg timestamp="20230717 19:19:39.068" level="INFO">${result} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20230717 19:19:37.258" endtime="20230717 19:19:39.068"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PreconditionFailed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:19:39.068" endtime="20230717 19:19:39.069"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 2 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=10485758-10485759 --copy-source-if-unmodified-since '${beforeCreate}'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:19:39.075" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket encrypted --key ozone-test-4825590057/copyrange/destination --upload-id 20f41046-5fa3-4d39-9acc-32b821b1089d-110731039504269492 --part-number 2 --copy-source encrypted/ozone-test-4825590057/copyrange/source --copy-source-range bytes=10485758-10485759 --copy-source-if-unmodified-since '2023-07-16 19:19:06.663' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:19:40.531" level="INFO">${rc} = 255</msg>
<msg timestamp="20230717 19:19:40.531" level="INFO">${output} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20230717 19:19:39.071" endtime="20230717 19:19:40.531"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:19:40.533" level="INFO">
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20230717 19:19:40.532" endtime="20230717 19:19:40.533"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:19:40.536" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:19:40.535" endtime="20230717 19:19:40.536"/>
</kw>
<msg timestamp="20230717 19:19:40.536" level="INFO">${output} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20230717 19:19:39.070" endtime="20230717 19:19:40.536"/>
</kw>
<msg timestamp="20230717 19:19:40.537" level="INFO">${result} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20230717 19:19:39.069" endtime="20230717 19:19:40.537"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PreconditionFailed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:19:40.537" endtime="20230717 19:19:40.538"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '${beforeCreate}'</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:19:40.551" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket encrypted --key ozone-test-4825590057/copyrange/destination --upload-id 20f41046-5fa3-4d39-9acc-32b821b1089d-110731039504269492 --part-number 1 --copy-source encrypted/ozone-test-4825590057/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '2023-07-16 19:19:06.663' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:19:44.127" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:19:44.127" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/s3v/encrypted/ozone-test-4825590057/copyrange/destination-20f41046-5fa3-4d39-9acc-32b821b1089d-110731039504269492-1",
        "LastModified": "2023-07-17T19...</msg>
<status status="PASS" starttime="20230717 19:19:40.544" endtime="20230717 19:19:44.127"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:19:44.138" level="INFO">{
    "CopyPartResult": {
        "ETag": "/s3v/encrypted/ozone-test-4825590057/copyrange/destination-20f41046-5fa3-4d39-9acc-32b821b1089d-110731039504269492-1",
        "LastModified": "2023-07-17T19:19:43.540Z"
    }
}</msg>
<status status="PASS" starttime="20230717 19:19:44.132" endtime="20230717 19:19:44.138"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:19:44.139" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:19:44.138" endtime="20230717 19:19:44.139"/>
</kw>
<msg timestamp="20230717 19:19:44.140" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/s3v/encrypted/ozone-test-4825590057/copyrange/destination-20f41046-5fa3-4d39-9acc-32b821b1089d-110731039504269492-1",
        "LastModified": "2023-07-17T19...</msg>
<status status="PASS" starttime="20230717 19:19:40.541" endtime="20230717 19:19:44.140"/>
</kw>
<msg timestamp="20230717 19:19:44.140" level="INFO">${result} = {
    "CopyPartResult": {
        "ETag": "/s3v/encrypted/ozone-test-4825590057/copyrange/destination-20f41046-5fa3-4d39-9acc-32b821b1089d-110731039504269492-1",
        "LastModified": "2023-07-17T19...</msg>
<status status="PASS" starttime="20230717 19:19:40.539" endtime="20230717 19:19:44.140"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:19:44.140" endtime="20230717 19:19:44.143"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:19:44.143" endtime="20230717 19:19:44.148"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:19:44.182" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "ETag": "/s3v/encrypted/ozone-test-4825590057/copyrange/destination-20f41046-5fa3-4d39-9acc-32b821b1089d-110731039504269492-1",
        "LastModified": "2023-07-17T19:19:43.540Z"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:19:44.412" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:19:44.412" level="INFO">${output} = /s3v/encrypted/ozone-test-4825590057/copyrange/destination-20f41046-5fa3-4d39-9acc-32b821b1089d-110731039504269492-1</msg>
<status status="PASS" starttime="20230717 19:19:44.155" endtime="20230717 19:19:44.412"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:19:44.419" level="INFO">/s3v/encrypted/ozone-test-4825590057/copyrange/destination-20f41046-5fa3-4d39-9acc-32b821b1089d-110731039504269492-1</msg>
<status status="PASS" starttime="20230717 19:19:44.415" endtime="20230717 19:19:44.419"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:19:44.421" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:19:44.420" endtime="20230717 19:19:44.421"/>
</kw>
<msg timestamp="20230717 19:19:44.422" level="INFO">${eTag1} = /s3v/encrypted/ozone-test-4825590057/copyrange/destination-20f41046-5fa3-4d39-9acc-32b821b1089d-110731039504269492-1</msg>
<status status="PASS" starttime="20230717 19:19:44.151" endtime="20230717 19:19:44.422"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 2 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=10485758-10485759 --copy-source-if-unmodified-since '${afterCreate}'</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:19:44.465" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket encrypted --key ozone-test-4825590057/copyrange/destination --upload-id 20f41046-5fa3-4d39-9acc-32b821b1089d-110731039504269492 --part-number 2 --copy-source encrypted/ozone-test-4825590057/copyrange/source --copy-source-range bytes=10485758-10485759 --copy-source-if-unmodified-since '2023-07-17 19:19:35.000' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:19:46.481" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:19:46.481" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/s3v/encrypted/ozone-test-4825590057/copyrange/destination-20f41046-5fa3-4d39-9acc-32b821b1089d-110731039504269492-2",
        "LastModified": "2023-07-17T19...</msg>
<status status="PASS" starttime="20230717 19:19:44.438" endtime="20230717 19:19:46.481"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:19:46.487" level="INFO">{
    "CopyPartResult": {
        "ETag": "/s3v/encrypted/ozone-test-4825590057/copyrange/destination-20f41046-5fa3-4d39-9acc-32b821b1089d-110731039504269492-2",
        "LastModified": "2023-07-17T19:19:46.313Z"
    }
}</msg>
<status status="PASS" starttime="20230717 19:19:46.481" endtime="20230717 19:19:46.487"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:19:46.490" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:19:46.488" endtime="20230717 19:19:46.490"/>
</kw>
<msg timestamp="20230717 19:19:46.491" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/s3v/encrypted/ozone-test-4825590057/copyrange/destination-20f41046-5fa3-4d39-9acc-32b821b1089d-110731039504269492-2",
        "LastModified": "2023-07-17T19...</msg>
<status status="PASS" starttime="20230717 19:19:44.432" endtime="20230717 19:19:46.491"/>
</kw>
<msg timestamp="20230717 19:19:46.492" level="INFO">${result} = {
    "CopyPartResult": {
        "ETag": "/s3v/encrypted/ozone-test-4825590057/copyrange/destination-20f41046-5fa3-4d39-9acc-32b821b1089d-110731039504269492-2",
        "LastModified": "2023-07-17T19...</msg>
<status status="PASS" starttime="20230717 19:19:44.427" endtime="20230717 19:19:46.492"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:19:46.492" endtime="20230717 19:19:46.493"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:19:46.494" endtime="20230717 19:19:46.495"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:19:46.503" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "ETag": "/s3v/encrypted/ozone-test-4825590057/copyrange/destination-20f41046-5fa3-4d39-9acc-32b821b1089d-110731039504269492-2",
        "LastModified": "2023-07-17T19:19:46.313Z"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:19:46.586" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:19:46.586" level="INFO">${output} = /s3v/encrypted/ozone-test-4825590057/copyrange/destination-20f41046-5fa3-4d39-9acc-32b821b1089d-110731039504269492-2</msg>
<status status="PASS" starttime="20230717 19:19:46.496" endtime="20230717 19:19:46.586"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:19:46.589" level="INFO">/s3v/encrypted/ozone-test-4825590057/copyrange/destination-20f41046-5fa3-4d39-9acc-32b821b1089d-110731039504269492-2</msg>
<status status="PASS" starttime="20230717 19:19:46.587" endtime="20230717 19:19:46.589"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:19:46.590" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:19:46.589" endtime="20230717 19:19:46.590"/>
</kw>
<msg timestamp="20230717 19:19:46.591" level="INFO">${eTag2} = /s3v/encrypted/ozone-test-4825590057/copyrange/destination-20f41046-5fa3-4d39-9acc-32b821b1089d-110731039504269492-2</msg>
<status status="PASS" starttime="20230717 19:19:46.495" endtime="20230717 19:19:46.591"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '${tomorrow}'</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:19:46.600" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket encrypted --key ozone-test-4825590057/copyrange/destination --upload-id 20f41046-5fa3-4d39-9acc-32b821b1089d-110731039504269492 --part-number 1 --copy-source encrypted/ozone-test-4825590057/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '2023-07-18 19:19:06.663' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:19:49.835" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:19:49.835" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/s3v/encrypted/ozone-test-4825590057/copyrange/destination-20f41046-5fa3-4d39-9acc-32b821b1089d-110731039504269492-1",
        "LastModified": "2023-07-17T19...</msg>
<status status="PASS" starttime="20230717 19:19:46.595" endtime="20230717 19:19:49.836"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:19:49.865" level="INFO">{
    "CopyPartResult": {
        "ETag": "/s3v/encrypted/ozone-test-4825590057/copyrange/destination-20f41046-5fa3-4d39-9acc-32b821b1089d-110731039504269492-1",
        "LastModified": "2023-07-17T19:19:49.304Z"
    }
}</msg>
<status status="PASS" starttime="20230717 19:19:49.857" endtime="20230717 19:19:49.865"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:19:49.878" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:19:49.872" endtime="20230717 19:19:49.878"/>
</kw>
<msg timestamp="20230717 19:19:49.881" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/s3v/encrypted/ozone-test-4825590057/copyrange/destination-20f41046-5fa3-4d39-9acc-32b821b1089d-110731039504269492-1",
        "LastModified": "2023-07-17T19...</msg>
<status status="PASS" starttime="20230717 19:19:46.594" endtime="20230717 19:19:49.881"/>
</kw>
<msg timestamp="20230717 19:19:49.885" level="INFO">${result} = {
    "CopyPartResult": {
        "ETag": "/s3v/encrypted/ozone-test-4825590057/copyrange/destination-20f41046-5fa3-4d39-9acc-32b821b1089d-110731039504269492-1",
        "LastModified": "2023-07-17T19...</msg>
<status status="PASS" starttime="20230717 19:19:46.592" endtime="20230717 19:19:49.887"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:19:49.887" endtime="20230717 19:19:49.891"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:19:49.892" endtime="20230717 19:19:49.892"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:19:49.909" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "ETag": "/s3v/encrypted/ozone-test-4825590057/copyrange/destination-20f41046-5fa3-4d39-9acc-32b821b1089d-110731039504269492-1",
        "LastModified": "2023-07-17T19:19:49.304Z"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:19:50.116" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:19:50.116" level="INFO">${output} = /s3v/encrypted/ozone-test-4825590057/copyrange/destination-20f41046-5fa3-4d39-9acc-32b821b1089d-110731039504269492-1</msg>
<status status="PASS" starttime="20230717 19:19:49.902" endtime="20230717 19:19:50.116"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:19:50.119" level="INFO">/s3v/encrypted/ozone-test-4825590057/copyrange/destination-20f41046-5fa3-4d39-9acc-32b821b1089d-110731039504269492-1</msg>
<status status="PASS" starttime="20230717 19:19:50.117" endtime="20230717 19:19:50.119"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:19:50.120" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:19:50.120" endtime="20230717 19:19:50.121"/>
</kw>
<msg timestamp="20230717 19:19:50.121" level="INFO">${eTag1} = /s3v/encrypted/ozone-test-4825590057/copyrange/destination-20f41046-5fa3-4d39-9acc-32b821b1089d-110731039504269492-1</msg>
<status status="PASS" starttime="20230717 19:19:49.893" endtime="20230717 19:19:50.121"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=${eTag2},PartNumber=2}]'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:19:50.149" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 20f41046-5fa3-4d39-9acc-32b821b1089d-110731039504269492 --bucket encrypted --key ozone-test-4825590057/copyrange/destination --multipart-upload 'Parts=[{ETag=/s3v/encrypted/ozone-test-4825590057/copyrange/destination-20f41046-5fa3-4d39-9acc-32b821b1089d-110731039504269492-1,PartNumber=1},{ETag=/s3v/encrypted/ozone-test-4825590057/copyrange/destination-20f41046-5fa3-4d39-9acc-32b821b1089d-110731039504269492-2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:19:52.555" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:19:52.555" level="INFO">${output} = {
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-4825590057/copyrange/destination",
    "ETag": "647e294e5fb1024dfbd9f3c628ef69d16ad0af262e86d58d9b007c837f6f0fb5"
}</msg>
<status status="PASS" starttime="20230717 19:19:50.142" endtime="20230717 19:19:52.556"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:19:52.561" level="INFO">{
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-4825590057/copyrange/destination",
    "ETag": "647e294e5fb1024dfbd9f3c628ef69d16ad0af262e86d58d9b007c837f6f0fb5"
}</msg>
<status status="PASS" starttime="20230717 19:19:52.559" endtime="20230717 19:19:52.561"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:19:52.563" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:19:52.562" endtime="20230717 19:19:52.563"/>
</kw>
<status status="PASS" starttime="20230717 19:19:50.134" endtime="20230717 19:19:52.563"/>
</kw>
<msg timestamp="20230717 19:19:52.563" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:19:50.133" endtime="20230717 19:19:52.563"/>
</kw>
<msg timestamp="20230717 19:19:52.564" level="INFO">${output} = {
    "Location": "encrypted",
    "Bucket": "encrypted",
    "Key": "ozone-test-4825590057/copyrange/destination",
    "ETag": "647e294e5fb1024dfbd9f3c628ef69d16ad0af262e86d58d9b007c837f6f0fb5"
}</msg>
<status status="PASS" starttime="20230717 19:19:50.131" endtime="20230717 19:19:52.564"/>
</kw>
<status status="PASS" starttime="20230717 19:19:50.122" endtime="20230717 19:19:52.564"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination /tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:19:52.571" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-4825590057/copyrange/destination /tmp/part-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:19:55.942" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:19:55.942" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:19:52 GMT",
    "ContentLength": 10485760,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "E...</msg>
<status status="PASS" starttime="20230717 19:19:52.566" endtime="20230717 19:19:55.942"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:19:55.944" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:19:52 GMT",
    "ContentLength": 10485760,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Mon, 17 Jul 2023 19:19:53 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230717 19:19:55.943" endtime="20230717 19:19:55.944"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:19:55.945" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:19:55.945" endtime="20230717 19:19:55.945"/>
</kw>
<status status="PASS" starttime="20230717 19:19:52.566" endtime="20230717 19:19:55.946"/>
</kw>
<msg timestamp="20230717 19:19:55.946" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:19:52.565" endtime="20230717 19:19:55.946"/>
</kw>
<msg timestamp="20230717 19:19:55.947" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:19:52 GMT",
    "ContentLength": 10485760,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "E...</msg>
<status status="PASS" starttime="20230717 19:19:52.565" endtime="20230717 19:19:55.947"/>
</kw>
<status status="PASS" starttime="20230717 19:19:52.564" endtime="20230717 19:19:55.947"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part1</arg>
<arg>/tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:19:55.953" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:19:56.006" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:19:56.006" level="INFO">${output} = 35193f69f3be9b7ed374a9b5a69a6a61</msg>
<status status="PASS" starttime="20230717 19:19:55.949" endtime="20230717 19:19:56.006"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:19:56.009" level="INFO">35193f69f3be9b7ed374a9b5a69a6a61</msg>
<status status="PASS" starttime="20230717 19:19:56.008" endtime="20230717 19:19:56.009"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:19:56.010" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:19:56.009" endtime="20230717 19:19:56.010"/>
</kw>
<status status="PASS" starttime="20230717 19:19:55.949" endtime="20230717 19:19:56.011"/>
</kw>
<msg timestamp="20230717 19:19:56.011" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:19:55.948" endtime="20230717 19:19:56.011"/>
</kw>
<msg timestamp="20230717 19:19:56.011" level="INFO">${checksumbefore} = 35193f69f3be9b7ed374a9b5a69a6a61</msg>
<status status="PASS" starttime="20230717 19:19:55.948" endtime="20230717 19:19:56.011"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:19:56.021" level="INFO">Running command 'md5sum /tmp/part-result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:19:56.068" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:19:56.068" level="INFO">${output} = 35193f69f3be9b7ed374a9b5a69a6a61</msg>
<status status="PASS" starttime="20230717 19:19:56.014" endtime="20230717 19:19:56.069"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:19:56.073" level="INFO">35193f69f3be9b7ed374a9b5a69a6a61</msg>
<status status="PASS" starttime="20230717 19:19:56.071" endtime="20230717 19:19:56.073"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:19:56.074" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:19:56.073" endtime="20230717 19:19:56.074"/>
</kw>
<status status="PASS" starttime="20230717 19:19:56.013" endtime="20230717 19:19:56.074"/>
</kw>
<msg timestamp="20230717 19:19:56.074" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:19:56.013" endtime="20230717 19:19:56.074"/>
</kw>
<msg timestamp="20230717 19:19:56.074" level="INFO">${checksumafter} = 35193f69f3be9b7ed374a9b5a69a6a61</msg>
<status status="PASS" starttime="20230717 19:19:56.012" endtime="20230717 19:19:56.074"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230717 19:19:56.076" endtime="20230717 19:19:56.077"/>
</kw>
<status status="PASS" starttime="20230717 19:19:55.947" endtime="20230717 19:19:56.077"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:19:06.551" endtime="20230717 19:19:56.078"/>
</test>
<test id="s1-s8-s8-t14" name="Test Multipart Upload list" line="355">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230717 19:19:56.084" level="INFO">${randStr} = 7217803904</msg>
<status status="PASS" starttime="20230717 19:19:56.084" endtime="20230717 19:19:56.084"/>
</kw>
<msg timestamp="20230717 19:19:56.085" level="INFO">${random} = ozone-test-7217803904</msg>
<status status="PASS" starttime="20230717 19:19:56.083" endtime="20230717 19:19:56.085"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230717 19:19:56.085" level="INFO">${PREFIX} = ozone-test-7217803904</msg>
<status status="PASS" starttime="20230717 19:19:56.085" endtime="20230717 19:19:56.086"/>
</kw>
<status status="PASS" starttime="20230717 19:19:56.082" endtime="20230717 19:19:56.086"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/listtest/key1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:19:56.099" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-7217803904/listtest/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:19:57.790" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:19:57.790" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-7217803904/listtest/key1",
    "UploadId": "f8a73450-6a25-4d50-a9f8-12426510afe7-110731041015726266"
}</msg>
<status status="PASS" starttime="20230717 19:19:56.090" endtime="20230717 19:19:57.791"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:19:57.793" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-7217803904/listtest/key1",
    "UploadId": "f8a73450-6a25-4d50-a9f8-12426510afe7-110731041015726266"
}</msg>
<status status="PASS" starttime="20230717 19:19:57.791" endtime="20230717 19:19:57.793"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:19:57.794" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:19:57.794" endtime="20230717 19:19:57.795"/>
</kw>
<status status="PASS" starttime="20230717 19:19:56.090" endtime="20230717 19:19:57.795"/>
</kw>
<msg timestamp="20230717 19:19:57.795" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:19:56.087" endtime="20230717 19:19:57.795"/>
</kw>
<msg timestamp="20230717 19:19:57.795" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-7217803904/listtest/key1",
    "UploadId": "f8a73450-6a25-4d50-a9f8-12426510afe7-110731041015726266"
}</msg>
<status status="PASS" starttime="20230717 19:19:56.087" endtime="20230717 19:19:57.796"/>
</kw>
<msg timestamp="20230717 19:19:57.796" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-7217803904/listtest/key1",
    "UploadId": "f8a73450-6a25-4d50-a9f8-12426510afe7-110731041015726266"
}</msg>
<status status="PASS" starttime="20230717 19:19:56.086" endtime="20230717 19:19:57.796"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID1}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:19:57.806" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-7217803904/listtest/key1",
    "UploadId": "f8a73450-6a25-4d50-a9f8-12426510afe7-110731041015726266"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:19:57.870" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:19:57.871" level="INFO">${output} = f8a73450-6a25-4d50-a9f8-12426510afe7-110731041015726266</msg>
<status status="PASS" starttime="20230717 19:19:57.801" endtime="20230717 19:19:57.871"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:19:57.875" level="INFO">f8a73450-6a25-4d50-a9f8-12426510afe7-110731041015726266</msg>
<status status="PASS" starttime="20230717 19:19:57.873" endtime="20230717 19:19:57.875"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:19:57.878" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:19:57.877" endtime="20230717 19:19:57.878"/>
</kw>
<msg timestamp="20230717 19:19:57.878" level="INFO">${uploadID1} = f8a73450-6a25-4d50-a9f8-12426510afe7-110731041015726266</msg>
<status status="PASS" starttime="20230717 19:19:57.796" endtime="20230717 19:19:57.878"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:19:57.883" endtime="20230717 19:19:57.884"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/listtest/key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:19:57.884" endtime="20230717 19:19:57.885"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:19:57.885" endtime="20230717 19:19:57.886"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/listtest/key2</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:19:57.898" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket encrypted --key ozone-test-7217803904/listtest/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:20:00.071" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:20:00.071" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-7217803904/listtest/key2",
    "UploadId": "d7f9b8c2-54ec-4141-9627-5c920d525624-110731041162657979"
}</msg>
<status status="PASS" starttime="20230717 19:19:57.891" endtime="20230717 19:20:00.071"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:20:00.078" level="INFO">{
    "Bucket": "encrypted",
    "Key": "ozone-test-7217803904/listtest/key2",
    "UploadId": "d7f9b8c2-54ec-4141-9627-5c920d525624-110731041162657979"
}</msg>
<status status="PASS" starttime="20230717 19:20:00.073" endtime="20230717 19:20:00.079"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:20:00.081" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:20:00.079" endtime="20230717 19:20:00.081"/>
</kw>
<status status="PASS" starttime="20230717 19:19:57.890" endtime="20230717 19:20:00.081"/>
</kw>
<msg timestamp="20230717 19:20:00.081" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:19:57.889" endtime="20230717 19:20:00.084"/>
</kw>
<msg timestamp="20230717 19:20:00.084" level="INFO">${output} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-7217803904/listtest/key2",
    "UploadId": "d7f9b8c2-54ec-4141-9627-5c920d525624-110731041162657979"
}</msg>
<status status="PASS" starttime="20230717 19:19:57.888" endtime="20230717 19:20:00.084"/>
</kw>
<msg timestamp="20230717 19:20:00.084" level="INFO">${result} = {
    "Bucket": "encrypted",
    "Key": "ozone-test-7217803904/listtest/key2",
    "UploadId": "d7f9b8c2-54ec-4141-9627-5c920d525624-110731041162657979"
}</msg>
<status status="PASS" starttime="20230717 19:19:57.887" endtime="20230717 19:20:00.084"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID2}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:20:00.099" level="INFO">Running command 'echo '{
    "Bucket": "encrypted",
    "Key": "ozone-test-7217803904/listtest/key2",
    "UploadId": "d7f9b8c2-54ec-4141-9627-5c920d525624-110731041162657979"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:20:00.232" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:20:00.232" level="INFO">${output} = d7f9b8c2-54ec-4141-9627-5c920d525624-110731041162657979</msg>
<status status="PASS" starttime="20230717 19:20:00.090" endtime="20230717 19:20:00.232"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:20:00.240" level="INFO">d7f9b8c2-54ec-4141-9627-5c920d525624-110731041162657979</msg>
<status status="PASS" starttime="20230717 19:20:00.235" endtime="20230717 19:20:00.240"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:20:00.246" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:20:00.241" endtime="20230717 19:20:00.247"/>
</kw>
<msg timestamp="20230717 19:20:00.249" level="INFO">${uploadID2} = d7f9b8c2-54ec-4141-9627-5c920d525624-110731041162657979</msg>
<status status="PASS" starttime="20230717 19:20:00.086" endtime="20230717 19:20:00.249"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:20:00.251" endtime="20230717 19:20:00.253"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/listtest/key2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:20:00.253" endtime="20230717 19:20:00.255"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:20:00.255" endtime="20230717 19:20:00.256"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-multipart-uploads --bucket ${BUCKET} --prefix ${PREFIX}/listtest</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:20:00.280" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-multipart-uploads --bucket encrypted --prefix ozone-test-7217803904/listtest 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:20:01.948" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:20:01.949" level="INFO">${output} = {
    "Uploads": [
        {
            "UploadId": "f8a73450-6a25-4d50-a9f8-12426510afe7-110731041015726266",
            "Key": "ozone-test-7217803904/listtest/key1",
            "Initiated": "2023...</msg>
<status status="PASS" starttime="20230717 19:20:00.267" endtime="20230717 19:20:01.949"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:20:01.953" level="INFO">{
    "Uploads": [
        {
            "UploadId": "f8a73450-6a25-4d50-a9f8-12426510afe7-110731041015726266",
            "Key": "ozone-test-7217803904/listtest/key1",
            "Initiated": "2023-07-17T19:19:57.530Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "d7f9b8c2-54ec-4141-9627-5c920d525624-110731041162657979",
            "Key": "ozone-test-7217803904/listtest/key2",
            "Initiated": "2023-07-17T19:19:59.772Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        }
    ]
}</msg>
<status status="PASS" starttime="20230717 19:20:01.950" endtime="20230717 19:20:01.954"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:20:01.956" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:20:01.955" endtime="20230717 19:20:01.956"/>
</kw>
<status status="PASS" starttime="20230717 19:20:00.264" endtime="20230717 19:20:01.958"/>
</kw>
<msg timestamp="20230717 19:20:01.958" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:20:00.264" endtime="20230717 19:20:01.959"/>
</kw>
<msg timestamp="20230717 19:20:01.960" level="INFO">${output} = {
    "Uploads": [
        {
            "UploadId": "f8a73450-6a25-4d50-a9f8-12426510afe7-110731041015726266",
            "Key": "ozone-test-7217803904/listtest/key1",
            "Initiated": "2023...</msg>
<status status="PASS" starttime="20230717 19:20:00.260" endtime="20230717 19:20:01.960"/>
</kw>
<msg timestamp="20230717 19:20:01.961" level="INFO">${result} = {
    "Uploads": [
        {
            "UploadId": "f8a73450-6a25-4d50-a9f8-12426510afe7-110731041015726266",
            "Key": "ozone-test-7217803904/listtest/key1",
            "Initiated": "2023...</msg>
<status status="PASS" starttime="20230717 19:20:00.258" endtime="20230717 19:20:01.961"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${uploadID1}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:20:01.961" endtime="20230717 19:20:01.963"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${uploadID2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:20:01.963" endtime="20230717 19:20:01.964"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${count}</var>
<arg>echo '${result}' | jq -r '.Uploads | length'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:20:01.978" level="INFO">Running command 'echo '{
    "Uploads": [
        {
            "UploadId": "f8a73450-6a25-4d50-a9f8-12426510afe7-110731041015726266",
            "Key": "ozone-test-7217803904/listtest/key1",
            "Initiated": "2023-07-17T19:19:57.530Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "d7f9b8c2-54ec-4141-9627-5c920d525624-110731041162657979",
            "Key": "ozone-test-7217803904/listtest/key2",
            "Initiated": "2023-07-17T19:19:59.772Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        }
    ]
}' | jq -r '.Uploads | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:20:02.056" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:20:02.056" level="INFO">${output} = 2</msg>
<status status="PASS" starttime="20230717 19:20:01.972" endtime="20230717 19:20:02.056"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:20:02.060" level="INFO">2</msg>
<status status="PASS" starttime="20230717 19:20:02.057" endtime="20230717 19:20:02.060"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:20:02.062" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:20:02.060" endtime="20230717 19:20:02.062"/>
</kw>
<msg timestamp="20230717 19:20:02.063" level="INFO">${count} = 2</msg>
<status status="PASS" starttime="20230717 19:20:01.965" endtime="20230717 19:20:02.063"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${count}</arg>
<arg>2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230717 19:20:02.063" endtime="20230717 19:20:02.064"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:19:56.079" endtime="20230717 19:20:02.066"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20230717 19:11:10.435" endtime="20230717 19:20:02.070"/>
</suite>
<suite id="s1-s8-s9" name="Objectcopy" source="/opt/hadoop/smoketest/s3/objectcopy.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20230717 19:20:02.122" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:20:02.121" endtime="20230717 19:20:02.122"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20230717 19:20:02.123" endtime="20230717 19:20:02.123"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20230717 19:20:02.123" endtime="20230717 19:20:02.123"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:20:02.124" endtime="20230717 19:20:02.124"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:20:02.125" endtime="20230717 19:20:02.125"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:20:02.126" endtime="20230717 19:20:02.126"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:20:02.126" endtime="20230717 19:20:02.126"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:20:02.127" endtime="20230717 19:20:02.127"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20230717 19:20:02.127" endtime="20230717 19:20:02.127"/>
</kw>
<status status="PASS" starttime="20230717 19:20:02.121" endtime="20230717 19:20:02.127"/>
</kw>
<test id="s1-s8-s9-t1" name="Copy Object Happy Scenario" line="37">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${DESTBUCKET}' == 'generated1'</arg>
<arg>Create Dest Bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create Dest Bucket">
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230717 19:20:02.138" level="INFO">${postfix} = 62560</msg>
<status status="PASS" starttime="20230717 19:20:02.135" endtime="20230717 19:20:02.138"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${DESTBUCKET}</arg>
<arg>destbucket-${postfix}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230717 19:20:02.139" level="INFO">${DESTBUCKET} = destbucket-62560</msg>
<status status="PASS" starttime="20230717 19:20:02.138" endtime="20230717 19:20:02.141"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>create-bucket --bucket ${DESTBUCKET}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:20:02.151" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket destbucket-62560 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:20:03.561" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:20:03.561" level="INFO">${output} = {
    "Location": "http://s3g:9878/destbucket-62560"
}</msg>
<status status="PASS" starttime="20230717 19:20:02.145" endtime="20230717 19:20:03.561"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:20:03.564" level="INFO">{
    "Location": "http://s3g:9878/destbucket-62560"
}</msg>
<status status="PASS" starttime="20230717 19:20:03.562" endtime="20230717 19:20:03.566"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:20:03.568" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:20:03.566" endtime="20230717 19:20:03.569"/>
</kw>
<status status="PASS" starttime="20230717 19:20:02.144" endtime="20230717 19:20:03.569"/>
</kw>
<msg timestamp="20230717 19:20:03.569" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:20:02.144" endtime="20230717 19:20:03.570"/>
</kw>
<msg timestamp="20230717 19:20:03.571" level="INFO">${output} = {
    "Location": "http://s3g:9878/destbucket-62560"
}</msg>
<status status="PASS" starttime="20230717 19:20:02.142" endtime="20230717 19:20:03.571"/>
</kw>
<status status="PASS" starttime="20230717 19:20:02.141" endtime="20230717 19:20:03.571"/>
</kw>
<status status="PASS" starttime="20230717 19:20:02.130" endtime="20230717 19:20:03.571"/>
</kw>
<status status="PASS" starttime="20230717 19:20:02.129" endtime="20230717 19:20:03.571"/>
</kw>
<kw name="Execute" library="os">
<arg>date &gt; /tmp/copyfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:20:03.583" level="INFO">Running command 'date &gt; /tmp/copyfile'.</msg>
<msg timestamp="20230717 19:20:03.598" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:20:03.599" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:20:03.577" endtime="20230717 19:20:03.601"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:20:03.606" level="INFO"/>
<status status="PASS" starttime="20230717 19:20:03.602" endtime="20230717 19:20:03.606"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:20:03.609" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:20:03.607" endtime="20230717 19:20:03.609"/>
</kw>
<status status="PASS" starttime="20230717 19:20:03.576" endtime="20230717 19:20:03.612"/>
</kw>
<msg timestamp="20230717 19:20:03.612" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:20:03.575" endtime="20230717 19:20:03.612"/>
</kw>
<status status="PASS" starttime="20230717 19:20:03.572" endtime="20230717 19:20:03.616"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/copyobject/key=value/f1 --body /tmp/copyfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:20:03.635" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-7217803904/copyobject/key=value/f1 --body /tmp/copyfile 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:20:05.548" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:20:05.548" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:20:03.624" endtime="20230717 19:20:05.548"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:20:05.550" level="INFO"/>
<status status="PASS" starttime="20230717 19:20:05.549" endtime="20230717 19:20:05.550"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:20:05.550" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:20:05.550" endtime="20230717 19:20:05.551"/>
</kw>
<status status="PASS" starttime="20230717 19:20:03.623" endtime="20230717 19:20:05.551"/>
</kw>
<msg timestamp="20230717 19:20:05.551" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:20:03.622" endtime="20230717 19:20:05.552"/>
</kw>
<msg timestamp="20230717 19:20:05.552" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:20:03.621" endtime="20230717 19:20:05.552"/>
</kw>
<msg timestamp="20230717 19:20:05.552" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230717 19:20:03.618" endtime="20230717 19:20:05.552"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/copyobject/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:20:05.559" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket encrypted --prefix ozone-test-7217803904/copyobject/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:20:07.042" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:20:07.043" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-7217803904/copyobject/key=value/",
            "LastModified": "2023-07-17T19:20:05.099Z",
            "ETag": "2023-07-17T19:20:05.099Z",
...</msg>
<status status="PASS" starttime="20230717 19:20:05.555" endtime="20230717 19:20:07.043"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:20:07.044" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-7217803904/copyobject/key=value/",
            "LastModified": "2023-07-17T19:20:05.099Z",
            "ETag": "2023-07-17T19:20:05.099Z",
            "Size": 0,
            "StorageClass": "STANDARD"
        },
        {
            "Key": "ozone-test-7217803904/copyobject/key=value/f1",
            "LastModified": "2023-07-17T19:20:05.382Z",
            "ETag": "2023-07-17T19:20:05.382Z",
            "Size": 29,
            "StorageClass": "STANDARD"
        }
    ]
}</msg>
<status status="PASS" starttime="20230717 19:20:07.043" endtime="20230717 19:20:07.045"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:20:07.045" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:20:07.045" endtime="20230717 19:20:07.046"/>
</kw>
<status status="PASS" starttime="20230717 19:20:05.554" endtime="20230717 19:20:07.046"/>
</kw>
<msg timestamp="20230717 19:20:07.046" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:20:05.554" endtime="20230717 19:20:07.046"/>
</kw>
<msg timestamp="20230717 19:20:07.046" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-7217803904/copyobject/key=value/",
            "LastModified": "2023-07-17T19:20:05.099Z",
            "ETag": "2023-07-17T19:20:05.099Z",
...</msg>
<status status="PASS" starttime="20230717 19:20:05.553" endtime="20230717 19:20:07.046"/>
</kw>
<msg timestamp="20230717 19:20:07.046" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-7217803904/copyobject/key=value/",
            "LastModified": "2023-07-17T19:20:05.099Z",
            "ETag": "2023-07-17T19:20:05.099Z",
...</msg>
<status status="PASS" starttime="20230717 19:20:05.552" endtime="20230717 19:20:07.047"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:20:07.047" endtime="20230717 19:20:07.047"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${BUCKET}/${PREFIX}/copyobject/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:20:07.055" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-62560 --key ozone-test-7217803904/copyobject/key=value/f1 --copy-source encrypted/ozone-test-7217803904/copyobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:20:09.330" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:20:09.330" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "d923c535-5f5f-425e-b5fc-271bc58a507c",
        "LastModified": "2023-07-17T19:20:08.920Z"
    }
}</msg>
<status status="PASS" starttime="20230717 19:20:07.051" endtime="20230717 19:20:09.330"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:20:09.340" level="INFO">{
    "CopyObjectResult": {
        "ETag": "d923c535-5f5f-425e-b5fc-271bc58a507c",
        "LastModified": "2023-07-17T19:20:08.920Z"
    }
}</msg>
<status status="PASS" starttime="20230717 19:20:09.333" endtime="20230717 19:20:09.341"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:20:09.347" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:20:09.342" endtime="20230717 19:20:09.347"/>
</kw>
<status status="PASS" starttime="20230717 19:20:07.050" endtime="20230717 19:20:09.347"/>
</kw>
<msg timestamp="20230717 19:20:09.347" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:20:07.050" endtime="20230717 19:20:09.352"/>
</kw>
<msg timestamp="20230717 19:20:09.352" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "d923c535-5f5f-425e-b5fc-271bc58a507c",
        "LastModified": "2023-07-17T19:20:08.920Z"
    }
}</msg>
<status status="PASS" starttime="20230717 19:20:07.049" endtime="20230717 19:20:09.352"/>
</kw>
<msg timestamp="20230717 19:20:09.352" level="INFO">${result} = {
    "CopyObjectResult": {
        "ETag": "d923c535-5f5f-425e-b5fc-271bc58a507c",
        "LastModified": "2023-07-17T19:20:08.920Z"
    }
}</msg>
<status status="PASS" starttime="20230717 19:20:07.048" endtime="20230717 19:20:09.352"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${DESTBUCKET} --prefix ${PREFIX}/copyobject/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:20:09.388" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket destbucket-62560 --prefix ozone-test-7217803904/copyobject/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:20:10.758" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:20:10.759" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-7217803904/copyobject/key=value/f1",
            "LastModified": "2023-07-17T19:20:08.920Z",
            "ETag": "2023-07-17T19:20:08.920Z"...</msg>
<status status="PASS" starttime="20230717 19:20:09.375" endtime="20230717 19:20:10.759"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:20:10.762" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-7217803904/copyobject/key=value/f1",
            "LastModified": "2023-07-17T19:20:08.920Z",
            "ETag": "2023-07-17T19:20:08.920Z",
            "Size": 29,
            "StorageClass": "STANDARD"
        }
    ]
}</msg>
<status status="PASS" starttime="20230717 19:20:10.760" endtime="20230717 19:20:10.762"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:20:10.763" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:20:10.762" endtime="20230717 19:20:10.764"/>
</kw>
<status status="PASS" starttime="20230717 19:20:09.371" endtime="20230717 19:20:10.764"/>
</kw>
<msg timestamp="20230717 19:20:10.764" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:20:09.370" endtime="20230717 19:20:10.765"/>
</kw>
<msg timestamp="20230717 19:20:10.765" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-7217803904/copyobject/key=value/f1",
            "LastModified": "2023-07-17T19:20:08.920Z",
            "ETag": "2023-07-17T19:20:08.920Z"...</msg>
<status status="PASS" starttime="20230717 19:20:09.366" endtime="20230717 19:20:10.765"/>
</kw>
<msg timestamp="20230717 19:20:10.766" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-7217803904/copyobject/key=value/f1",
            "LastModified": "2023-07-17T19:20:08.920Z",
            "ETag": "2023-07-17T19:20:08.920Z"...</msg>
<status status="PASS" starttime="20230717 19:20:09.357" endtime="20230717 19:20:10.766"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:20:10.766" endtime="20230717 19:20:10.767"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${BUCKET}/${PREFIX}/copyobject/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:20:10.779" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-62560 --key ozone-test-7217803904/copyobject/key=value/f1 --copy-source encrypted/ozone-test-7217803904/copyobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:20:12.268" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:20:12.268" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "fed73451-4268-4866-816c-6975e29f7d36",
        "LastModified": "2023-07-17T19:20:12.090Z"
    }
}</msg>
<status status="PASS" starttime="20230717 19:20:10.773" endtime="20230717 19:20:12.269"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:20:12.271" level="INFO">{
    "CopyObjectResult": {
        "ETag": "fed73451-4268-4866-816c-6975e29f7d36",
        "LastModified": "2023-07-17T19:20:12.090Z"
    }
}</msg>
<status status="PASS" starttime="20230717 19:20:12.270" endtime="20230717 19:20:12.272"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:20:12.273" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:20:12.272" endtime="20230717 19:20:12.273"/>
</kw>
<status status="PASS" starttime="20230717 19:20:10.772" endtime="20230717 19:20:12.275"/>
</kw>
<msg timestamp="20230717 19:20:12.275" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:20:10.771" endtime="20230717 19:20:12.276"/>
</kw>
<msg timestamp="20230717 19:20:12.276" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "fed73451-4268-4866-816c-6975e29f7d36",
        "LastModified": "2023-07-17T19:20:12.090Z"
    }
}</msg>
<status status="PASS" starttime="20230717 19:20:10.770" endtime="20230717 19:20:12.276"/>
</kw>
<msg timestamp="20230717 19:20:12.276" level="INFO">${result} = {
    "CopyObjectResult": {
        "ETag": "fed73451-4268-4866-816c-6975e29f7d36",
        "LastModified": "2023-07-17T19:20:12.090Z"
    }
}</msg>
<status status="PASS" starttime="20230717 19:20:10.767" endtime="20230717 19:20:12.276"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${DESTBUCKET} --prefix ${PREFIX}/copyobject/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:20:12.289" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket destbucket-62560 --prefix ozone-test-7217803904/copyobject/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:20:13.711" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:20:13.711" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-7217803904/copyobject/key=value/f1",
            "LastModified": "2023-07-17T19:20:12.090Z",
            "ETag": "2023-07-17T19:20:12.090Z"...</msg>
<status status="PASS" starttime="20230717 19:20:12.284" endtime="20230717 19:20:13.711"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:20:13.712" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-7217803904/copyobject/key=value/f1",
            "LastModified": "2023-07-17T19:20:12.090Z",
            "ETag": "2023-07-17T19:20:12.090Z",
            "Size": 29,
            "StorageClass": "STANDARD"
        }
    ]
}</msg>
<status status="PASS" starttime="20230717 19:20:13.711" endtime="20230717 19:20:13.713"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:20:13.713" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:20:13.713" endtime="20230717 19:20:13.713"/>
</kw>
<status status="PASS" starttime="20230717 19:20:12.283" endtime="20230717 19:20:13.714"/>
</kw>
<msg timestamp="20230717 19:20:13.714" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:20:12.280" endtime="20230717 19:20:13.714"/>
</kw>
<msg timestamp="20230717 19:20:13.714" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-7217803904/copyobject/key=value/f1",
            "LastModified": "2023-07-17T19:20:12.090Z",
            "ETag": "2023-07-17T19:20:12.090Z"...</msg>
<status status="PASS" starttime="20230717 19:20:12.279" endtime="20230717 19:20:13.714"/>
</kw>
<msg timestamp="20230717 19:20:13.715" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-7217803904/copyobject/key=value/f1",
            "LastModified": "2023-07-17T19:20:12.090Z",
            "ETag": "2023-07-17T19:20:12.090Z"...</msg>
<status status="PASS" starttime="20230717 19:20:12.277" endtime="20230717 19:20:13.715"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:20:13.715" endtime="20230717 19:20:13.716"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:20:02.128" endtime="20230717 19:20:13.718"/>
</test>
<test id="s1-s8-s9-t2" name="Copy Object Where Bucket is not available" line="52">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket dfdfdfdfdfnonexistent --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${BUCKET}/${PREFIX}/copyobject/key=value/f1</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:20:13.737" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket dfdfdfdfdfnonexistent --key ozone-test-7217803904/copyobject/key=value/f1 --copy-source encrypted/ozone-test-7217803904/copyobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:20:15.080" level="INFO">${rc} = 255</msg>
<msg timestamp="20230717 19:20:15.080" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20230717 19:20:13.727" endtime="20230717 19:20:15.080"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:20:15.087" level="INFO">
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20230717 19:20:15.082" endtime="20230717 19:20:15.087"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:20:15.094" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:20:15.091" endtime="20230717 19:20:15.094"/>
</kw>
<msg timestamp="20230717 19:20:15.096" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20230717 19:20:13.727" endtime="20230717 19:20:15.096"/>
</kw>
<msg timestamp="20230717 19:20:15.096" level="INFO">${result} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20230717 19:20:13.725" endtime="20230717 19:20:15.097"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchBucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:20:15.098" endtime="20230717 19:20:15.100"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source dfdfdfdfdfnonexistent/${PREFIX}/copyobject/key=value/f1</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:20:15.117" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-62560 --key ozone-test-7217803904/copyobject/key=value/f1 --copy-source dfdfdfdfdfnonexistent/ozone-test-7217803904/copyobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:20:16.680" level="INFO">${rc} = 255</msg>
<msg timestamp="20230717 19:20:16.680" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20230717 19:20:15.108" endtime="20230717 19:20:16.680"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:20:16.683" level="INFO">
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20230717 19:20:16.681" endtime="20230717 19:20:16.683"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:20:16.685" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:20:16.683" endtime="20230717 19:20:16.685"/>
</kw>
<msg timestamp="20230717 19:20:16.690" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20230717 19:20:15.105" endtime="20230717 19:20:16.690"/>
</kw>
<msg timestamp="20230717 19:20:16.690" level="INFO">${result} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20230717 19:20:15.101" endtime="20230717 19:20:16.690"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchBucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:20:16.690" endtime="20230717 19:20:16.691"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:20:13.721" endtime="20230717 19:20:16.691"/>
</test>
<test id="s1-s8-s9-t3" name="Copy Object Where both source and dest are same with change to storageclass" line="58">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>copy-object --storage-class REDUCED_REDUNDANCY --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${DESTBUCKET}/${PREFIX}/copyobject/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:20:16.704" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --storage-class REDUCED_REDUNDANCY --bucket destbucket-62560 --key ozone-test-7217803904/copyobject/key=value/f1 --copy-source destbucket-62560/ozone-test-7217803904/copyobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:20:18.537" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:20:18.537" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "3fd6ee51-a421-4618-a2ad-db1530315637",
        "LastModified": "2023-07-17T19:20:18.128Z"
    }
}</msg>
<status status="PASS" starttime="20230717 19:20:16.698" endtime="20230717 19:20:18.537"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:20:18.539" level="INFO">{
    "CopyObjectResult": {
        "ETag": "3fd6ee51-a421-4618-a2ad-db1530315637",
        "LastModified": "2023-07-17T19:20:18.128Z"
    }
}</msg>
<status status="PASS" starttime="20230717 19:20:18.538" endtime="20230717 19:20:18.539"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:20:18.540" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:20:18.539" endtime="20230717 19:20:18.540"/>
</kw>
<status status="PASS" starttime="20230717 19:20:16.696" endtime="20230717 19:20:18.541"/>
</kw>
<msg timestamp="20230717 19:20:18.541" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:20:16.695" endtime="20230717 19:20:18.541"/>
</kw>
<msg timestamp="20230717 19:20:18.542" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "3fd6ee51-a421-4618-a2ad-db1530315637",
        "LastModified": "2023-07-17T19:20:18.128Z"
    }
}</msg>
<status status="PASS" starttime="20230717 19:20:16.695" endtime="20230717 19:20:18.542"/>
</kw>
<msg timestamp="20230717 19:20:18.542" level="INFO">${result} = {
    "CopyObjectResult": {
        "ETag": "3fd6ee51-a421-4618-a2ad-db1530315637",
        "LastModified": "2023-07-17T19:20:18.128Z"
    }
}</msg>
<status status="PASS" starttime="20230717 19:20:16.693" endtime="20230717 19:20:18.542"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:20:18.581" endtime="20230717 19:20:18.585"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:20:16.692" endtime="20230717 19:20:18.588"/>
</test>
<test id="s1-s8-s9-t4" name="Copy Object Where Key not available" line="62">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${BUCKET}/nonnonexistentkey</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:20:18.629" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-62560 --key ozone-test-7217803904/copyobject/key=value/f1 --copy-source encrypted/nonnonexistentkey 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:20:20.857" level="INFO">${rc} = 255</msg>
<msg timestamp="20230717 19:20:20.857" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20230717 19:20:18.610" endtime="20230717 19:20:20.857"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:20:20.861" level="INFO">
An error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20230717 19:20:20.859" endtime="20230717 19:20:20.861"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:20:20.865" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:20:20.862" endtime="20230717 19:20:20.866"/>
</kw>
<msg timestamp="20230717 19:20:20.866" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20230717 19:20:18.602" endtime="20230717 19:20:20.866"/>
</kw>
<msg timestamp="20230717 19:20:20.867" level="INFO">${result} = 
An error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20230717 19:20:18.601" endtime="20230717 19:20:20.868"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:20:20.869" endtime="20230717 19:20:20.872"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:20:18.597" endtime="20230717 19:20:20.872"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20230717 19:20:02.080" endtime="20230717 19:20:20.876"/>
</suite>
<suite id="s1-s8-s10" name="Objectdelete" source="/opt/hadoop/smoketest/s3/objectdelete.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20230717 19:20:20.927" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:20:20.926" endtime="20230717 19:20:20.927"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20230717 19:20:20.928" endtime="20230717 19:20:20.928"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20230717 19:20:20.930" endtime="20230717 19:20:20.930"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:20:20.931" endtime="20230717 19:20:20.931"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:20:20.931" endtime="20230717 19:20:20.931"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:20:20.931" endtime="20230717 19:20:20.932"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:20:20.932" endtime="20230717 19:20:20.932"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:20:20.932" endtime="20230717 19:20:20.932"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20230717 19:20:20.933" endtime="20230717 19:20:20.934"/>
</kw>
<status status="PASS" starttime="20230717 19:20:20.926" endtime="20230717 19:20:20.934"/>
</kw>
<test id="s1-s8-s10-t1" name="Delete file with s3api" line="30">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:20:20.948" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20230717 19:20:20.958" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:20:20.958" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:20:20.940" endtime="20230717 19:20:20.959"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:20:20.963" level="INFO"/>
<status status="PASS" starttime="20230717 19:20:20.960" endtime="20230717 19:20:20.964"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:20:20.967" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:20:20.964" endtime="20230717 19:20:20.967"/>
</kw>
<status status="PASS" starttime="20230717 19:20:20.937" endtime="20230717 19:20:20.968"/>
</kw>
<msg timestamp="20230717 19:20:20.968" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:20:20.937" endtime="20230717 19:20:20.969"/>
</kw>
<status status="PASS" starttime="20230717 19:20:20.936" endtime="20230717 19:20:20.969"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapi/key=value/f1 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:20:20.988" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-7217803904/deletetestapi/key=value/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:20:22.782" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:20:22.782" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:20:20.978" endtime="20230717 19:20:22.782"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:20:22.786" level="INFO"/>
<status status="PASS" starttime="20230717 19:20:22.783" endtime="20230717 19:20:22.786"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:20:22.787" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:20:22.786" endtime="20230717 19:20:22.787"/>
</kw>
<status status="PASS" starttime="20230717 19:20:20.977" endtime="20230717 19:20:22.788"/>
</kw>
<msg timestamp="20230717 19:20:22.788" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:20:20.975" endtime="20230717 19:20:22.788"/>
</kw>
<msg timestamp="20230717 19:20:22.788" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:20:20.973" endtime="20230717 19:20:22.788"/>
</kw>
<msg timestamp="20230717 19:20:22.789" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230717 19:20:20.970" endtime="20230717 19:20:22.789"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/deletetestapi/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:20:22.799" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket encrypted --prefix ozone-test-7217803904/deletetestapi/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:20:24.672" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:20:24.673" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-7217803904/deletetestapi/key=value/",
            "LastModified": "2023-07-17T19:20:22.346Z",
            "ETag": "2023-07-17T19:20:22.346Z...</msg>
<status status="PASS" starttime="20230717 19:20:22.793" endtime="20230717 19:20:24.673"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:20:24.678" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-7217803904/deletetestapi/key=value/",
            "LastModified": "2023-07-17T19:20:22.346Z",
            "ETag": "2023-07-17T19:20:22.346Z",
            "Size": 0,
            "StorageClass": "STANDARD"
        },
        {
            "Key": "ozone-test-7217803904/deletetestapi/key=value/f1",
            "LastModified": "2023-07-17T19:20:22.577Z",
            "ETag": "2023-07-17T19:20:22.577Z",
            "Size": 29,
            "StorageClass": "STANDARD"
        }
    ]
}</msg>
<status status="PASS" starttime="20230717 19:20:24.675" endtime="20230717 19:20:24.678"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:20:24.683" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:20:24.679" endtime="20230717 19:20:24.683"/>
</kw>
<status status="PASS" starttime="20230717 19:20:22.792" endtime="20230717 19:20:24.685"/>
</kw>
<msg timestamp="20230717 19:20:24.685" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:20:22.792" endtime="20230717 19:20:24.685"/>
</kw>
<msg timestamp="20230717 19:20:24.686" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-7217803904/deletetestapi/key=value/",
            "LastModified": "2023-07-17T19:20:22.346Z",
            "ETag": "2023-07-17T19:20:22.346Z...</msg>
<status status="PASS" starttime="20230717 19:20:22.791" endtime="20230717 19:20:24.686"/>
</kw>
<msg timestamp="20230717 19:20:24.686" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-7217803904/deletetestapi/key=value/",
            "LastModified": "2023-07-17T19:20:22.346Z",
            "ETag": "2023-07-17T19:20:22.346Z...</msg>
<status status="PASS" starttime="20230717 19:20:22.789" endtime="20230717 19:20:24.686"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>"${PREFIX}/deletetestapi/key=value/f1"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:20:24.689" endtime="20230717 19:20:24.690"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapi/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:20:24.709" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket encrypted --key ozone-test-7217803904/deletetestapi/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:20:26.736" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:20:26.736" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:20:24.702" endtime="20230717 19:20:26.736"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:20:26.739" level="INFO"/>
<status status="PASS" starttime="20230717 19:20:26.737" endtime="20230717 19:20:26.739"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:20:26.740" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:20:26.740" endtime="20230717 19:20:26.741"/>
</kw>
<status status="PASS" starttime="20230717 19:20:24.699" endtime="20230717 19:20:26.741"/>
</kw>
<msg timestamp="20230717 19:20:26.741" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:20:24.698" endtime="20230717 19:20:26.742"/>
</kw>
<msg timestamp="20230717 19:20:26.742" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:20:24.694" endtime="20230717 19:20:26.742"/>
</kw>
<msg timestamp="20230717 19:20:26.742" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230717 19:20:24.691" endtime="20230717 19:20:26.742"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/deletetestapi/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:20:26.758" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket encrypted --prefix ozone-test-7217803904/deletetestapi/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:20:28.423" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:20:28.423" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-7217803904/deletetestapi/key=value/",
            "LastModified": "2023-07-17T19:20:22.346Z",
            "ETag": "2023-07-17T19:20:22.346Z...</msg>
<status status="PASS" starttime="20230717 19:20:26.750" endtime="20230717 19:20:28.423"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:20:28.425" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-7217803904/deletetestapi/key=value/",
            "LastModified": "2023-07-17T19:20:22.346Z",
            "ETag": "2023-07-17T19:20:22.346Z",
            "Size": 0,
            "StorageClass": "STANDARD"
        }
    ]
}</msg>
<status status="PASS" starttime="20230717 19:20:28.424" endtime="20230717 19:20:28.426"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:20:28.427" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:20:28.426" endtime="20230717 19:20:28.427"/>
</kw>
<status status="PASS" starttime="20230717 19:20:26.748" endtime="20230717 19:20:28.428"/>
</kw>
<msg timestamp="20230717 19:20:28.429" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:20:26.747" endtime="20230717 19:20:28.429"/>
</kw>
<msg timestamp="20230717 19:20:28.429" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-7217803904/deletetestapi/key=value/",
            "LastModified": "2023-07-17T19:20:22.346Z",
            "ETag": "2023-07-17T19:20:22.346Z...</msg>
<status status="PASS" starttime="20230717 19:20:26.745" endtime="20230717 19:20:28.429"/>
</kw>
<msg timestamp="20230717 19:20:28.429" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-7217803904/deletetestapi/key=value/",
            "LastModified": "2023-07-17T19:20:22.346Z",
            "ETag": "2023-07-17T19:20:22.346Z...</msg>
<status status="PASS" starttime="20230717 19:20:26.743" endtime="20230717 19:20:28.430"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>"${PREFIX}/deletetestapi/key=value/f1"</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:20:28.431" endtime="20230717 19:20:28.434"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:20:20.934" endtime="20230717 19:20:28.434"/>
</test>
<test id="s1-s8-s10-t2" name="Delete file with s3api, file doesn't exist" line="39">
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:20:28.448" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://encrypted/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:20:30.705" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:20:30.705" level="INFO">${output} =                            PRE dir1/
                           PRE multipart/
                           PRE ozone-test-1944761847/
                           PRE ozone-test-2028311903/
             ...</msg>
<status status="PASS" starttime="20230717 19:20:28.440" endtime="20230717 19:20:30.705"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:20:30.707" level="INFO">                           PRE dir1/
                           PRE multipart/
                           PRE ozone-test-1944761847/
                           PRE ozone-test-2028311903/
                           PRE ozone-test-2485593730/
                           PRE ozone-test-4107754892/
                           PRE ozone-test-4448353722/
                           PRE ozone-test-4825590057/
                           PRE ozone-test-6733911992/
                           PRE ozone-test-7217803904/
                           PRE ozone-test-8941437988/
                           PRE ozone-test-9291681881/
                           PRE specialchars/
2023-07-17 19:08:47       4068 README1.md
2023-07-17 19:07:50       4068 README10.md
2023-07-17 19:08:55   20971522 eriqbfvszg
2023-07-17 19:08:18   10485761 multiUpload.1.gz
2023-07-17 19:08:46   10485761 multiUpload.2.gz
2023-07-17 19:07:41         29 testfile</msg>
<status status="PASS" starttime="20230717 19:20:30.706" endtime="20230717 19:20:30.707"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:20:30.708" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:20:30.708" endtime="20230717 19:20:30.709"/>
</kw>
<status status="PASS" starttime="20230717 19:20:28.438" endtime="20230717 19:20:30.709"/>
</kw>
<msg timestamp="20230717 19:20:30.709" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:20:28.438" endtime="20230717 19:20:30.709"/>
</kw>
<msg timestamp="20230717 19:20:30.710" level="INFO">${output} =                            PRE dir1/
                           PRE multipart/
                           PRE ozone-test-1944761847/
                           PRE ozone-test-2028311903/
             ...</msg>
<status status="PASS" starttime="20230717 19:20:28.437" endtime="20230717 19:20:30.710"/>
</kw>
<msg timestamp="20230717 19:20:30.710" level="INFO">${result} =                            PRE dir1/
                           PRE multipart/
                           PRE ozone-test-1944761847/
                           PRE ozone-test-2028311903/
             ...</msg>
<status status="PASS" starttime="20230717 19:20:28.436" endtime="20230717 19:20:30.710"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>thereisnosuchfile</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:20:30.711" endtime="20230717 19:20:30.711"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key thereisnosuchfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:20:30.721" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket encrypted --key thereisnosuchfile 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:20:32.499" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:20:32.499" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:20:30.716" endtime="20230717 19:20:32.499"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:20:32.501" level="INFO"/>
<status status="PASS" starttime="20230717 19:20:32.500" endtime="20230717 19:20:32.501"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:20:32.502" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:20:32.502" endtime="20230717 19:20:32.503"/>
</kw>
<status status="PASS" starttime="20230717 19:20:30.715" endtime="20230717 19:20:32.503"/>
</kw>
<msg timestamp="20230717 19:20:32.503" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:20:30.714" endtime="20230717 19:20:32.503"/>
</kw>
<msg timestamp="20230717 19:20:32.504" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:20:30.714" endtime="20230717 19:20:32.504"/>
</kw>
<msg timestamp="20230717 19:20:32.504" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230717 19:20:30.712" endtime="20230717 19:20:32.504"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:20:32.529" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://encrypted/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:20:34.946" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:20:34.946" level="INFO">${output} =                            PRE dir1/
                           PRE multipart/
                           PRE ozone-test-1944761847/
                           PRE ozone-test-2028311903/
             ...</msg>
<status status="PASS" starttime="20230717 19:20:32.518" endtime="20230717 19:20:34.946"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:20:34.947" level="INFO">                           PRE dir1/
                           PRE multipart/
                           PRE ozone-test-1944761847/
                           PRE ozone-test-2028311903/
                           PRE ozone-test-2485593730/
                           PRE ozone-test-4107754892/
                           PRE ozone-test-4448353722/
                           PRE ozone-test-4825590057/
                           PRE ozone-test-6733911992/
                           PRE ozone-test-7217803904/
                           PRE ozone-test-8941437988/
                           PRE ozone-test-9291681881/
                           PRE specialchars/
2023-07-17 19:08:47       4068 README1.md
2023-07-17 19:07:50       4068 README10.md
2023-07-17 19:08:55   20971522 eriqbfvszg
2023-07-17 19:08:18   10485761 multiUpload.1.gz
2023-07-17 19:08:46   10485761 multiUpload.2.gz
2023-07-17 19:07:41         29 testfile</msg>
<status status="PASS" starttime="20230717 19:20:34.946" endtime="20230717 19:20:34.948"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:20:34.949" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:20:34.948" endtime="20230717 19:20:34.949"/>
</kw>
<status status="PASS" starttime="20230717 19:20:32.514" endtime="20230717 19:20:34.949"/>
</kw>
<msg timestamp="20230717 19:20:34.949" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:20:32.513" endtime="20230717 19:20:34.949"/>
</kw>
<msg timestamp="20230717 19:20:34.950" level="INFO">${output} =                            PRE dir1/
                           PRE multipart/
                           PRE ozone-test-1944761847/
                           PRE ozone-test-2028311903/
             ...</msg>
<status status="PASS" starttime="20230717 19:20:32.508" endtime="20230717 19:20:34.950"/>
</kw>
<msg timestamp="20230717 19:20:34.950" level="INFO">${result} =                            PRE dir1/
                           PRE multipart/
                           PRE ozone-test-1944761847/
                           PRE ozone-test-2028311903/
             ...</msg>
<status status="PASS" starttime="20230717 19:20:32.504" endtime="20230717 19:20:34.950"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>thereisnosuchfile</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:20:34.950" endtime="20230717 19:20:34.951"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:20:28.435" endtime="20230717 19:20:34.951"/>
</test>
<test id="s1-s8-s10-t3" name="Delete dir with s3api" line="46">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:20:34.962" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20230717 19:20:34.977" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:20:34.978" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:20:34.956" endtime="20230717 19:20:34.979"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:20:34.982" level="INFO"/>
<status status="PASS" starttime="20230717 19:20:34.981" endtime="20230717 19:20:34.982"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:20:34.984" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:20:34.983" endtime="20230717 19:20:34.987"/>
</kw>
<status status="PASS" starttime="20230717 19:20:34.955" endtime="20230717 19:20:34.987"/>
</kw>
<msg timestamp="20230717 19:20:34.987" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:20:34.955" endtime="20230717 19:20:34.987"/>
</kw>
<status status="PASS" starttime="20230717 19:20:34.954" endtime="20230717 19:20:34.987"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}/${PREFIX}/deletetestapidir/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:20:35.012" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://encrypted/ozone-test-7217803904/deletetestapidir/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:20:36.875" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:20:36.875" level="INFO">${output} = Completed 29 Bytes/29 Bytes (67 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/ozone-test-7217803904/deletetestapidir/key=value/f1</msg>
<status status="PASS" starttime="20230717 19:20:35.000" endtime="20230717 19:20:36.875"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:20:36.877" level="INFO">Completed 29 Bytes/29 Bytes (67 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/ozone-test-7217803904/deletetestapidir/key=value/f1</msg>
<status status="PASS" starttime="20230717 19:20:36.876" endtime="20230717 19:20:36.877"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:20:36.878" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:20:36.877" endtime="20230717 19:20:36.878"/>
</kw>
<status status="PASS" starttime="20230717 19:20:34.999" endtime="20230717 19:20:36.878"/>
</kw>
<msg timestamp="20230717 19:20:36.878" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:20:34.997" endtime="20230717 19:20:36.878"/>
</kw>
<msg timestamp="20230717 19:20:36.879" level="INFO">${output} = Completed 29 Bytes/29 Bytes (67 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/ozone-test-7217803904/deletetestapidir/key=value/f1</msg>
<status status="PASS" starttime="20230717 19:20:34.994" endtime="20230717 19:20:36.879"/>
</kw>
<msg timestamp="20230717 19:20:36.879" level="INFO">${result} = Completed 29 Bytes/29 Bytes (67 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/ozone-test-7217803904/deletetestapidir/key=value/f1</msg>
<status status="PASS" starttime="20230717 19:20:34.991" endtime="20230717 19:20:36.879"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/${PREFIX}/deletetestapidir/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:20:36.889" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://encrypted/ozone-test-7217803904/deletetestapidir/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:20:38.604" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:20:38.604" level="INFO">${output} = 2023-07-17 19:20:36          0 
2023-07-17 19:20:36         29 f1</msg>
<status status="PASS" starttime="20230717 19:20:36.885" endtime="20230717 19:20:38.604"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:20:38.606" level="INFO">2023-07-17 19:20:36          0 
2023-07-17 19:20:36         29 f1</msg>
<status status="PASS" starttime="20230717 19:20:38.605" endtime="20230717 19:20:38.606"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:20:38.607" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:20:38.606" endtime="20230717 19:20:38.607"/>
</kw>
<status status="PASS" starttime="20230717 19:20:36.883" endtime="20230717 19:20:38.608"/>
</kw>
<msg timestamp="20230717 19:20:38.608" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:20:36.883" endtime="20230717 19:20:38.608"/>
</kw>
<msg timestamp="20230717 19:20:38.608" level="INFO">${output} = 2023-07-17 19:20:36          0 
2023-07-17 19:20:36         29 f1</msg>
<status status="PASS" starttime="20230717 19:20:36.881" endtime="20230717 19:20:38.608"/>
</kw>
<msg timestamp="20230717 19:20:38.609" level="INFO">${result} = 2023-07-17 19:20:36          0 
2023-07-17 19:20:36         29 f1</msg>
<status status="PASS" starttime="20230717 19:20:36.879" endtime="20230717 19:20:38.609"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:20:38.609" endtime="20230717 19:20:38.610"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapidir/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:20:38.625" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket encrypted --key ozone-test-7217803904/deletetestapidir/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:20:40.182" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:20:40.183" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:20:38.613" endtime="20230717 19:20:40.183"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:20:40.186" level="INFO"/>
<status status="PASS" starttime="20230717 19:20:40.183" endtime="20230717 19:20:40.186"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:20:40.191" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:20:40.186" endtime="20230717 19:20:40.191"/>
</kw>
<status status="PASS" starttime="20230717 19:20:38.612" endtime="20230717 19:20:40.191"/>
</kw>
<msg timestamp="20230717 19:20:40.191" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:20:38.612" endtime="20230717 19:20:40.193"/>
</kw>
<msg timestamp="20230717 19:20:40.193" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:20:38.611" endtime="20230717 19:20:40.194"/>
</kw>
<msg timestamp="20230717 19:20:40.195" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230717 19:20:38.610" endtime="20230717 19:20:40.195"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/${PREFIX}/deletetestapidir/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:20:40.225" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://encrypted/ozone-test-7217803904/deletetestapidir/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:20:41.768" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:20:41.769" level="INFO">${output} = 2023-07-17 19:20:36          0 
2023-07-17 19:20:36         29 f1</msg>
<status status="PASS" starttime="20230717 19:20:40.211" endtime="20230717 19:20:41.769"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:20:41.770" level="INFO">2023-07-17 19:20:36          0 
2023-07-17 19:20:36         29 f1</msg>
<status status="PASS" starttime="20230717 19:20:41.769" endtime="20230717 19:20:41.770"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:20:41.771" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:20:41.770" endtime="20230717 19:20:41.771"/>
</kw>
<status status="PASS" starttime="20230717 19:20:40.207" endtime="20230717 19:20:41.771"/>
</kw>
<msg timestamp="20230717 19:20:41.772" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:20:40.207" endtime="20230717 19:20:41.772"/>
</kw>
<msg timestamp="20230717 19:20:41.772" level="INFO">${output} = 2023-07-17 19:20:36          0 
2023-07-17 19:20:36         29 f1</msg>
<status status="PASS" starttime="20230717 19:20:40.199" endtime="20230717 19:20:41.772"/>
</kw>
<msg timestamp="20230717 19:20:41.772" level="INFO">${result} = 2023-07-17 19:20:36          0 
2023-07-17 19:20:36         29 f1</msg>
<status status="PASS" starttime="20230717 19:20:40.195" endtime="20230717 19:20:41.772"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:20:41.772" endtime="20230717 19:20:41.773"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapidir/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:20:41.781" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket encrypted --key ozone-test-7217803904/deletetestapidir/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:20:43.372" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:20:43.372" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:20:41.777" endtime="20230717 19:20:43.372"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:20:43.374" level="INFO"/>
<status status="PASS" starttime="20230717 19:20:43.373" endtime="20230717 19:20:43.374"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:20:43.376" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:20:43.375" endtime="20230717 19:20:43.377"/>
</kw>
<status status="PASS" starttime="20230717 19:20:41.776" endtime="20230717 19:20:43.378"/>
</kw>
<msg timestamp="20230717 19:20:43.379" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:20:41.775" endtime="20230717 19:20:43.379"/>
</kw>
<msg timestamp="20230717 19:20:43.379" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:20:41.774" endtime="20230717 19:20:43.379"/>
</kw>
<msg timestamp="20230717 19:20:43.380" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230717 19:20:41.773" endtime="20230717 19:20:43.380"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:20:34.953" endtime="20230717 19:20:43.381"/>
</test>
<test id="s1-s8-s10-t4" name="Delete file with s3api, file doesn't exist, prefix of a real file" line="57">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:20:43.392" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20230717 19:20:43.397" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:20:43.397" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:20:43.387" endtime="20230717 19:20:43.397"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:20:43.399" level="INFO"/>
<status status="PASS" starttime="20230717 19:20:43.398" endtime="20230717 19:20:43.400"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:20:43.401" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:20:43.400" endtime="20230717 19:20:43.401"/>
</kw>
<status status="PASS" starttime="20230717 19:20:43.386" endtime="20230717 19:20:43.401"/>
</kw>
<msg timestamp="20230717 19:20:43.401" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:20:43.385" endtime="20230717 19:20:43.402"/>
</kw>
<status status="PASS" starttime="20230717 19:20:43.384" endtime="20230717 19:20:43.402"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}/${PREFIX}/deletetestapiprefix/key=value/filefile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:20:43.413" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://encrypted/ozone-test-7217803904/deletetestapiprefix/key=value/filefile 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:20:44.982" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:20:44.983" level="INFO">${output} = Completed 29 Bytes/29 Bytes (134 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/ozone-test-7217803904/deletetestapiprefix/key=value/filefile</msg>
<status status="PASS" starttime="20230717 19:20:43.409" endtime="20230717 19:20:44.984"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:20:44.990" level="INFO">Completed 29 Bytes/29 Bytes (134 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/ozone-test-7217803904/deletetestapiprefix/key=value/filefile</msg>
<status status="PASS" starttime="20230717 19:20:44.986" endtime="20230717 19:20:44.990"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:20:44.991" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:20:44.990" endtime="20230717 19:20:44.995"/>
</kw>
<status status="PASS" starttime="20230717 19:20:43.408" endtime="20230717 19:20:44.995"/>
</kw>
<msg timestamp="20230717 19:20:44.995" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:20:43.408" endtime="20230717 19:20:44.997"/>
</kw>
<msg timestamp="20230717 19:20:44.998" level="INFO">${output} = Completed 29 Bytes/29 Bytes (134 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/ozone-test-7217803904/deletetestapiprefix/key=value/filefile</msg>
<status status="PASS" starttime="20230717 19:20:43.403" endtime="20230717 19:20:44.998"/>
</kw>
<msg timestamp="20230717 19:20:44.999" level="INFO">${result} = Completed 29 Bytes/29 Bytes (134 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://encrypted/ozone-test-7217803904/deletetestapiprefix/key=value/filefile</msg>
<status status="PASS" starttime="20230717 19:20:43.402" endtime="20230717 19:20:44.999"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/${PREFIX}/deletetestapiprefix/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:20:45.019" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://encrypted/ozone-test-7217803904/deletetestapiprefix/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:20:46.414" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:20:46.415" level="INFO">${output} = 2023-07-17 19:20:44          0 
2023-07-17 19:20:44         29 filefile</msg>
<status status="PASS" starttime="20230717 19:20:45.010" endtime="20230717 19:20:46.415"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:20:46.419" level="INFO">2023-07-17 19:20:44          0 
2023-07-17 19:20:44         29 filefile</msg>
<status status="PASS" starttime="20230717 19:20:46.416" endtime="20230717 19:20:46.419"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:20:46.423" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:20:46.420" endtime="20230717 19:20:46.423"/>
</kw>
<status status="PASS" starttime="20230717 19:20:45.006" endtime="20230717 19:20:46.424"/>
</kw>
<msg timestamp="20230717 19:20:46.424" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:20:45.004" endtime="20230717 19:20:46.425"/>
</kw>
<msg timestamp="20230717 19:20:46.425" level="INFO">${output} = 2023-07-17 19:20:44          0 
2023-07-17 19:20:44         29 filefile</msg>
<status status="PASS" starttime="20230717 19:20:45.003" endtime="20230717 19:20:46.426"/>
</kw>
<msg timestamp="20230717 19:20:46.426" level="INFO">${result} = 2023-07-17 19:20:44          0 
2023-07-17 19:20:44         29 filefile</msg>
<status status="PASS" starttime="20230717 19:20:45.000" endtime="20230717 19:20:46.426"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>filefile</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:20:46.427" endtime="20230717 19:20:46.428"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapiprefix/key=value/file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:20:46.450" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket encrypted --key ozone-test-7217803904/deletetestapiprefix/key=value/file 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:20:47.891" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:20:47.892" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:20:46.444" endtime="20230717 19:20:47.892"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:20:47.897" level="INFO"/>
<status status="PASS" starttime="20230717 19:20:47.894" endtime="20230717 19:20:47.897"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:20:47.899" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:20:47.898" endtime="20230717 19:20:47.899"/>
</kw>
<status status="PASS" starttime="20230717 19:20:46.442" endtime="20230717 19:20:47.900"/>
</kw>
<msg timestamp="20230717 19:20:47.900" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:20:46.438" endtime="20230717 19:20:47.900"/>
</kw>
<msg timestamp="20230717 19:20:47.901" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:20:46.436" endtime="20230717 19:20:47.901"/>
</kw>
<msg timestamp="20230717 19:20:47.901" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230717 19:20:46.428" endtime="20230717 19:20:47.901"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/${PREFIX}/deletetestapiprefix/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:20:47.916" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://encrypted/ozone-test-7217803904/deletetestapiprefix/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:20:49.346" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:20:49.346" level="INFO">${output} = 2023-07-17 19:20:44          0 
2023-07-17 19:20:44         29 filefile</msg>
<status status="PASS" starttime="20230717 19:20:47.911" endtime="20230717 19:20:49.346"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:20:49.348" level="INFO">2023-07-17 19:20:44          0 
2023-07-17 19:20:44         29 filefile</msg>
<status status="PASS" starttime="20230717 19:20:49.347" endtime="20230717 19:20:49.353"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:20:49.357" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:20:49.353" endtime="20230717 19:20:49.357"/>
</kw>
<status status="PASS" starttime="20230717 19:20:47.908" endtime="20230717 19:20:49.358"/>
</kw>
<msg timestamp="20230717 19:20:49.358" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:20:47.906" endtime="20230717 19:20:49.358"/>
</kw>
<msg timestamp="20230717 19:20:49.360" level="INFO">${output} = 2023-07-17 19:20:44          0 
2023-07-17 19:20:44         29 filefile</msg>
<status status="PASS" starttime="20230717 19:20:47.903" endtime="20230717 19:20:49.360"/>
</kw>
<msg timestamp="20230717 19:20:49.360" level="INFO">${result} = 2023-07-17 19:20:44          0 
2023-07-17 19:20:44         29 filefile</msg>
<status status="PASS" starttime="20230717 19:20:47.902" endtime="20230717 19:20:49.360"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>filefile</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:20:49.360" endtime="20230717 19:20:49.365"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapiprefix/key=value/filefile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:20:49.386" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket encrypted --key ozone-test-7217803904/deletetestapiprefix/key=value/filefile 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:20:51.008" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:20:51.008" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:20:49.374" endtime="20230717 19:20:51.008"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:20:51.010" level="INFO"/>
<status status="PASS" starttime="20230717 19:20:51.009" endtime="20230717 19:20:51.011"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:20:51.012" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:20:51.012" endtime="20230717 19:20:51.015"/>
</kw>
<status status="PASS" starttime="20230717 19:20:49.373" endtime="20230717 19:20:51.015"/>
</kw>
<msg timestamp="20230717 19:20:51.017" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:20:49.372" endtime="20230717 19:20:51.017"/>
</kw>
<msg timestamp="20230717 19:20:51.017" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:20:49.369" endtime="20230717 19:20:51.017"/>
</kw>
<msg timestamp="20230717 19:20:51.019" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230717 19:20:49.366" endtime="20230717 19:20:51.019"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:20:43.383" endtime="20230717 19:20:51.021"/>
</test>
<test id="s1-s8-s10-t5" name="Delete file with s3api, bucket doesn't exist" line="69">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET}-nosuchbucket --key f1</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:20:51.042" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket encrypted-nosuchbucket --key f1 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:20:52.473" level="INFO">${rc} = 255</msg>
<msg timestamp="20230717 19:20:52.473" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20230717 19:20:51.033" endtime="20230717 19:20:52.473"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:20:52.476" level="INFO">
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20230717 19:20:52.474" endtime="20230717 19:20:52.477"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:20:52.478" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:20:52.477" endtime="20230717 19:20:52.478"/>
</kw>
<msg timestamp="20230717 19:20:52.479" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20230717 19:20:51.031" endtime="20230717 19:20:52.480"/>
</kw>
<msg timestamp="20230717 19:20:52.482" level="INFO">${result} = 
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20230717 19:20:51.026" endtime="20230717 19:20:52.482"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchBucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:20:52.482" endtime="20230717 19:20:52.484"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:20:51.024" endtime="20230717 19:20:52.486"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20230717 19:20:20.883" endtime="20230717 19:20:52.488"/>
</suite>
<suite id="s1-s8-s11" name="Objecthead" source="/opt/hadoop/smoketest/s3/objecthead.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20230717 19:20:52.514" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:20:52.513" endtime="20230717 19:20:52.514"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20230717 19:20:52.514" endtime="20230717 19:20:52.514"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20230717 19:20:52.515" endtime="20230717 19:20:52.515"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:20:52.515" endtime="20230717 19:20:52.515"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:20:52.515" endtime="20230717 19:20:52.515"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:20:52.516" endtime="20230717 19:20:52.516"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:20:52.516" endtime="20230717 19:20:52.516"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:20:52.516" endtime="20230717 19:20:52.517"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20230717 19:20:52.517" endtime="20230717 19:20:52.517"/>
</kw>
<status status="PASS" starttime="20230717 19:20:52.512" endtime="20230717 19:20:52.517"/>
</kw>
<test id="s1-s8-s11-t1" name="Head existing object" line="32">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:20:52.526" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile'.</msg>
<msg timestamp="20230717 19:20:52.529" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:20:52.530" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:20:52.521" endtime="20230717 19:20:52.530"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:20:52.532" level="INFO"/>
<status status="PASS" starttime="20230717 19:20:52.531" endtime="20230717 19:20:52.532"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:20:52.534" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:20:52.533" endtime="20230717 19:20:52.534"/>
</kw>
<status status="PASS" starttime="20230717 19:20:52.520" endtime="20230717 19:20:52.534"/>
</kw>
<msg timestamp="20230717 19:20:52.535" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:20:52.519" endtime="20230717 19:20:52.535"/>
</kw>
<status status="PASS" starttime="20230717 19:20:52.518" endtime="20230717 19:20:52.535"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/headobject/key=value/f1 --body /tmp/testfile</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:20:52.554" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-7217803904/headobject/key=value/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:20:54.216" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:20:54.216" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:20:52.539" endtime="20230717 19:20:54.216"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:20:54.218" level="INFO"/>
<status status="PASS" starttime="20230717 19:20:54.217" endtime="20230717 19:20:54.218"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:20:54.220" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:20:54.219" endtime="20230717 19:20:54.220"/>
</kw>
<msg timestamp="20230717 19:20:54.220" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:20:52.538" endtime="20230717 19:20:54.220"/>
</kw>
<msg timestamp="20230717 19:20:54.224" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230717 19:20:52.535" endtime="20230717 19:20:54.224"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/headobject/key=value/f1</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:20:54.239" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket encrypted --key ozone-test-7217803904/headobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:20:56.094" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:20:56.094" level="INFO">${output} = {
    "LastModified": "Mon, 17 Jul 2023 19:20:53 GMT",
    "ContentLength": 11,
    "ETag": "2023-07-17T19:20:53.972Z",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "E...</msg>
<status status="PASS" starttime="20230717 19:20:54.230" endtime="20230717 19:20:56.095"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:20:56.100" level="INFO">{
    "LastModified": "Mon, 17 Jul 2023 19:20:53 GMT",
    "ContentLength": 11,
    "ETag": "2023-07-17T19:20:53.972Z",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Mon, 17 Jul 2023 19:20:55 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230717 19:20:56.097" endtime="20230717 19:20:56.100"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:20:56.104" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:20:56.101" endtime="20230717 19:20:56.104"/>
</kw>
<msg timestamp="20230717 19:20:56.105" level="INFO">${output} = {
    "LastModified": "Mon, 17 Jul 2023 19:20:53 GMT",
    "ContentLength": 11,
    "ETag": "2023-07-17T19:20:53.972Z",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "E...</msg>
<status status="PASS" starttime="20230717 19:20:54.226" endtime="20230717 19:20:56.105"/>
</kw>
<msg timestamp="20230717 19:20:56.107" level="INFO">${result} = {
    "LastModified": "Mon, 17 Jul 2023 19:20:53 GMT",
    "ContentLength": 11,
    "ETag": "2023-07-17T19:20:53.972Z",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "E...</msg>
<status status="PASS" starttime="20230717 19:20:54.224" endtime="20230717 19:20:56.107"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/headobject/key=value/f1</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:20:56.124" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket encrypted --key ozone-test-7217803904/headobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:20:57.630" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:20:57.630" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:20:56.115" endtime="20230717 19:20:57.630"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:20:57.636" level="INFO"/>
<status status="PASS" starttime="20230717 19:20:57.632" endtime="20230717 19:20:57.636"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:20:57.639" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:20:57.637" endtime="20230717 19:20:57.639"/>
</kw>
<msg timestamp="20230717 19:20:57.641" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:20:56.113" endtime="20230717 19:20:57.641"/>
</kw>
<msg timestamp="20230717 19:20:57.641" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230717 19:20:56.108" endtime="20230717 19:20:57.641"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:20:52.517" endtime="20230717 19:20:57.642"/>
</test>
<test id="s1-s8-s11-t2" name="Head object in non existing bucket" line="39">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET}-non-existent --key ${PREFIX}/headobject/key=value/f1</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:20:57.656" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket encrypted-non-existent --key ozone-test-7217803904/headobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:20:59.326" level="INFO">${rc} = 255</msg>
<msg timestamp="20230717 19:20:59.326" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20230717 19:20:57.651" endtime="20230717 19:20:59.326"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:20:59.332" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20230717 19:20:59.329" endtime="20230717 19:20:59.332"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:20:59.334" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:20:59.332" endtime="20230717 19:20:59.334"/>
</kw>
<msg timestamp="20230717 19:20:59.336" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20230717 19:20:57.649" endtime="20230717 19:20:59.337"/>
</kw>
<msg timestamp="20230717 19:20:59.339" level="INFO">${result} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20230717 19:20:57.647" endtime="20230717 19:20:59.339"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>404</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:20:59.340" endtime="20230717 19:20:59.342"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Not Found</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:20:59.343" endtime="20230717 19:20:59.343"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:20:57.645" endtime="20230717 19:20:59.345"/>
</test>
<test id="s1-s8-s11-t3" name="Head object where path is a directory" line="43">
<kw name="Create legacy bucket" library="commonawslib">
<var>${legacy-bucket}</var>
<kw name="Generate Ozone String" library="commonawslib">
<var>${postfix}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230717 19:20:59.357" level="INFO">${randStr} = 6968003522</msg>
<status status="PASS" starttime="20230717 19:20:59.355" endtime="20230717 19:20:59.357"/>
</kw>
<msg timestamp="20230717 19:20:59.359" level="INFO">${postfix} = ozone-test-6968003522</msg>
<status status="PASS" starttime="20230717 19:20:59.353" endtime="20230717 19:20:59.359"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${legacy_bucket}</var>
<arg>legacy-bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230717 19:20:59.362" level="INFO">${legacy_bucket} = legacy-bucket-ozone-test-6968003522</msg>
<status status="PASS" starttime="20230717 19:20:59.360" endtime="20230717 19:20:59.362"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh bucket create -l LEGACY s3v/${legacy_bucket}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:20:59.370" level="INFO">Running command 'ozone sh bucket create -l LEGACY s3v/legacy-bucket-ozone-test-6968003522 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:21:18.234" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:21:18.234" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:20:59.364" endtime="20230717 19:21:18.234"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:21:18.237" level="INFO"/>
<status status="PASS" starttime="20230717 19:21:18.236" endtime="20230717 19:21:18.239"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:21:18.242" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:21:18.239" endtime="20230717 19:21:18.243"/>
</kw>
<msg timestamp="20230717 19:21:18.243" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230717 19:20:59.362" endtime="20230717 19:21:18.243"/>
</kw>
<msg timestamp="20230717 19:21:18.243" level="INFO">${legacy-bucket} = legacy-bucket-ozone-test-6968003522</msg>
<status status="PASS" starttime="20230717 19:20:59.348" endtime="20230717 19:21:18.246"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${legacy-bucket} --key ${PREFIX}/headobject/keyvalue/f1 --body /tmp/testfile</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:21:18.259" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket legacy-bucket-ozone-test-6968003522 --key ozone-test-7217803904/headobject/keyvalue/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:21:19.846" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:21:19.846" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:21:18.250" endtime="20230717 19:21:19.846"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:21:19.850" level="INFO"/>
<status status="PASS" starttime="20230717 19:21:19.848" endtime="20230717 19:21:19.850"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:21:19.852" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:21:19.851" endtime="20230717 19:21:19.852"/>
</kw>
<msg timestamp="20230717 19:21:19.854" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:21:18.247" endtime="20230717 19:21:19.854"/>
</kw>
<msg timestamp="20230717 19:21:19.854" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230717 19:21:18.246" endtime="20230717 19:21:19.854"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${legacy-bucket} --key ${PREFIX}/headobject/keyvalue/</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:21:19.863" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket legacy-bucket-ozone-test-6968003522 --key ozone-test-7217803904/headobject/keyvalue/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:21:21.527" level="INFO">${rc} = 255</msg>
<msg timestamp="20230717 19:21:21.527" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20230717 19:21:19.858" endtime="20230717 19:21:21.527"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:21:21.531" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20230717 19:21:21.530" endtime="20230717 19:21:21.532"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:21:21.534" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:21:21.532" endtime="20230717 19:21:21.535"/>
</kw>
<msg timestamp="20230717 19:21:21.535" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20230717 19:21:19.856" endtime="20230717 19:21:21.536"/>
</kw>
<msg timestamp="20230717 19:21:21.537" level="INFO">${result} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20230717 19:21:19.855" endtime="20230717 19:21:21.537"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>404</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:21:21.538" endtime="20230717 19:21:21.540"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Not Found</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:21:21.541" endtime="20230717 19:21:21.542"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:20:59.347" endtime="20230717 19:21:21.542"/>
</test>
<test id="s1-s8-s11-t4" name="Head directory objects" line="50">
<kw name="Create obs bucket" library="commonawslib">
<var>${obs-bucket}</var>
<kw name="Generate Ozone String" library="commonawslib">
<var>${postfix}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230717 19:21:21.552" level="INFO">${randStr} = 7119746925</msg>
<status status="PASS" starttime="20230717 19:21:21.549" endtime="20230717 19:21:21.552"/>
</kw>
<msg timestamp="20230717 19:21:21.552" level="INFO">${postfix} = ozone-test-7119746925</msg>
<status status="PASS" starttime="20230717 19:21:21.547" endtime="20230717 19:21:21.552"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>obs-bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230717 19:21:21.564" level="INFO">${bucket} = obs-bucket-ozone-test-7119746925</msg>
<status status="PASS" starttime="20230717 19:21:21.552" endtime="20230717 19:21:21.564"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh bucket create -l OBJECT_STORE s3v/${bucket}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:21:21.587" level="INFO">Running command 'ozone sh bucket create -l OBJECT_STORE s3v/obs-bucket-ozone-test-7119746925 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:21:42.369" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:21:42.369" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:21:21.570" endtime="20230717 19:21:42.369"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:21:42.372" level="INFO"/>
<status status="PASS" starttime="20230717 19:21:42.370" endtime="20230717 19:21:42.372"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:21:42.373" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:21:42.373" endtime="20230717 19:21:42.374"/>
</kw>
<msg timestamp="20230717 19:21:42.374" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230717 19:21:21.564" endtime="20230717 19:21:42.374"/>
</kw>
<msg timestamp="20230717 19:21:42.375" level="INFO">${obs-bucket} = obs-bucket-ozone-test-7119746925</msg>
<status status="PASS" starttime="20230717 19:21:21.546" endtime="20230717 19:21:42.375"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${obs-bucket} --key ${PREFIX}/mydir/ --body /tmp/testfile</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:21:42.385" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket obs-bucket-ozone-test-7119746925 --key ozone-test-7217803904/mydir/ --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:21:44.436" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:21:44.436" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:21:42.378" endtime="20230717 19:21:44.436"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:21:44.439" level="INFO"/>
<status status="PASS" starttime="20230717 19:21:44.437" endtime="20230717 19:21:44.440"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:21:44.443" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:21:44.442" endtime="20230717 19:21:44.443"/>
</kw>
<msg timestamp="20230717 19:21:44.444" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:21:42.376" endtime="20230717 19:21:44.444"/>
</kw>
<msg timestamp="20230717 19:21:44.444" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230717 19:21:42.375" endtime="20230717 19:21:44.444"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${obs-bucket} --key ${PREFIX}/mydir</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:21:44.450" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket obs-bucket-ozone-test-7119746925 --key ozone-test-7217803904/mydir 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:21:45.727" level="INFO">${rc} = 255</msg>
<msg timestamp="20230717 19:21:45.727" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20230717 19:21:44.446" endtime="20230717 19:21:45.727"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:21:45.729" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20230717 19:21:45.728" endtime="20230717 19:21:45.730"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:21:45.731" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:21:45.730" endtime="20230717 19:21:45.732"/>
</kw>
<msg timestamp="20230717 19:21:45.732" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20230717 19:21:44.445" endtime="20230717 19:21:45.732"/>
</kw>
<msg timestamp="20230717 19:21:45.733" level="INFO">${result} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20230717 19:21:44.444" endtime="20230717 19:21:45.733"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>404</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:21:45.733" endtime="20230717 19:21:45.734"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Not Found</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:21:45.734" endtime="20230717 19:21:45.735"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${obs-bucket} --key ${PREFIX}/mydir/</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:21:45.743" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket obs-bucket-ozone-test-7119746925 --key ozone-test-7217803904/mydir/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:21:47.148" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:21:47.149" level="INFO">${output} = {
    "LastModified": "Mon, 17 Jul 2023 19:21:44 GMT",
    "ContentLength": 11,
    "ETag": "2023-07-17T19:21:44.192Z",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "E...</msg>
<status status="PASS" starttime="20230717 19:21:45.738" endtime="20230717 19:21:47.149"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:21:47.152" level="INFO">{
    "LastModified": "Mon, 17 Jul 2023 19:21:44 GMT",
    "ContentLength": 11,
    "ETag": "2023-07-17T19:21:44.192Z",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Mon, 17 Jul 2023 19:21:46 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230717 19:21:47.150" endtime="20230717 19:21:47.152"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:21:47.155" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:21:47.152" endtime="20230717 19:21:47.155"/>
</kw>
<msg timestamp="20230717 19:21:47.155" level="INFO">${output} = {
    "LastModified": "Mon, 17 Jul 2023 19:21:44 GMT",
    "ContentLength": 11,
    "ETag": "2023-07-17T19:21:44.192Z",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "E...</msg>
<status status="PASS" starttime="20230717 19:21:45.737" endtime="20230717 19:21:47.155"/>
</kw>
<msg timestamp="20230717 19:21:47.156" level="INFO">${result} = {
    "LastModified": "Mon, 17 Jul 2023 19:21:44 GMT",
    "ContentLength": 11,
    "ETag": "2023-07-17T19:21:44.192Z",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "E...</msg>
<status status="PASS" starttime="20230717 19:21:45.735" endtime="20230717 19:21:47.156"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:21:21.543" endtime="20230717 19:21:47.156"/>
</test>
<test id="s1-s8-s11-t5" name="Head non existing key" line="58">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/non-existent</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:21:47.173" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket encrypted --key ozone-test-7217803904/non-existent 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:21:48.516" level="INFO">${rc} = 255</msg>
<msg timestamp="20230717 19:21:48.516" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20230717 19:21:47.164" endtime="20230717 19:21:48.516"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:21:48.529" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20230717 19:21:48.517" endtime="20230717 19:21:48.529"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:21:48.531" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:21:48.529" endtime="20230717 19:21:48.532"/>
</kw>
<msg timestamp="20230717 19:21:48.532" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20230717 19:21:47.161" endtime="20230717 19:21:48.532"/>
</kw>
<msg timestamp="20230717 19:21:48.533" level="INFO">${result} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20230717 19:21:47.160" endtime="20230717 19:21:48.534"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>404</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:21:48.534" endtime="20230717 19:21:48.536"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Not Found</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:21:48.537" endtime="20230717 19:21:48.539"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:21:47.158" endtime="20230717 19:21:48.539"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20230717 19:20:52.491" endtime="20230717 19:21:48.549"/>
</suite>
<suite id="s1-s8-s12" name="Objectmultidelete" source="/opt/hadoop/smoketest/s3/objectmultidelete.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20230717 19:21:48.578" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:21:48.578" endtime="20230717 19:21:48.578"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20230717 19:21:48.579" endtime="20230717 19:21:48.579"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20230717 19:21:48.579" endtime="20230717 19:21:48.579"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:21:48.579" endtime="20230717 19:21:48.579"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:21:48.579" endtime="20230717 19:21:48.579"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:21:48.579" endtime="20230717 19:21:48.579"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:21:48.580" endtime="20230717 19:21:48.580"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:21:48.580" endtime="20230717 19:21:48.580"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20230717 19:21:48.580" endtime="20230717 19:21:48.580"/>
</kw>
<status status="PASS" starttime="20230717 19:21:48.577" endtime="20230717 19:21:48.580"/>
</kw>
<test id="s1-s8-s12-t1" name="Delete file with multi delete" line="31">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:21:48.592" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20230717 19:21:48.599" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:21:48.599" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:21:48.585" endtime="20230717 19:21:48.599"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:21:48.601" level="INFO"/>
<status status="PASS" starttime="20230717 19:21:48.600" endtime="20230717 19:21:48.601"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:21:48.603" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:21:48.602" endtime="20230717 19:21:48.603"/>
</kw>
<status status="PASS" starttime="20230717 19:21:48.584" endtime="20230717 19:21:48.603"/>
</kw>
<msg timestamp="20230717 19:21:48.604" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:21:48.583" endtime="20230717 19:21:48.604"/>
</kw>
<status status="PASS" starttime="20230717 19:21:48.582" endtime="20230717 19:21:48.604"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/multidelete/key=value/f1 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:21:48.613" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-7217803904/multidelete/key=value/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:21:50.305" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:21:50.305" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:21:48.608" endtime="20230717 19:21:50.305"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:21:50.307" level="INFO"/>
<status status="PASS" starttime="20230717 19:21:50.306" endtime="20230717 19:21:50.307"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:21:50.312" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:21:50.307" endtime="20230717 19:21:50.314"/>
</kw>
<status status="PASS" starttime="20230717 19:21:48.607" endtime="20230717 19:21:50.314"/>
</kw>
<msg timestamp="20230717 19:21:50.314" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:21:48.607" endtime="20230717 19:21:50.314"/>
</kw>
<msg timestamp="20230717 19:21:50.315" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:21:48.606" endtime="20230717 19:21:50.315"/>
</kw>
<msg timestamp="20230717 19:21:50.316" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230717 19:21:48.604" endtime="20230717 19:21:50.316"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/multidelete/key=value/f2 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:21:50.329" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-7217803904/multidelete/key=value/f2 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:21:52.167" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:21:52.169" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:21:50.322" endtime="20230717 19:21:52.169"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:21:52.179" level="INFO"/>
<status status="PASS" starttime="20230717 19:21:52.171" endtime="20230717 19:21:52.179"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:21:52.184" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:21:52.180" endtime="20230717 19:21:52.184"/>
</kw>
<status status="PASS" starttime="20230717 19:21:50.322" endtime="20230717 19:21:52.187"/>
</kw>
<msg timestamp="20230717 19:21:52.187" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:21:50.321" endtime="20230717 19:21:52.187"/>
</kw>
<msg timestamp="20230717 19:21:52.187" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:21:50.319" endtime="20230717 19:21:52.187"/>
</kw>
<msg timestamp="20230717 19:21:52.190" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230717 19:21:50.317" endtime="20230717 19:21:52.190"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/multidelete/key=value/f3 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:21:52.218" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-7217803904/multidelete/key=value/f3 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:21:54.523" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:21:54.523" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:21:52.204" endtime="20230717 19:21:54.523"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:21:54.525" level="INFO"/>
<status status="PASS" starttime="20230717 19:21:54.524" endtime="20230717 19:21:54.526"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:21:54.527" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:21:54.526" endtime="20230717 19:21:54.527"/>
</kw>
<status status="PASS" starttime="20230717 19:21:52.202" endtime="20230717 19:21:54.528"/>
</kw>
<msg timestamp="20230717 19:21:54.528" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:21:52.196" endtime="20230717 19:21:54.528"/>
</kw>
<msg timestamp="20230717 19:21:54.528" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:21:52.195" endtime="20230717 19:21:54.528"/>
</kw>
<msg timestamp="20230717 19:21:54.529" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230717 19:21:52.190" endtime="20230717 19:21:54.529"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/multidelete/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:21:54.539" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket encrypted --prefix ozone-test-7217803904/multidelete/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:21:55.841" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:21:55.841" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-7217803904/multidelete/key=value/",
            "LastModified": "2023-07-17T19:21:49.989Z",
            "ETag": "2023-07-17T19:21:49.989Z",...</msg>
<status status="PASS" starttime="20230717 19:21:54.533" endtime="20230717 19:21:55.841"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:21:55.843" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-7217803904/multidelete/key=value/",
            "LastModified": "2023-07-17T19:21:49.989Z",
            "ETag": "2023-07-17T19:21:49.989Z",
            "Size": 0,
            "StorageClass": "STANDARD"
        },
        {
            "Key": "ozone-test-7217803904/multidelete/key=value/f1",
            "LastModified": "2023-07-17T19:21:50.092Z",
            "ETag": "2023-07-17T19:21:50.092Z",
            "Size": 29,
            "StorageClass": "STANDARD"
        },
        {
            "Key": "ozone-test-7217803904/multidelete/key=value/f2",
            "LastModified": "2023-07-17T19:21:51.870Z",
            "ETag": "2023-07-17T19:21:51.870Z",
            "Size": 29,
            "StorageClass": "STANDARD"
        },
        {
            "Key": "ozone-test-7217803904/multidelete/key=value/f3",
            "LastModified": "2023-07-17T19:21:54.351Z",
            "ETag": "2023-07-17T19:21:54.351Z",
            "Size": 29,
            "StorageClass": "STANDARD"
        }
    ]
}</msg>
<status status="PASS" starttime="20230717 19:21:55.842" endtime="20230717 19:21:55.844"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:21:55.845" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:21:55.844" endtime="20230717 19:21:55.845"/>
</kw>
<status status="PASS" starttime="20230717 19:21:54.532" endtime="20230717 19:21:55.845"/>
</kw>
<msg timestamp="20230717 19:21:55.846" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:21:54.532" endtime="20230717 19:21:55.846"/>
</kw>
<msg timestamp="20230717 19:21:55.847" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-7217803904/multidelete/key=value/",
            "LastModified": "2023-07-17T19:21:49.989Z",
            "ETag": "2023-07-17T19:21:49.989Z",...</msg>
<status status="PASS" starttime="20230717 19:21:54.531" endtime="20230717 19:21:55.847"/>
</kw>
<msg timestamp="20230717 19:21:55.847" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-7217803904/multidelete/key=value/",
            "LastModified": "2023-07-17T19:21:49.989Z",
            "ETag": "2023-07-17T19:21:49.989Z",...</msg>
<status status="PASS" starttime="20230717 19:21:54.529" endtime="20230717 19:21:55.847"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/key=value/f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:21:55.847" endtime="20230717 19:21:55.848"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/key=value/f2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:21:55.849" endtime="20230717 19:21:55.850"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/key=value/f3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:21:55.850" endtime="20230717 19:21:55.851"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:21:55.851" endtime="20230717 19:21:55.852"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>REDUCED_REDUNDANCY</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:21:55.852" endtime="20230717 19:21:55.853"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-objects --bucket ${BUCKET} --delete 'Objects=[{Key=${PREFIX}/multidelete/key=value/f1},{Key=${PREFIX}/multidelete/key=value/f2},{Key=${PREFIX}/multidelete/key=value/f4}]'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:21:55.863" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-objects --bucket encrypted --delete 'Objects=[{Key=ozone-test-7217803904/multidelete/key=value/f1},{Key=ozone-test-7217803904/multidelete/key=value/f2},{Key=ozone-test-7217803904/multidelete/key=value/f4}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:21:57.688" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:21:57.688" level="INFO">${output} = {
    "Deleted": [
        {
            "Key": "ozone-test-7217803904/multidelete/key=value/f1"
        },
        {
            "Key": "ozone-test-7217803904/multidelete/key=value/f2"
        },
   ...</msg>
<status status="PASS" starttime="20230717 19:21:55.858" endtime="20230717 19:21:57.688"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:21:57.696" level="INFO">{
    "Deleted": [
        {
            "Key": "ozone-test-7217803904/multidelete/key=value/f1"
        },
        {
            "Key": "ozone-test-7217803904/multidelete/key=value/f2"
        },
        {
            "Key": "ozone-test-7217803904/multidelete/key=value/f4"
        }
    ]
}</msg>
<status status="PASS" starttime="20230717 19:21:57.692" endtime="20230717 19:21:57.696"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:21:57.707" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:21:57.697" endtime="20230717 19:21:57.707"/>
</kw>
<status status="PASS" starttime="20230717 19:21:55.857" endtime="20230717 19:21:57.711"/>
</kw>
<msg timestamp="20230717 19:21:57.711" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:21:55.856" endtime="20230717 19:21:57.711"/>
</kw>
<msg timestamp="20230717 19:21:57.714" level="INFO">${output} = {
    "Deleted": [
        {
            "Key": "ozone-test-7217803904/multidelete/key=value/f1"
        },
        {
            "Key": "ozone-test-7217803904/multidelete/key=value/f2"
        },
   ...</msg>
<status status="PASS" starttime="20230717 19:21:55.855" endtime="20230717 19:21:57.714"/>
</kw>
<msg timestamp="20230717 19:21:57.717" level="INFO">${result} = {
    "Deleted": [
        {
            "Key": "ozone-test-7217803904/multidelete/key=value/f1"
        },
        {
            "Key": "ozone-test-7217803904/multidelete/key=value/f2"
        },
   ...</msg>
<status status="PASS" starttime="20230717 19:21:55.853" endtime="20230717 19:21:57.719"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:21:57.720" endtime="20230717 19:21:57.723"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/multidelete/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:21:57.760" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket encrypted --prefix ozone-test-7217803904/multidelete/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:21:59.475" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:21:59.475" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-7217803904/multidelete/key=value/",
            "LastModified": "2023-07-17T19:21:49.989Z",
            "ETag": "2023-07-17T19:21:49.989Z",...</msg>
<status status="PASS" starttime="20230717 19:21:57.743" endtime="20230717 19:21:59.475"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:21:59.479" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-7217803904/multidelete/key=value/",
            "LastModified": "2023-07-17T19:21:49.989Z",
            "ETag": "2023-07-17T19:21:49.989Z",
            "Size": 0,
            "StorageClass": "STANDARD"
        },
        {
            "Key": "ozone-test-7217803904/multidelete/key=value/f3",
            "LastModified": "2023-07-17T19:21:54.351Z",
            "ETag": "2023-07-17T19:21:54.351Z",
            "Size": 29,
            "StorageClass": "STANDARD"
        }
    ]
}</msg>
<status status="PASS" starttime="20230717 19:21:59.476" endtime="20230717 19:21:59.479"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:21:59.482" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:21:59.480" endtime="20230717 19:21:59.482"/>
</kw>
<status status="PASS" starttime="20230717 19:21:57.738" endtime="20230717 19:21:59.483"/>
</kw>
<msg timestamp="20230717 19:21:59.483" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:21:57.738" endtime="20230717 19:21:59.484"/>
</kw>
<msg timestamp="20230717 19:21:59.484" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-7217803904/multidelete/key=value/",
            "LastModified": "2023-07-17T19:21:49.989Z",
            "ETag": "2023-07-17T19:21:49.989Z",...</msg>
<status status="PASS" starttime="20230717 19:21:57.731" endtime="20230717 19:21:59.484"/>
</kw>
<msg timestamp="20230717 19:21:59.487" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-7217803904/multidelete/key=value/",
            "LastModified": "2023-07-17T19:21:49.989Z",
            "ETag": "2023-07-17T19:21:49.989Z",...</msg>
<status status="PASS" starttime="20230717 19:21:57.725" endtime="20230717 19:21:59.487"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/key=value/f1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:21:59.489" endtime="20230717 19:21:59.489"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/key=value/f2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:21:59.490" endtime="20230717 19:21:59.492"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/key=value/f3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:21:59.492" endtime="20230717 19:21:59.493"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:21:59.494" endtime="20230717 19:21:59.495"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>REDUCED_REDUNDANCY</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:21:59.496" endtime="20230717 19:21:59.497"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:21:48.581" endtime="20230717 19:21:59.498"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20230717 19:21:48.558" endtime="20230717 19:21:59.502"/>
</suite>
<suite id="s1-s8-s13" name="Objectputget" source="/opt/hadoop/smoketest/s3/objectputget.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20230717 19:21:59.538" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:21:59.536" endtime="20230717 19:21:59.538"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20230717 19:21:59.538" endtime="20230717 19:21:59.538"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20230717 19:21:59.538" endtime="20230717 19:21:59.538"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:21:59.539" endtime="20230717 19:21:59.539"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:21:59.540" endtime="20230717 19:21:59.540"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:21:59.540" endtime="20230717 19:21:59.540"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:21:59.540" endtime="20230717 19:21:59.540"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:21:59.540" endtime="20230717 19:21:59.540"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20230717 19:21:59.541" endtime="20230717 19:21:59.541"/>
</kw>
<status status="PASS" starttime="20230717 19:21:59.535" endtime="20230717 19:21:59.541"/>
</kw>
<test id="s1-s8-s13-t1" name="Put object to s3" line="32">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:21:59.561" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile'.</msg>
<msg timestamp="20230717 19:21:59.566" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:21:59.567" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:21:59.554" endtime="20230717 19:21:59.567"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:21:59.570" level="INFO"/>
<status status="PASS" starttime="20230717 19:21:59.568" endtime="20230717 19:21:59.570"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:21:59.571" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:21:59.570" endtime="20230717 19:21:59.571"/>
</kw>
<status status="PASS" starttime="20230717 19:21:59.551" endtime="20230717 19:21:59.571"/>
</kw>
<msg timestamp="20230717 19:21:59.572" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:21:59.549" endtime="20230717 19:21:59.572"/>
</kw>
<status status="PASS" starttime="20230717 19:21:59.547" endtime="20230717 19:21:59.573"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:21:59.589" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-7217803904/putobject/key=value/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:22:01.555" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:22:01.555" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:21:59.578" endtime="20230717 19:22:01.555"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:22:01.558" level="INFO"/>
<status status="PASS" starttime="20230717 19:22:01.556" endtime="20230717 19:22:01.559"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:22:01.560" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:22:01.559" endtime="20230717 19:22:01.560"/>
</kw>
<status status="PASS" starttime="20230717 19:21:59.576" endtime="20230717 19:22:01.561"/>
</kw>
<msg timestamp="20230717 19:22:01.561" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:21:59.576" endtime="20230717 19:22:01.561"/>
</kw>
<msg timestamp="20230717 19:22:01.561" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:21:59.575" endtime="20230717 19:22:01.561"/>
</kw>
<msg timestamp="20230717 19:22:01.563" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230717 19:21:59.574" endtime="20230717 19:22:01.563"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/putobject/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:22:01.581" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket encrypted --prefix ozone-test-7217803904/putobject/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:22:03.875" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:22:03.875" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-7217803904/putobject/key=value/",
            "LastModified": "2023-07-17T19:22:01.110Z",
            "ETag": "2023-07-17T19:22:01.110Z",
 ...</msg>
<status status="PASS" starttime="20230717 19:22:01.573" endtime="20230717 19:22:03.875"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:22:03.882" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-7217803904/putobject/key=value/",
            "LastModified": "2023-07-17T19:22:01.110Z",
            "ETag": "2023-07-17T19:22:01.110Z",
            "Size": 0,
            "StorageClass": "STANDARD"
        },
        {
            "Key": "ozone-test-7217803904/putobject/key=value/f1",
            "LastModified": "2023-07-17T19:22:01.259Z",
            "ETag": "2023-07-17T19:22:01.259Z",
            "Size": 11,
            "StorageClass": "STANDARD"
        }
    ]
}</msg>
<status status="PASS" starttime="20230717 19:22:03.877" endtime="20230717 19:22:03.882"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:22:03.887" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:22:03.883" endtime="20230717 19:22:03.887"/>
</kw>
<status status="PASS" starttime="20230717 19:22:01.571" endtime="20230717 19:22:03.887"/>
</kw>
<msg timestamp="20230717 19:22:03.888" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:22:01.569" endtime="20230717 19:22:03.890"/>
</kw>
<msg timestamp="20230717 19:22:03.890" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-7217803904/putobject/key=value/",
            "LastModified": "2023-07-17T19:22:01.110Z",
            "ETag": "2023-07-17T19:22:01.110Z",
 ...</msg>
<status status="PASS" starttime="20230717 19:22:01.567" endtime="20230717 19:22:03.890"/>
</kw>
<msg timestamp="20230717 19:22:03.891" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-7217803904/putobject/key=value/",
            "LastModified": "2023-07-17T19:22:01.110Z",
            "ETag": "2023-07-17T19:22:01.110Z",
 ...</msg>
<status status="PASS" starttime="20230717 19:22:01.564" endtime="20230717 19:22:03.891"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:22:03.892" endtime="20230717 19:22:03.894"/>
</kw>
<kw name="Execute" library="os">
<arg>touch -f /tmp/zerobyte</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:22:03.913" level="INFO">Running command 'touch -f /tmp/zerobyte 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:22:03.928" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:22:03.930" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:22:03.902" endtime="20230717 19:22:03.934"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:22:03.936" level="INFO"/>
<status status="PASS" starttime="20230717 19:22:03.934" endtime="20230717 19:22:03.936"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:22:03.938" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:22:03.937" endtime="20230717 19:22:03.938"/>
</kw>
<status status="PASS" starttime="20230717 19:22:03.900" endtime="20230717 19:22:03.938"/>
</kw>
<msg timestamp="20230717 19:22:03.939" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:22:03.899" endtime="20230717 19:22:03.939"/>
</kw>
<status status="PASS" starttime="20230717 19:22:03.895" endtime="20230717 19:22:03.939"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/zerobyte --body /tmp/zerobyte</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:22:03.960" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-7217803904/putobject/key=value/zerobyte --body /tmp/zerobyte 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:22:05.849" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:22:05.849" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:22:03.951" endtime="20230717 19:22:05.849"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:22:05.851" level="INFO"/>
<status status="PASS" starttime="20230717 19:22:05.850" endtime="20230717 19:22:05.852"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:22:05.854" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:22:05.853" endtime="20230717 19:22:05.854"/>
</kw>
<status status="PASS" starttime="20230717 19:22:03.950" endtime="20230717 19:22:05.855"/>
</kw>
<msg timestamp="20230717 19:22:05.855" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:22:03.948" endtime="20230717 19:22:05.855"/>
</kw>
<msg timestamp="20230717 19:22:05.855" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:22:03.946" endtime="20230717 19:22:05.855"/>
</kw>
<msg timestamp="20230717 19:22:05.856" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230717 19:22:03.939" endtime="20230717 19:22:05.856"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/putobject/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:22:05.877" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket encrypted --prefix ozone-test-7217803904/putobject/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:22:07.719" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:22:07.719" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-7217803904/putobject/key=value/",
            "LastModified": "2023-07-17T19:22:01.110Z",
            "ETag": "2023-07-17T19:22:01.110Z",
 ...</msg>
<status status="PASS" starttime="20230717 19:22:05.867" endtime="20230717 19:22:07.719"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:22:07.721" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-7217803904/putobject/key=value/",
            "LastModified": "2023-07-17T19:22:01.110Z",
            "ETag": "2023-07-17T19:22:01.110Z",
            "Size": 0,
            "StorageClass": "STANDARD"
        },
        {
            "Key": "ozone-test-7217803904/putobject/key=value/f1",
            "LastModified": "2023-07-17T19:22:01.259Z",
            "ETag": "2023-07-17T19:22:01.259Z",
            "Size": 11,
            "StorageClass": "STANDARD"
        },
        {
            "Key": "ozone-test-7217803904/putobject/key=value/zerobyte/",
            "LastModified": "2023-07-17T19:22:05.657Z",
            "ETag": "2023-07-17T19:22:05.657Z",
            "Size": 0,
            "StorageClass": "STANDARD"
        }
    ]
}</msg>
<status status="PASS" starttime="20230717 19:22:07.720" endtime="20230717 19:22:07.721"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:22:07.724" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:22:07.723" endtime="20230717 19:22:07.725"/>
</kw>
<status status="PASS" starttime="20230717 19:22:05.865" endtime="20230717 19:22:07.725"/>
</kw>
<msg timestamp="20230717 19:22:07.725" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:22:05.863" endtime="20230717 19:22:07.727"/>
</kw>
<msg timestamp="20230717 19:22:07.727" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-7217803904/putobject/key=value/",
            "LastModified": "2023-07-17T19:22:01.110Z",
            "ETag": "2023-07-17T19:22:01.110Z",
 ...</msg>
<status status="PASS" starttime="20230717 19:22:05.859" endtime="20230717 19:22:07.728"/>
</kw>
<msg timestamp="20230717 19:22:07.728" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-7217803904/putobject/key=value/",
            "LastModified": "2023-07-17T19:22:01.110Z",
            "ETag": "2023-07-17T19:22:01.110Z",
 ...</msg>
<status status="PASS" starttime="20230717 19:22:05.857" endtime="20230717 19:22:07.728"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>zerobyte</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:22:07.729" endtime="20230717 19:22:07.731"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:21:59.542" endtime="20230717 19:22:07.732"/>
</test>
<test id="s1-s8-s13-t2" name="Get object from s3" line="44">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 /tmp/testfile.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:22:07.748" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-7217803904/putobject/key=value/f1 /tmp/testfile.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:22:09.441" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:22:09.441" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:22:01 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230717 19:22:07.743" endtime="20230717 19:22:09.441"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:22:09.443" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:22:01 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Mon, 17 Jul 2023 19:22:09 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230717 19:22:09.442" endtime="20230717 19:22:09.443"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:22:09.450" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:22:09.448" endtime="20230717 19:22:09.450"/>
</kw>
<status status="PASS" starttime="20230717 19:22:07.741" endtime="20230717 19:22:09.450"/>
</kw>
<msg timestamp="20230717 19:22:09.451" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:22:07.740" endtime="20230717 19:22:09.451"/>
</kw>
<msg timestamp="20230717 19:22:09.451" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:22:01 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230717 19:22:07.738" endtime="20230717 19:22:09.451"/>
</kw>
<msg timestamp="20230717 19:22:09.452" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:22:01 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230717 19:22:07.736" endtime="20230717 19:22:09.452"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/testfile</arg>
<arg>/tmp/testfile.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:22:09.464" level="INFO">Running command 'md5sum /tmp/testfile | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:22:09.476" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:22:09.478" level="INFO">${output} = 09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20230717 19:22:09.459" endtime="20230717 19:22:09.479"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:22:09.487" level="INFO">09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20230717 19:22:09.483" endtime="20230717 19:22:09.487"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:22:09.489" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:22:09.488" endtime="20230717 19:22:09.489"/>
</kw>
<status status="PASS" starttime="20230717 19:22:09.458" endtime="20230717 19:22:09.490"/>
</kw>
<msg timestamp="20230717 19:22:09.491" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:22:09.458" endtime="20230717 19:22:09.492"/>
</kw>
<msg timestamp="20230717 19:22:09.492" level="INFO">${checksumbefore} = 09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20230717 19:22:09.454" endtime="20230717 19:22:09.492"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:22:09.506" level="INFO">Running command 'md5sum /tmp/testfile.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:22:09.513" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:22:09.513" level="INFO">${output} = 09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20230717 19:22:09.500" endtime="20230717 19:22:09.513"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:22:09.516" level="INFO">09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20230717 19:22:09.514" endtime="20230717 19:22:09.516"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:22:09.517" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:22:09.516" endtime="20230717 19:22:09.518"/>
</kw>
<status status="PASS" starttime="20230717 19:22:09.497" endtime="20230717 19:22:09.518"/>
</kw>
<msg timestamp="20230717 19:22:09.518" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:22:09.495" endtime="20230717 19:22:09.519"/>
</kw>
<msg timestamp="20230717 19:22:09.519" level="INFO">${checksumafter} = 09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20230717 19:22:09.493" endtime="20230717 19:22:09.519"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230717 19:22:09.520" endtime="20230717 19:22:09.521"/>
</kw>
<status status="PASS" starttime="20230717 19:22:09.453" endtime="20230717 19:22:09.521"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:22:07.734" endtime="20230717 19:22:09.521"/>
</test>
<test id="s1-s8-s13-t3" name="Get object with wrong signature" line="49">
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230717 19:22:09.526" endtime="20230717 19:22:09.526"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>curl -i -H 'Authorization: AWS scm/scm@EXAMPLE.COM:asdfqwerty' ${ENDPOINT_URL}/${BUCKET}/${PREFIX}/putobject/key=value/f1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:22:09.533" level="INFO">Running command 'curl -i -H 'Authorization: AWS scm/scm@EXAMPLE.COM:asdfqwerty' http://s3g:9878/encrypted/ozone-test-7217803904/putobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:22:09.622" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:22:09.622" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20230717 19:22:09.528" endtime="20230717 19:22:09.622"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:22:09.626" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
100   247  100   247    0     0  13645      0 --:--:-- --:--:-- --:--:-- 14529
HTTP/1.1 403 Forbidden
Date: Mon, 17 Jul 2023 19:22:09 GMT
Cache-Control: no-cache
Expires: Mon, 17 Jul 2023 19:22:09 GMT
Pragma: no-cache
Content-Type: text/plain
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Server: Ozone
x-amz-id-2: dz7iHA5ik81o7
x-amz-request-id: ccc243da-3327-4e9c-ae4f-059cef8d9fc9
Content-Length: 247

&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;Error&gt;
  &lt;Code&gt;InvalidRequest&lt;/Code&gt;
  &lt;Message&gt;Error creating s3 auth info. The request may not be signed using AWS V4 signing algorithm, or might be invalid&lt;/Message&gt;
  &lt;Resource/&gt;
  &lt;RequestId/&gt;
&lt;/Error&gt;</msg>
<status status="PASS" starttime="20230717 19:22:09.624" endtime="20230717 19:22:09.627"/>
</kw>
<msg timestamp="20230717 19:22:09.628" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20230717 19:22:09.527" endtime="20230717 19:22:09.628"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>403 Forbidden</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:22:09.628" endtime="20230717 19:22:09.633"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:22:09.523" endtime="20230717 19:22:09.634"/>
</test>
<test id="s1-s8-s13-t4" name="Get Partial object from s3 with both start and endoffset" line="54">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=0-4 /tmp/testfile1.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:22:09.648" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-7217803904/putobject/key=value/f1 --range bytes=0-4 /tmp/testfile1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:22:11.408" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:22:11.408" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:22:01 GMT",
    "ContentLength": 5,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-4/11",
    "ContentType": "appl...</msg>
<status status="PASS" starttime="20230717 19:22:09.643" endtime="20230717 19:22:11.408"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:22:11.410" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:22:01 GMT",
    "ContentLength": 5,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-4/11",
    "ContentType": "application/octet-stream",
    "Expires": "Mon, 17 Jul 2023 19:22:11 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230717 19:22:11.409" endtime="20230717 19:22:11.410"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:22:11.411" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:22:11.411" endtime="20230717 19:22:11.411"/>
</kw>
<status status="PASS" starttime="20230717 19:22:09.642" endtime="20230717 19:22:11.412"/>
</kw>
<msg timestamp="20230717 19:22:11.412" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:22:09.642" endtime="20230717 19:22:11.412"/>
</kw>
<msg timestamp="20230717 19:22:11.412" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:22:01 GMT",
    "ContentLength": 5,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-4/11",
    "ContentType": "appl...</msg>
<status status="PASS" starttime="20230717 19:22:09.641" endtime="20230717 19:22:11.412"/>
</kw>
<msg timestamp="20230717 19:22:11.413" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:22:01 GMT",
    "ContentLength": 5,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-4/11",
    "ContentType": "appl...</msg>
<status status="PASS" starttime="20230717 19:22:09.639" endtime="20230717 19:22:11.413"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:22:11.413" endtime="20230717 19:22:11.414"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-4/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:22:11.414" endtime="20230717 19:22:11.414"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:22:11.415" endtime="20230717 19:22:11.415"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=0 bs=1 count=5 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:22:11.424" level="INFO">Running command 'dd if=/tmp/testfile skip=0 bs=1 count=5 2&gt;/dev/null'.</msg>
<msg timestamp="20230717 19:22:11.430" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:22:11.430" level="INFO">${output} = Rando</msg>
<status status="PASS" starttime="20230717 19:22:11.419" endtime="20230717 19:22:11.431"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:22:11.433" level="INFO">Rando</msg>
<status status="PASS" starttime="20230717 19:22:11.432" endtime="20230717 19:22:11.433"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:22:11.435" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:22:11.434" endtime="20230717 19:22:11.436"/>
</kw>
<status status="PASS" starttime="20230717 19:22:11.417" endtime="20230717 19:22:11.437"/>
</kw>
<msg timestamp="20230717 19:22:11.437" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:22:11.417" endtime="20230717 19:22:11.437"/>
</kw>
<msg timestamp="20230717 19:22:11.438" level="INFO">${expectedData} = Rando</msg>
<status status="PASS" starttime="20230717 19:22:11.416" endtime="20230717 19:22:11.438"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile1.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:22:11.447" level="INFO">Running command 'cat /tmp/testfile1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:22:11.453" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:22:11.453" level="INFO">${output} = Rando</msg>
<status status="PASS" starttime="20230717 19:22:11.441" endtime="20230717 19:22:11.456"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:22:11.467" level="INFO">Rando</msg>
<status status="PASS" starttime="20230717 19:22:11.457" endtime="20230717 19:22:11.468"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:22:11.472" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:22:11.469" endtime="20230717 19:22:11.472"/>
</kw>
<status status="PASS" starttime="20230717 19:22:11.440" endtime="20230717 19:22:11.479"/>
</kw>
<msg timestamp="20230717 19:22:11.479" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:22:11.439" endtime="20230717 19:22:11.479"/>
</kw>
<msg timestamp="20230717 19:22:11.481" level="INFO">${actualData} = Rando</msg>
<status status="PASS" starttime="20230717 19:22:11.438" endtime="20230717 19:22:11.481"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230717 19:22:11.485" endtime="20230717 19:22:11.489"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=2-4 /tmp/testfile1.result1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:22:11.522" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-7217803904/putobject/key=value/f1 --range bytes=2-4 /tmp/testfile1.result1 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:22:13.012" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:22:13.012" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:22:01 GMT",
    "ContentLength": 3,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 2-4/11",
    "ContentType": "appl...</msg>
<status status="PASS" starttime="20230717 19:22:11.509" endtime="20230717 19:22:13.012"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:22:13.015" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:22:01 GMT",
    "ContentLength": 3,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 2-4/11",
    "ContentType": "application/octet-stream",
    "Expires": "Mon, 17 Jul 2023 19:22:12 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230717 19:22:13.013" endtime="20230717 19:22:13.015"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:22:13.016" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:22:13.015" endtime="20230717 19:22:13.017"/>
</kw>
<status status="PASS" starttime="20230717 19:22:11.504" endtime="20230717 19:22:13.017"/>
</kw>
<msg timestamp="20230717 19:22:13.017" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:22:11.503" endtime="20230717 19:22:13.017"/>
</kw>
<msg timestamp="20230717 19:22:13.018" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:22:01 GMT",
    "ContentLength": 3,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 2-4/11",
    "ContentType": "appl...</msg>
<status status="PASS" starttime="20230717 19:22:11.496" endtime="20230717 19:22:13.018"/>
</kw>
<msg timestamp="20230717 19:22:13.018" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:22:01 GMT",
    "ContentLength": 3,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 2-4/11",
    "ContentType": "appl...</msg>
<status status="PASS" starttime="20230717 19:22:11.492" endtime="20230717 19:22:13.018"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:22:13.019" endtime="20230717 19:22:13.020"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 2-4/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:22:13.020" endtime="20230717 19:22:13.021"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:22:13.021" endtime="20230717 19:22:13.022"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=2 bs=1 count=3 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:22:13.029" level="INFO">Running command 'dd if=/tmp/testfile skip=2 bs=1 count=3 2&gt;/dev/null'.</msg>
<msg timestamp="20230717 19:22:13.043" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:22:13.043" level="INFO">${output} = ndo</msg>
<status status="PASS" starttime="20230717 19:22:13.025" endtime="20230717 19:22:13.043"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:22:13.048" level="INFO">ndo</msg>
<status status="PASS" starttime="20230717 19:22:13.046" endtime="20230717 19:22:13.048"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:22:13.051" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:22:13.049" endtime="20230717 19:22:13.052"/>
</kw>
<status status="PASS" starttime="20230717 19:22:13.023" endtime="20230717 19:22:13.052"/>
</kw>
<msg timestamp="20230717 19:22:13.052" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:22:13.023" endtime="20230717 19:22:13.052"/>
</kw>
<msg timestamp="20230717 19:22:13.054" level="INFO">${expectedData} = ndo</msg>
<status status="PASS" starttime="20230717 19:22:13.022" endtime="20230717 19:22:13.054"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile1.result1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:22:13.069" level="INFO">Running command 'cat /tmp/testfile1.result1 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:22:13.075" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:22:13.076" level="INFO">${output} = ndo</msg>
<status status="PASS" starttime="20230717 19:22:13.062" endtime="20230717 19:22:13.076"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:22:13.079" level="INFO">ndo</msg>
<status status="PASS" starttime="20230717 19:22:13.077" endtime="20230717 19:22:13.079"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:22:13.080" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:22:13.080" endtime="20230717 19:22:13.081"/>
</kw>
<status status="PASS" starttime="20230717 19:22:13.059" endtime="20230717 19:22:13.081"/>
</kw>
<msg timestamp="20230717 19:22:13.081" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:22:13.058" endtime="20230717 19:22:13.081"/>
</kw>
<msg timestamp="20230717 19:22:13.082" level="INFO">${actualData} = ndo</msg>
<status status="PASS" starttime="20230717 19:22:13.055" endtime="20230717 19:22:13.082"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230717 19:22:13.082" endtime="20230717 19:22:13.083"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=2-1000 /tmp/testfile1.result2</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:22:13.093" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-7217803904/putobject/key=value/f1 --range bytes=2-1000 /tmp/testfile1.result2 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:22:14.503" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:22:14.503" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:22:01 GMT",
    "ContentLength": 9,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 2-10/11",
    "ContentType": "app...</msg>
<status status="PASS" starttime="20230717 19:22:13.088" endtime="20230717 19:22:14.503"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:22:14.507" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:22:01 GMT",
    "ContentLength": 9,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 2-10/11",
    "ContentType": "application/octet-stream",
    "Expires": "Mon, 17 Jul 2023 19:22:14 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230717 19:22:14.504" endtime="20230717 19:22:14.507"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:22:14.508" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:22:14.507" endtime="20230717 19:22:14.509"/>
</kw>
<status status="PASS" starttime="20230717 19:22:13.087" endtime="20230717 19:22:14.509"/>
</kw>
<msg timestamp="20230717 19:22:14.509" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:22:13.086" endtime="20230717 19:22:14.510"/>
</kw>
<msg timestamp="20230717 19:22:14.511" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:22:01 GMT",
    "ContentLength": 9,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 2-10/11",
    "ContentType": "app...</msg>
<status status="PASS" starttime="20230717 19:22:13.085" endtime="20230717 19:22:14.511"/>
</kw>
<msg timestamp="20230717 19:22:14.511" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:22:01 GMT",
    "ContentLength": 9,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 2-10/11",
    "ContentType": "app...</msg>
<status status="PASS" starttime="20230717 19:22:13.083" endtime="20230717 19:22:14.511"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:22:14.512" endtime="20230717 19:22:14.513"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 2-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:22:14.515" endtime="20230717 19:22:14.519"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:22:14.519" endtime="20230717 19:22:14.522"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=2 bs=1 count=9 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:22:14.539" level="INFO">Running command 'dd if=/tmp/testfile skip=2 bs=1 count=9 2&gt;/dev/null'.</msg>
<msg timestamp="20230717 19:22:14.546" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:22:14.547" level="INFO">${output} = ndomtext</msg>
<status status="PASS" starttime="20230717 19:22:14.531" endtime="20230717 19:22:14.547"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:22:14.550" level="INFO">ndomtext</msg>
<status status="PASS" starttime="20230717 19:22:14.548" endtime="20230717 19:22:14.551"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:22:14.552" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:22:14.551" endtime="20230717 19:22:14.552"/>
</kw>
<status status="PASS" starttime="20230717 19:22:14.528" endtime="20230717 19:22:14.553"/>
</kw>
<msg timestamp="20230717 19:22:14.553" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:22:14.527" endtime="20230717 19:22:14.553"/>
</kw>
<msg timestamp="20230717 19:22:14.554" level="INFO">${expectedData} = ndomtext</msg>
<status status="PASS" starttime="20230717 19:22:14.522" endtime="20230717 19:22:14.554"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile1.result2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:22:14.567" level="INFO">Running command 'cat /tmp/testfile1.result2 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:22:14.572" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:22:14.572" level="INFO">${output} = ndomtext</msg>
<status status="PASS" starttime="20230717 19:22:14.556" endtime="20230717 19:22:14.575"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:22:14.579" level="INFO">ndomtext</msg>
<status status="PASS" starttime="20230717 19:22:14.576" endtime="20230717 19:22:14.579"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:22:14.581" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:22:14.580" endtime="20230717 19:22:14.581"/>
</kw>
<status status="PASS" starttime="20230717 19:22:14.555" endtime="20230717 19:22:14.581"/>
</kw>
<msg timestamp="20230717 19:22:14.582" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:22:14.555" endtime="20230717 19:22:14.582"/>
</kw>
<msg timestamp="20230717 19:22:14.582" level="INFO">${actualData} = ndomtext</msg>
<status status="PASS" starttime="20230717 19:22:14.554" endtime="20230717 19:22:14.582"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230717 19:22:14.583" endtime="20230717 19:22:14.584"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:22:09.636" endtime="20230717 19:22:14.584"/>
</test>
<test id="s1-s8-s13-t5" name="Get Partial object from s3 with both start and endoffset(start offset and endoffset is greater than file size)" line="80">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=10000-10000 /tmp/testfile2.result</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:22:14.598" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-7217803904/putobject/key=value/f1 --range bytes=10000-10000 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:22:15.828" level="INFO">${rc} = 255</msg>
<msg timestamp="20230717 19:22:15.829" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20230717 19:22:14.592" endtime="20230717 19:22:15.829"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:22:15.831" level="INFO">
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20230717 19:22:15.830" endtime="20230717 19:22:15.831"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:22:15.833" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:22:15.832" endtime="20230717 19:22:15.833"/>
</kw>
<msg timestamp="20230717 19:22:15.833" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20230717 19:22:14.591" endtime="20230717 19:22:15.833"/>
</kw>
<msg timestamp="20230717 19:22:15.833" level="INFO">${result} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20230717 19:22:14.590" endtime="20230717 19:22:15.834"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:22:15.834" endtime="20230717 19:22:15.835"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:22:14.586" endtime="20230717 19:22:15.835"/>
</test>
<test id="s1-s8-s13-t6" name="Get Partial object from s3 with both start and endoffset(end offset is greater than file size)" line="85">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=0-10000 /tmp/testfile2.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:22:15.851" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-7217803904/putobject/key=value/f1 --range bytes=0-10000 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:22:17.418" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:22:17.418" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:22:01 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-10/11",
    "ContentType": "ap...</msg>
<status status="PASS" starttime="20230717 19:22:15.844" endtime="20230717 19:22:17.418"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:22:17.421" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:22:01 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-10/11",
    "ContentType": "application/octet-stream",
    "Expires": "Mon, 17 Jul 2023 19:22:17 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230717 19:22:17.419" endtime="20230717 19:22:17.421"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:22:17.422" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:22:17.421" endtime="20230717 19:22:17.423"/>
</kw>
<status status="PASS" starttime="20230717 19:22:15.843" endtime="20230717 19:22:17.423"/>
</kw>
<msg timestamp="20230717 19:22:17.423" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:22:15.841" endtime="20230717 19:22:17.424"/>
</kw>
<msg timestamp="20230717 19:22:17.424" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:22:01 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-10/11",
    "ContentType": "ap...</msg>
<status status="PASS" starttime="20230717 19:22:15.840" endtime="20230717 19:22:17.424"/>
</kw>
<msg timestamp="20230717 19:22:17.425" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:22:01 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-10/11",
    "ContentType": "ap...</msg>
<status status="PASS" starttime="20230717 19:22:15.839" endtime="20230717 19:22:17.425"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:22:17.425" endtime="20230717 19:22:17.426"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:22:17.427" endtime="20230717 19:22:17.428"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:22:17.428" endtime="20230717 19:22:17.429"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:22:17.439" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:22:17.444" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:22:17.445" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20230717 19:22:17.433" endtime="20230717 19:22:17.445"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:22:17.448" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20230717 19:22:17.446" endtime="20230717 19:22:17.448"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:22:17.450" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:22:17.449" endtime="20230717 19:22:17.450"/>
</kw>
<status status="PASS" starttime="20230717 19:22:17.432" endtime="20230717 19:22:17.451"/>
</kw>
<msg timestamp="20230717 19:22:17.451" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:22:17.430" endtime="20230717 19:22:17.451"/>
</kw>
<msg timestamp="20230717 19:22:17.452" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20230717 19:22:17.429" endtime="20230717 19:22:17.452"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile2.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:22:17.461" level="INFO">Running command 'cat /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:22:17.467" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:22:17.467" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20230717 19:22:17.455" endtime="20230717 19:22:17.467"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:22:17.470" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20230717 19:22:17.468" endtime="20230717 19:22:17.470"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:22:17.472" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:22:17.471" endtime="20230717 19:22:17.472"/>
</kw>
<status status="PASS" starttime="20230717 19:22:17.454" endtime="20230717 19:22:17.473"/>
</kw>
<msg timestamp="20230717 19:22:17.473" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:22:17.453" endtime="20230717 19:22:17.473"/>
</kw>
<msg timestamp="20230717 19:22:17.474" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20230717 19:22:17.452" endtime="20230717 19:22:17.474"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230717 19:22:17.474" endtime="20230717 19:22:17.475"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:22:15.837" endtime="20230717 19:22:17.476"/>
</test>
<test id="s1-s8-s13-t7" name="Get Partial object from s3 with only start offset" line="94">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=0- /tmp/testfile3.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:22:17.491" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-7217803904/putobject/key=value/f1 --range bytes=0- /tmp/testfile3.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:22:18.894" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:22:18.894" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:22:01 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-10/11",
    "ContentType": "ap...</msg>
<status status="PASS" starttime="20230717 19:22:17.485" endtime="20230717 19:22:18.894"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:22:18.896" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:22:01 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-10/11",
    "ContentType": "application/octet-stream",
    "Expires": "Mon, 17 Jul 2023 19:22:18 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230717 19:22:18.895" endtime="20230717 19:22:18.896"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:22:18.898" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:22:18.897" endtime="20230717 19:22:18.898"/>
</kw>
<status status="PASS" starttime="20230717 19:22:17.484" endtime="20230717 19:22:18.900"/>
</kw>
<msg timestamp="20230717 19:22:18.900" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:22:17.483" endtime="20230717 19:22:18.900"/>
</kw>
<msg timestamp="20230717 19:22:18.901" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:22:01 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-10/11",
    "ContentType": "ap...</msg>
<status status="PASS" starttime="20230717 19:22:17.481" endtime="20230717 19:22:18.901"/>
</kw>
<msg timestamp="20230717 19:22:18.901" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:22:01 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-10/11",
    "ContentType": "ap...</msg>
<status status="PASS" starttime="20230717 19:22:17.480" endtime="20230717 19:22:18.901"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:22:18.902" endtime="20230717 19:22:18.903"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:22:18.904" endtime="20230717 19:22:18.904"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:22:18.905" endtime="20230717 19:22:18.906"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:22:18.915" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:22:18.920" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:22:18.920" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20230717 19:22:18.909" endtime="20230717 19:22:18.921"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:22:18.923" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20230717 19:22:18.921" endtime="20230717 19:22:18.923"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:22:18.924" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:22:18.923" endtime="20230717 19:22:18.924"/>
</kw>
<status status="PASS" starttime="20230717 19:22:18.908" endtime="20230717 19:22:18.925"/>
</kw>
<msg timestamp="20230717 19:22:18.925" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:22:18.907" endtime="20230717 19:22:18.925"/>
</kw>
<msg timestamp="20230717 19:22:18.925" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20230717 19:22:18.906" endtime="20230717 19:22:18.926"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile3.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:22:18.933" level="INFO">Running command 'cat /tmp/testfile3.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:22:18.938" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:22:18.938" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20230717 19:22:18.928" endtime="20230717 19:22:18.938"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:22:18.940" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20230717 19:22:18.939" endtime="20230717 19:22:18.940"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:22:18.941" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:22:18.940" endtime="20230717 19:22:18.941"/>
</kw>
<status status="PASS" starttime="20230717 19:22:18.927" endtime="20230717 19:22:18.942"/>
</kw>
<msg timestamp="20230717 19:22:18.942" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:22:18.927" endtime="20230717 19:22:18.942"/>
</kw>
<msg timestamp="20230717 19:22:18.942" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20230717 19:22:18.926" endtime="20230717 19:22:18.942"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230717 19:22:18.943" endtime="20230717 19:22:18.944"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:22:17.478" endtime="20230717 19:22:18.944"/>
</test>
<test id="s1-s8-s13-t8" name="Get Partial object from s3 with both start and endoffset which are equal" line="103">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=0-0 /tmp/testfile4.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:22:18.974" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-7217803904/putobject/key=value/f1 --range bytes=0-0 /tmp/testfile4.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:22:20.315" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:22:20.315" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:22:01 GMT",
    "ContentLength": 1,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-0/11",
    "ContentType": "appl...</msg>
<status status="PASS" starttime="20230717 19:22:18.952" endtime="20230717 19:22:20.316"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:22:20.320" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:22:01 GMT",
    "ContentLength": 1,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-0/11",
    "ContentType": "application/octet-stream",
    "Expires": "Mon, 17 Jul 2023 19:22:20 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230717 19:22:20.316" endtime="20230717 19:22:20.320"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:22:20.321" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:22:20.320" endtime="20230717 19:22:20.322"/>
</kw>
<status status="PASS" starttime="20230717 19:22:18.951" endtime="20230717 19:22:20.322"/>
</kw>
<msg timestamp="20230717 19:22:20.322" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:22:18.950" endtime="20230717 19:22:20.322"/>
</kw>
<msg timestamp="20230717 19:22:20.323" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:22:01 GMT",
    "ContentLength": 1,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-0/11",
    "ContentType": "appl...</msg>
<status status="PASS" starttime="20230717 19:22:18.949" endtime="20230717 19:22:20.323"/>
</kw>
<msg timestamp="20230717 19:22:20.323" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:22:01 GMT",
    "ContentLength": 1,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-0/11",
    "ContentType": "appl...</msg>
<status status="PASS" starttime="20230717 19:22:18.947" endtime="20230717 19:22:20.323"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:22:20.323" endtime="20230717 19:22:20.324"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-0/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:22:20.324" endtime="20230717 19:22:20.326"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:22:20.326" endtime="20230717 19:22:20.327"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=0 bs=1 count=1 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:22:20.342" level="INFO">Running command 'dd if=/tmp/testfile skip=0 bs=1 count=1 2&gt;/dev/null'.</msg>
<msg timestamp="20230717 19:22:20.349" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:22:20.349" level="INFO">${output} = R</msg>
<status status="PASS" starttime="20230717 19:22:20.332" endtime="20230717 19:22:20.350"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:22:20.353" level="INFO">R</msg>
<status status="PASS" starttime="20230717 19:22:20.352" endtime="20230717 19:22:20.353"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:22:20.354" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:22:20.353" endtime="20230717 19:22:20.354"/>
</kw>
<status status="PASS" starttime="20230717 19:22:20.328" endtime="20230717 19:22:20.356"/>
</kw>
<msg timestamp="20230717 19:22:20.356" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:22:20.328" endtime="20230717 19:22:20.356"/>
</kw>
<msg timestamp="20230717 19:22:20.357" level="INFO">${expectedData} = R</msg>
<status status="PASS" starttime="20230717 19:22:20.327" endtime="20230717 19:22:20.357"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile4.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:22:20.368" level="INFO">Running command 'cat /tmp/testfile4.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:22:20.376" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:22:20.376" level="INFO">${output} = R</msg>
<status status="PASS" starttime="20230717 19:22:20.361" endtime="20230717 19:22:20.376"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:22:20.380" level="INFO">R</msg>
<status status="PASS" starttime="20230717 19:22:20.379" endtime="20230717 19:22:20.380"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:22:20.383" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:22:20.381" endtime="20230717 19:22:20.384"/>
</kw>
<status status="PASS" starttime="20230717 19:22:20.360" endtime="20230717 19:22:20.384"/>
</kw>
<msg timestamp="20230717 19:22:20.384" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:22:20.359" endtime="20230717 19:22:20.385"/>
</kw>
<msg timestamp="20230717 19:22:20.386" level="INFO">${actualData} = R</msg>
<status status="PASS" starttime="20230717 19:22:20.357" endtime="20230717 19:22:20.386"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230717 19:22:20.387" endtime="20230717 19:22:20.389"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=4-4 /tmp/testfile5.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:22:20.402" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-7217803904/putobject/key=value/f1 --range bytes=4-4 /tmp/testfile5.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:22:21.962" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:22:21.962" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:22:01 GMT",
    "ContentLength": 1,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 4-4/11",
    "ContentType": "appl...</msg>
<status status="PASS" starttime="20230717 19:22:20.397" endtime="20230717 19:22:21.962"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:22:21.965" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:22:01 GMT",
    "ContentLength": 1,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 4-4/11",
    "ContentType": "application/octet-stream",
    "Expires": "Mon, 17 Jul 2023 19:22:21 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230717 19:22:21.963" endtime="20230717 19:22:21.966"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:22:21.967" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:22:21.966" endtime="20230717 19:22:21.967"/>
</kw>
<status status="PASS" starttime="20230717 19:22:20.394" endtime="20230717 19:22:21.968"/>
</kw>
<msg timestamp="20230717 19:22:21.968" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:22:20.394" endtime="20230717 19:22:21.968"/>
</kw>
<msg timestamp="20230717 19:22:21.968" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:22:01 GMT",
    "ContentLength": 1,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 4-4/11",
    "ContentType": "appl...</msg>
<status status="PASS" starttime="20230717 19:22:20.392" endtime="20230717 19:22:21.968"/>
</kw>
<msg timestamp="20230717 19:22:21.969" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:22:01 GMT",
    "ContentLength": 1,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 4-4/11",
    "ContentType": "appl...</msg>
<status status="PASS" starttime="20230717 19:22:20.389" endtime="20230717 19:22:21.969"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:22:21.969" endtime="20230717 19:22:21.970"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 4-4/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:22:21.971" endtime="20230717 19:22:21.971"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:22:21.972" endtime="20230717 19:22:21.972"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=4 bs=1 count=1 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:22:21.984" level="INFO">Running command 'dd if=/tmp/testfile skip=4 bs=1 count=1 2&gt;/dev/null'.</msg>
<msg timestamp="20230717 19:22:21.990" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:22:21.990" level="INFO">${output} = o</msg>
<status status="PASS" starttime="20230717 19:22:21.978" endtime="20230717 19:22:21.990"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:22:21.993" level="INFO">o</msg>
<status status="PASS" starttime="20230717 19:22:21.991" endtime="20230717 19:22:21.993"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:22:21.994" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:22:21.993" endtime="20230717 19:22:21.994"/>
</kw>
<status status="PASS" starttime="20230717 19:22:21.975" endtime="20230717 19:22:21.995"/>
</kw>
<msg timestamp="20230717 19:22:21.995" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:22:21.974" endtime="20230717 19:22:21.995"/>
</kw>
<msg timestamp="20230717 19:22:21.996" level="INFO">${expectedData} = o</msg>
<status status="PASS" starttime="20230717 19:22:21.972" endtime="20230717 19:22:21.996"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile5.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:22:22.004" level="INFO">Running command 'cat /tmp/testfile5.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:22:22.009" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:22:22.009" level="INFO">${output} = o</msg>
<status status="PASS" starttime="20230717 19:22:21.999" endtime="20230717 19:22:22.009"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:22:22.011" level="INFO">o</msg>
<status status="PASS" starttime="20230717 19:22:22.010" endtime="20230717 19:22:22.012"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:22:22.013" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:22:22.012" endtime="20230717 19:22:22.013"/>
</kw>
<status status="PASS" starttime="20230717 19:22:21.998" endtime="20230717 19:22:22.013"/>
</kw>
<msg timestamp="20230717 19:22:22.014" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:22:21.997" endtime="20230717 19:22:22.014"/>
</kw>
<msg timestamp="20230717 19:22:22.014" level="INFO">${actualData} = o</msg>
<status status="PASS" starttime="20230717 19:22:21.996" endtime="20230717 19:22:22.014"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230717 19:22:22.014" endtime="20230717 19:22:22.015"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:22:18.946" endtime="20230717 19:22:22.016"/>
</test>
<test id="s1-s8-s13-t9" name="Get Partial object from s3 to get last n bytes" line="120">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=-4 /tmp/testfile6.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:22:22.038" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-7217803904/putobject/key=value/f1 --range bytes=-4 /tmp/testfile6.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:22:23.619" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:22:23.619" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:22:01 GMT",
    "ContentLength": 4,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 7-10/11",
    "ContentType": "app...</msg>
<status status="PASS" starttime="20230717 19:22:22.031" endtime="20230717 19:22:23.619"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:22:23.623" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:22:01 GMT",
    "ContentLength": 4,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 7-10/11",
    "ContentType": "application/octet-stream",
    "Expires": "Mon, 17 Jul 2023 19:22:23 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230717 19:22:23.621" endtime="20230717 19:22:23.623"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:22:23.625" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:22:23.624" endtime="20230717 19:22:23.626"/>
</kw>
<status status="PASS" starttime="20230717 19:22:22.031" endtime="20230717 19:22:23.626"/>
</kw>
<msg timestamp="20230717 19:22:23.627" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:22:22.030" endtime="20230717 19:22:23.627"/>
</kw>
<msg timestamp="20230717 19:22:23.628" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:22:01 GMT",
    "ContentLength": 4,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 7-10/11",
    "ContentType": "app...</msg>
<status status="PASS" starttime="20230717 19:22:22.021" endtime="20230717 19:22:23.628"/>
</kw>
<msg timestamp="20230717 19:22:23.629" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:22:01 GMT",
    "ContentLength": 4,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 7-10/11",
    "ContentType": "app...</msg>
<status status="PASS" starttime="20230717 19:22:22.019" endtime="20230717 19:22:23.629"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:22:23.629" endtime="20230717 19:22:23.630"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 7-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:22:23.631" endtime="20230717 19:22:23.632"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:22:23.632" endtime="20230717 19:22:23.634"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=7 bs=1 count=4 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:22:23.645" level="INFO">Running command 'dd if=/tmp/testfile skip=7 bs=1 count=4 2&gt;/dev/null'.</msg>
<msg timestamp="20230717 19:22:23.652" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:22:23.653" level="INFO">${output} = ext</msg>
<status status="PASS" starttime="20230717 19:22:23.638" endtime="20230717 19:22:23.653"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:22:23.658" level="INFO">ext</msg>
<status status="PASS" starttime="20230717 19:22:23.655" endtime="20230717 19:22:23.658"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:22:23.661" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:22:23.659" endtime="20230717 19:22:23.661"/>
</kw>
<status status="PASS" starttime="20230717 19:22:23.637" endtime="20230717 19:22:23.661"/>
</kw>
<msg timestamp="20230717 19:22:23.661" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:22:23.636" endtime="20230717 19:22:23.662"/>
</kw>
<msg timestamp="20230717 19:22:23.662" level="INFO">${expectedData} = ext</msg>
<status status="PASS" starttime="20230717 19:22:23.634" endtime="20230717 19:22:23.662"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile6.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:22:23.677" level="INFO">Running command 'cat /tmp/testfile6.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:22:23.686" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:22:23.686" level="INFO">${output} = ext</msg>
<status status="PASS" starttime="20230717 19:22:23.668" endtime="20230717 19:22:23.686"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:22:23.690" level="INFO">ext</msg>
<status status="PASS" starttime="20230717 19:22:23.687" endtime="20230717 19:22:23.690"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:22:23.693" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:22:23.692" endtime="20230717 19:22:23.693"/>
</kw>
<status status="PASS" starttime="20230717 19:22:23.665" endtime="20230717 19:22:23.694"/>
</kw>
<msg timestamp="20230717 19:22:23.694" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:22:23.665" endtime="20230717 19:22:23.694"/>
</kw>
<msg timestamp="20230717 19:22:23.695" level="INFO">${actualData} = ext</msg>
<status status="PASS" starttime="20230717 19:22:23.662" endtime="20230717 19:22:23.696"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230717 19:22:23.696" endtime="20230717 19:22:23.697"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=-10000 /tmp/testfile7.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:22:23.711" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-7217803904/putobject/key=value/f1 --range bytes=-10000 /tmp/testfile7.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:22:25.427" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:22:25.428" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:22:01 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-10/11",
    "ContentType": "ap...</msg>
<status status="PASS" starttime="20230717 19:22:23.705" endtime="20230717 19:22:25.429"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:22:25.431" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:22:01 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-10/11",
    "ContentType": "application/octet-stream",
    "Expires": "Mon, 17 Jul 2023 19:22:25 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230717 19:22:25.430" endtime="20230717 19:22:25.432"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:22:25.434" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:22:25.433" endtime="20230717 19:22:25.435"/>
</kw>
<status status="PASS" starttime="20230717 19:22:23.703" endtime="20230717 19:22:25.435"/>
</kw>
<msg timestamp="20230717 19:22:25.435" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:22:23.702" endtime="20230717 19:22:25.436"/>
</kw>
<msg timestamp="20230717 19:22:25.436" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:22:01 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-10/11",
    "ContentType": "ap...</msg>
<status status="PASS" starttime="20230717 19:22:23.701" endtime="20230717 19:22:25.436"/>
</kw>
<msg timestamp="20230717 19:22:25.436" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:22:01 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-10/11",
    "ContentType": "ap...</msg>
<status status="PASS" starttime="20230717 19:22:23.698" endtime="20230717 19:22:25.436"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:22:25.438" endtime="20230717 19:22:25.440"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:22:25.441" endtime="20230717 19:22:25.442"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:22:25.443" endtime="20230717 19:22:25.443"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:22:25.458" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:22:25.467" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:22:25.467" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20230717 19:22:25.453" endtime="20230717 19:22:25.467"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:22:25.474" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20230717 19:22:25.470" endtime="20230717 19:22:25.474"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:22:25.476" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:22:25.475" endtime="20230717 19:22:25.476"/>
</kw>
<status status="PASS" starttime="20230717 19:22:25.451" endtime="20230717 19:22:25.478"/>
</kw>
<msg timestamp="20230717 19:22:25.481" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:22:25.449" endtime="20230717 19:22:25.481"/>
</kw>
<msg timestamp="20230717 19:22:25.482" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20230717 19:22:25.445" endtime="20230717 19:22:25.482"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile7.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:22:25.496" level="INFO">Running command 'cat /tmp/testfile7.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:22:25.506" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:22:25.506" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20230717 19:22:25.490" endtime="20230717 19:22:25.507"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:22:25.510" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20230717 19:22:25.507" endtime="20230717 19:22:25.510"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:22:25.511" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:22:25.511" endtime="20230717 19:22:25.512"/>
</kw>
<status status="PASS" starttime="20230717 19:22:25.487" endtime="20230717 19:22:25.512"/>
</kw>
<msg timestamp="20230717 19:22:25.512" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:22:25.485" endtime="20230717 19:22:25.512"/>
</kw>
<msg timestamp="20230717 19:22:25.514" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20230717 19:22:25.484" endtime="20230717 19:22:25.514"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230717 19:22:25.515" endtime="20230717 19:22:25.516"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:22:22.018" endtime="20230717 19:22:25.517"/>
</test>
<test id="s1-s8-s13-t10" name="Incorrect values for end and start offset" line="138">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=-11-10000 /tmp/testfile8.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:22:25.538" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-7217803904/putobject/key=value/f1 --range bytes=-11-10000 /tmp/testfile8.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:22:27.406" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:22:27.407" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:22:01 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230717 19:22:25.530" endtime="20230717 19:22:27.407"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:22:27.410" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:22:01 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Mon, 17 Jul 2023 19:22:27 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230717 19:22:27.409" endtime="20230717 19:22:27.411"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:22:27.412" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:22:27.412" endtime="20230717 19:22:27.413"/>
</kw>
<status status="PASS" starttime="20230717 19:22:25.528" endtime="20230717 19:22:27.413"/>
</kw>
<msg timestamp="20230717 19:22:27.413" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:22:25.527" endtime="20230717 19:22:27.413"/>
</kw>
<msg timestamp="20230717 19:22:27.414" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:22:01 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230717 19:22:25.524" endtime="20230717 19:22:27.414"/>
</kw>
<msg timestamp="20230717 19:22:27.414" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:22:01 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230717 19:22:25.521" endtime="20230717 19:22:27.414"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:22:27.415" endtime="20230717 19:22:27.416"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:22:27.416" endtime="20230717 19:22:27.417"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:22:27.430" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:22:27.436" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:22:27.437" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20230717 19:22:27.423" endtime="20230717 19:22:27.437"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:22:27.439" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20230717 19:22:27.437" endtime="20230717 19:22:27.439"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:22:27.440" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:22:27.440" endtime="20230717 19:22:27.441"/>
</kw>
<status status="PASS" starttime="20230717 19:22:27.421" endtime="20230717 19:22:27.441"/>
</kw>
<msg timestamp="20230717 19:22:27.441" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:22:27.420" endtime="20230717 19:22:27.441"/>
</kw>
<msg timestamp="20230717 19:22:27.442" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20230717 19:22:27.417" endtime="20230717 19:22:27.442"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile8.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:22:27.458" level="INFO">Running command 'cat /tmp/testfile8.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:22:27.467" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:22:27.467" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20230717 19:22:27.449" endtime="20230717 19:22:27.467"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:22:27.472" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20230717 19:22:27.469" endtime="20230717 19:22:27.472"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:22:27.475" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:22:27.474" endtime="20230717 19:22:27.476"/>
</kw>
<status status="PASS" starttime="20230717 19:22:27.446" endtime="20230717 19:22:27.476"/>
</kw>
<msg timestamp="20230717 19:22:27.477" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:22:27.445" endtime="20230717 19:22:27.477"/>
</kw>
<msg timestamp="20230717 19:22:27.477" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20230717 19:22:27.442" endtime="20230717 19:22:27.477"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230717 19:22:27.479" endtime="20230717 19:22:27.481"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=11-8 /tmp/testfile9.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:22:27.500" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-7217803904/putobject/key=value/f1 --range bytes=11-8 /tmp/testfile9.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:22:29.398" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:22:29.399" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:22:01 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230717 19:22:27.490" endtime="20230717 19:22:29.400"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:22:29.410" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:22:01 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Mon, 17 Jul 2023 19:22:29 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230717 19:22:29.403" endtime="20230717 19:22:29.410"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:22:29.411" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:22:29.410" endtime="20230717 19:22:29.411"/>
</kw>
<status status="PASS" starttime="20230717 19:22:27.488" endtime="20230717 19:22:29.411"/>
</kw>
<msg timestamp="20230717 19:22:29.411" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:22:27.487" endtime="20230717 19:22:29.412"/>
</kw>
<msg timestamp="20230717 19:22:29.412" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:22:01 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230717 19:22:27.485" endtime="20230717 19:22:29.412"/>
</kw>
<msg timestamp="20230717 19:22:29.412" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:22:01 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230717 19:22:27.483" endtime="20230717 19:22:29.412"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:22:29.412" endtime="20230717 19:22:29.413"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:22:29.413" endtime="20230717 19:22:29.413"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:22:29.421" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:22:29.427" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:22:29.428" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20230717 19:22:29.416" endtime="20230717 19:22:29.428"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:22:29.429" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20230717 19:22:29.428" endtime="20230717 19:22:29.429"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:22:29.431" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:22:29.429" endtime="20230717 19:22:29.432"/>
</kw>
<status status="PASS" starttime="20230717 19:22:29.415" endtime="20230717 19:22:29.433"/>
</kw>
<msg timestamp="20230717 19:22:29.433" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:22:29.414" endtime="20230717 19:22:29.433"/>
</kw>
<msg timestamp="20230717 19:22:29.433" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20230717 19:22:29.414" endtime="20230717 19:22:29.433"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile8.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:22:29.443" level="INFO">Running command 'cat /tmp/testfile8.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:22:29.452" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:22:29.452" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20230717 19:22:29.436" endtime="20230717 19:22:29.452"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:22:29.455" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20230717 19:22:29.454" endtime="20230717 19:22:29.455"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:22:29.456" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:22:29.455" endtime="20230717 19:22:29.456"/>
</kw>
<status status="PASS" starttime="20230717 19:22:29.435" endtime="20230717 19:22:29.456"/>
</kw>
<msg timestamp="20230717 19:22:29.456" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:22:29.434" endtime="20230717 19:22:29.457"/>
</kw>
<msg timestamp="20230717 19:22:29.458" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20230717 19:22:29.434" endtime="20230717 19:22:29.458"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230717 19:22:29.458" endtime="20230717 19:22:29.459"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:22:25.519" endtime="20230717 19:22:29.460"/>
</test>
<test id="s1-s8-s13-t11" name="Zero byte file" line="153">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /s3v/${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:22:29.474" level="INFO">Running command 'ozone sh bucket info /s3v/encrypted 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:22:51.104" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:22:51.104" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "s3v",
  "name" : "encrypted",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 364929408,
  "usedNamespace" : 53,
  "creationTime" : "2023-07-1...</msg>
<status status="PASS" starttime="20230717 19:22:29.468" endtime="20230717 19:22:51.105"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:22:51.108" level="INFO">{
  "metadata" : { },
  "volumeName" : "s3v",
  "name" : "encrypted",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 364929408,
  "usedNamespace" : 53,
  "creationTime" : "2023-07-17T19:07:28.175Z",
  "modificationTime" : "2023-07-17T19:07:28.175Z",
  "encryptionKeyName" : "key1",
  "sourcePathExist" : true,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "FILE_SYSTEM_OPTIMIZED",
  "owner" : "testuser",
  "link" : false
}</msg>
<status status="PASS" starttime="20230717 19:22:51.106" endtime="20230717 19:22:51.109"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:22:51.111" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:22:51.109" endtime="20230717 19:22:51.111"/>
</kw>
<status status="PASS" starttime="20230717 19:22:29.466" endtime="20230717 19:22:51.111"/>
</kw>
<msg timestamp="20230717 19:22:51.111" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:22:29.466" endtime="20230717 19:22:51.111"/>
</kw>
<msg timestamp="20230717 19:22:51.112" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "s3v",
  "name" : "encrypted",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 364929408,
  "usedNamespace" : 53,
  "creationTime" : "2023-07-1...</msg>
<status status="PASS" starttime="20230717 19:22:29.464" endtime="20230717 19:22:51.112"/>
</kw>
<kw name="Execute" library="os">
<var>${linked}</var>
<arg>echo '${result}' | jq -j '.sourceVolume,"/",.sourceBucket'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:22:51.122" level="INFO">Running command 'echo '{
  "metadata" : { },
  "volumeName" : "s3v",
  "name" : "encrypted",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 364929408,
  "usedNamespace" : 53,
  "creationTime" : "2023-07-17T19:07:28.175Z",
  "modificationTime" : "2023-07-17T19:07:28.175Z",
  "encryptionKeyName" : "key1",
  "sourcePathExist" : true,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "FILE_SYSTEM_OPTIMIZED",
  "owner" : "testuser",
  "link" : false
}' | jq -j '.sourceVolume,"/",.sourceBucket' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:22:51.202" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:22:51.202" level="INFO">${output} = null/null</msg>
<status status="PASS" starttime="20230717 19:22:51.116" endtime="20230717 19:22:51.202"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:22:51.207" level="INFO">null/null</msg>
<status status="PASS" starttime="20230717 19:22:51.203" endtime="20230717 19:22:51.207"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:22:51.212" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:22:51.209" endtime="20230717 19:22:51.212"/>
</kw>
<status status="PASS" starttime="20230717 19:22:51.115" endtime="20230717 19:22:51.213"/>
</kw>
<msg timestamp="20230717 19:22:51.213" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:22:51.115" endtime="20230717 19:22:51.213"/>
</kw>
<msg timestamp="20230717 19:22:51.215" level="INFO">${linked} = null/null</msg>
<status status="PASS" starttime="20230717 19:22:51.114" endtime="20230717 19:22:51.215"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${eval}</var>
<arg>"source" in """${linked}"""</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230717 19:22:51.221" level="INFO">${eval} = False</msg>
<status status="PASS" starttime="20230717 19:22:51.217" endtime="20230717 19:22:51.221"/>
</kw>
<if>
<branch type="IF" condition="${eval} == ${True}">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${linked}</arg>
<status status="NOT RUN" starttime="20230717 19:22:51.224" endtime="20230717 19:22:51.224"/>
</kw>
<status status="NOT RUN" starttime="20230717 19:22:51.222" endtime="20230717 19:22:51.224"/>
</branch>
<status status="PASS" starttime="20230717 19:22:51.221" endtime="20230717 19:22:51.224"/>
</if>
<kw name="Evaluate" library="BuiltIn">
<var>${fsolayout}</var>
<arg>"OPTIMIZED" in """${result}"""</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230717 19:22:51.227" level="INFO">${fsolayout} = True</msg>
<status status="PASS" starttime="20230717 19:22:51.224" endtime="20230717 19:22:51.227"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/zerobyte --range bytes=0-0 /tmp/testfile2.result</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:22:51.240" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-7217803904/putobject/key=value/zerobyte --range bytes=0-0 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:22:52.761" level="INFO">${rc} = 255</msg>
<msg timestamp="20230717 19:22:52.761" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20230717 19:22:51.232" endtime="20230717 19:22:52.761"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:22:52.764" level="INFO">
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20230717 19:22:52.762" endtime="20230717 19:22:52.764"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:22:52.765" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:22:52.764" endtime="20230717 19:22:52.765"/>
</kw>
<msg timestamp="20230717 19:22:52.766" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20230717 19:22:51.229" endtime="20230717 19:22:52.766"/>
</kw>
<msg timestamp="20230717 19:22:52.766" level="INFO">${result} = 
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20230717 19:22:51.228" endtime="20230717 19:22:52.766"/>
</kw>
<if>
<branch type="IF" condition="${fsolayout} == ${True}">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:22:52.768" endtime="20230717 19:22:52.769"/>
</kw>
<status status="PASS" starttime="20230717 19:22:52.767" endtime="20230717 19:22:52.769"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230717 19:22:52.769" endtime="20230717 19:22:52.769"/>
</kw>
<status status="NOT RUN" starttime="20230717 19:22:52.769" endtime="20230717 19:22:52.769"/>
</branch>
<status status="PASS" starttime="20230717 19:22:52.767" endtime="20230717 19:22:52.769"/>
</if>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/zerobyte --range bytes=0-1 /tmp/testfile2.result</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:22:52.781" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-7217803904/putobject/key=value/zerobyte --range bytes=0-1 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:22:54.786" level="INFO">${rc} = 255</msg>
<msg timestamp="20230717 19:22:54.786" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20230717 19:22:52.772" endtime="20230717 19:22:54.786"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:22:54.793" level="INFO">
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20230717 19:22:54.790" endtime="20230717 19:22:54.793"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:22:54.798" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:22:54.796" endtime="20230717 19:22:54.799"/>
</kw>
<msg timestamp="20230717 19:22:54.799" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20230717 19:22:52.771" endtime="20230717 19:22:54.799"/>
</kw>
<msg timestamp="20230717 19:22:54.799" level="INFO">${result} = 
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20230717 19:22:52.770" endtime="20230717 19:22:54.802"/>
</kw>
<if>
<branch type="IF" condition="${fsolayout} == ${True}">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:22:54.804" endtime="20230717 19:22:54.806"/>
</kw>
<status status="PASS" starttime="20230717 19:22:54.804" endtime="20230717 19:22:54.806"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230717 19:22:54.807" endtime="20230717 19:22:54.807"/>
</kw>
<status status="NOT RUN" starttime="20230717 19:22:54.806" endtime="20230717 19:22:54.807"/>
</branch>
<status status="PASS" starttime="20230717 19:22:54.802" endtime="20230717 19:22:54.807"/>
</if>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/zerobyte --range bytes=0-10000 /tmp/testfile2.result</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:22:54.815" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket encrypted --key ozone-test-7217803904/putobject/key=value/zerobyte --range bytes=0-10000 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:22:56.327" level="INFO">${rc} = 255</msg>
<msg timestamp="20230717 19:22:56.327" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20230717 19:22:54.808" endtime="20230717 19:22:56.327"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:22:56.331" level="INFO">
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20230717 19:22:56.328" endtime="20230717 19:22:56.331"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:22:56.334" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:22:56.333" endtime="20230717 19:22:56.334"/>
</kw>
<msg timestamp="20230717 19:22:56.336" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20230717 19:22:54.808" endtime="20230717 19:22:56.336"/>
</kw>
<msg timestamp="20230717 19:22:56.336" level="INFO">${result} = 
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20230717 19:22:54.807" endtime="20230717 19:22:56.336"/>
</kw>
<if>
<branch type="IF" condition="${fsolayout} == ${True}">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:22:56.341" endtime="20230717 19:22:56.343"/>
</kw>
<status status="PASS" starttime="20230717 19:22:56.340" endtime="20230717 19:22:56.343"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230717 19:22:56.344" endtime="20230717 19:22:56.344"/>
</kw>
<status status="NOT RUN" starttime="20230717 19:22:56.343" endtime="20230717 19:22:56.345"/>
</branch>
<status status="PASS" starttime="20230717 19:22:56.340" endtime="20230717 19:22:56.345"/>
</if>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:22:29.462" endtime="20230717 19:22:56.346"/>
</test>
<test id="s1-s8-s13-t12" name="Create file with user defined metadata" line="183">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:22:56.364" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile2'.</msg>
<msg timestamp="20230717 19:22:56.368" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:22:56.368" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:22:56.356" endtime="20230717 19:22:56.369"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:22:56.370" level="INFO"/>
<status status="PASS" starttime="20230717 19:22:56.370" endtime="20230717 19:22:56.371"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:22:56.373" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:22:56.372" endtime="20230717 19:22:56.374"/>
</kw>
<status status="PASS" starttime="20230717 19:22:56.354" endtime="20230717 19:22:56.374"/>
</kw>
<msg timestamp="20230717 19:22:56.374" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:22:56.354" endtime="20230717 19:22:56.374"/>
</kw>
<status status="PASS" starttime="20230717 19:22:56.353" endtime="20230717 19:22:56.374"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key1 --body /tmp/testfile2 --metadata="custom-key1=custom-value1,custom-key2=custom-value2"</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:22:56.387" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-7217803904/putobject/custom-metadata/key1 --body /tmp/testfile2 --metadata="custom-key1=custom-value1,custom-key2=custom-value2" 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:22:58.370" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:22:58.370" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:22:56.380" endtime="20230717 19:22:58.370"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:22:58.375" level="INFO"/>
<status status="PASS" starttime="20230717 19:22:58.371" endtime="20230717 19:22:58.375"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:22:58.378" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:22:58.376" endtime="20230717 19:22:58.378"/>
</kw>
<status status="PASS" starttime="20230717 19:22:56.379" endtime="20230717 19:22:58.379"/>
</kw>
<msg timestamp="20230717 19:22:58.379" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:22:56.379" endtime="20230717 19:22:58.379"/>
</kw>
<msg timestamp="20230717 19:22:58.379" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:22:56.378" endtime="20230717 19:22:58.379"/>
</kw>
<status status="PASS" starttime="20230717 19:22:56.375" endtime="20230717 19:22:58.379"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:22:58.393" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket encrypted --key ozone-test-7217803904/putobject/custom-metadata/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:22:59.899" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:22:59.901" level="INFO">${output} = {
    "LastModified": "Mon, 17 Jul 2023 19:22:58 GMT",
    "ContentLength": 11,
    "ETag": "2023-07-17T19:22:58.179Z",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "E...</msg>
<status status="PASS" starttime="20230717 19:22:58.387" endtime="20230717 19:22:59.901"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:22:59.908" level="INFO">{
    "LastModified": "Mon, 17 Jul 2023 19:22:58 GMT",
    "ContentLength": 11,
    "ETag": "2023-07-17T19:22:58.179Z",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Mon, 17 Jul 2023 19:22:59 GMT",
    "Metadata": {
        "custom-key1": "custom-value1",
        "custom-key2": "custom-value2"
    }
}</msg>
<status status="PASS" starttime="20230717 19:22:59.902" endtime="20230717 19:22:59.909"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:22:59.913" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:22:59.910" endtime="20230717 19:22:59.913"/>
</kw>
<status status="PASS" starttime="20230717 19:22:58.383" endtime="20230717 19:22:59.914"/>
</kw>
<msg timestamp="20230717 19:22:59.915" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:22:58.383" endtime="20230717 19:22:59.915"/>
</kw>
<msg timestamp="20230717 19:22:59.917" level="INFO">${output} = {
    "LastModified": "Mon, 17 Jul 2023 19:22:58 GMT",
    "ContentLength": 11,
    "ETag": "2023-07-17T19:22:58.179Z",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "E...</msg>
<status status="PASS" starttime="20230717 19:22:58.382" endtime="20230717 19:22:59.917"/>
</kw>
<msg timestamp="20230717 19:22:59.917" level="INFO">${result} = {
    "LastModified": "Mon, 17 Jul 2023 19:22:58 GMT",
    "ContentLength": 11,
    "ETag": "2023-07-17T19:22:58.179Z",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "E...</msg>
<status status="PASS" starttime="20230717 19:22:58.380" endtime="20230717 19:22:59.918"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key1\": \"custom-value1\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:22:59.919" endtime="20230717 19:22:59.921"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key2\": \"custom-value2\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:22:59.922" endtime="20230717 19:22:59.923"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /s3v/${BUCKET}/${PREFIX}/putobject/custom-metadata/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:22:59.944" level="INFO">Running command 'ozone sh key info /s3v/encrypted/ozone-test-7217803904/putobject/custom-metadata/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:23:19.128" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:23:19.128" level="INFO">${output} = {
  "volumeName" : "s3v",
  "bucketName" : "encrypted",
  "name" : "ozone-test-7217803904/putobject/custom-metadata/key1",
  "dataSize" : 11,
  "creationTime" : "2023-07-17T19:22:57.893Z",
  "modifica...</msg>
<status status="PASS" starttime="20230717 19:22:59.932" endtime="20230717 19:23:19.128"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:23:19.132" level="INFO">{
  "volumeName" : "s3v",
  "bucketName" : "encrypted",
  "name" : "ozone-test-7217803904/putobject/custom-metadata/key1",
  "dataSize" : 11,
  "creationTime" : "2023-07-17T19:22:57.893Z",
  "modificationTime" : "2023-07-17T19:22:58.179Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : {
    "custom-key1" : "custom-value1",
    "custom-key2" : "custom-value2"
  },
  "ozoneKeyLocations" : [ {
    "containerID" : 1,
    "localID" : 111677748019200183,
    "length" : 11,
    "offset" : 0,
    "keyOffset" : 0
  } ],
  "fileEncryptionInfo" : {
    "cipherSuite" : "AES_CTR_NOPADDING",
    "iv" : "NuhNcoL+QomZnTWCgxcXDA==",
    "keyName" : "key1",
    "ezKeyVersionName" : "key1@0",
    "encryptedDataEncryptionKey" : "bdj4dzF+Au+2gyibk1jYJg==",
    "cryptoProtocolVersion" : "ENCRYPTION_ZONES"
  },
  "file" : true
}</msg>
<status status="PASS" starttime="20230717 19:23:19.131" endtime="20230717 19:23:19.132"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:23:19.134" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:23:19.133" endtime="20230717 19:23:19.134"/>
</kw>
<status status="PASS" starttime="20230717 19:22:59.930" endtime="20230717 19:23:19.134"/>
</kw>
<msg timestamp="20230717 19:23:19.134" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:22:59.929" endtime="20230717 19:23:19.135"/>
</kw>
<msg timestamp="20230717 19:23:19.135" level="INFO">${result} = {
  "volumeName" : "s3v",
  "bucketName" : "encrypted",
  "name" : "ozone-test-7217803904/putobject/custom-metadata/key1",
  "dataSize" : 11,
  "creationTime" : "2023-07-17T19:22:57.893Z",
  "modifica...</msg>
<status status="PASS" starttime="20230717 19:22:59.925" endtime="20230717 19:23:19.135"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key1\" : \"custom-value1\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:23:19.135" endtime="20230717 19:23:19.136"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key2\" : \"custom-value2\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:23:19.136" endtime="20230717 19:23:19.136"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:22:56.350" endtime="20230717 19:23:19.137"/>
</test>
<test id="s1-s8-s13-t13" name="Create file with user defined metadata with gdpr enabled value in request" line="195">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:23:19.148" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile2'.</msg>
<msg timestamp="20230717 19:23:19.151" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:23:19.151" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:23:19.144" endtime="20230717 19:23:19.151"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:23:19.154" level="INFO"/>
<status status="PASS" starttime="20230717 19:23:19.153" endtime="20230717 19:23:19.154"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:23:19.156" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:23:19.154" endtime="20230717 19:23:19.156"/>
</kw>
<status status="PASS" starttime="20230717 19:23:19.142" endtime="20230717 19:23:19.156"/>
</kw>
<msg timestamp="20230717 19:23:19.156" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:23:19.141" endtime="20230717 19:23:19.157"/>
</kw>
<status status="PASS" starttime="20230717 19:23:19.141" endtime="20230717 19:23:19.157"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key2 --body /tmp/testfile2 --metadata="gdprEnabled=true,custom-key2=custom-value2"</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:23:19.174" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-7217803904/putobject/custom-metadata/key2 --body /tmp/testfile2 --metadata="gdprEnabled=true,custom-key2=custom-value2" 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:23:20.701" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:23:20.701" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:23:19.164" endtime="20230717 19:23:20.701"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:23:20.702" level="INFO"/>
<status status="PASS" starttime="20230717 19:23:20.701" endtime="20230717 19:23:20.702"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:23:20.708" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:23:20.705" endtime="20230717 19:23:20.708"/>
</kw>
<status status="PASS" starttime="20230717 19:23:19.162" endtime="20230717 19:23:20.709"/>
</kw>
<msg timestamp="20230717 19:23:20.709" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:23:19.162" endtime="20230717 19:23:20.710"/>
</kw>
<msg timestamp="20230717 19:23:20.711" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:23:19.159" endtime="20230717 19:23:20.711"/>
</kw>
<status status="PASS" starttime="20230717 19:23:19.157" endtime="20230717 19:23:20.711"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key2</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:23:20.737" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket encrypted --key ozone-test-7217803904/putobject/custom-metadata/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:23:22.528" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:23:22.528" level="INFO">${output} = {
    "LastModified": "Mon, 17 Jul 2023 19:23:20 GMT",
    "ContentLength": 11,
    "ETag": "2023-07-17T19:23:20.538Z",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "E...</msg>
<status status="PASS" starttime="20230717 19:23:20.722" endtime="20230717 19:23:22.528"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:23:22.532" level="INFO">{
    "LastModified": "Mon, 17 Jul 2023 19:23:20 GMT",
    "ContentLength": 11,
    "ETag": "2023-07-17T19:23:20.538Z",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Mon, 17 Jul 2023 19:23:22 GMT",
    "Metadata": {
        "custom-key2": "custom-value2"
    }
}</msg>
<status status="PASS" starttime="20230717 19:23:22.530" endtime="20230717 19:23:22.533"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:23:22.536" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:23:22.534" endtime="20230717 19:23:22.536"/>
</kw>
<status status="PASS" starttime="20230717 19:23:20.718" endtime="20230717 19:23:22.537"/>
</kw>
<msg timestamp="20230717 19:23:22.537" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:23:20.717" endtime="20230717 19:23:22.537"/>
</kw>
<msg timestamp="20230717 19:23:22.538" level="INFO">${output} = {
    "LastModified": "Mon, 17 Jul 2023 19:23:20 GMT",
    "ContentLength": 11,
    "ETag": "2023-07-17T19:23:20.538Z",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "E...</msg>
<status status="PASS" starttime="20230717 19:23:20.715" endtime="20230717 19:23:22.538"/>
</kw>
<msg timestamp="20230717 19:23:22.539" level="INFO">${result} = {
    "LastModified": "Mon, 17 Jul 2023 19:23:20 GMT",
    "ContentLength": 11,
    "ETag": "2023-07-17T19:23:20.538Z",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "E...</msg>
<status status="PASS" starttime="20230717 19:23:20.711" endtime="20230717 19:23:22.539"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key2\": \"custom-value2\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:23:22.540" endtime="20230717 19:23:22.542"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"gdprEnabled\": \"true\"</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:23:22.542" endtime="20230717 19:23:22.544"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:23:19.139" endtime="20230717 19:23:22.544"/>
</test>
<test id="s1-s8-s13-t14" name="Create file with user defined metadata size larger than 2 KB" line="203">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:23:22.561" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile2'.</msg>
<msg timestamp="20230717 19:23:22.567" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:23:22.567" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:23:22.553" endtime="20230717 19:23:22.567"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:23:22.572" level="INFO"/>
<status status="PASS" starttime="20230717 19:23:22.569" endtime="20230717 19:23:22.572"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:23:22.575" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:23:22.573" endtime="20230717 19:23:22.575"/>
</kw>
<status status="PASS" starttime="20230717 19:23:22.551" endtime="20230717 19:23:22.576"/>
</kw>
<msg timestamp="20230717 19:23:22.576" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:23:22.551" endtime="20230717 19:23:22.576"/>
</kw>
<status status="PASS" starttime="20230717 19:23:22.549" endtime="20230717 19:23:22.577"/>
</kw>
<kw name="Execute" library="os">
<var>${custom_metadata_value}</var>
<arg>printf 'v%.0s' {1..3000}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:23:22.588" level="INFO">Running command 'printf 'v%.0s' {1..3000} 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:23:22.602" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:23:22.602" level="INFO">${output} = vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv...</msg>
<status status="PASS" starttime="20230717 19:23:22.581" endtime="20230717 19:23:22.602"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:23:22.605" level="INFO">vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv</msg>
<status status="PASS" starttime="20230717 19:23:22.603" endtime="20230717 19:23:22.605"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:23:22.607" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:23:22.606" endtime="20230717 19:23:22.607"/>
</kw>
<status status="PASS" starttime="20230717 19:23:22.579" endtime="20230717 19:23:22.607"/>
</kw>
<msg timestamp="20230717 19:23:22.607" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:23:22.579" endtime="20230717 19:23:22.608"/>
</kw>
<msg timestamp="20230717 19:23:22.608" level="INFO">${custom_metadata_value} = vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv...</msg>
<status status="PASS" starttime="20230717 19:23:22.578" endtime="20230717 19:23:22.609"/>
</kw>
<kw name="Execute AWSS3APICli and ignore error" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key2 --body /tmp/testfile2 --metadata="custom-key1=${custom_metadata_value}"</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:23:22.619" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket encrypted --key ozone-test-7217803904/putobject/custom-metadata/key2 --body /tmp/testfile2 --metadata="custom-key1=vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv" 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:23:28.807" level="INFO">${rc} = 255</msg>
<msg timestamp="20230717 19:23:28.807" level="INFO">${output} = 
An error occurred (500) when calling the PutObject operation (reached max retries: 4): Internal Server Error</msg>
<status status="PASS" starttime="20230717 19:23:22.612" endtime="20230717 19:23:28.807"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:23:28.812" level="INFO">
An error occurred (500) when calling the PutObject operation (reached max retries: 4): Internal Server Error</msg>
<status status="PASS" starttime="20230717 19:23:28.808" endtime="20230717 19:23:28.812"/>
</kw>
<msg timestamp="20230717 19:23:28.812" level="INFO">${output} = 
An error occurred (500) when calling the PutObject operation (reached max retries: 4): Internal Server Error</msg>
<status status="PASS" starttime="20230717 19:23:22.611" endtime="20230717 19:23:28.812"/>
</kw>
<msg timestamp="20230717 19:23:28.813" level="INFO">${result} = 
An error occurred (500) when calling the PutObject operation (reached max retries: 4): Internal Server Error</msg>
<status status="PASS" starttime="20230717 19:23:22.609" endtime="20230717 19:23:28.813"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>custom-key1: ${custom_metadata_value}</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:23:28.813" endtime="20230717 19:23:28.814"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:23:22.545" endtime="20230717 19:23:28.815"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20230717 19:21:59.507" endtime="20230717 19:23:28.818"/>
</suite>
<suite id="s1-s8-s14" name="S3 Getsecret" source="/opt/hadoop/smoketest/s3/s3_getsecret.robot">
<test id="s1-s8-s14-t1" name="Without OM service ID" line="28">
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>N/A</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230717 19:23:28.846" endtime="20230717 19:23:28.847"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone s3 getsecret -u testuser2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:23:28.856" level="INFO">Running command 'ozone s3 getsecret -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:23:43.871" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:23:43.871" level="INFO">${output} = awsAccessKey=testuser2
awsSecret=a35fa93bff2715a23f8f2abf3a2ca48fd70c748e4f9e1307ef1e77b7b1a62748</msg>
<status status="PASS" starttime="20230717 19:23:28.851" endtime="20230717 19:23:43.871"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:23:43.873" level="INFO">awsAccessKey=testuser2
awsSecret=a35fa93bff2715a23f8f2abf3a2ca48fd70c748e4f9e1307ef1e77b7b1a62748</msg>
<status status="PASS" starttime="20230717 19:23:43.872" endtime="20230717 19:23:43.873"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:23:43.874" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:23:43.873" endtime="20230717 19:23:43.874"/>
</kw>
<status status="PASS" starttime="20230717 19:23:28.849" endtime="20230717 19:23:43.874"/>
</kw>
<msg timestamp="20230717 19:23:43.874" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:23:28.848" endtime="20230717 19:23:43.874"/>
</kw>
<msg timestamp="20230717 19:23:43.875" level="INFO">${output} = awsAccessKey=testuser2
awsSecret=a35fa93bff2715a23f8f2abf3a2ca48fd70c748e4f9e1307ef1e77b7b1a62748</msg>
<status status="PASS" starttime="20230717 19:23:28.847" endtime="20230717 19:23:43.875"/>
</kw>
<kw name="Verify output">
<arg>${output}</arg>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>awsAccessKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:23:43.876" endtime="20230717 19:23:43.886"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>awsSecret</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:23:43.887" endtime="20230717 19:23:43.888"/>
</kw>
<status status="PASS" starttime="20230717 19:23:43.875" endtime="20230717 19:23:43.889"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230717 19:23:28.843" endtime="20230717 19:23:43.889"/>
</test>
<test id="s1-s8-s14-t2" name="With OM service ID" line="33">
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${OM_HA_PARAM}' == '${EMPTY}'</arg>
<arg>duplicate test in non-HA env.</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230717 19:23:43.895" endtime="20230717 19:23:43.899"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>N/A</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230717 19:23:43.899" endtime="20230717 19:23:43.900"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone s3 getsecret -u testuser2 ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:23:43.927" level="INFO">Running command 'ozone s3 getsecret -u testuser2 --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:23:59.596" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:23:59.596" level="INFO">${output} = awsAccessKey=testuser2
awsSecret=a35fa93bff2715a23f8f2abf3a2ca48fd70c748e4f9e1307ef1e77b7b1a62748</msg>
<status status="PASS" starttime="20230717 19:23:43.913" endtime="20230717 19:23:59.596"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:23:59.599" level="INFO">awsAccessKey=testuser2
awsSecret=a35fa93bff2715a23f8f2abf3a2ca48fd70c748e4f9e1307ef1e77b7b1a62748</msg>
<status status="PASS" starttime="20230717 19:23:59.597" endtime="20230717 19:23:59.599"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:23:59.604" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:23:59.603" endtime="20230717 19:23:59.605"/>
</kw>
<status status="PASS" starttime="20230717 19:23:43.910" endtime="20230717 19:23:59.605"/>
</kw>
<msg timestamp="20230717 19:23:59.605" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:23:43.910" endtime="20230717 19:23:59.605"/>
</kw>
<msg timestamp="20230717 19:23:59.605" level="INFO">${output} = awsAccessKey=testuser2
awsSecret=a35fa93bff2715a23f8f2abf3a2ca48fd70c748e4f9e1307ef1e77b7b1a62748</msg>
<status status="PASS" starttime="20230717 19:23:43.906" endtime="20230717 19:23:59.608"/>
</kw>
<kw name="Verify output">
<arg>${output}</arg>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>awsAccessKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:23:59.609" endtime="20230717 19:23:59.611"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>awsSecret</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:23:59.611" endtime="20230717 19:23:59.611"/>
</kw>
<status status="PASS" starttime="20230717 19:23:59.608" endtime="20230717 19:23:59.612"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230717 19:23:43.893" endtime="20230717 19:23:59.613"/>
</test>
<doc>Test ozone s3 getsecret command</doc>
<status status="PASS" starttime="20230717 19:23:28.827" endtime="20230717 19:23:59.615"/>
</suite>
<suite id="s1-s8-s15" name="Webui" source="/opt/hadoop/smoketest/s3/webui.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20230717 19:23:59.651" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:23:59.651" endtime="20230717 19:23:59.651"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20230717 19:23:59.651" endtime="20230717 19:23:59.652"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20230717 19:23:59.652" endtime="20230717 19:23:59.652"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:23:59.652" endtime="20230717 19:23:59.652"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:23:59.652" endtime="20230717 19:23:59.652"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:23:59.653" endtime="20230717 19:23:59.653"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:23:59.653" endtime="20230717 19:23:59.653"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:23:59.653" endtime="20230717 19:23:59.654"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20230717 19:23:59.654" endtime="20230717 19:23:59.654"/>
</kw>
<status status="PASS" starttime="20230717 19:23:59.650" endtime="20230717 19:23:59.654"/>
</kw>
<test id="s1-s8-s15-t1" name="S3 Gateway Web UI" line="32">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Get test user principal" library="commonlib">
<var>${principal}</var>
<arg>HTTP</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:23:59.667" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:23:59.674" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:23:59.674" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20230717 19:23:59.662" endtime="20230717 19:23:59.674"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:23:59.677" level="INFO">s3g</msg>
<status status="PASS" starttime="20230717 19:23:59.676" endtime="20230717 19:23:59.677"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:23:59.678" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:23:59.677" endtime="20230717 19:23:59.679"/>
</kw>
<status status="PASS" starttime="20230717 19:23:59.661" endtime="20230717 19:23:59.679"/>
</kw>
<msg timestamp="20230717 19:23:59.679" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:23:59.660" endtime="20230717 19:23:59.679"/>
</kw>
<msg timestamp="20230717 19:23:59.680" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20230717 19:23:59.659" endtime="20230717 19:23:59.680"/>
</kw>
<msg timestamp="20230717 19:23:59.680" level="INFO">${principal} = HTTP/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230717 19:23:59.658" endtime="20230717 19:23:59.680"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/HTTP.keytab ${principal}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/HTTP.keytab ${principal}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:23:59.691" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/HTTP.keytab HTTP/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:23:59.774" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:23:59.775" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:23:59.684" endtime="20230717 19:23:59.775"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:23:59.777" level="INFO"/>
<status status="PASS" starttime="20230717 19:23:59.776" endtime="20230717 19:23:59.777"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:23:59.779" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:23:59.778" endtime="20230717 19:23:59.779"/>
</kw>
<status status="PASS" starttime="20230717 19:23:59.683" endtime="20230717 19:23:59.779"/>
</kw>
<msg timestamp="20230717 19:23:59.779" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:23:59.683" endtime="20230717 19:23:59.780"/>
</kw>
<status status="PASS" starttime="20230717 19:23:59.682" endtime="20230717 19:23:59.780"/>
</kw>
<status status="PASS" starttime="20230717 19:23:59.681" endtime="20230717 19:23:59.780"/>
</kw>
<status status="PASS" starttime="20230717 19:23:59.657" endtime="20230717 19:23:59.780"/>
</kw>
<status status="PASS" starttime="20230717 19:23:59.656" endtime="20230717 19:23:59.780"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -v ${ENDPOINT_URL}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:23:59.789" level="INFO">Running command 'curl --negotiate -u : -v http://s3g:9878 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:23:59.811" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:23:59.811" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20230717 19:23:59.784" endtime="20230717 19:23:59.811"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:23:59.814" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to s3g port 9878 (#0)
*   Trying 172.25.0.114...
* Connected to s3g (172.25.0.114) port 9878 (#0)
&gt; GET / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: s3g:9878
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 302 Found
&lt; Date: Mon, 17 Jul 2023 19:23:59 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Mon, 17 Jul 2023 19:23:59 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/plain;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-XSS-Protection: 1; mode=block
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; Location: http://s3g:9878/static/
&lt; Content-Length: 0
&lt; 

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
* Connection #0 to host s3g left intact</msg>
<status status="PASS" starttime="20230717 19:23:59.812" endtime="20230717 19:23:59.815"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:23:59.816" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:23:59.815" endtime="20230717 19:23:59.816"/>
</kw>
<status status="PASS" starttime="20230717 19:23:59.783" endtime="20230717 19:23:59.817"/>
</kw>
<msg timestamp="20230717 19:23:59.817" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:23:59.782" endtime="20230717 19:23:59.817"/>
</kw>
<msg timestamp="20230717 19:23:59.818" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20230717 19:23:59.781" endtime="20230717 19:23:59.818"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location:</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:23:59.819" endtime="20230717 19:23:59.820"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>/static/</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:23:59.820" endtime="20230717 19:23:59.821"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -v ${ENDPOINT_URL}/static/index.html</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:23:59.830" level="INFO">Running command 'curl --negotiate -u : -v http://s3g:9878/static/index.html 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:24:00.137" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:24:00.137" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20230717 19:23:59.825" endtime="20230717 19:24:00.138"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:24:00.142" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to s3g port 9878 (#0)
*   Trying 172.25.0.114...
* Connected to s3g (172.25.0.114) port 9878 (#0)
&gt; GET /static/index.html HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: s3g:9878
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Authentication required
&lt; X-Content-Type-Options: nosniff
&lt; X-XSS-Protection: 1; mode=block
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 464
&lt; 
* Ignoring the response-body
{ [data not shown]

100   464  100   464    0     0   3102      0 --:--:-- --:--:-- --:--:--  3114
* Connection #0 to host s3g left intact
* Issue another request to this URL: 'http://s3g:9878/static/index.html'
* Found bundle for host s3g: 0x810fa0
* Re-using existing connection! (#0) with host s3g
* Connected to s3g (172.25.0.114) port 9878 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; GET /static/index.html HTTP/1.1
&gt; Authorization: Negotiate YIICUQYJKoZIhvcSAQICAQBuggJAMIICPKADAgEFoQMCAQ6iBwMFACAAAACjggFQYYIBTDCCAUigAwIBBaENGwtFWEFNUExFLkNPTaIWMBSgAwIBA6ENMAsbBEhUVFAbA3MzZ6OCARgwggEUoAMCARKhAwIBAaKCAQYEggECwHiKgAuuLSSq9hIbnE8Gewg/EjftoKbolhhnHWcriFJqf02zzPzILZ6YksKxT5dREMZqh0Lj4ADZaV+y5agRBFAk62qFs0scJsLBRpNtdzTyiGmGEVE95O+p8sGGjC/ZMHA9Tve7egAweXy9w2LPnetaOwD8KEVK6eqyZJffFwdkNddRKn1A+4y9LVnp+d4O2LVfjevyfUx1uCpYn8aKB2xNswXaj4hx9HBLoKhdCBaHW1fwkOdzB2U1xBfScusubwHBCIlle1K1CgcEdergaB6hznpEWC+o+jrsBgJqNtNgBZqcNXnWeFfcenwCf4Pg6Q2Xcs/W83Mi2/HLFS99EosjpIHSMIHPoAMCARKigccEgcSJwdgUi5HReTyyIQteDl2cb+egWIxU50qlzB18K8/ZG4JuWOJ1A7nCQrvlFCIWMQPzEEzgDADgBUvVTDTvODIQm3nWqTtCWqTI0GEAcmCoWFoG9CemRnOSuX4yBYA3c4iZBaDwnp5F3jvnqenPjGT5uAnjwxZf7HE3DBIaZNyX9ORzjEyYo3tx/3fXDpfmfuz+8IT/JcaGOuEDRxLDUVJ0NyY/8KPLn0386bwNc1zSjNmxFIIf1l89fOSTyJjhSlVOin9G
&gt; User-Agent: curl/7.29.0
&gt; Host: s3g:9878
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Mon, 17 Jul 2023 19:23:59 GMT
&lt; Content-Type: text/html
&lt; X-Content-Type-Options: nosniff
&lt; X-XSS-Protection: 1; mode=block
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCPMj1yhIZYh2dxwW4/EjzVLI66HnVQgtXutDRnA5MF39vbm7s7ts8d9WLKkqlZu6XuMBWeTdBgUfPAC8anJUD6Mlx
&lt; Set-Cookie: hadoop.auth="u=HTTP&amp;p=HTTP/s3g@EXAMPLE.COM&amp;t=kerberos&amp;e=1689657840092&amp;s=g4bP1fr/psd/uvKMkWlOSVrZJnoJQNe82h/defxp/GA="; Path=/; HttpOnly
&lt; Last-Modified: Mon, 17 Jul 2023 18:12:04 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 3106
&lt; 
{ [data not shown]

100  3106  100  3106    0     0  10640      0 --:--:-- --:--:-- --:--:-- 10640
100  3106  100  3106    0     0  10635      0 --:--:-- --:--:-- --:--:--     0
* Closing connection 0
&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"&gt;
&lt;!--
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
--&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="utf-8"&gt;
    &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
    &lt;meta name="viewport" content="width=device-width, initial-scale=1"&gt;
    &lt;meta http-equiv="Content-Security-Policy" content="script-src 'self';"&gt;
    &lt;!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags --&gt;
    &lt;meta name="description" content="Apache Ozone S3 gateway"&gt;

    &lt;title&gt;S3 gateway -- Apache Ozone&lt;/title&gt;

    &lt;link href="bootstrap-3.4.1/css/bootstrap.min.css" rel="stylesheet"&gt;
    &lt;link href="hadoop.css" rel="stylesheet"&gt;
    &lt;link href="ozone.css" rel="stylesheet"&gt;

&lt;/head&gt;

&lt;body&gt;

&lt;header class="navbar navbar-inverse navbar-fixed-top bs-docs-nav"&gt;
    &lt;div class="container-fluid"&gt;
        &lt;div class="navbar-header"&gt;
            &lt;button type="button" class="navbar-toggle collapsed"
                    data-toggle="collapse" data-target="#navbar"
                    aria-expanded="false" aria-controls="navbar"&gt;
                &lt;span class="sr-only"&gt;Toggle navigation&lt;/span&gt;
                &lt;span class="icon-bar"&gt;&lt;/span&gt;
                &lt;span class="icon-bar"&gt;&lt;/span&gt;
                &lt;span class="icon-bar"&gt;&lt;/span&gt;
            &lt;/button&gt;
            &lt;a class="navbar-brand" href="#"&gt;Ozone S3G&lt;/a&gt;
        &lt;/div&gt;
        &lt;div id="navbar" class="collapse navbar-collapse"&gt;
            &lt;ul class="nav navbar-nav" id="ui-tabs"&gt;
                &lt;li&gt;&lt;a href="docs"&gt;Documentation&lt;/a&gt;&lt;/li&gt;

            &lt;/ul&gt;
        &lt;/div&gt;&lt;!--/.nav-collapse --&gt;

    &lt;/div&gt;
&lt;/header&gt;


&lt;div class="container-fluid" style="margin: 12pt"&gt;

    &lt;h1&gt;S3 gateway&lt;/h1&gt;

    &lt;p&gt;This is an endpoint of Apache Ozone S3 gateway. Use it with any
        AWS S3 compatible tool
        with setting this url as an endpoint&lt;/p&gt;

    &lt;p&gt;For example with aws-cli:&lt;/p&gt;

    &lt;pre&gt;aws s3api --endpoint &lt;span id="s3gurl"&gt;&lt;/span&gt; create-bucket --bucket=wordcount&lt;/pre&gt;

    &lt;p&gt;For more information, please check the &lt;a href="docs"&gt;documentation.&lt;/a&gt;
    &lt;/p&gt;
&lt;/div&gt;&lt;!-- /.container --&gt;

&lt;script src="jquery-3.5.1.min.js"&gt;&lt;/script&gt;
&lt;script src="bootstrap-3.4.1/js/bootstrap.min.js"&gt;&lt;/script&gt;
&lt;script src="s3g.js"&gt;&lt;/script&gt;

&lt;/body&gt;
&lt;/html&gt;</msg>
<status status="PASS" starttime="20230717 19:24:00.138" endtime="20230717 19:24:00.144"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:24:00.146" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:24:00.144" endtime="20230717 19:24:00.146"/>
</kw>
<status status="PASS" starttime="20230717 19:23:59.824" endtime="20230717 19:24:00.146"/>
</kw>
<msg timestamp="20230717 19:24:00.147" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:23:59.822" endtime="20230717 19:24:00.147"/>
</kw>
<msg timestamp="20230717 19:24:00.149" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20230717 19:23:59.821" endtime="20230717 19:24:00.149"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Apache Ozone S3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:24:00.149" endtime="20230717 19:24:00.151"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:23:59.654" endtime="20230717 19:24:00.152"/>
</test>
<doc>S3 gateway web ui test</doc>
<status status="PASS" starttime="20230717 19:23:59.620" endtime="20230717 19:24:00.155"/>
</suite>
<status status="PASS" starttime="20230717 19:07:03.772" endtime="20230717 19:24:00.170"/>
</suite>
<suite id="s1-s9" name="s3-link" source="/opt/hadoop/smoketest/s3">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230717 19:24:08.284" endtime="20230717 19:24:08.286"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230717 19:24:08.291" level="INFO">${randStr} = 9585439645</msg>
<status status="PASS" starttime="20230717 19:24:08.290" endtime="20230717 19:24:08.291"/>
</kw>
<msg timestamp="20230717 19:24:08.292" level="INFO">${random} = ozone-test-9585439645</msg>
<status status="PASS" starttime="20230717 19:24:08.289" endtime="20230717 19:24:08.292"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230717 19:24:08.294" level="INFO">${PREFIX} = ozone-test-9585439645</msg>
<status status="PASS" starttime="20230717 19:24:08.292" endtime="20230717 19:24:08.294"/>
</kw>
<status status="PASS" starttime="20230717 19:24:08.287" endtime="20230717 19:24:08.294"/>
</kw>
<status status="PASS" starttime="20230717 19:24:08.287" endtime="20230717 19:24:08.295"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which aws</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:24:08.301" level="INFO">Running command 'which aws 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:24:08.305" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:24:08.306" level="INFO">${output} = /usr/local/bin/aws</msg>
<status status="PASS" starttime="20230717 19:24:08.296" endtime="20230717 19:24:08.306"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20230717 19:24:08.307" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:24:08.307" endtime="20230717 19:24:08.308"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="NOT RUN" starttime="20230717 19:24:08.308" endtime="20230717 19:24:08.308"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:24:08.308" endtime="20230717 19:24:08.308"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="NOT RUN" starttime="20230717 19:24:08.309" endtime="20230717 19:24:08.309"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:24:08.309" endtime="20230717 19:24:08.309"/>
</kw>
<status status="PASS" starttime="20230717 19:24:08.295" endtime="20230717 19:24:08.309"/>
</kw>
<status status="PASS" starttime="20230717 19:24:08.295" endtime="20230717 19:24:08.309"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:24:08.318" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:24:08.325" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:24:08.325" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20230717 19:24:08.314" endtime="20230717 19:24:08.325"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:24:08.326" level="INFO">s3g</msg>
<status status="PASS" starttime="20230717 19:24:08.325" endtime="20230717 19:24:08.327"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:24:08.327" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:24:08.327" endtime="20230717 19:24:08.328"/>
</kw>
<status status="PASS" starttime="20230717 19:24:08.314" endtime="20230717 19:24:08.328"/>
</kw>
<msg timestamp="20230717 19:24:08.328" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:24:08.313" endtime="20230717 19:24:08.328"/>
</kw>
<msg timestamp="20230717 19:24:08.329" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20230717 19:24:08.313" endtime="20230717 19:24:08.329"/>
</kw>
<msg timestamp="20230717 19:24:08.330" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230717 19:24:08.312" endtime="20230717 19:24:08.330"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230717 19:24:08.330" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230717 19:24:08.330" endtime="20230717 19:24:08.331"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:24:08.337" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:24:08.377" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:24:08.377" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:24:08.334" endtime="20230717 19:24:08.377"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:24:08.379" level="INFO"/>
<status status="PASS" starttime="20230717 19:24:08.378" endtime="20230717 19:24:08.380"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:24:08.381" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:24:08.380" endtime="20230717 19:24:08.381"/>
</kw>
<status status="PASS" starttime="20230717 19:24:08.333" endtime="20230717 19:24:08.381"/>
</kw>
<msg timestamp="20230717 19:24:08.381" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:24:08.332" endtime="20230717 19:24:08.381"/>
</kw>
<status status="PASS" starttime="20230717 19:24:08.331" endtime="20230717 19:24:08.382"/>
</kw>
<status status="PASS" starttime="20230717 19:24:08.331" endtime="20230717 19:24:08.382"/>
</kw>
<status status="PASS" starttime="20230717 19:24:08.312" endtime="20230717 19:24:08.382"/>
</kw>
<status status="PASS" starttime="20230717 19:24:08.311" endtime="20230717 19:24:08.382"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:24:08.392" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:24:25.372" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:24:25.373" level="INFO">${output} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=a8d1ffb55aca2830802a7cd52acea5687eae1cfc99bf6833c91d448948438bff</msg>
<status status="PASS" starttime="20230717 19:24:08.388" endtime="20230717 19:24:25.373"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:24:25.374" level="INFO">awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=a8d1ffb55aca2830802a7cd52acea5687eae1cfc99bf6833c91d448948438bff</msg>
<status status="PASS" starttime="20230717 19:24:25.373" endtime="20230717 19:24:25.374"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:24:25.375" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:24:25.375" endtime="20230717 19:24:25.375"/>
</kw>
<status status="PASS" starttime="20230717 19:24:08.387" endtime="20230717 19:24:25.375"/>
</kw>
<msg timestamp="20230717 19:24:25.375" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:24:08.386" endtime="20230717 19:24:25.376"/>
</kw>
<msg timestamp="20230717 19:24:25.376" level="INFO">${result} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=a8d1ffb55aca2830802a7cd52acea5687eae1cfc99bf6833c91d448948438bff</msg>
<status status="PASS" starttime="20230717 19:24:08.385" endtime="20230717 19:24:25.376"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230717 19:24:25.378" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20230717 19:24:25.376" endtime="20230717 19:24:25.378"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20230717 19:24:25.379" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20230717 19:24:25.378" endtime="20230717 19:24:25.379"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230717 19:24:25.380" level="INFO">${secret} = ['a8d1ffb55aca2830802a7cd52acea5687eae1cfc99bf6833c91d448948438bff']</msg>
<status status="PASS" starttime="20230717 19:24:25.379" endtime="20230717 19:24:25.380"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230717 19:24:25.383" level="INFO">${accessKey} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230717 19:24:25.380" endtime="20230717 19:24:25.383"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230717 19:24:25.385" level="INFO">${secret} = a8d1ffb55aca2830802a7cd52acea5687eae1cfc99bf6833c91d448948438bff</msg>
<status status="PASS" starttime="20230717 19:24:25.384" endtime="20230717 19:24:25.385"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:24:25.392" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:24:26.765" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:24:26.765" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:24:25.388" endtime="20230717 19:24:26.765"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:24:26.767" level="INFO"/>
<status status="PASS" starttime="20230717 19:24:26.766" endtime="20230717 19:24:26.767"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:24:26.767" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:24:26.767" endtime="20230717 19:24:26.767"/>
</kw>
<status status="PASS" starttime="20230717 19:24:25.387" endtime="20230717 19:24:26.768"/>
</kw>
<msg timestamp="20230717 19:24:26.768" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:24:25.386" endtime="20230717 19:24:26.768"/>
</kw>
<status status="PASS" starttime="20230717 19:24:25.386" endtime="20230717 19:24:26.768"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:24:26.782" level="INFO">Running command 'aws configure set aws_access_key_id testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:24:27.923" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:24:27.924" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:24:26.776" endtime="20230717 19:24:27.924"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:24:27.926" level="INFO"/>
<status status="PASS" starttime="20230717 19:24:27.924" endtime="20230717 19:24:27.926"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:24:27.927" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:24:27.926" endtime="20230717 19:24:27.927"/>
</kw>
<status status="PASS" starttime="20230717 19:24:26.774" endtime="20230717 19:24:27.929"/>
</kw>
<msg timestamp="20230717 19:24:27.929" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:24:26.772" endtime="20230717 19:24:27.929"/>
</kw>
<status status="PASS" starttime="20230717 19:24:26.771" endtime="20230717 19:24:27.939"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:24:27.962" level="INFO">Running command 'aws configure set aws_secret_access_key a8d1ffb55aca2830802a7cd52acea5687eae1cfc99bf6833c91d448948438bff 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:24:29.436" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:24:29.442" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:24:27.949" endtime="20230717 19:24:29.442"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:24:29.445" level="INFO"/>
<status status="PASS" starttime="20230717 19:24:29.444" endtime="20230717 19:24:29.446"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:24:29.448" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:24:29.448" endtime="20230717 19:24:29.448"/>
</kw>
<status status="PASS" starttime="20230717 19:24:27.947" endtime="20230717 19:24:29.450"/>
</kw>
<msg timestamp="20230717 19:24:29.450" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:24:27.944" endtime="20230717 19:24:29.450"/>
</kw>
<status status="PASS" starttime="20230717 19:24:27.940" endtime="20230717 19:24:29.450"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:24:29.457" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:24:30.508" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:24:30.509" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:24:29.453" endtime="20230717 19:24:30.509"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:24:30.510" level="INFO"/>
<status status="PASS" starttime="20230717 19:24:30.509" endtime="20230717 19:24:30.510"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:24:30.511" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:24:30.510" endtime="20230717 19:24:30.511"/>
</kw>
<status status="PASS" starttime="20230717 19:24:29.453" endtime="20230717 19:24:30.511"/>
</kw>
<msg timestamp="20230717 19:24:30.511" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:24:29.452" endtime="20230717 19:24:30.512"/>
</kw>
<status status="PASS" starttime="20230717 19:24:29.450" endtime="20230717 19:24:30.512"/>
</kw>
<status status="PASS" starttime="20230717 19:24:08.384" endtime="20230717 19:24:30.515"/>
</kw>
<status status="PASS" starttime="20230717 19:24:08.382" endtime="20230717 19:24:30.515"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230717 19:24:30.515" endtime="20230717 19:24:30.517"/>
</kw>
<status status="PASS" starttime="20230717 19:24:08.311" endtime="20230717 19:24:30.517"/>
</kw>
<status status="PASS" starttime="20230717 19:24:08.310" endtime="20230717 19:24:30.517"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230717 19:24:30.517" endtime="20230717 19:24:30.518"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup links for S3 tests" library="commonawslib">
<kw name="Bucket Exists" library="shell">
<var>${exists}</var>
<arg>o3://${OM_SERVICE_ID}/s3v/link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:24:30.530" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://omservice/s3v/link 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:24:46.024" level="INFO">${rc} = 124</msg>
<msg timestamp="20230717 19:24:46.025" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:24:30.522" endtime="20230717 19:24:46.025"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20230717 19:24:46.027" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:24:46.025" endtime="20230717 19:24:46.028"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:24:46.029" endtime="20230717 19:24:46.030"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:24:46.030" endtime="20230717 19:24:46.031"/>
</kw>
<msg timestamp="20230717 19:24:46.031" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20230717 19:24:30.521" endtime="20230717 19:24:46.031"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${exists}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230717 19:24:46.031" endtime="20230717 19:24:46.032"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create o3://${OM_SERVICE_ID}/legacy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:24:46.043" level="INFO">Running command 'ozone sh volume create o3://omservice/legacy 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:25:05.629" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:25:05.629" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:24:46.035" endtime="20230717 19:25:05.629"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:25:05.631" level="INFO"/>
<status status="PASS" starttime="20230717 19:25:05.631" endtime="20230717 19:25:05.631"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:25:05.632" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:25:05.632" endtime="20230717 19:25:05.632"/>
</kw>
<status status="PASS" starttime="20230717 19:24:46.035" endtime="20230717 19:25:05.632"/>
</kw>
<msg timestamp="20230717 19:25:05.632" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:24:46.033" endtime="20230717 19:25:05.633"/>
</kw>
<status status="PASS" starttime="20230717 19:24:46.032" endtime="20230717 19:25:05.633"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create o3://${OM_SERVICE_ID}/legacy/source-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:25:05.642" level="INFO">Running command 'ozone sh bucket create o3://omservice/legacy/source-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:25:25.590" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:25:25.590" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:25:05.639" endtime="20230717 19:25:25.590"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:25:25.593" level="INFO"/>
<status status="PASS" starttime="20230717 19:25:25.591" endtime="20230717 19:25:25.593"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:25:25.597" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:25:25.593" endtime="20230717 19:25:25.597"/>
</kw>
<status status="PASS" starttime="20230717 19:25:05.637" endtime="20230717 19:25:25.598"/>
</kw>
<msg timestamp="20230717 19:25:25.598" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:25:05.635" endtime="20230717 19:25:25.599"/>
</kw>
<status status="PASS" starttime="20230717 19:25:05.634" endtime="20230717 19:25:25.599"/>
</kw>
<kw name="Create link" library="commonawslib">
<arg>link</arg>
<kw name="Execute" library="os">
<arg>ozone sh bucket link o3://${OM_SERVICE_ID}/legacy/source-bucket o3://${OM_SERVICE_ID}/s3v/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:25:25.609" level="INFO">Running command 'ozone sh bucket link o3://omservice/legacy/source-bucket o3://omservice/s3v/link 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:25:45.527" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:25:45.527" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:25:25.605" endtime="20230717 19:25:45.527"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:25:45.528" level="INFO"/>
<status status="PASS" starttime="20230717 19:25:45.528" endtime="20230717 19:25:45.529"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:25:45.531" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:25:45.530" endtime="20230717 19:25:45.531"/>
</kw>
<status status="PASS" starttime="20230717 19:25:25.604" endtime="20230717 19:25:45.531"/>
</kw>
<msg timestamp="20230717 19:25:45.531" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:25:25.603" endtime="20230717 19:25:45.533"/>
</kw>
<status status="PASS" starttime="20230717 19:25:25.601" endtime="20230717 19:25:45.533"/>
</kw>
<status status="PASS" starttime="20230717 19:25:25.599" endtime="20230717 19:25:45.533"/>
</kw>
<status status="PASS" starttime="20230717 19:24:30.520" endtime="20230717 19:25:45.534"/>
</kw>
<status status="PASS" starttime="20230717 19:24:30.518" endtime="20230717 19:25:45.534"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230717 19:25:45.534" endtime="20230717 19:25:45.536"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230717 19:25:45.537" endtime="20230717 19:25:45.538"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230717 19:25:45.539" level="INFO">${OZONE_S3_TESTS_SET_UP} = True</msg>
<status status="PASS" starttime="20230717 19:25:45.538" endtime="20230717 19:25:45.540"/>
</kw>
<status status="PASS" starttime="20230717 19:24:08.283" endtime="20230717 19:25:45.540"/>
</kw>
<suite id="s1-s9-s1" name="Awss3" source="/opt/hadoop/smoketest/s3/awss3.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20230717 19:25:45.616" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:25:45.616" endtime="20230717 19:25:45.616"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20230717 19:25:45.617" endtime="20230717 19:25:45.617"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20230717 19:25:45.617" endtime="20230717 19:25:45.617"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:25:45.618" endtime="20230717 19:25:45.618"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:25:45.620" endtime="20230717 19:25:45.620"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:25:45.621" endtime="20230717 19:25:45.621"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:25:45.621" endtime="20230717 19:25:45.621"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:25:45.623" endtime="20230717 19:25:45.623"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20230717 19:25:45.623" endtime="20230717 19:25:45.625"/>
</kw>
<status status="PASS" starttime="20230717 19:25:45.615" endtime="20230717 19:25:45.625"/>
</kw>
<test id="s1-s9-s1-t1" name="File upload and directory list" line="31">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:25:45.642" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20230717 19:25:45.648" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:25:45.648" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:25:45.635" endtime="20230717 19:25:45.648"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:25:45.651" level="INFO"/>
<status status="PASS" starttime="20230717 19:25:45.649" endtime="20230717 19:25:45.651"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:25:45.652" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:25:45.651" endtime="20230717 19:25:45.652"/>
</kw>
<status status="PASS" starttime="20230717 19:25:45.632" endtime="20230717 19:25:45.653"/>
</kw>
<msg timestamp="20230717 19:25:45.653" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:25:45.631" endtime="20230717 19:25:45.653"/>
</kw>
<status status="PASS" starttime="20230717 19:25:45.629" endtime="20230717 19:25:45.653"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:25:45.663" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://link 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:25:47.849" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:25:47.849" level="INFO">${output} = Completed 29 Bytes/29 Bytes (59 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/testfile                 </msg>
<status status="PASS" starttime="20230717 19:25:45.658" endtime="20230717 19:25:47.849"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:25:47.855" level="INFO">Completed 29 Bytes/29 Bytes (59 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/testfile                 </msg>
<status status="PASS" starttime="20230717 19:25:47.852" endtime="20230717 19:25:47.857"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:25:47.862" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:25:47.858" endtime="20230717 19:25:47.862"/>
</kw>
<status status="PASS" starttime="20230717 19:25:45.657" endtime="20230717 19:25:47.864"/>
</kw>
<msg timestamp="20230717 19:25:47.864" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:25:45.656" endtime="20230717 19:25:47.865"/>
</kw>
<msg timestamp="20230717 19:25:47.866" level="INFO">${output} = Completed 29 Bytes/29 Bytes (59 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/testfile                 </msg>
<status status="PASS" starttime="20230717 19:25:45.655" endtime="20230717 19:25:47.866"/>
</kw>
<msg timestamp="20230717 19:25:47.868" level="INFO">${result} = Completed 29 Bytes/29 Bytes (59 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/testfile                 </msg>
<status status="PASS" starttime="20230717 19:25:45.654" endtime="20230717 19:25:47.868"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>upload</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:25:47.869" endtime="20230717 19:25:47.872"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}/dir1/dir2/file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:25:47.894" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://link/dir1/dir2/file 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:25:49.543" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:25:49.543" level="INFO">${output} = Completed 29 Bytes/29 Bytes (152 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/dir1/dir2/file            </msg>
<status status="PASS" starttime="20230717 19:25:47.882" endtime="20230717 19:25:49.543"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:25:49.544" level="INFO">Completed 29 Bytes/29 Bytes (152 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/dir1/dir2/file            </msg>
<status status="PASS" starttime="20230717 19:25:49.543" endtime="20230717 19:25:49.544"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:25:49.545" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:25:49.545" endtime="20230717 19:25:49.545"/>
</kw>
<status status="PASS" starttime="20230717 19:25:47.880" endtime="20230717 19:25:49.545"/>
</kw>
<msg timestamp="20230717 19:25:49.545" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:25:47.877" endtime="20230717 19:25:49.545"/>
</kw>
<msg timestamp="20230717 19:25:49.546" level="INFO">${output} = Completed 29 Bytes/29 Bytes (152 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/dir1/dir2/file            </msg>
<status status="PASS" starttime="20230717 19:25:47.875" endtime="20230717 19:25:49.546"/>
</kw>
<msg timestamp="20230717 19:25:49.546" level="INFO">${result} = Completed 29 Bytes/29 Bytes (152 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/dir1/dir2/file            </msg>
<status status="PASS" starttime="20230717 19:25:47.872" endtime="20230717 19:25:49.546"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>upload</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:25:49.546" endtime="20230717 19:25:49.547"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:25:49.560" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://link 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:25:50.874" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:25:50.875" level="INFO">${output} =                            PRE dir1/
2023-07-17 19:25:47         29 testfile</msg>
<status status="PASS" starttime="20230717 19:25:49.552" endtime="20230717 19:25:50.875"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:25:50.877" level="INFO">                           PRE dir1/
2023-07-17 19:25:47         29 testfile</msg>
<status status="PASS" starttime="20230717 19:25:50.875" endtime="20230717 19:25:50.877"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:25:50.878" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:25:50.877" endtime="20230717 19:25:50.879"/>
</kw>
<status status="PASS" starttime="20230717 19:25:49.550" endtime="20230717 19:25:50.879"/>
</kw>
<msg timestamp="20230717 19:25:50.880" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:25:49.549" endtime="20230717 19:25:50.880"/>
</kw>
<msg timestamp="20230717 19:25:50.880" level="INFO">${output} =                            PRE dir1/
2023-07-17 19:25:47         29 testfile</msg>
<status status="PASS" starttime="20230717 19:25:49.547" endtime="20230717 19:25:50.880"/>
</kw>
<msg timestamp="20230717 19:25:50.881" level="INFO">${result} =                            PRE dir1/
2023-07-17 19:25:47         29 testfile</msg>
<status status="PASS" starttime="20230717 19:25:49.547" endtime="20230717 19:25:50.881"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>testfile</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:25:50.881" endtime="20230717 19:25:50.882"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:25:50.882" endtime="20230717 19:25:50.883"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:25:50.883" endtime="20230717 19:25:50.884"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/dir1/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:25:50.894" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://link/dir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:25:52.369" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:25:52.369" level="INFO">${output} =                            PRE dir2/
2023-07-17 19:25:49          0 </msg>
<status status="PASS" starttime="20230717 19:25:50.888" endtime="20230717 19:25:52.369"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:25:52.372" level="INFO">                           PRE dir2/
2023-07-17 19:25:49          0 </msg>
<status status="PASS" starttime="20230717 19:25:52.371" endtime="20230717 19:25:52.375"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:25:52.379" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:25:52.377" endtime="20230717 19:25:52.380"/>
</kw>
<status status="PASS" starttime="20230717 19:25:50.887" endtime="20230717 19:25:52.380"/>
</kw>
<msg timestamp="20230717 19:25:52.380" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:25:50.886" endtime="20230717 19:25:52.381"/>
</kw>
<msg timestamp="20230717 19:25:52.382" level="INFO">${output} =                            PRE dir2/
2023-07-17 19:25:49          0 </msg>
<status status="PASS" starttime="20230717 19:25:50.885" endtime="20230717 19:25:52.382"/>
</kw>
<msg timestamp="20230717 19:25:52.383" level="INFO">${result} =                            PRE dir2/
2023-07-17 19:25:49          0 </msg>
<status status="PASS" starttime="20230717 19:25:50.884" endtime="20230717 19:25:52.383"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>testfile</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:25:52.383" endtime="20230717 19:25:52.386"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:25:52.386" endtime="20230717 19:25:52.388"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:25:52.389" endtime="20230717 19:25:52.391"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/dir1/dir2/file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:25:52.405" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://link/dir1/dir2/file 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:25:54.265" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:25:54.266" level="INFO">${output} = 2023-07-17 19:25:49         29 file
2023-07-17 19:25:49         29 file</msg>
<status status="PASS" starttime="20230717 19:25:52.399" endtime="20230717 19:25:54.266"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:25:54.270" level="INFO">2023-07-17 19:25:49         29 file
2023-07-17 19:25:49         29 file</msg>
<status status="PASS" starttime="20230717 19:25:54.268" endtime="20230717 19:25:54.270"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:25:54.271" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:25:54.270" endtime="20230717 19:25:54.272"/>
</kw>
<status status="PASS" starttime="20230717 19:25:52.397" endtime="20230717 19:25:54.272"/>
</kw>
<msg timestamp="20230717 19:25:54.272" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:25:52.396" endtime="20230717 19:25:54.272"/>
</kw>
<msg timestamp="20230717 19:25:54.272" level="INFO">${output} = 2023-07-17 19:25:49         29 file
2023-07-17 19:25:49         29 file</msg>
<status status="PASS" starttime="20230717 19:25:52.393" endtime="20230717 19:25:54.273"/>
</kw>
<msg timestamp="20230717 19:25:54.273" level="INFO">${result} = 2023-07-17 19:25:49         29 file
2023-07-17 19:25:49         29 file</msg>
<status status="PASS" starttime="20230717 19:25:52.391" endtime="20230717 19:25:54.273"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>testfile</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:25:54.273" endtime="20230717 19:25:54.274"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:25:54.274" endtime="20230717 19:25:54.275"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>file</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:25:54.275" endtime="20230717 19:25:54.276"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:25:45.626" endtime="20230717 19:25:54.276"/>
</test>
<test id="s1-s9-s1-t2" name="File upload with special chars" line="50">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:25:54.289" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20230717 19:25:54.294" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:25:54.294" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:25:54.282" endtime="20230717 19:25:54.294"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:25:54.296" level="INFO"/>
<status status="PASS" starttime="20230717 19:25:54.295" endtime="20230717 19:25:54.296"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:25:54.298" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:25:54.297" endtime="20230717 19:25:54.298"/>
</kw>
<status status="PASS" starttime="20230717 19:25:54.281" endtime="20230717 19:25:54.298"/>
</kw>
<msg timestamp="20230717 19:25:54.299" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:25:54.281" endtime="20230717 19:25:54.299"/>
</kw>
<status status="PASS" starttime="20230717 19:25:54.280" endtime="20230717 19:25:54.299"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}/specialchars/a+b</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:25:54.309" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://link/specialchars/a+b 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:25:56.487" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:25:56.487" level="INFO">${output} = Completed 29 Bytes/29 Bytes (80 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/specialchars/a+b         </msg>
<status status="PASS" starttime="20230717 19:25:54.303" endtime="20230717 19:25:56.487"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:25:56.489" level="INFO">Completed 29 Bytes/29 Bytes (80 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/specialchars/a+b         </msg>
<status status="PASS" starttime="20230717 19:25:56.488" endtime="20230717 19:25:56.489"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:25:56.491" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:25:56.490" endtime="20230717 19:25:56.491"/>
</kw>
<status status="PASS" starttime="20230717 19:25:54.302" endtime="20230717 19:25:56.491"/>
</kw>
<msg timestamp="20230717 19:25:56.492" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:25:54.302" endtime="20230717 19:25:56.492"/>
</kw>
<msg timestamp="20230717 19:25:56.492" level="INFO">${output} = Completed 29 Bytes/29 Bytes (80 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/specialchars/a+b         </msg>
<status status="PASS" starttime="20230717 19:25:54.301" endtime="20230717 19:25:56.492"/>
</kw>
<msg timestamp="20230717 19:25:56.493" level="INFO">${result} = Completed 29 Bytes/29 Bytes (80 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/specialchars/a+b         </msg>
<status status="PASS" starttime="20230717 19:25:54.299" endtime="20230717 19:25:56.493"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>upload</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:25:56.493" endtime="20230717 19:25:56.494"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/specialchars/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:25:56.505" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://link/specialchars/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:25:58.282" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:25:58.282" level="INFO">${output} = 2023-07-17 19:25:55          0 
2023-07-17 19:25:56         29 a+b</msg>
<status status="PASS" starttime="20230717 19:25:56.499" endtime="20230717 19:25:58.282"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:25:58.289" level="INFO">2023-07-17 19:25:55          0 
2023-07-17 19:25:56         29 a+b</msg>
<status status="PASS" starttime="20230717 19:25:58.286" endtime="20230717 19:25:58.289"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:25:58.290" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:25:58.289" endtime="20230717 19:25:58.290"/>
</kw>
<status status="PASS" starttime="20230717 19:25:56.499" endtime="20230717 19:25:58.293"/>
</kw>
<msg timestamp="20230717 19:25:58.293" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:25:56.498" endtime="20230717 19:25:58.293"/>
</kw>
<msg timestamp="20230717 19:25:58.294" level="INFO">${output} = 2023-07-17 19:25:55          0 
2023-07-17 19:25:56         29 a+b</msg>
<status status="PASS" starttime="20230717 19:25:56.495" endtime="20230717 19:25:58.294"/>
</kw>
<msg timestamp="20230717 19:25:58.296" level="INFO">${result} = 2023-07-17 19:25:55          0 
2023-07-17 19:25:56         29 a+b</msg>
<status status="PASS" starttime="20230717 19:25:56.494" endtime="20230717 19:25:58.296"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>'a b'</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:25:58.297" endtime="20230717 19:25:58.298"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>a+b</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:25:58.299" endtime="20230717 19:25:58.300"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:25:54.278" endtime="20230717 19:25:58.300"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20230717 19:25:45.540" endtime="20230717 19:25:58.306"/>
</suite>
<suite id="s1-s9-s2" name="Boto3" source="/opt/hadoop/smoketest/s3/boto3.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20230717 19:25:58.370" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:25:58.370" endtime="20230717 19:25:58.370"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20230717 19:25:58.371" endtime="20230717 19:25:58.371"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20230717 19:25:58.371" endtime="20230717 19:25:58.371"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:25:58.371" endtime="20230717 19:25:58.371"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:25:58.371" endtime="20230717 19:25:58.372"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:25:58.372" endtime="20230717 19:25:58.372"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:25:58.372" endtime="20230717 19:25:58.373"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:25:58.373" endtime="20230717 19:25:58.373"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20230717 19:25:58.373" endtime="20230717 19:25:58.373"/>
</kw>
<status status="PASS" starttime="20230717 19:25:58.369" endtime="20230717 19:25:58.373"/>
</kw>
<test id="s1-s9-s2-t1" name="Boto3 Client Test" line="34">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>python3 ${S3_SMOKETEST_DIR}/boto_client.py ${ENDPOINT_URL} ${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:25:58.381" level="INFO">Running command 'python3 /opt/hadoop/smoketest/s3/boto_client.py http://s3g:9878 link 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:26:47.254" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:26:47.255" level="INFO">${output} = test_create_bucket (__main__.TestBotoClient) ... /usr/local/lib/python3.6/site-packages/boto3/compat.py:88: PythonDeprecationWarning: Boto3 will no longer support Python 3.6 starting May 30, 2022. To ...</msg>
<status status="PASS" starttime="20230717 19:25:58.377" endtime="20230717 19:26:47.255"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:26:47.268" level="INFO">test_create_bucket (__main__.TestBotoClient) ... /usr/local/lib/python3.6/site-packages/boto3/compat.py:88: PythonDeprecationWarning: Boto3 will no longer support Python 3.6 starting May 30, 2022. To continue receiving service updates, bug fixes, and security updates please upgrade to Python 3.7 or later. More information can be found here: https://aws.amazon.com/blogs/developer/python-support-policy-updates-for-aws-sdks-and-tools/
  warnings.warn(warning, PythonDeprecationWarning)
ok
test_list_bucket (__main__.TestBotoClient) ... {'ResponseMetadata': {'RequestId': 'e0b85f27-9ed0-4ea2-91f6-d30faded11fa', 'HostId': 'kuzawWY1ujO', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Mon, 17 Jul 2023 19:25:59 GMT', 'cache-control': 'no-cache', 'expires': 'Mon, 17 Jul 2023 19:25:59 GMT', 'pragma': 'no-cache', 'content-type': 'text/plain;charset=utf-8', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'location': 'http://s3g:9878/ozone-test-pmmygpsiuj', 'server': 'Ozone', 'x-amz-id-2': 'kuzawWY1ujO', 'x-amz-request-id': 'e0b85f27-9ed0-4ea2-91f6-d30faded11fa', 'content-length': '0'}, 'RetryAttempts': 0}, 'Location': 'http://s3g:9878/ozone-test-pmmygpsiuj'}
None
None
None
{'ResponseMetadata': {'RequestId': 'ff88b2dd-965a-49a7-acbb-e9e8af3829fe', 'HostId': 'L7d5n4geuV', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Mon, 17 Jul 2023 19:26:43 GMT', 'cache-control': 'no-cache', 'expires': 'Mon, 17 Jul 2023 19:26:43 GMT', 'pragma': 'no-cache', 'content-type': 'text/plain;charset=utf-8', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'location': 'http://s3g:9878/bucket-cqbikguxnl', 'server': 'Ozone', 'x-amz-id-2': 'L7d5n4geuV', 'x-amz-request-id': 'ff88b2dd-965a-49a7-acbb-e9e8af3829fe', 'content-length': '0'}, 'RetryAttempts': 0}, 'Location': 'http://s3g:9878/bucket-cqbikguxnl'}
{'ResponseMetadata': {'RequestId': '082c1b70-974e-4bcb-ad91-966841375f9d', 'HostId': 'TSHqNixs1i6', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Mon, 17 Jul 2023 19:26:43 GMT', 'cache-control': 'no-cache', 'expires': 'Mon, 17 Jul 2023 19:26:43 GMT', 'pragma': 'no-cache', 'content-type': 'application/xml', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': 'TSHqNixs1i6', 'x-amz-request-id': '082c1b70-974e-4bcb-ad91-966841375f9d', 'transfer-encoding': 'chunked'}, 'RetryAttempts': 0}, 'Buckets': [{'Name': 'bucket-cqbikguxnl', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 26, 43, 226000, tzinfo=tzlocal())}, {'Name': 'bucket-logiskeuzf', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 8, 46, 849000, tzinfo=tzlocal())}, {'Name': 'bucket-ozone-test-0061864334', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 8, 58, 167000, tzinfo=tzlocal())}, {'Name': 'bucket-ozone-test-4697753491', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 9, 7, 422000, tzinfo=tzlocal())}, {'Name': 'bucket-ozone-test-9909917004', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 9, 0, 464000, tzinfo=tzlocal())}, {'Name': 'destbucket-62560', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 20, 3, 406000, tzinfo=tzlocal())}, {'Name': 'encrypted', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 7, 28, 175000, tzinfo=tzlocal())}, {'Name': 'legacy-bucket-ozone-test-6968003522', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 21, 17, 819000, tzinfo=tzlocal())}, {'Name': 'link', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 25, 45, 252000, tzinfo=tzlocal())}, {'Name': 'obs-bucket-ozone-test-7119746925', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 21, 41, 865000, tzinfo=tzlocal())}, {'Name': 'ozone-test-pmmygpsiuj', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 25, 59, 545000, tzinfo=tzlocal())}, {'Name': 's3bg0', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 11, 3, 827000, tzinfo=tzlocal())}, {'Name': 's3bg1', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 11, 3, 824000, tzinfo=tzlocal())}, {'Name': 's3bg10', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 11, 4, 181000, tzinfo=tzlocal())}, {'Name': 's3bg11', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 11, 4, 284000, tzinfo=tzlocal())}, {'Name': 's3bg12', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 11, 4, 293000, tzinfo=tzlocal())}, {'Name': 's3bg13', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 11, 4, 284000, tzinfo=tzlocal())}, {'Name': 's3bg14', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 11, 4, 505000, tzinfo=tzlocal())}, {'Name': 's3bg15', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 11, 4, 693000, tzinfo=tzlocal())}, {'Name': 's3bg16', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 11, 4, 503000, tzinfo=tzlocal())}, {'Name': 's3bg17', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 11, 4, 693000, tzinfo=tzlocal())}, {'Name': 's3bg18', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 11, 4, 696000, tzinfo=tzlocal())}, {'Name': 's3bg19', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 11, 4, 674000, tzinfo=tzlocal())}, {'Name': 's3bg2', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 11, 3, 598000, tzinfo=tzlocal())}, {'Name': 's3bg20', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 11, 4, 695000, tzinfo=tzlocal())}, {'Name': 's3bg21', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 11, 4, 672000, tzinfo=tzlocal())}, {'Name': 's3bg22', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 11, 4, 804000, tzinfo=tzlocal())}, {'Name': 's3bg23', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 11, 4, 671000, tzinfo=tzlocal())}, {'Name': 's3bg24', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 11, 4, 789000, tzinfo=tzlocal())}, {'Name': 's3bg25', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 11, 4, 812000, tzinfo=tzlocal())}, {'Name': 's3bg26', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 11, 5, 246000, tzinfo=tzlocal())}, {'Name': 's3bg27', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 11, 5, 281000, tzinfo=tzlocal())}, {'Name': 's3bg28', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 11, 5, 287000, tzinfo=tzlocal())}, {'Name': 's3bg29', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 11, 5, 329000, tzinfo=tzlocal())}, {'Name': 's3bg3', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 11, 4, 53000, tzinfo=tzlocal())}, {'Name': 's3bg30', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 11, 5, 307000, tzinfo=tzlocal())}, {'Name': 's3bg31', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 11, 5, 390000, tzinfo=tzlocal())}, {'Name': 's3bg32', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 11, 5, 398000, tzinfo=tzlocal())}, {'Name': 's3bg33', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 11, 5, 393000, tzinfo=tzlocal())}, {'Name': 's3bg34', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 11, 5, 437000, tzinfo=tzlocal())}, {'Name': 's3bg35', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 11, 5, 428000, tzinfo=tzlocal())}, {'Name': 's3bg36', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 11, 5, 482000, tzinfo=tzlocal())}, {'Name': 's3bg37', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 11, 5, 697000, tzinfo=tzlocal())}, {'Name': 's3bg38', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 11, 6, 190000, tzinfo=tzlocal())}, {'Name': 's3bg39', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 11, 6, 136000, tzinfo=tzlocal())}, {'Name': 's3bg4', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 11, 3, 424000, tzinfo=tzlocal())}, {'Name': 's3bg40', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 11, 6, 237000, tzinfo=tzlocal())}, {'Name': 's3bg41', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 11, 6, 197000, tzinfo=tzlocal())}, {'Name': 's3bg42', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 11, 6, 239000, tzinfo=tzlocal())}, {'Name': 's3bg43', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 11, 6, 141000, tzinfo=tzlocal())}, {'Name': 's3bg44', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 11, 6, 144000, tzinfo=tzlocal())}, {'Name': 's3bg45', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 11, 6, 329000, tzinfo=tzlocal())}, {'Name': 's3bg46', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 11, 6, 324000, tzinfo=tzlocal())}, {'Name': 's3bg47', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 11, 6, 336000, tzinfo=tzlocal())}, {'Name': 's3bg48', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 11, 6, 834000, tzinfo=tzlocal())}, {'Name': 's3bg49', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 11, 6, 795000, tzinfo=tzlocal())}, {'Name': 's3bg5', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 11, 3, 627000, tzinfo=tzlocal())}, {'Name': 's3bg50', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 11, 6, 761000, tzinfo=tzlocal())}, {'Name': 's3bg51', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 11, 6, 899000, tzinfo=tzlocal())}, {'Name': 's3bg52', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 11, 6, 905000, tzinfo=tzlocal())}, {'Name': 's3bg53', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 11, 7, 84000, tzinfo=tzlocal())}, {'Name': 's3bg54', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 11, 7, 118000, tzinfo=tzlocal())}, {'Name': 's3bg55', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 11, 7, 151000, tzinfo=tzlocal())}, {'Name': 's3bg56', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 11, 6, 895000, tzinfo=tzlocal())}, {'Name': 's3bg57', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 11, 7, 204000, tzinfo=tzlocal())}, {'Name': 's3bg58', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 11, 7, 56000, tzinfo=tzlocal())}, {'Name': 's3bg59', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 11, 7, 495000, tzinfo=tzlocal())}, {'Name': 's3bg6', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 11, 4, 31000, tzinfo=tzlocal())}, {'Name': 's3bg60', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 11, 7, 314000, tzinfo=tzlocal())}, {'Name': 's3bg61', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 11, 7, 505000, tzinfo=tzlocal())}, {'Name': 's3bg62', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 11, 7, 473000, tzinfo=tzlocal())}, {'Name': 's3bg63', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 11, 7, 444000, tzinfo=tzlocal())}, {'Name': 's3bg64', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 11, 7, 794000, tzinfo=tzlocal())}, {'Name': 's3bg65', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 11, 7, 744000, tzinfo=tzlocal())}, {'Name': 's3bg66', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 11, 7, 817000, tzinfo=tzlocal())}, {'Name': 's3bg67', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 11, 7, 861000, tzinfo=tzlocal())}, {'Name': 's3bg68', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 11, 7, 704000, tzinfo=tzlocal())}, {'Name': 's3bg69', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 11, 7, 926000, tzinfo=tzlocal())}, {'Name': 's3bg7', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 11, 3, 626000, tzinfo=tzlocal())}, {'Name': 's3bg70', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 11, 7, 991000, tzinfo=tzlocal())}, {'Name': 's3bg71', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 11, 8, 86000, tzinfo=tzlocal())}, {'Name': 's3bg72', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 11, 8, 87000, tzinfo=tzlocal())}, {'Name': 's3bg73', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 11, 8, 114000, tzinfo=tzlocal())}, {'Name': 's3bg74', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 11, 8, 362000, tzinfo=tzlocal())}, {'Name': 's3bg75', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 11, 8, 398000, tzinfo=tzlocal())}, {'Name': 's3bg76', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 11, 8, 448000, tzinfo=tzlocal())}, {'Name': 's3bg77', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 11, 8, 321000, tzinfo=tzlocal())}, {'Name': 's3bg78', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 11, 8, 432000, tzinfo=tzlocal())}, {'Name': 's3bg79', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 11, 8, 283000, tzinfo=tzlocal())}, {'Name': 's3bg8', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 11, 3, 635000, tzinfo=tzlocal())}, {'Name': 's3bg80', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 11, 8, 541000, tzinfo=tzlocal())}, {'Name': 's3bg81', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 11, 8, 649000, tzinfo=tzlocal())}, {'Name': 's3bg82', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 11, 8, 700000, tzinfo=tzlocal())}, {'Name': 's3bg83', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 11, 8, 649000, tzinfo=tzlocal())}, {'Name': 's3bg84', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 11, 8, 936000, tzinfo=tzlocal())}, {'Name': 's3bg85', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 11, 9, 80000, tzinfo=tzlocal())}, {'Name': 's3bg86', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 11, 8, 946000, tzinfo=tzlocal())}, {'Name': 's3bg87', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 11, 8, 863000, tzinfo=tzlocal())}, {'Name': 's3bg88', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 11, 9, 111000, tzinfo=tzlocal())}, {'Name': 's3bg89', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 11, 8, 943000, tzinfo=tzlocal())}, {'Name': 's3bg9', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 11, 4, 24000, tzinfo=tzlocal())}, {'Name': 's3bg90', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 11, 9, 49000, tzinfo=tzlocal())}, {'Name': 's3bg91', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 11, 9, 117000, tzinfo=tzlocal())}, {'Name': 's3bg92', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 11, 9, 295000, tzinfo=tzlocal())}, {'Name': 's3bg93', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 11, 9, 290000, tzinfo=tzlocal())}, {'Name': 's3bg94', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 11, 9, 410000, tzinfo=tzlocal())}, {'Name': 's3bg95', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 11, 9, 392000, tzinfo=tzlocal())}, {'Name': 's3bg96', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 11, 9, 411000, tzinfo=tzlocal())}, {'Name': 's3bg97', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 11, 9, 410000, tzinfo=tzlocal())}, {'Name': 's3bg98', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 11, 9, 387000, tzinfo=tzlocal())}, {'Name': 's3bg99', 'CreationDate': datetime.datetime(2023, 7, 17, 19, 11, 9, 395000, tzinfo=tzlocal())}]}ok
test_head_bucket (__main__.TestBotoClient) ... ok
test_bucket_delete (__main__.TestBotoClient) ... ok
test_upload_file (__main__.TestBotoClient) ... ok
test_download_file (__main__.TestBotoClient) ... ok
test_delete_objects (__main__.TestBotoClient) ... ok
test_head_object (__main__.TestBotoClient) ... ok
test_multi_uploads (__main__.TestBotoClient) ... ok

----------------------------------------------------------------------
Ran 9 tests in 47.821s

OK

{'ResponseMetadata': {'RequestId': '1924e0be-e824-4732-9687-84a64078cc83', 'HostId': 'VZ1m1YcvUz4Tj8a', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Mon, 17 Jul 2023 19:26:43 GMT', 'cache-control': 'no-cache', 'expires': 'Mon, 17 Jul 2023 19:26:43 GMT', 'pragma': 'no-cache', 'content-type': 'text/xml', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': 'VZ1m1YcvUz4Tj8a', 'x-amz-request-id': '1924e0be-e824-4732-9687-84a64078cc83', 'content-length': '0'}, 'RetryAttempts': 0}}
{'ResponseMetadata': {'RequestId': '510f1a2d-e768-47d2-9fa7-35aebdc0e0fd', 'HostId': 'jVj5Xj0k8XF', 'HTTPStatusCode': 204, 'HTTPHeaders': {'date': 'Mon, 17 Jul 2023 19:26:43 GMT', 'cache-control': 'no-cache', 'expires': 'Mon, 17 Jul 2023 19:26:43 GMT', 'pragma': 'no-cache', 'content-type': 'text/plain;charset=utf-8', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': 'jVj5Xj0k8XF', 'x-amz-request-id': '510f1a2d-e768-47d2-9fa7-35aebdc0e0fd'}, 'RetryAttempts': 0}}
{'ResponseMetadata': {'RequestId': '74c0cff4-d083-41e9-8e2e-0a08560f5424', 'HostId': '9vddxfP7pJJs', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Mon, 17 Jul 2023 19:26:44 GMT', 'cache-control': 'no-cache', 'expires': 'Mon, 17 Jul 2023 19:26:44 GMT', 'pragma': 'no-cache', 'content-type': 'binary/octet-stream', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'etag': '2023-07-17T19:26:43.953Z', 'last-modified': 'Mon, 17 Jul 2023 19:26:43 GMT', 'server': 'Ozone', 'x-amz-id-2': '9vddxfP7pJJs', 'x-amz-request-id': '74c0cff4-d083-41e9-8e2e-0a08560f5424', 'content-length': '4068'}, 'RetryAttempts': 0}, 'LastModified': datetime.datetime(2023, 7, 17, 19, 26, 43, tzinfo=tzutc()), 'ContentLength': 4068, 'ETag': '2023-07-17T19:26:43.953Z', 'CacheControl': 'no-cache', 'ContentType': 'binary/octet-stream', 'Expires': datetime.datetime(2023, 7, 17, 19, 26, 44, tzinfo=tzutc()), 'Metadata': {}}
{'ResponseMetadata': {'RequestId': 'c7242c83-1961-4171-8b1d-9cd026b5aee5', 'HostId': 'FZXt92i60Fk', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Mon, 17 Jul 2023 19:26:44 GMT', 'cache-control': 'no-cache', 'expires': 'Mon, 17 Jul 2023 19:26:44 GMT', 'pragma': 'no-cache', 'content-type': 'application/xml', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': 'FZXt92i60Fk', 'x-amz-request-id': 'c7242c83-1961-4171-8b1d-9cd026b5aee5', 'content-length': '212'}, 'RetryAttempts': 0}, 'Deleted': [{'Key': 'README4.md'}, {'Key': 'README3.md'}]}
{'ResponseMetadata': {'RequestId': 'b254c01a-302e-45e3-9b39-4ec91dd3e724', 'HostId': '95jpn5vye6s', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Mon, 17 Jul 2023 19:26:44 GMT', 'cache-control': 'no-cache', 'expires': 'Mon, 17 Jul 2023 19:26:44 GMT', 'pragma': 'no-cache', 'content-type': 'binary/octet-stream', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'etag': '2023-07-17T19:26:00.320Z', 'last-modified': 'Mon, 17 Jul 2023 19:26:00 GMT', 'server': 'Ozone', 'x-amz-id-2': '95jpn5vye6s', 'x-amz-request-id': 'b254c01a-302e-45e3-9b39-4ec91dd3e724', 'content-length': '4068'}, 'RetryAttempts': 0}, 'LastModified': datetime.datetime(2023, 7, 17, 19, 26, tzinfo=tzutc()), 'ContentLength': 4068, 'ETag': '2023-07-17T19:26:00.320Z', 'CacheControl': 'no-cache', 'ContentType': 'binary/octet-stream', 'Expires': datetime.datetime(2023, 7, 17, 19, 26, 44, tzinfo=tzutc()), 'Metadata': {}}
{'ResponseMetadata': {'RequestId': '1d260787-0d51-42ef-a6da-589d4dcbe9b0', 'HostId': 'cmTSYvyp5Tga7', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Mon, 17 Jul 2023 19:26:44 GMT', 'cache-control': 'no-cache', 'expires': 'Mon, 17 Jul 2023 19:26:44 GMT', 'pragma': 'no-cache', 'content-type': 'application/xml', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': 'cmTSYvyp5Tga7', 'x-amz-request-id': '1d260787-0d51-42ef-a6da-589d4dcbe9b0', 'content-length': '284'}, 'RetryAttempts': 0}, 'Bucket': 'link', 'Key': 'aupcsyxxgq', 'UploadId': 'aaf01805-8455-4822-a3f4-348f9f02744e-110731067679244504'}
{'ResponseMetadata': {'RequestId': '980dcd16-db17-43d2-8290-c8eee9a8708d', 'HostId': 'kfSfEwcJzy7mSb', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Mon, 17 Jul 2023 19:26:46 GMT', 'cache-control': 'no-cache', 'expires': 'Mon, 17 Jul 2023 19:26:46 GMT', 'pragma': 'no-cache', 'content-type': 'application/xml', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': 'kfSfEwcJzy7mSb', 'x-amz-request-id': '980dcd16-db17-43d2-8290-c8eee9a8708d', 'content-length': '310'}, 'RetryAttempts': 0}, 'Location': 'link', 'Bucket': 'link', 'Key': 'aupcsyxxgq', 'ETag': 'deb088e9553b9a3901bd595596b711fbefa6948e1679ca9a296eadab1ae02b49'}
Boto3 Client Test PASSED!</msg>
<status status="PASS" starttime="20230717 19:26:47.261" endtime="20230717 19:26:47.271"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:26:47.276" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:26:47.275" endtime="20230717 19:26:47.280"/>
</kw>
<status status="PASS" starttime="20230717 19:25:58.376" endtime="20230717 19:26:47.280"/>
</kw>
<msg timestamp="20230717 19:26:47.281" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:25:58.376" endtime="20230717 19:26:47.282"/>
</kw>
<msg timestamp="20230717 19:26:47.286" level="INFO">${result} = test_create_bucket (__main__.TestBotoClient) ... /usr/local/lib/python3.6/site-packages/boto3/compat.py:88: PythonDeprecationWarning: Boto3 will no longer support Python 3.6 starting May 30, 2022. To ...</msg>
<status status="PASS" starttime="20230717 19:25:58.375" endtime="20230717 19:26:47.286"/>
</kw>
<timeout value="15 minutes"/>
<status status="PASS" starttime="20230717 19:25:58.373" endtime="20230717 19:26:47.289"/>
</test>
<doc>S3 gateway test with Boto3 Client</doc>
<status status="PASS" starttime="20230717 19:25:58.310" endtime="20230717 19:26:47.292"/>
</suite>
<suite id="s1-s9-s3" name="Bucketdelete" source="/opt/hadoop/smoketest/s3/bucketdelete.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20230717 19:26:47.329" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:26:47.327" endtime="20230717 19:26:47.329"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20230717 19:26:47.329" endtime="20230717 19:26:47.329"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20230717 19:26:47.330" endtime="20230717 19:26:47.330"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:26:47.330" endtime="20230717 19:26:47.330"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:26:47.330" endtime="20230717 19:26:47.330"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:26:47.330" endtime="20230717 19:26:47.330"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:26:47.331" endtime="20230717 19:26:47.331"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:26:47.331" endtime="20230717 19:26:47.331"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20230717 19:26:47.331" endtime="20230717 19:26:47.332"/>
</kw>
<status status="PASS" starttime="20230717 19:26:47.327" endtime="20230717 19:26:47.333"/>
</kw>
<test id="s1-s9-s3-t1" name="Delete existing bucket" line="37">
<kw name="Create bucket to be deleted">
<var>${bucket}</var>
<kw name="Run Keyword If" library="BuiltIn">
<var>${bucket}</var>
<arg>'${BUCKET}' == 'link'</arg>
<arg>Create link</arg>
<arg>to-be-deleted</arg>
<arg>ELSE</arg>
<arg>Run Keyword</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create link" library="commonawslib">
<arg>to-be-deleted</arg>
<kw name="Execute" library="os">
<arg>ozone sh bucket link o3://${OM_SERVICE_ID}/legacy/source-bucket o3://${OM_SERVICE_ID}/s3v/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:26:47.350" level="INFO">Running command 'ozone sh bucket link o3://omservice/legacy/source-bucket o3://omservice/s3v/to-be-deleted 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:27:08.903" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:27:08.903" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:26:47.341" endtime="20230717 19:27:08.904"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:27:08.906" level="INFO"/>
<status status="PASS" starttime="20230717 19:27:08.905" endtime="20230717 19:27:08.906"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:27:08.908" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:27:08.907" endtime="20230717 19:27:08.908"/>
</kw>
<status status="PASS" starttime="20230717 19:26:47.340" endtime="20230717 19:27:08.908"/>
</kw>
<msg timestamp="20230717 19:27:08.908" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:26:47.340" endtime="20230717 19:27:08.909"/>
</kw>
<status status="PASS" starttime="20230717 19:26:47.339" endtime="20230717 19:27:08.909"/>
</kw>
<status status="PASS" starttime="20230717 19:26:47.337" endtime="20230717 19:27:08.909"/>
</kw>
<msg timestamp="20230717 19:27:08.911" level="INFO">${bucket} = to-be-deleted</msg>
<status status="PASS" starttime="20230717 19:26:47.336" endtime="20230717 19:27:08.911"/>
</kw>
<msg timestamp="20230717 19:27:08.911" level="INFO">${bucket} = to-be-deleted</msg>
<status status="PASS" starttime="20230717 19:26:47.335" endtime="20230717 19:27:08.911"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>delete-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:27:08.921" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket to-be-deleted 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:27:10.311" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:27:10.311" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:27:08.916" endtime="20230717 19:27:10.311"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:27:10.314" level="INFO"/>
<status status="PASS" starttime="20230717 19:27:10.312" endtime="20230717 19:27:10.315"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:27:10.318" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:27:10.315" endtime="20230717 19:27:10.318"/>
</kw>
<status status="PASS" starttime="20230717 19:27:08.915" endtime="20230717 19:27:10.320"/>
</kw>
<msg timestamp="20230717 19:27:10.320" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:27:08.914" endtime="20230717 19:27:10.320"/>
</kw>
<msg timestamp="20230717 19:27:10.321" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:27:08.912" endtime="20230717 19:27:10.321"/>
</kw>
<status status="PASS" starttime="20230717 19:27:08.911" endtime="20230717 19:27:10.321"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:26:47.333" endtime="20230717 19:27:10.322"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20230717 19:26:47.300" endtime="20230717 19:27:10.325"/>
</suite>
<suite id="s1-s9-s4" name="Buckethead" source="/opt/hadoop/smoketest/s3/buckethead.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20230717 19:27:10.366" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:27:10.365" endtime="20230717 19:27:10.366"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20230717 19:27:10.366" endtime="20230717 19:27:10.367"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20230717 19:27:10.367" endtime="20230717 19:27:10.367"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:27:10.367" endtime="20230717 19:27:10.367"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:27:10.368" endtime="20230717 19:27:10.368"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:27:10.368" endtime="20230717 19:27:10.368"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:27:10.368" endtime="20230717 19:27:10.368"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:27:10.369" endtime="20230717 19:27:10.369"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20230717 19:27:10.369" endtime="20230717 19:27:10.369"/>
</kw>
<status status="PASS" starttime="20230717 19:27:10.364" endtime="20230717 19:27:10.369"/>
</kw>
<test id="s1-s9-s4-t1" name="Head Bucket" line="31">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>head-bucket --bucket ${BUCKET}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:27:10.382" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-bucket --bucket link 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:27:11.902" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:27:11.902" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:27:10.375" endtime="20230717 19:27:11.902"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:27:11.906" level="INFO"/>
<status status="PASS" starttime="20230717 19:27:11.903" endtime="20230717 19:27:11.906"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:27:11.908" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:27:11.906" endtime="20230717 19:27:11.909"/>
</kw>
<status status="PASS" starttime="20230717 19:27:10.374" endtime="20230717 19:27:11.910"/>
</kw>
<msg timestamp="20230717 19:27:11.910" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:27:10.374" endtime="20230717 19:27:11.910"/>
</kw>
<msg timestamp="20230717 19:27:11.910" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:27:10.373" endtime="20230717 19:27:11.910"/>
</kw>
<msg timestamp="20230717 19:27:11.911" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230717 19:27:10.372" endtime="20230717 19:27:11.911"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:27:10.370" endtime="20230717 19:27:11.911"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20230717 19:27:10.330" endtime="20230717 19:27:11.916"/>
</suite>
<suite id="s1-s9-s5" name="Bucketlist" source="/opt/hadoop/smoketest/s3/bucketlist.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20230717 19:27:11.970" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:27:11.970" endtime="20230717 19:27:11.970"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20230717 19:27:11.970" endtime="20230717 19:27:11.970"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20230717 19:27:11.971" endtime="20230717 19:27:11.971"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:27:11.971" endtime="20230717 19:27:11.971"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:27:11.971" endtime="20230717 19:27:11.971"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:27:11.971" endtime="20230717 19:27:11.971"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:27:11.972" endtime="20230717 19:27:11.972"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:27:11.972" endtime="20230717 19:27:11.972"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20230717 19:27:11.972" endtime="20230717 19:27:11.972"/>
</kw>
<status status="PASS" starttime="20230717 19:27:11.968" endtime="20230717 19:27:11.972"/>
</kw>
<test id="s1-s9-s5-t1" name="List buckets" line="31">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-buckets | jq -r '.Buckets[].Name'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:27:11.985" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-buckets | jq -r '.Buckets[].Name' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:27:13.846" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:27:13.846" level="INFO">${output} = bucket-cqbikguxnl
bucket-logiskeuzf
bucket-ozone-test-0061864334
bucket-ozone-test-4697753491
bucket-ozone-test-9909917004
destbucket-62560
encrypted
legacy-bucket-ozone-test-6968003522
link
obs-bucke...</msg>
<status status="PASS" starttime="20230717 19:27:11.978" endtime="20230717 19:27:13.846"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:27:13.852" level="INFO">bucket-cqbikguxnl
bucket-logiskeuzf
bucket-ozone-test-0061864334
bucket-ozone-test-4697753491
bucket-ozone-test-9909917004
destbucket-62560
encrypted
legacy-bucket-ozone-test-6968003522
link
obs-bucket-ozone-test-7119746925
s3bg0
s3bg1
s3bg10
s3bg11
s3bg12
s3bg13
s3bg14
s3bg15
s3bg16
s3bg17
s3bg18
s3bg19
s3bg2
s3bg20
s3bg21
s3bg22
s3bg23
s3bg24
s3bg25
s3bg26
s3bg27
s3bg28
s3bg29
s3bg3
s3bg30
s3bg31
s3bg32
s3bg33
s3bg34
s3bg35
s3bg36
s3bg37
s3bg38
s3bg39
s3bg4
s3bg40
s3bg41
s3bg42
s3bg43
s3bg44
s3bg45
s3bg46
s3bg47
s3bg48
s3bg49
s3bg5
s3bg50
s3bg51
s3bg52
s3bg53
s3bg54
s3bg55
s3bg56
s3bg57
s3bg58
s3bg59
s3bg6
s3bg60
s3bg61
s3bg62
s3bg63
s3bg64
s3bg65
s3bg66
s3bg67
s3bg68
s3bg69
s3bg7
s3bg70
s3bg71
s3bg72
s3bg73
s3bg74
s3bg75
s3bg76
s3bg77
s3bg78
s3bg79
s3bg8
s3bg80
s3bg81
s3bg82
s3bg83
s3bg84
s3bg85
s3bg86
s3bg87
s3bg88
s3bg89
s3bg9
s3bg90
s3bg91
s3bg92
s3bg93
s3bg94
s3bg95
s3bg96
s3bg97
s3bg98
s3bg99</msg>
<status status="PASS" starttime="20230717 19:27:13.848" endtime="20230717 19:27:13.852"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:27:13.855" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:27:13.853" endtime="20230717 19:27:13.856"/>
</kw>
<status status="PASS" starttime="20230717 19:27:11.975" endtime="20230717 19:27:13.856"/>
</kw>
<msg timestamp="20230717 19:27:13.857" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:27:11.975" endtime="20230717 19:27:13.857"/>
</kw>
<msg timestamp="20230717 19:27:13.857" level="INFO">${output} = bucket-cqbikguxnl
bucket-logiskeuzf
bucket-ozone-test-0061864334
bucket-ozone-test-4697753491
bucket-ozone-test-9909917004
destbucket-62560
encrypted
legacy-bucket-ozone-test-6968003522
link
obs-bucke...</msg>
<status status="PASS" starttime="20230717 19:27:11.974" endtime="20230717 19:27:13.857"/>
</kw>
<msg timestamp="20230717 19:27:13.859" level="INFO">${result} = bucket-cqbikguxnl
bucket-logiskeuzf
bucket-ozone-test-0061864334
bucket-ozone-test-4697753491
bucket-ozone-test-9909917004
destbucket-62560
encrypted
legacy-bucket-ozone-test-6968003522
link
obs-bucke...</msg>
<status status="PASS" starttime="20230717 19:27:11.973" endtime="20230717 19:27:13.859"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:27:13.859" endtime="20230717 19:27:13.861"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:27:11.972" endtime="20230717 19:27:13.863"/>
</test>
<test id="s1-s9-s5-t2" name="Get bucket info with Ozone Shell to check the owner field" line="35">
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skipping this check as security is not enabled</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230717 19:27:13.868" endtime="20230717 19:27:13.870"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /s3v/${BUCKET} | jq -r '.owner'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:27:13.887" level="INFO">Running command 'ozone sh bucket info /s3v/link | jq -r '.owner' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:27:35.131" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:27:35.132" level="INFO">${output} = testuser</msg>
<status status="PASS" starttime="20230717 19:27:13.876" endtime="20230717 19:27:35.132"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:27:35.135" level="INFO">testuser</msg>
<status status="PASS" starttime="20230717 19:27:35.133" endtime="20230717 19:27:35.135"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:27:35.137" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:27:35.136" endtime="20230717 19:27:35.137"/>
</kw>
<status status="PASS" starttime="20230717 19:27:13.874" endtime="20230717 19:27:35.138"/>
</kw>
<msg timestamp="20230717 19:27:35.138" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:27:13.872" endtime="20230717 19:27:35.138"/>
</kw>
<msg timestamp="20230717 19:27:35.138" level="INFO">${result} = testuser</msg>
<status status="PASS" starttime="20230717 19:27:13.870" endtime="20230717 19:27:35.138"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>testuser</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230717 19:27:35.139" endtime="20230717 19:27:35.140"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:27:13.864" endtime="20230717 19:27:35.140"/>
</test>
<test id="s1-s9-s5-t3" name="List buckets with empty access id" line="43">
<kw name="Save AWS access key" library="commonawslib" type="SETUP">
<kw name="Execute" library="os">
<var>${OZONE_AWS_ACCESS_KEY_ID}</var>
<arg>aws configure get aws_access_key_id</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:27:35.154" level="INFO">Running command 'aws configure get aws_access_key_id 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:27:36.496" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:27:36.496" level="INFO">${output} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230717 19:27:35.149" endtime="20230717 19:27:36.496"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:27:36.500" level="INFO">testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230717 19:27:36.498" endtime="20230717 19:27:36.502"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:27:36.507" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:27:36.504" endtime="20230717 19:27:36.507"/>
</kw>
<status status="PASS" starttime="20230717 19:27:35.148" endtime="20230717 19:27:36.509"/>
</kw>
<msg timestamp="20230717 19:27:36.509" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:27:35.147" endtime="20230717 19:27:36.509"/>
</kw>
<msg timestamp="20230717 19:27:36.511" level="INFO">${OZONE_AWS_ACCESS_KEY_ID} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230717 19:27:35.146" endtime="20230717 19:27:36.512"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${OZONE_AWS_ACCESS_KEY_ID}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20230717 19:27:36.515" level="INFO">${OZONE_AWS_ACCESS_KEY_ID} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230717 19:27:36.513" endtime="20230717 19:27:36.517"/>
</kw>
<status status="PASS" starttime="20230717 19:27:35.145" endtime="20230717 19:27:36.517"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ''</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:27:36.535" level="INFO">Running command 'aws configure set aws_access_key_id '' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:27:37.642" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:27:37.642" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:27:36.525" endtime="20230717 19:27:37.642"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:27:37.645" level="INFO"/>
<status status="PASS" starttime="20230717 19:27:37.643" endtime="20230717 19:27:37.645"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:27:37.652" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:27:37.651" endtime="20230717 19:27:37.653"/>
</kw>
<status status="PASS" starttime="20230717 19:27:36.522" endtime="20230717 19:27:37.654"/>
</kw>
<msg timestamp="20230717 19:27:37.654" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:27:36.519" endtime="20230717 19:27:37.654"/>
</kw>
<status status="PASS" starttime="20230717 19:27:36.517" endtime="20230717 19:27:37.654"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>list-buckets</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:27:37.670" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-buckets 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:27:39.323" level="INFO">${rc} = 255</msg>
<msg timestamp="20230717 19:27:39.323" level="INFO">${output} = 
An error occurred (AuthorizationHeaderMalformed) when calling the ListBuckets operation: The authorization header you provided is invalid.</msg>
<status status="PASS" starttime="20230717 19:27:37.661" endtime="20230717 19:27:39.323"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:27:39.325" level="INFO">
An error occurred (AuthorizationHeaderMalformed) when calling the ListBuckets operation: The authorization header you provided is invalid.</msg>
<status status="PASS" starttime="20230717 19:27:39.324" endtime="20230717 19:27:39.325"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:27:39.325" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:27:39.325" endtime="20230717 19:27:39.326"/>
</kw>
<msg timestamp="20230717 19:27:39.326" level="INFO">${output} = 
An error occurred (AuthorizationHeaderMalformed) when calling the ListBuckets operation: The authorization header you provided is invalid.</msg>
<status status="PASS" starttime="20230717 19:27:37.659" endtime="20230717 19:27:39.326"/>
</kw>
<msg timestamp="20230717 19:27:39.327" level="INFO">${result} = 
An error occurred (AuthorizationHeaderMalformed) when calling the ListBuckets operation: The authorization header you provided is invalid.</msg>
<status status="PASS" starttime="20230717 19:27:37.654" endtime="20230717 19:27:39.327"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>The authorization header you provided is invalid</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:27:39.327" endtime="20230717 19:27:39.327"/>
</kw>
<kw name="Restore AWS access key" library="commonawslib" type="TEARDOWN">
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${OZONE_AWS_ACCESS_KEY_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:27:39.339" level="INFO">Running command 'aws configure set aws_access_key_id testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:27:40.415" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:27:40.415" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:27:39.333" endtime="20230717 19:27:40.416"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:27:40.420" level="INFO"/>
<status status="PASS" starttime="20230717 19:27:40.417" endtime="20230717 19:27:40.420"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:27:40.421" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:27:40.420" endtime="20230717 19:27:40.421"/>
</kw>
<status status="PASS" starttime="20230717 19:27:39.332" endtime="20230717 19:27:40.422"/>
</kw>
<msg timestamp="20230717 19:27:40.422" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:27:39.332" endtime="20230717 19:27:40.422"/>
</kw>
<status status="PASS" starttime="20230717 19:27:39.331" endtime="20230717 19:27:40.423"/>
</kw>
<status status="PASS" starttime="20230717 19:27:39.330" endtime="20230717 19:27:40.423"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:27:35.142" endtime="20230717 19:27:40.423"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20230717 19:27:11.923" endtime="20230717 19:27:40.426"/>
</suite>
<suite id="s1-s9-s6" name="Freon" source="/opt/hadoop/smoketest/s3/freon.robot">
<kw name="Setup v4 headers" library="commonawslib" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:27:40.471" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:27:40.479" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:27:40.479" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20230717 19:27:40.467" endtime="20230717 19:27:40.479"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:27:40.481" level="INFO">s3g</msg>
<status status="PASS" starttime="20230717 19:27:40.480" endtime="20230717 19:27:40.481"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:27:40.482" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:27:40.481" endtime="20230717 19:27:40.482"/>
</kw>
<status status="PASS" starttime="20230717 19:27:40.466" endtime="20230717 19:27:40.483"/>
</kw>
<msg timestamp="20230717 19:27:40.483" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:27:40.465" endtime="20230717 19:27:40.483"/>
</kw>
<msg timestamp="20230717 19:27:40.483" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20230717 19:27:40.464" endtime="20230717 19:27:40.483"/>
</kw>
<msg timestamp="20230717 19:27:40.484" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230717 19:27:40.464" endtime="20230717 19:27:40.484"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230717 19:27:40.485" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230717 19:27:40.484" endtime="20230717 19:27:40.485"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:27:40.494" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:27:40.559" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:27:40.559" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:27:40.490" endtime="20230717 19:27:40.559"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:27:40.560" level="INFO"/>
<status status="PASS" starttime="20230717 19:27:40.559" endtime="20230717 19:27:40.560"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:27:40.561" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:27:40.560" endtime="20230717 19:27:40.561"/>
</kw>
<status status="PASS" starttime="20230717 19:27:40.489" endtime="20230717 19:27:40.561"/>
</kw>
<msg timestamp="20230717 19:27:40.561" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:27:40.489" endtime="20230717 19:27:40.561"/>
</kw>
<status status="PASS" starttime="20230717 19:27:40.487" endtime="20230717 19:27:40.561"/>
</kw>
<status status="PASS" starttime="20230717 19:27:40.486" endtime="20230717 19:27:40.562"/>
</kw>
<status status="PASS" starttime="20230717 19:27:40.463" endtime="20230717 19:27:40.562"/>
</kw>
<status status="PASS" starttime="20230717 19:27:40.462" endtime="20230717 19:27:40.562"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:27:40.571" level="INFO">Running command 'ozone s3 getsecret --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:27:57.028" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:27:57.028" level="INFO">${output} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=a8d1ffb55aca2830802a7cd52acea5687eae1cfc99bf6833c91d448948438bff</msg>
<status status="PASS" starttime="20230717 19:27:40.564" endtime="20230717 19:27:57.028"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:27:57.031" level="INFO">awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=a8d1ffb55aca2830802a7cd52acea5687eae1cfc99bf6833c91d448948438bff</msg>
<status status="PASS" starttime="20230717 19:27:57.029" endtime="20230717 19:27:57.031"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:27:57.032" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:27:57.031" endtime="20230717 19:27:57.032"/>
</kw>
<status status="PASS" starttime="20230717 19:27:40.564" endtime="20230717 19:27:57.033"/>
</kw>
<msg timestamp="20230717 19:27:57.033" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:27:40.563" endtime="20230717 19:27:57.033"/>
</kw>
<msg timestamp="20230717 19:27:57.035" level="INFO">${result} = awsAccessKey=testuser/s3g@EXAMPLE.COM
awsSecret=a8d1ffb55aca2830802a7cd52acea5687eae1cfc99bf6833c91d448948438bff</msg>
<status status="PASS" starttime="20230717 19:27:40.563" endtime="20230717 19:27:57.035"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230717 19:27:57.038" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20230717 19:27:57.036" endtime="20230717 19:27:57.038"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20230717 19:27:57.041" level="INFO">${accessKey} = ['testuser/s3g@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20230717 19:27:57.038" endtime="20230717 19:27:57.041"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230717 19:27:57.043" level="INFO">${secret} = ['a8d1ffb55aca2830802a7cd52acea5687eae1cfc99bf6833c91d448948438bff']</msg>
<status status="PASS" starttime="20230717 19:27:57.042" endtime="20230717 19:27:57.043"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230717 19:27:57.047" level="INFO">${accessKey} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230717 19:27:57.043" endtime="20230717 19:27:57.047"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230717 19:27:57.049" level="INFO">${secret} = a8d1ffb55aca2830802a7cd52acea5687eae1cfc99bf6833c91d448948438bff</msg>
<status status="PASS" starttime="20230717 19:27:57.047" endtime="20230717 19:27:57.049"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:27:57.059" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:27:58.299" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:27:58.299" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:27:57.054" endtime="20230717 19:27:58.299"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:27:58.301" level="INFO"/>
<status status="PASS" starttime="20230717 19:27:58.300" endtime="20230717 19:27:58.301"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:27:58.302" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:27:58.301" endtime="20230717 19:27:58.304"/>
</kw>
<status status="PASS" starttime="20230717 19:27:57.053" endtime="20230717 19:27:58.304"/>
</kw>
<msg timestamp="20230717 19:27:58.304" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:27:57.052" endtime="20230717 19:27:58.304"/>
</kw>
<status status="PASS" starttime="20230717 19:27:57.050" endtime="20230717 19:27:58.304"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:27:58.332" level="INFO">Running command 'aws configure set aws_access_key_id testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:27:59.533" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:27:59.533" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:27:58.308" endtime="20230717 19:27:59.534"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:27:59.536" level="INFO"/>
<status status="PASS" starttime="20230717 19:27:59.535" endtime="20230717 19:27:59.536"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:27:59.537" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:27:59.536" endtime="20230717 19:27:59.537"/>
</kw>
<status status="PASS" starttime="20230717 19:27:58.306" endtime="20230717 19:27:59.538"/>
</kw>
<msg timestamp="20230717 19:27:59.538" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:27:58.306" endtime="20230717 19:27:59.538"/>
</kw>
<status status="PASS" starttime="20230717 19:27:58.305" endtime="20230717 19:27:59.538"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:27:59.546" level="INFO">Running command 'aws configure set aws_secret_access_key a8d1ffb55aca2830802a7cd52acea5687eae1cfc99bf6833c91d448948438bff 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:28:00.710" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:28:00.710" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:27:59.541" endtime="20230717 19:28:00.711"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:28:00.713" level="INFO"/>
<status status="PASS" starttime="20230717 19:28:00.712" endtime="20230717 19:28:00.713"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:28:00.714" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:28:00.714" endtime="20230717 19:28:00.715"/>
</kw>
<status status="PASS" starttime="20230717 19:27:59.541" endtime="20230717 19:28:00.715"/>
</kw>
<msg timestamp="20230717 19:28:00.716" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:27:59.540" endtime="20230717 19:28:00.716"/>
</kw>
<status status="PASS" starttime="20230717 19:27:59.539" endtime="20230717 19:28:00.716"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:28:00.725" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:28:02.232" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:28:02.232" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:28:00.719" endtime="20230717 19:28:02.232"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:28:02.235" level="INFO"/>
<status status="PASS" starttime="20230717 19:28:02.234" endtime="20230717 19:28:02.235"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:28:02.235" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:28:02.235" endtime="20230717 19:28:02.236"/>
</kw>
<status status="PASS" starttime="20230717 19:28:00.718" endtime="20230717 19:28:02.236"/>
</kw>
<msg timestamp="20230717 19:28:02.236" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:28:00.717" endtime="20230717 19:28:02.237"/>
</kw>
<status status="PASS" starttime="20230717 19:28:00.716" endtime="20230717 19:28:02.237"/>
</kw>
<status status="PASS" starttime="20230717 19:27:40.562" endtime="20230717 19:28:02.237"/>
</kw>
<status status="PASS" starttime="20230717 19:27:40.562" endtime="20230717 19:28:02.237"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230717 19:28:02.237" endtime="20230717 19:28:02.238"/>
</kw>
<status status="PASS" starttime="20230717 19:27:40.462" endtime="20230717 19:28:02.239"/>
</kw>
<test id="s1-s9-s6-t1" name="Run Freon S3BG" line="42">
<kw name="Setup aws credentials" type="SETUP">
<kw name="Execute" library="os">
<var>${accessKey}</var>
<arg>aws configure get aws_access_key_id</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:28:02.255" level="INFO">Running command 'aws configure get aws_access_key_id 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:28:03.713" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:28:03.713" level="INFO">${output} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230717 19:28:02.244" endtime="20230717 19:28:03.713"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:28:03.717" level="INFO">testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230717 19:28:03.715" endtime="20230717 19:28:03.717"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:28:03.719" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:28:03.718" endtime="20230717 19:28:03.719"/>
</kw>
<status status="PASS" starttime="20230717 19:28:02.243" endtime="20230717 19:28:03.719"/>
</kw>
<msg timestamp="20230717 19:28:03.721" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:28:02.243" endtime="20230717 19:28:03.721"/>
</kw>
<msg timestamp="20230717 19:28:03.722" level="INFO">${accessKey} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230717 19:28:02.242" endtime="20230717 19:28:03.722"/>
</kw>
<kw name="Execute" library="os">
<var>${secret}</var>
<arg>aws configure get aws_secret_access_key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:28:03.737" level="INFO">Running command 'aws configure get aws_secret_access_key 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:28:05.188" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:28:05.191" level="INFO">${output} = a8d1ffb55aca2830802a7cd52acea5687eae1cfc99bf6833c91d448948438bff</msg>
<status status="PASS" starttime="20230717 19:28:03.726" endtime="20230717 19:28:05.191"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:28:05.194" level="INFO">a8d1ffb55aca2830802a7cd52acea5687eae1cfc99bf6833c91d448948438bff</msg>
<status status="PASS" starttime="20230717 19:28:05.193" endtime="20230717 19:28:05.194"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:28:05.198" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:28:05.196" endtime="20230717 19:28:05.199"/>
</kw>
<status status="PASS" starttime="20230717 19:28:03.725" endtime="20230717 19:28:05.200"/>
</kw>
<msg timestamp="20230717 19:28:05.200" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:28:03.725" endtime="20230717 19:28:05.201"/>
</kw>
<msg timestamp="20230717 19:28:05.202" level="INFO">${secret} = a8d1ffb55aca2830802a7cd52acea5687eae1cfc99bf6833c91d448948438bff</msg>
<status status="PASS" starttime="20230717 19:28:03.723" endtime="20230717 19:28:05.202"/>
</kw>
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>AWS_SECRET_ACCESS_KEY</arg>
<arg>${secret}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20230717 19:28:05.204" level="INFO">Environment variable 'AWS_SECRET_ACCESS_KEY' set to value 'a8d1ffb55aca2830802a7cd52acea5687eae1cfc99bf6833c91d448948438bff'.</msg>
<status status="PASS" starttime="20230717 19:28:05.202" endtime="20230717 19:28:05.204"/>
</kw>
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>AWS_ACCESS_KEY_ID</arg>
<arg>${accessKey}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20230717 19:28:05.206" level="INFO">Environment variable 'AWS_ACCESS_KEY_ID' set to value 'testuser/s3g@EXAMPLE.COM'.</msg>
<status status="PASS" starttime="20230717 19:28:05.206" endtime="20230717 19:28:05.206"/>
</kw>
<status status="PASS" starttime="20230717 19:28:02.242" endtime="20230717 19:28:05.206"/>
</kw>
<kw name="Freon S3BG">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon s3bg -e ${ENDPOINT_URL} -t ${threads} -n ${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:28:05.227" level="INFO">Running command 'ozone freon s3bg -e http://s3g:9878 -t 10 -n 100 -p s3bg  2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:28:24.319" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:28:24.319" level="INFO">${output} = 2023-07-17 19:28:13,746 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-17 19:28:14,279 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230717 19:28:05.217" endtime="20230717 19:28:24.319"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:28:24.321" level="INFO">2023-07-17 19:28:13,746 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-17 19:28:14,279 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-07-17 19:28:14,279 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-07-17 19:28:14,604 [main] INFO freon.BaseFreonGenerator: Executing test with prefix s3bg and number-of-tests 100
2023-07-17 19:28:14,836 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-07-17 19:28:15,844 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-07-17 19:28:16,844 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-07-17 19:28:17,847 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-07-17 19:28:18,847 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-07-17 19:28:19,849 [Thread-5] INFO freon.ProgressBar: Progress: 15.00 % (15 out of 100)
2023-07-17 19:28:20,850 [Thread-5] INFO freon.ProgressBar: Progress: 41.00 % (41 out of 100)
2023-07-17 19:28:21,852 [Thread-5] INFO freon.ProgressBar: Progress: 61.00 % (61 out of 100)
2023-07-17 19:28:22,855 [Thread-5] INFO freon.ProgressBar: Progress: 86.00 % (86 out of 100)
2023-07-17 19:28:23,855 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2023-07-17 19:28:24,052 [shutdown-hook-0] INFO metrics: type=TIMER, name=bucket-create, count=100, min=105.206109, max=1233.952911, mean=460.89193669147, stddev=218.43793371342485, median=441.821217, p75=521.721305, p95=844.167316, p98=1150.521825, p99=1228.483304, p999=1233.952911, mean_rate=17.31978476658439, m1=20.0, m5=20.0, m15=20.0, rate_unit=events/second, duration_unit=milliseconds
2023-07-17 19:28:24,065 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 9
2023-07-17 19:28:24,067 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-07-17 19:28:24,067 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20230717 19:28:24.320" endtime="20230717 19:28:24.321"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:28:24.322" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:28:24.322" endtime="20230717 19:28:24.323"/>
</kw>
<status status="PASS" starttime="20230717 19:28:05.215" endtime="20230717 19:28:24.323"/>
</kw>
<msg timestamp="20230717 19:28:24.323" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:28:05.215" endtime="20230717 19:28:24.323"/>
</kw>
<msg timestamp="20230717 19:28:24.334" level="INFO">${result} = 2023-07-17 19:28:13,746 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-17 19:28:14,279 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230717 19:28:05.213" endtime="20230717 19:28:24.334"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:28:24.334" endtime="20230717 19:28:24.335"/>
</kw>
<status status="PASS" starttime="20230717 19:28:05.207" endtime="20230717 19:28:24.335"/>
</kw>
<status status="PASS" starttime="20230717 19:28:02.240" endtime="20230717 19:28:24.336"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20230717 19:27:40.431" endtime="20230717 19:28:24.340"/>
</suite>
<suite id="s1-s9-s7" name="MultipartUpload" source="/opt/hadoop/smoketest/s3/MultipartUpload.robot">
<kw name="Setup Multipart Tests" type="SETUP">
<kw name="Setup s3 tests" library="commonawslib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20230717 19:28:24.397" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:28:24.395" endtime="20230717 19:28:24.398"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20230717 19:28:24.398" endtime="20230717 19:28:24.398"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20230717 19:28:24.398" endtime="20230717 19:28:24.398"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:28:24.398" endtime="20230717 19:28:24.399"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:28:24.399" endtime="20230717 19:28:24.399"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:28:24.400" endtime="20230717 19:28:24.400"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:28:24.400" endtime="20230717 19:28:24.401"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:28:24.401" endtime="20230717 19:28:24.401"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20230717 19:28:24.401" endtime="20230717 19:28:24.402"/>
</kw>
<status status="PASS" starttime="20230717 19:28:24.394" endtime="20230717 19:28:24.402"/>
</kw>
<kw name="Create Random File KB">
<arg>/tmp/part1</arg>
<arg>5121</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=${file} bs=1024 count=${size_in_kilobytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:28:24.412" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1024 count=5121 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:28:24.530" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:28:24.530" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:28:24.406" endtime="20230717 19:28:24.531"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:28:24.534" level="INFO"/>
<status status="PASS" starttime="20230717 19:28:24.532" endtime="20230717 19:28:24.535"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:28:24.536" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:28:24.535" endtime="20230717 19:28:24.536"/>
</kw>
<status status="PASS" starttime="20230717 19:28:24.406" endtime="20230717 19:28:24.537"/>
</kw>
<msg timestamp="20230717 19:28:24.537" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:28:24.404" endtime="20230717 19:28:24.537"/>
</kw>
<status status="PASS" starttime="20230717 19:28:24.403" endtime="20230717 19:28:24.537"/>
</kw>
<status status="PASS" starttime="20230717 19:28:24.403" endtime="20230717 19:28:24.537"/>
</kw>
<kw name="Create Random File KB">
<arg>/tmp/part2</arg>
<arg>1023</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=${file} bs=1024 count=${size_in_kilobytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:28:24.553" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part2 bs=1024 count=1023 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:28:24.578" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:28:24.578" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:28:24.546" endtime="20230717 19:28:24.578"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:28:24.579" level="INFO"/>
<status status="PASS" starttime="20230717 19:28:24.579" endtime="20230717 19:28:24.580"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:28:24.582" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:28:24.580" endtime="20230717 19:28:24.582"/>
</kw>
<status status="PASS" starttime="20230717 19:28:24.545" endtime="20230717 19:28:24.582"/>
</kw>
<msg timestamp="20230717 19:28:24.583" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:28:24.544" endtime="20230717 19:28:24.584"/>
</kw>
<status status="PASS" starttime="20230717 19:28:24.538" endtime="20230717 19:28:24.585"/>
</kw>
<status status="PASS" starttime="20230717 19:28:24.538" endtime="20230717 19:28:24.585"/>
</kw>
<status status="PASS" starttime="20230717 19:28:24.384" endtime="20230717 19:28:24.585"/>
</kw>
<test id="s1-s9-s7-t1" name="Test Multipart Upload With Adjusted Length" line="57">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230717 19:28:24.601" level="INFO">${randStr} = 8752586879</msg>
<status status="PASS" starttime="20230717 19:28:24.599" endtime="20230717 19:28:24.603"/>
</kw>
<msg timestamp="20230717 19:28:24.604" level="INFO">${random} = ozone-test-8752586879</msg>
<status status="PASS" starttime="20230717 19:28:24.596" endtime="20230717 19:28:24.604"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230717 19:28:24.606" level="INFO">${PREFIX} = ozone-test-8752586879</msg>
<status status="PASS" starttime="20230717 19:28:24.604" endtime="20230717 19:28:24.607"/>
</kw>
<status status="PASS" starttime="20230717 19:28:24.592" endtime="20230717 19:28:24.608"/>
</kw>
<kw name="Perform Multipart Upload" library="commonawslib">
<arg>${BUCKET}</arg>
<arg>multipart/adjusted_length_${PREFIX}</arg>
<arg>/tmp/part1</arg>
<arg>/tmp/part2</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:28:24.632" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket link --key multipart/adjusted_length_ozone-test-8752586879 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:28:26.325" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:28:26.326" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "multipart/adjusted_length_ozone-test-8752586879",
    "UploadId": "2d0b2fa0-9abc-40a9-8ab6-a033f7251304-110731074344255707"
}</msg>
<status status="PASS" starttime="20230717 19:28:24.621" endtime="20230717 19:28:26.326"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:28:26.327" level="INFO">{
    "Bucket": "link",
    "Key": "multipart/adjusted_length_ozone-test-8752586879",
    "UploadId": "2d0b2fa0-9abc-40a9-8ab6-a033f7251304-110731074344255707"
}</msg>
<status status="PASS" starttime="20230717 19:28:26.326" endtime="20230717 19:28:26.327"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:28:26.329" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:28:26.327" endtime="20230717 19:28:26.330"/>
</kw>
<status status="PASS" starttime="20230717 19:28:24.619" endtime="20230717 19:28:26.330"/>
</kw>
<msg timestamp="20230717 19:28:26.330" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:28:24.616" endtime="20230717 19:28:26.331"/>
</kw>
<msg timestamp="20230717 19:28:26.331" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "multipart/adjusted_length_ozone-test-8752586879",
    "UploadId": "2d0b2fa0-9abc-40a9-8ab6-a033f7251304-110731074344255707"
}</msg>
<status status="PASS" starttime="20230717 19:28:24.614" endtime="20230717 19:28:26.331"/>
</kw>
<msg timestamp="20230717 19:28:26.331" level="INFO">${result} = {
    "Bucket": "link",
    "Key": "multipart/adjusted_length_ozone-test-8752586879",
    "UploadId": "2d0b2fa0-9abc-40a9-8ab6-a033f7251304-110731074344255707"
}</msg>
<status status="PASS" starttime="20230717 19:28:24.611" endtime="20230717 19:28:26.331"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:28:26.342" level="INFO">Running command 'echo '{
    "Bucket": "link",
    "Key": "multipart/adjusted_length_ozone-test-8752586879",
    "UploadId": "2d0b2fa0-9abc-40a9-8ab6-a033f7251304-110731074344255707"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:28:26.430" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:28:26.430" level="INFO">${output} = 2d0b2fa0-9abc-40a9-8ab6-a033f7251304-110731074344255707</msg>
<status status="PASS" starttime="20230717 19:28:26.333" endtime="20230717 19:28:26.430"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:28:26.439" level="INFO">2d0b2fa0-9abc-40a9-8ab6-a033f7251304-110731074344255707</msg>
<status status="PASS" starttime="20230717 19:28:26.433" endtime="20230717 19:28:26.439"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:28:26.444" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:28:26.442" endtime="20230717 19:28:26.445"/>
</kw>
<msg timestamp="20230717 19:28:26.446" level="INFO">${upload_id} = 2d0b2fa0-9abc-40a9-8ab6-a033f7251304-110731074344255707</msg>
<status status="PASS" starttime="20230717 19:28:26.332" endtime="20230717 19:28:26.446"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{etags}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230717 19:28:26.449" level="INFO">@{etags} = [ ]</msg>
<status status="PASS" starttime="20230717 19:28:26.447" endtime="20230717 19:28:26.449"/>
</kw>
<for flavor="IN ENUMERATE">
<var>${i}</var>
<var>${file}</var>
<value>@{files}</value>
<iter>
<var name="${i}">0</var>
<var name="${file}">/tmp/part1</var>
<kw name="Evaluate" library="BuiltIn">
<var>${part}</var>
<arg>${i} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230717 19:28:26.455" level="INFO">${part} = 1</msg>
<status status="PASS" starttime="20230717 19:28:26.453" endtime="20230717 19:28:26.455"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${bucket} --key ${key} --part-number ${part} --body ${file} --upload-id ${upload_id}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:28:26.473" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket link --key multipart/adjusted_length_ozone-test-8752586879 --part-number 1 --body /tmp/part1 --upload-id 2d0b2fa0-9abc-40a9-8ab6-a033f7251304-110731074344255707 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:28:48.542" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:28:48.542" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/multipart/adjusted_length_ozone-test-8752586879-2d0b2fa0-9abc-40a9-8ab6-a033f7251304-110731074344255707-1"
}</msg>
<status status="PASS" starttime="20230717 19:28:26.466" endtime="20230717 19:28:48.542"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:28:48.545" level="INFO">{
    "ETag": "/legacy/source-bucket/multipart/adjusted_length_ozone-test-8752586879-2d0b2fa0-9abc-40a9-8ab6-a033f7251304-110731074344255707-1"
}</msg>
<status status="PASS" starttime="20230717 19:28:48.544" endtime="20230717 19:28:48.545"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:28:48.546" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:28:48.545" endtime="20230717 19:28:48.546"/>
</kw>
<status status="PASS" starttime="20230717 19:28:26.462" endtime="20230717 19:28:48.547"/>
</kw>
<msg timestamp="20230717 19:28:48.547" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:28:26.460" endtime="20230717 19:28:48.547"/>
</kw>
<msg timestamp="20230717 19:28:48.547" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/multipart/adjusted_length_ozone-test-8752586879-2d0b2fa0-9abc-40a9-8ab6-a033f7251304-110731074344255707-1"
}</msg>
<status status="PASS" starttime="20230717 19:28:26.458" endtime="20230717 19:28:48.547"/>
</kw>
<msg timestamp="20230717 19:28:48.548" level="INFO">${result} = {
    "ETag": "/legacy/source-bucket/multipart/adjusted_length_ozone-test-8752586879-2d0b2fa0-9abc-40a9-8ab6-a033f7251304-110731074344255707-1"
}</msg>
<status status="PASS" starttime="20230717 19:28:26.456" endtime="20230717 19:28:48.548"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:28:48.556" level="INFO">Running command 'echo '{
    "ETag": "/legacy/source-bucket/multipart/adjusted_length_ozone-test-8752586879-2d0b2fa0-9abc-40a9-8ab6-a033f7251304-110731074344255707-1"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:28:48.624" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:28:48.624" level="INFO">${output} = /legacy/source-bucket/multipart/adjusted_length_ozone-test-8752586879-2d0b2fa0-9abc-40a9-8ab6-a033f7251304-110731074344255707-1</msg>
<status status="PASS" starttime="20230717 19:28:48.550" endtime="20230717 19:28:48.624"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:28:48.626" level="INFO">/legacy/source-bucket/multipart/adjusted_length_ozone-test-8752586879-2d0b2fa0-9abc-40a9-8ab6-a033f7251304-110731074344255707-1</msg>
<status status="PASS" starttime="20230717 19:28:48.625" endtime="20230717 19:28:48.627"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:28:48.628" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:28:48.627" endtime="20230717 19:28:48.628"/>
</kw>
<status status="PASS" starttime="20230717 19:28:48.549" endtime="20230717 19:28:48.629"/>
</kw>
<msg timestamp="20230717 19:28:48.629" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:28:48.549" endtime="20230717 19:28:48.630"/>
</kw>
<msg timestamp="20230717 19:28:48.630" level="INFO">${etag} = /legacy/source-bucket/multipart/adjusted_length_ozone-test-8752586879-2d0b2fa0-9abc-40a9-8ab6-a033f7251304-110731074344255707-1</msg>
<status status="PASS" starttime="20230717 19:28:48.548" endtime="20230717 19:28:48.630"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${etags}</arg>
<arg>{ETag=${etag},PartNumber=${part}}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230717 19:28:48.630" endtime="20230717 19:28:48.632"/>
</kw>
<status status="PASS" starttime="20230717 19:28:26.452" endtime="20230717 19:28:48.632"/>
</iter>
<iter>
<var name="${i}">1</var>
<var name="${file}">/tmp/part2</var>
<kw name="Evaluate" library="BuiltIn">
<var>${part}</var>
<arg>${i} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230717 19:28:48.634" level="INFO">${part} = 2</msg>
<status status="PASS" starttime="20230717 19:28:48.633" endtime="20230717 19:28:48.634"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${bucket} --key ${key} --part-number ${part} --body ${file} --upload-id ${upload_id}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:28:48.650" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket link --key multipart/adjusted_length_ozone-test-8752586879 --part-number 2 --body /tmp/part2 --upload-id 2d0b2fa0-9abc-40a9-8ab6-a033f7251304-110731074344255707 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:29:10.576" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:29:10.576" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/multipart/adjusted_length_ozone-test-8752586879-2d0b2fa0-9abc-40a9-8ab6-a033f7251304-110731074344255707-2"
}</msg>
<status status="PASS" starttime="20230717 19:28:48.639" endtime="20230717 19:29:10.576"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:29:10.580" level="INFO">{
    "ETag": "/legacy/source-bucket/multipart/adjusted_length_ozone-test-8752586879-2d0b2fa0-9abc-40a9-8ab6-a033f7251304-110731074344255707-2"
}</msg>
<status status="PASS" starttime="20230717 19:29:10.578" endtime="20230717 19:29:10.580"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:29:10.582" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:29:10.581" endtime="20230717 19:29:10.582"/>
</kw>
<status status="PASS" starttime="20230717 19:28:48.638" endtime="20230717 19:29:10.582"/>
</kw>
<msg timestamp="20230717 19:29:10.583" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:28:48.636" endtime="20230717 19:29:10.583"/>
</kw>
<msg timestamp="20230717 19:29:10.583" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/multipart/adjusted_length_ozone-test-8752586879-2d0b2fa0-9abc-40a9-8ab6-a033f7251304-110731074344255707-2"
}</msg>
<status status="PASS" starttime="20230717 19:28:48.636" endtime="20230717 19:29:10.583"/>
</kw>
<msg timestamp="20230717 19:29:10.583" level="INFO">${result} = {
    "ETag": "/legacy/source-bucket/multipart/adjusted_length_ozone-test-8752586879-2d0b2fa0-9abc-40a9-8ab6-a033f7251304-110731074344255707-2"
}</msg>
<status status="PASS" starttime="20230717 19:28:48.634" endtime="20230717 19:29:10.583"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:29:10.591" level="INFO">Running command 'echo '{
    "ETag": "/legacy/source-bucket/multipart/adjusted_length_ozone-test-8752586879-2d0b2fa0-9abc-40a9-8ab6-a033f7251304-110731074344255707-2"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:29:10.666" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:29:10.667" level="INFO">${output} = /legacy/source-bucket/multipart/adjusted_length_ozone-test-8752586879-2d0b2fa0-9abc-40a9-8ab6-a033f7251304-110731074344255707-2</msg>
<status status="PASS" starttime="20230717 19:29:10.587" endtime="20230717 19:29:10.667"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:29:10.669" level="INFO">/legacy/source-bucket/multipart/adjusted_length_ozone-test-8752586879-2d0b2fa0-9abc-40a9-8ab6-a033f7251304-110731074344255707-2</msg>
<status status="PASS" starttime="20230717 19:29:10.668" endtime="20230717 19:29:10.669"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:29:10.670" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:29:10.669" endtime="20230717 19:29:10.670"/>
</kw>
<status status="PASS" starttime="20230717 19:29:10.586" endtime="20230717 19:29:10.671"/>
</kw>
<msg timestamp="20230717 19:29:10.671" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:29:10.585" endtime="20230717 19:29:10.671"/>
</kw>
<msg timestamp="20230717 19:29:10.671" level="INFO">${etag} = /legacy/source-bucket/multipart/adjusted_length_ozone-test-8752586879-2d0b2fa0-9abc-40a9-8ab6-a033f7251304-110731074344255707-2</msg>
<status status="PASS" starttime="20230717 19:29:10.584" endtime="20230717 19:29:10.671"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${etags}</arg>
<arg>{ETag=${etag},PartNumber=${part}}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230717 19:29:10.672" endtime="20230717 19:29:10.672"/>
</kw>
<status status="PASS" starttime="20230717 19:28:48.632" endtime="20230717 19:29:10.673"/>
</iter>
<status status="PASS" starttime="20230717 19:28:26.450" endtime="20230717 19:29:10.673"/>
</for>
<kw name="Catenate" library="BuiltIn">
<var>${parts}</var>
<arg>SEPARATOR=,</arg>
<arg>@{etags}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230717 19:29:10.674" level="INFO">${parts} = {ETag=/legacy/source-bucket/multipart/adjusted_length_ozone-test-8752586879-2d0b2fa0-9abc-40a9-8ab6-a033f7251304-110731074344255707-1,PartNumber=1},{ETag=/legacy/source-bucket/multipart/adjusted_lengt...</msg>
<status status="PASS" starttime="20230717 19:29:10.673" endtime="20230717 19:29:10.674"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>complete-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id} --multipart-upload 'Parts=[${parts}]'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:29:10.682" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --bucket link --key multipart/adjusted_length_ozone-test-8752586879 --upload-id 2d0b2fa0-9abc-40a9-8ab6-a033f7251304-110731074344255707 --multipart-upload 'Parts=[{ETag=/legacy/source-bucket/multipart/adjusted_length_ozone-test-8752586879-2d0b2fa0-9abc-40a9-8ab6-a033f7251304-110731074344255707-1,PartNumber=1},{ETag=/legacy/source-bucket/multipart/adjusted_length_ozone-test-8752586879-2d0b2fa0-9abc-40a9-8ab6-a033f7251304-110731074344255707-2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:29:12.227" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:29:12.227" level="INFO">${output} = {
    "Location": "link",
    "Bucket": "link",
    "Key": "multipart/adjusted_length_ozone-test-8752586879",
    "ETag": "c64eb5137d3528f1921a00b6ea5fa37d2636e4ffe61b00657142fab24126b704"
}</msg>
<status status="PASS" starttime="20230717 19:29:10.678" endtime="20230717 19:29:12.227"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:29:12.231" level="INFO">{
    "Location": "link",
    "Bucket": "link",
    "Key": "multipart/adjusted_length_ozone-test-8752586879",
    "ETag": "c64eb5137d3528f1921a00b6ea5fa37d2636e4ffe61b00657142fab24126b704"
}</msg>
<status status="PASS" starttime="20230717 19:29:12.229" endtime="20230717 19:29:12.231"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:29:12.232" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:29:12.231" endtime="20230717 19:29:12.232"/>
</kw>
<status status="PASS" starttime="20230717 19:29:10.677" endtime="20230717 19:29:12.234"/>
</kw>
<msg timestamp="20230717 19:29:12.234" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:29:10.677" endtime="20230717 19:29:12.234"/>
</kw>
<msg timestamp="20230717 19:29:12.236" level="INFO">${output} = {
    "Location": "link",
    "Bucket": "link",
    "Key": "multipart/adjusted_length_ozone-test-8752586879",
    "ETag": "c64eb5137d3528f1921a00b6ea5fa37d2636e4ffe61b00657142fab24126b704"
}</msg>
<status status="PASS" starttime="20230717 19:29:10.676" endtime="20230717 19:29:12.237"/>
</kw>
<status status="PASS" starttime="20230717 19:29:10.674" endtime="20230717 19:29:12.237"/>
</kw>
<status status="PASS" starttime="20230717 19:28:24.609" endtime="20230717 19:29:12.239"/>
</kw>
<kw name="Verify Multipart Upload" library="commonawslib">
<arg>${BUCKET}</arg>
<arg>multipart/adjusted_length_${PREFIX}</arg>
<arg>/tmp/part1</arg>
<arg>/tmp/part2</arg>
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230717 19:29:12.246" level="INFO">${randStr} = 4921406079</msg>
<status status="PASS" starttime="20230717 19:29:12.245" endtime="20230717 19:29:12.248"/>
</kw>
<msg timestamp="20230717 19:29:12.248" level="INFO">${random} = ozone-test-4921406079</msg>
<status status="PASS" starttime="20230717 19:29:12.244" endtime="20230717 19:29:12.248"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${bucket} --key ${key} /tmp/verify${random}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:29:12.266" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key multipart/adjusted_length_ozone-test-8752586879 /tmp/verifyozone-test-4921406079 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:29:15.185" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:29:15.185" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:29:12 GMT",
    "ContentLength": 6291456,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Ex...</msg>
<status status="PASS" starttime="20230717 19:29:12.257" endtime="20230717 19:29:15.186"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:29:15.187" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:29:12 GMT",
    "ContentLength": 6291456,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Mon, 17 Jul 2023 19:29:13 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230717 19:29:15.186" endtime="20230717 19:29:15.188"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:29:15.189" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:29:15.188" endtime="20230717 19:29:15.190"/>
</kw>
<status status="PASS" starttime="20230717 19:29:12.254" endtime="20230717 19:29:15.190"/>
</kw>
<msg timestamp="20230717 19:29:15.191" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:29:12.253" endtime="20230717 19:29:15.191"/>
</kw>
<msg timestamp="20230717 19:29:15.193" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:29:12 GMT",
    "ContentLength": 6291456,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Ex...</msg>
<status status="PASS" starttime="20230717 19:29:12.252" endtime="20230717 19:29:15.193"/>
</kw>
<status status="PASS" starttime="20230717 19:29:12.248" endtime="20230717 19:29:15.194"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${tmp}</var>
<arg>@{files}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230717 19:29:15.197" level="INFO">${tmp} = /tmp/part1 /tmp/part2</msg>
<status status="PASS" starttime="20230717 19:29:15.194" endtime="20230717 19:29:15.197"/>
</kw>
<kw name="Execute" library="os">
<arg>cat ${tmp} &gt; /tmp/original${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:29:15.208" level="INFO">Running command 'cat /tmp/part1 /tmp/part2 &gt; /tmp/originalozone-test-4921406079'.</msg>
<msg timestamp="20230717 19:29:15.228" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:29:15.228" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:29:15.202" endtime="20230717 19:29:15.229"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:29:15.234" level="INFO"/>
<status status="PASS" starttime="20230717 19:29:15.231" endtime="20230717 19:29:15.234"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:29:15.235" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:29:15.234" endtime="20230717 19:29:15.236"/>
</kw>
<status status="PASS" starttime="20230717 19:29:15.200" endtime="20230717 19:29:15.236"/>
</kw>
<msg timestamp="20230717 19:29:15.236" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:29:15.200" endtime="20230717 19:29:15.236"/>
</kw>
<status status="PASS" starttime="20230717 19:29:15.197" endtime="20230717 19:29:15.236"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/original${random}</arg>
<arg>/tmp/verify${random}</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:29:15.249" level="INFO">Running command 'md5sum /tmp/originalozone-test-4921406079 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:29:15.280" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:29:15.280" level="INFO">${output} = 44db2934e336eeb15da9d64c1cad50e0</msg>
<status status="PASS" starttime="20230717 19:29:15.243" endtime="20230717 19:29:15.280"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:29:15.282" level="INFO">44db2934e336eeb15da9d64c1cad50e0</msg>
<status status="PASS" starttime="20230717 19:29:15.281" endtime="20230717 19:29:15.282"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:29:15.283" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:29:15.283" endtime="20230717 19:29:15.284"/>
</kw>
<status status="PASS" starttime="20230717 19:29:15.242" endtime="20230717 19:29:15.284"/>
</kw>
<msg timestamp="20230717 19:29:15.284" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:29:15.240" endtime="20230717 19:29:15.284"/>
</kw>
<msg timestamp="20230717 19:29:15.285" level="INFO">${checksumbefore} = 44db2934e336eeb15da9d64c1cad50e0</msg>
<status status="PASS" starttime="20230717 19:29:15.239" endtime="20230717 19:29:15.285"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:29:15.292" level="INFO">Running command 'md5sum /tmp/verifyozone-test-4921406079 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:29:15.320" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:29:15.320" level="INFO">${output} = 44db2934e336eeb15da9d64c1cad50e0</msg>
<status status="PASS" starttime="20230717 19:29:15.288" endtime="20230717 19:29:15.321"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:29:15.324" level="INFO">44db2934e336eeb15da9d64c1cad50e0</msg>
<status status="PASS" starttime="20230717 19:29:15.322" endtime="20230717 19:29:15.324"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:29:15.327" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:29:15.324" endtime="20230717 19:29:15.327"/>
</kw>
<status status="PASS" starttime="20230717 19:29:15.287" endtime="20230717 19:29:15.327"/>
</kw>
<msg timestamp="20230717 19:29:15.328" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:29:15.287" endtime="20230717 19:29:15.329"/>
</kw>
<msg timestamp="20230717 19:29:15.329" level="INFO">${checksumafter} = 44db2934e336eeb15da9d64c1cad50e0</msg>
<status status="PASS" starttime="20230717 19:29:15.285" endtime="20230717 19:29:15.329"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230717 19:29:15.329" endtime="20230717 19:29:15.331"/>
</kw>
<status status="PASS" starttime="20230717 19:29:15.238" endtime="20230717 19:29:15.333"/>
</kw>
<status status="PASS" starttime="20230717 19:29:12.241" endtime="20230717 19:29:15.335"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:28:24.587" endtime="20230717 19:29:15.338"/>
</test>
<test id="s1-s9-s7-t2" name="Test Multipart Upload" line="61">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230717 19:29:15.349" level="INFO">${randStr} = 0500351880</msg>
<status status="PASS" starttime="20230717 19:29:15.347" endtime="20230717 19:29:15.349"/>
</kw>
<msg timestamp="20230717 19:29:15.349" level="INFO">${random} = ozone-test-0500351880</msg>
<status status="PASS" starttime="20230717 19:29:15.345" endtime="20230717 19:29:15.350"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230717 19:29:15.352" level="INFO">${PREFIX} = ozone-test-0500351880</msg>
<status status="PASS" starttime="20230717 19:29:15.351" endtime="20230717 19:29:15.352"/>
</kw>
<status status="PASS" starttime="20230717 19:29:15.344" endtime="20230717 19:29:15.353"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:29:15.367" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket link --key ozone-test-0500351880/multipartKey 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:29:17.047" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:29:17.047" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "ozone-test-0500351880/multipartKey",
    "UploadId": "8661f213-dde9-44e2-997c-70ddbf4fbc09-110731077672042718"
}</msg>
<status status="PASS" starttime="20230717 19:29:15.361" endtime="20230717 19:29:17.047"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:29:17.050" level="INFO">{
    "Bucket": "link",
    "Key": "ozone-test-0500351880/multipartKey",
    "UploadId": "8661f213-dde9-44e2-997c-70ddbf4fbc09-110731077672042718"
}</msg>
<status status="PASS" starttime="20230717 19:29:17.048" endtime="20230717 19:29:17.050"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:29:17.052" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:29:17.051" endtime="20230717 19:29:17.052"/>
</kw>
<status status="PASS" starttime="20230717 19:29:15.359" endtime="20230717 19:29:17.053"/>
</kw>
<msg timestamp="20230717 19:29:17.053" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:29:15.359" endtime="20230717 19:29:17.053"/>
</kw>
<msg timestamp="20230717 19:29:17.053" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "ozone-test-0500351880/multipartKey",
    "UploadId": "8661f213-dde9-44e2-997c-70ddbf4fbc09-110731077672042718"
}</msg>
<status status="PASS" starttime="20230717 19:29:15.355" endtime="20230717 19:29:17.053"/>
</kw>
<msg timestamp="20230717 19:29:17.054" level="INFO">${result} = {
    "Bucket": "link",
    "Key": "ozone-test-0500351880/multipartKey",
    "UploadId": "8661f213-dde9-44e2-997c-70ddbf4fbc09-110731077672042718"
}</msg>
<status status="PASS" starttime="20230717 19:29:15.354" endtime="20230717 19:29:17.054"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:29:17.061" level="INFO">Running command 'echo '{
    "Bucket": "link",
    "Key": "ozone-test-0500351880/multipartKey",
    "UploadId": "8661f213-dde9-44e2-997c-70ddbf4fbc09-110731077672042718"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:29:17.141" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:29:17.141" level="INFO">${output} = 8661f213-dde9-44e2-997c-70ddbf4fbc09-110731077672042718</msg>
<status status="PASS" starttime="20230717 19:29:17.055" endtime="20230717 19:29:17.141"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:29:17.145" level="INFO">8661f213-dde9-44e2-997c-70ddbf4fbc09-110731077672042718</msg>
<status status="PASS" starttime="20230717 19:29:17.142" endtime="20230717 19:29:17.145"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:29:17.146" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:29:17.145" endtime="20230717 19:29:17.146"/>
</kw>
<msg timestamp="20230717 19:29:17.147" level="INFO">${uploadID} = 8661f213-dde9-44e2-997c-70ddbf4fbc09-110731077672042718</msg>
<status status="PASS" starttime="20230717 19:29:17.054" endtime="20230717 19:29:17.147"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:29:17.147" endtime="20230717 19:29:17.148"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:29:17.149" endtime="20230717 19:29:17.150"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:29:17.150" endtime="20230717 19:29:17.151"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:29:17.162" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket link --key ozone-test-0500351880/multipartKey 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:29:18.737" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:29:18.737" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "ozone-test-0500351880/multipartKey",
    "UploadId": "e9667d44-4dc6-4258-b8bd-3b7de2dad9f3-110731077785747679"
}</msg>
<status status="PASS" starttime="20230717 19:29:17.156" endtime="20230717 19:29:18.737"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:29:18.739" level="INFO">{
    "Bucket": "link",
    "Key": "ozone-test-0500351880/multipartKey",
    "UploadId": "e9667d44-4dc6-4258-b8bd-3b7de2dad9f3-110731077785747679"
}</msg>
<status status="PASS" starttime="20230717 19:29:18.738" endtime="20230717 19:29:18.739"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:29:18.740" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:29:18.739" endtime="20230717 19:29:18.740"/>
</kw>
<status status="PASS" starttime="20230717 19:29:17.155" endtime="20230717 19:29:18.740"/>
</kw>
<msg timestamp="20230717 19:29:18.740" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:29:17.155" endtime="20230717 19:29:18.740"/>
</kw>
<msg timestamp="20230717 19:29:18.741" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "ozone-test-0500351880/multipartKey",
    "UploadId": "e9667d44-4dc6-4258-b8bd-3b7de2dad9f3-110731077785747679"
}</msg>
<status status="PASS" starttime="20230717 19:29:17.153" endtime="20230717 19:29:18.741"/>
</kw>
<msg timestamp="20230717 19:29:18.741" level="INFO">${result} = {
    "Bucket": "link",
    "Key": "ozone-test-0500351880/multipartKey",
    "UploadId": "e9667d44-4dc6-4258-b8bd-3b7de2dad9f3-110731077785747679"
}</msg>
<status status="PASS" starttime="20230717 19:29:17.151" endtime="20230717 19:29:18.741"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${nextUploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:29:18.749" level="INFO">Running command 'echo '{
    "Bucket": "link",
    "Key": "ozone-test-0500351880/multipartKey",
    "UploadId": "e9667d44-4dc6-4258-b8bd-3b7de2dad9f3-110731077785747679"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:29:18.818" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:29:18.818" level="INFO">${output} = e9667d44-4dc6-4258-b8bd-3b7de2dad9f3-110731077785747679</msg>
<status status="PASS" starttime="20230717 19:29:18.742" endtime="20230717 19:29:18.818"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:29:18.821" level="INFO">e9667d44-4dc6-4258-b8bd-3b7de2dad9f3-110731077785747679</msg>
<status status="PASS" starttime="20230717 19:29:18.819" endtime="20230717 19:29:18.822"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:29:18.822" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:29:18.822" endtime="20230717 19:29:18.823"/>
</kw>
<msg timestamp="20230717 19:29:18.823" level="INFO">${nextUploadID} = e9667d44-4dc6-4258-b8bd-3b7de2dad9f3-110731077785747679</msg>
<status status="PASS" starttime="20230717 19:29:18.742" endtime="20230717 19:29:18.823"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:29:18.823" endtime="20230717 19:29:18.824"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:29:18.824" endtime="20230717 19:29:18.824"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:29:18.824" endtime="20230717 19:29:18.825"/>
</kw>
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${uploadID}</arg>
<arg>${nextUploadID}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="PASS" starttime="20230717 19:29:18.825" endtime="20230717 19:29:18.826"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>5</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>5</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:29:18.843" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:29:18.889" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:29:18.889" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:29:18.838" endtime="20230717 19:29:18.889"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:29:18.891" level="INFO"/>
<status status="PASS" starttime="20230717 19:29:18.890" endtime="20230717 19:29:18.891"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:29:18.893" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:29:18.892" endtime="20230717 19:29:18.893"/>
</kw>
<status status="PASS" starttime="20230717 19:29:18.829" endtime="20230717 19:29:18.894"/>
</kw>
<msg timestamp="20230717 19:29:18.894" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:29:18.829" endtime="20230717 19:29:18.894"/>
</kw>
<status status="PASS" starttime="20230717 19:29:18.828" endtime="20230717 19:29:18.895"/>
</kw>
<status status="PASS" starttime="20230717 19:29:18.826" endtime="20230717 19:29:18.896"/>
</kw>
<status status="PASS" starttime="20230717 19:29:18.826" endtime="20230717 19:29:18.896"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey --part-number 1 --body /tmp/part1 --upload-id ${nextUploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:29:18.912" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket link --key ozone-test-0500351880/multipartKey --part-number 1 --body /tmp/part1 --upload-id e9667d44-4dc6-4258-b8bd-3b7de2dad9f3-110731077785747679 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:29:41.009" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:29:41.009" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/ozone-test-0500351880/multipartKey-e9667d44-4dc6-4258-b8bd-3b7de2dad9f3-110731077785747679-1"
}</msg>
<status status="PASS" starttime="20230717 19:29:18.905" endtime="20230717 19:29:41.010"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:29:41.013" level="INFO">{
    "ETag": "/legacy/source-bucket/ozone-test-0500351880/multipartKey-e9667d44-4dc6-4258-b8bd-3b7de2dad9f3-110731077785747679-1"
}</msg>
<status status="PASS" starttime="20230717 19:29:41.010" endtime="20230717 19:29:41.013"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:29:41.015" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:29:41.014" endtime="20230717 19:29:41.015"/>
</kw>
<status status="PASS" starttime="20230717 19:29:18.903" endtime="20230717 19:29:41.015"/>
</kw>
<msg timestamp="20230717 19:29:41.015" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:29:18.903" endtime="20230717 19:29:41.015"/>
</kw>
<msg timestamp="20230717 19:29:41.016" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/ozone-test-0500351880/multipartKey-e9667d44-4dc6-4258-b8bd-3b7de2dad9f3-110731077785747679-1"
}</msg>
<status status="PASS" starttime="20230717 19:29:18.902" endtime="20230717 19:29:41.016"/>
</kw>
<msg timestamp="20230717 19:29:41.016" level="INFO">${result} = {
    "ETag": "/legacy/source-bucket/ozone-test-0500351880/multipartKey-e9667d44-4dc6-4258-b8bd-3b7de2dad9f3-110731077785747679-1"
}</msg>
<status status="PASS" starttime="20230717 19:29:18.898" endtime="20230717 19:29:41.016"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:29:41.019" endtime="20230717 19:29:41.019"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>5</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>5</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:29:41.046" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:29:41.097" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:29:41.097" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:29:41.024" endtime="20230717 19:29:41.097"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:29:41.100" level="INFO"/>
<status status="PASS" starttime="20230717 19:29:41.098" endtime="20230717 19:29:41.100"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:29:41.101" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:29:41.100" endtime="20230717 19:29:41.102"/>
</kw>
<status status="PASS" starttime="20230717 19:29:41.023" endtime="20230717 19:29:41.102"/>
</kw>
<msg timestamp="20230717 19:29:41.104" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:29:41.023" endtime="20230717 19:29:41.104"/>
</kw>
<status status="PASS" starttime="20230717 19:29:41.020" endtime="20230717 19:29:41.105"/>
</kw>
<status status="PASS" starttime="20230717 19:29:41.020" endtime="20230717 19:29:41.105"/>
</kw>
<status status="PASS" starttime="20230717 19:29:41.019" endtime="20230717 19:29:41.105"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey --part-number 1 --body /tmp/part1 --upload-id ${nextUploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:29:41.126" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket link --key ozone-test-0500351880/multipartKey --part-number 1 --body /tmp/part1 --upload-id e9667d44-4dc6-4258-b8bd-3b7de2dad9f3-110731077785747679 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:30:03.347" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:30:03.347" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/ozone-test-0500351880/multipartKey-e9667d44-4dc6-4258-b8bd-3b7de2dad9f3-110731077785747679-1"
}</msg>
<status status="PASS" starttime="20230717 19:29:41.118" endtime="20230717 19:30:03.347"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:30:03.350" level="INFO">{
    "ETag": "/legacy/source-bucket/ozone-test-0500351880/multipartKey-e9667d44-4dc6-4258-b8bd-3b7de2dad9f3-110731077785747679-1"
}</msg>
<status status="PASS" starttime="20230717 19:30:03.348" endtime="20230717 19:30:03.350"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:30:03.352" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:30:03.351" endtime="20230717 19:30:03.353"/>
</kw>
<status status="PASS" starttime="20230717 19:29:41.116" endtime="20230717 19:30:03.353"/>
</kw>
<msg timestamp="20230717 19:30:03.353" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:29:41.114" endtime="20230717 19:30:03.353"/>
</kw>
<msg timestamp="20230717 19:30:03.354" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/ozone-test-0500351880/multipartKey-e9667d44-4dc6-4258-b8bd-3b7de2dad9f3-110731077785747679-1"
}</msg>
<status status="PASS" starttime="20230717 19:29:41.111" endtime="20230717 19:30:03.354"/>
</kw>
<msg timestamp="20230717 19:30:03.354" level="INFO">${result} = {
    "ETag": "/legacy/source-bucket/ozone-test-0500351880/multipartKey-e9667d44-4dc6-4258-b8bd-3b7de2dad9f3-110731077785747679-1"
}</msg>
<status status="PASS" starttime="20230717 19:29:41.109" endtime="20230717 19:30:03.354"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:30:03.355" endtime="20230717 19:30:03.355"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:29:15.341" endtime="20230717 19:30:03.356"/>
</test>
<test id="s1-s9-s7-t3" name="Test Multipart Upload Complete" line="89">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230717 19:30:03.364" level="INFO">${randStr} = 2856132575</msg>
<status status="PASS" starttime="20230717 19:30:03.363" endtime="20230717 19:30:03.365"/>
</kw>
<msg timestamp="20230717 19:30:03.365" level="INFO">${random} = ozone-test-2856132575</msg>
<status status="PASS" starttime="20230717 19:30:03.362" endtime="20230717 19:30:03.365"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230717 19:30:03.366" level="INFO">${PREFIX} = ozone-test-2856132575</msg>
<status status="PASS" starttime="20230717 19:30:03.366" endtime="20230717 19:30:03.367"/>
</kw>
<status status="PASS" starttime="20230717 19:30:03.361" endtime="20230717 19:30:03.367"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:30:03.376" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket link --key ozone-test-2856132575/multipartKey1 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:30:04.614" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:30:04.614" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "ozone-test-2856132575/multipartKey1",
    "UploadId": "c1a39b3e-0d67-42d8-b7d6-48a108fee3ba-110731080792015074"
}</msg>
<status status="PASS" starttime="20230717 19:30:03.371" endtime="20230717 19:30:04.614"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:30:04.617" level="INFO">{
    "Bucket": "link",
    "Key": "ozone-test-2856132575/multipartKey1",
    "UploadId": "c1a39b3e-0d67-42d8-b7d6-48a108fee3ba-110731080792015074"
}</msg>
<status status="PASS" starttime="20230717 19:30:04.615" endtime="20230717 19:30:04.617"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:30:04.619" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:30:04.618" endtime="20230717 19:30:04.620"/>
</kw>
<status status="PASS" starttime="20230717 19:30:03.370" endtime="20230717 19:30:04.620"/>
</kw>
<msg timestamp="20230717 19:30:04.620" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:30:03.369" endtime="20230717 19:30:04.621"/>
</kw>
<msg timestamp="20230717 19:30:04.622" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "ozone-test-2856132575/multipartKey1",
    "UploadId": "c1a39b3e-0d67-42d8-b7d6-48a108fee3ba-110731080792015074"
}</msg>
<status status="PASS" starttime="20230717 19:30:03.368" endtime="20230717 19:30:04.622"/>
</kw>
<msg timestamp="20230717 19:30:04.622" level="INFO">${result} = {
    "Bucket": "link",
    "Key": "ozone-test-2856132575/multipartKey1",
    "UploadId": "c1a39b3e-0d67-42d8-b7d6-48a108fee3ba-110731080792015074"
}</msg>
<status status="PASS" starttime="20230717 19:30:03.367" endtime="20230717 19:30:04.622"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:30:04.632" level="INFO">Running command 'echo '{
    "Bucket": "link",
    "Key": "ozone-test-2856132575/multipartKey1",
    "UploadId": "c1a39b3e-0d67-42d8-b7d6-48a108fee3ba-110731080792015074"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:30:04.718" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:30:04.719" level="INFO">${output} = c1a39b3e-0d67-42d8-b7d6-48a108fee3ba-110731080792015074</msg>
<status status="PASS" starttime="20230717 19:30:04.624" endtime="20230717 19:30:04.719"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:30:04.726" level="INFO">c1a39b3e-0d67-42d8-b7d6-48a108fee3ba-110731080792015074</msg>
<status status="PASS" starttime="20230717 19:30:04.721" endtime="20230717 19:30:04.726"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:30:04.730" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:30:04.727" endtime="20230717 19:30:04.730"/>
</kw>
<msg timestamp="20230717 19:30:04.730" level="INFO">${uploadID} = c1a39b3e-0d67-42d8-b7d6-48a108fee3ba-110731080792015074</msg>
<status status="PASS" starttime="20230717 19:30:04.623" endtime="20230717 19:30:04.730"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:30:04.731" endtime="20230717 19:30:04.733"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:30:04.733" endtime="20230717 19:30:04.734"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:30:04.734" endtime="20230717 19:30:04.737"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>5</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>5</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:30:04.752" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:30:04.799" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:30:04.799" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:30:04.745" endtime="20230717 19:30:04.799"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:30:04.802" level="INFO"/>
<status status="PASS" starttime="20230717 19:30:04.801" endtime="20230717 19:30:04.802"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:30:04.804" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:30:04.803" endtime="20230717 19:30:04.804"/>
</kw>
<status status="PASS" starttime="20230717 19:30:04.744" endtime="20230717 19:30:04.804"/>
</kw>
<msg timestamp="20230717 19:30:04.805" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:30:04.743" endtime="20230717 19:30:04.805"/>
</kw>
<status status="PASS" starttime="20230717 19:30:04.741" endtime="20230717 19:30:04.805"/>
</kw>
<status status="PASS" starttime="20230717 19:30:04.739" endtime="20230717 19:30:04.805"/>
</kw>
<status status="PASS" starttime="20230717 19:30:04.738" endtime="20230717 19:30:04.805"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 --part-number 1 --body /tmp/part1 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:30:04.820" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket link --key ozone-test-2856132575/multipartKey1 --part-number 1 --body /tmp/part1 --upload-id c1a39b3e-0d67-42d8-b7d6-48a108fee3ba-110731080792015074 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:30:26.839" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:30:26.840" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/ozone-test-2856132575/multipartKey1-c1a39b3e-0d67-42d8-b7d6-48a108fee3ba-110731080792015074-1"
}</msg>
<status status="PASS" starttime="20230717 19:30:04.813" endtime="20230717 19:30:26.840"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:30:26.842" level="INFO">{
    "ETag": "/legacy/source-bucket/ozone-test-2856132575/multipartKey1-c1a39b3e-0d67-42d8-b7d6-48a108fee3ba-110731080792015074-1"
}</msg>
<status status="PASS" starttime="20230717 19:30:26.841" endtime="20230717 19:30:26.842"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:30:26.844" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:30:26.843" endtime="20230717 19:30:26.844"/>
</kw>
<status status="PASS" starttime="20230717 19:30:04.811" endtime="20230717 19:30:26.844"/>
</kw>
<msg timestamp="20230717 19:30:26.844" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:30:04.811" endtime="20230717 19:30:26.844"/>
</kw>
<msg timestamp="20230717 19:30:26.845" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/ozone-test-2856132575/multipartKey1-c1a39b3e-0d67-42d8-b7d6-48a108fee3ba-110731080792015074-1"
}</msg>
<status status="PASS" starttime="20230717 19:30:04.809" endtime="20230717 19:30:26.845"/>
</kw>
<msg timestamp="20230717 19:30:26.845" level="INFO">${result} = {
    "ETag": "/legacy/source-bucket/ozone-test-2856132575/multipartKey1-c1a39b3e-0d67-42d8-b7d6-48a108fee3ba-110731080792015074-1"
}</msg>
<status status="PASS" starttime="20230717 19:30:04.806" endtime="20230717 19:30:26.845"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:30:26.852" level="INFO">Running command 'echo '{
    "ETag": "/legacy/source-bucket/ozone-test-2856132575/multipartKey1-c1a39b3e-0d67-42d8-b7d6-48a108fee3ba-110731080792015074-1"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:30:26.935" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:30:26.935" level="INFO">${output} = /legacy/source-bucket/ozone-test-2856132575/multipartKey1-c1a39b3e-0d67-42d8-b7d6-48a108fee3ba-110731080792015074-1</msg>
<status status="PASS" starttime="20230717 19:30:26.846" endtime="20230717 19:30:26.935"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:30:26.939" level="INFO">/legacy/source-bucket/ozone-test-2856132575/multipartKey1-c1a39b3e-0d67-42d8-b7d6-48a108fee3ba-110731080792015074-1</msg>
<status status="PASS" starttime="20230717 19:30:26.937" endtime="20230717 19:30:26.939"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:30:26.942" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:30:26.940" endtime="20230717 19:30:26.942"/>
</kw>
<msg timestamp="20230717 19:30:26.944" level="INFO">${eTag1} = /legacy/source-bucket/ozone-test-2856132575/multipartKey1-c1a39b3e-0d67-42d8-b7d6-48a108fee3ba-110731080792015074-1</msg>
<status status="PASS" starttime="20230717 19:30:26.845" endtime="20230717 19:30:26.944"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:30:26.944" endtime="20230717 19:30:26.945"/>
</kw>
<kw name="Execute" library="os">
<arg>echo "Part2" &gt; /tmp/part2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:30:26.957" level="INFO">Running command 'echo "Part2" &gt; /tmp/part2'.</msg>
<msg timestamp="20230717 19:30:26.960" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:30:26.961" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:30:26.951" endtime="20230717 19:30:26.961"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:30:26.966" level="INFO"/>
<status status="PASS" starttime="20230717 19:30:26.962" endtime="20230717 19:30:26.966"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:30:26.970" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:30:26.968" endtime="20230717 19:30:26.970"/>
</kw>
<status status="PASS" starttime="20230717 19:30:26.949" endtime="20230717 19:30:26.971"/>
</kw>
<msg timestamp="20230717 19:30:26.971" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:30:26.948" endtime="20230717 19:30:26.971"/>
</kw>
<status status="PASS" starttime="20230717 19:30:26.946" endtime="20230717 19:30:26.972"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 --part-number 2 --body /tmp/part2 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:30:26.990" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket link --key ozone-test-2856132575/multipartKey1 --part-number 2 --body /tmp/part2 --upload-id c1a39b3e-0d67-42d8-b7d6-48a108fee3ba-110731080792015074 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:30:48.854" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:30:48.854" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/ozone-test-2856132575/multipartKey1-c1a39b3e-0d67-42d8-b7d6-48a108fee3ba-110731080792015074-2"
}</msg>
<status status="PASS" starttime="20230717 19:30:26.984" endtime="20230717 19:30:48.855"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:30:48.862" level="INFO">{
    "ETag": "/legacy/source-bucket/ozone-test-2856132575/multipartKey1-c1a39b3e-0d67-42d8-b7d6-48a108fee3ba-110731080792015074-2"
}</msg>
<status status="PASS" starttime="20230717 19:30:48.857" endtime="20230717 19:30:48.862"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:30:48.868" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:30:48.863" endtime="20230717 19:30:48.869"/>
</kw>
<status status="PASS" starttime="20230717 19:30:26.983" endtime="20230717 19:30:48.869"/>
</kw>
<msg timestamp="20230717 19:30:48.870" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:30:26.982" endtime="20230717 19:30:48.870"/>
</kw>
<msg timestamp="20230717 19:30:48.871" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/ozone-test-2856132575/multipartKey1-c1a39b3e-0d67-42d8-b7d6-48a108fee3ba-110731080792015074-2"
}</msg>
<status status="PASS" starttime="20230717 19:30:26.978" endtime="20230717 19:30:48.871"/>
</kw>
<msg timestamp="20230717 19:30:48.872" level="INFO">${result} = {
    "ETag": "/legacy/source-bucket/ozone-test-2856132575/multipartKey1-c1a39b3e-0d67-42d8-b7d6-48a108fee3ba-110731080792015074-2"
}</msg>
<status status="PASS" starttime="20230717 19:30:26.974" endtime="20230717 19:30:48.872"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:30:48.884" level="INFO">Running command 'echo '{
    "ETag": "/legacy/source-bucket/ozone-test-2856132575/multipartKey1-c1a39b3e-0d67-42d8-b7d6-48a108fee3ba-110731080792015074-2"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:30:48.955" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:30:48.955" level="INFO">${output} = /legacy/source-bucket/ozone-test-2856132575/multipartKey1-c1a39b3e-0d67-42d8-b7d6-48a108fee3ba-110731080792015074-2</msg>
<status status="PASS" starttime="20230717 19:30:48.875" endtime="20230717 19:30:48.956"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:30:48.958" level="INFO">/legacy/source-bucket/ozone-test-2856132575/multipartKey1-c1a39b3e-0d67-42d8-b7d6-48a108fee3ba-110731080792015074-2</msg>
<status status="PASS" starttime="20230717 19:30:48.957" endtime="20230717 19:30:48.959"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:30:48.960" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:30:48.959" endtime="20230717 19:30:48.960"/>
</kw>
<msg timestamp="20230717 19:30:48.960" level="INFO">${eTag2} = /legacy/source-bucket/ozone-test-2856132575/multipartKey1-c1a39b3e-0d67-42d8-b7d6-48a108fee3ba-110731080792015074-2</msg>
<status status="PASS" starttime="20230717 19:30:48.874" endtime="20230717 19:30:48.960"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:30:48.961" endtime="20230717 19:30:48.962"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=${eTag2},PartNumber=2}]'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:30:48.972" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id c1a39b3e-0d67-42d8-b7d6-48a108fee3ba-110731080792015074 --bucket link --key ozone-test-2856132575/multipartKey1 --multipart-upload 'Parts=[{ETag=/legacy/source-bucket/ozone-test-2856132575/multipartKey1-c1a39b3e-0d67-42d8-b7d6-48a108fee3ba-110731080792015074-1,PartNumber=1},{ETag=/legacy/source-bucket/ozone-test-2856132575/multipartKey1-c1a39b3e-0d67-42d8-b7d6-48a108fee3ba-110731080792015074-2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:30:50.341" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:30:50.342" level="INFO">${output} = {
    "Location": "link",
    "Bucket": "link",
    "Key": "ozone-test-2856132575/multipartKey1",
    "ETag": "235e19ee1db35441c8011b94d80c739d61478fbb67b0ec3dfa350d58ac93a7a3"
}</msg>
<status status="PASS" starttime="20230717 19:30:48.967" endtime="20230717 19:30:50.342"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:30:50.343" level="INFO">{
    "Location": "link",
    "Bucket": "link",
    "Key": "ozone-test-2856132575/multipartKey1",
    "ETag": "235e19ee1db35441c8011b94d80c739d61478fbb67b0ec3dfa350d58ac93a7a3"
}</msg>
<status status="PASS" starttime="20230717 19:30:50.342" endtime="20230717 19:30:50.343"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:30:50.344" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:30:50.343" endtime="20230717 19:30:50.344"/>
</kw>
<status status="PASS" starttime="20230717 19:30:48.966" endtime="20230717 19:30:50.344"/>
</kw>
<msg timestamp="20230717 19:30:50.344" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:30:48.965" endtime="20230717 19:30:50.345"/>
</kw>
<msg timestamp="20230717 19:30:50.345" level="INFO">${output} = {
    "Location": "link",
    "Bucket": "link",
    "Key": "ozone-test-2856132575/multipartKey1",
    "ETag": "235e19ee1db35441c8011b94d80c739d61478fbb67b0ec3dfa350d58ac93a7a3"
}</msg>
<status status="PASS" starttime="20230717 19:30:48.964" endtime="20230717 19:30:50.345"/>
</kw>
<msg timestamp="20230717 19:30:50.345" level="INFO">${result} = {
    "Location": "link",
    "Bucket": "link",
    "Key": "ozone-test-2856132575/multipartKey1",
    "ETag": "235e19ee1db35441c8011b94d80c739d61478fbb67b0ec3dfa350d58ac93a7a3"
}</msg>
<status status="PASS" starttime="20230717 19:30:48.962" endtime="20230717 19:30:50.345"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:30:50.345" endtime="20230717 19:30:50.348"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:30:50.349" endtime="20230717 19:30:50.350"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:30:50.350" endtime="20230717 19:30:50.351"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 /tmp/${PREFIX}-multipartKey1.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:30:50.360" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key ozone-test-2856132575/multipartKey1 /tmp/ozone-test-2856132575-multipartKey1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:30:52.450" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:30:52.450" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:30:50 GMT",
    "ContentLength": 5242886,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Ex...</msg>
<status status="PASS" starttime="20230717 19:30:50.355" endtime="20230717 19:30:52.450"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:30:52.453" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:30:50 GMT",
    "ContentLength": 5242886,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Mon, 17 Jul 2023 19:30:51 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230717 19:30:52.451" endtime="20230717 19:30:52.453"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:30:52.455" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:30:52.454" endtime="20230717 19:30:52.455"/>
</kw>
<status status="PASS" starttime="20230717 19:30:50.354" endtime="20230717 19:30:52.455"/>
</kw>
<msg timestamp="20230717 19:30:52.456" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:30:50.353" endtime="20230717 19:30:52.456"/>
</kw>
<msg timestamp="20230717 19:30:52.456" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:30:50 GMT",
    "ContentLength": 5242886,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Ex...</msg>
<status status="PASS" starttime="20230717 19:30:50.353" endtime="20230717 19:30:52.456"/>
</kw>
<msg timestamp="20230717 19:30:52.457" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:30:50 GMT",
    "ContentLength": 5242886,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Ex...</msg>
<status status="PASS" starttime="20230717 19:30:50.351" endtime="20230717 19:30:52.457"/>
</kw>
<kw name="Execute" library="os">
<arg>cat /tmp/part1 /tmp/part2 &gt; /tmp/${PREFIX}-multipartKey1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:30:52.466" level="INFO">Running command 'cat /tmp/part1 /tmp/part2 &gt; /tmp/ozone-test-2856132575-multipartKey1'.</msg>
<msg timestamp="20230717 19:30:52.480" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:30:52.480" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:30:52.461" endtime="20230717 19:30:52.480"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:30:52.488" level="INFO"/>
<status status="PASS" starttime="20230717 19:30:52.481" endtime="20230717 19:30:52.488"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:30:52.489" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:30:52.489" endtime="20230717 19:30:52.490"/>
</kw>
<status status="PASS" starttime="20230717 19:30:52.460" endtime="20230717 19:30:52.491"/>
</kw>
<msg timestamp="20230717 19:30:52.494" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:30:52.458" endtime="20230717 19:30:52.494"/>
</kw>
<status status="PASS" starttime="20230717 19:30:52.457" endtime="20230717 19:30:52.495"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/${PREFIX}-multipartKey1</arg>
<arg>/tmp/${PREFIX}-multipartKey1.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:30:52.529" level="INFO">Running command 'md5sum /tmp/ozone-test-2856132575-multipartKey1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:30:52.611" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:30:52.612" level="INFO">${output} = af7f0a07b3d57f908630e2a15cb26269</msg>
<status status="PASS" starttime="20230717 19:30:52.501" endtime="20230717 19:30:52.612"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:30:52.614" level="INFO">af7f0a07b3d57f908630e2a15cb26269</msg>
<status status="PASS" starttime="20230717 19:30:52.613" endtime="20230717 19:30:52.614"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:30:52.621" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:30:52.616" endtime="20230717 19:30:52.627"/>
</kw>
<status status="PASS" starttime="20230717 19:30:52.498" endtime="20230717 19:30:52.628"/>
</kw>
<msg timestamp="20230717 19:30:52.628" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:30:52.497" endtime="20230717 19:30:52.628"/>
</kw>
<msg timestamp="20230717 19:30:52.628" level="INFO">${checksumbefore} = af7f0a07b3d57f908630e2a15cb26269</msg>
<status status="PASS" starttime="20230717 19:30:52.496" endtime="20230717 19:30:52.632"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:30:52.653" level="INFO">Running command 'md5sum /tmp/ozone-test-2856132575-multipartKey1.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:30:52.679" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:30:52.679" level="INFO">${output} = af7f0a07b3d57f908630e2a15cb26269</msg>
<status status="PASS" starttime="20230717 19:30:52.646" endtime="20230717 19:30:52.679"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:30:52.681" level="INFO">af7f0a07b3d57f908630e2a15cb26269</msg>
<status status="PASS" starttime="20230717 19:30:52.680" endtime="20230717 19:30:52.681"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:30:52.685" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:30:52.684" endtime="20230717 19:30:52.685"/>
</kw>
<status status="PASS" starttime="20230717 19:30:52.644" endtime="20230717 19:30:52.685"/>
</kw>
<msg timestamp="20230717 19:30:52.686" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:30:52.636" endtime="20230717 19:30:52.688"/>
</kw>
<msg timestamp="20230717 19:30:52.689" level="INFO">${checksumafter} = af7f0a07b3d57f908630e2a15cb26269</msg>
<status status="PASS" starttime="20230717 19:30:52.632" endtime="20230717 19:30:52.689"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230717 19:30:52.689" endtime="20230717 19:30:52.690"/>
</kw>
<status status="PASS" starttime="20230717 19:30:52.495" endtime="20230717 19:30:52.690"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:30:03.359" endtime="20230717 19:30:52.691"/>
</test>
<test id="s1-s9-s7-t4" name="Test Multipart Upload Complete Entity too small" line="118">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230717 19:30:52.697" level="INFO">${randStr} = 5670511221</msg>
<status status="PASS" starttime="20230717 19:30:52.696" endtime="20230717 19:30:52.697"/>
</kw>
<msg timestamp="20230717 19:30:52.697" level="INFO">${random} = ozone-test-5670511221</msg>
<status status="PASS" starttime="20230717 19:30:52.695" endtime="20230717 19:30:52.697"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230717 19:30:52.698" level="INFO">${PREFIX} = ozone-test-5670511221</msg>
<status status="PASS" starttime="20230717 19:30:52.698" endtime="20230717 19:30:52.698"/>
</kw>
<status status="PASS" starttime="20230717 19:30:52.694" endtime="20230717 19:30:52.699"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey2</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:30:52.707" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket link --key ozone-test-5670511221/multipartKey2 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:30:54.156" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:30:54.156" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "ozone-test-5670511221/multipartKey2",
    "UploadId": "4769143d-3ee1-44fc-a423-27553fbc16c4-110731084036571365"
}</msg>
<status status="PASS" starttime="20230717 19:30:52.702" endtime="20230717 19:30:54.156"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:30:54.160" level="INFO">{
    "Bucket": "link",
    "Key": "ozone-test-5670511221/multipartKey2",
    "UploadId": "4769143d-3ee1-44fc-a423-27553fbc16c4-110731084036571365"
}</msg>
<status status="PASS" starttime="20230717 19:30:54.157" endtime="20230717 19:30:54.160"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:30:54.162" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:30:54.161" endtime="20230717 19:30:54.162"/>
</kw>
<status status="PASS" starttime="20230717 19:30:52.701" endtime="20230717 19:30:54.163"/>
</kw>
<msg timestamp="20230717 19:30:54.163" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:30:52.701" endtime="20230717 19:30:54.163"/>
</kw>
<msg timestamp="20230717 19:30:54.163" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "ozone-test-5670511221/multipartKey2",
    "UploadId": "4769143d-3ee1-44fc-a423-27553fbc16c4-110731084036571365"
}</msg>
<status status="PASS" starttime="20230717 19:30:52.700" endtime="20230717 19:30:54.164"/>
</kw>
<msg timestamp="20230717 19:30:54.164" level="INFO">${result} = {
    "Bucket": "link",
    "Key": "ozone-test-5670511221/multipartKey2",
    "UploadId": "4769143d-3ee1-44fc-a423-27553fbc16c4-110731084036571365"
}</msg>
<status status="PASS" starttime="20230717 19:30:52.699" endtime="20230717 19:30:54.164"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:30:54.171" level="INFO">Running command 'echo '{
    "Bucket": "link",
    "Key": "ozone-test-5670511221/multipartKey2",
    "UploadId": "4769143d-3ee1-44fc-a423-27553fbc16c4-110731084036571365"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:30:54.245" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:30:54.245" level="INFO">${output} = 4769143d-3ee1-44fc-a423-27553fbc16c4-110731084036571365</msg>
<status status="PASS" starttime="20230717 19:30:54.166" endtime="20230717 19:30:54.245"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:30:54.249" level="INFO">4769143d-3ee1-44fc-a423-27553fbc16c4-110731084036571365</msg>
<status status="PASS" starttime="20230717 19:30:54.246" endtime="20230717 19:30:54.249"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:30:54.252" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:30:54.249" endtime="20230717 19:30:54.252"/>
</kw>
<msg timestamp="20230717 19:30:54.252" level="INFO">${uploadID} = 4769143d-3ee1-44fc-a423-27553fbc16c4-110731084036571365</msg>
<status status="PASS" starttime="20230717 19:30:54.165" endtime="20230717 19:30:54.252"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:30:54.253" endtime="20230717 19:30:54.254"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:30:54.254" endtime="20230717 19:30:54.255"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:30:54.255" endtime="20230717 19:30:54.255"/>
</kw>
<kw name="Execute" library="os">
<arg>echo "Part1" &gt; /tmp/part1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:30:54.265" level="INFO">Running command 'echo "Part1" &gt; /tmp/part1'.</msg>
<msg timestamp="20230717 19:30:54.272" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:30:54.272" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:30:54.257" endtime="20230717 19:30:54.274"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:30:54.277" level="INFO"/>
<status status="PASS" starttime="20230717 19:30:54.276" endtime="20230717 19:30:54.277"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:30:54.278" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:30:54.277" endtime="20230717 19:30:54.279"/>
</kw>
<status status="PASS" starttime="20230717 19:30:54.257" endtime="20230717 19:30:54.279"/>
</kw>
<msg timestamp="20230717 19:30:54.279" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:30:54.256" endtime="20230717 19:30:54.279"/>
</kw>
<status status="PASS" starttime="20230717 19:30:54.256" endtime="20230717 19:30:54.279"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey2 --part-number 1 --body /tmp/part1 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:30:54.289" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket link --key ozone-test-5670511221/multipartKey2 --part-number 1 --body /tmp/part1 --upload-id 4769143d-3ee1-44fc-a423-27553fbc16c4-110731084036571365 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:31:16.057" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:31:16.057" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/ozone-test-5670511221/multipartKey2-4769143d-3ee1-44fc-a423-27553fbc16c4-110731084036571365-1"
}</msg>
<status status="PASS" starttime="20230717 19:30:54.285" endtime="20230717 19:31:16.057"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:31:16.061" level="INFO">{
    "ETag": "/legacy/source-bucket/ozone-test-5670511221/multipartKey2-4769143d-3ee1-44fc-a423-27553fbc16c4-110731084036571365-1"
}</msg>
<status status="PASS" starttime="20230717 19:31:16.059" endtime="20230717 19:31:16.061"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:31:16.063" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:31:16.062" endtime="20230717 19:31:16.063"/>
</kw>
<status status="PASS" starttime="20230717 19:30:54.283" endtime="20230717 19:31:16.065"/>
</kw>
<msg timestamp="20230717 19:31:16.065" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:30:54.282" endtime="20230717 19:31:16.068"/>
</kw>
<msg timestamp="20230717 19:31:16.068" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/ozone-test-5670511221/multipartKey2-4769143d-3ee1-44fc-a423-27553fbc16c4-110731084036571365-1"
}</msg>
<status status="PASS" starttime="20230717 19:30:54.281" endtime="20230717 19:31:16.068"/>
</kw>
<msg timestamp="20230717 19:31:16.069" level="INFO">${result} = {
    "ETag": "/legacy/source-bucket/ozone-test-5670511221/multipartKey2-4769143d-3ee1-44fc-a423-27553fbc16c4-110731084036571365-1"
}</msg>
<status status="PASS" starttime="20230717 19:30:54.280" endtime="20230717 19:31:16.069"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:31:16.077" level="INFO">Running command 'echo '{
    "ETag": "/legacy/source-bucket/ozone-test-5670511221/multipartKey2-4769143d-3ee1-44fc-a423-27553fbc16c4-110731084036571365-1"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:31:16.144" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:31:16.144" level="INFO">${output} = /legacy/source-bucket/ozone-test-5670511221/multipartKey2-4769143d-3ee1-44fc-a423-27553fbc16c4-110731084036571365-1</msg>
<status status="PASS" starttime="20230717 19:31:16.071" endtime="20230717 19:31:16.145"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:31:16.147" level="INFO">/legacy/source-bucket/ozone-test-5670511221/multipartKey2-4769143d-3ee1-44fc-a423-27553fbc16c4-110731084036571365-1</msg>
<status status="PASS" starttime="20230717 19:31:16.146" endtime="20230717 19:31:16.147"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:31:16.148" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:31:16.147" endtime="20230717 19:31:16.149"/>
</kw>
<msg timestamp="20230717 19:31:16.149" level="INFO">${eTag1} = /legacy/source-bucket/ozone-test-5670511221/multipartKey2-4769143d-3ee1-44fc-a423-27553fbc16c4-110731084036571365-1</msg>
<status status="PASS" starttime="20230717 19:31:16.069" endtime="20230717 19:31:16.149"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:31:16.150" endtime="20230717 19:31:16.150"/>
</kw>
<kw name="Execute" library="os">
<arg>echo "Part2" &gt; /tmp/part2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:31:16.158" level="INFO">Running command 'echo "Part2" &gt; /tmp/part2'.</msg>
<msg timestamp="20230717 19:31:16.170" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:31:16.171" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:31:16.153" endtime="20230717 19:31:16.171"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:31:16.173" level="INFO"/>
<status status="PASS" starttime="20230717 19:31:16.172" endtime="20230717 19:31:16.176"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:31:16.177" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:31:16.176" endtime="20230717 19:31:16.177"/>
</kw>
<status status="PASS" starttime="20230717 19:31:16.152" endtime="20230717 19:31:16.178"/>
</kw>
<msg timestamp="20230717 19:31:16.178" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:31:16.152" endtime="20230717 19:31:16.178"/>
</kw>
<status status="PASS" starttime="20230717 19:31:16.151" endtime="20230717 19:31:16.179"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey2 --part-number 2 --body /tmp/part2 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:31:16.194" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket link --key ozone-test-5670511221/multipartKey2 --part-number 2 --body /tmp/part2 --upload-id 4769143d-3ee1-44fc-a423-27553fbc16c4-110731084036571365 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:31:37.745" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:31:37.745" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/ozone-test-5670511221/multipartKey2-4769143d-3ee1-44fc-a423-27553fbc16c4-110731084036571365-2"
}</msg>
<status status="PASS" starttime="20230717 19:31:16.186" endtime="20230717 19:31:37.745"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:31:37.748" level="INFO">{
    "ETag": "/legacy/source-bucket/ozone-test-5670511221/multipartKey2-4769143d-3ee1-44fc-a423-27553fbc16c4-110731084036571365-2"
}</msg>
<status status="PASS" starttime="20230717 19:31:37.746" endtime="20230717 19:31:37.748"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:31:37.749" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:31:37.748" endtime="20230717 19:31:37.749"/>
</kw>
<status status="PASS" starttime="20230717 19:31:16.184" endtime="20230717 19:31:37.750"/>
</kw>
<msg timestamp="20230717 19:31:37.750" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:31:16.183" endtime="20230717 19:31:37.750"/>
</kw>
<msg timestamp="20230717 19:31:37.750" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/ozone-test-5670511221/multipartKey2-4769143d-3ee1-44fc-a423-27553fbc16c4-110731084036571365-2"
}</msg>
<status status="PASS" starttime="20230717 19:31:16.181" endtime="20230717 19:31:37.751"/>
</kw>
<msg timestamp="20230717 19:31:37.751" level="INFO">${result} = {
    "ETag": "/legacy/source-bucket/ozone-test-5670511221/multipartKey2-4769143d-3ee1-44fc-a423-27553fbc16c4-110731084036571365-2"
}</msg>
<status status="PASS" starttime="20230717 19:31:16.180" endtime="20230717 19:31:37.752"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:31:37.758" level="INFO">Running command 'echo '{
    "ETag": "/legacy/source-bucket/ozone-test-5670511221/multipartKey2-4769143d-3ee1-44fc-a423-27553fbc16c4-110731084036571365-2"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:31:37.827" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:31:37.827" level="INFO">${output} = /legacy/source-bucket/ozone-test-5670511221/multipartKey2-4769143d-3ee1-44fc-a423-27553fbc16c4-110731084036571365-2</msg>
<status status="PASS" starttime="20230717 19:31:37.754" endtime="20230717 19:31:37.828"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:31:37.831" level="INFO">/legacy/source-bucket/ozone-test-5670511221/multipartKey2-4769143d-3ee1-44fc-a423-27553fbc16c4-110731084036571365-2</msg>
<status status="PASS" starttime="20230717 19:31:37.829" endtime="20230717 19:31:37.831"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:31:37.832" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:31:37.832" endtime="20230717 19:31:37.833"/>
</kw>
<msg timestamp="20230717 19:31:37.833" level="INFO">${eTag2} = /legacy/source-bucket/ozone-test-5670511221/multipartKey2-4769143d-3ee1-44fc-a423-27553fbc16c4-110731084036571365-2</msg>
<status status="PASS" starttime="20230717 19:31:37.752" endtime="20230717 19:31:37.833"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:31:37.834" endtime="20230717 19:31:37.834"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey2 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=${eTag2},PartNumber=2}]'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:31:37.844" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 4769143d-3ee1-44fc-a423-27553fbc16c4-110731084036571365 --bucket link --key ozone-test-5670511221/multipartKey2 --multipart-upload 'Parts=[{ETag=/legacy/source-bucket/ozone-test-5670511221/multipartKey2-4769143d-3ee1-44fc-a423-27553fbc16c4-110731084036571365-1,PartNumber=1},{ETag=/legacy/source-bucket/ozone-test-5670511221/multipartKey2-4769143d-3ee1-44fc-a423-27553fbc16c4-110731084036571365-2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:31:39.185" level="INFO">${rc} = 255</msg>
<msg timestamp="20230717 19:31:39.185" level="INFO">${output} = 
An error occurred (EntityTooSmall) when calling the CompleteMultipartUpload operation: Your proposed upload is smaller than the minimum allowed object size. Each part must be at least 5 MB in size, e...</msg>
<status status="PASS" starttime="20230717 19:31:37.838" endtime="20230717 19:31:39.185"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:31:39.188" level="INFO">
An error occurred (EntityTooSmall) when calling the CompleteMultipartUpload operation: Your proposed upload is smaller than the minimum allowed object size. Each part must be at least 5 MB in size, except the last part.</msg>
<status status="PASS" starttime="20230717 19:31:39.186" endtime="20230717 19:31:39.188"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:31:39.189" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:31:39.188" endtime="20230717 19:31:39.190"/>
</kw>
<msg timestamp="20230717 19:31:39.190" level="INFO">${output} = 
An error occurred (EntityTooSmall) when calling the CompleteMultipartUpload operation: Your proposed upload is smaller than the minimum allowed object size. Each part must be at least 5 MB in size, e...</msg>
<status status="PASS" starttime="20230717 19:31:37.837" endtime="20230717 19:31:39.190"/>
</kw>
<msg timestamp="20230717 19:31:39.191" level="INFO">${result} = 
An error occurred (EntityTooSmall) when calling the CompleteMultipartUpload operation: Your proposed upload is smaller than the minimum allowed object size. Each part must be at least 5 MB in size, e...</msg>
<status status="PASS" starttime="20230717 19:31:37.835" endtime="20230717 19:31:39.191"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>EntityTooSmall</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:31:39.191" endtime="20230717 19:31:39.192"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:30:52.692" endtime="20230717 19:31:39.192"/>
</test>
<test id="s1-s9-s7-t5" name="Test Multipart Upload Complete Invalid part errors and complete mpu with few parts" line="141">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230717 19:31:39.200" level="INFO">${randStr} = 7200441924</msg>
<status status="PASS" starttime="20230717 19:31:39.199" endtime="20230717 19:31:39.200"/>
</kw>
<msg timestamp="20230717 19:31:39.200" level="INFO">${random} = ozone-test-7200441924</msg>
<status status="PASS" starttime="20230717 19:31:39.197" endtime="20230717 19:31:39.200"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230717 19:31:39.201" level="INFO">${PREFIX} = ozone-test-7200441924</msg>
<status status="PASS" starttime="20230717 19:31:39.201" endtime="20230717 19:31:39.202"/>
</kw>
<status status="PASS" starttime="20230717 19:31:39.196" endtime="20230717 19:31:39.202"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey3</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:31:39.210" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket link --key ozone-test-7200441924/multipartKey3 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:31:40.574" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:31:40.574" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "ozone-test-7200441924/multipartKey3",
    "UploadId": "8093831d-7b19-4a3e-ae50-ba93a0a164c9-110731087077245160"
}</msg>
<status status="PASS" starttime="20230717 19:31:39.205" endtime="20230717 19:31:40.574"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:31:40.580" level="INFO">{
    "Bucket": "link",
    "Key": "ozone-test-7200441924/multipartKey3",
    "UploadId": "8093831d-7b19-4a3e-ae50-ba93a0a164c9-110731087077245160"
}</msg>
<status status="PASS" starttime="20230717 19:31:40.576" endtime="20230717 19:31:40.580"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:31:40.582" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:31:40.581" endtime="20230717 19:31:40.583"/>
</kw>
<status status="PASS" starttime="20230717 19:31:39.204" endtime="20230717 19:31:40.583"/>
</kw>
<msg timestamp="20230717 19:31:40.583" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:31:39.204" endtime="20230717 19:31:40.583"/>
</kw>
<msg timestamp="20230717 19:31:40.584" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "ozone-test-7200441924/multipartKey3",
    "UploadId": "8093831d-7b19-4a3e-ae50-ba93a0a164c9-110731087077245160"
}</msg>
<status status="PASS" starttime="20230717 19:31:39.203" endtime="20230717 19:31:40.584"/>
</kw>
<msg timestamp="20230717 19:31:40.584" level="INFO">${result} = {
    "Bucket": "link",
    "Key": "ozone-test-7200441924/multipartKey3",
    "UploadId": "8093831d-7b19-4a3e-ae50-ba93a0a164c9-110731087077245160"
}</msg>
<status status="PASS" starttime="20230717 19:31:39.202" endtime="20230717 19:31:40.584"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:31:40.590" level="INFO">Running command 'echo '{
    "Bucket": "link",
    "Key": "ozone-test-7200441924/multipartKey3",
    "UploadId": "8093831d-7b19-4a3e-ae50-ba93a0a164c9-110731087077245160"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:31:40.657" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:31:40.657" level="INFO">${output} = 8093831d-7b19-4a3e-ae50-ba93a0a164c9-110731087077245160</msg>
<status status="PASS" starttime="20230717 19:31:40.586" endtime="20230717 19:31:40.657"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:31:40.661" level="INFO">8093831d-7b19-4a3e-ae50-ba93a0a164c9-110731087077245160</msg>
<status status="PASS" starttime="20230717 19:31:40.658" endtime="20230717 19:31:40.661"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:31:40.662" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:31:40.661" endtime="20230717 19:31:40.662"/>
</kw>
<msg timestamp="20230717 19:31:40.665" level="INFO">${uploadID} = 8093831d-7b19-4a3e-ae50-ba93a0a164c9-110731087077245160</msg>
<status status="PASS" starttime="20230717 19:31:40.584" endtime="20230717 19:31:40.665"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:31:40.666" endtime="20230717 19:31:40.666"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:31:40.667" endtime="20230717 19:31:40.668"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:31:40.668" endtime="20230717 19:31:40.674"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}]'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:31:40.689" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 8093831d-7b19-4a3e-ae50-ba93a0a164c9-110731087077245160 --bucket link --key ozone-test-7200441924/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:31:42.295" level="INFO">${rc} = 255</msg>
<msg timestamp="20230717 19:31:42.295" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20230717 19:31:40.680" endtime="20230717 19:31:42.295"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:31:42.297" level="INFO">
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified entity tag might not have matched the part's entity tag.</msg>
<status status="PASS" starttime="20230717 19:31:42.296" endtime="20230717 19:31:42.297"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:31:42.298" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:31:42.297" endtime="20230717 19:31:42.298"/>
</kw>
<msg timestamp="20230717 19:31:42.299" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20230717 19:31:40.678" endtime="20230717 19:31:42.299"/>
</kw>
<msg timestamp="20230717 19:31:42.303" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20230717 19:31:40.676" endtime="20230717 19:31:42.303"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPart</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:31:42.303" endtime="20230717 19:31:42.304"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=2},{ETag=etag2,PartNumber=1}]'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:31:42.312" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 8093831d-7b19-4a3e-ae50-ba93a0a164c9-110731087077245160 --bucket link --key ozone-test-7200441924/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=2},{ETag=etag2,PartNumber=1}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:31:43.837" level="INFO">${rc} = 255</msg>
<msg timestamp="20230717 19:31:43.838" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20230717 19:31:42.308" endtime="20230717 19:31:43.838"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:31:43.841" level="INFO">
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified entity tag might not have matched the part's entity tag.</msg>
<status status="PASS" starttime="20230717 19:31:43.838" endtime="20230717 19:31:43.841"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:31:43.844" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:31:43.841" endtime="20230717 19:31:43.845"/>
</kw>
<msg timestamp="20230717 19:31:43.846" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20230717 19:31:42.306" endtime="20230717 19:31:43.846"/>
</kw>
<msg timestamp="20230717 19:31:43.846" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20230717 19:31:42.305" endtime="20230717 19:31:43.846"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPart</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:31:43.847" endtime="20230717 19:31:43.847"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>5</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>5</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:31:43.863" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:31:43.902" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:31:43.903" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:31:43.857" endtime="20230717 19:31:43.903"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:31:43.906" level="INFO"/>
<status status="PASS" starttime="20230717 19:31:43.904" endtime="20230717 19:31:43.907"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:31:43.909" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:31:43.907" endtime="20230717 19:31:43.909"/>
</kw>
<status status="PASS" starttime="20230717 19:31:43.854" endtime="20230717 19:31:43.911"/>
</kw>
<msg timestamp="20230717 19:31:43.911" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:31:43.852" endtime="20230717 19:31:43.913"/>
</kw>
<status status="PASS" starttime="20230717 19:31:43.851" endtime="20230717 19:31:43.913"/>
</kw>
<status status="PASS" starttime="20230717 19:31:43.849" endtime="20230717 19:31:43.913"/>
</kw>
<status status="PASS" starttime="20230717 19:31:43.848" endtime="20230717 19:31:43.914"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --part-number 1 --body /tmp/part1 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:31:43.929" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket link --key ozone-test-7200441924/multipartKey3 --part-number 1 --body /tmp/part1 --upload-id 8093831d-7b19-4a3e-ae50-ba93a0a164c9-110731087077245160 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:32:05.788" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:32:05.789" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/ozone-test-7200441924/multipartKey3-8093831d-7b19-4a3e-ae50-ba93a0a164c9-110731087077245160-1"
}</msg>
<status status="PASS" starttime="20230717 19:31:43.923" endtime="20230717 19:32:05.790"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:32:05.795" level="INFO">{
    "ETag": "/legacy/source-bucket/ozone-test-7200441924/multipartKey3-8093831d-7b19-4a3e-ae50-ba93a0a164c9-110731087077245160-1"
}</msg>
<status status="PASS" starttime="20230717 19:32:05.793" endtime="20230717 19:32:05.795"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:32:05.799" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:32:05.797" endtime="20230717 19:32:05.799"/>
</kw>
<status status="PASS" starttime="20230717 19:31:43.921" endtime="20230717 19:32:05.799"/>
</kw>
<msg timestamp="20230717 19:32:05.802" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:31:43.921" endtime="20230717 19:32:05.802"/>
</kw>
<msg timestamp="20230717 19:32:05.804" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/ozone-test-7200441924/multipartKey3-8093831d-7b19-4a3e-ae50-ba93a0a164c9-110731087077245160-1"
}</msg>
<status status="PASS" starttime="20230717 19:31:43.919" endtime="20230717 19:32:05.804"/>
</kw>
<msg timestamp="20230717 19:32:05.804" level="INFO">${result} = {
    "ETag": "/legacy/source-bucket/ozone-test-7200441924/multipartKey3-8093831d-7b19-4a3e-ae50-ba93a0a164c9-110731087077245160-1"
}</msg>
<status status="PASS" starttime="20230717 19:31:43.914" endtime="20230717 19:32:05.805"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:32:05.818" level="INFO">Running command 'echo '{
    "ETag": "/legacy/source-bucket/ozone-test-7200441924/multipartKey3-8093831d-7b19-4a3e-ae50-ba93a0a164c9-110731087077245160-1"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:32:05.930" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:32:05.930" level="INFO">${output} = /legacy/source-bucket/ozone-test-7200441924/multipartKey3-8093831d-7b19-4a3e-ae50-ba93a0a164c9-110731087077245160-1</msg>
<status status="PASS" starttime="20230717 19:32:05.807" endtime="20230717 19:32:05.930"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:32:05.936" level="INFO">/legacy/source-bucket/ozone-test-7200441924/multipartKey3-8093831d-7b19-4a3e-ae50-ba93a0a164c9-110731087077245160-1</msg>
<status status="PASS" starttime="20230717 19:32:05.934" endtime="20230717 19:32:05.936"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:32:05.939" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:32:05.938" endtime="20230717 19:32:05.940"/>
</kw>
<msg timestamp="20230717 19:32:05.940" level="INFO">${eTag1} = /legacy/source-bucket/ozone-test-7200441924/multipartKey3-8093831d-7b19-4a3e-ae50-ba93a0a164c9-110731087077245160-1</msg>
<status status="PASS" starttime="20230717 19:32:05.805" endtime="20230717 19:32:05.940"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:32:05.940" endtime="20230717 19:32:05.942"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --part-number 2 --body /tmp/part1 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:32:05.963" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket link --key ozone-test-7200441924/multipartKey3 --part-number 2 --body /tmp/part1 --upload-id 8093831d-7b19-4a3e-ae50-ba93a0a164c9-110731087077245160 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:32:28.221" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:32:28.221" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/ozone-test-7200441924/multipartKey3-8093831d-7b19-4a3e-ae50-ba93a0a164c9-110731087077245160-2"
}</msg>
<status status="PASS" starttime="20230717 19:32:05.952" endtime="20230717 19:32:28.221"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:32:28.223" level="INFO">{
    "ETag": "/legacy/source-bucket/ozone-test-7200441924/multipartKey3-8093831d-7b19-4a3e-ae50-ba93a0a164c9-110731087077245160-2"
}</msg>
<status status="PASS" starttime="20230717 19:32:28.222" endtime="20230717 19:32:28.225"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:32:28.227" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:32:28.226" endtime="20230717 19:32:28.227"/>
</kw>
<status status="PASS" starttime="20230717 19:32:05.951" endtime="20230717 19:32:28.228"/>
</kw>
<msg timestamp="20230717 19:32:28.228" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:32:05.948" endtime="20230717 19:32:28.229"/>
</kw>
<msg timestamp="20230717 19:32:28.233" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/ozone-test-7200441924/multipartKey3-8093831d-7b19-4a3e-ae50-ba93a0a164c9-110731087077245160-2"
}</msg>
<status status="PASS" starttime="20230717 19:32:05.945" endtime="20230717 19:32:28.233"/>
</kw>
<msg timestamp="20230717 19:32:28.235" level="INFO">${result} = {
    "ETag": "/legacy/source-bucket/ozone-test-7200441924/multipartKey3-8093831d-7b19-4a3e-ae50-ba93a0a164c9-110731087077245160-2"
}</msg>
<status status="PASS" starttime="20230717 19:32:05.942" endtime="20230717 19:32:28.235"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:32:28.247" level="INFO">Running command 'echo '{
    "ETag": "/legacy/source-bucket/ozone-test-7200441924/multipartKey3-8093831d-7b19-4a3e-ae50-ba93a0a164c9-110731087077245160-2"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:32:28.345" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:32:28.345" level="INFO">${output} = /legacy/source-bucket/ozone-test-7200441924/multipartKey3-8093831d-7b19-4a3e-ae50-ba93a0a164c9-110731087077245160-2</msg>
<status status="PASS" starttime="20230717 19:32:28.239" endtime="20230717 19:32:28.345"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:32:28.353" level="INFO">/legacy/source-bucket/ozone-test-7200441924/multipartKey3-8093831d-7b19-4a3e-ae50-ba93a0a164c9-110731087077245160-2</msg>
<status status="PASS" starttime="20230717 19:32:28.349" endtime="20230717 19:32:28.353"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:32:28.356" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:32:28.353" endtime="20230717 19:32:28.356"/>
</kw>
<msg timestamp="20230717 19:32:28.356" level="INFO">${eTag2} = /legacy/source-bucket/ozone-test-7200441924/multipartKey3-8093831d-7b19-4a3e-ae50-ba93a0a164c9-110731087077245160-2</msg>
<status status="PASS" starttime="20230717 19:32:28.235" endtime="20230717 19:32:28.356"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:32:28.357" endtime="20230717 19:32:28.358"/>
</kw>
<kw name="Execute" library="os">
<arg>echo "Part3" &gt; /tmp/part3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:32:28.368" level="INFO">Running command 'echo "Part3" &gt; /tmp/part3'.</msg>
<msg timestamp="20230717 19:32:28.372" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:32:28.373" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:32:28.360" endtime="20230717 19:32:28.373"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:32:28.375" level="INFO"/>
<status status="PASS" starttime="20230717 19:32:28.374" endtime="20230717 19:32:28.375"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:32:28.377" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:32:28.375" endtime="20230717 19:32:28.377"/>
</kw>
<status status="PASS" starttime="20230717 19:32:28.359" endtime="20230717 19:32:28.377"/>
</kw>
<msg timestamp="20230717 19:32:28.377" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:32:28.359" endtime="20230717 19:32:28.378"/>
</kw>
<status status="PASS" starttime="20230717 19:32:28.358" endtime="20230717 19:32:28.378"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --part-number 3 --body /tmp/part3 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:32:28.386" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket link --key ozone-test-7200441924/multipartKey3 --part-number 3 --body /tmp/part3 --upload-id 8093831d-7b19-4a3e-ae50-ba93a0a164c9-110731087077245160 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:32:50.102" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:32:50.102" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/ozone-test-7200441924/multipartKey3-8093831d-7b19-4a3e-ae50-ba93a0a164c9-110731087077245160-3"
}</msg>
<status status="PASS" starttime="20230717 19:32:28.382" endtime="20230717 19:32:50.103"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:32:50.104" level="INFO">{
    "ETag": "/legacy/source-bucket/ozone-test-7200441924/multipartKey3-8093831d-7b19-4a3e-ae50-ba93a0a164c9-110731087077245160-3"
}</msg>
<status status="PASS" starttime="20230717 19:32:50.103" endtime="20230717 19:32:50.104"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:32:50.105" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:32:50.105" endtime="20230717 19:32:50.106"/>
</kw>
<status status="PASS" starttime="20230717 19:32:28.381" endtime="20230717 19:32:50.108"/>
</kw>
<msg timestamp="20230717 19:32:50.108" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:32:28.380" endtime="20230717 19:32:50.108"/>
</kw>
<msg timestamp="20230717 19:32:50.108" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/ozone-test-7200441924/multipartKey3-8093831d-7b19-4a3e-ae50-ba93a0a164c9-110731087077245160-3"
}</msg>
<status status="PASS" starttime="20230717 19:32:28.380" endtime="20230717 19:32:50.108"/>
</kw>
<msg timestamp="20230717 19:32:50.109" level="INFO">${result} = {
    "ETag": "/legacy/source-bucket/ozone-test-7200441924/multipartKey3-8093831d-7b19-4a3e-ae50-ba93a0a164c9-110731087077245160-3"
}</msg>
<status status="PASS" starttime="20230717 19:32:28.378" endtime="20230717 19:32:50.109"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag3}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:32:50.120" level="INFO">Running command 'echo '{
    "ETag": "/legacy/source-bucket/ozone-test-7200441924/multipartKey3-8093831d-7b19-4a3e-ae50-ba93a0a164c9-110731087077245160-3"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:32:50.217" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:32:50.217" level="INFO">${output} = /legacy/source-bucket/ozone-test-7200441924/multipartKey3-8093831d-7b19-4a3e-ae50-ba93a0a164c9-110731087077245160-3</msg>
<status status="PASS" starttime="20230717 19:32:50.114" endtime="20230717 19:32:50.218"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:32:50.223" level="INFO">/legacy/source-bucket/ozone-test-7200441924/multipartKey3-8093831d-7b19-4a3e-ae50-ba93a0a164c9-110731087077245160-3</msg>
<status status="PASS" starttime="20230717 19:32:50.220" endtime="20230717 19:32:50.224"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:32:50.226" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:32:50.224" endtime="20230717 19:32:50.226"/>
</kw>
<msg timestamp="20230717 19:32:50.228" level="INFO">${eTag3} = /legacy/source-bucket/ozone-test-7200441924/multipartKey3-8093831d-7b19-4a3e-ae50-ba93a0a164c9-110731087077245160-3</msg>
<status status="PASS" starttime="20230717 19:32:50.110" endtime="20230717 19:32:50.229"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:32:50.229" endtime="20230717 19:32:50.230"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}]'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:32:50.243" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 8093831d-7b19-4a3e-ae50-ba93a0a164c9-110731087077245160 --bucket link --key ozone-test-7200441924/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:32:51.792" level="INFO">${rc} = 255</msg>
<msg timestamp="20230717 19:32:51.792" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20230717 19:32:50.236" endtime="20230717 19:32:51.792"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:32:51.794" level="INFO">
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified entity tag might not have matched the part's entity tag.</msg>
<status status="PASS" starttime="20230717 19:32:51.793" endtime="20230717 19:32:51.794"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:32:51.799" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:32:51.798" endtime="20230717 19:32:51.799"/>
</kw>
<msg timestamp="20230717 19:32:51.800" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20230717 19:32:50.234" endtime="20230717 19:32:51.800"/>
</kw>
<msg timestamp="20230717 19:32:51.800" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20230717 19:32:50.231" endtime="20230717 19:32:51.800"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPart</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:32:51.801" endtime="20230717 19:32:51.802"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=etag2,PartNumber=2}]'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:32:51.810" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 8093831d-7b19-4a3e-ae50-ba93a0a164c9-110731087077245160 --bucket link --key ozone-test-7200441924/multipartKey3 --multipart-upload 'Parts=[{ETag=/legacy/source-bucket/ozone-test-7200441924/multipartKey3-8093831d-7b19-4a3e-ae50-ba93a0a164c9-110731087077245160-1,PartNumber=1},{ETag=etag2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:32:53.053" level="INFO">${rc} = 255</msg>
<msg timestamp="20230717 19:32:53.053" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20230717 19:32:51.805" endtime="20230717 19:32:53.054"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:32:53.059" level="INFO">
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified entity tag might not have matched the part's entity tag.</msg>
<status status="PASS" starttime="20230717 19:32:53.055" endtime="20230717 19:32:53.059"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:32:53.062" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:32:53.060" endtime="20230717 19:32:53.062"/>
</kw>
<msg timestamp="20230717 19:32:53.062" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20230717 19:32:51.804" endtime="20230717 19:32:53.063"/>
</kw>
<msg timestamp="20230717 19:32:53.063" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20230717 19:32:51.802" endtime="20230717 19:32:53.063"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPart</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:32:53.063" endtime="20230717 19:32:53.065"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=4},{ETag=etag2,PartNumber=2}]'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:32:53.077" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 8093831d-7b19-4a3e-ae50-ba93a0a164c9-110731087077245160 --bucket link --key ozone-test-7200441924/multipartKey3 --multipart-upload 'Parts=[{ETag=/legacy/source-bucket/ozone-test-7200441924/multipartKey3-8093831d-7b19-4a3e-ae50-ba93a0a164c9-110731087077245160-1,PartNumber=4},{ETag=etag2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:32:54.446" level="INFO">${rc} = 255</msg>
<msg timestamp="20230717 19:32:54.446" level="INFO">${output} = 
An error occurred (InvalidPartOrder) when calling the CompleteMultipartUpload operation: The list of parts was not in ascending order. The parts list must be specified in order by part number.</msg>
<status status="PASS" starttime="20230717 19:32:53.069" endtime="20230717 19:32:54.446"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:32:54.447" level="INFO">
An error occurred (InvalidPartOrder) when calling the CompleteMultipartUpload operation: The list of parts was not in ascending order. The parts list must be specified in order by part number.</msg>
<status status="PASS" starttime="20230717 19:32:54.446" endtime="20230717 19:32:54.447"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:32:54.448" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:32:54.448" endtime="20230717 19:32:54.448"/>
</kw>
<msg timestamp="20230717 19:32:54.449" level="INFO">${output} = 
An error occurred (InvalidPartOrder) when calling the CompleteMultipartUpload operation: The list of parts was not in ascending order. The parts list must be specified in order by part number.</msg>
<status status="PASS" starttime="20230717 19:32:53.068" endtime="20230717 19:32:54.449"/>
</kw>
<msg timestamp="20230717 19:32:54.449" level="INFO">${result} = 
An error occurred (InvalidPartOrder) when calling the CompleteMultipartUpload operation: The list of parts was not in ascending order. The parts list must be specified in order by part number.</msg>
<status status="PASS" starttime="20230717 19:32:53.065" endtime="20230717 19:32:54.449"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPartOrder</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:32:54.449" endtime="20230717 19:32:54.450"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=${eTag3},PartNumber=3}]'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:32:54.462" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 8093831d-7b19-4a3e-ae50-ba93a0a164c9-110731087077245160 --bucket link --key ozone-test-7200441924/multipartKey3 --multipart-upload 'Parts=[{ETag=/legacy/source-bucket/ozone-test-7200441924/multipartKey3-8093831d-7b19-4a3e-ae50-ba93a0a164c9-110731087077245160-1,PartNumber=1},{ETag=/legacy/source-bucket/ozone-test-7200441924/multipartKey3-8093831d-7b19-4a3e-ae50-ba93a0a164c9-110731087077245160-3,PartNumber=3}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:32:55.925" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:32:55.925" level="INFO">${output} = {
    "Location": "link",
    "Bucket": "link",
    "Key": "ozone-test-7200441924/multipartKey3",
    "ETag": "8076793d757505fb6101b098ff9d1b22b7fc63ac734cecf6dd358c67f4d621d4"
}</msg>
<status status="PASS" starttime="20230717 19:32:54.454" endtime="20230717 19:32:55.925"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:32:55.929" level="INFO">{
    "Location": "link",
    "Bucket": "link",
    "Key": "ozone-test-7200441924/multipartKey3",
    "ETag": "8076793d757505fb6101b098ff9d1b22b7fc63ac734cecf6dd358c67f4d621d4"
}</msg>
<status status="PASS" starttime="20230717 19:32:55.926" endtime="20230717 19:32:55.929"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:32:55.934" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:32:55.932" endtime="20230717 19:32:55.935"/>
</kw>
<status status="PASS" starttime="20230717 19:32:54.454" endtime="20230717 19:32:55.935"/>
</kw>
<msg timestamp="20230717 19:32:55.935" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:32:54.453" endtime="20230717 19:32:55.937"/>
</kw>
<msg timestamp="20230717 19:32:55.937" level="INFO">${output} = {
    "Location": "link",
    "Bucket": "link",
    "Key": "ozone-test-7200441924/multipartKey3",
    "ETag": "8076793d757505fb6101b098ff9d1b22b7fc63ac734cecf6dd358c67f4d621d4"
}</msg>
<status status="PASS" starttime="20230717 19:32:54.452" endtime="20230717 19:32:55.937"/>
</kw>
<msg timestamp="20230717 19:32:55.940" level="INFO">${result} = {
    "Location": "link",
    "Bucket": "link",
    "Key": "ozone-test-7200441924/multipartKey3",
    "ETag": "8076793d757505fb6101b098ff9d1b22b7fc63ac734cecf6dd358c67f4d621d4"
}</msg>
<status status="PASS" starttime="20230717 19:32:54.450" endtime="20230717 19:32:55.940"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:32:55.940" endtime="20230717 19:32:55.942"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:32:55.942" endtime="20230717 19:32:55.943"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:32:55.943" endtime="20230717 19:32:55.947"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 /tmp/${PREFIX}-multipartKey3.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:32:55.965" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key ozone-test-7200441924/multipartKey3 /tmp/ozone-test-7200441924-multipartKey3.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:32:58.611" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:32:58.611" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:32:55 GMT",
    "ContentLength": 5242886,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Ex...</msg>
<status status="PASS" starttime="20230717 19:32:55.956" endtime="20230717 19:32:58.611"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:32:58.617" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:32:55 GMT",
    "ContentLength": 5242886,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Mon, 17 Jul 2023 19:32:57 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230717 19:32:58.614" endtime="20230717 19:32:58.620"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:32:58.623" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:32:58.620" endtime="20230717 19:32:58.623"/>
</kw>
<status status="PASS" starttime="20230717 19:32:55.952" endtime="20230717 19:32:58.624"/>
</kw>
<msg timestamp="20230717 19:32:58.624" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:32:55.952" endtime="20230717 19:32:58.624"/>
</kw>
<msg timestamp="20230717 19:32:58.629" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:32:55 GMT",
    "ContentLength": 5242886,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Ex...</msg>
<status status="PASS" starttime="20230717 19:32:55.949" endtime="20230717 19:32:58.631"/>
</kw>
<msg timestamp="20230717 19:32:58.632" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:32:55 GMT",
    "ContentLength": 5242886,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Ex...</msg>
<status status="PASS" starttime="20230717 19:32:55.947" endtime="20230717 19:32:58.632"/>
</kw>
<kw name="Execute" library="os">
<arg>cat /tmp/part1 /tmp/part3 &gt; /tmp/${PREFIX}-multipartKey3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:32:58.662" level="INFO">Running command 'cat /tmp/part1 /tmp/part3 &gt; /tmp/ozone-test-7200441924-multipartKey3'.</msg>
<msg timestamp="20230717 19:32:58.702" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:32:58.702" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:32:58.647" endtime="20230717 19:32:58.702"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:32:58.713" level="INFO"/>
<status status="PASS" starttime="20230717 19:32:58.704" endtime="20230717 19:32:58.714"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:32:58.724" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:32:58.718" endtime="20230717 19:32:58.724"/>
</kw>
<status status="PASS" starttime="20230717 19:32:58.644" endtime="20230717 19:32:58.724"/>
</kw>
<msg timestamp="20230717 19:32:58.724" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:32:58.641" endtime="20230717 19:32:58.725"/>
</kw>
<status status="PASS" starttime="20230717 19:32:58.635" endtime="20230717 19:32:58.730"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/${PREFIX}-multipartKey3</arg>
<arg>/tmp/${PREFIX}-multipartKey3.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:32:58.777" level="INFO">Running command 'md5sum /tmp/ozone-test-7200441924-multipartKey3 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:32:58.841" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:32:58.843" level="INFO">${output} = 455053b9c37d966dbf5769365eedaea3</msg>
<status status="PASS" starttime="20230717 19:32:58.765" endtime="20230717 19:32:58.843"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:32:58.845" level="INFO">455053b9c37d966dbf5769365eedaea3</msg>
<status status="PASS" starttime="20230717 19:32:58.844" endtime="20230717 19:32:58.845"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:32:58.864" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:32:58.855" endtime="20230717 19:32:58.865"/>
</kw>
<status status="PASS" starttime="20230717 19:32:58.756" endtime="20230717 19:32:58.868"/>
</kw>
<msg timestamp="20230717 19:32:58.868" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:32:58.750" endtime="20230717 19:32:58.869"/>
</kw>
<msg timestamp="20230717 19:32:58.870" level="INFO">${checksumbefore} = 455053b9c37d966dbf5769365eedaea3</msg>
<status status="PASS" starttime="20230717 19:32:58.741" endtime="20230717 19:32:58.870"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:32:58.889" level="INFO">Running command 'md5sum /tmp/ozone-test-7200441924-multipartKey3.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:32:58.942" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:32:58.942" level="INFO">${output} = 455053b9c37d966dbf5769365eedaea3</msg>
<status status="PASS" starttime="20230717 19:32:58.882" endtime="20230717 19:32:58.944"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:32:58.953" level="INFO">455053b9c37d966dbf5769365eedaea3</msg>
<status status="PASS" starttime="20230717 19:32:58.951" endtime="20230717 19:32:58.955"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:32:58.963" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:32:58.958" endtime="20230717 19:32:58.964"/>
</kw>
<status status="PASS" starttime="20230717 19:32:58.881" endtime="20230717 19:32:58.964"/>
</kw>
<msg timestamp="20230717 19:32:58.964" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:32:58.876" endtime="20230717 19:32:58.967"/>
</kw>
<msg timestamp="20230717 19:32:58.969" level="INFO">${checksumafter} = 455053b9c37d966dbf5769365eedaea3</msg>
<status status="PASS" starttime="20230717 19:32:58.873" endtime="20230717 19:32:58.969"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230717 19:32:58.971" endtime="20230717 19:32:58.974"/>
</kw>
<status status="PASS" starttime="20230717 19:32:58.731" endtime="20230717 19:32:58.975"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:31:39.194" endtime="20230717 19:32:58.976"/>
</test>
<test id="s1-s9-s7-t6" name="Test abort Multipart upload" line="186">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230717 19:32:58.992" level="INFO">${randStr} = 9593106059</msg>
<status status="PASS" starttime="20230717 19:32:58.988" endtime="20230717 19:32:58.994"/>
</kw>
<msg timestamp="20230717 19:32:58.995" level="INFO">${random} = ozone-test-9593106059</msg>
<status status="PASS" starttime="20230717 19:32:58.987" endtime="20230717 19:32:58.995"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230717 19:32:58.999" level="INFO">${PREFIX} = ozone-test-9593106059</msg>
<status status="PASS" starttime="20230717 19:32:58.996" endtime="20230717 19:32:59.000"/>
</kw>
<status status="PASS" starttime="20230717 19:32:58.984" endtime="20230717 19:32:59.000"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey4 --storage-class REDUCED_REDUNDANCY</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:32:59.023" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket link --key ozone-test-9593106059/multipartKey4 --storage-class REDUCED_REDUNDANCY 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:33:00.786" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:33:00.786" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "ozone-test-9593106059/multipartKey4",
    "UploadId": "4a8da71f-6e8e-4a2f-a1f8-45a8a31f8350-110731092336378092"
}</msg>
<status status="PASS" starttime="20230717 19:32:59.012" endtime="20230717 19:33:00.786"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:33:00.788" level="INFO">{
    "Bucket": "link",
    "Key": "ozone-test-9593106059/multipartKey4",
    "UploadId": "4a8da71f-6e8e-4a2f-a1f8-45a8a31f8350-110731092336378092"
}</msg>
<status status="PASS" starttime="20230717 19:33:00.787" endtime="20230717 19:33:00.788"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:33:00.789" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:33:00.788" endtime="20230717 19:33:00.789"/>
</kw>
<status status="PASS" starttime="20230717 19:32:59.009" endtime="20230717 19:33:00.789"/>
</kw>
<msg timestamp="20230717 19:33:00.790" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:32:59.008" endtime="20230717 19:33:00.790"/>
</kw>
<msg timestamp="20230717 19:33:00.790" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "ozone-test-9593106059/multipartKey4",
    "UploadId": "4a8da71f-6e8e-4a2f-a1f8-45a8a31f8350-110731092336378092"
}</msg>
<status status="PASS" starttime="20230717 19:32:59.005" endtime="20230717 19:33:00.790"/>
</kw>
<msg timestamp="20230717 19:33:00.790" level="INFO">${result} = {
    "Bucket": "link",
    "Key": "ozone-test-9593106059/multipartKey4",
    "UploadId": "4a8da71f-6e8e-4a2f-a1f8-45a8a31f8350-110731092336378092"
}</msg>
<status status="PASS" starttime="20230717 19:32:59.000" endtime="20230717 19:33:00.791"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:33:00.801" level="INFO">Running command 'echo '{
    "Bucket": "link",
    "Key": "ozone-test-9593106059/multipartKey4",
    "UploadId": "4a8da71f-6e8e-4a2f-a1f8-45a8a31f8350-110731092336378092"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:33:00.946" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:33:00.946" level="INFO">${output} = 4a8da71f-6e8e-4a2f-a1f8-45a8a31f8350-110731092336378092</msg>
<status status="PASS" starttime="20230717 19:33:00.794" endtime="20230717 19:33:00.946"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:33:00.953" level="INFO">4a8da71f-6e8e-4a2f-a1f8-45a8a31f8350-110731092336378092</msg>
<status status="PASS" starttime="20230717 19:33:00.950" endtime="20230717 19:33:00.953"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:33:00.955" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:33:00.953" endtime="20230717 19:33:00.955"/>
</kw>
<msg timestamp="20230717 19:33:00.957" level="INFO">${uploadID} = 4a8da71f-6e8e-4a2f-a1f8-45a8a31f8350-110731092336378092</msg>
<status status="PASS" starttime="20230717 19:33:00.791" endtime="20230717 19:33:00.957"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:33:00.958" endtime="20230717 19:33:00.960"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:33:00.960" endtime="20230717 19:33:00.964"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:33:00.965" endtime="20230717 19:33:00.967"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey4 --upload-id ${uploadID}</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:33:00.979" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket link --key ozone-test-9593106059/multipartKey4 --upload-id 4a8da71f-6e8e-4a2f-a1f8-45a8a31f8350-110731092336378092 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:33:02.484" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:33:02.484" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:33:00.972" endtime="20230717 19:33:02.484"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:33:02.485" level="INFO"/>
<status status="PASS" starttime="20230717 19:33:02.484" endtime="20230717 19:33:02.485"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:33:02.486" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:33:02.485" endtime="20230717 19:33:02.486"/>
</kw>
<msg timestamp="20230717 19:33:02.487" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:33:00.970" endtime="20230717 19:33:02.487"/>
</kw>
<msg timestamp="20230717 19:33:02.487" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230717 19:33:00.967" endtime="20230717 19:33:02.487"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:32:58.979" endtime="20230717 19:33:02.493"/>
</test>
<test id="s1-s9-s7-t7" name="Test abort Multipart upload with invalid uploadId" line="195">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230717 19:33:02.504" level="INFO">${randStr} = 9593514847</msg>
<status status="PASS" starttime="20230717 19:33:02.503" endtime="20230717 19:33:02.504"/>
</kw>
<msg timestamp="20230717 19:33:02.504" level="INFO">${random} = ozone-test-9593514847</msg>
<status status="PASS" starttime="20230717 19:33:02.502" endtime="20230717 19:33:02.504"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230717 19:33:02.506" level="INFO">${PREFIX} = ozone-test-9593514847</msg>
<status status="PASS" starttime="20230717 19:33:02.505" endtime="20230717 19:33:02.506"/>
</kw>
<status status="PASS" starttime="20230717 19:33:02.500" endtime="20230717 19:33:02.506"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id "random"</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:33:02.513" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket link --key ozone-test-9593514847/multipartKey5 --upload-id "random" 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:33:04.033" level="INFO">${rc} = 255</msg>
<msg timestamp="20230717 19:33:04.033" level="INFO">${output} = 
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have bee...</msg>
<status status="PASS" starttime="20230717 19:33:02.509" endtime="20230717 19:33:04.033"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:33:04.037" level="INFO">
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted or completed.</msg>
<status status="PASS" starttime="20230717 19:33:04.035" endtime="20230717 19:33:04.037"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:33:04.042" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:33:04.040" endtime="20230717 19:33:04.042"/>
</kw>
<msg timestamp="20230717 19:33:04.043" level="INFO">${output} = 
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have bee...</msg>
<status status="PASS" starttime="20230717 19:33:02.508" endtime="20230717 19:33:04.043"/>
</kw>
<msg timestamp="20230717 19:33:04.043" level="INFO">${result} = 
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have bee...</msg>
<status status="PASS" starttime="20230717 19:33:02.507" endtime="20230717 19:33:04.045"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:33:02.496" endtime="20230717 19:33:04.046"/>
</test>
<test id="s1-s9-s7-t8" name="Upload part with Incorrect uploadID" line="198">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230717 19:33:04.057" level="INFO">${randStr} = 5683520127</msg>
<status status="PASS" starttime="20230717 19:33:04.055" endtime="20230717 19:33:04.057"/>
</kw>
<msg timestamp="20230717 19:33:04.057" level="INFO">${random} = ozone-test-5683520127</msg>
<status status="PASS" starttime="20230717 19:33:04.052" endtime="20230717 19:33:04.057"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230717 19:33:04.060" level="INFO">${PREFIX} = ozone-test-5683520127</msg>
<status status="PASS" starttime="20230717 19:33:04.057" endtime="20230717 19:33:04.061"/>
</kw>
<status status="PASS" starttime="20230717 19:33:04.052" endtime="20230717 19:33:04.061"/>
</kw>
<kw name="Skip" library="BuiltIn">
<arg>TODO: HDDS-7811</arg>
<doc>Skips the rest of the current test.</doc>
<msg timestamp="20230717 19:33:04.064" level="SKIP">TODO: HDDS-7811</msg>
<status status="SKIP" starttime="20230717 19:33:04.061" endtime="20230717 19:33:04.064"/>
</kw>
<kw name="Execute" library="os">
<arg>echo "Multipart upload" &gt; /tmp/testfile</arg>
<status status="NOT RUN" starttime="20230717 19:33:04.066" endtime="20230717 19:33:04.066"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey --part-number 1 --body /tmp/testfile --upload-id "random"</arg>
<arg>255</arg>
<status status="NOT RUN" starttime="20230717 19:33:04.066" endtime="20230717 19:33:04.066"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchUpload</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230717 19:33:04.067" endtime="20230717 19:33:04.067"/>
</kw>
<timeout value="5 minutes"/>
<status status="SKIP" starttime="20230717 19:33:04.048" endtime="20230717 19:33:04.068">TODO: HDDS-7811</status>
</test>
<test id="s1-s9-s7-t9" name="Test list parts" line="204">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230717 19:33:04.076" level="INFO">${randStr} = 4759641817</msg>
<status status="PASS" starttime="20230717 19:33:04.075" endtime="20230717 19:33:04.076"/>
</kw>
<msg timestamp="20230717 19:33:04.077" level="INFO">${random} = ozone-test-4759641817</msg>
<status status="PASS" starttime="20230717 19:33:04.074" endtime="20230717 19:33:04.077"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230717 19:33:04.078" level="INFO">${PREFIX} = ozone-test-4759641817</msg>
<status status="PASS" starttime="20230717 19:33:04.078" endtime="20230717 19:33:04.078"/>
</kw>
<status status="PASS" starttime="20230717 19:33:04.072" endtime="20230717 19:33:04.080"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey5</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:33:04.099" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket link --key ozone-test-4759641817/multipartKey5 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:33:06.054" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:33:06.054" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "ozone-test-4759641817/multipartKey5",
    "UploadId": "2055c9cc-7f78-4dfc-ae9c-3a535bd66240-110731092673364205"
}</msg>
<status status="PASS" starttime="20230717 19:33:04.086" endtime="20230717 19:33:06.054"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:33:06.057" level="INFO">{
    "Bucket": "link",
    "Key": "ozone-test-4759641817/multipartKey5",
    "UploadId": "2055c9cc-7f78-4dfc-ae9c-3a535bd66240-110731092673364205"
}</msg>
<status status="PASS" starttime="20230717 19:33:06.055" endtime="20230717 19:33:06.058"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:33:06.060" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:33:06.058" endtime="20230717 19:33:06.060"/>
</kw>
<status status="PASS" starttime="20230717 19:33:04.083" endtime="20230717 19:33:06.061"/>
</kw>
<msg timestamp="20230717 19:33:06.061" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:33:04.083" endtime="20230717 19:33:06.061"/>
</kw>
<msg timestamp="20230717 19:33:06.062" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "ozone-test-4759641817/multipartKey5",
    "UploadId": "2055c9cc-7f78-4dfc-ae9c-3a535bd66240-110731092673364205"
}</msg>
<status status="PASS" starttime="20230717 19:33:04.082" endtime="20230717 19:33:06.062"/>
</kw>
<msg timestamp="20230717 19:33:06.063" level="INFO">${result} = {
    "Bucket": "link",
    "Key": "ozone-test-4759641817/multipartKey5",
    "UploadId": "2055c9cc-7f78-4dfc-ae9c-3a535bd66240-110731092673364205"
}</msg>
<status status="PASS" starttime="20230717 19:33:04.081" endtime="20230717 19:33:06.063"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:33:06.074" level="INFO">Running command 'echo '{
    "Bucket": "link",
    "Key": "ozone-test-4759641817/multipartKey5",
    "UploadId": "2055c9cc-7f78-4dfc-ae9c-3a535bd66240-110731092673364205"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:33:06.183" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:33:06.183" level="INFO">${output} = 2055c9cc-7f78-4dfc-ae9c-3a535bd66240-110731092673364205</msg>
<status status="PASS" starttime="20230717 19:33:06.066" endtime="20230717 19:33:06.183"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:33:06.186" level="INFO">2055c9cc-7f78-4dfc-ae9c-3a535bd66240-110731092673364205</msg>
<status status="PASS" starttime="20230717 19:33:06.185" endtime="20230717 19:33:06.186"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:33:06.187" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:33:06.187" endtime="20230717 19:33:06.188"/>
</kw>
<msg timestamp="20230717 19:33:06.188" level="INFO">${uploadID} = 2055c9cc-7f78-4dfc-ae9c-3a535bd66240-110731092673364205</msg>
<status status="PASS" starttime="20230717 19:33:06.064" endtime="20230717 19:33:06.188"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:33:06.189" endtime="20230717 19:33:06.189"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:33:06.190" endtime="20230717 19:33:06.191"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:33:06.191" endtime="20230717 19:33:06.192"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>5</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>5</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:33:06.201" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:33:06.248" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:33:06.248" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:33:06.197" endtime="20230717 19:33:06.248"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:33:06.250" level="INFO"/>
<status status="PASS" starttime="20230717 19:33:06.249" endtime="20230717 19:33:06.251"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:33:06.252" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:33:06.251" endtime="20230717 19:33:06.252"/>
</kw>
<status status="PASS" starttime="20230717 19:33:06.195" endtime="20230717 19:33:06.252"/>
</kw>
<msg timestamp="20230717 19:33:06.252" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:33:06.195" endtime="20230717 19:33:06.253"/>
</kw>
<status status="PASS" starttime="20230717 19:33:06.194" endtime="20230717 19:33:06.253"/>
</kw>
<status status="PASS" starttime="20230717 19:33:06.193" endtime="20230717 19:33:06.253"/>
</kw>
<status status="PASS" starttime="20230717 19:33:06.193" endtime="20230717 19:33:06.253"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --part-number 1 --body /tmp/part1 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:33:06.267" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket link --key ozone-test-4759641817/multipartKey5 --part-number 1 --body /tmp/part1 --upload-id 2055c9cc-7f78-4dfc-ae9c-3a535bd66240-110731092673364205 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:33:28.345" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:33:28.345" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/ozone-test-4759641817/multipartKey5-2055c9cc-7f78-4dfc-ae9c-3a535bd66240-110731092673364205-1"
}</msg>
<status status="PASS" starttime="20230717 19:33:06.257" endtime="20230717 19:33:28.345"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:33:28.348" level="INFO">{
    "ETag": "/legacy/source-bucket/ozone-test-4759641817/multipartKey5-2055c9cc-7f78-4dfc-ae9c-3a535bd66240-110731092673364205-1"
}</msg>
<status status="PASS" starttime="20230717 19:33:28.347" endtime="20230717 19:33:28.348"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:33:28.350" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:33:28.349" endtime="20230717 19:33:28.350"/>
</kw>
<status status="PASS" starttime="20230717 19:33:06.256" endtime="20230717 19:33:28.350"/>
</kw>
<msg timestamp="20230717 19:33:28.350" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:33:06.256" endtime="20230717 19:33:28.351"/>
</kw>
<msg timestamp="20230717 19:33:28.351" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/ozone-test-4759641817/multipartKey5-2055c9cc-7f78-4dfc-ae9c-3a535bd66240-110731092673364205-1"
}</msg>
<status status="PASS" starttime="20230717 19:33:06.255" endtime="20230717 19:33:28.351"/>
</kw>
<msg timestamp="20230717 19:33:28.351" level="INFO">${result} = {
    "ETag": "/legacy/source-bucket/ozone-test-4759641817/multipartKey5-2055c9cc-7f78-4dfc-ae9c-3a535bd66240-110731092673364205-1"
}</msg>
<status status="PASS" starttime="20230717 19:33:06.254" endtime="20230717 19:33:28.352"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:33:28.359" level="INFO">Running command 'echo '{
    "ETag": "/legacy/source-bucket/ozone-test-4759641817/multipartKey5-2055c9cc-7f78-4dfc-ae9c-3a535bd66240-110731092673364205-1"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:33:28.436" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:33:28.437" level="INFO">${output} = /legacy/source-bucket/ozone-test-4759641817/multipartKey5-2055c9cc-7f78-4dfc-ae9c-3a535bd66240-110731092673364205-1</msg>
<status status="PASS" starttime="20230717 19:33:28.354" endtime="20230717 19:33:28.438"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:33:28.440" level="INFO">/legacy/source-bucket/ozone-test-4759641817/multipartKey5-2055c9cc-7f78-4dfc-ae9c-3a535bd66240-110731092673364205-1</msg>
<status status="PASS" starttime="20230717 19:33:28.439" endtime="20230717 19:33:28.441"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:33:28.442" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:33:28.441" endtime="20230717 19:33:28.443"/>
</kw>
<msg timestamp="20230717 19:33:28.443" level="INFO">${eTag1} = /legacy/source-bucket/ozone-test-4759641817/multipartKey5-2055c9cc-7f78-4dfc-ae9c-3a535bd66240-110731092673364205-1</msg>
<status status="PASS" starttime="20230717 19:33:28.352" endtime="20230717 19:33:28.443"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:33:28.444" endtime="20230717 19:33:28.445"/>
</kw>
<kw name="Execute" library="os">
<arg>echo "Part2" &gt; /tmp/part2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:33:28.454" level="INFO">Running command 'echo "Part2" &gt; /tmp/part2'.</msg>
<msg timestamp="20230717 19:33:28.459" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:33:28.459" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:33:28.450" endtime="20230717 19:33:28.459"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:33:28.461" level="INFO"/>
<status status="PASS" starttime="20230717 19:33:28.460" endtime="20230717 19:33:28.462"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:33:28.463" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:33:28.462" endtime="20230717 19:33:28.463"/>
</kw>
<status status="PASS" starttime="20230717 19:33:28.448" endtime="20230717 19:33:28.463"/>
</kw>
<msg timestamp="20230717 19:33:28.464" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:33:28.447" endtime="20230717 19:33:28.464"/>
</kw>
<status status="PASS" starttime="20230717 19:33:28.446" endtime="20230717 19:33:28.464"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --part-number 2 --body /tmp/part2 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:33:28.475" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket link --key ozone-test-4759641817/multipartKey5 --part-number 2 --body /tmp/part2 --upload-id 2055c9cc-7f78-4dfc-ae9c-3a535bd66240-110731092673364205 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:33:50.174" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:33:50.174" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/ozone-test-4759641817/multipartKey5-2055c9cc-7f78-4dfc-ae9c-3a535bd66240-110731092673364205-2"
}</msg>
<status status="PASS" starttime="20230717 19:33:28.470" endtime="20230717 19:33:50.174"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:33:50.178" level="INFO">{
    "ETag": "/legacy/source-bucket/ozone-test-4759641817/multipartKey5-2055c9cc-7f78-4dfc-ae9c-3a535bd66240-110731092673364205-2"
}</msg>
<status status="PASS" starttime="20230717 19:33:50.176" endtime="20230717 19:33:50.178"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:33:50.182" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:33:50.179" endtime="20230717 19:33:50.183"/>
</kw>
<status status="PASS" starttime="20230717 19:33:28.469" endtime="20230717 19:33:50.185"/>
</kw>
<msg timestamp="20230717 19:33:50.185" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:33:28.467" endtime="20230717 19:33:50.185"/>
</kw>
<msg timestamp="20230717 19:33:50.185" level="INFO">${output} = {
    "ETag": "/legacy/source-bucket/ozone-test-4759641817/multipartKey5-2055c9cc-7f78-4dfc-ae9c-3a535bd66240-110731092673364205-2"
}</msg>
<status status="PASS" starttime="20230717 19:33:28.466" endtime="20230717 19:33:50.185"/>
</kw>
<msg timestamp="20230717 19:33:50.186" level="INFO">${result} = {
    "ETag": "/legacy/source-bucket/ozone-test-4759641817/multipartKey5-2055c9cc-7f78-4dfc-ae9c-3a535bd66240-110731092673364205-2"
}</msg>
<status status="PASS" starttime="20230717 19:33:28.464" endtime="20230717 19:33:50.186"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:33:50.204" level="INFO">Running command 'echo '{
    "ETag": "/legacy/source-bucket/ozone-test-4759641817/multipartKey5-2055c9cc-7f78-4dfc-ae9c-3a535bd66240-110731092673364205-2"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:33:50.310" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:33:50.312" level="INFO">${output} = /legacy/source-bucket/ozone-test-4759641817/multipartKey5-2055c9cc-7f78-4dfc-ae9c-3a535bd66240-110731092673364205-2</msg>
<status status="PASS" starttime="20230717 19:33:50.189" endtime="20230717 19:33:50.312"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:33:50.318" level="INFO">/legacy/source-bucket/ozone-test-4759641817/multipartKey5-2055c9cc-7f78-4dfc-ae9c-3a535bd66240-110731092673364205-2</msg>
<status status="PASS" starttime="20230717 19:33:50.313" endtime="20230717 19:33:50.319"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:33:50.322" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:33:50.319" endtime="20230717 19:33:50.323"/>
</kw>
<msg timestamp="20230717 19:33:50.324" level="INFO">${eTag2} = /legacy/source-bucket/ozone-test-4759641817/multipartKey5-2055c9cc-7f78-4dfc-ae9c-3a535bd66240-110731092673364205-2</msg>
<status status="PASS" starttime="20230717 19:33:50.187" endtime="20230717 19:33:50.324"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:33:50.327" endtime="20230717 19:33:50.328"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-parts --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:33:50.341" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-parts --bucket link --key ozone-test-4759641817/multipartKey5 --upload-id 2055c9cc-7f78-4dfc-ae9c-3a535bd66240-110731092673364205 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:33:51.665" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:33:51.665" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2023-07-17T19:33:28.158Z",
            "ETag": "/legacy/source-bucket/ozone-test-4759641817/multipartKey5-2055c9cc-...</msg>
<status status="PASS" starttime="20230717 19:33:50.335" endtime="20230717 19:33:51.666"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:33:51.669" level="INFO">{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2023-07-17T19:33:28.158Z",
            "ETag": "/legacy/source-bucket/ozone-test-4759641817/multipartKey5-2055c9cc-7f78-4dfc-ae9c-3a535bd66240-110731092673364205-1",
            "Size": 5242880
        },
        {
            "PartNumber": 2,
            "LastModified": "2023-07-17T19:33:49.949Z",
            "ETag": "/legacy/source-bucket/ozone-test-4759641817/multipartKey5-2055c9cc-7f78-4dfc-ae9c-3a535bd66240-110731092673364205-2",
            "Size": 6
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD"
}</msg>
<status status="PASS" starttime="20230717 19:33:51.666" endtime="20230717 19:33:51.669"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:33:51.676" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:33:51.672" endtime="20230717 19:33:51.677"/>
</kw>
<status status="PASS" starttime="20230717 19:33:50.335" endtime="20230717 19:33:51.677"/>
</kw>
<msg timestamp="20230717 19:33:51.678" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:33:50.335" endtime="20230717 19:33:51.678"/>
</kw>
<msg timestamp="20230717 19:33:51.679" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2023-07-17T19:33:28.158Z",
            "ETag": "/legacy/source-bucket/ozone-test-4759641817/multipartKey5-2055c9cc-...</msg>
<status status="PASS" starttime="20230717 19:33:50.334" endtime="20230717 19:33:51.679"/>
</kw>
<msg timestamp="20230717 19:33:51.681" level="INFO">${result} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2023-07-17T19:33:28.158Z",
            "ETag": "/legacy/source-bucket/ozone-test-4759641817/multipartKey5-2055c9cc-...</msg>
<status status="PASS" starttime="20230717 19:33:50.328" endtime="20230717 19:33:51.681"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${part1}</var>
<arg>echo '${result}' | jq -r '.Parts[0].ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:33:51.698" level="INFO">Running command 'echo '{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2023-07-17T19:33:28.158Z",
            "ETag": "/legacy/source-bucket/ozone-test-4759641817/multipartKey5-2055c9cc-7f78-4dfc-ae9c-3a535bd66240-110731092673364205-1",
            "Size": 5242880
        },
        {
            "PartNumber": 2,
            "LastModified": "2023-07-17T19:33:49.949Z",
            "ETag": "/legacy/source-bucket/ozone-test-4759641817/multipartKey5-2055c9cc-7f78-4dfc-ae9c-3a535bd66240-110731092673364205-2",
            "Size": 6
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD"
}' | jq -r '.Parts[0].ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:33:51.793" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:33:51.793" level="INFO">${output} = /legacy/source-bucket/ozone-test-4759641817/multipartKey5-2055c9cc-7f78-4dfc-ae9c-3a535bd66240-110731092673364205-1</msg>
<status status="PASS" starttime="20230717 19:33:51.685" endtime="20230717 19:33:51.793"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:33:51.800" level="INFO">/legacy/source-bucket/ozone-test-4759641817/multipartKey5-2055c9cc-7f78-4dfc-ae9c-3a535bd66240-110731092673364205-1</msg>
<status status="PASS" starttime="20230717 19:33:51.794" endtime="20230717 19:33:51.800"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:33:51.802" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:33:51.801" endtime="20230717 19:33:51.803"/>
</kw>
<msg timestamp="20230717 19:33:51.803" level="INFO">${part1} = /legacy/source-bucket/ozone-test-4759641817/multipartKey5-2055c9cc-7f78-4dfc-ae9c-3a535bd66240-110731092673364205-1</msg>
<status status="PASS" starttime="20230717 19:33:51.681" endtime="20230717 19:33:51.803"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${part2}</var>
<arg>echo '${result}' | jq -r '.Parts[1].ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:33:51.814" level="INFO">Running command 'echo '{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2023-07-17T19:33:28.158Z",
            "ETag": "/legacy/source-bucket/ozone-test-4759641817/multipartKey5-2055c9cc-7f78-4dfc-ae9c-3a535bd66240-110731092673364205-1",
            "Size": 5242880
        },
        {
            "PartNumber": 2,
            "LastModified": "2023-07-17T19:33:49.949Z",
            "ETag": "/legacy/source-bucket/ozone-test-4759641817/multipartKey5-2055c9cc-7f78-4dfc-ae9c-3a535bd66240-110731092673364205-2",
            "Size": 6
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD"
}' | jq -r '.Parts[1].ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:33:51.912" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:33:51.912" level="INFO">${output} = /legacy/source-bucket/ozone-test-4759641817/multipartKey5-2055c9cc-7f78-4dfc-ae9c-3a535bd66240-110731092673364205-2</msg>
<status status="PASS" starttime="20230717 19:33:51.806" endtime="20230717 19:33:51.913"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:33:51.917" level="INFO">/legacy/source-bucket/ozone-test-4759641817/multipartKey5-2055c9cc-7f78-4dfc-ae9c-3a535bd66240-110731092673364205-2</msg>
<status status="PASS" starttime="20230717 19:33:51.914" endtime="20230717 19:33:51.918"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:33:51.920" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:33:51.918" endtime="20230717 19:33:51.920"/>
</kw>
<msg timestamp="20230717 19:33:51.920" level="INFO">${part2} = /legacy/source-bucket/ozone-test-4759641817/multipartKey5-2055c9cc-7f78-4dfc-ae9c-3a535bd66240-110731092673364205-2</msg>
<status status="PASS" starttime="20230717 19:33:51.804" endtime="20230717 19:33:51.920"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${part1}</arg>
<arg>${eTag1}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230717 19:33:51.921" endtime="20230717 19:33:51.924"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${part2}</arg>
<arg>${eTag2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:33:51.924" endtime="20230717 19:33:51.925"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:33:51.927" endtime="20230717 19:33:51.927"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-parts --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id ${uploadID} --max-items 1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:33:51.941" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-parts --bucket link --key ozone-test-4759641817/multipartKey5 --upload-id 2055c9cc-7f78-4dfc-ae9c-3a535bd66240-110731092673364205 --max-items 1 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:33:53.650" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:33:53.650" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2023-07-17T19:33:28.158Z",
            "ETag": "/legacy/source-bucket/ozone-test-4759641817/multipartKey5-2055c9cc-...</msg>
<status status="PASS" starttime="20230717 19:33:51.934" endtime="20230717 19:33:53.650"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:33:53.653" level="INFO">{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2023-07-17T19:33:28.158Z",
            "ETag": "/legacy/source-bucket/ozone-test-4759641817/multipartKey5-2055c9cc-7f78-4dfc-ae9c-3a535bd66240-110731092673364205-1",
            "Size": 5242880
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD",
    "NextToken": "eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0="
}</msg>
<status status="PASS" starttime="20230717 19:33:53.651" endtime="20230717 19:33:53.654"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:33:53.656" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:33:53.655" endtime="20230717 19:33:53.657"/>
</kw>
<status status="PASS" starttime="20230717 19:33:51.933" endtime="20230717 19:33:53.658"/>
</kw>
<msg timestamp="20230717 19:33:53.658" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:33:51.933" endtime="20230717 19:33:53.658"/>
</kw>
<msg timestamp="20230717 19:33:53.659" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2023-07-17T19:33:28.158Z",
            "ETag": "/legacy/source-bucket/ozone-test-4759641817/multipartKey5-2055c9cc-...</msg>
<status status="PASS" starttime="20230717 19:33:51.931" endtime="20230717 19:33:53.659"/>
</kw>
<msg timestamp="20230717 19:33:53.660" level="INFO">${result} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2023-07-17T19:33:28.158Z",
            "ETag": "/legacy/source-bucket/ozone-test-4759641817/multipartKey5-2055c9cc-...</msg>
<status status="PASS" starttime="20230717 19:33:51.928" endtime="20230717 19:33:53.660"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${part1}</var>
<arg>echo '${result}' | jq -r '.Parts[0].ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:33:53.674" level="INFO">Running command 'echo '{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2023-07-17T19:33:28.158Z",
            "ETag": "/legacy/source-bucket/ozone-test-4759641817/multipartKey5-2055c9cc-7f78-4dfc-ae9c-3a535bd66240-110731092673364205-1",
            "Size": 5242880
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD",
    "NextToken": "eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0="
}' | jq -r '.Parts[0].ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:33:53.748" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:33:53.748" level="INFO">${output} = /legacy/source-bucket/ozone-test-4759641817/multipartKey5-2055c9cc-7f78-4dfc-ae9c-3a535bd66240-110731092673364205-1</msg>
<status status="PASS" starttime="20230717 19:33:53.664" endtime="20230717 19:33:53.748"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:33:53.750" level="INFO">/legacy/source-bucket/ozone-test-4759641817/multipartKey5-2055c9cc-7f78-4dfc-ae9c-3a535bd66240-110731092673364205-1</msg>
<status status="PASS" starttime="20230717 19:33:53.748" endtime="20230717 19:33:53.750"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:33:53.755" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:33:53.754" endtime="20230717 19:33:53.755"/>
</kw>
<msg timestamp="20230717 19:33:53.756" level="INFO">${part1} = /legacy/source-bucket/ozone-test-4759641817/multipartKey5-2055c9cc-7f78-4dfc-ae9c-3a535bd66240-110731092673364205-1</msg>
<status status="PASS" starttime="20230717 19:33:53.661" endtime="20230717 19:33:53.756"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${token}</var>
<arg>echo '${result}' | jq -r '.NextToken'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:33:53.763" level="INFO">Running command 'echo '{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2023-07-17T19:33:28.158Z",
            "ETag": "/legacy/source-bucket/ozone-test-4759641817/multipartKey5-2055c9cc-7f78-4dfc-ae9c-3a535bd66240-110731092673364205-1",
            "Size": 5242880
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD",
    "NextToken": "eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0="
}' | jq -r '.NextToken' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:33:53.829" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:33:53.829" level="INFO">${output} = eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0=</msg>
<status status="PASS" starttime="20230717 19:33:53.757" endtime="20230717 19:33:53.829"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:33:53.832" level="INFO">eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0=</msg>
<status status="PASS" starttime="20230717 19:33:53.830" endtime="20230717 19:33:53.832"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:33:53.833" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:33:53.832" endtime="20230717 19:33:53.833"/>
</kw>
<msg timestamp="20230717 19:33:53.834" level="INFO">${token} = eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0=</msg>
<status status="PASS" starttime="20230717 19:33:53.756" endtime="20230717 19:33:53.834"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${part1}</arg>
<arg>${eTag1}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230717 19:33:53.834" endtime="20230717 19:33:53.835"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:33:53.835" endtime="20230717 19:33:53.836"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-parts --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id ${uploadID} --max-items 1 --starting-token ${token}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:33:53.845" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-parts --bucket link --key ozone-test-4759641817/multipartKey5 --upload-id 2055c9cc-7f78-4dfc-ae9c-3a535bd66240-110731092673364205 --max-items 1 --starting-token eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0= 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:33:55.388" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:33:55.388" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 2,
            "LastModified": "2023-07-17T19:33:49.949Z",
            "ETag": "/legacy/source-bucket/ozone-test-4759641817/multipartKey5-2055c9cc-...</msg>
<status status="PASS" starttime="20230717 19:33:53.840" endtime="20230717 19:33:55.388"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:33:55.395" level="INFO">{
    "Parts": [
        {
            "PartNumber": 2,
            "LastModified": "2023-07-17T19:33:49.949Z",
            "ETag": "/legacy/source-bucket/ozone-test-4759641817/multipartKey5-2055c9cc-7f78-4dfc-ae9c-3a535bd66240-110731092673364205-2",
            "Size": 6
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD"
}</msg>
<status status="PASS" starttime="20230717 19:33:55.390" endtime="20230717 19:33:55.395"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:33:55.402" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:33:55.395" endtime="20230717 19:33:55.402"/>
</kw>
<status status="PASS" starttime="20230717 19:33:53.839" endtime="20230717 19:33:55.403"/>
</kw>
<msg timestamp="20230717 19:33:55.403" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:33:53.839" endtime="20230717 19:33:55.403"/>
</kw>
<msg timestamp="20230717 19:33:55.403" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 2,
            "LastModified": "2023-07-17T19:33:49.949Z",
            "ETag": "/legacy/source-bucket/ozone-test-4759641817/multipartKey5-2055c9cc-...</msg>
<status status="PASS" starttime="20230717 19:33:53.837" endtime="20230717 19:33:55.403"/>
</kw>
<msg timestamp="20230717 19:33:55.404" level="INFO">${result} = {
    "Parts": [
        {
            "PartNumber": 2,
            "LastModified": "2023-07-17T19:33:49.949Z",
            "ETag": "/legacy/source-bucket/ozone-test-4759641817/multipartKey5-2055c9cc-...</msg>
<status status="PASS" starttime="20230717 19:33:53.836" endtime="20230717 19:33:55.404"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${part2}</var>
<arg>echo '${result}' | jq -r '.Parts[0].ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:33:55.415" level="INFO">Running command 'echo '{
    "Parts": [
        {
            "PartNumber": 2,
            "LastModified": "2023-07-17T19:33:49.949Z",
            "ETag": "/legacy/source-bucket/ozone-test-4759641817/multipartKey5-2055c9cc-7f78-4dfc-ae9c-3a535bd66240-110731092673364205-2",
            "Size": 6
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD"
}' | jq -r '.Parts[0].ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:33:55.554" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:33:55.554" level="INFO">${output} = /legacy/source-bucket/ozone-test-4759641817/multipartKey5-2055c9cc-7f78-4dfc-ae9c-3a535bd66240-110731092673364205-2</msg>
<status status="PASS" starttime="20230717 19:33:55.409" endtime="20230717 19:33:55.554"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:33:55.559" level="INFO">/legacy/source-bucket/ozone-test-4759641817/multipartKey5-2055c9cc-7f78-4dfc-ae9c-3a535bd66240-110731092673364205-2</msg>
<status status="PASS" starttime="20230717 19:33:55.557" endtime="20230717 19:33:55.559"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:33:55.562" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:33:55.561" endtime="20230717 19:33:55.562"/>
</kw>
<msg timestamp="20230717 19:33:55.562" level="INFO">${part2} = /legacy/source-bucket/ozone-test-4759641817/multipartKey5-2055c9cc-7f78-4dfc-ae9c-3a535bd66240-110731092673364205-2</msg>
<status status="PASS" starttime="20230717 19:33:55.404" endtime="20230717 19:33:55.562"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${part2}</arg>
<arg>${eTag2}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230717 19:33:55.564" endtime="20230717 19:33:55.564"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:33:55.566" endtime="20230717 19:33:55.566"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id ${uploadID}</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:33:55.578" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket link --key ozone-test-4759641817/multipartKey5 --upload-id 2055c9cc-7f78-4dfc-ae9c-3a535bd66240-110731092673364205 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:33:57.431" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:33:57.431" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:33:55.571" endtime="20230717 19:33:57.431"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:33:57.433" level="INFO"/>
<status status="PASS" starttime="20230717 19:33:57.432" endtime="20230717 19:33:57.433"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:33:57.439" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:33:57.435" endtime="20230717 19:33:57.440"/>
</kw>
<msg timestamp="20230717 19:33:57.440" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:33:55.569" endtime="20230717 19:33:57.440"/>
</kw>
<msg timestamp="20230717 19:33:57.440" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230717 19:33:55.567" endtime="20230717 19:33:57.440"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:33:04.070" endtime="20230717 19:33:57.444"/>
</test>
<test id="s1-s9-s7-t10" name="Test Multipart Upload with the simplified aws s3 cp API" line="246">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230717 19:33:57.464" level="INFO">${randStr} = 0103487990</msg>
<status status="PASS" starttime="20230717 19:33:57.462" endtime="20230717 19:33:57.464"/>
</kw>
<msg timestamp="20230717 19:33:57.468" level="INFO">${random} = ozone-test-0103487990</msg>
<status status="PASS" starttime="20230717 19:33:57.455" endtime="20230717 19:33:57.468"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230717 19:33:57.472" level="INFO">${PREFIX} = ozone-test-0103487990</msg>
<status status="PASS" starttime="20230717 19:33:57.469" endtime="20230717 19:33:57.472"/>
</kw>
<status status="PASS" starttime="20230717 19:33:57.455" endtime="20230717 19:33:57.472"/>
</kw>
<kw name="Create Random file">
<arg>22</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:33:57.483" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=22 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:33:57.680" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:33:57.680" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:33:57.478" endtime="20230717 19:33:57.680"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:33:57.682" level="INFO"/>
<status status="PASS" starttime="20230717 19:33:57.681" endtime="20230717 19:33:57.682"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:33:57.684" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:33:57.682" endtime="20230717 19:33:57.684"/>
</kw>
<status status="PASS" starttime="20230717 19:33:57.476" endtime="20230717 19:33:57.684"/>
</kw>
<msg timestamp="20230717 19:33:57.684" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:33:57.475" endtime="20230717 19:33:57.686"/>
</kw>
<status status="PASS" starttime="20230717 19:33:57.474" endtime="20230717 19:33:57.687"/>
</kw>
<status status="PASS" starttime="20230717 19:33:57.472" endtime="20230717 19:33:57.687"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>cp /tmp/part1 s3://${BUCKET}/mpyawscli</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:33:57.713" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/part1 s3://link/mpyawscli 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:34:21.030" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:34:21.030" level="INFO">${output} = Completed 256.0 KiB/22.0 MiB (1.0 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (2.0 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (2.8 MiB/s) with 1 file(s) remaining
Co...</msg>
<status status="PASS" starttime="20230717 19:33:57.697" endtime="20230717 19:34:21.030"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:34:21.032" level="INFO">Completed 256.0 KiB/22.0 MiB (1.0 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (2.0 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (2.8 MiB/s) with 1 file(s) remaining
Completed 1.0 MiB/22.0 MiB (3.8 MiB/s) with 1 file(s) remaining  
Completed 1.2 MiB/22.0 MiB (4.7 MiB/s) with 1 file(s) remaining  
Completed 1.5 MiB/22.0 MiB (5.6 MiB/s) with 1 file(s) remaining  
Completed 1.8 MiB/22.0 MiB (5.9 MiB/s) with 1 file(s) remaining  
Completed 2.0 MiB/22.0 MiB (6.6 MiB/s) with 1 file(s) remaining  
Completed 2.2 MiB/22.0 MiB (7.3 MiB/s) with 1 file(s) remaining  
Completed 2.5 MiB/22.0 MiB (8.0 MiB/s) with 1 file(s) remaining  
Completed 2.8 MiB/22.0 MiB (6.3 MiB/s) with 1 file(s) remaining  
Completed 3.0 MiB/22.0 MiB (6.9 MiB/s) with 1 file(s) remaining  
Completed 3.2 MiB/22.0 MiB (7.4 MiB/s) with 1 file(s) remaining  
Completed 3.5 MiB/22.0 MiB (8.0 MiB/s) with 1 file(s) remaining  
Completed 3.8 MiB/22.0 MiB (8.6 MiB/s) with 1 file(s) remaining  
Completed 4.0 MiB/22.0 MiB (9.1 MiB/s) with 1 file(s) remaining  
Completed 4.2 MiB/22.0 MiB (9.4 MiB/s) with 1 file(s) remaining  
Completed 4.5 MiB/22.0 MiB (10.0 MiB/s) with 1 file(s) remaining 
Completed 4.8 MiB/22.0 MiB (10.5 MiB/s) with 1 file(s) remaining 
Completed 5.0 MiB/22.0 MiB (11.0 MiB/s) with 1 file(s) remaining 
Completed 5.2 MiB/22.0 MiB (11.5 MiB/s) with 1 file(s) remaining 
Completed 5.5 MiB/22.0 MiB (12.0 MiB/s) with 1 file(s) remaining 
Completed 5.8 MiB/22.0 MiB (12.5 MiB/s) with 1 file(s) remaining 
Completed 6.0 MiB/22.0 MiB (13.0 MiB/s) with 1 file(s) remaining 
Completed 6.2 MiB/22.0 MiB (13.5 MiB/s) with 1 file(s) remaining 
Completed 6.5 MiB/22.0 MiB (14.0 MiB/s) with 1 file(s) remaining 
Completed 6.8 MiB/22.0 MiB (14.5 MiB/s) with 1 file(s) remaining 
Completed 7.0 MiB/22.0 MiB (15.0 MiB/s) with 1 file(s) remaining 
Completed 7.2 MiB/22.0 MiB (15.5 MiB/s) with 1 file(s) remaining 
Completed 7.5 MiB/22.0 MiB (15.2 MiB/s) with 1 file(s) remaining 
Completed 7.8 MiB/22.0 MiB (15.6 MiB/s) with 1 file(s) remaining 
Completed 8.0 MiB/22.0 MiB (16.0 MiB/s) with 1 file(s) remaining 
Completed 8.2 MiB/22.0 MiB (16.5 MiB/s) with 1 file(s) remaining 
Completed 8.5 MiB/22.0 MiB (16.3 MiB/s) with 1 file(s) remaining 
Completed 8.8 MiB/22.0 MiB (16.7 MiB/s) with 1 file(s) remaining 
Completed 9.0 MiB/22.0 MiB (17.1 MiB/s) with 1 file(s) remaining 
Completed 9.2 MiB/22.0 MiB (17.5 MiB/s) with 1 file(s) remaining 
Completed 9.5 MiB/22.0 MiB (17.8 MiB/s) with 1 file(s) remaining 
Completed 9.8 MiB/22.0 MiB (18.3 MiB/s) with 1 file(s) remaining 
Completed 10.0 MiB/22.0 MiB (18.7 MiB/s) with 1 file(s) remaining
Completed 10.2 MiB/22.0 MiB (19.1 MiB/s) with 1 file(s) remaining
Completed 10.5 MiB/22.0 MiB (19.6 MiB/s) with 1 file(s) remaining
Completed 10.8 MiB/22.0 MiB (18.3 MiB/s) with 1 file(s) remaining
Completed 11.0 MiB/22.0 MiB (18.6 MiB/s) with 1 file(s) remaining
Completed 11.2 MiB/22.0 MiB (18.3 MiB/s) with 1 file(s) remaining
Completed 11.5 MiB/22.0 MiB (18.6 MiB/s) with 1 file(s) remaining
Completed 11.8 MiB/22.0 MiB (19.0 MiB/s) with 1 file(s) remaining
Completed 12.0 MiB/22.0 MiB (19.3 MiB/s) with 1 file(s) remaining
Completed 12.2 MiB/22.0 MiB (18.8 MiB/s) with 1 file(s) remaining
Completed 12.5 MiB/22.0 MiB (19.1 MiB/s) with 1 file(s) remaining
Completed 12.8 MiB/22.0 MiB (19.4 MiB/s) with 1 file(s) remaining
Completed 13.0 MiB/22.0 MiB (19.8 MiB/s) with 1 file(s) remaining
Completed 13.2 MiB/22.0 MiB (20.1 MiB/s) with 1 file(s) remaining
Completed 13.5 MiB/22.0 MiB (20.4 MiB/s) with 1 file(s) remaining
Completed 13.8 MiB/22.0 MiB (20.8 MiB/s) with 1 file(s) remaining
Completed 14.0 MiB/22.0 MiB (21.2 MiB/s) with 1 file(s) remaining
Completed 14.2 MiB/22.0 MiB (21.5 MiB/s) with 1 file(s) remaining
Completed 14.5 MiB/22.0 MiB (21.1 MiB/s) with 1 file(s) remaining
Completed 14.8 MiB/22.0 MiB (21.3 MiB/s) with 1 file(s) remaining
Completed 15.0 MiB/22.0 MiB (20.7 MiB/s) with 1 file(s) remaining
Completed 15.2 MiB/22.0 MiB (21.0 MiB/s) with 1 file(s) remaining
Completed 15.5 MiB/22.0 MiB (21.3 MiB/s) with 1 file(s) remaining
Completed 15.8 MiB/22.0 MiB (17.7 MiB/s) with 1 file(s) remaining
Completed 16.0 MiB/22.0 MiB (17.7 MiB/s) with 1 file(s) remaining
Completed 16.2 MiB/22.0 MiB (18.0 MiB/s) with 1 file(s) remaining
Completed 16.5 MiB/22.0 MiB (18.2 MiB/s) with 1 file(s) remaining
Completed 16.8 MiB/22.0 MiB (18.5 MiB/s) with 1 file(s) remaining
Completed 17.0 MiB/22.0 MiB (18.8 MiB/s) with 1 file(s) remaining
Completed 17.2 MiB/22.0 MiB (18.9 MiB/s) with 1 file(s) remaining
Completed 17.5 MiB/22.0 MiB (19.1 MiB/s) with 1 file(s) remaining
Completed 17.8 MiB/22.0 MiB (19.2 MiB/s) with 1 file(s) remaining
Completed 18.0 MiB/22.0 MiB (18.8 MiB/s) with 1 file(s) remaining
Completed 18.2 MiB/22.0 MiB (18.8 MiB/s) with 1 file(s) remaining
Completed 18.5 MiB/22.0 MiB (18.9 MiB/s) with 1 file(s) remaining
Completed 18.8 MiB/22.0 MiB (19.1 MiB/s) with 1 file(s) remaining
Completed 19.0 MiB/22.0 MiB (19.3 MiB/s) with 1 file(s) remaining
Completed 19.2 MiB/22.0 MiB (19.3 MiB/s) with 1 file(s) remaining
Completed 19.5 MiB/22.0 MiB (19.6 MiB/s) with 1 file(s) remaining
Completed 19.8 MiB/22.0 MiB (19.6 MiB/s) with 1 file(s) remaining
Completed 20.0 MiB/22.0 MiB (19.7 MiB/s) with 1 file(s) remaining
Completed 20.2 MiB/22.0 MiB (19.7 MiB/s) with 1 file(s) remaining
Completed 20.5 MiB/22.0 MiB (19.7 MiB/s) with 1 file(s) remaining
Completed 20.8 MiB/22.0 MiB (19.8 MiB/s) with 1 file(s) remaining
Completed 21.0 MiB/22.0 MiB (19.9 MiB/s) with 1 file(s) remaining
Completed 21.2 MiB/22.0 MiB (19.9 MiB/s) with 1 file(s) remaining
Completed 21.5 MiB/22.0 MiB (19.9 MiB/s) with 1 file(s) remaining
Completed 21.8 MiB/22.0 MiB (20.1 MiB/s) with 1 file(s) remaining
Completed 22.0 MiB/22.0 MiB (20.2 MiB/s) with 1 file(s) remaining
upload: ../../tmp/part1 to s3://link/mpyawscli                   </msg>
<status status="PASS" starttime="20230717 19:34:21.031" endtime="20230717 19:34:21.032"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:34:21.033" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:34:21.033" endtime="20230717 19:34:21.033"/>
</kw>
<status status="PASS" starttime="20230717 19:33:57.695" endtime="20230717 19:34:21.035"/>
</kw>
<msg timestamp="20230717 19:34:21.035" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:33:57.692" endtime="20230717 19:34:21.035"/>
</kw>
<msg timestamp="20230717 19:34:21.035" level="INFO">${output} = Completed 256.0 KiB/22.0 MiB (1.0 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (2.0 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (2.8 MiB/s) with 1 file(s) remaining
Co...</msg>
<status status="PASS" starttime="20230717 19:33:57.692" endtime="20230717 19:34:21.035"/>
</kw>
<status status="PASS" starttime="20230717 19:33:57.687" endtime="20230717 19:34:21.037"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>cp s3://${BUCKET}/mpyawscli /tmp/part1.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:34:21.052" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp s3://link/mpyawscli /tmp/part1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:34:25.132" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:34:25.133" level="INFO">${output} = Completed 256.0 KiB/22.0 MiB (652.8 KiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (1.1 MiB/s) with 1 file(s) remaining  
Completed 768.0 KiB/22.0 MiB (1.6 MiB/s) with 1 file(s) remainin...</msg>
<status status="PASS" starttime="20230717 19:34:21.043" endtime="20230717 19:34:25.133"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:34:25.148" level="INFO">Completed 256.0 KiB/22.0 MiB (652.8 KiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (1.1 MiB/s) with 1 file(s) remaining  
Completed 768.0 KiB/22.0 MiB (1.6 MiB/s) with 1 file(s) remaining  
Completed 1.0 MiB/22.0 MiB (2.0 MiB/s) with 1 file(s) remaining    
Completed 1.2 MiB/22.0 MiB (2.5 MiB/s) with 1 file(s) remaining    
Completed 1.5 MiB/22.0 MiB (3.0 MiB/s) with 1 file(s) remaining    
Completed 1.8 MiB/22.0 MiB (3.3 MiB/s) with 1 file(s) remaining    
Completed 2.0 MiB/22.0 MiB (3.8 MiB/s) with 1 file(s) remaining    
Completed 2.2 MiB/22.0 MiB (4.0 MiB/s) with 1 file(s) remaining    
Completed 2.5 MiB/22.0 MiB (4.4 MiB/s) with 1 file(s) remaining    
Completed 2.8 MiB/22.0 MiB (4.7 MiB/s) with 1 file(s) remaining    
Completed 3.0 MiB/22.0 MiB (4.7 MiB/s) with 1 file(s) remaining    
Completed 3.2 MiB/22.0 MiB (5.0 MiB/s) with 1 file(s) remaining    
Completed 3.5 MiB/22.0 MiB (5.2 MiB/s) with 1 file(s) remaining    
Completed 3.8 MiB/22.0 MiB (5.5 MiB/s) with 1 file(s) remaining    
Completed 4.0 MiB/22.0 MiB (5.8 MiB/s) with 1 file(s) remaining    
Completed 4.2 MiB/22.0 MiB (6.0 MiB/s) with 1 file(s) remaining    
Completed 4.5 MiB/22.0 MiB (6.2 MiB/s) with 1 file(s) remaining    
Completed 4.8 MiB/22.0 MiB (6.4 MiB/s) with 1 file(s) remaining    
Completed 5.0 MiB/22.0 MiB (6.7 MiB/s) with 1 file(s) remaining    
Completed 5.2 MiB/22.0 MiB (6.9 MiB/s) with 1 file(s) remaining    
Completed 5.5 MiB/22.0 MiB (7.1 MiB/s) with 1 file(s) remaining    
Completed 5.8 MiB/22.0 MiB (7.4 MiB/s) with 1 file(s) remaining    
Completed 6.0 MiB/22.0 MiB (7.5 MiB/s) with 1 file(s) remaining    
Completed 6.2 MiB/22.0 MiB (7.4 MiB/s) with 1 file(s) remaining    
Completed 6.5 MiB/22.0 MiB (7.4 MiB/s) with 1 file(s) remaining    
Completed 6.8 MiB/22.0 MiB (7.6 MiB/s) with 1 file(s) remaining    
Completed 7.0 MiB/22.0 MiB (7.8 MiB/s) with 1 file(s) remaining    
Completed 7.2 MiB/22.0 MiB (7.8 MiB/s) with 1 file(s) remaining    
Completed 7.5 MiB/22.0 MiB (8.0 MiB/s) with 1 file(s) remaining    
Completed 7.8 MiB/22.0 MiB (8.1 MiB/s) with 1 file(s) remaining    
Completed 8.0 MiB/22.0 MiB (8.1 MiB/s) with 1 file(s) remaining    
Completed 8.2 MiB/22.0 MiB (8.3 MiB/s) with 1 file(s) remaining    
Completed 8.5 MiB/22.0 MiB (8.5 MiB/s) with 1 file(s) remaining    
Completed 8.8 MiB/22.0 MiB (8.0 MiB/s) with 1 file(s) remaining    
Completed 9.0 MiB/22.0 MiB (8.2 MiB/s) with 1 file(s) remaining    
Completed 9.2 MiB/22.0 MiB (8.3 MiB/s) with 1 file(s) remaining    
Completed 9.5 MiB/22.0 MiB (8.1 MiB/s) with 1 file(s) remaining    
Completed 9.8 MiB/22.0 MiB (8.2 MiB/s) with 1 file(s) remaining    
Completed 10.0 MiB/22.0 MiB (8.3 MiB/s) with 1 file(s) remaining   
Completed 10.2 MiB/22.0 MiB (8.3 MiB/s) with 1 file(s) remaining   
Completed 10.5 MiB/22.0 MiB (8.4 MiB/s) with 1 file(s) remaining   
Completed 10.8 MiB/22.0 MiB (8.5 MiB/s) with 1 file(s) remaining   
Completed 11.0 MiB/22.0 MiB (8.4 MiB/s) with 1 file(s) remaining   
Completed 11.2 MiB/22.0 MiB (8.6 MiB/s) with 1 file(s) remaining   
Completed 11.5 MiB/22.0 MiB (8.7 MiB/s) with 1 file(s) remaining   
Completed 11.8 MiB/22.0 MiB (8.2 MiB/s) with 1 file(s) remaining   
Completed 12.0 MiB/22.0 MiB (8.3 MiB/s) with 1 file(s) remaining   
Completed 12.2 MiB/22.0 MiB (8.3 MiB/s) with 1 file(s) remaining   
Completed 12.5 MiB/22.0 MiB (8.2 MiB/s) with 1 file(s) remaining   
Completed 12.8 MiB/22.0 MiB (8.2 MiB/s) with 1 file(s) remaining   
Completed 13.0 MiB/22.0 MiB (8.3 MiB/s) with 1 file(s) remaining   
Completed 13.2 MiB/22.0 MiB (8.3 MiB/s) with 1 file(s) remaining   
Completed 13.5 MiB/22.0 MiB (8.4 MiB/s) with 1 file(s) remaining   
Completed 13.8 MiB/22.0 MiB (8.4 MiB/s) with 1 file(s) remaining   
Completed 14.0 MiB/22.0 MiB (8.5 MiB/s) with 1 file(s) remaining   
Completed 14.2 MiB/22.0 MiB (8.5 MiB/s) with 1 file(s) remaining   
Completed 14.5 MiB/22.0 MiB (8.5 MiB/s) with 1 file(s) remaining   
Completed 14.8 MiB/22.0 MiB (8.5 MiB/s) with 1 file(s) remaining   
Completed 15.0 MiB/22.0 MiB (8.4 MiB/s) with 1 file(s) remaining   
Completed 15.2 MiB/22.0 MiB (8.4 MiB/s) with 1 file(s) remaining   
Completed 15.5 MiB/22.0 MiB (8.5 MiB/s) with 1 file(s) remaining   
Completed 15.8 MiB/22.0 MiB (8.6 MiB/s) with 1 file(s) remaining   
Completed 16.0 MiB/22.0 MiB (8.7 MiB/s) with 1 file(s) remaining   
Completed 16.2 MiB/22.0 MiB (8.8 MiB/s) with 1 file(s) remaining   
Completed 16.5 MiB/22.0 MiB (8.6 MiB/s) with 1 file(s) remaining   
Completed 16.8 MiB/22.0 MiB (8.7 MiB/s) with 1 file(s) remaining   
Completed 17.0 MiB/22.0 MiB (8.8 MiB/s) with 1 file(s) remaining   
Completed 17.2 MiB/22.0 MiB (8.8 MiB/s) with 1 file(s) remaining   
Completed 17.5 MiB/22.0 MiB (8.9 MiB/s) with 1 file(s) remaining   
Completed 17.8 MiB/22.0 MiB (8.9 MiB/s) with 1 file(s) remaining   
Completed 18.0 MiB/22.0 MiB (9.0 MiB/s) with 1 file(s) remaining   
Completed 18.2 MiB/22.0 MiB (9.0 MiB/s) with 1 file(s) remaining   
Completed 18.5 MiB/22.0 MiB (9.0 MiB/s) with 1 file(s) remaining   
Completed 18.8 MiB/22.0 MiB (8.9 MiB/s) with 1 file(s) remaining   
Completed 19.0 MiB/22.0 MiB (8.9 MiB/s) with 1 file(s) remaining   
Completed 19.2 MiB/22.0 MiB (8.9 MiB/s) with 1 file(s) remaining   
Completed 19.5 MiB/22.0 MiB (8.8 MiB/s) with 1 file(s) remaining   
Completed 19.8 MiB/22.0 MiB (8.9 MiB/s) with 1 file(s) remaining   
Completed 20.0 MiB/22.0 MiB (8.7 MiB/s) with 1 file(s) remaining   
Completed 20.2 MiB/22.0 MiB (8.7 MiB/s) with 1 file(s) remaining   
Completed 20.5 MiB/22.0 MiB (8.6 MiB/s) with 1 file(s) remaining   
Completed 20.8 MiB/22.0 MiB (8.7 MiB/s) with 1 file(s) remaining   
Completed 21.0 MiB/22.0 MiB (8.7 MiB/s) with 1 file(s) remaining   
Completed 21.2 MiB/22.0 MiB (8.6 MiB/s) with 1 file(s) remaining   
Completed 21.5 MiB/22.0 MiB (8.5 MiB/s) with 1 file(s) remaining   
Completed 21.8 MiB/22.0 MiB (8.5 MiB/s) with 1 file(s) remaining   
Completed 22.0 MiB/22.0 MiB (8.4 MiB/s) with 1 file(s) remaining   
download: s3://link/mpyawscli to ../../tmp/part1.result            </msg>
<status status="PASS" starttime="20230717 19:34:25.134" endtime="20230717 19:34:25.149"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:34:25.153" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:34:25.152" endtime="20230717 19:34:25.153"/>
</kw>
<status status="PASS" starttime="20230717 19:34:21.041" endtime="20230717 19:34:25.155"/>
</kw>
<msg timestamp="20230717 19:34:25.155" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:34:21.040" endtime="20230717 19:34:25.155"/>
</kw>
<msg timestamp="20230717 19:34:25.155" level="INFO">${output} = Completed 256.0 KiB/22.0 MiB (652.8 KiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (1.1 MiB/s) with 1 file(s) remaining  
Completed 768.0 KiB/22.0 MiB (1.6 MiB/s) with 1 file(s) remainin...</msg>
<status status="PASS" starttime="20230717 19:34:21.038" endtime="20230717 19:34:25.155"/>
</kw>
<status status="PASS" starttime="20230717 19:34:21.037" endtime="20230717 19:34:25.159"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>rm s3://${BUCKET}/mpyawscli</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:34:25.184" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 rm s3://link/mpyawscli 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:34:26.851" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:34:26.851" level="INFO">${output} = delete: s3://link/mpyawscli</msg>
<status status="PASS" starttime="20230717 19:34:25.176" endtime="20230717 19:34:26.851"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:34:26.853" level="INFO">delete: s3://link/mpyawscli</msg>
<status status="PASS" starttime="20230717 19:34:26.852" endtime="20230717 19:34:26.854"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:34:26.855" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:34:26.854" endtime="20230717 19:34:26.855"/>
</kw>
<status status="PASS" starttime="20230717 19:34:25.170" endtime="20230717 19:34:26.855"/>
</kw>
<msg timestamp="20230717 19:34:26.855" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:34:25.170" endtime="20230717 19:34:26.856"/>
</kw>
<msg timestamp="20230717 19:34:26.856" level="INFO">${output} = delete: s3://link/mpyawscli</msg>
<status status="PASS" starttime="20230717 19:34:25.164" endtime="20230717 19:34:26.856"/>
</kw>
<status status="PASS" starttime="20230717 19:34:25.160" endtime="20230717 19:34:26.856"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part1</arg>
<arg>/tmp/part1.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:34:26.870" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:34:27.015" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:34:27.015" level="INFO">${output} = 1a460253b1d7713ce26d59e080d715ab</msg>
<status status="PASS" starttime="20230717 19:34:26.861" endtime="20230717 19:34:27.016"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:34:27.018" level="INFO">1a460253b1d7713ce26d59e080d715ab</msg>
<status status="PASS" starttime="20230717 19:34:27.017" endtime="20230717 19:34:27.018"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:34:27.019" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:34:27.018" endtime="20230717 19:34:27.021"/>
</kw>
<status status="PASS" starttime="20230717 19:34:26.859" endtime="20230717 19:34:27.021"/>
</kw>
<msg timestamp="20230717 19:34:27.021" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:34:26.859" endtime="20230717 19:34:27.022"/>
</kw>
<msg timestamp="20230717 19:34:27.022" level="INFO">${checksumbefore} = 1a460253b1d7713ce26d59e080d715ab</msg>
<status status="PASS" starttime="20230717 19:34:26.858" endtime="20230717 19:34:27.022"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:34:27.032" level="INFO">Running command 'md5sum /tmp/part1.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:34:27.152" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:34:27.152" level="INFO">${output} = 1a460253b1d7713ce26d59e080d715ab</msg>
<status status="PASS" starttime="20230717 19:34:27.025" endtime="20230717 19:34:27.152"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:34:27.156" level="INFO">1a460253b1d7713ce26d59e080d715ab</msg>
<status status="PASS" starttime="20230717 19:34:27.154" endtime="20230717 19:34:27.156"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:34:27.157" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:34:27.156" endtime="20230717 19:34:27.157"/>
</kw>
<status status="PASS" starttime="20230717 19:34:27.024" endtime="20230717 19:34:27.159"/>
</kw>
<msg timestamp="20230717 19:34:27.159" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:34:27.023" endtime="20230717 19:34:27.159"/>
</kw>
<msg timestamp="20230717 19:34:27.159" level="INFO">${checksumafter} = 1a460253b1d7713ce26d59e080d715ab</msg>
<status status="PASS" starttime="20230717 19:34:27.022" endtime="20230717 19:34:27.159"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230717 19:34:27.160" endtime="20230717 19:34:27.161"/>
</kw>
<status status="PASS" starttime="20230717 19:34:26.857" endtime="20230717 19:34:27.161"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:33:57.447" endtime="20230717 19:34:27.163"/>
</test>
<test id="s1-s9-s7-t11" name="Test Multipart Upload Put With Copy" line="253">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230717 19:34:27.181" level="INFO">${randStr} = 3962561376</msg>
<status status="PASS" starttime="20230717 19:34:27.179" endtime="20230717 19:34:27.181"/>
</kw>
<msg timestamp="20230717 19:34:27.181" level="INFO">${random} = ozone-test-3962561376</msg>
<status status="PASS" starttime="20230717 19:34:27.173" endtime="20230717 19:34:27.182"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230717 19:34:27.184" level="INFO">${PREFIX} = ozone-test-3962561376</msg>
<status status="PASS" starttime="20230717 19:34:27.182" endtime="20230717 19:34:27.184"/>
</kw>
<status status="PASS" starttime="20230717 19:34:27.171" endtime="20230717 19:34:27.185"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>5</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>5</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:34:27.200" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:34:27.246" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:34:27.246" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:34:27.193" endtime="20230717 19:34:27.246"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:34:27.249" level="INFO"/>
<status status="PASS" starttime="20230717 19:34:27.247" endtime="20230717 19:34:27.254"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:34:27.255" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:34:27.254" endtime="20230717 19:34:27.256"/>
</kw>
<status status="PASS" starttime="20230717 19:34:27.191" endtime="20230717 19:34:27.257"/>
</kw>
<msg timestamp="20230717 19:34:27.257" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:34:27.191" endtime="20230717 19:34:27.257"/>
</kw>
<status status="PASS" starttime="20230717 19:34:27.187" endtime="20230717 19:34:27.257"/>
</kw>
<status status="PASS" starttime="20230717 19:34:27.186" endtime="20230717 19:34:27.259"/>
</kw>
<status status="PASS" starttime="20230717 19:34:27.185" endtime="20230717 19:34:27.259"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/copytest/source --body /tmp/part1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:34:27.268" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket link --key ozone-test-3962561376/copytest/source --body /tmp/part1 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:34:49.573" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:34:49.574" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:34:27.264" endtime="20230717 19:34:49.574"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:34:49.576" level="INFO"/>
<status status="PASS" starttime="20230717 19:34:49.574" endtime="20230717 19:34:49.576"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:34:49.584" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:34:49.583" endtime="20230717 19:34:49.587"/>
</kw>
<status status="PASS" starttime="20230717 19:34:27.264" endtime="20230717 19:34:49.587"/>
</kw>
<msg timestamp="20230717 19:34:49.588" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:34:27.263" endtime="20230717 19:34:49.588"/>
</kw>
<msg timestamp="20230717 19:34:49.589" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:34:27.262" endtime="20230717 19:34:49.589"/>
</kw>
<msg timestamp="20230717 19:34:49.594" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230717 19:34:27.259" endtime="20230717 19:34:49.594"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/copytest/destination</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:34:49.615" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket link --key ozone-test-3962561376/copytest/destination 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:34:51.541" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:34:51.542" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "ozone-test-3962561376/copytest/destination",
    "UploadId": "077f9a81-1104-45b3-9f3a-314caca07269-110731099591999733"
}</msg>
<status status="PASS" starttime="20230717 19:34:49.606" endtime="20230717 19:34:51.542"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:34:51.544" level="INFO">{
    "Bucket": "link",
    "Key": "ozone-test-3962561376/copytest/destination",
    "UploadId": "077f9a81-1104-45b3-9f3a-314caca07269-110731099591999733"
}</msg>
<status status="PASS" starttime="20230717 19:34:51.543" endtime="20230717 19:34:51.544"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:34:51.545" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:34:51.544" endtime="20230717 19:34:51.546"/>
</kw>
<status status="PASS" starttime="20230717 19:34:49.603" endtime="20230717 19:34:51.546"/>
</kw>
<msg timestamp="20230717 19:34:51.546" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:34:49.602" endtime="20230717 19:34:51.546"/>
</kw>
<msg timestamp="20230717 19:34:51.547" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "ozone-test-3962561376/copytest/destination",
    "UploadId": "077f9a81-1104-45b3-9f3a-314caca07269-110731099591999733"
}</msg>
<status status="PASS" starttime="20230717 19:34:49.597" endtime="20230717 19:34:51.547"/>
</kw>
<msg timestamp="20230717 19:34:51.547" level="INFO">${result} = {
    "Bucket": "link",
    "Key": "ozone-test-3962561376/copytest/destination",
    "UploadId": "077f9a81-1104-45b3-9f3a-314caca07269-110731099591999733"
}</msg>
<status status="PASS" starttime="20230717 19:34:49.595" endtime="20230717 19:34:51.548"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:34:51.554" level="INFO">Running command 'echo '{
    "Bucket": "link",
    "Key": "ozone-test-3962561376/copytest/destination",
    "UploadId": "077f9a81-1104-45b3-9f3a-314caca07269-110731099591999733"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:34:51.670" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:34:51.670" level="INFO">${output} = 077f9a81-1104-45b3-9f3a-314caca07269-110731099591999733</msg>
<status status="PASS" starttime="20230717 19:34:51.549" endtime="20230717 19:34:51.671"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:34:51.673" level="INFO">077f9a81-1104-45b3-9f3a-314caca07269-110731099591999733</msg>
<status status="PASS" starttime="20230717 19:34:51.672" endtime="20230717 19:34:51.673"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:34:51.674" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:34:51.673" endtime="20230717 19:34:51.674"/>
</kw>
<msg timestamp="20230717 19:34:51.675" level="INFO">${uploadID} = 077f9a81-1104-45b3-9f3a-314caca07269-110731099591999733</msg>
<status status="PASS" starttime="20230717 19:34:51.548" endtime="20230717 19:34:51.675"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:34:51.675" endtime="20230717 19:34:51.676"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:34:51.676" endtime="20230717 19:34:51.677"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copytest/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copytest/source</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:34:51.698" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket link --key ozone-test-3962561376/copytest/destination --upload-id 077f9a81-1104-45b3-9f3a-314caca07269-110731099591999733 --part-number 1 --copy-source link/ozone-test-3962561376/copytest/source 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:34:53.871" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:34:53.871" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/legacy/source-bucket/ozone-test-3962561376/copytest/destination-077f9a81-1104-45b3-9f3a-314caca07269-110731099591999733-1",
        "LastModified": "2023-07...</msg>
<status status="PASS" starttime="20230717 19:34:51.687" endtime="20230717 19:34:53.871"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:34:53.875" level="INFO">{
    "CopyPartResult": {
        "ETag": "/legacy/source-bucket/ozone-test-3962561376/copytest/destination-077f9a81-1104-45b3-9f3a-314caca07269-110731099591999733-1",
        "LastModified": "2023-07-17T19:34:53.627Z"
    }
}</msg>
<status status="PASS" starttime="20230717 19:34:53.873" endtime="20230717 19:34:53.875"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:34:53.876" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:34:53.875" endtime="20230717 19:34:53.876"/>
</kw>
<status status="PASS" starttime="20230717 19:34:51.686" endtime="20230717 19:34:53.878"/>
</kw>
<msg timestamp="20230717 19:34:53.878" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:34:51.679" endtime="20230717 19:34:53.878"/>
</kw>
<msg timestamp="20230717 19:34:53.878" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/legacy/source-bucket/ozone-test-3962561376/copytest/destination-077f9a81-1104-45b3-9f3a-314caca07269-110731099591999733-1",
        "LastModified": "2023-07...</msg>
<status status="PASS" starttime="20230717 19:34:51.678" endtime="20230717 19:34:53.878"/>
</kw>
<msg timestamp="20230717 19:34:53.878" level="INFO">${result} = {
    "CopyPartResult": {
        "ETag": "/legacy/source-bucket/ozone-test-3962561376/copytest/destination-077f9a81-1104-45b3-9f3a-314caca07269-110731099591999733-1",
        "LastModified": "2023-07...</msg>
<status status="PASS" starttime="20230717 19:34:51.677" endtime="20230717 19:34:53.878"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:34:53.879" endtime="20230717 19:34:53.879"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:34:53.879" endtime="20230717 19:34:53.880"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:34:53.886" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "ETag": "/legacy/source-bucket/ozone-test-3962561376/copytest/destination-077f9a81-1104-45b3-9f3a-314caca07269-110731099591999733-1",
        "LastModified": "2023-07-17T19:34:53.627Z"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:34:53.972" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:34:53.972" level="INFO">${output} = /legacy/source-bucket/ozone-test-3962561376/copytest/destination-077f9a81-1104-45b3-9f3a-314caca07269-110731099591999733-1</msg>
<status status="PASS" starttime="20230717 19:34:53.881" endtime="20230717 19:34:53.972"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:34:53.975" level="INFO">/legacy/source-bucket/ozone-test-3962561376/copytest/destination-077f9a81-1104-45b3-9f3a-314caca07269-110731099591999733-1</msg>
<status status="PASS" starttime="20230717 19:34:53.973" endtime="20230717 19:34:53.975"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:34:53.977" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:34:53.976" endtime="20230717 19:34:53.977"/>
</kw>
<msg timestamp="20230717 19:34:53.978" level="INFO">${eTag1} = /legacy/source-bucket/ozone-test-3962561376/copytest/destination-077f9a81-1104-45b3-9f3a-314caca07269-110731099591999733-1</msg>
<status status="PASS" starttime="20230717 19:34:53.880" endtime="20230717 19:34:53.978"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/copytest/destination --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1}]'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:34:53.990" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 077f9a81-1104-45b3-9f3a-314caca07269-110731099591999733 --bucket link --key ozone-test-3962561376/copytest/destination --multipart-upload 'Parts=[{ETag=/legacy/source-bucket/ozone-test-3962561376/copytest/destination-077f9a81-1104-45b3-9f3a-314caca07269-110731099591999733-1,PartNumber=1}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:34:55.354" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:34:55.354" level="INFO">${output} = {
    "Location": "link",
    "Bucket": "link",
    "Key": "ozone-test-3962561376/copytest/destination",
    "ETag": "5ae77c8ade7949d7fd0aa87432c00fee2df4db257c850cd5c9f95f05d88cdd5c"
}</msg>
<status status="PASS" starttime="20230717 19:34:53.984" endtime="20230717 19:34:55.355"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:34:55.358" level="INFO">{
    "Location": "link",
    "Bucket": "link",
    "Key": "ozone-test-3962561376/copytest/destination",
    "ETag": "5ae77c8ade7949d7fd0aa87432c00fee2df4db257c850cd5c9f95f05d88cdd5c"
}</msg>
<status status="PASS" starttime="20230717 19:34:55.356" endtime="20230717 19:34:55.358"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:34:55.363" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:34:55.361" endtime="20230717 19:34:55.364"/>
</kw>
<status status="PASS" starttime="20230717 19:34:53.983" endtime="20230717 19:34:55.366"/>
</kw>
<msg timestamp="20230717 19:34:55.366" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:34:53.982" endtime="20230717 19:34:55.366"/>
</kw>
<msg timestamp="20230717 19:34:55.366" level="INFO">${output} = {
    "Location": "link",
    "Bucket": "link",
    "Key": "ozone-test-3962561376/copytest/destination",
    "ETag": "5ae77c8ade7949d7fd0aa87432c00fee2df4db257c850cd5c9f95f05d88cdd5c"
}</msg>
<status status="PASS" starttime="20230717 19:34:53.980" endtime="20230717 19:34:55.366"/>
</kw>
<status status="PASS" starttime="20230717 19:34:53.978" endtime="20230717 19:34:55.368"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/copytest/destination /tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:34:55.390" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key ozone-test-3962561376/copytest/destination /tmp/part-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:34:57.668" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:34:57.668" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:34:55 GMT",
    "ContentLength": 5242880,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Ex...</msg>
<status status="PASS" starttime="20230717 19:34:55.377" endtime="20230717 19:34:57.668"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:34:57.671" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:34:55 GMT",
    "ContentLength": 5242880,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Mon, 17 Jul 2023 19:34:56 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230717 19:34:57.669" endtime="20230717 19:34:57.672"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:34:57.673" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:34:57.672" endtime="20230717 19:34:57.673"/>
</kw>
<status status="PASS" starttime="20230717 19:34:55.375" endtime="20230717 19:34:57.674"/>
</kw>
<msg timestamp="20230717 19:34:57.674" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:34:55.374" endtime="20230717 19:34:57.675"/>
</kw>
<msg timestamp="20230717 19:34:57.676" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:34:55 GMT",
    "ContentLength": 5242880,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Ex...</msg>
<status status="PASS" starttime="20230717 19:34:55.372" endtime="20230717 19:34:57.676"/>
</kw>
<status status="PASS" starttime="20230717 19:34:55.370" endtime="20230717 19:34:57.676"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part1</arg>
<arg>/tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:34:57.685" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:34:57.710" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:34:57.710" level="INFO">${output} = e0e6c0301d85f93d52a1afcfeb31acb1</msg>
<status status="PASS" starttime="20230717 19:34:57.680" endtime="20230717 19:34:57.710"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:34:57.713" level="INFO">e0e6c0301d85f93d52a1afcfeb31acb1</msg>
<status status="PASS" starttime="20230717 19:34:57.711" endtime="20230717 19:34:57.713"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:34:57.714" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:34:57.713" endtime="20230717 19:34:57.714"/>
</kw>
<status status="PASS" starttime="20230717 19:34:57.679" endtime="20230717 19:34:57.714"/>
</kw>
<msg timestamp="20230717 19:34:57.715" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:34:57.679" endtime="20230717 19:34:57.715"/>
</kw>
<msg timestamp="20230717 19:34:57.720" level="INFO">${checksumbefore} = e0e6c0301d85f93d52a1afcfeb31acb1</msg>
<status status="PASS" starttime="20230717 19:34:57.678" endtime="20230717 19:34:57.721"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:34:57.743" level="INFO">Running command 'md5sum /tmp/part-result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:34:57.775" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:34:57.776" level="INFO">${output} = e0e6c0301d85f93d52a1afcfeb31acb1</msg>
<status status="PASS" starttime="20230717 19:34:57.730" endtime="20230717 19:34:57.776"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:34:57.792" level="INFO">e0e6c0301d85f93d52a1afcfeb31acb1</msg>
<status status="PASS" starttime="20230717 19:34:57.788" endtime="20230717 19:34:57.792"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:34:57.794" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:34:57.793" endtime="20230717 19:34:57.796"/>
</kw>
<status status="PASS" starttime="20230717 19:34:57.724" endtime="20230717 19:34:57.796"/>
</kw>
<msg timestamp="20230717 19:34:57.796" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:34:57.723" endtime="20230717 19:34:57.797"/>
</kw>
<msg timestamp="20230717 19:34:57.798" level="INFO">${checksumafter} = e0e6c0301d85f93d52a1afcfeb31acb1</msg>
<status status="PASS" starttime="20230717 19:34:57.721" endtime="20230717 19:34:57.798"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230717 19:34:57.798" endtime="20230717 19:34:57.800"/>
</kw>
<status status="PASS" starttime="20230717 19:34:57.677" endtime="20230717 19:34:57.800"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:34:27.167" endtime="20230717 19:34:57.800"/>
</test>
<test id="s1-s9-s7-t12" name="Test Multipart Upload Put With Copy and range" line="275">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230717 19:34:57.811" level="INFO">${randStr} = 9630463461</msg>
<status status="PASS" starttime="20230717 19:34:57.811" endtime="20230717 19:34:57.811"/>
</kw>
<msg timestamp="20230717 19:34:57.811" level="INFO">${random} = ozone-test-9630463461</msg>
<status status="PASS" starttime="20230717 19:34:57.810" endtime="20230717 19:34:57.811"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230717 19:34:57.812" level="INFO">${PREFIX} = ozone-test-9630463461</msg>
<status status="PASS" starttime="20230717 19:34:57.812" endtime="20230717 19:34:57.812"/>
</kw>
<status status="PASS" starttime="20230717 19:34:57.805" endtime="20230717 19:34:57.812"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>10</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>10</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:34:57.835" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=10 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:34:58.002" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:34:58.002" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:34:57.823" endtime="20230717 19:34:58.002"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:34:58.004" level="INFO"/>
<status status="PASS" starttime="20230717 19:34:58.003" endtime="20230717 19:34:58.004"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:34:58.010" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:34:58.009" endtime="20230717 19:34:58.011"/>
</kw>
<status status="PASS" starttime="20230717 19:34:57.822" endtime="20230717 19:34:58.011"/>
</kw>
<msg timestamp="20230717 19:34:58.011" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:34:57.820" endtime="20230717 19:34:58.012"/>
</kw>
<status status="PASS" starttime="20230717 19:34:57.819" endtime="20230717 19:34:58.012"/>
</kw>
<status status="PASS" starttime="20230717 19:34:57.813" endtime="20230717 19:34:58.012"/>
</kw>
<status status="PASS" starttime="20230717 19:34:57.812" endtime="20230717 19:34:58.012"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/source --body /tmp/part1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:34:58.042" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket link --key ozone-test-9630463461/copyrange/source --body /tmp/part1 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:35:20.422" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:35:20.422" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:34:58.034" endtime="20230717 19:35:20.422"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:35:20.425" level="INFO"/>
<status status="PASS" starttime="20230717 19:35:20.423" endtime="20230717 19:35:20.425"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:35:20.428" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:35:20.426" endtime="20230717 19:35:20.428"/>
</kw>
<status status="PASS" starttime="20230717 19:34:58.031" endtime="20230717 19:35:20.428"/>
</kw>
<msg timestamp="20230717 19:35:20.429" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:34:58.030" endtime="20230717 19:35:20.429"/>
</kw>
<msg timestamp="20230717 19:35:20.429" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:34:58.023" endtime="20230717 19:35:20.429"/>
</kw>
<msg timestamp="20230717 19:35:20.429" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230717 19:34:58.012" endtime="20230717 19:35:20.429"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:35:20.441" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket link --key ozone-test-9630463461/copyrange/destination 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:35:21.713" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:35:21.713" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "ozone-test-9630463461/copyrange/destination",
    "UploadId": "4da74cb0-d226-4886-9b20-cc7aa8c551f2-110731101571776760"
}</msg>
<status status="PASS" starttime="20230717 19:35:20.433" endtime="20230717 19:35:21.713"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:35:21.722" level="INFO">{
    "Bucket": "link",
    "Key": "ozone-test-9630463461/copyrange/destination",
    "UploadId": "4da74cb0-d226-4886-9b20-cc7aa8c551f2-110731101571776760"
}</msg>
<status status="PASS" starttime="20230717 19:35:21.714" endtime="20230717 19:35:21.722"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:35:21.728" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:35:21.725" endtime="20230717 19:35:21.728"/>
</kw>
<status status="PASS" starttime="20230717 19:35:20.432" endtime="20230717 19:35:21.729"/>
</kw>
<msg timestamp="20230717 19:35:21.729" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:35:20.432" endtime="20230717 19:35:21.729"/>
</kw>
<msg timestamp="20230717 19:35:21.730" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "ozone-test-9630463461/copyrange/destination",
    "UploadId": "4da74cb0-d226-4886-9b20-cc7aa8c551f2-110731101571776760"
}</msg>
<status status="PASS" starttime="20230717 19:35:20.431" endtime="20230717 19:35:21.730"/>
</kw>
<msg timestamp="20230717 19:35:21.730" level="INFO">${result} = {
    "Bucket": "link",
    "Key": "ozone-test-9630463461/copyrange/destination",
    "UploadId": "4da74cb0-d226-4886-9b20-cc7aa8c551f2-110731101571776760"
}</msg>
<status status="PASS" starttime="20230717 19:35:20.430" endtime="20230717 19:35:21.730"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:35:21.747" level="INFO">Running command 'echo '{
    "Bucket": "link",
    "Key": "ozone-test-9630463461/copyrange/destination",
    "UploadId": "4da74cb0-d226-4886-9b20-cc7aa8c551f2-110731101571776760"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:35:21.856" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:35:21.856" level="INFO">${output} = 4da74cb0-d226-4886-9b20-cc7aa8c551f2-110731101571776760</msg>
<status status="PASS" starttime="20230717 19:35:21.732" endtime="20230717 19:35:21.856"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:35:21.858" level="INFO">4da74cb0-d226-4886-9b20-cc7aa8c551f2-110731101571776760</msg>
<status status="PASS" starttime="20230717 19:35:21.857" endtime="20230717 19:35:21.858"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:35:21.860" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:35:21.859" endtime="20230717 19:35:21.860"/>
</kw>
<msg timestamp="20230717 19:35:21.861" level="INFO">${uploadID} = 4da74cb0-d226-4886-9b20-cc7aa8c551f2-110731101571776760</msg>
<status status="PASS" starttime="20230717 19:35:21.731" endtime="20230717 19:35:21.861"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:35:21.863" endtime="20230717 19:35:21.866"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:35:21.869" endtime="20230717 19:35:21.873"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=0-10485757</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:35:21.889" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket link --key ozone-test-9630463461/copyrange/destination --upload-id 4da74cb0-d226-4886-9b20-cc7aa8c551f2-110731101571776760 --part-number 1 --copy-source link/ozone-test-9630463461/copyrange/source --copy-source-range bytes=0-10485757 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:35:24.616" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:35:24.616" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/legacy/source-bucket/ozone-test-9630463461/copyrange/destination-4da74cb0-d226-4886-9b20-cc7aa8c551f2-110731101571776760-1",
        "LastModified": "2023-0...</msg>
<status status="PASS" starttime="20230717 19:35:21.883" endtime="20230717 19:35:24.616"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:35:24.623" level="INFO">{
    "CopyPartResult": {
        "ETag": "/legacy/source-bucket/ozone-test-9630463461/copyrange/destination-4da74cb0-d226-4886-9b20-cc7aa8c551f2-110731101571776760-1",
        "LastModified": "2023-07-17T19:35:24.288Z"
    }
}</msg>
<status status="PASS" starttime="20230717 19:35:24.619" endtime="20230717 19:35:24.623"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:35:24.627" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:35:24.625" endtime="20230717 19:35:24.627"/>
</kw>
<status status="PASS" starttime="20230717 19:35:21.881" endtime="20230717 19:35:24.629"/>
</kw>
<msg timestamp="20230717 19:35:24.629" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:35:21.879" endtime="20230717 19:35:24.629"/>
</kw>
<msg timestamp="20230717 19:35:24.629" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/legacy/source-bucket/ozone-test-9630463461/copyrange/destination-4da74cb0-d226-4886-9b20-cc7aa8c551f2-110731101571776760-1",
        "LastModified": "2023-0...</msg>
<status status="PASS" starttime="20230717 19:35:21.877" endtime="20230717 19:35:24.629"/>
</kw>
<msg timestamp="20230717 19:35:24.633" level="INFO">${result} = {
    "CopyPartResult": {
        "ETag": "/legacy/source-bucket/ozone-test-9630463461/copyrange/destination-4da74cb0-d226-4886-9b20-cc7aa8c551f2-110731101571776760-1",
        "LastModified": "2023-0...</msg>
<status status="PASS" starttime="20230717 19:35:21.873" endtime="20230717 19:35:24.633"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:35:24.634" endtime="20230717 19:35:24.635"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:35:24.636" endtime="20230717 19:35:24.640"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:35:24.656" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "ETag": "/legacy/source-bucket/ozone-test-9630463461/copyrange/destination-4da74cb0-d226-4886-9b20-cc7aa8c551f2-110731101571776760-1",
        "LastModified": "2023-07-17T19:35:24.288Z"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:35:24.752" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:35:24.752" level="INFO">${output} = /legacy/source-bucket/ozone-test-9630463461/copyrange/destination-4da74cb0-d226-4886-9b20-cc7aa8c551f2-110731101571776760-1</msg>
<status status="PASS" starttime="20230717 19:35:24.644" endtime="20230717 19:35:24.753"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:35:24.756" level="INFO">/legacy/source-bucket/ozone-test-9630463461/copyrange/destination-4da74cb0-d226-4886-9b20-cc7aa8c551f2-110731101571776760-1</msg>
<status status="PASS" starttime="20230717 19:35:24.754" endtime="20230717 19:35:24.756"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:35:24.762" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:35:24.756" endtime="20230717 19:35:24.763"/>
</kw>
<msg timestamp="20230717 19:35:24.763" level="INFO">${eTag1} = /legacy/source-bucket/ozone-test-9630463461/copyrange/destination-4da74cb0-d226-4886-9b20-cc7aa8c551f2-110731101571776760-1</msg>
<status status="PASS" starttime="20230717 19:35:24.640" endtime="20230717 19:35:24.763"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 2 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=10485758-10485759</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:35:24.780" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket link --key ozone-test-9630463461/copyrange/destination --upload-id 4da74cb0-d226-4886-9b20-cc7aa8c551f2-110731101571776760 --part-number 2 --copy-source link/ozone-test-9630463461/copyrange/source --copy-source-range bytes=10485758-10485759 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:35:27.569" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:35:27.569" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/legacy/source-bucket/ozone-test-9630463461/copyrange/destination-4da74cb0-d226-4886-9b20-cc7aa8c551f2-110731101571776760-2",
        "LastModified": "2023-0...</msg>
<status status="PASS" starttime="20230717 19:35:24.772" endtime="20230717 19:35:27.569"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:35:27.571" level="INFO">{
    "CopyPartResult": {
        "ETag": "/legacy/source-bucket/ozone-test-9630463461/copyrange/destination-4da74cb0-d226-4886-9b20-cc7aa8c551f2-110731101571776760-2",
        "LastModified": "2023-07-17T19:35:27.144Z"
    }
}</msg>
<status status="PASS" starttime="20230717 19:35:27.570" endtime="20230717 19:35:27.571"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:35:27.578" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:35:27.571" endtime="20230717 19:35:27.578"/>
</kw>
<status status="PASS" starttime="20230717 19:35:24.769" endtime="20230717 19:35:27.579"/>
</kw>
<msg timestamp="20230717 19:35:27.579" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:35:24.769" endtime="20230717 19:35:27.579"/>
</kw>
<msg timestamp="20230717 19:35:27.579" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/legacy/source-bucket/ozone-test-9630463461/copyrange/destination-4da74cb0-d226-4886-9b20-cc7aa8c551f2-110731101571776760-2",
        "LastModified": "2023-0...</msg>
<status status="PASS" starttime="20230717 19:35:24.767" endtime="20230717 19:35:27.579"/>
</kw>
<msg timestamp="20230717 19:35:27.579" level="INFO">${result} = {
    "CopyPartResult": {
        "ETag": "/legacy/source-bucket/ozone-test-9630463461/copyrange/destination-4da74cb0-d226-4886-9b20-cc7aa8c551f2-110731101571776760-2",
        "LastModified": "2023-0...</msg>
<status status="PASS" starttime="20230717 19:35:24.764" endtime="20230717 19:35:27.579"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:35:27.580" endtime="20230717 19:35:27.580"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:35:27.580" endtime="20230717 19:35:27.588"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:35:27.602" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "ETag": "/legacy/source-bucket/ozone-test-9630463461/copyrange/destination-4da74cb0-d226-4886-9b20-cc7aa8c551f2-110731101571776760-2",
        "LastModified": "2023-07-17T19:35:27.144Z"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:35:27.868" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:35:27.869" level="INFO">${output} = /legacy/source-bucket/ozone-test-9630463461/copyrange/destination-4da74cb0-d226-4886-9b20-cc7aa8c551f2-110731101571776760-2</msg>
<status status="PASS" starttime="20230717 19:35:27.591" endtime="20230717 19:35:27.869"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:35:27.887" level="INFO">/legacy/source-bucket/ozone-test-9630463461/copyrange/destination-4da74cb0-d226-4886-9b20-cc7aa8c551f2-110731101571776760-2</msg>
<status status="PASS" starttime="20230717 19:35:27.878" endtime="20230717 19:35:27.888"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:35:27.896" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:35:27.892" endtime="20230717 19:35:27.896"/>
</kw>
<msg timestamp="20230717 19:35:27.900" level="INFO">${eTag2} = /legacy/source-bucket/ozone-test-9630463461/copyrange/destination-4da74cb0-d226-4886-9b20-cc7aa8c551f2-110731101571776760-2</msg>
<status status="PASS" starttime="20230717 19:35:27.589" endtime="20230717 19:35:27.900"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=${eTag2},PartNumber=2}]'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:35:27.935" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 4da74cb0-d226-4886-9b20-cc7aa8c551f2-110731101571776760 --bucket link --key ozone-test-9630463461/copyrange/destination --multipart-upload 'Parts=[{ETag=/legacy/source-bucket/ozone-test-9630463461/copyrange/destination-4da74cb0-d226-4886-9b20-cc7aa8c551f2-110731101571776760-1,PartNumber=1},{ETag=/legacy/source-bucket/ozone-test-9630463461/copyrange/destination-4da74cb0-d226-4886-9b20-cc7aa8c551f2-110731101571776760-2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:35:30.057" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:35:30.057" level="INFO">${output} = {
    "Location": "link",
    "Bucket": "link",
    "Key": "ozone-test-9630463461/copyrange/destination",
    "ETag": "38f2fff897715404b79481a8ea4ef2056e55939928f86c95b7ada843bdddd913"
}</msg>
<status status="PASS" starttime="20230717 19:35:27.921" endtime="20230717 19:35:30.057"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:35:30.061" level="INFO">{
    "Location": "link",
    "Bucket": "link",
    "Key": "ozone-test-9630463461/copyrange/destination",
    "ETag": "38f2fff897715404b79481a8ea4ef2056e55939928f86c95b7ada843bdddd913"
}</msg>
<status status="PASS" starttime="20230717 19:35:30.059" endtime="20230717 19:35:30.062"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:35:30.066" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:35:30.065" endtime="20230717 19:35:30.066"/>
</kw>
<status status="PASS" starttime="20230717 19:35:27.917" endtime="20230717 19:35:30.071"/>
</kw>
<msg timestamp="20230717 19:35:30.071" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:35:27.913" endtime="20230717 19:35:30.072"/>
</kw>
<msg timestamp="20230717 19:35:30.072" level="INFO">${output} = {
    "Location": "link",
    "Bucket": "link",
    "Key": "ozone-test-9630463461/copyrange/destination",
    "ETag": "38f2fff897715404b79481a8ea4ef2056e55939928f86c95b7ada843bdddd913"
}</msg>
<status status="PASS" starttime="20230717 19:35:27.909" endtime="20230717 19:35:30.073"/>
</kw>
<status status="PASS" starttime="20230717 19:35:27.903" endtime="20230717 19:35:30.073"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination /tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:35:30.092" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key ozone-test-9630463461/copyrange/destination /tmp/part-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:35:32.604" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:35:32.605" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:35:29 GMT",
    "ContentLength": 10485760,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "E...</msg>
<status status="PASS" starttime="20230717 19:35:30.085" endtime="20230717 19:35:32.605"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:35:32.608" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:35:29 GMT",
    "ContentLength": 10485760,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Mon, 17 Jul 2023 19:35:31 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230717 19:35:32.606" endtime="20230717 19:35:32.608"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:35:32.609" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:35:32.608" endtime="20230717 19:35:32.609"/>
</kw>
<status status="PASS" starttime="20230717 19:35:30.082" endtime="20230717 19:35:32.609"/>
</kw>
<msg timestamp="20230717 19:35:32.610" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:35:30.081" endtime="20230717 19:35:32.610"/>
</kw>
<msg timestamp="20230717 19:35:32.610" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:35:29 GMT",
    "ContentLength": 10485760,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "E...</msg>
<status status="PASS" starttime="20230717 19:35:30.079" endtime="20230717 19:35:32.610"/>
</kw>
<status status="PASS" starttime="20230717 19:35:30.077" endtime="20230717 19:35:32.611"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part1</arg>
<arg>/tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:35:32.622" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:35:32.715" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:35:32.717" level="INFO">${output} = 88cc0990a874527025111785a6d11773</msg>
<status status="PASS" starttime="20230717 19:35:32.615" endtime="20230717 19:35:32.717"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:35:32.721" level="INFO">88cc0990a874527025111785a6d11773</msg>
<status status="PASS" starttime="20230717 19:35:32.719" endtime="20230717 19:35:32.722"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:35:32.727" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:35:32.722" endtime="20230717 19:35:32.728"/>
</kw>
<status status="PASS" starttime="20230717 19:35:32.614" endtime="20230717 19:35:32.728"/>
</kw>
<msg timestamp="20230717 19:35:32.728" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:35:32.613" endtime="20230717 19:35:32.728"/>
</kw>
<msg timestamp="20230717 19:35:32.730" level="INFO">${checksumbefore} = 88cc0990a874527025111785a6d11773</msg>
<status status="PASS" starttime="20230717 19:35:32.612" endtime="20230717 19:35:32.730"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:35:32.745" level="INFO">Running command 'md5sum /tmp/part-result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:35:32.806" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:35:32.806" level="INFO">${output} = 88cc0990a874527025111785a6d11773</msg>
<status status="PASS" starttime="20230717 19:35:32.738" endtime="20230717 19:35:32.806"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:35:32.809" level="INFO">88cc0990a874527025111785a6d11773</msg>
<status status="PASS" starttime="20230717 19:35:32.807" endtime="20230717 19:35:32.809"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:35:32.810" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:35:32.809" endtime="20230717 19:35:32.810"/>
</kw>
<status status="PASS" starttime="20230717 19:35:32.736" endtime="20230717 19:35:32.810"/>
</kw>
<msg timestamp="20230717 19:35:32.810" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:35:32.735" endtime="20230717 19:35:32.811"/>
</kw>
<msg timestamp="20230717 19:35:32.812" level="INFO">${checksumafter} = 88cc0990a874527025111785a6d11773</msg>
<status status="PASS" starttime="20230717 19:35:32.732" endtime="20230717 19:35:32.812"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230717 19:35:32.812" endtime="20230717 19:35:32.815"/>
</kw>
<status status="PASS" starttime="20230717 19:35:32.611" endtime="20230717 19:35:32.815"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:34:57.802" endtime="20230717 19:35:32.815"/>
</test>
<test id="s1-s9-s7-t13" name="Test Multipart Upload Put With Copy and range with IfModifiedSince" line="302">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230717 19:35:32.827" level="INFO">${randStr} = 5534145072</msg>
<status status="PASS" starttime="20230717 19:35:32.824" endtime="20230717 19:35:32.827"/>
</kw>
<msg timestamp="20230717 19:35:32.827" level="INFO">${random} = ozone-test-5534145072</msg>
<status status="PASS" starttime="20230717 19:35:32.822" endtime="20230717 19:35:32.827"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230717 19:35:32.830" level="INFO">${PREFIX} = ozone-test-5534145072</msg>
<status status="PASS" starttime="20230717 19:35:32.829" endtime="20230717 19:35:32.830"/>
</kw>
<status status="PASS" starttime="20230717 19:35:32.822" endtime="20230717 19:35:32.830"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>10</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>10</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:35:32.851" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=10 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:35:32.994" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:35:32.994" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:35:32.835" endtime="20230717 19:35:32.994"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:35:32.996" level="INFO"/>
<status status="PASS" starttime="20230717 19:35:32.995" endtime="20230717 19:35:32.996"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:35:32.997" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:35:32.996" endtime="20230717 19:35:32.997"/>
</kw>
<status status="PASS" starttime="20230717 19:35:32.835" endtime="20230717 19:35:32.997"/>
</kw>
<msg timestamp="20230717 19:35:32.997" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:35:32.834" endtime="20230717 19:35:32.998"/>
</kw>
<status status="PASS" starttime="20230717 19:35:32.834" endtime="20230717 19:35:32.998"/>
</kw>
<status status="PASS" starttime="20230717 19:35:32.831" endtime="20230717 19:35:32.998"/>
</kw>
<status status="PASS" starttime="20230717 19:35:32.830" endtime="20230717 19:35:32.998"/>
</kw>
<kw name="Get Current Date" library="DateTime">
<var>${curDate}</var>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20230717 19:35:32.999" level="INFO">${curDate} = 2023-07-17 19:35:32.999</msg>
<status status="PASS" starttime="20230717 19:35:32.998" endtime="20230717 19:35:32.999"/>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<var>${beforeCreate}</var>
<arg>${curDate}</arg>
<arg>1 day</arg>
<doc>Subtracts time from date and returns the resulting date.</doc>
<msg timestamp="20230717 19:35:33.017" level="INFO">${beforeCreate} = 2023-07-16 19:35:32.999</msg>
<status status="PASS" starttime="20230717 19:35:33.000" endtime="20230717 19:35:33.017"/>
</kw>
<kw name="Add Time To Date" library="DateTime">
<var>${tomorrow}</var>
<arg>${curDate}</arg>
<arg>1 day</arg>
<doc>Adds time to date and returns the resulting date.</doc>
<msg timestamp="20230717 19:35:33.023" level="INFO">${tomorrow} = 2023-07-18 19:35:32.999</msg>
<status status="PASS" starttime="20230717 19:35:33.017" endtime="20230717 19:35:33.023"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/source --body /tmp/part1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:35:33.035" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket link --key ozone-test-5534145072/copyrange/source --body /tmp/part1 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:35:55.073" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:35:55.073" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:35:33.030" endtime="20230717 19:35:55.073"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:35:55.078" level="INFO"/>
<status status="PASS" starttime="20230717 19:35:55.075" endtime="20230717 19:35:55.078"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:35:55.079" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:35:55.079" endtime="20230717 19:35:55.079"/>
</kw>
<status status="PASS" starttime="20230717 19:35:33.028" endtime="20230717 19:35:55.080"/>
</kw>
<msg timestamp="20230717 19:35:55.080" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:35:33.026" endtime="20230717 19:35:55.080"/>
</kw>
<msg timestamp="20230717 19:35:55.081" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:35:33.025" endtime="20230717 19:35:55.081"/>
</kw>
<msg timestamp="20230717 19:35:55.081" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230717 19:35:33.023" endtime="20230717 19:35:55.081"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:35:55.102" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket link --key ozone-test-5534145072/copyrange/destination 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:35:56.673" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:35:56.675" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "ozone-test-5534145072/copyrange/destination",
    "UploadId": "f5c50458-67ca-45c1-af23-26c46c3c371a-110731103856820476"
}</msg>
<status status="PASS" starttime="20230717 19:35:55.095" endtime="20230717 19:35:56.675"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:35:56.680" level="INFO">{
    "Bucket": "link",
    "Key": "ozone-test-5534145072/copyrange/destination",
    "UploadId": "f5c50458-67ca-45c1-af23-26c46c3c371a-110731103856820476"
}</msg>
<status status="PASS" starttime="20230717 19:35:56.677" endtime="20230717 19:35:56.680"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:35:56.682" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:35:56.681" endtime="20230717 19:35:56.683"/>
</kw>
<status status="PASS" starttime="20230717 19:35:55.094" endtime="20230717 19:35:56.685"/>
</kw>
<msg timestamp="20230717 19:35:56.685" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:35:55.087" endtime="20230717 19:35:56.686"/>
</kw>
<msg timestamp="20230717 19:35:56.687" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "ozone-test-5534145072/copyrange/destination",
    "UploadId": "f5c50458-67ca-45c1-af23-26c46c3c371a-110731103856820476"
}</msg>
<status status="PASS" starttime="20230717 19:35:55.085" endtime="20230717 19:35:56.687"/>
</kw>
<msg timestamp="20230717 19:35:56.687" level="INFO">${result} = {
    "Bucket": "link",
    "Key": "ozone-test-5534145072/copyrange/destination",
    "UploadId": "f5c50458-67ca-45c1-af23-26c46c3c371a-110731103856820476"
}</msg>
<status status="PASS" starttime="20230717 19:35:55.082" endtime="20230717 19:35:56.687"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:35:56.702" level="INFO">Running command 'echo '{
    "Bucket": "link",
    "Key": "ozone-test-5534145072/copyrange/destination",
    "UploadId": "f5c50458-67ca-45c1-af23-26c46c3c371a-110731103856820476"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:35:56.804" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:35:56.805" level="INFO">${output} = f5c50458-67ca-45c1-af23-26c46c3c371a-110731103856820476</msg>
<status status="PASS" starttime="20230717 19:35:56.690" endtime="20230717 19:35:56.805"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:35:56.807" level="INFO">f5c50458-67ca-45c1-af23-26c46c3c371a-110731103856820476</msg>
<status status="PASS" starttime="20230717 19:35:56.806" endtime="20230717 19:35:56.807"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:35:56.808" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:35:56.807" endtime="20230717 19:35:56.808"/>
</kw>
<msg timestamp="20230717 19:35:56.808" level="INFO">${uploadID} = f5c50458-67ca-45c1-af23-26c46c3c371a-110731103856820476</msg>
<status status="PASS" starttime="20230717 19:35:56.689" endtime="20230717 19:35:56.809"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:35:56.809" endtime="20230717 19:35:56.810"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:35:56.810" endtime="20230717 19:35:56.811"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/source</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:35:56.821" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket link --key ozone-test-5534145072/copyrange/source 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:35:58.251" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:35:58.252" level="INFO">${output} = {
    "LastModified": "Mon, 17 Jul 2023 19:35:54 GMT",
    "ContentLength": 10485760,
    "ETag": "2023-07-17T19:35:54.848Z",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
...</msg>
<status status="PASS" starttime="20230717 19:35:56.814" endtime="20230717 19:35:58.252"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:35:58.258" level="INFO">{
    "LastModified": "Mon, 17 Jul 2023 19:35:54 GMT",
    "ContentLength": 10485760,
    "ETag": "2023-07-17T19:35:54.848Z",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Mon, 17 Jul 2023 19:35:58 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230717 19:35:58.255" endtime="20230717 19:35:58.258"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:35:58.260" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:35:58.259" endtime="20230717 19:35:58.260"/>
</kw>
<status status="PASS" starttime="20230717 19:35:56.813" endtime="20230717 19:35:58.262"/>
</kw>
<msg timestamp="20230717 19:35:58.262" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:35:56.813" endtime="20230717 19:35:58.263"/>
</kw>
<msg timestamp="20230717 19:35:58.263" level="INFO">${output} = {
    "LastModified": "Mon, 17 Jul 2023 19:35:54 GMT",
    "ContentLength": 10485760,
    "ETag": "2023-07-17T19:35:54.848Z",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
...</msg>
<status status="PASS" starttime="20230717 19:35:56.812" endtime="20230717 19:35:58.263"/>
</kw>
<msg timestamp="20230717 19:35:58.263" level="INFO">${result} = {
    "LastModified": "Mon, 17 Jul 2023 19:35:54 GMT",
    "ContentLength": 10485760,
    "ETag": "2023-07-17T19:35:54.848Z",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
...</msg>
<status status="PASS" starttime="20230717 19:35:56.811" endtime="20230717 19:35:58.263"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${lastModified}</var>
<arg>echo '${result}' | jq -r '.LastModified'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:35:58.277" level="INFO">Running command 'echo '{
    "LastModified": "Mon, 17 Jul 2023 19:35:54 GMT",
    "ContentLength": 10485760,
    "ETag": "2023-07-17T19:35:54.848Z",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Mon, 17 Jul 2023 19:35:58 GMT",
    "Metadata": {}
}' | jq -r '.LastModified' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:35:58.406" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:35:58.406" level="INFO">${output} = Mon, 17 Jul 2023 19:35:54 GMT</msg>
<status status="PASS" starttime="20230717 19:35:58.267" endtime="20230717 19:35:58.408"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:35:58.412" level="INFO">Mon, 17 Jul 2023 19:35:54 GMT</msg>
<status status="PASS" starttime="20230717 19:35:58.408" endtime="20230717 19:35:58.412"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:35:58.414" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:35:58.412" endtime="20230717 19:35:58.414"/>
</kw>
<msg timestamp="20230717 19:35:58.416" level="INFO">${lastModified} = Mon, 17 Jul 2023 19:35:54 GMT</msg>
<status status="PASS" starttime="20230717 19:35:58.265" endtime="20230717 19:35:58.416"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${LastModified}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:35:58.416" endtime="20230717 19:35:58.418"/>
</kw>
<kw name="Convert Date" library="DateTime">
<var>${lmDate}</var>
<arg>${lastModified}</arg>
<arg>date_format=%a, %d %b %Y %H:%M:%S %Z</arg>
<doc>Converts between supported `date formats`.</doc>
<msg timestamp="20230717 19:35:58.432" level="INFO">${lmDate} = 2023-07-17 19:35:54.000</msg>
<status status="PASS" starttime="20230717 19:35:58.419" endtime="20230717 19:35:58.433"/>
</kw>
<kw name="Add Time To Date" library="DateTime">
<var>${afterCreate}</var>
<arg>${lmDate}</arg>
<arg>3 seconds</arg>
<doc>Adds time to date and returns the resulting date.</doc>
<msg timestamp="20230717 19:35:58.436" level="INFO">${afterCreate} = 2023-07-17 19:35:57.000</msg>
<status status="PASS" starttime="20230717 19:35:58.434" endtime="20230717 19:35:58.437"/>
</kw>
<kw name="Wait Til Date Past">
<arg>${afterCreate}</arg>
<kw name="Get Current Date" library="DateTime">
<var>${latestDate}</var>
<arg>UTC</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20230717 19:35:58.443" level="INFO">${latestDate} = 2023-07-17 19:35:58.443</msg>
<status status="PASS" starttime="20230717 19:35:58.442" endtime="20230717 19:35:58.443"/>
</kw>
<kw name="Subtract Date From Date" library="DateTime">
<var>${sleepSeconds}</var>
<arg>${date}</arg>
<arg>${latestDate}</arg>
<doc>Subtracts date from another date and returns time between.</doc>
<msg timestamp="20230717 19:35:58.445" level="INFO">${sleepSeconds} = -1.443</msg>
<status status="PASS" starttime="20230717 19:35:58.444" endtime="20230717 19:35:58.448"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${sleepSeconds} &gt; 0</arg>
<arg>Sleep</arg>
<arg>${sleepSeconds}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230717 19:35:58.448" endtime="20230717 19:35:58.449"/>
</kw>
<status status="PASS" starttime="20230717 19:35:58.439" endtime="20230717 19:35:58.451"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '${afterCreate}'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:35:58.470" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket link --key ozone-test-5534145072/copyrange/destination --upload-id f5c50458-67ca-45c1-af23-26c46c3c371a-110731103856820476 --part-number 1 --copy-source link/ozone-test-5534145072/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '2023-07-17 19:35:57.000' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:36:00.595" level="INFO">${rc} = 255</msg>
<msg timestamp="20230717 19:36:00.595" level="INFO">${output} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20230717 19:35:58.457" endtime="20230717 19:36:00.595"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:36:00.596" level="INFO">
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20230717 19:36:00.595" endtime="20230717 19:36:00.597"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:36:00.599" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:36:00.598" endtime="20230717 19:36:00.602"/>
</kw>
<msg timestamp="20230717 19:36:00.603" level="INFO">${output} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20230717 19:35:58.454" endtime="20230717 19:36:00.603"/>
</kw>
<msg timestamp="20230717 19:36:00.603" level="INFO">${result} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20230717 19:35:58.451" endtime="20230717 19:36:00.603"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PreconditionFailed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:36:00.606" endtime="20230717 19:36:00.607"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 2 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=10485758-10485759 --copy-source-if-unmodified-since '${beforeCreate}'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:36:00.615" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket link --key ozone-test-5534145072/copyrange/destination --upload-id f5c50458-67ca-45c1-af23-26c46c3c371a-110731103856820476 --part-number 2 --copy-source link/ozone-test-5534145072/copyrange/source --copy-source-range bytes=10485758-10485759 --copy-source-if-unmodified-since '2023-07-16 19:35:32.999' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:36:02.414" level="INFO">${rc} = 255</msg>
<msg timestamp="20230717 19:36:02.414" level="INFO">${output} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20230717 19:36:00.611" endtime="20230717 19:36:02.415"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:36:02.419" level="INFO">
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20230717 19:36:02.416" endtime="20230717 19:36:02.419"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:36:02.422" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:36:02.419" endtime="20230717 19:36:02.422"/>
</kw>
<msg timestamp="20230717 19:36:02.423" level="INFO">${output} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20230717 19:36:00.610" endtime="20230717 19:36:02.423"/>
</kw>
<msg timestamp="20230717 19:36:02.424" level="INFO">${result} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20230717 19:36:00.608" endtime="20230717 19:36:02.424"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PreconditionFailed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:36:02.424" endtime="20230717 19:36:02.428"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '${beforeCreate}'</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:36:02.438" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket link --key ozone-test-5534145072/copyrange/destination --upload-id f5c50458-67ca-45c1-af23-26c46c3c371a-110731103856820476 --part-number 1 --copy-source link/ozone-test-5534145072/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '2023-07-16 19:35:32.999' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:36:05.241" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:36:05.241" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/legacy/source-bucket/ozone-test-5534145072/copyrange/destination-f5c50458-67ca-45c1-af23-26c46c3c371a-110731103856820476-1",
        "LastModified": "2023-0...</msg>
<status status="PASS" starttime="20230717 19:36:02.432" endtime="20230717 19:36:05.241"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:36:05.244" level="INFO">{
    "CopyPartResult": {
        "ETag": "/legacy/source-bucket/ozone-test-5534145072/copyrange/destination-f5c50458-67ca-45c1-af23-26c46c3c371a-110731103856820476-1",
        "LastModified": "2023-07-17T19:36:04.962Z"
    }
}</msg>
<status status="PASS" starttime="20230717 19:36:05.242" endtime="20230717 19:36:05.244"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:36:05.246" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:36:05.245" endtime="20230717 19:36:05.246"/>
</kw>
<msg timestamp="20230717 19:36:05.247" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/legacy/source-bucket/ozone-test-5534145072/copyrange/destination-f5c50458-67ca-45c1-af23-26c46c3c371a-110731103856820476-1",
        "LastModified": "2023-0...</msg>
<status status="PASS" starttime="20230717 19:36:02.430" endtime="20230717 19:36:05.247"/>
</kw>
<msg timestamp="20230717 19:36:05.247" level="INFO">${result} = {
    "CopyPartResult": {
        "ETag": "/legacy/source-bucket/ozone-test-5534145072/copyrange/destination-f5c50458-67ca-45c1-af23-26c46c3c371a-110731103856820476-1",
        "LastModified": "2023-0...</msg>
<status status="PASS" starttime="20230717 19:36:02.428" endtime="20230717 19:36:05.247"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:36:05.247" endtime="20230717 19:36:05.251"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:36:05.251" endtime="20230717 19:36:05.253"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:36:05.263" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "ETag": "/legacy/source-bucket/ozone-test-5534145072/copyrange/destination-f5c50458-67ca-45c1-af23-26c46c3c371a-110731103856820476-1",
        "LastModified": "2023-07-17T19:36:04.962Z"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:36:05.403" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:36:05.403" level="INFO">${output} = /legacy/source-bucket/ozone-test-5534145072/copyrange/destination-f5c50458-67ca-45c1-af23-26c46c3c371a-110731103856820476-1</msg>
<status status="PASS" starttime="20230717 19:36:05.254" endtime="20230717 19:36:05.403"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:36:05.404" level="INFO">/legacy/source-bucket/ozone-test-5534145072/copyrange/destination-f5c50458-67ca-45c1-af23-26c46c3c371a-110731103856820476-1</msg>
<status status="PASS" starttime="20230717 19:36:05.404" endtime="20230717 19:36:05.404"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:36:05.405" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:36:05.405" endtime="20230717 19:36:05.405"/>
</kw>
<msg timestamp="20230717 19:36:05.410" level="INFO">${eTag1} = /legacy/source-bucket/ozone-test-5534145072/copyrange/destination-f5c50458-67ca-45c1-af23-26c46c3c371a-110731103856820476-1</msg>
<status status="PASS" starttime="20230717 19:36:05.253" endtime="20230717 19:36:05.410"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 2 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=10485758-10485759 --copy-source-if-unmodified-since '${afterCreate}'</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:36:05.417" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket link --key ozone-test-5534145072/copyrange/destination --upload-id f5c50458-67ca-45c1-af23-26c46c3c371a-110731103856820476 --part-number 2 --copy-source link/ozone-test-5534145072/copyrange/source --copy-source-range bytes=10485758-10485759 --copy-source-if-unmodified-since '2023-07-17 19:35:57.000' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:36:07.542" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:36:07.542" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/legacy/source-bucket/ozone-test-5534145072/copyrange/destination-f5c50458-67ca-45c1-af23-26c46c3c371a-110731103856820476-2",
        "LastModified": "2023-0...</msg>
<status status="PASS" starttime="20230717 19:36:05.413" endtime="20230717 19:36:07.542"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:36:07.543" level="INFO">{
    "CopyPartResult": {
        "ETag": "/legacy/source-bucket/ozone-test-5534145072/copyrange/destination-f5c50458-67ca-45c1-af23-26c46c3c371a-110731103856820476-2",
        "LastModified": "2023-07-17T19:36:07.260Z"
    }
}</msg>
<status status="PASS" starttime="20230717 19:36:07.542" endtime="20230717 19:36:07.543"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:36:07.544" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:36:07.543" endtime="20230717 19:36:07.544"/>
</kw>
<msg timestamp="20230717 19:36:07.544" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/legacy/source-bucket/ozone-test-5534145072/copyrange/destination-f5c50458-67ca-45c1-af23-26c46c3c371a-110731103856820476-2",
        "LastModified": "2023-0...</msg>
<status status="PASS" starttime="20230717 19:36:05.412" endtime="20230717 19:36:07.544"/>
</kw>
<msg timestamp="20230717 19:36:07.545" level="INFO">${result} = {
    "CopyPartResult": {
        "ETag": "/legacy/source-bucket/ozone-test-5534145072/copyrange/destination-f5c50458-67ca-45c1-af23-26c46c3c371a-110731103856820476-2",
        "LastModified": "2023-0...</msg>
<status status="PASS" starttime="20230717 19:36:05.410" endtime="20230717 19:36:07.545"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:36:07.545" endtime="20230717 19:36:07.546"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:36:07.546" endtime="20230717 19:36:07.546"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:36:07.553" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "ETag": "/legacy/source-bucket/ozone-test-5534145072/copyrange/destination-f5c50458-67ca-45c1-af23-26c46c3c371a-110731103856820476-2",
        "LastModified": "2023-07-17T19:36:07.260Z"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:36:07.646" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:36:07.646" level="INFO">${output} = /legacy/source-bucket/ozone-test-5534145072/copyrange/destination-f5c50458-67ca-45c1-af23-26c46c3c371a-110731103856820476-2</msg>
<status status="PASS" starttime="20230717 19:36:07.547" endtime="20230717 19:36:07.646"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:36:07.649" level="INFO">/legacy/source-bucket/ozone-test-5534145072/copyrange/destination-f5c50458-67ca-45c1-af23-26c46c3c371a-110731103856820476-2</msg>
<status status="PASS" starttime="20230717 19:36:07.648" endtime="20230717 19:36:07.650"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:36:07.651" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:36:07.650" endtime="20230717 19:36:07.651"/>
</kw>
<msg timestamp="20230717 19:36:07.652" level="INFO">${eTag2} = /legacy/source-bucket/ozone-test-5534145072/copyrange/destination-f5c50458-67ca-45c1-af23-26c46c3c371a-110731103856820476-2</msg>
<status status="PASS" starttime="20230717 19:36:07.546" endtime="20230717 19:36:07.652"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '${tomorrow}'</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:36:07.662" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket link --key ozone-test-5534145072/copyrange/destination --upload-id f5c50458-67ca-45c1-af23-26c46c3c371a-110731103856820476 --part-number 1 --copy-source link/ozone-test-5534145072/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '2023-07-18 19:35:32.999' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:36:09.742" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:36:09.743" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/legacy/source-bucket/ozone-test-5534145072/copyrange/destination-f5c50458-67ca-45c1-af23-26c46c3c371a-110731103856820476-1",
        "LastModified": "2023-0...</msg>
<status status="PASS" starttime="20230717 19:36:07.655" endtime="20230717 19:36:09.743"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:36:09.744" level="INFO">{
    "CopyPartResult": {
        "ETag": "/legacy/source-bucket/ozone-test-5534145072/copyrange/destination-f5c50458-67ca-45c1-af23-26c46c3c371a-110731103856820476-1",
        "LastModified": "2023-07-17T19:36:09.572Z"
    }
}</msg>
<status status="PASS" starttime="20230717 19:36:09.743" endtime="20230717 19:36:09.744"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:36:09.747" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:36:09.744" endtime="20230717 19:36:09.751"/>
</kw>
<msg timestamp="20230717 19:36:09.752" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/legacy/source-bucket/ozone-test-5534145072/copyrange/destination-f5c50458-67ca-45c1-af23-26c46c3c371a-110731103856820476-1",
        "LastModified": "2023-0...</msg>
<status status="PASS" starttime="20230717 19:36:07.654" endtime="20230717 19:36:09.752"/>
</kw>
<msg timestamp="20230717 19:36:09.752" level="INFO">${result} = {
    "CopyPartResult": {
        "ETag": "/legacy/source-bucket/ozone-test-5534145072/copyrange/destination-f5c50458-67ca-45c1-af23-26c46c3c371a-110731103856820476-1",
        "LastModified": "2023-0...</msg>
<status status="PASS" starttime="20230717 19:36:07.652" endtime="20230717 19:36:09.752"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:36:09.755" endtime="20230717 19:36:09.756"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:36:09.756" endtime="20230717 19:36:09.758"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:36:09.771" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "ETag": "/legacy/source-bucket/ozone-test-5534145072/copyrange/destination-f5c50458-67ca-45c1-af23-26c46c3c371a-110731103856820476-1",
        "LastModified": "2023-07-17T19:36:09.572Z"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:36:09.854" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:36:09.855" level="INFO">${output} = /legacy/source-bucket/ozone-test-5534145072/copyrange/destination-f5c50458-67ca-45c1-af23-26c46c3c371a-110731103856820476-1</msg>
<status status="PASS" starttime="20230717 19:36:09.763" endtime="20230717 19:36:09.855"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:36:09.858" level="INFO">/legacy/source-bucket/ozone-test-5534145072/copyrange/destination-f5c50458-67ca-45c1-af23-26c46c3c371a-110731103856820476-1</msg>
<status status="PASS" starttime="20230717 19:36:09.857" endtime="20230717 19:36:09.860"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:36:09.862" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:36:09.860" endtime="20230717 19:36:09.862"/>
</kw>
<msg timestamp="20230717 19:36:09.863" level="INFO">${eTag1} = /legacy/source-bucket/ozone-test-5534145072/copyrange/destination-f5c50458-67ca-45c1-af23-26c46c3c371a-110731103856820476-1</msg>
<status status="PASS" starttime="20230717 19:36:09.758" endtime="20230717 19:36:09.863"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=${eTag2},PartNumber=2}]'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:36:09.885" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id f5c50458-67ca-45c1-af23-26c46c3c371a-110731103856820476 --bucket link --key ozone-test-5534145072/copyrange/destination --multipart-upload 'Parts=[{ETag=/legacy/source-bucket/ozone-test-5534145072/copyrange/destination-f5c50458-67ca-45c1-af23-26c46c3c371a-110731103856820476-1,PartNumber=1},{ETag=/legacy/source-bucket/ozone-test-5534145072/copyrange/destination-f5c50458-67ca-45c1-af23-26c46c3c371a-110731103856820476-2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:36:11.187" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:36:11.188" level="INFO">${output} = {
    "Location": "link",
    "Bucket": "link",
    "Key": "ozone-test-5534145072/copyrange/destination",
    "ETag": "f400186fbaa12b899d67a3df5f479fba7a8962636cc177838bebef1adb5efa2f"
}</msg>
<status status="PASS" starttime="20230717 19:36:09.876" endtime="20230717 19:36:11.188"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:36:11.190" level="INFO">{
    "Location": "link",
    "Bucket": "link",
    "Key": "ozone-test-5534145072/copyrange/destination",
    "ETag": "f400186fbaa12b899d67a3df5f479fba7a8962636cc177838bebef1adb5efa2f"
}</msg>
<status status="PASS" starttime="20230717 19:36:11.189" endtime="20230717 19:36:11.191"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:36:11.194" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:36:11.191" endtime="20230717 19:36:11.194"/>
</kw>
<status status="PASS" starttime="20230717 19:36:09.875" endtime="20230717 19:36:11.198"/>
</kw>
<msg timestamp="20230717 19:36:11.198" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:36:09.873" endtime="20230717 19:36:11.198"/>
</kw>
<msg timestamp="20230717 19:36:11.199" level="INFO">${output} = {
    "Location": "link",
    "Bucket": "link",
    "Key": "ozone-test-5534145072/copyrange/destination",
    "ETag": "f400186fbaa12b899d67a3df5f479fba7a8962636cc177838bebef1adb5efa2f"
}</msg>
<status status="PASS" starttime="20230717 19:36:09.866" endtime="20230717 19:36:11.199"/>
</kw>
<status status="PASS" starttime="20230717 19:36:09.863" endtime="20230717 19:36:11.199"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination /tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:36:11.209" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key ozone-test-5534145072/copyrange/destination /tmp/part-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:36:14.303" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:36:14.304" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:36:10 GMT",
    "ContentLength": 10485760,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "E...</msg>
<status status="PASS" starttime="20230717 19:36:11.201" endtime="20230717 19:36:14.304"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:36:14.305" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:36:10 GMT",
    "ContentLength": 10485760,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Mon, 17 Jul 2023 19:36:12 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230717 19:36:14.304" endtime="20230717 19:36:14.306"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:36:14.308" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:36:14.306" endtime="20230717 19:36:14.308"/>
</kw>
<status status="PASS" starttime="20230717 19:36:11.201" endtime="20230717 19:36:14.308"/>
</kw>
<msg timestamp="20230717 19:36:14.310" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:36:11.200" endtime="20230717 19:36:14.310"/>
</kw>
<msg timestamp="20230717 19:36:14.310" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:36:10 GMT",
    "ContentLength": 10485760,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "E...</msg>
<status status="PASS" starttime="20230717 19:36:11.200" endtime="20230717 19:36:14.310"/>
</kw>
<status status="PASS" starttime="20230717 19:36:11.199" endtime="20230717 19:36:14.310"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part1</arg>
<arg>/tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:36:14.319" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:36:14.377" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:36:14.378" level="INFO">${output} = 5d773a8123249951013f50afff0fba5b</msg>
<status status="PASS" starttime="20230717 19:36:14.314" endtime="20230717 19:36:14.378"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:36:14.380" level="INFO">5d773a8123249951013f50afff0fba5b</msg>
<status status="PASS" starttime="20230717 19:36:14.379" endtime="20230717 19:36:14.380"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:36:14.381" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:36:14.381" endtime="20230717 19:36:14.382"/>
</kw>
<status status="PASS" starttime="20230717 19:36:14.313" endtime="20230717 19:36:14.383"/>
</kw>
<msg timestamp="20230717 19:36:14.383" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:36:14.313" endtime="20230717 19:36:14.383"/>
</kw>
<msg timestamp="20230717 19:36:14.384" level="INFO">${checksumbefore} = 5d773a8123249951013f50afff0fba5b</msg>
<status status="PASS" starttime="20230717 19:36:14.312" endtime="20230717 19:36:14.384"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:36:14.400" level="INFO">Running command 'md5sum /tmp/part-result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:36:14.465" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:36:14.465" level="INFO">${output} = 5d773a8123249951013f50afff0fba5b</msg>
<status status="PASS" starttime="20230717 19:36:14.389" endtime="20230717 19:36:14.465"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:36:14.467" level="INFO">5d773a8123249951013f50afff0fba5b</msg>
<status status="PASS" starttime="20230717 19:36:14.466" endtime="20230717 19:36:14.467"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:36:14.472" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:36:14.467" endtime="20230717 19:36:14.472"/>
</kw>
<status status="PASS" starttime="20230717 19:36:14.387" endtime="20230717 19:36:14.473"/>
</kw>
<msg timestamp="20230717 19:36:14.473" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:36:14.386" endtime="20230717 19:36:14.473"/>
</kw>
<msg timestamp="20230717 19:36:14.475" level="INFO">${checksumafter} = 5d773a8123249951013f50afff0fba5b</msg>
<status status="PASS" starttime="20230717 19:36:14.385" endtime="20230717 19:36:14.475"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230717 19:36:14.475" endtime="20230717 19:36:14.477"/>
</kw>
<status status="PASS" starttime="20230717 19:36:14.311" endtime="20230717 19:36:14.477"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:35:32.818" endtime="20230717 19:36:14.477"/>
</test>
<test id="s1-s9-s7-t14" name="Test Multipart Upload list" line="355">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230717 19:36:14.486" level="INFO">${randStr} = 4127133133</msg>
<status status="PASS" starttime="20230717 19:36:14.485" endtime="20230717 19:36:14.486"/>
</kw>
<msg timestamp="20230717 19:36:14.486" level="INFO">${random} = ozone-test-4127133133</msg>
<status status="PASS" starttime="20230717 19:36:14.485" endtime="20230717 19:36:14.487"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20230717 19:36:14.488" level="INFO">${PREFIX} = ozone-test-4127133133</msg>
<status status="PASS" starttime="20230717 19:36:14.487" endtime="20230717 19:36:14.488"/>
</kw>
<status status="PASS" starttime="20230717 19:36:14.483" endtime="20230717 19:36:14.488"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/listtest/key1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:36:14.500" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket link --key ozone-test-4127133133/listtest/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:36:16.068" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:36:16.068" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "ozone-test-4127133133/listtest/key1",
    "UploadId": "e3f37ce2-5ce0-4d2a-8e4a-c3ae3b866ab1-110731105133265154"
}</msg>
<status status="PASS" starttime="20230717 19:36:14.494" endtime="20230717 19:36:16.068"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:36:16.070" level="INFO">{
    "Bucket": "link",
    "Key": "ozone-test-4127133133/listtest/key1",
    "UploadId": "e3f37ce2-5ce0-4d2a-8e4a-c3ae3b866ab1-110731105133265154"
}</msg>
<status status="PASS" starttime="20230717 19:36:16.069" endtime="20230717 19:36:16.070"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:36:16.072" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:36:16.071" endtime="20230717 19:36:16.072"/>
</kw>
<status status="PASS" starttime="20230717 19:36:14.493" endtime="20230717 19:36:16.072"/>
</kw>
<msg timestamp="20230717 19:36:16.072" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:36:14.493" endtime="20230717 19:36:16.073"/>
</kw>
<msg timestamp="20230717 19:36:16.073" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "ozone-test-4127133133/listtest/key1",
    "UploadId": "e3f37ce2-5ce0-4d2a-8e4a-c3ae3b866ab1-110731105133265154"
}</msg>
<status status="PASS" starttime="20230717 19:36:14.491" endtime="20230717 19:36:16.073"/>
</kw>
<msg timestamp="20230717 19:36:16.074" level="INFO">${result} = {
    "Bucket": "link",
    "Key": "ozone-test-4127133133/listtest/key1",
    "UploadId": "e3f37ce2-5ce0-4d2a-8e4a-c3ae3b866ab1-110731105133265154"
}</msg>
<status status="PASS" starttime="20230717 19:36:14.489" endtime="20230717 19:36:16.074"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID1}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:36:16.089" level="INFO">Running command 'echo '{
    "Bucket": "link",
    "Key": "ozone-test-4127133133/listtest/key1",
    "UploadId": "e3f37ce2-5ce0-4d2a-8e4a-c3ae3b866ab1-110731105133265154"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:36:16.238" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:36:16.238" level="INFO">${output} = e3f37ce2-5ce0-4d2a-8e4a-c3ae3b866ab1-110731105133265154</msg>
<status status="PASS" starttime="20230717 19:36:16.075" endtime="20230717 19:36:16.239"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:36:16.244" level="INFO">e3f37ce2-5ce0-4d2a-8e4a-c3ae3b866ab1-110731105133265154</msg>
<status status="PASS" starttime="20230717 19:36:16.242" endtime="20230717 19:36:16.244"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:36:16.245" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:36:16.245" endtime="20230717 19:36:16.247"/>
</kw>
<msg timestamp="20230717 19:36:16.247" level="INFO">${uploadID1} = e3f37ce2-5ce0-4d2a-8e4a-c3ae3b866ab1-110731105133265154</msg>
<status status="PASS" starttime="20230717 19:36:16.074" endtime="20230717 19:36:16.247"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:36:16.247" endtime="20230717 19:36:16.248"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/listtest/key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:36:16.248" endtime="20230717 19:36:16.254"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:36:16.254" endtime="20230717 19:36:16.257"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/listtest/key2</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:36:16.275" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket link --key ozone-test-4127133133/listtest/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:36:17.682" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:36:17.682" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "ozone-test-4127133133/listtest/key2",
    "UploadId": "7d3b7962-dab3-43fe-a72d-77c4e2378119-110731105228554499"
}</msg>
<status status="PASS" starttime="20230717 19:36:16.265" endtime="20230717 19:36:17.682"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:36:17.687" level="INFO">{
    "Bucket": "link",
    "Key": "ozone-test-4127133133/listtest/key2",
    "UploadId": "7d3b7962-dab3-43fe-a72d-77c4e2378119-110731105228554499"
}</msg>
<status status="PASS" starttime="20230717 19:36:17.683" endtime="20230717 19:36:17.687"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:36:17.689" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:36:17.688" endtime="20230717 19:36:17.690"/>
</kw>
<status status="PASS" starttime="20230717 19:36:16.262" endtime="20230717 19:36:17.691"/>
</kw>
<msg timestamp="20230717 19:36:17.691" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:36:16.262" endtime="20230717 19:36:17.692"/>
</kw>
<msg timestamp="20230717 19:36:17.693" level="INFO">${output} = {
    "Bucket": "link",
    "Key": "ozone-test-4127133133/listtest/key2",
    "UploadId": "7d3b7962-dab3-43fe-a72d-77c4e2378119-110731105228554499"
}</msg>
<status status="PASS" starttime="20230717 19:36:16.259" endtime="20230717 19:36:17.693"/>
</kw>
<msg timestamp="20230717 19:36:17.693" level="INFO">${result} = {
    "Bucket": "link",
    "Key": "ozone-test-4127133133/listtest/key2",
    "UploadId": "7d3b7962-dab3-43fe-a72d-77c4e2378119-110731105228554499"
}</msg>
<status status="PASS" starttime="20230717 19:36:16.257" endtime="20230717 19:36:17.693"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID2}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:36:17.705" level="INFO">Running command 'echo '{
    "Bucket": "link",
    "Key": "ozone-test-4127133133/listtest/key2",
    "UploadId": "7d3b7962-dab3-43fe-a72d-77c4e2378119-110731105228554499"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:36:17.836" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:36:17.836" level="INFO">${output} = 7d3b7962-dab3-43fe-a72d-77c4e2378119-110731105228554499</msg>
<status status="PASS" starttime="20230717 19:36:17.697" endtime="20230717 19:36:17.836"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:36:17.841" level="INFO">7d3b7962-dab3-43fe-a72d-77c4e2378119-110731105228554499</msg>
<status status="PASS" starttime="20230717 19:36:17.838" endtime="20230717 19:36:17.842"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:36:17.844" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:36:17.842" endtime="20230717 19:36:17.844"/>
</kw>
<msg timestamp="20230717 19:36:17.844" level="INFO">${uploadID2} = 7d3b7962-dab3-43fe-a72d-77c4e2378119-110731105228554499</msg>
<status status="PASS" starttime="20230717 19:36:17.694" endtime="20230717 19:36:17.847"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:36:17.848" endtime="20230717 19:36:17.849"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/listtest/key2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:36:17.851" endtime="20230717 19:36:17.852"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:36:17.853" endtime="20230717 19:36:17.855"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-multipart-uploads --bucket ${BUCKET} --prefix ${PREFIX}/listtest</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:36:17.883" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-multipart-uploads --bucket link --prefix ozone-test-4127133133/listtest 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:36:19.553" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:36:19.553" level="INFO">${output} = {
    "Uploads": [
        {
            "UploadId": "e3f37ce2-5ce0-4d2a-8e4a-c3ae3b866ab1-110731105133265154",
            "Key": "ozone-test-4127133133/listtest/key1",
            "Initiated": "2023...</msg>
<status status="PASS" starttime="20230717 19:36:17.870" endtime="20230717 19:36:19.554"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:36:19.556" level="INFO">{
    "Uploads": [
        {
            "UploadId": "e3f37ce2-5ce0-4d2a-8e4a-c3ae3b866ab1-110731105133265154",
            "Key": "ozone-test-4127133133/listtest/key1",
            "Initiated": "2023-07-17T19:36:15.886Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "7d3b7962-dab3-43fe-a72d-77c4e2378119-110731105228554499",
            "Key": "ozone-test-4127133133/listtest/key2",
            "Initiated": "2023-07-17T19:36:17.340Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        }
    ]
}</msg>
<status status="PASS" starttime="20230717 19:36:19.554" endtime="20230717 19:36:19.556"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:36:19.560" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:36:19.559" endtime="20230717 19:36:19.562"/>
</kw>
<status status="PASS" starttime="20230717 19:36:17.865" endtime="20230717 19:36:19.565"/>
</kw>
<msg timestamp="20230717 19:36:19.565" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:36:17.861" endtime="20230717 19:36:19.567"/>
</kw>
<msg timestamp="20230717 19:36:19.570" level="INFO">${output} = {
    "Uploads": [
        {
            "UploadId": "e3f37ce2-5ce0-4d2a-8e4a-c3ae3b866ab1-110731105133265154",
            "Key": "ozone-test-4127133133/listtest/key1",
            "Initiated": "2023...</msg>
<status status="PASS" starttime="20230717 19:36:17.859" endtime="20230717 19:36:19.570"/>
</kw>
<msg timestamp="20230717 19:36:19.570" level="INFO">${result} = {
    "Uploads": [
        {
            "UploadId": "e3f37ce2-5ce0-4d2a-8e4a-c3ae3b866ab1-110731105133265154",
            "Key": "ozone-test-4127133133/listtest/key1",
            "Initiated": "2023...</msg>
<status status="PASS" starttime="20230717 19:36:17.855" endtime="20230717 19:36:19.570"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${uploadID1}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:36:19.570" endtime="20230717 19:36:19.572"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${uploadID2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:36:19.573" endtime="20230717 19:36:19.581"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${count}</var>
<arg>echo '${result}' | jq -r '.Uploads | length'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:36:19.594" level="INFO">Running command 'echo '{
    "Uploads": [
        {
            "UploadId": "e3f37ce2-5ce0-4d2a-8e4a-c3ae3b866ab1-110731105133265154",
            "Key": "ozone-test-4127133133/listtest/key1",
            "Initiated": "2023-07-17T19:36:15.886Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "7d3b7962-dab3-43fe-a72d-77c4e2378119-110731105228554499",
            "Key": "ozone-test-4127133133/listtest/key2",
            "Initiated": "2023-07-17T19:36:17.340Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        }
    ]
}' | jq -r '.Uploads | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:36:19.707" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:36:19.708" level="INFO">${output} = 2</msg>
<status status="PASS" starttime="20230717 19:36:19.585" endtime="20230717 19:36:19.708"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:36:19.711" level="INFO">2</msg>
<status status="PASS" starttime="20230717 19:36:19.708" endtime="20230717 19:36:19.712"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:36:19.714" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:36:19.712" endtime="20230717 19:36:19.714"/>
</kw>
<msg timestamp="20230717 19:36:19.715" level="INFO">${count} = 2</msg>
<status status="PASS" starttime="20230717 19:36:19.583" endtime="20230717 19:36:19.715"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${count}</arg>
<arg>2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230717 19:36:19.716" endtime="20230717 19:36:19.718"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:36:14.480" endtime="20230717 19:36:19.718"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20230717 19:28:24.343" endtime="20230717 19:36:19.724"/>
</suite>
<suite id="s1-s9-s8" name="Objectcopy" source="/opt/hadoop/smoketest/s3/objectcopy.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20230717 19:36:19.774" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:36:19.774" endtime="20230717 19:36:19.775"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20230717 19:36:19.775" endtime="20230717 19:36:19.775"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20230717 19:36:19.776" endtime="20230717 19:36:19.776"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:36:19.776" endtime="20230717 19:36:19.777"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:36:19.777" endtime="20230717 19:36:19.777"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:36:19.777" endtime="20230717 19:36:19.777"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:36:19.779" endtime="20230717 19:36:19.779"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:36:19.779" endtime="20230717 19:36:19.779"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20230717 19:36:19.779" endtime="20230717 19:36:19.780"/>
</kw>
<status status="PASS" starttime="20230717 19:36:19.772" endtime="20230717 19:36:19.780"/>
</kw>
<test id="s1-s9-s8-t1" name="Copy Object Happy Scenario" line="37">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${DESTBUCKET}' == 'generated1'</arg>
<arg>Create Dest Bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create Dest Bucket">
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230717 19:36:19.788" level="INFO">${postfix} = 94715</msg>
<status status="PASS" starttime="20230717 19:36:19.787" endtime="20230717 19:36:19.789"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${DESTBUCKET}</arg>
<arg>destbucket-${postfix}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230717 19:36:19.790" level="INFO">${DESTBUCKET} = destbucket-94715</msg>
<status status="PASS" starttime="20230717 19:36:19.789" endtime="20230717 19:36:19.790"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>create-bucket --bucket ${DESTBUCKET}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:36:19.809" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket destbucket-94715 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:36:21.489" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:36:21.489" level="INFO">${output} = {
    "Location": "http://s3g:9878/destbucket-94715"
}</msg>
<status status="PASS" starttime="20230717 19:36:19.799" endtime="20230717 19:36:21.489"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:36:21.491" level="INFO">{
    "Location": "http://s3g:9878/destbucket-94715"
}</msg>
<status status="PASS" starttime="20230717 19:36:21.490" endtime="20230717 19:36:21.491"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:36:21.492" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:36:21.491" endtime="20230717 19:36:21.492"/>
</kw>
<status status="PASS" starttime="20230717 19:36:19.796" endtime="20230717 19:36:21.493"/>
</kw>
<msg timestamp="20230717 19:36:21.493" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:36:19.795" endtime="20230717 19:36:21.493"/>
</kw>
<msg timestamp="20230717 19:36:21.497" level="INFO">${output} = {
    "Location": "http://s3g:9878/destbucket-94715"
}</msg>
<status status="PASS" starttime="20230717 19:36:19.793" endtime="20230717 19:36:21.497"/>
</kw>
<status status="PASS" starttime="20230717 19:36:19.791" endtime="20230717 19:36:21.498"/>
</kw>
<status status="PASS" starttime="20230717 19:36:19.785" endtime="20230717 19:36:21.498"/>
</kw>
<status status="PASS" starttime="20230717 19:36:19.784" endtime="20230717 19:36:21.499"/>
</kw>
<kw name="Execute" library="os">
<arg>date &gt; /tmp/copyfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:36:21.510" level="INFO">Running command 'date &gt; /tmp/copyfile'.</msg>
<msg timestamp="20230717 19:36:21.516" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:36:21.516" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:36:21.504" endtime="20230717 19:36:21.522"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:36:21.523" level="INFO"/>
<status status="PASS" starttime="20230717 19:36:21.522" endtime="20230717 19:36:21.524"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:36:21.529" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:36:21.527" endtime="20230717 19:36:21.530"/>
</kw>
<status status="PASS" starttime="20230717 19:36:21.501" endtime="20230717 19:36:21.530"/>
</kw>
<msg timestamp="20230717 19:36:21.530" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:36:21.500" endtime="20230717 19:36:21.532"/>
</kw>
<status status="PASS" starttime="20230717 19:36:21.499" endtime="20230717 19:36:21.532"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/copyobject/key=value/f1 --body /tmp/copyfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:36:21.569" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket link --key ozone-test-4127133133/copyobject/key=value/f1 --body /tmp/copyfile 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:36:23.587" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:36:23.587" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:36:21.549" endtime="20230717 19:36:23.587"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:36:23.592" level="INFO"/>
<status status="PASS" starttime="20230717 19:36:23.590" endtime="20230717 19:36:23.593"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:36:23.594" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:36:23.593" endtime="20230717 19:36:23.594"/>
</kw>
<status status="PASS" starttime="20230717 19:36:21.548" endtime="20230717 19:36:23.595"/>
</kw>
<msg timestamp="20230717 19:36:23.595" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:36:21.545" endtime="20230717 19:36:23.595"/>
</kw>
<msg timestamp="20230717 19:36:23.596" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:36:21.538" endtime="20230717 19:36:23.596"/>
</kw>
<msg timestamp="20230717 19:36:23.597" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230717 19:36:21.532" endtime="20230717 19:36:23.597"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/copyobject/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:36:23.611" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket link --prefix ozone-test-4127133133/copyobject/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:36:24.917" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:36:24.918" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-4127133133/copyobject/key=value/",
            "LastModified": "2023-07-17T19:36:22.970Z",
            "ETag": "2023-07-17T19:36:22.970Z",
...</msg>
<status status="PASS" starttime="20230717 19:36:23.603" endtime="20230717 19:36:24.918"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:36:24.920" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-4127133133/copyobject/key=value/",
            "LastModified": "2023-07-17T19:36:22.970Z",
            "ETag": "2023-07-17T19:36:22.970Z",
            "Size": 0,
            "StorageClass": "STANDARD"
        },
        {
            "Key": "ozone-test-4127133133/copyobject/key=value/f1",
            "LastModified": "2023-07-17T19:36:23.195Z",
            "ETag": "2023-07-17T19:36:23.195Z",
            "Size": 29,
            "StorageClass": "STANDARD"
        }
    ]
}</msg>
<status status="PASS" starttime="20230717 19:36:24.919" endtime="20230717 19:36:24.921"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:36:24.922" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:36:24.921" endtime="20230717 19:36:24.922"/>
</kw>
<status status="PASS" starttime="20230717 19:36:23.602" endtime="20230717 19:36:24.923"/>
</kw>
<msg timestamp="20230717 19:36:24.923" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:36:23.602" endtime="20230717 19:36:24.923"/>
</kw>
<msg timestamp="20230717 19:36:24.923" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-4127133133/copyobject/key=value/",
            "LastModified": "2023-07-17T19:36:22.970Z",
            "ETag": "2023-07-17T19:36:22.970Z",
...</msg>
<status status="PASS" starttime="20230717 19:36:23.600" endtime="20230717 19:36:24.923"/>
</kw>
<msg timestamp="20230717 19:36:24.924" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-4127133133/copyobject/key=value/",
            "LastModified": "2023-07-17T19:36:22.970Z",
            "ETag": "2023-07-17T19:36:22.970Z",
...</msg>
<status status="PASS" starttime="20230717 19:36:23.598" endtime="20230717 19:36:24.924"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:36:24.924" endtime="20230717 19:36:24.925"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${BUCKET}/${PREFIX}/copyobject/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:36:24.935" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-94715 --key ozone-test-4127133133/copyobject/key=value/f1 --copy-source link/ozone-test-4127133133/copyobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:36:26.545" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:36:26.545" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "18c3eff0-64ee-4362-b3b4-2bc1bf8f3c4e",
        "LastModified": "2023-07-17T19:36:26.348Z"
    }
}</msg>
<status status="PASS" starttime="20230717 19:36:24.930" endtime="20230717 19:36:26.545"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:36:26.548" level="INFO">{
    "CopyObjectResult": {
        "ETag": "18c3eff0-64ee-4362-b3b4-2bc1bf8f3c4e",
        "LastModified": "2023-07-17T19:36:26.348Z"
    }
}</msg>
<status status="PASS" starttime="20230717 19:36:26.546" endtime="20230717 19:36:26.548"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:36:26.550" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:36:26.548" endtime="20230717 19:36:26.550"/>
</kw>
<status status="PASS" starttime="20230717 19:36:24.929" endtime="20230717 19:36:26.550"/>
</kw>
<msg timestamp="20230717 19:36:26.550" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:36:24.929" endtime="20230717 19:36:26.551"/>
</kw>
<msg timestamp="20230717 19:36:26.552" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "18c3eff0-64ee-4362-b3b4-2bc1bf8f3c4e",
        "LastModified": "2023-07-17T19:36:26.348Z"
    }
}</msg>
<status status="PASS" starttime="20230717 19:36:24.927" endtime="20230717 19:36:26.552"/>
</kw>
<msg timestamp="20230717 19:36:26.552" level="INFO">${result} = {
    "CopyObjectResult": {
        "ETag": "18c3eff0-64ee-4362-b3b4-2bc1bf8f3c4e",
        "LastModified": "2023-07-17T19:36:26.348Z"
    }
}</msg>
<status status="PASS" starttime="20230717 19:36:24.926" endtime="20230717 19:36:26.552"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${DESTBUCKET} --prefix ${PREFIX}/copyobject/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:36:26.564" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket destbucket-94715 --prefix ozone-test-4127133133/copyobject/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:36:28.112" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:36:28.112" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-4127133133/copyobject/key=value/f1",
            "LastModified": "2023-07-17T19:36:26.348Z",
            "ETag": "2023-07-17T19:36:26.348Z"...</msg>
<status status="PASS" starttime="20230717 19:36:26.557" endtime="20230717 19:36:28.112"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:36:28.114" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-4127133133/copyobject/key=value/f1",
            "LastModified": "2023-07-17T19:36:26.348Z",
            "ETag": "2023-07-17T19:36:26.348Z",
            "Size": 29,
            "StorageClass": "STANDARD"
        }
    ]
}</msg>
<status status="PASS" starttime="20230717 19:36:28.113" endtime="20230717 19:36:28.115"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:36:28.116" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:36:28.115" endtime="20230717 19:36:28.117"/>
</kw>
<status status="PASS" starttime="20230717 19:36:26.556" endtime="20230717 19:36:28.117"/>
</kw>
<msg timestamp="20230717 19:36:28.117" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:36:26.555" endtime="20230717 19:36:28.117"/>
</kw>
<msg timestamp="20230717 19:36:28.119" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-4127133133/copyobject/key=value/f1",
            "LastModified": "2023-07-17T19:36:26.348Z",
            "ETag": "2023-07-17T19:36:26.348Z"...</msg>
<status status="PASS" starttime="20230717 19:36:26.554" endtime="20230717 19:36:28.120"/>
</kw>
<msg timestamp="20230717 19:36:28.121" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-4127133133/copyobject/key=value/f1",
            "LastModified": "2023-07-17T19:36:26.348Z",
            "ETag": "2023-07-17T19:36:26.348Z"...</msg>
<status status="PASS" starttime="20230717 19:36:26.552" endtime="20230717 19:36:28.121"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:36:28.121" endtime="20230717 19:36:28.124"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${BUCKET}/${PREFIX}/copyobject/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:36:28.134" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-94715 --key ozone-test-4127133133/copyobject/key=value/f1 --copy-source link/ozone-test-4127133133/copyobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:36:30.104" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:36:30.104" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "31aac5f2-7738-4896-96a5-a23f4fac0f03",
        "LastModified": "2023-07-17T19:36:29.818Z"
    }
}</msg>
<status status="PASS" starttime="20230717 19:36:28.130" endtime="20230717 19:36:30.106"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:36:30.108" level="INFO">{
    "CopyObjectResult": {
        "ETag": "31aac5f2-7738-4896-96a5-a23f4fac0f03",
        "LastModified": "2023-07-17T19:36:29.818Z"
    }
}</msg>
<status status="PASS" starttime="20230717 19:36:30.106" endtime="20230717 19:36:30.108"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:36:30.111" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:36:30.110" endtime="20230717 19:36:30.111"/>
</kw>
<status status="PASS" starttime="20230717 19:36:28.129" endtime="20230717 19:36:30.111"/>
</kw>
<msg timestamp="20230717 19:36:30.111" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:36:28.128" endtime="20230717 19:36:30.112"/>
</kw>
<msg timestamp="20230717 19:36:30.112" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "31aac5f2-7738-4896-96a5-a23f4fac0f03",
        "LastModified": "2023-07-17T19:36:29.818Z"
    }
}</msg>
<status status="PASS" starttime="20230717 19:36:28.126" endtime="20230717 19:36:30.112"/>
</kw>
<msg timestamp="20230717 19:36:30.112" level="INFO">${result} = {
    "CopyObjectResult": {
        "ETag": "31aac5f2-7738-4896-96a5-a23f4fac0f03",
        "LastModified": "2023-07-17T19:36:29.818Z"
    }
}</msg>
<status status="PASS" starttime="20230717 19:36:28.125" endtime="20230717 19:36:30.112"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${DESTBUCKET} --prefix ${PREFIX}/copyobject/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:36:30.131" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket destbucket-94715 --prefix ozone-test-4127133133/copyobject/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:36:31.708" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:36:31.708" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-4127133133/copyobject/key=value/f1",
            "LastModified": "2023-07-17T19:36:29.818Z",
            "ETag": "2023-07-17T19:36:29.818Z"...</msg>
<status status="PASS" starttime="20230717 19:36:30.122" endtime="20230717 19:36:31.708"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:36:31.709" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-4127133133/copyobject/key=value/f1",
            "LastModified": "2023-07-17T19:36:29.818Z",
            "ETag": "2023-07-17T19:36:29.818Z",
            "Size": 29,
            "StorageClass": "STANDARD"
        }
    ]
}</msg>
<status status="PASS" starttime="20230717 19:36:31.708" endtime="20230717 19:36:31.709"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:36:31.710" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:36:31.710" endtime="20230717 19:36:31.710"/>
</kw>
<status status="PASS" starttime="20230717 19:36:30.121" endtime="20230717 19:36:31.711"/>
</kw>
<msg timestamp="20230717 19:36:31.711" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:36:30.120" endtime="20230717 19:36:31.715"/>
</kw>
<msg timestamp="20230717 19:36:31.716" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-4127133133/copyobject/key=value/f1",
            "LastModified": "2023-07-17T19:36:29.818Z",
            "ETag": "2023-07-17T19:36:29.818Z"...</msg>
<status status="PASS" starttime="20230717 19:36:30.118" endtime="20230717 19:36:31.716"/>
</kw>
<msg timestamp="20230717 19:36:31.716" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-4127133133/copyobject/key=value/f1",
            "LastModified": "2023-07-17T19:36:29.818Z",
            "ETag": "2023-07-17T19:36:29.818Z"...</msg>
<status status="PASS" starttime="20230717 19:36:30.115" endtime="20230717 19:36:31.716"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:36:31.717" endtime="20230717 19:36:31.720"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:36:19.780" endtime="20230717 19:36:31.721"/>
</test>
<test id="s1-s9-s8-t2" name="Copy Object Where Bucket is not available" line="52">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket dfdfdfdfdfnonexistent --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${BUCKET}/${PREFIX}/copyobject/key=value/f1</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:36:31.744" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket dfdfdfdfdfnonexistent --key ozone-test-4127133133/copyobject/key=value/f1 --copy-source link/ozone-test-4127133133/copyobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:36:33.605" level="INFO">${rc} = 255</msg>
<msg timestamp="20230717 19:36:33.605" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20230717 19:36:31.735" endtime="20230717 19:36:33.605"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:36:33.607" level="INFO">
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20230717 19:36:33.606" endtime="20230717 19:36:33.607"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:36:33.609" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:36:33.608" endtime="20230717 19:36:33.610"/>
</kw>
<msg timestamp="20230717 19:36:33.610" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20230717 19:36:31.732" endtime="20230717 19:36:33.610"/>
</kw>
<msg timestamp="20230717 19:36:33.610" level="INFO">${result} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20230717 19:36:31.729" endtime="20230717 19:36:33.615"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchBucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:36:33.615" endtime="20230717 19:36:33.617"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source dfdfdfdfdfnonexistent/${PREFIX}/copyobject/key=value/f1</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:36:33.627" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-94715 --key ozone-test-4127133133/copyobject/key=value/f1 --copy-source dfdfdfdfdfnonexistent/ozone-test-4127133133/copyobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:36:34.974" level="INFO">${rc} = 255</msg>
<msg timestamp="20230717 19:36:34.974" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20230717 19:36:33.621" endtime="20230717 19:36:34.974"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:36:34.979" level="INFO">
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20230717 19:36:34.975" endtime="20230717 19:36:34.980"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:36:34.984" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:36:34.981" endtime="20230717 19:36:34.985"/>
</kw>
<msg timestamp="20230717 19:36:34.985" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20230717 19:36:33.619" endtime="20230717 19:36:34.985"/>
</kw>
<msg timestamp="20230717 19:36:34.985" level="INFO">${result} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20230717 19:36:33.617" endtime="20230717 19:36:34.985"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchBucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:36:34.987" endtime="20230717 19:36:34.988"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:36:31.725" endtime="20230717 19:36:34.988"/>
</test>
<test id="s1-s9-s8-t3" name="Copy Object Where both source and dest are same with change to storageclass" line="58">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>copy-object --storage-class REDUCED_REDUNDANCY --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${DESTBUCKET}/${PREFIX}/copyobject/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:36:35.003" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --storage-class REDUCED_REDUNDANCY --bucket destbucket-94715 --key ozone-test-4127133133/copyobject/key=value/f1 --copy-source destbucket-94715/ozone-test-4127133133/copyobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:36:36.524" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:36:36.524" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "3f597195-447a-4441-b9fd-84f2b58f29db",
        "LastModified": "2023-07-17T19:36:36.376Z"
    }
}</msg>
<status status="PASS" starttime="20230717 19:36:34.998" endtime="20230717 19:36:36.524"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:36:36.526" level="INFO">{
    "CopyObjectResult": {
        "ETag": "3f597195-447a-4441-b9fd-84f2b58f29db",
        "LastModified": "2023-07-17T19:36:36.376Z"
    }
}</msg>
<status status="PASS" starttime="20230717 19:36:36.525" endtime="20230717 19:36:36.526"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:36:36.534" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:36:36.529" endtime="20230717 19:36:36.535"/>
</kw>
<status status="PASS" starttime="20230717 19:36:34.997" endtime="20230717 19:36:36.535"/>
</kw>
<msg timestamp="20230717 19:36:36.536" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:36:34.996" endtime="20230717 19:36:36.536"/>
</kw>
<msg timestamp="20230717 19:36:36.536" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "3f597195-447a-4441-b9fd-84f2b58f29db",
        "LastModified": "2023-07-17T19:36:36.376Z"
    }
}</msg>
<status status="PASS" starttime="20230717 19:36:34.995" endtime="20230717 19:36:36.536"/>
</kw>
<msg timestamp="20230717 19:36:36.537" level="INFO">${result} = {
    "CopyObjectResult": {
        "ETag": "3f597195-447a-4441-b9fd-84f2b58f29db",
        "LastModified": "2023-07-17T19:36:36.376Z"
    }
}</msg>
<status status="PASS" starttime="20230717 19:36:34.994" endtime="20230717 19:36:36.537"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:36:36.537" endtime="20230717 19:36:36.538"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:36:34.991" endtime="20230717 19:36:36.539"/>
</test>
<test id="s1-s9-s8-t4" name="Copy Object Where Key not available" line="62">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${BUCKET}/nonnonexistentkey</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:36:36.548" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-94715 --key ozone-test-4127133133/copyobject/key=value/f1 --copy-source link/nonnonexistentkey 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:36:37.904" level="INFO">${rc} = 255</msg>
<msg timestamp="20230717 19:36:37.905" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20230717 19:36:36.543" endtime="20230717 19:36:37.905"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:36:37.910" level="INFO">
An error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20230717 19:36:37.908" endtime="20230717 19:36:37.912"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:36:37.915" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:36:37.913" endtime="20230717 19:36:37.915"/>
</kw>
<msg timestamp="20230717 19:36:37.915" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20230717 19:36:36.542" endtime="20230717 19:36:37.915"/>
</kw>
<msg timestamp="20230717 19:36:37.916" level="INFO">${result} = 
An error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20230717 19:36:36.541" endtime="20230717 19:36:37.916"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:36:37.917" endtime="20230717 19:36:37.920"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:36:36.539" endtime="20230717 19:36:37.921"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20230717 19:36:19.731" endtime="20230717 19:36:37.925"/>
</suite>
<suite id="s1-s9-s9" name="Objectdelete" source="/opt/hadoop/smoketest/s3/objectdelete.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20230717 19:36:37.965" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:36:37.964" endtime="20230717 19:36:37.966"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20230717 19:36:37.966" endtime="20230717 19:36:37.966"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20230717 19:36:37.966" endtime="20230717 19:36:37.966"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:36:37.966" endtime="20230717 19:36:37.966"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:36:37.969" endtime="20230717 19:36:37.969"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:36:37.969" endtime="20230717 19:36:37.969"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:36:37.969" endtime="20230717 19:36:37.969"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:36:37.969" endtime="20230717 19:36:37.969"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20230717 19:36:37.970" endtime="20230717 19:36:37.971"/>
</kw>
<status status="PASS" starttime="20230717 19:36:37.962" endtime="20230717 19:36:37.972"/>
</kw>
<test id="s1-s9-s9-t1" name="Delete file with s3api" line="30">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:36:37.988" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20230717 19:36:37.998" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:36:37.998" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:36:37.980" endtime="20230717 19:36:37.998"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:36:38.005" level="INFO"/>
<status status="PASS" starttime="20230717 19:36:38.003" endtime="20230717 19:36:38.005"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:36:38.009" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:36:38.005" endtime="20230717 19:36:38.009"/>
</kw>
<status status="PASS" starttime="20230717 19:36:37.977" endtime="20230717 19:36:38.013"/>
</kw>
<msg timestamp="20230717 19:36:38.013" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:36:37.977" endtime="20230717 19:36:38.013"/>
</kw>
<status status="PASS" starttime="20230717 19:36:37.975" endtime="20230717 19:36:38.013"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapi/key=value/f1 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:36:38.028" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket link --key ozone-test-4127133133/deletetestapi/key=value/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:36:39.651" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:36:39.651" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:36:38.021" endtime="20230717 19:36:39.651"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:36:39.655" level="INFO"/>
<status status="PASS" starttime="20230717 19:36:39.652" endtime="20230717 19:36:39.655"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:36:39.660" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:36:39.655" endtime="20230717 19:36:39.660"/>
</kw>
<status status="PASS" starttime="20230717 19:36:38.019" endtime="20230717 19:36:39.660"/>
</kw>
<msg timestamp="20230717 19:36:39.660" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:36:38.018" endtime="20230717 19:36:39.660"/>
</kw>
<msg timestamp="20230717 19:36:39.661" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:36:38.017" endtime="20230717 19:36:39.661"/>
</kw>
<msg timestamp="20230717 19:36:39.662" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230717 19:36:38.015" endtime="20230717 19:36:39.662"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/deletetestapi/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:36:39.679" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket link --prefix ozone-test-4127133133/deletetestapi/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:36:41.140" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:36:41.140" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-4127133133/deletetestapi/key=value/",
            "LastModified": "2023-07-17T19:36:39.442Z",
            "ETag": "2023-07-17T19:36:39.442Z...</msg>
<status status="PASS" starttime="20230717 19:36:39.671" endtime="20230717 19:36:41.140"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:36:41.149" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-4127133133/deletetestapi/key=value/",
            "LastModified": "2023-07-17T19:36:39.442Z",
            "ETag": "2023-07-17T19:36:39.442Z",
            "Size": 0,
            "StorageClass": "STANDARD"
        },
        {
            "Key": "ozone-test-4127133133/deletetestapi/key=value/f1",
            "LastModified": "2023-07-17T19:36:39.501Z",
            "ETag": "2023-07-17T19:36:39.501Z",
            "Size": 29,
            "StorageClass": "STANDARD"
        }
    ]
}</msg>
<status status="PASS" starttime="20230717 19:36:41.141" endtime="20230717 19:36:41.149"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:36:41.153" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:36:41.151" endtime="20230717 19:36:41.154"/>
</kw>
<status status="PASS" starttime="20230717 19:36:39.668" endtime="20230717 19:36:41.154"/>
</kw>
<msg timestamp="20230717 19:36:41.154" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:36:39.668" endtime="20230717 19:36:41.155"/>
</kw>
<msg timestamp="20230717 19:36:41.157" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-4127133133/deletetestapi/key=value/",
            "LastModified": "2023-07-17T19:36:39.442Z",
            "ETag": "2023-07-17T19:36:39.442Z...</msg>
<status status="PASS" starttime="20230717 19:36:39.665" endtime="20230717 19:36:41.157"/>
</kw>
<msg timestamp="20230717 19:36:41.158" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-4127133133/deletetestapi/key=value/",
            "LastModified": "2023-07-17T19:36:39.442Z",
            "ETag": "2023-07-17T19:36:39.442Z...</msg>
<status status="PASS" starttime="20230717 19:36:39.664" endtime="20230717 19:36:41.158"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>"${PREFIX}/deletetestapi/key=value/f1"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:36:41.160" endtime="20230717 19:36:41.162"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapi/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:36:41.182" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket link --key ozone-test-4127133133/deletetestapi/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:36:42.407" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:36:42.408" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:36:41.173" endtime="20230717 19:36:42.408"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:36:42.411" level="INFO"/>
<status status="PASS" starttime="20230717 19:36:42.410" endtime="20230717 19:36:42.411"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:36:42.412" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:36:42.411" endtime="20230717 19:36:42.412"/>
</kw>
<status status="PASS" starttime="20230717 19:36:41.169" endtime="20230717 19:36:42.412"/>
</kw>
<msg timestamp="20230717 19:36:42.412" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:36:41.168" endtime="20230717 19:36:42.412"/>
</kw>
<msg timestamp="20230717 19:36:42.412" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:36:41.165" endtime="20230717 19:36:42.412"/>
</kw>
<msg timestamp="20230717 19:36:42.413" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230717 19:36:41.163" endtime="20230717 19:36:42.414"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/deletetestapi/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:36:42.431" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket link --prefix ozone-test-4127133133/deletetestapi/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:36:44.133" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:36:44.133" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-4127133133/deletetestapi/key=value/",
            "LastModified": "2023-07-17T19:36:39.442Z",
            "ETag": "2023-07-17T19:36:39.442Z...</msg>
<status status="PASS" starttime="20230717 19:36:42.423" endtime="20230717 19:36:44.133"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:36:44.135" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-4127133133/deletetestapi/key=value/",
            "LastModified": "2023-07-17T19:36:39.442Z",
            "ETag": "2023-07-17T19:36:39.442Z",
            "Size": 0,
            "StorageClass": "STANDARD"
        }
    ]
}</msg>
<status status="PASS" starttime="20230717 19:36:44.134" endtime="20230717 19:36:44.135"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:36:44.136" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:36:44.135" endtime="20230717 19:36:44.136"/>
</kw>
<status status="PASS" starttime="20230717 19:36:42.418" endtime="20230717 19:36:44.136"/>
</kw>
<msg timestamp="20230717 19:36:44.137" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:36:42.417" endtime="20230717 19:36:44.137"/>
</kw>
<msg timestamp="20230717 19:36:44.138" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-4127133133/deletetestapi/key=value/",
            "LastModified": "2023-07-17T19:36:39.442Z",
            "ETag": "2023-07-17T19:36:39.442Z...</msg>
<status status="PASS" starttime="20230717 19:36:42.416" endtime="20230717 19:36:44.138"/>
</kw>
<msg timestamp="20230717 19:36:44.139" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-4127133133/deletetestapi/key=value/",
            "LastModified": "2023-07-17T19:36:39.442Z",
            "ETag": "2023-07-17T19:36:39.442Z...</msg>
<status status="PASS" starttime="20230717 19:36:42.415" endtime="20230717 19:36:44.139"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>"${PREFIX}/deletetestapi/key=value/f1"</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:36:44.139" endtime="20230717 19:36:44.141"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:36:37.973" endtime="20230717 19:36:44.141"/>
</test>
<test id="s1-s9-s9-t2" name="Delete file with s3api, file doesn't exist" line="39">
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:36:44.158" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://link/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:36:46.402" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:36:46.402" level="INFO">${output} =                            PRE dir1/
                           PRE multipart/
                           PRE ozone-test-0500351880/
                           PRE ozone-test-2856132575/
             ...</msg>
<status status="PASS" starttime="20230717 19:36:44.151" endtime="20230717 19:36:46.402"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:36:46.406" level="INFO">                           PRE dir1/
                           PRE multipart/
                           PRE ozone-test-0500351880/
                           PRE ozone-test-2856132575/
                           PRE ozone-test-3962561376/
                           PRE ozone-test-4127133133/
                           PRE ozone-test-4759641817/
                           PRE ozone-test-5534145072/
                           PRE ozone-test-5670511221/
                           PRE ozone-test-7200441924/
                           PRE ozone-test-9593106059/
                           PRE ozone-test-9630463461/
                           PRE specialchars/
2023-07-17 19:26:43       4068 README1.md
2023-07-17 19:26:00       4068 README10.md
2023-07-17 19:26:46   20971522 aupcsyxxgq
2023-07-17 19:26:21   10485761 multiUpload.1.gz
2023-07-17 19:26:43   10485761 multiUpload.2.gz
2023-07-17 19:25:47         29 testfile</msg>
<status status="PASS" starttime="20230717 19:36:46.404" endtime="20230717 19:36:46.406"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:36:46.408" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:36:46.407" endtime="20230717 19:36:46.408"/>
</kw>
<status status="PASS" starttime="20230717 19:36:44.149" endtime="20230717 19:36:46.408"/>
</kw>
<msg timestamp="20230717 19:36:46.408" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:36:44.148" endtime="20230717 19:36:46.409"/>
</kw>
<msg timestamp="20230717 19:36:46.409" level="INFO">${output} =                            PRE dir1/
                           PRE multipart/
                           PRE ozone-test-0500351880/
                           PRE ozone-test-2856132575/
             ...</msg>
<status status="PASS" starttime="20230717 19:36:44.147" endtime="20230717 19:36:46.409"/>
</kw>
<msg timestamp="20230717 19:36:46.410" level="INFO">${result} =                            PRE dir1/
                           PRE multipart/
                           PRE ozone-test-0500351880/
                           PRE ozone-test-2856132575/
             ...</msg>
<status status="PASS" starttime="20230717 19:36:44.146" endtime="20230717 19:36:46.410"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>thereisnosuchfile</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:36:46.411" endtime="20230717 19:36:46.413"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key thereisnosuchfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:36:46.445" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket link --key thereisnosuchfile 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:36:48.103" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:36:48.104" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:36:46.430" endtime="20230717 19:36:48.104"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:36:48.106" level="INFO"/>
<status status="PASS" starttime="20230717 19:36:48.105" endtime="20230717 19:36:48.106"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:36:48.108" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:36:48.107" endtime="20230717 19:36:48.108"/>
</kw>
<status status="PASS" starttime="20230717 19:36:46.421" endtime="20230717 19:36:48.108"/>
</kw>
<msg timestamp="20230717 19:36:48.108" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:36:46.420" endtime="20230717 19:36:48.109"/>
</kw>
<msg timestamp="20230717 19:36:48.109" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:36:46.416" endtime="20230717 19:36:48.109"/>
</kw>
<msg timestamp="20230717 19:36:48.109" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230717 19:36:46.414" endtime="20230717 19:36:48.109"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:36:48.121" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://link/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:36:49.969" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:36:49.969" level="INFO">${output} =                            PRE dir1/
                           PRE multipart/
                           PRE ozone-test-0500351880/
                           PRE ozone-test-2856132575/
             ...</msg>
<status status="PASS" starttime="20230717 19:36:48.116" endtime="20230717 19:36:49.969"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:36:49.971" level="INFO">                           PRE dir1/
                           PRE multipart/
                           PRE ozone-test-0500351880/
                           PRE ozone-test-2856132575/
                           PRE ozone-test-3962561376/
                           PRE ozone-test-4127133133/
                           PRE ozone-test-4759641817/
                           PRE ozone-test-5534145072/
                           PRE ozone-test-5670511221/
                           PRE ozone-test-7200441924/
                           PRE ozone-test-9593106059/
                           PRE ozone-test-9630463461/
                           PRE specialchars/
2023-07-17 19:26:43       4068 README1.md
2023-07-17 19:26:00       4068 README10.md
2023-07-17 19:26:46   20971522 aupcsyxxgq
2023-07-17 19:26:21   10485761 multiUpload.1.gz
2023-07-17 19:26:43   10485761 multiUpload.2.gz
2023-07-17 19:25:47         29 testfile</msg>
<status status="PASS" starttime="20230717 19:36:49.970" endtime="20230717 19:36:49.971"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:36:49.972" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:36:49.971" endtime="20230717 19:36:49.972"/>
</kw>
<status status="PASS" starttime="20230717 19:36:48.115" endtime="20230717 19:36:49.972"/>
</kw>
<msg timestamp="20230717 19:36:49.972" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:36:48.114" endtime="20230717 19:36:49.973"/>
</kw>
<msg timestamp="20230717 19:36:49.973" level="INFO">${output} =                            PRE dir1/
                           PRE multipart/
                           PRE ozone-test-0500351880/
                           PRE ozone-test-2856132575/
             ...</msg>
<status status="PASS" starttime="20230717 19:36:48.111" endtime="20230717 19:36:49.973"/>
</kw>
<msg timestamp="20230717 19:36:49.973" level="INFO">${result} =                            PRE dir1/
                           PRE multipart/
                           PRE ozone-test-0500351880/
                           PRE ozone-test-2856132575/
             ...</msg>
<status status="PASS" starttime="20230717 19:36:48.110" endtime="20230717 19:36:49.976"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>thereisnosuchfile</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:36:49.976" endtime="20230717 19:36:49.980"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:36:44.144" endtime="20230717 19:36:49.981"/>
</test>
<test id="s1-s9-s9-t3" name="Delete dir with s3api" line="46">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:36:49.993" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20230717 19:36:49.999" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:36:49.999" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:36:49.988" endtime="20230717 19:36:49.999"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:36:50.005" level="INFO"/>
<status status="PASS" starttime="20230717 19:36:50.000" endtime="20230717 19:36:50.006"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:36:50.007" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:36:50.006" endtime="20230717 19:36:50.009"/>
</kw>
<status status="PASS" starttime="20230717 19:36:49.987" endtime="20230717 19:36:50.010"/>
</kw>
<msg timestamp="20230717 19:36:50.011" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:36:49.986" endtime="20230717 19:36:50.011"/>
</kw>
<status status="PASS" starttime="20230717 19:36:49.985" endtime="20230717 19:36:50.012"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}/${PREFIX}/deletetestapidir/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:36:50.023" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://link/ozone-test-4127133133/deletetestapidir/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:36:51.864" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:36:51.864" level="INFO">${output} = Completed 29 Bytes/29 Bytes (84 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/ozone-test-4127133133/deletetestapidir/key=value/f1</msg>
<status status="PASS" starttime="20230717 19:36:50.018" endtime="20230717 19:36:51.864"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:36:51.867" level="INFO">Completed 29 Bytes/29 Bytes (84 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/ozone-test-4127133133/deletetestapidir/key=value/f1</msg>
<status status="PASS" starttime="20230717 19:36:51.865" endtime="20230717 19:36:51.867"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:36:51.869" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:36:51.868" endtime="20230717 19:36:51.869"/>
</kw>
<status status="PASS" starttime="20230717 19:36:50.017" endtime="20230717 19:36:51.869"/>
</kw>
<msg timestamp="20230717 19:36:51.870" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:36:50.016" endtime="20230717 19:36:51.870"/>
</kw>
<msg timestamp="20230717 19:36:51.870" level="INFO">${output} = Completed 29 Bytes/29 Bytes (84 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/ozone-test-4127133133/deletetestapidir/key=value/f1</msg>
<status status="PASS" starttime="20230717 19:36:50.015" endtime="20230717 19:36:51.870"/>
</kw>
<msg timestamp="20230717 19:36:51.871" level="INFO">${result} = Completed 29 Bytes/29 Bytes (84 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/ozone-test-4127133133/deletetestapidir/key=value/f1</msg>
<status status="PASS" starttime="20230717 19:36:50.012" endtime="20230717 19:36:51.871"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/${PREFIX}/deletetestapidir/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:36:51.899" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://link/ozone-test-4127133133/deletetestapidir/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:36:53.279" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:36:53.279" level="INFO">${output} = 2023-07-17 19:36:51          0 
2023-07-17 19:36:51         29 f1</msg>
<status status="PASS" starttime="20230717 19:36:51.881" endtime="20230717 19:36:53.280"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:36:53.282" level="INFO">2023-07-17 19:36:51          0 
2023-07-17 19:36:51         29 f1</msg>
<status status="PASS" starttime="20230717 19:36:53.280" endtime="20230717 19:36:53.282"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:36:53.284" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:36:53.282" endtime="20230717 19:36:53.284"/>
</kw>
<status status="PASS" starttime="20230717 19:36:51.878" endtime="20230717 19:36:53.284"/>
</kw>
<msg timestamp="20230717 19:36:53.284" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:36:51.877" endtime="20230717 19:36:53.285"/>
</kw>
<msg timestamp="20230717 19:36:53.285" level="INFO">${output} = 2023-07-17 19:36:51          0 
2023-07-17 19:36:51         29 f1</msg>
<status status="PASS" starttime="20230717 19:36:51.874" endtime="20230717 19:36:53.285"/>
</kw>
<msg timestamp="20230717 19:36:53.285" level="INFO">${result} = 2023-07-17 19:36:51          0 
2023-07-17 19:36:51         29 f1</msg>
<status status="PASS" starttime="20230717 19:36:51.871" endtime="20230717 19:36:53.285"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:36:53.286" endtime="20230717 19:36:53.286"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapidir/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:36:53.295" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket link --key ozone-test-4127133133/deletetestapidir/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:36:54.463" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:36:54.464" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:36:53.291" endtime="20230717 19:36:54.464"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:36:54.472" level="INFO"/>
<status status="PASS" starttime="20230717 19:36:54.465" endtime="20230717 19:36:54.472"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:36:54.474" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:36:54.472" endtime="20230717 19:36:54.474"/>
</kw>
<status status="PASS" starttime="20230717 19:36:53.290" endtime="20230717 19:36:54.475"/>
</kw>
<msg timestamp="20230717 19:36:54.475" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:36:53.289" endtime="20230717 19:36:54.476"/>
</kw>
<msg timestamp="20230717 19:36:54.477" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:36:53.288" endtime="20230717 19:36:54.477"/>
</kw>
<msg timestamp="20230717 19:36:54.479" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230717 19:36:53.287" endtime="20230717 19:36:54.479"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/${PREFIX}/deletetestapidir/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:36:54.496" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://link/ozone-test-4127133133/deletetestapidir/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:36:55.823" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:36:55.823" level="INFO">${output} = 2023-07-17 19:36:51          0 
2023-07-17 19:36:51         29 f1</msg>
<status status="PASS" starttime="20230717 19:36:54.487" endtime="20230717 19:36:55.823"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:36:55.825" level="INFO">2023-07-17 19:36:51          0 
2023-07-17 19:36:51         29 f1</msg>
<status status="PASS" starttime="20230717 19:36:55.824" endtime="20230717 19:36:55.826"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:36:55.827" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:36:55.827" endtime="20230717 19:36:55.831"/>
</kw>
<status status="PASS" starttime="20230717 19:36:54.484" endtime="20230717 19:36:55.831"/>
</kw>
<msg timestamp="20230717 19:36:55.831" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:36:54.483" endtime="20230717 19:36:55.831"/>
</kw>
<msg timestamp="20230717 19:36:55.832" level="INFO">${output} = 2023-07-17 19:36:51          0 
2023-07-17 19:36:51         29 f1</msg>
<status status="PASS" starttime="20230717 19:36:54.482" endtime="20230717 19:36:55.832"/>
</kw>
<msg timestamp="20230717 19:36:55.832" level="INFO">${result} = 2023-07-17 19:36:51          0 
2023-07-17 19:36:51         29 f1</msg>
<status status="PASS" starttime="20230717 19:36:54.480" endtime="20230717 19:36:55.832"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:36:55.832" endtime="20230717 19:36:55.833"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapidir/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:36:55.845" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket link --key ozone-test-4127133133/deletetestapidir/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:36:57.424" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:36:57.424" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:36:55.839" endtime="20230717 19:36:57.424"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:36:57.426" level="INFO"/>
<status status="PASS" starttime="20230717 19:36:57.425" endtime="20230717 19:36:57.428"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:36:57.429" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:36:57.428" endtime="20230717 19:36:57.430"/>
</kw>
<status status="PASS" starttime="20230717 19:36:55.838" endtime="20230717 19:36:57.430"/>
</kw>
<msg timestamp="20230717 19:36:57.430" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:36:55.837" endtime="20230717 19:36:57.430"/>
</kw>
<msg timestamp="20230717 19:36:57.430" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:36:55.836" endtime="20230717 19:36:57.430"/>
</kw>
<msg timestamp="20230717 19:36:57.431" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230717 19:36:55.833" endtime="20230717 19:36:57.431"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:36:49.983" endtime="20230717 19:36:57.431"/>
</test>
<test id="s1-s9-s9-t4" name="Delete file with s3api, file doesn't exist, prefix of a real file" line="57">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:36:57.441" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20230717 19:36:57.446" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:36:57.446" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:36:57.437" endtime="20230717 19:36:57.446"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:36:57.448" level="INFO"/>
<status status="PASS" starttime="20230717 19:36:57.447" endtime="20230717 19:36:57.448"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:36:57.449" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:36:57.448" endtime="20230717 19:36:57.449"/>
</kw>
<status status="PASS" starttime="20230717 19:36:57.435" endtime="20230717 19:36:57.449"/>
</kw>
<msg timestamp="20230717 19:36:57.449" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:36:57.435" endtime="20230717 19:36:57.450"/>
</kw>
<status status="PASS" starttime="20230717 19:36:57.434" endtime="20230717 19:36:57.450"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}/${PREFIX}/deletetestapiprefix/key=value/filefile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:36:57.457" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://link/ozone-test-4127133133/deletetestapiprefix/key=value/filefile 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:36:59.294" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:36:59.294" level="INFO">${output} = Completed 29 Bytes/29 Bytes (160 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/ozone-test-4127133133/deletetestapiprefix/key=value/filefile</msg>
<status status="PASS" starttime="20230717 19:36:57.454" endtime="20230717 19:36:59.294"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:36:59.296" level="INFO">Completed 29 Bytes/29 Bytes (160 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/ozone-test-4127133133/deletetestapiprefix/key=value/filefile</msg>
<status status="PASS" starttime="20230717 19:36:59.295" endtime="20230717 19:36:59.296"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:36:59.296" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:36:59.296" endtime="20230717 19:36:59.296"/>
</kw>
<status status="PASS" starttime="20230717 19:36:57.453" endtime="20230717 19:36:59.298"/>
</kw>
<msg timestamp="20230717 19:36:59.299" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:36:57.452" endtime="20230717 19:36:59.299"/>
</kw>
<msg timestamp="20230717 19:36:59.299" level="INFO">${output} = Completed 29 Bytes/29 Bytes (160 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/ozone-test-4127133133/deletetestapiprefix/key=value/filefile</msg>
<status status="PASS" starttime="20230717 19:36:57.451" endtime="20230717 19:36:59.300"/>
</kw>
<msg timestamp="20230717 19:36:59.300" level="INFO">${result} = Completed 29 Bytes/29 Bytes (160 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://link/ozone-test-4127133133/deletetestapiprefix/key=value/filefile</msg>
<status status="PASS" starttime="20230717 19:36:57.450" endtime="20230717 19:36:59.300"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/${PREFIX}/deletetestapiprefix/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:36:59.311" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://link/ozone-test-4127133133/deletetestapiprefix/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:37:00.809" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:37:00.810" level="INFO">${output} = 2023-07-17 19:36:58          0 
2023-07-17 19:36:59         29 filefile</msg>
<status status="PASS" starttime="20230717 19:36:59.305" endtime="20230717 19:37:00.810"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:37:00.816" level="INFO">2023-07-17 19:36:58          0 
2023-07-17 19:36:59         29 filefile</msg>
<status status="PASS" starttime="20230717 19:37:00.810" endtime="20230717 19:37:00.817"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:37:00.823" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:37:00.817" endtime="20230717 19:37:00.824"/>
</kw>
<status status="PASS" starttime="20230717 19:36:59.304" endtime="20230717 19:37:00.824"/>
</kw>
<msg timestamp="20230717 19:37:00.824" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:36:59.304" endtime="20230717 19:37:00.824"/>
</kw>
<msg timestamp="20230717 19:37:00.824" level="INFO">${output} = 2023-07-17 19:36:58          0 
2023-07-17 19:36:59         29 filefile</msg>
<status status="PASS" starttime="20230717 19:36:59.302" endtime="20230717 19:37:00.824"/>
</kw>
<msg timestamp="20230717 19:37:00.826" level="INFO">${result} = 2023-07-17 19:36:58          0 
2023-07-17 19:36:59         29 filefile</msg>
<status status="PASS" starttime="20230717 19:36:59.301" endtime="20230717 19:37:00.826"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>filefile</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:37:00.832" endtime="20230717 19:37:00.833"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapiprefix/key=value/file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:37:00.853" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket link --key ozone-test-4127133133/deletetestapiprefix/key=value/file 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:37:02.281" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:37:02.282" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:37:00.848" endtime="20230717 19:37:02.282"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:37:02.284" level="INFO"/>
<status status="PASS" starttime="20230717 19:37:02.282" endtime="20230717 19:37:02.284"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:37:02.285" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:37:02.284" endtime="20230717 19:37:02.285"/>
</kw>
<status status="PASS" starttime="20230717 19:37:00.845" endtime="20230717 19:37:02.285"/>
</kw>
<msg timestamp="20230717 19:37:02.286" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:37:00.844" endtime="20230717 19:37:02.286"/>
</kw>
<msg timestamp="20230717 19:37:02.286" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:37:00.838" endtime="20230717 19:37:02.286"/>
</kw>
<msg timestamp="20230717 19:37:02.287" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230717 19:37:00.833" endtime="20230717 19:37:02.287"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/${PREFIX}/deletetestapiprefix/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:37:02.295" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://link/ozone-test-4127133133/deletetestapiprefix/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:37:03.725" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:37:03.725" level="INFO">${output} = 2023-07-17 19:36:58          0 
2023-07-17 19:36:59         29 filefile</msg>
<status status="PASS" starttime="20230717 19:37:02.291" endtime="20230717 19:37:03.725"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:37:03.737" level="INFO">2023-07-17 19:36:58          0 
2023-07-17 19:36:59         29 filefile</msg>
<status status="PASS" starttime="20230717 19:37:03.731" endtime="20230717 19:37:03.737"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:37:03.738" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:37:03.737" endtime="20230717 19:37:03.739"/>
</kw>
<status status="PASS" starttime="20230717 19:37:02.290" endtime="20230717 19:37:03.741"/>
</kw>
<msg timestamp="20230717 19:37:03.742" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:37:02.289" endtime="20230717 19:37:03.742"/>
</kw>
<msg timestamp="20230717 19:37:03.743" level="INFO">${output} = 2023-07-17 19:36:58          0 
2023-07-17 19:36:59         29 filefile</msg>
<status status="PASS" starttime="20230717 19:37:02.288" endtime="20230717 19:37:03.743"/>
</kw>
<msg timestamp="20230717 19:37:03.744" level="INFO">${result} = 2023-07-17 19:36:58          0 
2023-07-17 19:36:59         29 filefile</msg>
<status status="PASS" starttime="20230717 19:37:02.287" endtime="20230717 19:37:03.744"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>filefile</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:37:03.745" endtime="20230717 19:37:03.748"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapiprefix/key=value/filefile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:37:03.760" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket link --key ozone-test-4127133133/deletetestapiprefix/key=value/filefile 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:37:05.089" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:37:05.089" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:37:03.756" endtime="20230717 19:37:05.089"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:37:05.091" level="INFO"/>
<status status="PASS" starttime="20230717 19:37:05.090" endtime="20230717 19:37:05.092"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:37:05.093" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:37:05.092" endtime="20230717 19:37:05.093"/>
</kw>
<status status="PASS" starttime="20230717 19:37:03.755" endtime="20230717 19:37:05.093"/>
</kw>
<msg timestamp="20230717 19:37:05.094" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:37:03.752" endtime="20230717 19:37:05.094"/>
</kw>
<msg timestamp="20230717 19:37:05.094" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:37:03.750" endtime="20230717 19:37:05.094"/>
</kw>
<msg timestamp="20230717 19:37:05.094" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230717 19:37:03.748" endtime="20230717 19:37:05.095"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:36:57.432" endtime="20230717 19:37:05.095"/>
</test>
<test id="s1-s9-s9-t5" name="Delete file with s3api, bucket doesn't exist" line="69">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET}-nosuchbucket --key f1</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:37:05.105" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket link-nosuchbucket --key f1 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:37:06.342" level="INFO">${rc} = 255</msg>
<msg timestamp="20230717 19:37:06.343" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20230717 19:37:05.100" endtime="20230717 19:37:06.343"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:37:06.345" level="INFO">
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20230717 19:37:06.344" endtime="20230717 19:37:06.345"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:37:06.347" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:37:06.346" endtime="20230717 19:37:06.347"/>
</kw>
<msg timestamp="20230717 19:37:06.347" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20230717 19:37:05.099" endtime="20230717 19:37:06.347"/>
</kw>
<msg timestamp="20230717 19:37:06.348" level="INFO">${result} = 
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20230717 19:37:05.098" endtime="20230717 19:37:06.348"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchBucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:37:06.348" endtime="20230717 19:37:06.349"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:37:05.097" endtime="20230717 19:37:06.349"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20230717 19:36:37.932" endtime="20230717 19:37:06.352"/>
</suite>
<suite id="s1-s9-s10" name="Objecthead" source="/opt/hadoop/smoketest/s3/objecthead.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20230717 19:37:06.383" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:37:06.382" endtime="20230717 19:37:06.383"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20230717 19:37:06.384" endtime="20230717 19:37:06.384"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20230717 19:37:06.384" endtime="20230717 19:37:06.384"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:37:06.385" endtime="20230717 19:37:06.385"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:37:06.386" endtime="20230717 19:37:06.386"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:37:06.386" endtime="20230717 19:37:06.387"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:37:06.387" endtime="20230717 19:37:06.387"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:37:06.387" endtime="20230717 19:37:06.387"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20230717 19:37:06.388" endtime="20230717 19:37:06.388"/>
</kw>
<status status="PASS" starttime="20230717 19:37:06.381" endtime="20230717 19:37:06.388"/>
</kw>
<test id="s1-s9-s10-t1" name="Head existing object" line="32">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:37:06.400" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile'.</msg>
<msg timestamp="20230717 19:37:06.405" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:37:06.405" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:37:06.393" endtime="20230717 19:37:06.405"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:37:06.408" level="INFO"/>
<status status="PASS" starttime="20230717 19:37:06.406" endtime="20230717 19:37:06.408"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:37:06.410" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:37:06.408" endtime="20230717 19:37:06.410"/>
</kw>
<status status="PASS" starttime="20230717 19:37:06.392" endtime="20230717 19:37:06.411"/>
</kw>
<msg timestamp="20230717 19:37:06.411" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:37:06.392" endtime="20230717 19:37:06.411"/>
</kw>
<status status="PASS" starttime="20230717 19:37:06.390" endtime="20230717 19:37:06.412"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/headobject/key=value/f1 --body /tmp/testfile</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:37:06.422" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket link --key ozone-test-4127133133/headobject/key=value/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:37:08.142" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:37:08.142" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:37:06.416" endtime="20230717 19:37:08.143"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:37:08.145" level="INFO"/>
<status status="PASS" starttime="20230717 19:37:08.143" endtime="20230717 19:37:08.145"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:37:08.148" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:37:08.146" endtime="20230717 19:37:08.148"/>
</kw>
<msg timestamp="20230717 19:37:08.149" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:37:06.414" endtime="20230717 19:37:08.149"/>
</kw>
<msg timestamp="20230717 19:37:08.149" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230717 19:37:06.413" endtime="20230717 19:37:08.149"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/headobject/key=value/f1</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:37:08.160" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket link --key ozone-test-4127133133/headobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:37:09.577" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:37:09.577" level="INFO">${output} = {
    "LastModified": "Mon, 17 Jul 2023 19:37:07 GMT",
    "ContentLength": 11,
    "ETag": "2023-07-17T19:37:07.859Z",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "E...</msg>
<status status="PASS" starttime="20230717 19:37:08.154" endtime="20230717 19:37:09.577"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:37:09.579" level="INFO">{
    "LastModified": "Mon, 17 Jul 2023 19:37:07 GMT",
    "ContentLength": 11,
    "ETag": "2023-07-17T19:37:07.859Z",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Mon, 17 Jul 2023 19:37:09 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230717 19:37:09.578" endtime="20230717 19:37:09.580"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:37:09.581" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:37:09.580" endtime="20230717 19:37:09.581"/>
</kw>
<msg timestamp="20230717 19:37:09.582" level="INFO">${output} = {
    "LastModified": "Mon, 17 Jul 2023 19:37:07 GMT",
    "ContentLength": 11,
    "ETag": "2023-07-17T19:37:07.859Z",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "E...</msg>
<status status="PASS" starttime="20230717 19:37:08.153" endtime="20230717 19:37:09.582"/>
</kw>
<msg timestamp="20230717 19:37:09.582" level="INFO">${result} = {
    "LastModified": "Mon, 17 Jul 2023 19:37:07 GMT",
    "ContentLength": 11,
    "ETag": "2023-07-17T19:37:07.859Z",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "E...</msg>
<status status="PASS" starttime="20230717 19:37:08.150" endtime="20230717 19:37:09.582"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/headobject/key=value/f1</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:37:09.591" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket link --key ozone-test-4127133133/headobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:37:11.180" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:37:11.180" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:37:09.586" endtime="20230717 19:37:11.180"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:37:11.182" level="INFO"/>
<status status="PASS" starttime="20230717 19:37:11.181" endtime="20230717 19:37:11.182"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:37:11.184" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:37:11.182" endtime="20230717 19:37:11.184"/>
</kw>
<msg timestamp="20230717 19:37:11.184" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:37:09.585" endtime="20230717 19:37:11.184"/>
</kw>
<msg timestamp="20230717 19:37:11.185" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230717 19:37:09.583" endtime="20230717 19:37:11.189"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:37:06.388" endtime="20230717 19:37:11.190"/>
</test>
<test id="s1-s9-s10-t2" name="Head object in non existing bucket" line="39">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET}-non-existent --key ${PREFIX}/headobject/key=value/f1</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:37:11.207" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket link-non-existent --key ozone-test-4127133133/headobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:37:12.575" level="INFO">${rc} = 255</msg>
<msg timestamp="20230717 19:37:12.575" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20230717 19:37:11.200" endtime="20230717 19:37:12.575"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:37:12.579" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20230717 19:37:12.577" endtime="20230717 19:37:12.581"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:37:12.582" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:37:12.581" endtime="20230717 19:37:12.582"/>
</kw>
<msg timestamp="20230717 19:37:12.584" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20230717 19:37:11.199" endtime="20230717 19:37:12.584"/>
</kw>
<msg timestamp="20230717 19:37:12.585" level="INFO">${result} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20230717 19:37:11.198" endtime="20230717 19:37:12.585"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>404</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:37:12.585" endtime="20230717 19:37:12.586"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Not Found</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:37:12.586" endtime="20230717 19:37:12.587"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:37:11.191" endtime="20230717 19:37:12.588"/>
</test>
<test id="s1-s9-s10-t3" name="Head object where path is a directory" line="43">
<kw name="Create legacy bucket" library="commonawslib">
<var>${legacy-bucket}</var>
<kw name="Generate Ozone String" library="commonawslib">
<var>${postfix}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230717 19:37:12.604" level="INFO">${randStr} = 0428755628</msg>
<status status="PASS" starttime="20230717 19:37:12.599" endtime="20230717 19:37:12.604"/>
</kw>
<msg timestamp="20230717 19:37:12.607" level="INFO">${postfix} = ozone-test-0428755628</msg>
<status status="PASS" starttime="20230717 19:37:12.596" endtime="20230717 19:37:12.607"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${legacy_bucket}</var>
<arg>legacy-bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230717 19:37:12.608" level="INFO">${legacy_bucket} = legacy-bucket-ozone-test-0428755628</msg>
<status status="PASS" starttime="20230717 19:37:12.607" endtime="20230717 19:37:12.608"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh bucket create -l LEGACY s3v/${legacy_bucket}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:37:12.614" level="INFO">Running command 'ozone sh bucket create -l LEGACY s3v/legacy-bucket-ozone-test-0428755628 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:37:33.089" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:37:33.089" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:37:12.610" endtime="20230717 19:37:33.089"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:37:33.091" level="INFO"/>
<status status="PASS" starttime="20230717 19:37:33.090" endtime="20230717 19:37:33.091"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:37:33.092" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:37:33.091" endtime="20230717 19:37:33.093"/>
</kw>
<msg timestamp="20230717 19:37:33.094" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230717 19:37:12.610" endtime="20230717 19:37:33.094"/>
</kw>
<msg timestamp="20230717 19:37:33.094" level="INFO">${legacy-bucket} = legacy-bucket-ozone-test-0428755628</msg>
<status status="PASS" starttime="20230717 19:37:12.595" endtime="20230717 19:37:33.094"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${legacy-bucket} --key ${PREFIX}/headobject/keyvalue/f1 --body /tmp/testfile</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:37:33.102" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket legacy-bucket-ozone-test-0428755628 --key ozone-test-4127133133/headobject/keyvalue/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:37:34.989" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:37:34.990" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:37:33.097" endtime="20230717 19:37:34.990"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:37:34.991" level="INFO"/>
<status status="PASS" starttime="20230717 19:37:34.990" endtime="20230717 19:37:34.992"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:37:34.996" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:37:34.992" endtime="20230717 19:37:34.996"/>
</kw>
<msg timestamp="20230717 19:37:34.997" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:37:33.096" endtime="20230717 19:37:34.997"/>
</kw>
<msg timestamp="20230717 19:37:34.998" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230717 19:37:33.095" endtime="20230717 19:37:34.998"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${legacy-bucket} --key ${PREFIX}/headobject/keyvalue/</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:37:35.010" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket legacy-bucket-ozone-test-0428755628 --key ozone-test-4127133133/headobject/keyvalue/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:37:36.426" level="INFO">${rc} = 255</msg>
<msg timestamp="20230717 19:37:36.426" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20230717 19:37:35.003" endtime="20230717 19:37:36.426"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:37:36.428" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20230717 19:37:36.427" endtime="20230717 19:37:36.428"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:37:36.432" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:37:36.430" endtime="20230717 19:37:36.433"/>
</kw>
<msg timestamp="20230717 19:37:36.433" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20230717 19:37:35.001" endtime="20230717 19:37:36.433"/>
</kw>
<msg timestamp="20230717 19:37:36.434" level="INFO">${result} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20230717 19:37:35.000" endtime="20230717 19:37:36.434"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>404</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:37:36.434" endtime="20230717 19:37:36.435"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Not Found</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:37:36.435" endtime="20230717 19:37:36.437"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:37:12.591" endtime="20230717 19:37:36.437"/>
</test>
<test id="s1-s9-s10-t4" name="Head directory objects" line="50">
<kw name="Create obs bucket" library="commonawslib">
<var>${obs-bucket}</var>
<kw name="Generate Ozone String" library="commonawslib">
<var>${postfix}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230717 19:37:36.448" level="INFO">${randStr} = 8184692881</msg>
<status status="PASS" starttime="20230717 19:37:36.447" endtime="20230717 19:37:36.448"/>
</kw>
<msg timestamp="20230717 19:37:36.448" level="INFO">${postfix} = ozone-test-8184692881</msg>
<status status="PASS" starttime="20230717 19:37:36.446" endtime="20230717 19:37:36.448"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>obs-bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230717 19:37:36.449" level="INFO">${bucket} = obs-bucket-ozone-test-8184692881</msg>
<status status="PASS" starttime="20230717 19:37:36.448" endtime="20230717 19:37:36.451"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh bucket create -l OBJECT_STORE s3v/${bucket}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:37:36.465" level="INFO">Running command 'ozone sh bucket create -l OBJECT_STORE s3v/obs-bucket-ozone-test-8184692881 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:37:56.428" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:37:56.428" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:37:36.456" endtime="20230717 19:37:56.428"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:37:56.431" level="INFO"/>
<status status="PASS" starttime="20230717 19:37:56.429" endtime="20230717 19:37:56.432"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:37:56.433" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:37:56.432" endtime="20230717 19:37:56.433"/>
</kw>
<msg timestamp="20230717 19:37:56.433" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230717 19:37:36.451" endtime="20230717 19:37:56.433"/>
</kw>
<msg timestamp="20230717 19:37:56.435" level="INFO">${obs-bucket} = obs-bucket-ozone-test-8184692881</msg>
<status status="PASS" starttime="20230717 19:37:36.443" endtime="20230717 19:37:56.435"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${obs-bucket} --key ${PREFIX}/mydir/ --body /tmp/testfile</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:37:56.446" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket obs-bucket-ozone-test-8184692881 --key ozone-test-4127133133/mydir/ --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:37:57.933" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:37:57.934" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:37:56.436" endtime="20230717 19:37:57.934"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:37:57.936" level="INFO"/>
<status status="PASS" starttime="20230717 19:37:57.935" endtime="20230717 19:37:57.937"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:37:57.938" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:37:57.937" endtime="20230717 19:37:57.939"/>
</kw>
<msg timestamp="20230717 19:37:57.939" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:37:56.436" endtime="20230717 19:37:57.939"/>
</kw>
<msg timestamp="20230717 19:37:57.940" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230717 19:37:56.435" endtime="20230717 19:37:57.941"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${obs-bucket} --key ${PREFIX}/mydir</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:37:57.951" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket obs-bucket-ozone-test-8184692881 --key ozone-test-4127133133/mydir 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:37:59.412" level="INFO">${rc} = 255</msg>
<msg timestamp="20230717 19:37:59.412" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20230717 19:37:57.946" endtime="20230717 19:37:59.412"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:37:59.416" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20230717 19:37:59.413" endtime="20230717 19:37:59.416"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:37:59.417" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:37:59.416" endtime="20230717 19:37:59.417"/>
</kw>
<msg timestamp="20230717 19:37:59.418" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20230717 19:37:57.944" endtime="20230717 19:37:59.418"/>
</kw>
<msg timestamp="20230717 19:37:59.418" level="INFO">${result} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20230717 19:37:57.941" endtime="20230717 19:37:59.418"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>404</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:37:59.418" endtime="20230717 19:37:59.419"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Not Found</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:37:59.419" endtime="20230717 19:37:59.420"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${obs-bucket} --key ${PREFIX}/mydir/</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:37:59.427" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket obs-bucket-ozone-test-8184692881 --key ozone-test-4127133133/mydir/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:38:00.751" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:38:00.752" level="INFO">${output} = {
    "LastModified": "Mon, 17 Jul 2023 19:37:57 GMT",
    "ContentLength": 11,
    "ETag": "2023-07-17T19:37:57.763Z",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "E...</msg>
<status status="PASS" starttime="20230717 19:37:59.422" endtime="20230717 19:38:00.752"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:38:00.756" level="INFO">{
    "LastModified": "Mon, 17 Jul 2023 19:37:57 GMT",
    "ContentLength": 11,
    "ETag": "2023-07-17T19:37:57.763Z",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Mon, 17 Jul 2023 19:38:00 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230717 19:38:00.753" endtime="20230717 19:38:00.757"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:38:00.760" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:38:00.758" endtime="20230717 19:38:00.760"/>
</kw>
<msg timestamp="20230717 19:38:00.763" level="INFO">${output} = {
    "LastModified": "Mon, 17 Jul 2023 19:37:57 GMT",
    "ContentLength": 11,
    "ETag": "2023-07-17T19:37:57.763Z",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "E...</msg>
<status status="PASS" starttime="20230717 19:37:59.421" endtime="20230717 19:38:00.763"/>
</kw>
<msg timestamp="20230717 19:38:00.764" level="INFO">${result} = {
    "LastModified": "Mon, 17 Jul 2023 19:37:57 GMT",
    "ContentLength": 11,
    "ETag": "2023-07-17T19:37:57.763Z",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "E...</msg>
<status status="PASS" starttime="20230717 19:37:59.420" endtime="20230717 19:38:00.764"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:37:36.440" endtime="20230717 19:38:00.765"/>
</test>
<test id="s1-s9-s10-t5" name="Head non existing key" line="58">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/non-existent</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:38:00.785" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket link --key ozone-test-4127133133/non-existent 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:38:02.162" level="INFO">${rc} = 255</msg>
<msg timestamp="20230717 19:38:02.163" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20230717 19:38:00.776" endtime="20230717 19:38:02.163"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:38:02.172" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20230717 19:38:02.166" endtime="20230717 19:38:02.176"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:38:02.183" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:38:02.179" endtime="20230717 19:38:02.185"/>
</kw>
<msg timestamp="20230717 19:38:02.185" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20230717 19:38:00.774" endtime="20230717 19:38:02.185"/>
</kw>
<msg timestamp="20230717 19:38:02.188" level="INFO">${result} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20230717 19:38:00.771" endtime="20230717 19:38:02.188"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>404</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:38:02.192" endtime="20230717 19:38:02.193"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Not Found</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:38:02.196" endtime="20230717 19:38:02.198"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:38:00.769" endtime="20230717 19:38:02.198"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20230717 19:37:06.356" endtime="20230717 19:38:02.205"/>
</suite>
<suite id="s1-s9-s11" name="Objectmultidelete" source="/opt/hadoop/smoketest/s3/objectmultidelete.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20230717 19:38:02.244" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:38:02.244" endtime="20230717 19:38:02.244"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20230717 19:38:02.244" endtime="20230717 19:38:02.245"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20230717 19:38:02.245" endtime="20230717 19:38:02.245"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:38:02.246" endtime="20230717 19:38:02.246"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:38:02.246" endtime="20230717 19:38:02.246"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:38:02.247" endtime="20230717 19:38:02.247"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:38:02.247" endtime="20230717 19:38:02.247"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:38:02.248" endtime="20230717 19:38:02.249"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20230717 19:38:02.249" endtime="20230717 19:38:02.249"/>
</kw>
<status status="PASS" starttime="20230717 19:38:02.243" endtime="20230717 19:38:02.249"/>
</kw>
<test id="s1-s9-s11-t1" name="Delete file with multi delete" line="31">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:38:02.267" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20230717 19:38:02.272" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:38:02.272" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:38:02.260" endtime="20230717 19:38:02.272"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:38:02.274" level="INFO"/>
<status status="PASS" starttime="20230717 19:38:02.273" endtime="20230717 19:38:02.274"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:38:02.275" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:38:02.274" endtime="20230717 19:38:02.275"/>
</kw>
<status status="PASS" starttime="20230717 19:38:02.257" endtime="20230717 19:38:02.276"/>
</kw>
<msg timestamp="20230717 19:38:02.276" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:38:02.256" endtime="20230717 19:38:02.276"/>
</kw>
<status status="PASS" starttime="20230717 19:38:02.253" endtime="20230717 19:38:02.276"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/multidelete/key=value/f1 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:38:02.287" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket link --key ozone-test-4127133133/multidelete/key=value/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:38:03.742" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:38:03.743" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:38:02.280" endtime="20230717 19:38:03.743"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:38:03.747" level="INFO"/>
<status status="PASS" starttime="20230717 19:38:03.745" endtime="20230717 19:38:03.747"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:38:03.749" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:38:03.747" endtime="20230717 19:38:03.749"/>
</kw>
<status status="PASS" starttime="20230717 19:38:02.279" endtime="20230717 19:38:03.749"/>
</kw>
<msg timestamp="20230717 19:38:03.749" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:38:02.278" endtime="20230717 19:38:03.750"/>
</kw>
<msg timestamp="20230717 19:38:03.750" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:38:02.278" endtime="20230717 19:38:03.750"/>
</kw>
<msg timestamp="20230717 19:38:03.750" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230717 19:38:02.276" endtime="20230717 19:38:03.750"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/multidelete/key=value/f2 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:38:03.766" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket link --key ozone-test-4127133133/multidelete/key=value/f2 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:38:05.195" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:38:05.195" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:38:03.760" endtime="20230717 19:38:05.195"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:38:05.197" level="INFO"/>
<status status="PASS" starttime="20230717 19:38:05.196" endtime="20230717 19:38:05.197"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:38:05.198" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:38:05.197" endtime="20230717 19:38:05.198"/>
</kw>
<status status="PASS" starttime="20230717 19:38:03.752" endtime="20230717 19:38:05.198"/>
</kw>
<msg timestamp="20230717 19:38:05.199" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:38:03.752" endtime="20230717 19:38:05.199"/>
</kw>
<msg timestamp="20230717 19:38:05.199" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:38:03.751" endtime="20230717 19:38:05.199"/>
</kw>
<msg timestamp="20230717 19:38:05.200" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230717 19:38:03.751" endtime="20230717 19:38:05.200"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/multidelete/key=value/f3 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:38:05.211" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket link --key ozone-test-4127133133/multidelete/key=value/f3 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:38:06.649" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:38:06.650" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:38:05.206" endtime="20230717 19:38:06.650"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:38:06.652" level="INFO"/>
<status status="PASS" starttime="20230717 19:38:06.651" endtime="20230717 19:38:06.652"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:38:06.653" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:38:06.652" endtime="20230717 19:38:06.653"/>
</kw>
<status status="PASS" starttime="20230717 19:38:05.205" endtime="20230717 19:38:06.654"/>
</kw>
<msg timestamp="20230717 19:38:06.654" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:38:05.204" endtime="20230717 19:38:06.655"/>
</kw>
<msg timestamp="20230717 19:38:06.655" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:38:05.202" endtime="20230717 19:38:06.655"/>
</kw>
<msg timestamp="20230717 19:38:06.656" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230717 19:38:05.200" endtime="20230717 19:38:06.656"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/multidelete/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:38:06.666" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket link --prefix ozone-test-4127133133/multidelete/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:38:07.989" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:38:07.989" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-4127133133/multidelete/key=value/",
            "LastModified": "2023-07-17T19:38:03.496Z",
            "ETag": "2023-07-17T19:38:03.496Z",...</msg>
<status status="PASS" starttime="20230717 19:38:06.661" endtime="20230717 19:38:07.989"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:38:07.991" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-4127133133/multidelete/key=value/",
            "LastModified": "2023-07-17T19:38:03.496Z",
            "ETag": "2023-07-17T19:38:03.496Z",
            "Size": 0,
            "StorageClass": "STANDARD"
        },
        {
            "Key": "ozone-test-4127133133/multidelete/key=value/f1",
            "LastModified": "2023-07-17T19:38:03.608Z",
            "ETag": "2023-07-17T19:38:03.608Z",
            "Size": 29,
            "StorageClass": "STANDARD"
        },
        {
            "Key": "ozone-test-4127133133/multidelete/key=value/f2",
            "LastModified": "2023-07-17T19:38:05.019Z",
            "ETag": "2023-07-17T19:38:05.019Z",
            "Size": 29,
            "StorageClass": "STANDARD"
        },
        {
            "Key": "ozone-test-4127133133/multidelete/key=value/f3",
            "LastModified": "2023-07-17T19:38:06.472Z",
            "ETag": "2023-07-17T19:38:06.472Z",
            "Size": 29,
            "StorageClass": "STANDARD"
        }
    ]
}</msg>
<status status="PASS" starttime="20230717 19:38:07.990" endtime="20230717 19:38:07.991"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:38:07.992" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:38:07.992" endtime="20230717 19:38:07.993"/>
</kw>
<status status="PASS" starttime="20230717 19:38:06.660" endtime="20230717 19:38:07.993"/>
</kw>
<msg timestamp="20230717 19:38:07.993" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:38:06.659" endtime="20230717 19:38:07.993"/>
</kw>
<msg timestamp="20230717 19:38:07.994" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-4127133133/multidelete/key=value/",
            "LastModified": "2023-07-17T19:38:03.496Z",
            "ETag": "2023-07-17T19:38:03.496Z",...</msg>
<status status="PASS" starttime="20230717 19:38:06.658" endtime="20230717 19:38:07.994"/>
</kw>
<msg timestamp="20230717 19:38:07.994" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-4127133133/multidelete/key=value/",
            "LastModified": "2023-07-17T19:38:03.496Z",
            "ETag": "2023-07-17T19:38:03.496Z",...</msg>
<status status="PASS" starttime="20230717 19:38:06.656" endtime="20230717 19:38:07.994"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/key=value/f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:38:07.995" endtime="20230717 19:38:07.997"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/key=value/f2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:38:07.997" endtime="20230717 19:38:07.999"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/key=value/f3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:38:08.001" endtime="20230717 19:38:08.002"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:38:08.002" endtime="20230717 19:38:08.003"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>REDUCED_REDUNDANCY</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:38:08.004" endtime="20230717 19:38:08.005"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-objects --bucket ${BUCKET} --delete 'Objects=[{Key=${PREFIX}/multidelete/key=value/f1},{Key=${PREFIX}/multidelete/key=value/f2},{Key=${PREFIX}/multidelete/key=value/f4}]'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:38:08.021" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-objects --bucket link --delete 'Objects=[{Key=ozone-test-4127133133/multidelete/key=value/f1},{Key=ozone-test-4127133133/multidelete/key=value/f2},{Key=ozone-test-4127133133/multidelete/key=value/f4}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:38:09.569" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:38:09.569" level="INFO">${output} = {
    "Deleted": [
        {
            "Key": "ozone-test-4127133133/multidelete/key=value/f1"
        },
        {
            "Key": "ozone-test-4127133133/multidelete/key=value/f2"
        },
   ...</msg>
<status status="PASS" starttime="20230717 19:38:08.014" endtime="20230717 19:38:09.569"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:38:09.575" level="INFO">{
    "Deleted": [
        {
            "Key": "ozone-test-4127133133/multidelete/key=value/f1"
        },
        {
            "Key": "ozone-test-4127133133/multidelete/key=value/f2"
        },
        {
            "Key": "ozone-test-4127133133/multidelete/key=value/f4"
        }
    ]
}</msg>
<status status="PASS" starttime="20230717 19:38:09.570" endtime="20230717 19:38:09.575"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:38:09.577" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:38:09.575" endtime="20230717 19:38:09.577"/>
</kw>
<status status="PASS" starttime="20230717 19:38:08.012" endtime="20230717 19:38:09.580"/>
</kw>
<msg timestamp="20230717 19:38:09.580" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:38:08.011" endtime="20230717 19:38:09.580"/>
</kw>
<msg timestamp="20230717 19:38:09.582" level="INFO">${output} = {
    "Deleted": [
        {
            "Key": "ozone-test-4127133133/multidelete/key=value/f1"
        },
        {
            "Key": "ozone-test-4127133133/multidelete/key=value/f2"
        },
   ...</msg>
<status status="PASS" starttime="20230717 19:38:08.008" endtime="20230717 19:38:09.582"/>
</kw>
<msg timestamp="20230717 19:38:09.582" level="INFO">${result} = {
    "Deleted": [
        {
            "Key": "ozone-test-4127133133/multidelete/key=value/f1"
        },
        {
            "Key": "ozone-test-4127133133/multidelete/key=value/f2"
        },
   ...</msg>
<status status="PASS" starttime="20230717 19:38:08.005" endtime="20230717 19:38:09.582"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:38:09.584" endtime="20230717 19:38:09.586"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/multidelete/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:38:09.606" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket link --prefix ozone-test-4127133133/multidelete/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:38:11.486" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:38:11.487" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-4127133133/multidelete/key=value/",
            "LastModified": "2023-07-17T19:38:03.496Z",
            "ETag": "2023-07-17T19:38:03.496Z",...</msg>
<status status="PASS" starttime="20230717 19:38:09.597" endtime="20230717 19:38:11.487"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:38:11.488" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-4127133133/multidelete/key=value/",
            "LastModified": "2023-07-17T19:38:03.496Z",
            "ETag": "2023-07-17T19:38:03.496Z",
            "Size": 0,
            "StorageClass": "STANDARD"
        },
        {
            "Key": "ozone-test-4127133133/multidelete/key=value/f3",
            "LastModified": "2023-07-17T19:38:06.472Z",
            "ETag": "2023-07-17T19:38:06.472Z",
            "Size": 29,
            "StorageClass": "STANDARD"
        }
    ]
}</msg>
<status status="PASS" starttime="20230717 19:38:11.487" endtime="20230717 19:38:11.488"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:38:11.489" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:38:11.488" endtime="20230717 19:38:11.489"/>
</kw>
<status status="PASS" starttime="20230717 19:38:09.596" endtime="20230717 19:38:11.489"/>
</kw>
<msg timestamp="20230717 19:38:11.489" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:38:09.594" endtime="20230717 19:38:11.489"/>
</kw>
<msg timestamp="20230717 19:38:11.492" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-4127133133/multidelete/key=value/",
            "LastModified": "2023-07-17T19:38:03.496Z",
            "ETag": "2023-07-17T19:38:03.496Z",...</msg>
<status status="PASS" starttime="20230717 19:38:09.593" endtime="20230717 19:38:11.492"/>
</kw>
<msg timestamp="20230717 19:38:11.493" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-4127133133/multidelete/key=value/",
            "LastModified": "2023-07-17T19:38:03.496Z",
            "ETag": "2023-07-17T19:38:03.496Z",...</msg>
<status status="PASS" starttime="20230717 19:38:09.589" endtime="20230717 19:38:11.493"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/key=value/f1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:38:11.493" endtime="20230717 19:38:11.494"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/key=value/f2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:38:11.494" endtime="20230717 19:38:11.495"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/key=value/f3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:38:11.495" endtime="20230717 19:38:11.496"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:38:11.497" endtime="20230717 19:38:11.497"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>REDUCED_REDUNDANCY</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:38:11.497" endtime="20230717 19:38:11.498"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:38:02.250" endtime="20230717 19:38:11.498"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20230717 19:38:02.214" endtime="20230717 19:38:11.500"/>
</suite>
<suite id="s1-s9-s12" name="Objectputget" source="/opt/hadoop/smoketest/s3/objectputget.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20230717 19:38:11.540" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:38:11.537" endtime="20230717 19:38:11.540"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20230717 19:38:11.541" endtime="20230717 19:38:11.541"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20230717 19:38:11.541" endtime="20230717 19:38:11.541"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:38:11.542" endtime="20230717 19:38:11.542"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:38:11.543" endtime="20230717 19:38:11.543"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:38:11.543" endtime="20230717 19:38:11.543"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:38:11.543" endtime="20230717 19:38:11.543"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230717 19:38:11.543" endtime="20230717 19:38:11.544"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20230717 19:38:11.544" endtime="20230717 19:38:11.544"/>
</kw>
<status status="PASS" starttime="20230717 19:38:11.537" endtime="20230717 19:38:11.544"/>
</kw>
<test id="s1-s9-s12-t1" name="Put object to s3" line="32">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:38:11.564" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile'.</msg>
<msg timestamp="20230717 19:38:11.568" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:38:11.568" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:38:11.552" endtime="20230717 19:38:11.568"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:38:11.574" level="INFO"/>
<status status="PASS" starttime="20230717 19:38:11.571" endtime="20230717 19:38:11.574"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:38:11.577" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:38:11.574" endtime="20230717 19:38:11.577"/>
</kw>
<status status="PASS" starttime="20230717 19:38:11.551" endtime="20230717 19:38:11.578"/>
</kw>
<msg timestamp="20230717 19:38:11.578" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:38:11.551" endtime="20230717 19:38:11.578"/>
</kw>
<status status="PASS" starttime="20230717 19:38:11.548" endtime="20230717 19:38:11.578"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:38:11.593" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket link --key ozone-test-4127133133/putobject/key=value/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:38:13.303" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:38:13.303" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:38:11.587" endtime="20230717 19:38:13.303"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:38:13.305" level="INFO"/>
<status status="PASS" starttime="20230717 19:38:13.304" endtime="20230717 19:38:13.305"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:38:13.306" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:38:13.305" endtime="20230717 19:38:13.306"/>
</kw>
<status status="PASS" starttime="20230717 19:38:11.585" endtime="20230717 19:38:13.307"/>
</kw>
<msg timestamp="20230717 19:38:13.307" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:38:11.582" endtime="20230717 19:38:13.307"/>
</kw>
<msg timestamp="20230717 19:38:13.308" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:38:11.582" endtime="20230717 19:38:13.308"/>
</kw>
<msg timestamp="20230717 19:38:13.308" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230717 19:38:11.581" endtime="20230717 19:38:13.308"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/putobject/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:38:13.317" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket link --prefix ozone-test-4127133133/putobject/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:38:14.727" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:38:14.727" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-4127133133/putobject/key=value/",
            "LastModified": "2023-07-17T19:38:12.992Z",
            "ETag": "2023-07-17T19:38:12.992Z",
 ...</msg>
<status status="PASS" starttime="20230717 19:38:13.313" endtime="20230717 19:38:14.727"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:38:14.729" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-4127133133/putobject/key=value/",
            "LastModified": "2023-07-17T19:38:12.992Z",
            "ETag": "2023-07-17T19:38:12.992Z",
            "Size": 0,
            "StorageClass": "STANDARD"
        },
        {
            "Key": "ozone-test-4127133133/putobject/key=value/f1",
            "LastModified": "2023-07-17T19:38:13.078Z",
            "ETag": "2023-07-17T19:38:13.078Z",
            "Size": 11,
            "StorageClass": "STANDARD"
        }
    ]
}</msg>
<status status="PASS" starttime="20230717 19:38:14.728" endtime="20230717 19:38:14.729"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:38:14.730" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:38:14.729" endtime="20230717 19:38:14.730"/>
</kw>
<status status="PASS" starttime="20230717 19:38:13.312" endtime="20230717 19:38:14.731"/>
</kw>
<msg timestamp="20230717 19:38:14.731" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:38:13.311" endtime="20230717 19:38:14.731"/>
</kw>
<msg timestamp="20230717 19:38:14.731" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-4127133133/putobject/key=value/",
            "LastModified": "2023-07-17T19:38:12.992Z",
            "ETag": "2023-07-17T19:38:12.992Z",
 ...</msg>
<status status="PASS" starttime="20230717 19:38:13.310" endtime="20230717 19:38:14.731"/>
</kw>
<msg timestamp="20230717 19:38:14.734" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-4127133133/putobject/key=value/",
            "LastModified": "2023-07-17T19:38:12.992Z",
            "ETag": "2023-07-17T19:38:12.992Z",
 ...</msg>
<status status="PASS" starttime="20230717 19:38:13.309" endtime="20230717 19:38:14.734"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:38:14.734" endtime="20230717 19:38:14.736"/>
</kw>
<kw name="Execute" library="os">
<arg>touch -f /tmp/zerobyte</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:38:14.748" level="INFO">Running command 'touch -f /tmp/zerobyte 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:38:14.756" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:38:14.756" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:38:14.741" endtime="20230717 19:38:14.756"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:38:14.760" level="INFO"/>
<status status="PASS" starttime="20230717 19:38:14.759" endtime="20230717 19:38:14.761"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:38:14.765" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:38:14.762" endtime="20230717 19:38:14.765"/>
</kw>
<status status="PASS" starttime="20230717 19:38:14.740" endtime="20230717 19:38:14.765"/>
</kw>
<msg timestamp="20230717 19:38:14.766" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:38:14.738" endtime="20230717 19:38:14.766"/>
</kw>
<status status="PASS" starttime="20230717 19:38:14.737" endtime="20230717 19:38:14.766"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/zerobyte --body /tmp/zerobyte</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:38:14.783" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket link --key ozone-test-4127133133/putobject/key=value/zerobyte --body /tmp/zerobyte 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:38:16.235" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:38:16.236" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:38:14.778" endtime="20230717 19:38:16.236"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:38:16.238" level="INFO"/>
<status status="PASS" starttime="20230717 19:38:16.237" endtime="20230717 19:38:16.238"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:38:16.240" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:38:16.239" endtime="20230717 19:38:16.240"/>
</kw>
<status status="PASS" starttime="20230717 19:38:14.776" endtime="20230717 19:38:16.240"/>
</kw>
<msg timestamp="20230717 19:38:16.240" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:38:14.772" endtime="20230717 19:38:16.241"/>
</kw>
<msg timestamp="20230717 19:38:16.241" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:38:14.770" endtime="20230717 19:38:16.241"/>
</kw>
<msg timestamp="20230717 19:38:16.241" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230717 19:38:14.767" endtime="20230717 19:38:16.241"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/putobject/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:38:16.251" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket link --prefix ozone-test-4127133133/putobject/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:38:17.533" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:38:17.533" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-4127133133/putobject/key=value/",
            "LastModified": "2023-07-17T19:38:12.992Z",
            "ETag": "2023-07-17T19:38:12.992Z",
 ...</msg>
<status status="PASS" starttime="20230717 19:38:16.246" endtime="20230717 19:38:17.533"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:38:17.535" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-4127133133/putobject/key=value/",
            "LastModified": "2023-07-17T19:38:12.992Z",
            "ETag": "2023-07-17T19:38:12.992Z",
            "Size": 0,
            "StorageClass": "STANDARD"
        },
        {
            "Key": "ozone-test-4127133133/putobject/key=value/f1",
            "LastModified": "2023-07-17T19:38:13.078Z",
            "ETag": "2023-07-17T19:38:13.078Z",
            "Size": 11,
            "StorageClass": "STANDARD"
        },
        {
            "Key": "ozone-test-4127133133/putobject/key=value/zerobyte/",
            "LastModified": "2023-07-17T19:38:16.053Z",
            "ETag": "2023-07-17T19:38:16.053Z",
            "Size": 0,
            "StorageClass": "STANDARD"
        }
    ]
}</msg>
<status status="PASS" starttime="20230717 19:38:17.534" endtime="20230717 19:38:17.535"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:38:17.536" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:38:17.535" endtime="20230717 19:38:17.536"/>
</kw>
<status status="PASS" starttime="20230717 19:38:16.245" endtime="20230717 19:38:17.536"/>
</kw>
<msg timestamp="20230717 19:38:17.536" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:38:16.244" endtime="20230717 19:38:17.544"/>
</kw>
<msg timestamp="20230717 19:38:17.545" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-4127133133/putobject/key=value/",
            "LastModified": "2023-07-17T19:38:12.992Z",
            "ETag": "2023-07-17T19:38:12.992Z",
 ...</msg>
<status status="PASS" starttime="20230717 19:38:16.243" endtime="20230717 19:38:17.545"/>
</kw>
<msg timestamp="20230717 19:38:17.545" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-4127133133/putobject/key=value/",
            "LastModified": "2023-07-17T19:38:12.992Z",
            "ETag": "2023-07-17T19:38:12.992Z",
 ...</msg>
<status status="PASS" starttime="20230717 19:38:16.242" endtime="20230717 19:38:17.545"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>zerobyte</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:38:17.548" endtime="20230717 19:38:17.551"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:38:11.544" endtime="20230717 19:38:17.551"/>
</test>
<test id="s1-s9-s12-t2" name="Get object from s3" line="44">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 /tmp/testfile.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:38:17.572" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key ozone-test-4127133133/putobject/key=value/f1 /tmp/testfile.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:38:19.280" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:38:19.280" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:38:13 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230717 19:38:17.566" endtime="20230717 19:38:19.280"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:38:19.283" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:38:13 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Mon, 17 Jul 2023 19:38:18 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230717 19:38:19.281" endtime="20230717 19:38:19.283"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:38:19.285" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:38:19.284" endtime="20230717 19:38:19.285"/>
</kw>
<status status="PASS" starttime="20230717 19:38:17.563" endtime="20230717 19:38:19.286"/>
</kw>
<msg timestamp="20230717 19:38:19.286" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:38:17.563" endtime="20230717 19:38:19.286"/>
</kw>
<msg timestamp="20230717 19:38:19.287" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:38:13 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230717 19:38:17.560" endtime="20230717 19:38:19.287"/>
</kw>
<msg timestamp="20230717 19:38:19.287" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:38:13 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230717 19:38:17.557" endtime="20230717 19:38:19.287"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/testfile</arg>
<arg>/tmp/testfile.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:38:19.314" level="INFO">Running command 'md5sum /tmp/testfile | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:38:19.331" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:38:19.331" level="INFO">${output} = 09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20230717 19:38:19.297" endtime="20230717 19:38:19.331"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:38:19.334" level="INFO">09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20230717 19:38:19.332" endtime="20230717 19:38:19.334"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:38:19.335" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:38:19.334" endtime="20230717 19:38:19.335"/>
</kw>
<status status="PASS" starttime="20230717 19:38:19.294" endtime="20230717 19:38:19.336"/>
</kw>
<msg timestamp="20230717 19:38:19.336" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:38:19.292" endtime="20230717 19:38:19.336"/>
</kw>
<msg timestamp="20230717 19:38:19.337" level="INFO">${checksumbefore} = 09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20230717 19:38:19.290" endtime="20230717 19:38:19.337"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:38:19.358" level="INFO">Running command 'md5sum /tmp/testfile.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:38:19.377" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:38:19.377" level="INFO">${output} = 09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20230717 19:38:19.343" endtime="20230717 19:38:19.377"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:38:19.380" level="INFO">09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20230717 19:38:19.378" endtime="20230717 19:38:19.380"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:38:19.381" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:38:19.380" endtime="20230717 19:38:19.381"/>
</kw>
<status status="PASS" starttime="20230717 19:38:19.341" endtime="20230717 19:38:19.382"/>
</kw>
<msg timestamp="20230717 19:38:19.382" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:38:19.340" endtime="20230717 19:38:19.382"/>
</kw>
<msg timestamp="20230717 19:38:19.383" level="INFO">${checksumafter} = 09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20230717 19:38:19.337" endtime="20230717 19:38:19.383"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230717 19:38:19.383" endtime="20230717 19:38:19.384"/>
</kw>
<status status="PASS" starttime="20230717 19:38:19.288" endtime="20230717 19:38:19.384"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:38:17.553" endtime="20230717 19:38:19.386"/>
</test>
<test id="s1-s9-s12-t3" name="Get object with wrong signature" line="49">
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230717 19:38:19.392" endtime="20230717 19:38:19.394"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>curl -i -H 'Authorization: AWS scm/scm@EXAMPLE.COM:asdfqwerty' ${ENDPOINT_URL}/${BUCKET}/${PREFIX}/putobject/key=value/f1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:38:19.412" level="INFO">Running command 'curl -i -H 'Authorization: AWS scm/scm@EXAMPLE.COM:asdfqwerty' http://s3g:9878/link/ozone-test-4127133133/putobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:38:19.465" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:38:19.465" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20230717 19:38:19.398" endtime="20230717 19:38:19.465"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:38:19.467" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
100   247  100   247    0     0  12089      0 --:--:-- --:--:-- --:--:-- 12350
HTTP/1.1 403 Forbidden
Date: Mon, 17 Jul 2023 19:38:19 GMT
Cache-Control: no-cache
Expires: Mon, 17 Jul 2023 19:38:19 GMT
Pragma: no-cache
Content-Type: text/plain
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Server: Ozone
x-amz-id-2: SbUEqAwBoq
x-amz-request-id: 742040d1-4d0b-403a-bc91-5d559a677baa
Content-Length: 247

&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;Error&gt;
  &lt;Code&gt;InvalidRequest&lt;/Code&gt;
  &lt;Message&gt;Error creating s3 auth info. The request may not be signed using AWS V4 signing algorithm, or might be invalid&lt;/Message&gt;
  &lt;Resource/&gt;
  &lt;RequestId/&gt;
&lt;/Error&gt;</msg>
<status status="PASS" starttime="20230717 19:38:19.466" endtime="20230717 19:38:19.468"/>
</kw>
<msg timestamp="20230717 19:38:19.469" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20230717 19:38:19.396" endtime="20230717 19:38:19.469"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>403 Forbidden</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:38:19.470" endtime="20230717 19:38:19.473"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:38:19.389" endtime="20230717 19:38:19.473"/>
</test>
<test id="s1-s9-s12-t4" name="Get Partial object from s3 with both start and endoffset" line="54">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=0-4 /tmp/testfile1.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:38:19.515" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key ozone-test-4127133133/putobject/key=value/f1 --range bytes=0-4 /tmp/testfile1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:38:20.798" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:38:20.798" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:38:13 GMT",
    "ContentLength": 5,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-4/11",
    "ContentType": "appl...</msg>
<status status="PASS" starttime="20230717 19:38:19.492" endtime="20230717 19:38:20.798"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:38:20.801" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:38:13 GMT",
    "ContentLength": 5,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-4/11",
    "ContentType": "application/octet-stream",
    "Expires": "Mon, 17 Jul 2023 19:38:20 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230717 19:38:20.799" endtime="20230717 19:38:20.802"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:38:20.803" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:38:20.802" endtime="20230717 19:38:20.803"/>
</kw>
<status status="PASS" starttime="20230717 19:38:19.490" endtime="20230717 19:38:20.804"/>
</kw>
<msg timestamp="20230717 19:38:20.804" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:38:19.487" endtime="20230717 19:38:20.805"/>
</kw>
<msg timestamp="20230717 19:38:20.805" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:38:13 GMT",
    "ContentLength": 5,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-4/11",
    "ContentType": "appl...</msg>
<status status="PASS" starttime="20230717 19:38:19.485" endtime="20230717 19:38:20.805"/>
</kw>
<msg timestamp="20230717 19:38:20.806" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:38:13 GMT",
    "ContentLength": 5,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-4/11",
    "ContentType": "appl...</msg>
<status status="PASS" starttime="20230717 19:38:19.481" endtime="20230717 19:38:20.806"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:38:20.806" endtime="20230717 19:38:20.807"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-4/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:38:20.807" endtime="20230717 19:38:20.808"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:38:20.809" endtime="20230717 19:38:20.810"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=0 bs=1 count=5 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:38:20.819" level="INFO">Running command 'dd if=/tmp/testfile skip=0 bs=1 count=5 2&gt;/dev/null'.</msg>
<msg timestamp="20230717 19:38:20.824" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:38:20.824" level="INFO">${output} = Rando</msg>
<status status="PASS" starttime="20230717 19:38:20.813" endtime="20230717 19:38:20.824"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:38:20.827" level="INFO">Rando</msg>
<status status="PASS" starttime="20230717 19:38:20.825" endtime="20230717 19:38:20.827"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:38:20.830" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:38:20.828" endtime="20230717 19:38:20.830"/>
</kw>
<status status="PASS" starttime="20230717 19:38:20.812" endtime="20230717 19:38:20.830"/>
</kw>
<msg timestamp="20230717 19:38:20.830" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:38:20.812" endtime="20230717 19:38:20.830"/>
</kw>
<msg timestamp="20230717 19:38:20.831" level="INFO">${expectedData} = Rando</msg>
<status status="PASS" starttime="20230717 19:38:20.811" endtime="20230717 19:38:20.831"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile1.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:38:20.840" level="INFO">Running command 'cat /tmp/testfile1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:38:20.846" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:38:20.846" level="INFO">${output} = Rando</msg>
<status status="PASS" starttime="20230717 19:38:20.835" endtime="20230717 19:38:20.846"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:38:20.849" level="INFO">Rando</msg>
<status status="PASS" starttime="20230717 19:38:20.848" endtime="20230717 19:38:20.850"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:38:20.851" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:38:20.850" endtime="20230717 19:38:20.851"/>
</kw>
<status status="PASS" starttime="20230717 19:38:20.833" endtime="20230717 19:38:20.852"/>
</kw>
<msg timestamp="20230717 19:38:20.852" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:38:20.832" endtime="20230717 19:38:20.853"/>
</kw>
<msg timestamp="20230717 19:38:20.853" level="INFO">${actualData} = Rando</msg>
<status status="PASS" starttime="20230717 19:38:20.831" endtime="20230717 19:38:20.853"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230717 19:38:20.854" endtime="20230717 19:38:20.855"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=2-4 /tmp/testfile1.result1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:38:20.866" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key ozone-test-4127133133/putobject/key=value/f1 --range bytes=2-4 /tmp/testfile1.result1 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:38:22.104" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:38:22.104" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:38:13 GMT",
    "ContentLength": 3,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 2-4/11",
    "ContentType": "appl...</msg>
<status status="PASS" starttime="20230717 19:38:20.860" endtime="20230717 19:38:22.104"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:38:22.107" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:38:13 GMT",
    "ContentLength": 3,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 2-4/11",
    "ContentType": "application/octet-stream",
    "Expires": "Mon, 17 Jul 2023 19:38:21 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230717 19:38:22.105" endtime="20230717 19:38:22.107"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:38:22.108" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:38:22.107" endtime="20230717 19:38:22.109"/>
</kw>
<status status="PASS" starttime="20230717 19:38:20.859" endtime="20230717 19:38:22.109"/>
</kw>
<msg timestamp="20230717 19:38:22.109" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:38:20.858" endtime="20230717 19:38:22.110"/>
</kw>
<msg timestamp="20230717 19:38:22.110" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:38:13 GMT",
    "ContentLength": 3,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 2-4/11",
    "ContentType": "appl...</msg>
<status status="PASS" starttime="20230717 19:38:20.857" endtime="20230717 19:38:22.110"/>
</kw>
<msg timestamp="20230717 19:38:22.110" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:38:13 GMT",
    "ContentLength": 3,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 2-4/11",
    "ContentType": "appl...</msg>
<status status="PASS" starttime="20230717 19:38:20.856" endtime="20230717 19:38:22.110"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:38:22.111" endtime="20230717 19:38:22.111"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 2-4/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:38:22.112" endtime="20230717 19:38:22.112"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:38:22.113" endtime="20230717 19:38:22.113"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=2 bs=1 count=3 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:38:22.122" level="INFO">Running command 'dd if=/tmp/testfile skip=2 bs=1 count=3 2&gt;/dev/null'.</msg>
<msg timestamp="20230717 19:38:22.127" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:38:22.127" level="INFO">${output} = ndo</msg>
<status status="PASS" starttime="20230717 19:38:22.116" endtime="20230717 19:38:22.127"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:38:22.130" level="INFO">ndo</msg>
<status status="PASS" starttime="20230717 19:38:22.128" endtime="20230717 19:38:22.130"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:38:22.131" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:38:22.130" endtime="20230717 19:38:22.131"/>
</kw>
<status status="PASS" starttime="20230717 19:38:22.115" endtime="20230717 19:38:22.132"/>
</kw>
<msg timestamp="20230717 19:38:22.132" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:38:22.115" endtime="20230717 19:38:22.132"/>
</kw>
<msg timestamp="20230717 19:38:22.132" level="INFO">${expectedData} = ndo</msg>
<status status="PASS" starttime="20230717 19:38:22.114" endtime="20230717 19:38:22.133"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile1.result1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:38:22.141" level="INFO">Running command 'cat /tmp/testfile1.result1 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:38:22.147" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:38:22.147" level="INFO">${output} = ndo</msg>
<status status="PASS" starttime="20230717 19:38:22.136" endtime="20230717 19:38:22.147"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:38:22.149" level="INFO">ndo</msg>
<status status="PASS" starttime="20230717 19:38:22.148" endtime="20230717 19:38:22.150"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:38:22.151" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:38:22.150" endtime="20230717 19:38:22.151"/>
</kw>
<status status="PASS" starttime="20230717 19:38:22.135" endtime="20230717 19:38:22.151"/>
</kw>
<msg timestamp="20230717 19:38:22.151" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:38:22.134" endtime="20230717 19:38:22.152"/>
</kw>
<msg timestamp="20230717 19:38:22.152" level="INFO">${actualData} = ndo</msg>
<status status="PASS" starttime="20230717 19:38:22.133" endtime="20230717 19:38:22.152"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230717 19:38:22.152" endtime="20230717 19:38:22.153"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=2-1000 /tmp/testfile1.result2</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:38:22.170" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key ozone-test-4127133133/putobject/key=value/f1 --range bytes=2-1000 /tmp/testfile1.result2 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:38:23.436" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:38:23.436" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:38:13 GMT",
    "ContentLength": 9,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 2-10/11",
    "ContentType": "app...</msg>
<status status="PASS" starttime="20230717 19:38:22.164" endtime="20230717 19:38:23.436"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:38:23.439" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:38:13 GMT",
    "ContentLength": 9,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 2-10/11",
    "ContentType": "application/octet-stream",
    "Expires": "Mon, 17 Jul 2023 19:38:23 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230717 19:38:23.436" endtime="20230717 19:38:23.439"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:38:23.442" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:38:23.440" endtime="20230717 19:38:23.442"/>
</kw>
<status status="PASS" starttime="20230717 19:38:22.156" endtime="20230717 19:38:23.443"/>
</kw>
<msg timestamp="20230717 19:38:23.443" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:38:22.156" endtime="20230717 19:38:23.444"/>
</kw>
<msg timestamp="20230717 19:38:23.444" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:38:13 GMT",
    "ContentLength": 9,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 2-10/11",
    "ContentType": "app...</msg>
<status status="PASS" starttime="20230717 19:38:22.155" endtime="20230717 19:38:23.444"/>
</kw>
<msg timestamp="20230717 19:38:23.445" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:38:13 GMT",
    "ContentLength": 9,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 2-10/11",
    "ContentType": "app...</msg>
<status status="PASS" starttime="20230717 19:38:22.153" endtime="20230717 19:38:23.445"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:38:23.445" endtime="20230717 19:38:23.447"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 2-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:38:23.447" endtime="20230717 19:38:23.450"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:38:23.450" endtime="20230717 19:38:23.452"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=2 bs=1 count=9 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:38:23.467" level="INFO">Running command 'dd if=/tmp/testfile skip=2 bs=1 count=9 2&gt;/dev/null'.</msg>
<msg timestamp="20230717 19:38:23.474" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:38:23.474" level="INFO">${output} = ndomtext</msg>
<status status="PASS" starttime="20230717 19:38:23.456" endtime="20230717 19:38:23.474"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:38:23.484" level="INFO">ndomtext</msg>
<status status="PASS" starttime="20230717 19:38:23.477" endtime="20230717 19:38:23.485"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:38:23.489" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:38:23.485" endtime="20230717 19:38:23.492"/>
</kw>
<status status="PASS" starttime="20230717 19:38:23.454" endtime="20230717 19:38:23.493"/>
</kw>
<msg timestamp="20230717 19:38:23.494" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:38:23.454" endtime="20230717 19:38:23.494"/>
</kw>
<msg timestamp="20230717 19:38:23.494" level="INFO">${expectedData} = ndomtext</msg>
<status status="PASS" starttime="20230717 19:38:23.452" endtime="20230717 19:38:23.494"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile1.result2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:38:23.515" level="INFO">Running command 'cat /tmp/testfile1.result2 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:38:23.518" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:38:23.518" level="INFO">${output} = ndomtext</msg>
<status status="PASS" starttime="20230717 19:38:23.505" endtime="20230717 19:38:23.519"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:38:23.523" level="INFO">ndomtext</msg>
<status status="PASS" starttime="20230717 19:38:23.520" endtime="20230717 19:38:23.523"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:38:23.525" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:38:23.523" endtime="20230717 19:38:23.525"/>
</kw>
<status status="PASS" starttime="20230717 19:38:23.502" endtime="20230717 19:38:23.526"/>
</kw>
<msg timestamp="20230717 19:38:23.526" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:38:23.500" endtime="20230717 19:38:23.527"/>
</kw>
<msg timestamp="20230717 19:38:23.527" level="INFO">${actualData} = ndomtext</msg>
<status status="PASS" starttime="20230717 19:38:23.495" endtime="20230717 19:38:23.527"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230717 19:38:23.528" endtime="20230717 19:38:23.530"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:38:19.476" endtime="20230717 19:38:23.530"/>
</test>
<test id="s1-s9-s12-t5" name="Get Partial object from s3 with both start and endoffset(start offset and endoffset is greater than file size)" line="80">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=10000-10000 /tmp/testfile2.result</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:38:23.551" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key ozone-test-4127133133/putobject/key=value/f1 --range bytes=10000-10000 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:38:25.065" level="INFO">${rc} = 255</msg>
<msg timestamp="20230717 19:38:25.065" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20230717 19:38:23.542" endtime="20230717 19:38:25.066"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:38:25.068" level="INFO">
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20230717 19:38:25.066" endtime="20230717 19:38:25.069"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:38:25.070" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:38:25.069" endtime="20230717 19:38:25.070"/>
</kw>
<msg timestamp="20230717 19:38:25.070" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20230717 19:38:23.539" endtime="20230717 19:38:25.070"/>
</kw>
<msg timestamp="20230717 19:38:25.071" level="INFO">${result} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20230717 19:38:23.536" endtime="20230717 19:38:25.071"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:38:25.071" endtime="20230717 19:38:25.072"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:38:23.532" endtime="20230717 19:38:25.072"/>
</test>
<test id="s1-s9-s12-t6" name="Get Partial object from s3 with both start and endoffset(end offset is greater than file size)" line="85">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=0-10000 /tmp/testfile2.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:38:25.083" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key ozone-test-4127133133/putobject/key=value/f1 --range bytes=0-10000 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:38:26.553" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:38:26.553" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:38:13 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-10/11",
    "ContentType": "ap...</msg>
<status status="PASS" starttime="20230717 19:38:25.079" endtime="20230717 19:38:26.554"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:38:26.556" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:38:13 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-10/11",
    "ContentType": "application/octet-stream",
    "Expires": "Mon, 17 Jul 2023 19:38:26 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230717 19:38:26.554" endtime="20230717 19:38:26.556"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:38:26.557" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:38:26.556" endtime="20230717 19:38:26.557"/>
</kw>
<status status="PASS" starttime="20230717 19:38:25.078" endtime="20230717 19:38:26.557"/>
</kw>
<msg timestamp="20230717 19:38:26.558" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:38:25.077" endtime="20230717 19:38:26.558"/>
</kw>
<msg timestamp="20230717 19:38:26.560" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:38:13 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-10/11",
    "ContentType": "ap...</msg>
<status status="PASS" starttime="20230717 19:38:25.076" endtime="20230717 19:38:26.560"/>
</kw>
<msg timestamp="20230717 19:38:26.560" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:38:13 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-10/11",
    "ContentType": "ap...</msg>
<status status="PASS" starttime="20230717 19:38:25.075" endtime="20230717 19:38:26.560"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:38:26.560" endtime="20230717 19:38:26.561"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:38:26.561" endtime="20230717 19:38:26.562"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:38:26.562" endtime="20230717 19:38:26.563"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:38:26.578" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:38:26.586" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:38:26.586" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20230717 19:38:26.566" endtime="20230717 19:38:26.586"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:38:26.588" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20230717 19:38:26.587" endtime="20230717 19:38:26.588"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:38:26.591" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:38:26.588" endtime="20230717 19:38:26.591"/>
</kw>
<status status="PASS" starttime="20230717 19:38:26.565" endtime="20230717 19:38:26.594"/>
</kw>
<msg timestamp="20230717 19:38:26.594" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:38:26.564" endtime="20230717 19:38:26.596"/>
</kw>
<msg timestamp="20230717 19:38:26.596" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20230717 19:38:26.564" endtime="20230717 19:38:26.596"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile2.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:38:26.609" level="INFO">Running command 'cat /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:38:26.615" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:38:26.615" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20230717 19:38:26.603" endtime="20230717 19:38:26.615"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:38:26.617" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20230717 19:38:26.616" endtime="20230717 19:38:26.617"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:38:26.619" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:38:26.618" endtime="20230717 19:38:26.619"/>
</kw>
<status status="PASS" starttime="20230717 19:38:26.600" endtime="20230717 19:38:26.619"/>
</kw>
<msg timestamp="20230717 19:38:26.619" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:38:26.599" endtime="20230717 19:38:26.619"/>
</kw>
<msg timestamp="20230717 19:38:26.620" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20230717 19:38:26.596" endtime="20230717 19:38:26.620"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230717 19:38:26.620" endtime="20230717 19:38:26.622"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:38:25.073" endtime="20230717 19:38:26.624"/>
</test>
<test id="s1-s9-s12-t7" name="Get Partial object from s3 with only start offset" line="94">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=0- /tmp/testfile3.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:38:26.649" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key ozone-test-4127133133/putobject/key=value/f1 --range bytes=0- /tmp/testfile3.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:38:28.108" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:38:28.108" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:38:13 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-10/11",
    "ContentType": "ap...</msg>
<status status="PASS" starttime="20230717 19:38:26.642" endtime="20230717 19:38:28.108"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:38:28.112" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:38:13 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-10/11",
    "ContentType": "application/octet-stream",
    "Expires": "Mon, 17 Jul 2023 19:38:27 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230717 19:38:28.109" endtime="20230717 19:38:28.112"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:38:28.113" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:38:28.112" endtime="20230717 19:38:28.113"/>
</kw>
<status status="PASS" starttime="20230717 19:38:26.640" endtime="20230717 19:38:28.115"/>
</kw>
<msg timestamp="20230717 19:38:28.115" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:38:26.638" endtime="20230717 19:38:28.115"/>
</kw>
<msg timestamp="20230717 19:38:28.116" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:38:13 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-10/11",
    "ContentType": "ap...</msg>
<status status="PASS" starttime="20230717 19:38:26.633" endtime="20230717 19:38:28.116"/>
</kw>
<msg timestamp="20230717 19:38:28.117" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:38:13 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-10/11",
    "ContentType": "ap...</msg>
<status status="PASS" starttime="20230717 19:38:26.630" endtime="20230717 19:38:28.117"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:38:28.117" endtime="20230717 19:38:28.119"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:38:28.119" endtime="20230717 19:38:28.121"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:38:28.122" endtime="20230717 19:38:28.123"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:38:28.140" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:38:28.147" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:38:28.147" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20230717 19:38:28.134" endtime="20230717 19:38:28.147"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:38:28.149" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20230717 19:38:28.148" endtime="20230717 19:38:28.149"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:38:28.151" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:38:28.150" endtime="20230717 19:38:28.151"/>
</kw>
<status status="PASS" starttime="20230717 19:38:28.131" endtime="20230717 19:38:28.151"/>
</kw>
<msg timestamp="20230717 19:38:28.152" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:38:28.125" endtime="20230717 19:38:28.152"/>
</kw>
<msg timestamp="20230717 19:38:28.152" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20230717 19:38:28.124" endtime="20230717 19:38:28.152"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile3.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:38:28.161" level="INFO">Running command 'cat /tmp/testfile3.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:38:28.167" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:38:28.168" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20230717 19:38:28.154" endtime="20230717 19:38:28.168"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:38:28.171" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20230717 19:38:28.168" endtime="20230717 19:38:28.171"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:38:28.173" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:38:28.171" endtime="20230717 19:38:28.173"/>
</kw>
<status status="PASS" starttime="20230717 19:38:28.154" endtime="20230717 19:38:28.173"/>
</kw>
<msg timestamp="20230717 19:38:28.173" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:38:28.153" endtime="20230717 19:38:28.173"/>
</kw>
<msg timestamp="20230717 19:38:28.174" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20230717 19:38:28.152" endtime="20230717 19:38:28.174"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230717 19:38:28.174" endtime="20230717 19:38:28.175"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:38:26.625" endtime="20230717 19:38:28.175"/>
</test>
<test id="s1-s9-s12-t8" name="Get Partial object from s3 with both start and endoffset which are equal" line="103">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=0-0 /tmp/testfile4.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:38:28.190" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key ozone-test-4127133133/putobject/key=value/f1 --range bytes=0-0 /tmp/testfile4.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:38:29.914" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:38:29.914" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:38:13 GMT",
    "ContentLength": 1,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-0/11",
    "ContentType": "appl...</msg>
<status status="PASS" starttime="20230717 19:38:28.186" endtime="20230717 19:38:29.917"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:38:29.924" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:38:13 GMT",
    "ContentLength": 1,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-0/11",
    "ContentType": "application/octet-stream",
    "Expires": "Mon, 17 Jul 2023 19:38:29 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230717 19:38:29.919" endtime="20230717 19:38:29.924"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:38:29.927" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:38:29.925" endtime="20230717 19:38:29.928"/>
</kw>
<status status="PASS" starttime="20230717 19:38:28.185" endtime="20230717 19:38:29.928"/>
</kw>
<msg timestamp="20230717 19:38:29.928" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:38:28.184" endtime="20230717 19:38:29.931"/>
</kw>
<msg timestamp="20230717 19:38:29.932" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:38:13 GMT",
    "ContentLength": 1,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-0/11",
    "ContentType": "appl...</msg>
<status status="PASS" starttime="20230717 19:38:28.184" endtime="20230717 19:38:29.932"/>
</kw>
<msg timestamp="20230717 19:38:29.933" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:38:13 GMT",
    "ContentLength": 1,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-0/11",
    "ContentType": "appl...</msg>
<status status="PASS" starttime="20230717 19:38:28.180" endtime="20230717 19:38:29.934"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:38:29.935" endtime="20230717 19:38:29.936"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-0/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:38:29.936" endtime="20230717 19:38:29.938"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:38:29.938" endtime="20230717 19:38:29.942"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=0 bs=1 count=1 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:38:29.953" level="INFO">Running command 'dd if=/tmp/testfile skip=0 bs=1 count=1 2&gt;/dev/null'.</msg>
<msg timestamp="20230717 19:38:29.963" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:38:29.963" level="INFO">${output} = R</msg>
<status status="PASS" starttime="20230717 19:38:29.947" endtime="20230717 19:38:29.963"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:38:29.968" level="INFO">R</msg>
<status status="PASS" starttime="20230717 19:38:29.966" endtime="20230717 19:38:29.970"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:38:29.974" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:38:29.972" endtime="20230717 19:38:29.974"/>
</kw>
<status status="PASS" starttime="20230717 19:38:29.946" endtime="20230717 19:38:29.974"/>
</kw>
<msg timestamp="20230717 19:38:29.974" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:38:29.944" endtime="20230717 19:38:29.974"/>
</kw>
<msg timestamp="20230717 19:38:29.975" level="INFO">${expectedData} = R</msg>
<status status="PASS" starttime="20230717 19:38:29.943" endtime="20230717 19:38:29.975"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile4.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:38:29.980" level="INFO">Running command 'cat /tmp/testfile4.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:38:29.990" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:38:29.990" level="INFO">${output} = R</msg>
<status status="PASS" starttime="20230717 19:38:29.976" endtime="20230717 19:38:29.990"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:38:29.992" level="INFO">R</msg>
<status status="PASS" starttime="20230717 19:38:29.991" endtime="20230717 19:38:29.992"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:38:29.993" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:38:29.992" endtime="20230717 19:38:29.993"/>
</kw>
<status status="PASS" starttime="20230717 19:38:29.976" endtime="20230717 19:38:29.994"/>
</kw>
<msg timestamp="20230717 19:38:29.994" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:38:29.975" endtime="20230717 19:38:29.994"/>
</kw>
<msg timestamp="20230717 19:38:29.994" level="INFO">${actualData} = R</msg>
<status status="PASS" starttime="20230717 19:38:29.975" endtime="20230717 19:38:29.994"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230717 19:38:29.995" endtime="20230717 19:38:29.995"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=4-4 /tmp/testfile5.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:38:30.003" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key ozone-test-4127133133/putobject/key=value/f1 --range bytes=4-4 /tmp/testfile5.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:38:31.610" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:38:31.610" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:38:13 GMT",
    "ContentLength": 1,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 4-4/11",
    "ContentType": "appl...</msg>
<status status="PASS" starttime="20230717 19:38:29.999" endtime="20230717 19:38:31.610"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:38:31.612" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:38:13 GMT",
    "ContentLength": 1,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 4-4/11",
    "ContentType": "application/octet-stream",
    "Expires": "Mon, 17 Jul 2023 19:38:31 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230717 19:38:31.611" endtime="20230717 19:38:31.612"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:38:31.614" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:38:31.612" endtime="20230717 19:38:31.614"/>
</kw>
<status status="PASS" starttime="20230717 19:38:29.998" endtime="20230717 19:38:31.614"/>
</kw>
<msg timestamp="20230717 19:38:31.615" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:38:29.998" endtime="20230717 19:38:31.615"/>
</kw>
<msg timestamp="20230717 19:38:31.615" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:38:13 GMT",
    "ContentLength": 1,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 4-4/11",
    "ContentType": "appl...</msg>
<status status="PASS" starttime="20230717 19:38:29.997" endtime="20230717 19:38:31.615"/>
</kw>
<msg timestamp="20230717 19:38:31.618" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:38:13 GMT",
    "ContentLength": 1,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 4-4/11",
    "ContentType": "appl...</msg>
<status status="PASS" starttime="20230717 19:38:29.996" endtime="20230717 19:38:31.618"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:38:31.622" endtime="20230717 19:38:31.627"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 4-4/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:38:31.627" endtime="20230717 19:38:31.628"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:38:31.629" endtime="20230717 19:38:31.630"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=4 bs=1 count=1 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:38:31.639" level="INFO">Running command 'dd if=/tmp/testfile skip=4 bs=1 count=1 2&gt;/dev/null'.</msg>
<msg timestamp="20230717 19:38:31.645" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:38:31.645" level="INFO">${output} = o</msg>
<status status="PASS" starttime="20230717 19:38:31.634" endtime="20230717 19:38:31.645"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:38:31.647" level="INFO">o</msg>
<status status="PASS" starttime="20230717 19:38:31.646" endtime="20230717 19:38:31.647"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:38:31.648" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:38:31.647" endtime="20230717 19:38:31.648"/>
</kw>
<status status="PASS" starttime="20230717 19:38:31.632" endtime="20230717 19:38:31.649"/>
</kw>
<msg timestamp="20230717 19:38:31.649" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:38:31.632" endtime="20230717 19:38:31.649"/>
</kw>
<msg timestamp="20230717 19:38:31.650" level="INFO">${expectedData} = o</msg>
<status status="PASS" starttime="20230717 19:38:31.631" endtime="20230717 19:38:31.650"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile5.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:38:31.658" level="INFO">Running command 'cat /tmp/testfile5.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:38:31.663" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:38:31.664" level="INFO">${output} = o</msg>
<status status="PASS" starttime="20230717 19:38:31.654" endtime="20230717 19:38:31.664"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:38:31.666" level="INFO">o</msg>
<status status="PASS" starttime="20230717 19:38:31.665" endtime="20230717 19:38:31.666"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:38:31.667" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:38:31.666" endtime="20230717 19:38:31.667"/>
</kw>
<status status="PASS" starttime="20230717 19:38:31.652" endtime="20230717 19:38:31.668"/>
</kw>
<msg timestamp="20230717 19:38:31.668" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:38:31.652" endtime="20230717 19:38:31.668"/>
</kw>
<msg timestamp="20230717 19:38:31.668" level="INFO">${actualData} = o</msg>
<status status="PASS" starttime="20230717 19:38:31.650" endtime="20230717 19:38:31.669"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230717 19:38:31.669" endtime="20230717 19:38:31.670"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:38:28.178" endtime="20230717 19:38:31.670"/>
</test>
<test id="s1-s9-s12-t9" name="Get Partial object from s3 to get last n bytes" line="120">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=-4 /tmp/testfile6.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:38:31.683" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key ozone-test-4127133133/putobject/key=value/f1 --range bytes=-4 /tmp/testfile6.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:38:33.269" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:38:33.269" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:38:13 GMT",
    "ContentLength": 4,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 7-10/11",
    "ContentType": "app...</msg>
<status status="PASS" starttime="20230717 19:38:31.679" endtime="20230717 19:38:33.269"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:38:33.271" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:38:13 GMT",
    "ContentLength": 4,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 7-10/11",
    "ContentType": "application/octet-stream",
    "Expires": "Mon, 17 Jul 2023 19:38:33 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230717 19:38:33.270" endtime="20230717 19:38:33.272"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:38:33.273" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:38:33.272" endtime="20230717 19:38:33.273"/>
</kw>
<status status="PASS" starttime="20230717 19:38:31.678" endtime="20230717 19:38:33.277"/>
</kw>
<msg timestamp="20230717 19:38:33.277" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:38:31.677" endtime="20230717 19:38:33.278"/>
</kw>
<msg timestamp="20230717 19:38:33.278" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:38:13 GMT",
    "ContentLength": 4,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 7-10/11",
    "ContentType": "app...</msg>
<status status="PASS" starttime="20230717 19:38:31.676" endtime="20230717 19:38:33.278"/>
</kw>
<msg timestamp="20230717 19:38:33.280" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:38:13 GMT",
    "ContentLength": 4,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 7-10/11",
    "ContentType": "app...</msg>
<status status="PASS" starttime="20230717 19:38:31.675" endtime="20230717 19:38:33.280"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:38:33.281" endtime="20230717 19:38:33.282"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 7-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:38:33.282" endtime="20230717 19:38:33.283"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:38:33.283" endtime="20230717 19:38:33.284"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=7 bs=1 count=4 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:38:33.298" level="INFO">Running command 'dd if=/tmp/testfile skip=7 bs=1 count=4 2&gt;/dev/null'.</msg>
<msg timestamp="20230717 19:38:33.305" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:38:33.305" level="INFO">${output} = ext</msg>
<status status="PASS" starttime="20230717 19:38:33.287" endtime="20230717 19:38:33.305"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:38:33.307" level="INFO">ext</msg>
<status status="PASS" starttime="20230717 19:38:33.306" endtime="20230717 19:38:33.308"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:38:33.309" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:38:33.308" endtime="20230717 19:38:33.309"/>
</kw>
<status status="PASS" starttime="20230717 19:38:33.286" endtime="20230717 19:38:33.309"/>
</kw>
<msg timestamp="20230717 19:38:33.310" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:38:33.286" endtime="20230717 19:38:33.310"/>
</kw>
<msg timestamp="20230717 19:38:33.310" level="INFO">${expectedData} = ext</msg>
<status status="PASS" starttime="20230717 19:38:33.284" endtime="20230717 19:38:33.310"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile6.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:38:33.319" level="INFO">Running command 'cat /tmp/testfile6.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:38:33.324" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:38:33.324" level="INFO">${output} = ext</msg>
<status status="PASS" starttime="20230717 19:38:33.314" endtime="20230717 19:38:33.324"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:38:33.326" level="INFO">ext</msg>
<status status="PASS" starttime="20230717 19:38:33.325" endtime="20230717 19:38:33.326"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:38:33.327" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:38:33.327" endtime="20230717 19:38:33.328"/>
</kw>
<status status="PASS" starttime="20230717 19:38:33.312" endtime="20230717 19:38:33.328"/>
</kw>
<msg timestamp="20230717 19:38:33.328" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:38:33.311" endtime="20230717 19:38:33.328"/>
</kw>
<msg timestamp="20230717 19:38:33.329" level="INFO">${actualData} = ext</msg>
<status status="PASS" starttime="20230717 19:38:33.311" endtime="20230717 19:38:33.329"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230717 19:38:33.329" endtime="20230717 19:38:33.330"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=-10000 /tmp/testfile7.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:38:33.339" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key ozone-test-4127133133/putobject/key=value/f1 --range bytes=-10000 /tmp/testfile7.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:38:34.881" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:38:34.881" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:38:13 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-10/11",
    "ContentType": "ap...</msg>
<status status="PASS" starttime="20230717 19:38:33.334" endtime="20230717 19:38:34.881"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:38:34.884" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:38:13 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-10/11",
    "ContentType": "application/octet-stream",
    "Expires": "Mon, 17 Jul 2023 19:38:34 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230717 19:38:34.882" endtime="20230717 19:38:34.884"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:38:34.887" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:38:34.885" endtime="20230717 19:38:34.887"/>
</kw>
<status status="PASS" starttime="20230717 19:38:33.333" endtime="20230717 19:38:34.887"/>
</kw>
<msg timestamp="20230717 19:38:34.887" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:38:33.332" endtime="20230717 19:38:34.888"/>
</kw>
<msg timestamp="20230717 19:38:34.888" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:38:13 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-10/11",
    "ContentType": "ap...</msg>
<status status="PASS" starttime="20230717 19:38:33.331" endtime="20230717 19:38:34.889"/>
</kw>
<msg timestamp="20230717 19:38:34.889" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:38:13 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-10/11",
    "ContentType": "ap...</msg>
<status status="PASS" starttime="20230717 19:38:33.330" endtime="20230717 19:38:34.889"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:38:34.891" endtime="20230717 19:38:34.891"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:38:34.892" endtime="20230717 19:38:34.892"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:38:34.894" endtime="20230717 19:38:34.894"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:38:34.906" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:38:34.914" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:38:34.914" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20230717 19:38:34.898" endtime="20230717 19:38:34.914"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:38:34.917" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20230717 19:38:34.916" endtime="20230717 19:38:34.917"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:38:34.919" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:38:34.919" endtime="20230717 19:38:34.920"/>
</kw>
<status status="PASS" starttime="20230717 19:38:34.896" endtime="20230717 19:38:34.920"/>
</kw>
<msg timestamp="20230717 19:38:34.920" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:38:34.896" endtime="20230717 19:38:34.921"/>
</kw>
<msg timestamp="20230717 19:38:34.921" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20230717 19:38:34.895" endtime="20230717 19:38:34.922"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile7.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:38:34.933" level="INFO">Running command 'cat /tmp/testfile7.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:38:34.941" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:38:34.941" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20230717 19:38:34.926" endtime="20230717 19:38:34.941"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:38:34.945" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20230717 19:38:34.942" endtime="20230717 19:38:34.945"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:38:34.947" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:38:34.945" endtime="20230717 19:38:34.947"/>
</kw>
<status status="PASS" starttime="20230717 19:38:34.924" endtime="20230717 19:38:34.947"/>
</kw>
<msg timestamp="20230717 19:38:34.947" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:38:34.924" endtime="20230717 19:38:34.948"/>
</kw>
<msg timestamp="20230717 19:38:34.948" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20230717 19:38:34.923" endtime="20230717 19:38:34.949"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230717 19:38:34.949" endtime="20230717 19:38:34.951"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:38:31.673" endtime="20230717 19:38:34.952"/>
</test>
<test id="s1-s9-s12-t10" name="Incorrect values for end and start offset" line="138">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=-11-10000 /tmp/testfile8.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:38:34.970" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key ozone-test-4127133133/putobject/key=value/f1 --range bytes=-11-10000 /tmp/testfile8.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:38:36.364" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:38:36.365" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:38:13 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230717 19:38:34.963" endtime="20230717 19:38:36.365"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:38:36.369" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:38:13 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Mon, 17 Jul 2023 19:38:36 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230717 19:38:36.366" endtime="20230717 19:38:36.369"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:38:36.372" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:38:36.371" endtime="20230717 19:38:36.373"/>
</kw>
<status status="PASS" starttime="20230717 19:38:34.963" endtime="20230717 19:38:36.374"/>
</kw>
<msg timestamp="20230717 19:38:36.374" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:38:34.961" endtime="20230717 19:38:36.376"/>
</kw>
<msg timestamp="20230717 19:38:36.376" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:38:13 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230717 19:38:34.959" endtime="20230717 19:38:36.376"/>
</kw>
<msg timestamp="20230717 19:38:36.376" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:38:13 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230717 19:38:34.956" endtime="20230717 19:38:36.377"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:38:36.378" endtime="20230717 19:38:36.380"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:38:36.380" endtime="20230717 19:38:36.382"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:38:36.395" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:38:36.405" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:38:36.405" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20230717 19:38:36.388" endtime="20230717 19:38:36.406"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:38:36.409" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20230717 19:38:36.407" endtime="20230717 19:38:36.410"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:38:36.412" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:38:36.410" endtime="20230717 19:38:36.413"/>
</kw>
<status status="PASS" starttime="20230717 19:38:36.387" endtime="20230717 19:38:36.414"/>
</kw>
<msg timestamp="20230717 19:38:36.414" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:38:36.385" endtime="20230717 19:38:36.414"/>
</kw>
<msg timestamp="20230717 19:38:36.415" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20230717 19:38:36.383" endtime="20230717 19:38:36.415"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile8.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:38:36.428" level="INFO">Running command 'cat /tmp/testfile8.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:38:36.436" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:38:36.436" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20230717 19:38:36.420" endtime="20230717 19:38:36.436"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:38:36.439" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20230717 19:38:36.438" endtime="20230717 19:38:36.439"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:38:36.441" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:38:36.440" endtime="20230717 19:38:36.441"/>
</kw>
<status status="PASS" starttime="20230717 19:38:36.418" endtime="20230717 19:38:36.441"/>
</kw>
<msg timestamp="20230717 19:38:36.442" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:38:36.416" endtime="20230717 19:38:36.442"/>
</kw>
<msg timestamp="20230717 19:38:36.443" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20230717 19:38:36.415" endtime="20230717 19:38:36.443"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230717 19:38:36.443" endtime="20230717 19:38:36.444"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=11-8 /tmp/testfile9.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:38:36.463" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key ozone-test-4127133133/putobject/key=value/f1 --range bytes=11-8 /tmp/testfile9.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:38:38.085" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:38:38.085" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:38:13 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230717 19:38:36.454" endtime="20230717 19:38:38.085"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:38:38.088" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:38:13 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Mon, 17 Jul 2023 19:38:37 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230717 19:38:38.086" endtime="20230717 19:38:38.088"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:38:38.090" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:38:38.088" endtime="20230717 19:38:38.090"/>
</kw>
<status status="PASS" starttime="20230717 19:38:36.453" endtime="20230717 19:38:38.091"/>
</kw>
<msg timestamp="20230717 19:38:38.091" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:38:36.451" endtime="20230717 19:38:38.091"/>
</kw>
<msg timestamp="20230717 19:38:38.091" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:38:13 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230717 19:38:36.449" endtime="20230717 19:38:38.091"/>
</kw>
<msg timestamp="20230717 19:38:38.091" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Mon, 17 Jul 2023 19:38:13 GMT",
    "ContentLength": 11,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230717 19:38:36.445" endtime="20230717 19:38:38.092"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:38:38.092" endtime="20230717 19:38:38.092"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:38:38.092" endtime="20230717 19:38:38.093"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:38:38.103" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:38:38.108" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:38:38.108" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20230717 19:38:38.095" endtime="20230717 19:38:38.108"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:38:38.112" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20230717 19:38:38.109" endtime="20230717 19:38:38.113"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:38:38.113" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:38:38.113" endtime="20230717 19:38:38.114"/>
</kw>
<status status="PASS" starttime="20230717 19:38:38.095" endtime="20230717 19:38:38.114"/>
</kw>
<msg timestamp="20230717 19:38:38.114" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:38:38.094" endtime="20230717 19:38:38.114"/>
</kw>
<msg timestamp="20230717 19:38:38.115" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20230717 19:38:38.093" endtime="20230717 19:38:38.115"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile8.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:38:38.124" level="INFO">Running command 'cat /tmp/testfile8.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:38:38.133" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:38:38.133" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20230717 19:38:38.118" endtime="20230717 19:38:38.133"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:38:38.135" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20230717 19:38:38.134" endtime="20230717 19:38:38.135"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:38:38.136" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:38:38.136" endtime="20230717 19:38:38.136"/>
</kw>
<status status="PASS" starttime="20230717 19:38:38.117" endtime="20230717 19:38:38.137"/>
</kw>
<msg timestamp="20230717 19:38:38.137" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:38:38.116" endtime="20230717 19:38:38.137"/>
</kw>
<msg timestamp="20230717 19:38:38.137" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20230717 19:38:38.115" endtime="20230717 19:38:38.137"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230717 19:38:38.137" endtime="20230717 19:38:38.138"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:38:34.954" endtime="20230717 19:38:38.139"/>
</test>
<test id="s1-s9-s12-t11" name="Zero byte file" line="153">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /s3v/${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:38:38.150" level="INFO">Running command 'ozone sh bucket info /s3v/link 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:38:59.622" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:38:59.622" level="INFO">${output} = {
  "volumeName" : "s3v",
  "bucketName" : "link",
  "sourceVolume" : "legacy",
  "sourceBucket" : "source-bucket",
  "creationTime" : "2023-07-17T19:25:45.252Z",
  "modificationTime" : "2023-07-17T19...</msg>
<status status="PASS" starttime="20230717 19:38:38.145" endtime="20230717 19:38:59.622"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:38:59.626" level="INFO">{
  "volumeName" : "s3v",
  "bucketName" : "link",
  "sourceVolume" : "legacy",
  "sourceBucket" : "source-bucket",
  "creationTime" : "2023-07-17T19:25:45.252Z",
  "modificationTime" : "2023-07-17T19:25:45.252Z",
  "owner" : "testuser"
}</msg>
<status status="PASS" starttime="20230717 19:38:59.624" endtime="20230717 19:38:59.626"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:38:59.630" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:38:59.629" endtime="20230717 19:38:59.630"/>
</kw>
<status status="PASS" starttime="20230717 19:38:38.144" endtime="20230717 19:38:59.632"/>
</kw>
<msg timestamp="20230717 19:38:59.632" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:38:38.144" endtime="20230717 19:38:59.632"/>
</kw>
<msg timestamp="20230717 19:38:59.634" level="INFO">${result} = {
  "volumeName" : "s3v",
  "bucketName" : "link",
  "sourceVolume" : "legacy",
  "sourceBucket" : "source-bucket",
  "creationTime" : "2023-07-17T19:25:45.252Z",
  "modificationTime" : "2023-07-17T19...</msg>
<status status="PASS" starttime="20230717 19:38:38.143" endtime="20230717 19:38:59.635"/>
</kw>
<kw name="Execute" library="os">
<var>${linked}</var>
<arg>echo '${result}' | jq -j '.sourceVolume,"/",.sourceBucket'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:38:59.654" level="INFO">Running command 'echo '{
  "volumeName" : "s3v",
  "bucketName" : "link",
  "sourceVolume" : "legacy",
  "sourceBucket" : "source-bucket",
  "creationTime" : "2023-07-17T19:25:45.252Z",
  "modificationTime" : "2023-07-17T19:25:45.252Z",
  "owner" : "testuser"
}' | jq -j '.sourceVolume,"/",.sourceBucket' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:38:59.810" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:38:59.810" level="INFO">${output} = legacy/source-bucket</msg>
<status status="PASS" starttime="20230717 19:38:59.642" endtime="20230717 19:38:59.811"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:38:59.818" level="INFO">legacy/source-bucket</msg>
<status status="PASS" starttime="20230717 19:38:59.814" endtime="20230717 19:38:59.819"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:38:59.821" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:38:59.820" endtime="20230717 19:38:59.822"/>
</kw>
<status status="PASS" starttime="20230717 19:38:59.640" endtime="20230717 19:38:59.823"/>
</kw>
<msg timestamp="20230717 19:38:59.823" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:38:59.640" endtime="20230717 19:38:59.824"/>
</kw>
<msg timestamp="20230717 19:38:59.827" level="INFO">${linked} = legacy/source-bucket</msg>
<status status="PASS" starttime="20230717 19:38:59.636" endtime="20230717 19:38:59.827"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${eval}</var>
<arg>"source" in """${linked}"""</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230717 19:38:59.829" level="INFO">${eval} = True</msg>
<status status="PASS" starttime="20230717 19:38:59.827" endtime="20230717 19:38:59.829"/>
</kw>
<if>
<branch type="IF" condition="${eval} == ${True}">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${linked}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:38:59.848" level="INFO">Running command 'ozone sh bucket info legacy/source-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:39:20.100" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:39:20.100" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "legacy",
  "name" : "source-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 364929408,
  "usedNamespace" : 53,
  "creationTime" : "20...</msg>
<status status="PASS" starttime="20230717 19:38:59.839" endtime="20230717 19:39:20.100"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:39:20.104" level="INFO">{
  "metadata" : { },
  "volumeName" : "legacy",
  "name" : "source-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 364929408,
  "usedNamespace" : 53,
  "creationTime" : "2023-07-17T19:25:25.085Z",
  "modificationTime" : "2023-07-17T19:25:25.085Z",
  "sourcePathExist" : true,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "FILE_SYSTEM_OPTIMIZED",
  "owner" : "testuser",
  "link" : false
}</msg>
<status status="PASS" starttime="20230717 19:39:20.102" endtime="20230717 19:39:20.104"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:39:20.108" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:39:20.106" endtime="20230717 19:39:20.108"/>
</kw>
<status status="PASS" starttime="20230717 19:38:59.837" endtime="20230717 19:39:20.109"/>
</kw>
<msg timestamp="20230717 19:39:20.109" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:38:59.835" endtime="20230717 19:39:20.109"/>
</kw>
<msg timestamp="20230717 19:39:20.110" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "legacy",
  "name" : "source-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 364929408,
  "usedNamespace" : 53,
  "creationTime" : "20...</msg>
<status status="PASS" starttime="20230717 19:38:59.832" endtime="20230717 19:39:20.111"/>
</kw>
<status status="PASS" starttime="20230717 19:38:59.831" endtime="20230717 19:39:20.111"/>
</branch>
<status status="PASS" starttime="20230717 19:38:59.829" endtime="20230717 19:39:20.111"/>
</if>
<kw name="Evaluate" library="BuiltIn">
<var>${fsolayout}</var>
<arg>"OPTIMIZED" in """${result}"""</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230717 19:39:20.114" level="INFO">${fsolayout} = True</msg>
<status status="PASS" starttime="20230717 19:39:20.111" endtime="20230717 19:39:20.114"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/zerobyte --range bytes=0-0 /tmp/testfile2.result</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:39:20.131" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key ozone-test-4127133133/putobject/key=value/zerobyte --range bytes=0-0 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:39:21.955" level="INFO">${rc} = 255</msg>
<msg timestamp="20230717 19:39:21.956" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20230717 19:39:20.122" endtime="20230717 19:39:21.956"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:39:21.959" level="INFO">
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20230717 19:39:21.957" endtime="20230717 19:39:21.959"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:39:21.961" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:39:21.960" endtime="20230717 19:39:21.961"/>
</kw>
<msg timestamp="20230717 19:39:21.961" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20230717 19:39:20.120" endtime="20230717 19:39:21.961"/>
</kw>
<msg timestamp="20230717 19:39:21.962" level="INFO">${result} = 
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20230717 19:39:20.116" endtime="20230717 19:39:21.962"/>
</kw>
<if>
<branch type="IF" condition="${fsolayout} == ${True}">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:39:21.963" endtime="20230717 19:39:21.964"/>
</kw>
<status status="PASS" starttime="20230717 19:39:21.962" endtime="20230717 19:39:21.964"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230717 19:39:21.964" endtime="20230717 19:39:21.965"/>
</kw>
<status status="NOT RUN" starttime="20230717 19:39:21.964" endtime="20230717 19:39:21.965"/>
</branch>
<status status="PASS" starttime="20230717 19:39:21.962" endtime="20230717 19:39:21.965"/>
</if>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/zerobyte --range bytes=0-1 /tmp/testfile2.result</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:39:21.974" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key ozone-test-4127133133/putobject/key=value/zerobyte --range bytes=0-1 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:39:23.560" level="INFO">${rc} = 255</msg>
<msg timestamp="20230717 19:39:23.561" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20230717 19:39:21.969" endtime="20230717 19:39:23.561"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:39:23.563" level="INFO">
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20230717 19:39:23.562" endtime="20230717 19:39:23.564"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:39:23.565" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:39:23.564" endtime="20230717 19:39:23.565"/>
</kw>
<msg timestamp="20230717 19:39:23.567" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20230717 19:39:21.968" endtime="20230717 19:39:23.567"/>
</kw>
<msg timestamp="20230717 19:39:23.567" level="INFO">${result} = 
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20230717 19:39:21.965" endtime="20230717 19:39:23.567"/>
</kw>
<if>
<branch type="IF" condition="${fsolayout} == ${True}">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:39:23.578" endtime="20230717 19:39:23.579"/>
</kw>
<status status="PASS" starttime="20230717 19:39:23.569" endtime="20230717 19:39:23.579"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230717 19:39:23.581" endtime="20230717 19:39:23.582"/>
</kw>
<status status="NOT RUN" starttime="20230717 19:39:23.579" endtime="20230717 19:39:23.582"/>
</branch>
<status status="PASS" starttime="20230717 19:39:23.569" endtime="20230717 19:39:23.582"/>
</if>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/zerobyte --range bytes=0-10000 /tmp/testfile2.result</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:39:23.597" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket link --key ozone-test-4127133133/putobject/key=value/zerobyte --range bytes=0-10000 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:39:25.195" level="INFO">${rc} = 255</msg>
<msg timestamp="20230717 19:39:25.195" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20230717 19:39:23.589" endtime="20230717 19:39:25.195"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:39:25.198" level="INFO">
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20230717 19:39:25.197" endtime="20230717 19:39:25.198"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:39:25.201" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:39:25.199" endtime="20230717 19:39:25.202"/>
</kw>
<msg timestamp="20230717 19:39:25.202" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20230717 19:39:23.586" endtime="20230717 19:39:25.202"/>
</kw>
<msg timestamp="20230717 19:39:25.203" level="INFO">${result} = 
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20230717 19:39:23.583" endtime="20230717 19:39:25.203"/>
</kw>
<if>
<branch type="IF" condition="${fsolayout} == ${True}">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:39:25.205" endtime="20230717 19:39:25.206"/>
</kw>
<status status="PASS" starttime="20230717 19:39:25.204" endtime="20230717 19:39:25.206"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230717 19:39:25.206" endtime="20230717 19:39:25.208"/>
</kw>
<status status="NOT RUN" starttime="20230717 19:39:25.206" endtime="20230717 19:39:25.208"/>
</branch>
<status status="PASS" starttime="20230717 19:39:25.203" endtime="20230717 19:39:25.208"/>
</if>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:38:38.140" endtime="20230717 19:39:25.208"/>
</test>
<test id="s1-s9-s12-t12" name="Create file with user defined metadata" line="183">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:39:25.225" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile2'.</msg>
<msg timestamp="20230717 19:39:25.232" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:39:25.232" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:39:25.219" endtime="20230717 19:39:25.232"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:39:25.234" level="INFO"/>
<status status="PASS" starttime="20230717 19:39:25.233" endtime="20230717 19:39:25.234"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:39:25.236" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:39:25.235" endtime="20230717 19:39:25.236"/>
</kw>
<status status="PASS" starttime="20230717 19:39:25.217" endtime="20230717 19:39:25.236"/>
</kw>
<msg timestamp="20230717 19:39:25.237" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:39:25.217" endtime="20230717 19:39:25.237"/>
</kw>
<status status="PASS" starttime="20230717 19:39:25.214" endtime="20230717 19:39:25.238"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key1 --body /tmp/testfile2 --metadata="custom-key1=custom-value1,custom-key2=custom-value2"</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:39:25.270" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket link --key ozone-test-4127133133/putobject/custom-metadata/key1 --body /tmp/testfile2 --metadata="custom-key1=custom-value1,custom-key2=custom-value2" 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:39:27.018" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:39:27.018" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:39:25.247" endtime="20230717 19:39:27.018"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:39:27.020" level="INFO"/>
<status status="PASS" starttime="20230717 19:39:27.019" endtime="20230717 19:39:27.020"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:39:27.022" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:39:27.021" endtime="20230717 19:39:27.022"/>
</kw>
<status status="PASS" starttime="20230717 19:39:25.243" endtime="20230717 19:39:27.022"/>
</kw>
<msg timestamp="20230717 19:39:27.022" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:39:25.242" endtime="20230717 19:39:27.023"/>
</kw>
<msg timestamp="20230717 19:39:27.023" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:39:25.240" endtime="20230717 19:39:27.023"/>
</kw>
<status status="PASS" starttime="20230717 19:39:25.238" endtime="20230717 19:39:27.023"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:39:27.032" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket link --key ozone-test-4127133133/putobject/custom-metadata/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:39:28.737" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:39:28.737" level="INFO">${output} = {
    "LastModified": "Mon, 17 Jul 2023 19:39:26 GMT",
    "ContentLength": 11,
    "ETag": "2023-07-17T19:39:26.816Z",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "E...</msg>
<status status="PASS" starttime="20230717 19:39:27.027" endtime="20230717 19:39:28.737"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:39:28.747" level="INFO">{
    "LastModified": "Mon, 17 Jul 2023 19:39:26 GMT",
    "ContentLength": 11,
    "ETag": "2023-07-17T19:39:26.816Z",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Mon, 17 Jul 2023 19:39:28 GMT",
    "Metadata": {
        "custom-key1": "custom-value1",
        "custom-key2": "custom-value2"
    }
}</msg>
<status status="PASS" starttime="20230717 19:39:28.739" endtime="20230717 19:39:28.747"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:39:28.750" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:39:28.748" endtime="20230717 19:39:28.751"/>
</kw>
<status status="PASS" starttime="20230717 19:39:27.026" endtime="20230717 19:39:28.752"/>
</kw>
<msg timestamp="20230717 19:39:28.752" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:39:27.025" endtime="20230717 19:39:28.752"/>
</kw>
<msg timestamp="20230717 19:39:28.754" level="INFO">${output} = {
    "LastModified": "Mon, 17 Jul 2023 19:39:26 GMT",
    "ContentLength": 11,
    "ETag": "2023-07-17T19:39:26.816Z",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "E...</msg>
<status status="PASS" starttime="20230717 19:39:27.025" endtime="20230717 19:39:28.754"/>
</kw>
<msg timestamp="20230717 19:39:28.754" level="INFO">${result} = {
    "LastModified": "Mon, 17 Jul 2023 19:39:26 GMT",
    "ContentLength": 11,
    "ETag": "2023-07-17T19:39:26.816Z",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "E...</msg>
<status status="PASS" starttime="20230717 19:39:27.024" endtime="20230717 19:39:28.754"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key1\": \"custom-value1\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:39:28.756" endtime="20230717 19:39:28.758"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key2\": \"custom-value2\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:39:28.758" endtime="20230717 19:39:28.761"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /s3v/${BUCKET}/${PREFIX}/putobject/custom-metadata/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:39:28.775" level="INFO">Running command 'ozone sh key info /s3v/link/ozone-test-4127133133/putobject/custom-metadata/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:39:48.356" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:39:48.356" level="INFO">${output} = {
  "volumeName" : "legacy",
  "bucketName" : "source-bucket",
  "name" : "ozone-test-4127133133/putobject/custom-metadata/key1",
  "dataSize" : 11,
  "creationTime" : "2023-07-17T19:39:26.653Z",
  "m...</msg>
<status status="PASS" starttime="20230717 19:39:28.769" endtime="20230717 19:39:48.357"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:39:48.359" level="INFO">{
  "volumeName" : "legacy",
  "bucketName" : "source-bucket",
  "name" : "ozone-test-4127133133/putobject/custom-metadata/key1",
  "dataSize" : 11,
  "creationTime" : "2023-07-17T19:39:26.653Z",
  "modificationTime" : "2023-07-17T19:39:26.816Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : {
    "custom-key1" : "custom-value1",
    "custom-key2" : "custom-value2"
  },
  "ozoneKeyLocations" : [ {
    "containerID" : 1,
    "localID" : 111677748019200236,
    "length" : 11,
    "offset" : 0,
    "keyOffset" : 0
  } ],
  "file" : true
}</msg>
<status status="PASS" starttime="20230717 19:39:48.357" endtime="20230717 19:39:48.360"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:39:48.361" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:39:48.360" endtime="20230717 19:39:48.361"/>
</kw>
<status status="PASS" starttime="20230717 19:39:28.764" endtime="20230717 19:39:48.362"/>
</kw>
<msg timestamp="20230717 19:39:48.362" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:39:28.764" endtime="20230717 19:39:48.362"/>
</kw>
<msg timestamp="20230717 19:39:48.363" level="INFO">${result} = {
  "volumeName" : "legacy",
  "bucketName" : "source-bucket",
  "name" : "ozone-test-4127133133/putobject/custom-metadata/key1",
  "dataSize" : 11,
  "creationTime" : "2023-07-17T19:39:26.653Z",
  "m...</msg>
<status status="PASS" starttime="20230717 19:39:28.762" endtime="20230717 19:39:48.363"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key1\" : \"custom-value1\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:39:48.363" endtime="20230717 19:39:48.364"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key2\" : \"custom-value2\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:39:48.364" endtime="20230717 19:39:48.365"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:39:25.210" endtime="20230717 19:39:48.365"/>
</test>
<test id="s1-s9-s12-t13" name="Create file with user defined metadata with gdpr enabled value in request" line="195">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:39:48.378" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile2'.</msg>
<msg timestamp="20230717 19:39:48.381" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:39:48.381" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:39:48.372" endtime="20230717 19:39:48.381"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:39:48.383" level="INFO"/>
<status status="PASS" starttime="20230717 19:39:48.382" endtime="20230717 19:39:48.383"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:39:48.384" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:39:48.384" endtime="20230717 19:39:48.384"/>
</kw>
<status status="PASS" starttime="20230717 19:39:48.371" endtime="20230717 19:39:48.385"/>
</kw>
<msg timestamp="20230717 19:39:48.385" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:39:48.369" endtime="20230717 19:39:48.385"/>
</kw>
<status status="PASS" starttime="20230717 19:39:48.368" endtime="20230717 19:39:48.386"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key2 --body /tmp/testfile2 --metadata="gdprEnabled=true,custom-key2=custom-value2"</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:39:48.395" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket link --key ozone-test-4127133133/putobject/custom-metadata/key2 --body /tmp/testfile2 --metadata="gdprEnabled=true,custom-key2=custom-value2" 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:39:50.021" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:39:50.021" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:39:48.390" endtime="20230717 19:39:50.023"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:39:50.027" level="INFO"/>
<status status="PASS" starttime="20230717 19:39:50.024" endtime="20230717 19:39:50.027"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:39:50.031" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:39:50.028" endtime="20230717 19:39:50.031"/>
</kw>
<status status="PASS" starttime="20230717 19:39:48.389" endtime="20230717 19:39:50.031"/>
</kw>
<msg timestamp="20230717 19:39:50.031" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:39:48.388" endtime="20230717 19:39:50.034"/>
</kw>
<msg timestamp="20230717 19:39:50.034" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:39:48.387" endtime="20230717 19:39:50.034"/>
</kw>
<status status="PASS" starttime="20230717 19:39:48.386" endtime="20230717 19:39:50.034"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key2</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:39:50.054" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket link --key ozone-test-4127133133/putobject/custom-metadata/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:39:51.627" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:39:51.627" level="INFO">${output} = {
    "LastModified": "Mon, 17 Jul 2023 19:39:49 GMT",
    "ContentLength": 11,
    "ETag": "2023-07-17T19:39:49.780Z",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "E...</msg>
<status status="PASS" starttime="20230717 19:39:50.043" endtime="20230717 19:39:51.627"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:39:51.628" level="INFO">{
    "LastModified": "Mon, 17 Jul 2023 19:39:49 GMT",
    "ContentLength": 11,
    "ETag": "2023-07-17T19:39:49.780Z",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Mon, 17 Jul 2023 19:39:51 GMT",
    "Metadata": {
        "custom-key2": "custom-value2"
    }
}</msg>
<status status="PASS" starttime="20230717 19:39:51.627" endtime="20230717 19:39:51.628"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:39:51.629" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:39:51.628" endtime="20230717 19:39:51.629"/>
</kw>
<status status="PASS" starttime="20230717 19:39:50.042" endtime="20230717 19:39:51.629"/>
</kw>
<msg timestamp="20230717 19:39:51.629" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:39:50.039" endtime="20230717 19:39:51.629"/>
</kw>
<msg timestamp="20230717 19:39:51.630" level="INFO">${output} = {
    "LastModified": "Mon, 17 Jul 2023 19:39:49 GMT",
    "ContentLength": 11,
    "ETag": "2023-07-17T19:39:49.780Z",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "E...</msg>
<status status="PASS" starttime="20230717 19:39:50.036" endtime="20230717 19:39:51.630"/>
</kw>
<msg timestamp="20230717 19:39:51.630" level="INFO">${result} = {
    "LastModified": "Mon, 17 Jul 2023 19:39:49 GMT",
    "ContentLength": 11,
    "ETag": "2023-07-17T19:39:49.780Z",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "E...</msg>
<status status="PASS" starttime="20230717 19:39:50.036" endtime="20230717 19:39:51.630"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key2\": \"custom-value2\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:39:51.630" endtime="20230717 19:39:51.631"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"gdprEnabled\": \"true\"</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:39:51.631" endtime="20230717 19:39:51.635"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:39:48.367" endtime="20230717 19:39:51.636"/>
</test>
<test id="s1-s9-s12-t14" name="Create file with user defined metadata size larger than 2 KB" line="203">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:39:51.657" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile2'.</msg>
<msg timestamp="20230717 19:39:51.667" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:39:51.667" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:39:51.648" endtime="20230717 19:39:51.667"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:39:51.671" level="INFO"/>
<status status="PASS" starttime="20230717 19:39:51.669" endtime="20230717 19:39:51.671"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:39:51.676" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:39:51.673" endtime="20230717 19:39:51.676"/>
</kw>
<status status="PASS" starttime="20230717 19:39:51.646" endtime="20230717 19:39:51.677"/>
</kw>
<msg timestamp="20230717 19:39:51.677" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:39:51.645" endtime="20230717 19:39:51.677"/>
</kw>
<status status="PASS" starttime="20230717 19:39:51.644" endtime="20230717 19:39:51.677"/>
</kw>
<kw name="Execute" library="os">
<var>${custom_metadata_value}</var>
<arg>printf 'v%.0s' {1..3000}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:39:51.695" level="INFO">Running command 'printf 'v%.0s' {1..3000} 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:39:51.711" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:39:51.712" level="INFO">${output} = vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv...</msg>
<status status="PASS" starttime="20230717 19:39:51.686" endtime="20230717 19:39:51.712"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:39:51.721" level="INFO">vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv</msg>
<status status="PASS" starttime="20230717 19:39:51.713" endtime="20230717 19:39:51.721"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:39:51.725" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:39:51.724" endtime="20230717 19:39:51.726"/>
</kw>
<status status="PASS" starttime="20230717 19:39:51.683" endtime="20230717 19:39:51.726"/>
</kw>
<msg timestamp="20230717 19:39:51.726" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:39:51.681" endtime="20230717 19:39:51.727"/>
</kw>
<msg timestamp="20230717 19:39:51.727" level="INFO">${custom_metadata_value} = vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv...</msg>
<status status="PASS" starttime="20230717 19:39:51.679" endtime="20230717 19:39:51.727"/>
</kw>
<kw name="Execute AWSS3APICli and ignore error" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key2 --body /tmp/testfile2 --metadata="custom-key1=${custom_metadata_value}"</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:39:51.739" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket link --key ozone-test-4127133133/putobject/custom-metadata/key2 --body /tmp/testfile2 --metadata="custom-key1=vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv" 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:40:00.510" level="INFO">${rc} = 255</msg>
<msg timestamp="20230717 19:40:00.510" level="INFO">${output} = 
An error occurred (500) when calling the PutObject operation (reached max retries: 4): Internal Server Error</msg>
<status status="PASS" starttime="20230717 19:39:51.731" endtime="20230717 19:40:00.510"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:40:00.515" level="INFO">
An error occurred (500) when calling the PutObject operation (reached max retries: 4): Internal Server Error</msg>
<status status="PASS" starttime="20230717 19:40:00.513" endtime="20230717 19:40:00.515"/>
</kw>
<msg timestamp="20230717 19:40:00.515" level="INFO">${output} = 
An error occurred (500) when calling the PutObject operation (reached max retries: 4): Internal Server Error</msg>
<status status="PASS" starttime="20230717 19:39:51.730" endtime="20230717 19:40:00.515"/>
</kw>
<msg timestamp="20230717 19:40:00.516" level="INFO">${result} = 
An error occurred (500) when calling the PutObject operation (reached max retries: 4): Internal Server Error</msg>
<status status="PASS" starttime="20230717 19:39:51.728" endtime="20230717 19:40:00.517"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>custom-key1: ${custom_metadata_value}</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:40:00.518" endtime="20230717 19:40:00.519"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:39:51.641" endtime="20230717 19:40:00.519"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20230717 19:38:11.507" endtime="20230717 19:40:00.523"/>
</suite>
<suite id="s1-s9-s13" name="S3 Getsecret" source="/opt/hadoop/smoketest/s3/s3_getsecret.robot">
<test id="s1-s9-s13-t1" name="Without OM service ID" line="28">
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>N/A</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230717 19:40:00.546" endtime="20230717 19:40:00.546"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone s3 getsecret -u testuser2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:40:00.554" level="INFO">Running command 'ozone s3 getsecret -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:40:13.590" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:40:13.590" level="INFO">${output} = awsAccessKey=testuser2
awsSecret=a35fa93bff2715a23f8f2abf3a2ca48fd70c748e4f9e1307ef1e77b7b1a62748</msg>
<status status="PASS" starttime="20230717 19:40:00.550" endtime="20230717 19:40:13.591"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:40:13.594" level="INFO">awsAccessKey=testuser2
awsSecret=a35fa93bff2715a23f8f2abf3a2ca48fd70c748e4f9e1307ef1e77b7b1a62748</msg>
<status status="PASS" starttime="20230717 19:40:13.591" endtime="20230717 19:40:13.594"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:40:13.595" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:40:13.595" endtime="20230717 19:40:13.595"/>
</kw>
<status status="PASS" starttime="20230717 19:40:00.548" endtime="20230717 19:40:13.596"/>
</kw>
<msg timestamp="20230717 19:40:13.596" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:40:00.548" endtime="20230717 19:40:13.596"/>
</kw>
<msg timestamp="20230717 19:40:13.596" level="INFO">${output} = awsAccessKey=testuser2
awsSecret=a35fa93bff2715a23f8f2abf3a2ca48fd70c748e4f9e1307ef1e77b7b1a62748</msg>
<status status="PASS" starttime="20230717 19:40:00.547" endtime="20230717 19:40:13.596"/>
</kw>
<kw name="Verify output">
<arg>${output}</arg>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>awsAccessKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:40:13.597" endtime="20230717 19:40:13.597"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>awsSecret</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:40:13.598" endtime="20230717 19:40:13.598"/>
</kw>
<status status="PASS" starttime="20230717 19:40:13.596" endtime="20230717 19:40:13.598"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230717 19:40:00.544" endtime="20230717 19:40:13.598"/>
</test>
<test id="s1-s9-s13-t2" name="With OM service ID" line="33">
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${OM_HA_PARAM}' == '${EMPTY}'</arg>
<arg>duplicate test in non-HA env.</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230717 19:40:13.602" endtime="20230717 19:40:13.605"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>N/A</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230717 19:40:13.605" endtime="20230717 19:40:13.605"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone s3 getsecret -u testuser2 ${OM_HA_PARAM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:40:13.613" level="INFO">Running command 'ozone s3 getsecret -u testuser2 --om-service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:40:27.347" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:40:27.347" level="INFO">${output} = awsAccessKey=testuser2
awsSecret=a35fa93bff2715a23f8f2abf3a2ca48fd70c748e4f9e1307ef1e77b7b1a62748</msg>
<status status="PASS" starttime="20230717 19:40:13.608" endtime="20230717 19:40:27.347"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:40:27.352" level="INFO">awsAccessKey=testuser2
awsSecret=a35fa93bff2715a23f8f2abf3a2ca48fd70c748e4f9e1307ef1e77b7b1a62748</msg>
<status status="PASS" starttime="20230717 19:40:27.350" endtime="20230717 19:40:27.354"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:40:27.356" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:40:27.354" endtime="20230717 19:40:27.356"/>
</kw>
<status status="PASS" starttime="20230717 19:40:13.607" endtime="20230717 19:40:27.357"/>
</kw>
<msg timestamp="20230717 19:40:27.357" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:40:13.606" endtime="20230717 19:40:27.360"/>
</kw>
<msg timestamp="20230717 19:40:27.362" level="INFO">${output} = awsAccessKey=testuser2
awsSecret=a35fa93bff2715a23f8f2abf3a2ca48fd70c748e4f9e1307ef1e77b7b1a62748</msg>
<status status="PASS" starttime="20230717 19:40:13.605" endtime="20230717 19:40:27.362"/>
</kw>
<kw name="Verify output">
<arg>${output}</arg>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>awsAccessKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:40:27.364" endtime="20230717 19:40:27.366"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>awsSecret</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:40:27.366" endtime="20230717 19:40:27.367"/>
</kw>
<status status="PASS" starttime="20230717 19:40:27.363" endtime="20230717 19:40:27.367"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230717 19:40:13.601" endtime="20230717 19:40:27.367"/>
</test>
<doc>Test ozone s3 getsecret command</doc>
<status status="PASS" starttime="20230717 19:40:00.532" endtime="20230717 19:40:27.369"/>
</suite>
<status status="PASS" starttime="20230717 19:24:08.020" endtime="20230717 19:40:27.376"/>
</suite>
<suite id="s1-s10" name="Admincli" source="/opt/hadoop/smoketest/admincli">
<suite id="s1-s10-s1" name="Admin" source="/opt/hadoop/smoketest/admincli/admin.robot">
<test id="s1-s10-s1-t1" name="Incomplete command" line="23">
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>ozone admin</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:40:34.262" level="INFO">Running command 'ozone admin 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:40:44.965" level="INFO">${rc} = 2</msg>
<msg timestamp="20230717 19:40:44.965" level="INFO">${output} = Incomplete command
Usage: ozone admin [-hV] [--verbose] [-conf=&lt;configurationPath&gt;]
                   [-D=&lt;String=String&gt;]... [COMMAND]
Developer tools for Ozone Admin operations
      -conf=&lt;configu...</msg>
<status status="PASS" starttime="20230717 19:40:34.256" endtime="20230717 19:40:44.965"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:40:44.967" level="INFO">Incomplete command
Usage: ozone admin [-hV] [--verbose] [-conf=&lt;configurationPath&gt;]
                   [-D=&lt;String=String&gt;]... [COMMAND]
Developer tools for Ozone Admin operations
      -conf=&lt;configurationPath&gt;

  -D, --set=&lt;String=String&gt;

  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
      --verbose   More verbose output. Show the stack trace of the errors.
Commands:
  containerbalancer   ContainerBalancer specific operations
  replicationmanager  ReplicationManager specific operations
  safemode            Safe mode specific operations
  printTopology       Print a tree of the network topology as reported by SCM
  cert                Certificate related operations
  container           Container specific operations
  datanode            Datanode specific operations
  pipeline            Pipeline specific operations
  namespace           Namespace Summary specific admin operations
  om                  Ozone Manager specific admin operations
  reconfig            Dynamically reconfigure server without restarting it
  scm                 Ozone Storage Container Manager specific admin operations</msg>
<status status="PASS" starttime="20230717 19:40:44.965" endtime="20230717 19:40:44.967"/>
</kw>
<msg timestamp="20230717 19:40:44.967" level="INFO">${output} = Incomplete command
Usage: ozone admin [-hV] [--verbose] [-conf=&lt;configurationPath&gt;]
                   [-D=&lt;String=String&gt;]... [COMMAND]
Developer tools for Ozone Admin operations
      -conf=&lt;configu...</msg>
<status status="PASS" starttime="20230717 19:40:34.255" endtime="20230717 19:40:44.967"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Incomplete command</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:40:44.967" endtime="20230717 19:40:44.969"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>container</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:40:44.970" endtime="20230717 19:40:44.973"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>datanode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:40:44.974" endtime="20230717 19:40:44.974"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:40:44.974" endtime="20230717 19:40:44.975"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>pipeline</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:40:44.975" endtime="20230717 19:40:44.976"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>replicationmanager</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:40:44.976" endtime="20230717 19:40:44.978"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>safemode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:40:44.978" endtime="20230717 19:40:44.980"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>printTopology</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:40:44.980" endtime="20230717 19:40:44.981"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:40:34.254" endtime="20230717 19:40:44.981"/>
</test>
<doc>Test ozone admin command</doc>
<status status="PASS" starttime="20230717 19:40:34.191" endtime="20230717 19:40:44.985"/>
</suite>
<suite id="s1-s10-s2" name="Container" source="/opt/hadoop/smoketest/admincli/container.robot">
<kw name="Create test data" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:40:45.025" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:40:45.033" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:40:45.033" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20230717 19:40:45.021" endtime="20230717 19:40:45.033"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:40:45.035" level="INFO">s3g</msg>
<status status="PASS" starttime="20230717 19:40:45.034" endtime="20230717 19:40:45.035"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:40:45.036" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:40:45.035" endtime="20230717 19:40:45.036"/>
</kw>
<status status="PASS" starttime="20230717 19:40:45.018" endtime="20230717 19:40:45.036"/>
</kw>
<msg timestamp="20230717 19:40:45.036" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:40:45.016" endtime="20230717 19:40:45.036"/>
</kw>
<msg timestamp="20230717 19:40:45.037" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20230717 19:40:45.015" endtime="20230717 19:40:45.037"/>
</kw>
<msg timestamp="20230717 19:40:45.037" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230717 19:40:45.014" endtime="20230717 19:40:45.037"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230717 19:40:45.038" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230717 19:40:45.038" endtime="20230717 19:40:45.038"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:40:45.047" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:40:45.132" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:40:45.132" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:40:45.042" endtime="20230717 19:40:45.132"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:40:45.133" level="INFO"/>
<status status="PASS" starttime="20230717 19:40:45.133" endtime="20230717 19:40:45.133"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:40:45.134" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:40:45.133" endtime="20230717 19:40:45.134"/>
</kw>
<status status="PASS" starttime="20230717 19:40:45.042" endtime="20230717 19:40:45.135"/>
</kw>
<msg timestamp="20230717 19:40:45.135" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:40:45.041" endtime="20230717 19:40:45.135"/>
</kw>
<status status="PASS" starttime="20230717 19:40:45.039" endtime="20230717 19:40:45.135"/>
</kw>
<status status="PASS" starttime="20230717 19:40:45.039" endtime="20230717 19:40:45.135"/>
</kw>
<status status="PASS" starttime="20230717 19:40:45.012" endtime="20230717 19:40:45.135"/>
</kw>
<status status="PASS" starttime="20230717 19:40:45.011" endtime="20230717 19:40:45.135"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone freon ockg -n1 -t1 -p container</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:40:45.145" level="INFO">Running command 'ozone freon ockg -n1 -t1 -p container 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:41:10.444" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:41:10.444" level="INFO">${output} = 2023-07-17 19:40:53,142 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-17 19:40:53,518 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230717 19:40:45.139" endtime="20230717 19:41:10.444"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:41:10.446" level="INFO">2023-07-17 19:40:53,142 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-17 19:40:53,518 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-07-17 19:40:53,518 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-07-17 19:40:53,864 [main] INFO freon.BaseFreonGenerator: Executing test with prefix container and number-of-tests 1
2023-07-17 19:40:54,159 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-17 19:40:55,170 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-17 19:40:56,171 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-17 19:40:57,179 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-17 19:40:58,187 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-17 19:40:59,187 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-17 19:41:00,188 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-17 19:41:01,198 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-17 19:41:02,199 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-17 19:41:03,032 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-07-17 19:41:03,204 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-17 19:41:03,404 [pool-2-thread-1] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig0-
2023-07-17 19:41:04,207 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-17 19:41:04,856 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-07-17 19:41:05,207 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-17 19:41:06,207 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-17 19:41:07,208 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-17 19:41:08,210 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-17 19:41:09,211 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-07-17 19:41:09,857 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=7606.735053, max=7606.735053, mean=7606.735053, stddev=0.0, median=7606.735053, p75=7606.735053, p95=7606.735053, p98=7606.735053, p99=7606.735053, p999=7606.735053, mean_rate=0.1207694939463031, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-07-17 19:41:09,862 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 16
2023-07-17 19:41:09,864 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-07-17 19:41:09,864 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230717 19:41:10.445" endtime="20230717 19:41:10.446"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:41:10.448" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:41:10.447" endtime="20230717 19:41:10.448"/>
</kw>
<status status="PASS" starttime="20230717 19:40:45.138" endtime="20230717 19:41:10.448"/>
</kw>
<msg timestamp="20230717 19:41:10.448" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:40:45.137" endtime="20230717 19:41:10.448"/>
</kw>
<status status="PASS" starttime="20230717 19:40:45.136" endtime="20230717 19:41:10.449"/>
</kw>
<status status="PASS" starttime="20230717 19:40:45.010" endtime="20230717 19:41:10.449"/>
</kw>
<test id="s1-s10-s2-t1" name="Create container" line="38">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container create</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:41:10.460" level="INFO">Running command 'ozone admin container create 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:41:36.248" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:41:36.248" level="INFO">${output} = Loaded properties from hadoop-metrics2.properties
Scheduled Metric snapshot period at 10 second(s).
XceiverClientMetrics metrics system started
Container 3 is created.</msg>
<status status="PASS" starttime="20230717 19:41:10.455" endtime="20230717 19:41:36.248"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:41:36.252" level="INFO">Loaded properties from hadoop-metrics2.properties
Scheduled Metric snapshot period at 10 second(s).
XceiverClientMetrics metrics system started
Container 3 is created.</msg>
<status status="PASS" starttime="20230717 19:41:36.250" endtime="20230717 19:41:36.253"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:41:36.257" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:41:36.254" endtime="20230717 19:41:36.257"/>
</kw>
<status status="PASS" starttime="20230717 19:41:10.454" endtime="20230717 19:41:36.257"/>
</kw>
<msg timestamp="20230717 19:41:36.257" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:41:10.453" endtime="20230717 19:41:36.258"/>
</kw>
<msg timestamp="20230717 19:41:36.258" level="INFO">${output} = Loaded properties from hadoop-metrics2.properties
Scheduled Metric snapshot period at 10 second(s).
XceiverClientMetrics metrics system started
Container 3 is created.</msg>
<status status="PASS" starttime="20230717 19:41:10.452" endtime="20230717 19:41:36.258"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>is created</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:41:36.259" endtime="20230717 19:41:36.259"/>
</kw>
<kw name="Execute" library="os">
<var>${container}</var>
<arg>echo "${output}" | grep 'is created' | cut -f2 -d' '</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:41:36.274" level="INFO">Running command 'echo "Loaded properties from hadoop-metrics2.properties
Scheduled Metric snapshot period at 10 second(s).
XceiverClientMetrics metrics system started
Container 3 is created." | grep 'is created' | cut -f2 -d' ' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:41:36.289" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:41:36.289" level="INFO">${output} = 3</msg>
<status status="PASS" starttime="20230717 19:41:36.267" endtime="20230717 19:41:36.289"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:41:36.292" level="INFO">3</msg>
<status status="PASS" starttime="20230717 19:41:36.290" endtime="20230717 19:41:36.292"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:41:36.297" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:41:36.293" endtime="20230717 19:41:36.299"/>
</kw>
<status status="PASS" starttime="20230717 19:41:36.264" endtime="20230717 19:41:36.299"/>
</kw>
<msg timestamp="20230717 19:41:36.299" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:41:36.262" endtime="20230717 19:41:36.302"/>
</kw>
<msg timestamp="20230717 19:41:36.302" level="INFO">${container} = 3</msg>
<status status="PASS" starttime="20230717 19:41:36.259" endtime="20230717 19:41:36.302"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${CONTAINER}</arg>
<arg>${container}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230717 19:41:36.306" level="INFO">${CONTAINER} = 3</msg>
<status status="PASS" starttime="20230717 19:41:36.302" endtime="20230717 19:41:36.307"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:41:10.450" endtime="20230717 19:41:36.308"/>
</test>
<test id="s1-s10-s2-t2" name="List containers" line="44">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:41:36.325" level="INFO">Running command 'ozone admin container list 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:41:52.112" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:41:52.112" level="INFO">${output} = {
  "state" : "OPEN",
  "stateEnterTime" : "2023-07-17T18:45:17.916Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 193064764,
  "n...</msg>
<status status="PASS" starttime="20230717 19:41:36.320" endtime="20230717 19:41:52.112"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:41:52.114" level="INFO">{
  "state" : "OPEN",
  "stateEnterTime" : "2023-07-17T18:45:17.916Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 193064764,
  "numberOfKeys" : 114,
  "lastUsed" : "2023-07-17T19:41:51.592427Z",
  "owner" : "om1",
  "containerID" : 1,
  "deleteTransactionId" : 27,
  "sequenceId" : 424,
  "open" : true,
  "deleted" : false
}
{
  "state" : "OPEN",
  "stateEnterTime" : "2023-07-17T18:45:54.343Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 138531917,
  "numberOfKeys" : 120,
  "lastUsed" : "2023-07-17T19:41:51.592489Z",
  "owner" : "om1",
  "containerID" : 2,
  "deleteTransactionId" : 28,
  "sequenceId" : 461,
  "open" : true,
  "deleted" : false
}
{
  "state" : "OPEN",
  "stateEnterTime" : "2023-07-17T19:41:28.742Z",
  "replicationConfig" : {
    "replicationFactor" : "ONE",
    "replicationType" : "STANDALONE"
  },
  "usedBytes" : 0,
  "numberOfKeys" : 0,
  "lastUsed" : "2023-07-17T19:41:51.594993Z",
  "owner" : "OZONE",
  "containerID" : 3,
  "deleteTransactionId" : 0,
  "sequenceId" : 0,
  "open" : true,
  "deleted" : false
}</msg>
<status status="PASS" starttime="20230717 19:41:52.113" endtime="20230717 19:41:52.115"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:41:52.116" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:41:52.115" endtime="20230717 19:41:52.116"/>
</kw>
<status status="PASS" starttime="20230717 19:41:36.316" endtime="20230717 19:41:52.117"/>
</kw>
<msg timestamp="20230717 19:41:52.117" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:41:36.314" endtime="20230717 19:41:52.117"/>
</kw>
<msg timestamp="20230717 19:41:52.118" level="INFO">${output} = {
  "state" : "OPEN",
  "stateEnterTime" : "2023-07-17T18:45:17.916Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 193064764,
  "n...</msg>
<status status="PASS" starttime="20230717 19:41:36.313" endtime="20230717 19:41:52.118"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>OPEN</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:41:52.118" endtime="20230717 19:41:52.119"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:41:36.311" endtime="20230717 19:41:52.119"/>
</test>
<test id="s1-s10-s2-t3" name="List containers with explicit host" line="48">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container list --scm ${SCM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:41:52.128" level="INFO">Running command 'ozone admin container list --scm scm1.org 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:42:08.327" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:42:08.327" level="INFO">${output} = {
  "state" : "OPEN",
  "stateEnterTime" : "2023-07-17T18:45:17.916Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 193064764,
  "n...</msg>
<status status="PASS" starttime="20230717 19:41:52.124" endtime="20230717 19:42:08.327"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:42:08.331" level="INFO">{
  "state" : "OPEN",
  "stateEnterTime" : "2023-07-17T18:45:17.916Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 193064764,
  "numberOfKeys" : 114,
  "lastUsed" : "2023-07-17T19:42:07.928957Z",
  "owner" : "om1",
  "containerID" : 1,
  "deleteTransactionId" : 27,
  "sequenceId" : 424,
  "open" : true,
  "deleted" : false
}
{
  "state" : "OPEN",
  "stateEnterTime" : "2023-07-17T18:45:54.343Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 138542157,
  "numberOfKeys" : 121,
  "lastUsed" : "2023-07-17T19:42:07.929021Z",
  "owner" : "om1",
  "containerID" : 2,
  "deleteTransactionId" : 28,
  "sequenceId" : 461,
  "open" : true,
  "deleted" : false
}
{
  "state" : "OPEN",
  "stateEnterTime" : "2023-07-17T19:41:28.742Z",
  "replicationConfig" : {
    "replicationFactor" : "ONE",
    "replicationType" : "STANDALONE"
  },
  "usedBytes" : 0,
  "numberOfKeys" : 0,
  "lastUsed" : "2023-07-17T19:42:07.938036Z",
  "owner" : "OZONE",
  "containerID" : 3,
  "deleteTransactionId" : 0,
  "sequenceId" : 0,
  "open" : true,
  "deleted" : false
}</msg>
<status status="PASS" starttime="20230717 19:42:08.330" endtime="20230717 19:42:08.331"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:42:08.331" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:42:08.331" endtime="20230717 19:42:08.332"/>
</kw>
<status status="PASS" starttime="20230717 19:41:52.123" endtime="20230717 19:42:08.332"/>
</kw>
<msg timestamp="20230717 19:42:08.332" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:41:52.123" endtime="20230717 19:42:08.332"/>
</kw>
<msg timestamp="20230717 19:42:08.332" level="INFO">${output} = {
  "state" : "OPEN",
  "stateEnterTime" : "2023-07-17T18:45:17.916Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 193064764,
  "n...</msg>
<status status="PASS" starttime="20230717 19:41:52.122" endtime="20230717 19:42:08.332"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>OPEN</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:42:08.332" endtime="20230717 19:42:08.333"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:41:52.120" endtime="20230717 19:42:08.333"/>
</test>
<test id="s1-s10-s2-t4" name="List containers with container state" line="52">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container list --state=CLOSED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:42:08.350" level="INFO">Running command 'ozone admin container list --state=CLOSED 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:42:24.668" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:42:24.668" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:42:08.343" endtime="20230717 19:42:24.668"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:42:24.671" level="INFO"/>
<status status="PASS" starttime="20230717 19:42:24.669" endtime="20230717 19:42:24.671"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:42:24.672" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:42:24.672" endtime="20230717 19:42:24.672"/>
</kw>
<status status="PASS" starttime="20230717 19:42:08.340" endtime="20230717 19:42:24.673"/>
</kw>
<msg timestamp="20230717 19:42:24.673" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:42:08.338" endtime="20230717 19:42:24.673"/>
</kw>
<msg timestamp="20230717 19:42:24.673" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:42:08.336" endtime="20230717 19:42:24.673"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>OPEN</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:42:24.674" endtime="20230717 19:42:24.674"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:42:08.334" endtime="20230717 19:42:24.675"/>
</test>
<test id="s1-s10-s2-t5" name="List containers with replication factor ONE" line="56">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container list -t RATIS -r ONE</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:42:24.695" level="INFO">Running command 'ozone admin container list -t RATIS -r ONE 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:42:40.013" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:42:40.013" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:42:24.684" endtime="20230717 19:42:40.013"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:42:40.017" level="INFO"/>
<status status="PASS" starttime="20230717 19:42:40.015" endtime="20230717 19:42:40.017"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:42:40.019" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:42:40.018" endtime="20230717 19:42:40.019"/>
</kw>
<status status="PASS" starttime="20230717 19:42:24.683" endtime="20230717 19:42:40.019"/>
</kw>
<msg timestamp="20230717 19:42:40.019" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:42:24.682" endtime="20230717 19:42:40.019"/>
</kw>
<msg timestamp="20230717 19:42:40.020" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:42:24.680" endtime="20230717 19:42:40.020"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>THREE</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:42:40.021" endtime="20230717 19:42:40.021"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:42:24.678" endtime="20230717 19:42:40.021"/>
</test>
<test id="s1-s10-s2-t6" name="List containers with replication factor THREE" line="60">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container list -t RATIS -r THREE</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:42:40.035" level="INFO">Running command 'ozone admin container list -t RATIS -r THREE 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:42:57.451" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:42:57.451" level="INFO">${output} = {
  "state" : "OPEN",
  "stateEnterTime" : "2023-07-17T18:45:17.916Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 193064764,
  "n...</msg>
<status status="PASS" starttime="20230717 19:42:40.030" endtime="20230717 19:42:57.451"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:42:57.455" level="INFO">{
  "state" : "OPEN",
  "stateEnterTime" : "2023-07-17T18:45:17.916Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 193064764,
  "numberOfKeys" : 114,
  "lastUsed" : "2023-07-17T19:42:56.647224Z",
  "owner" : "om1",
  "containerID" : 1,
  "deleteTransactionId" : 27,
  "sequenceId" : 424,
  "open" : true,
  "deleted" : false
}
{
  "state" : "OPEN",
  "stateEnterTime" : "2023-07-17T18:45:54.343Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 138542157,
  "numberOfKeys" : 121,
  "lastUsed" : "2023-07-17T19:42:56.647290Z",
  "owner" : "om1",
  "containerID" : 2,
  "deleteTransactionId" : 28,
  "sequenceId" : 461,
  "open" : true,
  "deleted" : false
}</msg>
<status status="PASS" starttime="20230717 19:42:57.451" endtime="20230717 19:42:57.455"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:42:57.456" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:42:57.455" endtime="20230717 19:42:57.456"/>
</kw>
<status status="PASS" starttime="20230717 19:42:40.030" endtime="20230717 19:42:57.456"/>
</kw>
<msg timestamp="20230717 19:42:57.456" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:42:40.027" endtime="20230717 19:42:57.456"/>
</kw>
<msg timestamp="20230717 19:42:57.457" level="INFO">${output} = {
  "state" : "OPEN",
  "stateEnterTime" : "2023-07-17T18:45:17.916Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 193064764,
  "n...</msg>
<status status="PASS" starttime="20230717 19:42:40.026" endtime="20230717 19:42:57.457"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>ONE</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:42:57.457" endtime="20230717 19:42:57.462"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:42:40.024" endtime="20230717 19:42:57.463"/>
</test>
<test id="s1-s10-s2-t7" name="Container info" line="64">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info "${CONTAINER}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:42:57.481" level="INFO">Running command 'ozone admin container info "3" 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:43:14.871" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:43:14.871" level="INFO">${output} = Container id: 3
Pipeline id: 80e0342c-f4f7-4e2e-a6ae-99a56bac1e64
Container State: OPEN
Datanodes: [cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe/ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net]
Replicas: ...</msg>
<status status="PASS" starttime="20230717 19:42:57.469" endtime="20230717 19:43:14.872"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:43:14.874" level="INFO">Container id: 3
Pipeline id: 80e0342c-f4f7-4e2e-a6ae-99a56bac1e64
Container State: OPEN
Datanodes: [cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe/ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net]
Replicas: [State: OPEN; ReplicaIndex: 0; Origin: cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe; Location: cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe/ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net]</msg>
<status status="PASS" starttime="20230717 19:43:14.872" endtime="20230717 19:43:14.874"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:43:14.876" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:43:14.874" endtime="20230717 19:43:14.876"/>
</kw>
<status status="PASS" starttime="20230717 19:42:57.468" endtime="20230717 19:43:14.876"/>
</kw>
<msg timestamp="20230717 19:43:14.877" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:42:57.468" endtime="20230717 19:43:14.877"/>
</kw>
<msg timestamp="20230717 19:43:14.877" level="INFO">${output} = Container id: 3
Pipeline id: 80e0342c-f4f7-4e2e-a6ae-99a56bac1e64
Container State: OPEN
Datanodes: [cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe/ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net]
Replicas: ...</msg>
<status status="PASS" starttime="20230717 19:42:57.467" endtime="20230717 19:43:14.877"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Container id: ${CONTAINER}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:43:14.877" endtime="20230717 19:43:14.878"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Pipeline id</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:43:14.880" endtime="20230717 19:43:14.882"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Datanodes</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:43:14.883" endtime="20230717 19:43:14.885"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:42:57.465" endtime="20230717 19:43:14.885"/>
</test>
<test id="s1-s10-s2-t8" name="Verbose container info" line="70">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin --verbose container info "${CONTAINER}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:43:14.903" level="INFO">Running command 'ozone admin --verbose container info "3" 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:43:32.141" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:43:32.141" level="INFO">${output} = Container id: 3
Pipeline Info: Pipeline[ Id: 80e0342c-f4f7-4e2e-a6ae-99a56bac1e64, Nodes: cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe(ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net/172.25.0.104), Replic...</msg>
<status status="PASS" starttime="20230717 19:43:14.895" endtime="20230717 19:43:32.141"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:43:32.143" level="INFO">Container id: 3
Pipeline Info: Pipeline[ Id: 80e0342c-f4f7-4e2e-a6ae-99a56bac1e64, Nodes: cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe(ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net/172.25.0.104), ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2023-07-17T19:41:28.703Z[UTC]]
Container State: OPEN
Datanodes: [cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe/ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net]
Replicas: [State: OPEN; ReplicaIndex: 0; Origin: cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe; Location: cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe/ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net]</msg>
<status status="PASS" starttime="20230717 19:43:32.142" endtime="20230717 19:43:32.144"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:43:32.145" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:43:32.144" endtime="20230717 19:43:32.145"/>
</kw>
<status status="PASS" starttime="20230717 19:43:14.894" endtime="20230717 19:43:32.145"/>
</kw>
<msg timestamp="20230717 19:43:32.145" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:43:14.892" endtime="20230717 19:43:32.146"/>
</kw>
<msg timestamp="20230717 19:43:32.146" level="INFO">${output} = Container id: 3
Pipeline Info: Pipeline[ Id: 80e0342c-f4f7-4e2e-a6ae-99a56bac1e64, Nodes: cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe(ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net/172.25.0.104), Replic...</msg>
<status status="PASS" starttime="20230717 19:43:14.890" endtime="20230717 19:43:32.146"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Pipeline Info</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:43:32.146" endtime="20230717 19:43:32.147"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:43:14.888" endtime="20230717 19:43:32.148"/>
</test>
<test id="s1-s10-s2-t9" name="Close container" line="74">
<kw name="Execute" library="os">
<var>${container}</var>
<arg>ozone admin container list --state OPEN | jq -r 'select(.replicationConfig.replicationFactor == "THREE") | .containerID' | head -1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:43:32.185" level="INFO">Running command 'ozone admin container list --state OPEN | jq -r 'select(.replicationConfig.replicationFactor == "THREE") | .containerID' | head -1 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:43:50.021" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:43:50.022" level="INFO">${output} = 1</msg>
<status status="PASS" starttime="20230717 19:43:32.154" endtime="20230717 19:43:50.022"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:43:50.029" level="INFO">1</msg>
<status status="PASS" starttime="20230717 19:43:50.026" endtime="20230717 19:43:50.029"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:43:50.032" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:43:50.030" endtime="20230717 19:43:50.032"/>
</kw>
<status status="PASS" starttime="20230717 19:43:32.153" endtime="20230717 19:43:50.032"/>
</kw>
<msg timestamp="20230717 19:43:50.033" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:43:32.152" endtime="20230717 19:43:50.033"/>
</kw>
<msg timestamp="20230717 19:43:50.035" level="INFO">${container} = 1</msg>
<status status="PASS" starttime="20230717 19:43:32.152" endtime="20230717 19:43:50.035"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone admin container close "${container}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:43:50.048" level="INFO">Running command 'ozone admin container close "1" 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:44:06.578" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:44:06.578" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:43:50.040" endtime="20230717 19:44:06.578"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:44:06.580" level="INFO"/>
<status status="PASS" starttime="20230717 19:44:06.579" endtime="20230717 19:44:06.580"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:44:06.584" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:44:06.581" endtime="20230717 19:44:06.585"/>
</kw>
<status status="PASS" starttime="20230717 19:43:50.039" endtime="20230717 19:44:06.585"/>
</kw>
<msg timestamp="20230717 19:44:06.585" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:43:50.038" endtime="20230717 19:44:06.585"/>
</kw>
<status status="PASS" starttime="20230717 19:43:50.036" endtime="20230717 19:44:06.590"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info "${container}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:44:06.618" level="INFO">Running command 'ozone admin container info "1" 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:44:23.811" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:44:23.814" level="INFO">${output} = Container id: 1
Pipeline id: dccb59df-d6ae-4974-bb3a-70d0b20ec655
Container State: CLOSING
Datanodes: [cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe/ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net,
87c5eb0...</msg>
<status status="PASS" starttime="20230717 19:44:06.600" endtime="20230717 19:44:23.814"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:44:23.815" level="INFO">Container id: 1
Pipeline id: dccb59df-d6ae-4974-bb3a-70d0b20ec655
Container State: CLOSING
Datanodes: [cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe/ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net,
87c5eb0b-149e-4683-94a4-bc7d39a11a90/ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net,
e9096b01-e48e-4ceb-b568-1d22ceed6cac/ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net]
Replicas: [State: OPEN; ReplicaIndex: 0; Origin: 87c5eb0b-149e-4683-94a4-bc7d39a11a90; Location: 87c5eb0b-149e-4683-94a4-bc7d39a11a90/ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net,
State: OPEN; ReplicaIndex: 0; Origin: cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe; Location: cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe/ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net,
State: OPEN; ReplicaIndex: 0; Origin: e9096b01-e48e-4ceb-b568-1d22ceed6cac; Location: e9096b01-e48e-4ceb-b568-1d22ceed6cac/ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net]</msg>
<status status="PASS" starttime="20230717 19:44:23.814" endtime="20230717 19:44:23.815"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:44:23.816" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:44:23.815" endtime="20230717 19:44:23.816"/>
</kw>
<status status="PASS" starttime="20230717 19:44:06.597" endtime="20230717 19:44:23.817"/>
</kw>
<msg timestamp="20230717 19:44:23.818" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:44:06.593" endtime="20230717 19:44:23.818"/>
</kw>
<msg timestamp="20230717 19:44:23.818" level="INFO">${output} = Container id: 1
Pipeline id: dccb59df-d6ae-4974-bb3a-70d0b20ec655
Container State: CLOSING
Datanodes: [cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe/ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net,
87c5eb0...</msg>
<status status="PASS" starttime="20230717 19:44:06.590" endtime="20230717 19:44:23.818"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>CLOS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:44:23.818" endtime="20230717 19:44:23.819"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>1min</arg>
<arg>10sec</arg>
<arg>Container is closed</arg>
<arg>${container}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Container is closed">
<arg>${container}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info "${container}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:44:23.831" level="INFO">Running command 'ozone admin container info "1" 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:44:40.153" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:44:40.154" level="INFO">${output} = Container id: 1
Pipeline id: a5a2b4b4-2ec8-4e18-ac89-5170f320a877
Container State: CLOSED
Datanodes: [87c5eb0b-149e-4683-94a4-bc7d39a11a90/ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net,
cd78c05d...</msg>
<status status="PASS" starttime="20230717 19:44:23.826" endtime="20230717 19:44:40.154"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:44:40.156" level="INFO">Container id: 1
Pipeline id: a5a2b4b4-2ec8-4e18-ac89-5170f320a877
Container State: CLOSED
Datanodes: [87c5eb0b-149e-4683-94a4-bc7d39a11a90/ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net,
cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe/ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net,
e9096b01-e48e-4ceb-b568-1d22ceed6cac/ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net]
Replicas: [State: CLOSED; ReplicaIndex: 0; Origin: 87c5eb0b-149e-4683-94a4-bc7d39a11a90; Location: 87c5eb0b-149e-4683-94a4-bc7d39a11a90/ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net,
State: CLOSED; ReplicaIndex: 0; Origin: cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe; Location: cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe/ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net,
State: CLOSED; ReplicaIndex: 0; Origin: e9096b01-e48e-4ceb-b568-1d22ceed6cac; Location: e9096b01-e48e-4ceb-b568-1d22ceed6cac/ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net]</msg>
<status status="PASS" starttime="20230717 19:44:40.154" endtime="20230717 19:44:40.156"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:44:40.160" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:44:40.156" endtime="20230717 19:44:40.161"/>
</kw>
<status status="PASS" starttime="20230717 19:44:23.824" endtime="20230717 19:44:40.162"/>
</kw>
<msg timestamp="20230717 19:44:40.162" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:44:23.823" endtime="20230717 19:44:40.162"/>
</kw>
<msg timestamp="20230717 19:44:40.163" level="INFO">${output} = Container id: 1
Pipeline id: a5a2b4b4-2ec8-4e18-ac89-5170f320a877
Container State: CLOSED
Datanodes: [87c5eb0b-149e-4683-94a4-bc7d39a11a90/ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net,
cd78c05d...</msg>
<status status="PASS" starttime="20230717 19:44:23.822" endtime="20230717 19:44:40.163"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>CLOSED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:44:40.164" endtime="20230717 19:44:40.165"/>
</kw>
<status status="PASS" starttime="20230717 19:44:23.821" endtime="20230717 19:44:40.165"/>
</kw>
<status status="PASS" starttime="20230717 19:44:23.820" endtime="20230717 19:44:40.165"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:43:32.150" endtime="20230717 19:44:40.167"/>
</test>
<test id="s1-s10-s2-t10" name="Incomplete command" line="81">
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>ozone admin container</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:44:40.187" level="INFO">Running command 'ozone admin container 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:44:53.251" level="INFO">${rc} = 255</msg>
<msg timestamp="20230717 19:44:53.251" level="INFO">${output} = Incomplete command
Usage: ozone admin container [-hV] [COMMAND]
Container specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
C...</msg>
<status status="PASS" starttime="20230717 19:44:40.178" endtime="20230717 19:44:53.251"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:44:53.255" level="INFO">Incomplete command
Usage: ozone admin container [-hV] [COMMAND]
Container specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Commands:
  list    List containers
  info    Show information about a specific container
  create  Create container
  close   close container
  report  Display the container summary report</msg>
<status status="PASS" starttime="20230717 19:44:53.252" endtime="20230717 19:44:53.255"/>
</kw>
<msg timestamp="20230717 19:44:53.256" level="INFO">${output} = Incomplete command
Usage: ozone admin container [-hV] [COMMAND]
Container specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
C...</msg>
<status status="PASS" starttime="20230717 19:44:40.177" endtime="20230717 19:44:53.256"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Incomplete command</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:44:53.257" endtime="20230717 19:44:53.259"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>list</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:44:53.259" endtime="20230717 19:44:53.260"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>info</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:44:53.262" endtime="20230717 19:44:53.263"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>create</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:44:53.263" endtime="20230717 19:44:53.264"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>close</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:44:53.264" endtime="20230717 19:44:53.265"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:44:40.173" endtime="20230717 19:44:53.265"/>
</test>
<test id="s1-s10-s2-t11" name="Cannot close container without admin privilege" line="93">
<kw name="Requires admin privilege" library="commonlib">
<arg>ozone admin container close "${CONTAINER}"</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip privilege check in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230717 19:44:53.271" endtime="20230717 19:44:53.272"/>
</kw>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:44:53.285" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:44:53.291" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:44:53.291" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20230717 19:44:53.278" endtime="20230717 19:44:53.291"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:44:53.294" level="INFO">s3g</msg>
<status status="PASS" starttime="20230717 19:44:53.292" endtime="20230717 19:44:53.294"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:44:53.296" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:44:53.295" endtime="20230717 19:44:53.296"/>
</kw>
<status status="PASS" starttime="20230717 19:44:53.277" endtime="20230717 19:44:53.296"/>
</kw>
<msg timestamp="20230717 19:44:53.297" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:44:53.275" endtime="20230717 19:44:53.297"/>
</kw>
<msg timestamp="20230717 19:44:53.297" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20230717 19:44:53.274" endtime="20230717 19:44:53.297"/>
</kw>
<msg timestamp="20230717 19:44:53.298" level="INFO">${TEST_USER} = testuser2/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230717 19:44:53.273" endtime="20230717 19:44:53.298"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230717 19:44:53.300" level="INFO">${TEST_USER} = testuser2/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230717 19:44:53.298" endtime="20230717 19:44:53.300"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:44:53.313" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser2.keytab testuser2/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:44:53.390" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:44:53.390" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:44:53.305" endtime="20230717 19:44:53.390"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:44:53.391" level="INFO"/>
<status status="PASS" starttime="20230717 19:44:53.390" endtime="20230717 19:44:53.391"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:44:53.392" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:44:53.391" endtime="20230717 19:44:53.392"/>
</kw>
<status status="PASS" starttime="20230717 19:44:53.303" endtime="20230717 19:44:53.392"/>
</kw>
<msg timestamp="20230717 19:44:53.392" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:44:53.302" endtime="20230717 19:44:53.392"/>
</kw>
<status status="PASS" starttime="20230717 19:44:53.300" endtime="20230717 19:44:53.393"/>
</kw>
<status status="PASS" starttime="20230717 19:44:53.300" endtime="20230717 19:44:53.393"/>
</kw>
<status status="PASS" starttime="20230717 19:44:53.273" endtime="20230717 19:44:53.393"/>
</kw>
<kw name="Access should be denied" library="commonlib">
<arg>${command}</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>${command}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:44:53.402" level="INFO">Running command 'ozone admin container close "3" 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:45:09.031" level="INFO">${rc} = 255</msg>
<msg timestamp="20230717 19:45:09.031" level="INFO">${output} = Access denied for user testuser2/s3g@EXAMPLE.COM. SCM superuser privilege is required.</msg>
<status status="PASS" starttime="20230717 19:44:53.397" endtime="20230717 19:45:09.031"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:45:09.033" level="INFO">Access denied for user testuser2/s3g@EXAMPLE.COM. SCM superuser privilege is required.</msg>
<status status="PASS" starttime="20230717 19:45:09.032" endtime="20230717 19:45:09.033"/>
</kw>
<msg timestamp="20230717 19:45:09.034" level="INFO">${output} = Access denied for user testuser2/s3g@EXAMPLE.COM. SCM superuser privilege is required.</msg>
<status status="PASS" starttime="20230717 19:44:53.395" endtime="20230717 19:45:09.034"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Access denied</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:45:09.034" endtime="20230717 19:45:09.035"/>
</kw>
<status status="PASS" starttime="20230717 19:44:53.393" endtime="20230717 19:45:09.036"/>
</kw>
<status status="PASS" starttime="20230717 19:44:53.270" endtime="20230717 19:45:09.036"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:44:53.268" endtime="20230717 19:45:09.036"/>
</test>
<test id="s1-s10-s2-t12" name="Cannot create container without admin privilege" line="96">
<kw name="Requires admin privilege" library="commonlib">
<arg>ozone admin container create</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip privilege check in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230717 19:45:09.042" endtime="20230717 19:45:09.042"/>
</kw>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:45:09.053" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:45:09.061" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:45:09.061" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20230717 19:45:09.047" endtime="20230717 19:45:09.061"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:45:09.063" level="INFO">s3g</msg>
<status status="PASS" starttime="20230717 19:45:09.062" endtime="20230717 19:45:09.063"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:45:09.064" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:45:09.064" endtime="20230717 19:45:09.065"/>
</kw>
<status status="PASS" starttime="20230717 19:45:09.046" endtime="20230717 19:45:09.065"/>
</kw>
<msg timestamp="20230717 19:45:09.065" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:45:09.045" endtime="20230717 19:45:09.065"/>
</kw>
<msg timestamp="20230717 19:45:09.066" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20230717 19:45:09.045" endtime="20230717 19:45:09.066"/>
</kw>
<msg timestamp="20230717 19:45:09.067" level="INFO">${TEST_USER} = testuser2/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230717 19:45:09.044" endtime="20230717 19:45:09.067"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230717 19:45:09.068" level="INFO">${TEST_USER} = testuser2/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230717 19:45:09.067" endtime="20230717 19:45:09.068"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:45:09.078" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser2.keytab testuser2/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:45:09.135" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:45:09.135" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:45:09.072" endtime="20230717 19:45:09.135"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:45:09.137" level="INFO"/>
<status status="PASS" starttime="20230717 19:45:09.135" endtime="20230717 19:45:09.137"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:45:09.137" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:45:09.137" endtime="20230717 19:45:09.137"/>
</kw>
<status status="PASS" starttime="20230717 19:45:09.071" endtime="20230717 19:45:09.138"/>
</kw>
<msg timestamp="20230717 19:45:09.138" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:45:09.070" endtime="20230717 19:45:09.138"/>
</kw>
<status status="PASS" starttime="20230717 19:45:09.069" endtime="20230717 19:45:09.138"/>
</kw>
<status status="PASS" starttime="20230717 19:45:09.068" endtime="20230717 19:45:09.138"/>
</kw>
<status status="PASS" starttime="20230717 19:45:09.043" endtime="20230717 19:45:09.138"/>
</kw>
<kw name="Access should be denied" library="commonlib">
<arg>${command}</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>${command}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:45:09.147" level="INFO">Running command 'ozone admin container create 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:45:29.494" level="INFO">${rc} = 255</msg>
<msg timestamp="20230717 19:45:29.494" level="INFO">${output} = Access denied for user testuser2/s3g@EXAMPLE.COM. SCM superuser privilege is required.</msg>
<status status="PASS" starttime="20230717 19:45:09.143" endtime="20230717 19:45:29.494"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:45:29.496" level="INFO">Access denied for user testuser2/s3g@EXAMPLE.COM. SCM superuser privilege is required.</msg>
<status status="PASS" starttime="20230717 19:45:29.495" endtime="20230717 19:45:29.496"/>
</kw>
<msg timestamp="20230717 19:45:29.496" level="INFO">${output} = Access denied for user testuser2/s3g@EXAMPLE.COM. SCM superuser privilege is required.</msg>
<status status="PASS" starttime="20230717 19:45:09.140" endtime="20230717 19:45:29.497"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Access denied</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:45:29.498" endtime="20230717 19:45:29.500"/>
</kw>
<status status="PASS" starttime="20230717 19:45:09.139" endtime="20230717 19:45:29.500"/>
</kw>
<status status="PASS" starttime="20230717 19:45:09.041" endtime="20230717 19:45:29.502"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:45:09.039" endtime="20230717 19:45:29.503"/>
</test>
<doc>Test ozone admin container command</doc>
<status status="PASS" starttime="20230717 19:40:44.992" endtime="20230717 19:45:29.508"/>
</suite>
<suite id="s1-s10-s3" name="Datanode" source="/opt/hadoop/smoketest/admincli/datanode.robot">
<test id="s1-s10-s3-t1" name="List datanodes" line="23">
<kw name="Execute" library="os">
<arg>ozone admin datanode list &gt; datanode.list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:45:29.547" level="INFO">Running command 'ozone admin datanode list &gt; datanode.list'.</msg>
<msg timestamp="20230717 19:45:46.421" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:45:46.421" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:45:29.540" endtime="20230717 19:45:46.421"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:45:46.422" level="INFO"/>
<status status="PASS" starttime="20230717 19:45:46.421" endtime="20230717 19:45:46.422"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:45:46.423" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:45:46.423" endtime="20230717 19:45:46.423"/>
</kw>
<status status="PASS" starttime="20230717 19:45:29.539" endtime="20230717 19:45:46.424"/>
</kw>
<msg timestamp="20230717 19:45:46.424" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:45:29.539" endtime="20230717 19:45:46.424"/>
</kw>
<status status="PASS" starttime="20230717 19:45:29.538" endtime="20230717 19:45:46.424"/>
</kw>
<kw name="Get File" library="OperatingSystem">
<var>${output}</var>
<arg>datanode.list</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20230717 19:45:46.424" level="INFO" html="true">Getting file '&lt;a href="file:///opt/hadoop/datanode.list"&gt;/opt/hadoop/datanode.list&lt;/a&gt;'.</msg>
<msg timestamp="20230717 19:45:46.425" level="INFO">${output} = Datanode: 87c5eb0b-149e-4683-94a4-bc7d39a11a90 (/default-rack/172.25.0.103/ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/3 pipelines)
Operational State: IN_SERVICE
Health State: HEALTHY
Related ...</msg>
<status status="PASS" starttime="20230717 19:45:46.424" endtime="20230717 19:45:46.425"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Datanode:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:45:46.425" endtime="20230717 19:45:46.426"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Related pipelines:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:45:46.426" endtime="20230717 19:45:46.426"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:45:29.537" endtime="20230717 19:45:46.426"/>
</test>
<test id="s1-s10-s3-t2" name="Filter list by UUID" line="29">
<kw name="Execute" library="os">
<var>${uuid}</var>
<arg>grep '^Datanode:' datanode.list | head -1 | awk '{ print \$2 }'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:45:46.432" level="INFO">Running command 'grep '^Datanode:' datanode.list | head -1 | awk '{ print $2 }' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:45:46.443" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:45:46.443" level="INFO">${output} = 87c5eb0b-149e-4683-94a4-bc7d39a11a90</msg>
<status status="PASS" starttime="20230717 19:45:46.429" endtime="20230717 19:45:46.443"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:45:46.445" level="INFO">87c5eb0b-149e-4683-94a4-bc7d39a11a90</msg>
<status status="PASS" starttime="20230717 19:45:46.444" endtime="20230717 19:45:46.445"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:45:46.446" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:45:46.446" endtime="20230717 19:45:46.447"/>
</kw>
<status status="PASS" starttime="20230717 19:45:46.429" endtime="20230717 19:45:46.447"/>
</kw>
<msg timestamp="20230717 19:45:46.447" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:45:46.428" endtime="20230717 19:45:46.447"/>
</kw>
<msg timestamp="20230717 19:45:46.447" level="INFO">${uuid} = 87c5eb0b-149e-4683-94a4-bc7d39a11a90</msg>
<status status="PASS" starttime="20230717 19:45:46.428" endtime="20230717 19:45:46.448"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin datanode list --id "${uuid}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:45:46.461" level="INFO">Running command 'ozone admin datanode list --id "87c5eb0b-149e-4683-94a4-bc7d39a11a90" 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:46:02.950" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:46:02.950" level="INFO">${output} = Datanode: 87c5eb0b-149e-4683-94a4-bc7d39a11a90 (/default-rack/172.25.0.103/ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/3 pipelines)
Operational State: IN_SERVICE
Health State: HEALTHY
Related ...</msg>
<status status="PASS" starttime="20230717 19:45:46.454" endtime="20230717 19:46:02.950"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:46:02.953" level="INFO">Datanode: 87c5eb0b-149e-4683-94a4-bc7d39a11a90 (/default-rack/172.25.0.103/ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/3 pipelines)
Operational State: IN_SERVICE
Health State: HEALTHY
Related pipelines:
d53df065-c93c-4ba4-951d-7ce4c3578383/RATIS/ONE/RATIS/OPEN/Leader
4434309e-20b3-4896-aea8-56dfc449007c/RATIS/THREE/RATIS/OPEN/Follower
dccb59df-d6ae-4974-bb3a-70d0b20ec655/RATIS/THREE/RATIS/OPEN/Follower
</msg>
<status status="PASS" starttime="20230717 19:46:02.952" endtime="20230717 19:46:02.953"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:46:02.955" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:46:02.954" endtime="20230717 19:46:02.955"/>
</kw>
<status status="PASS" starttime="20230717 19:45:46.452" endtime="20230717 19:46:02.957"/>
</kw>
<msg timestamp="20230717 19:46:02.957" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:45:46.451" endtime="20230717 19:46:02.957"/>
</kw>
<msg timestamp="20230717 19:46:02.957" level="INFO">${output} = Datanode: 87c5eb0b-149e-4683-94a4-bc7d39a11a90 (/default-rack/172.25.0.103/ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/3 pipelines)
Operational State: IN_SERVICE
Health State: HEALTHY
Related ...</msg>
<status status="PASS" starttime="20230717 19:45:46.450" endtime="20230717 19:46:02.957"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Datanode: ${uuid}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:46:02.958" endtime="20230717 19:46:02.958"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${datanodes}</var>
<arg>${output}</arg>
<arg>Datanode:</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20230717 19:46:02.960" level="INFO">1 out of 7 lines matched</msg>
<msg timestamp="20230717 19:46:02.961" level="INFO">${datanodes} = Datanode: 87c5eb0b-149e-4683-94a4-bc7d39a11a90 (/default-rack/172.25.0.103/ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/3 pipelines)</msg>
<status status="PASS" starttime="20230717 19:46:02.960" endtime="20230717 19:46:02.961"/>
</kw>
<kw name="Split To Lines" library="String">
<var>@{lines}</var>
<arg>${datanodes}</arg>
<doc>Splits the given string to lines.</doc>
<msg timestamp="20230717 19:46:02.962" level="INFO">1 lines returned</msg>
<msg timestamp="20230717 19:46:02.963" level="INFO">@{lines} = [ Datanode: 87c5eb0b-149e-4683-94a4-bc7d39a11a90 (/default-rack/172.25.0.103/ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/3 pipelines) ]</msg>
<status status="PASS" starttime="20230717 19:46:02.961" endtime="20230717 19:46:02.963"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${count}</var>
<arg>${lines}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230717 19:46:02.964" level="INFO">Length is 1</msg>
<msg timestamp="20230717 19:46:02.964" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230717 19:46:02.963" endtime="20230717 19:46:02.964"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>1</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:46:02.966" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:46:02.966" endtime="20230717 19:46:02.966"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:45:46.427" endtime="20230717 19:46:02.967"/>
</test>
<test id="s1-s10-s3-t3" name="Filter list by NodeOperationalState" line="38">
<kw name="Execute" library="os">
<var>${uuid}</var>
<arg>grep '^Datanode:' datanode.list | head -1 | awk '{ print \$2 }'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:46:02.983" level="INFO">Running command 'grep '^Datanode:' datanode.list | head -1 | awk '{ print $2 }' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:46:02.993" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:46:02.993" level="INFO">${output} = 87c5eb0b-149e-4683-94a4-bc7d39a11a90</msg>
<status status="PASS" starttime="20230717 19:46:02.976" endtime="20230717 19:46:02.993"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:46:02.997" level="INFO">87c5eb0b-149e-4683-94a4-bc7d39a11a90</msg>
<status status="PASS" starttime="20230717 19:46:02.995" endtime="20230717 19:46:02.997"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:46:03.000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:46:02.998" endtime="20230717 19:46:03.001"/>
</kw>
<status status="PASS" starttime="20230717 19:46:02.974" endtime="20230717 19:46:03.001"/>
</kw>
<msg timestamp="20230717 19:46:03.001" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:46:02.973" endtime="20230717 19:46:03.001"/>
</kw>
<msg timestamp="20230717 19:46:03.002" level="INFO">${uuid} = 87c5eb0b-149e-4683-94a4-bc7d39a11a90</msg>
<status status="PASS" starttime="20230717 19:46:02.972" endtime="20230717 19:46:03.002"/>
</kw>
<kw name="Execute" library="os">
<var>${expected}</var>
<arg>grep -c 'Operational State: IN_SERVICE' datanode.list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:46:03.011" level="INFO">Running command 'grep -c 'Operational State: IN_SERVICE' datanode.list 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:46:03.018" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:46:03.018" level="INFO">${output} = 3</msg>
<status status="PASS" starttime="20230717 19:46:03.006" endtime="20230717 19:46:03.019"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:46:03.022" level="INFO">3</msg>
<status status="PASS" starttime="20230717 19:46:03.020" endtime="20230717 19:46:03.022"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:46:03.024" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:46:03.022" endtime="20230717 19:46:03.024"/>
</kw>
<status status="PASS" starttime="20230717 19:46:03.004" endtime="20230717 19:46:03.025"/>
</kw>
<msg timestamp="20230717 19:46:03.025" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:46:03.003" endtime="20230717 19:46:03.025"/>
</kw>
<msg timestamp="20230717 19:46:03.025" level="INFO">${expected} = 3</msg>
<status status="PASS" starttime="20230717 19:46:03.002" endtime="20230717 19:46:03.025"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin datanode list --operational-state IN_SERVICE</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:46:03.034" level="INFO">Running command 'ozone admin datanode list --operational-state IN_SERVICE 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:46:18.670" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:46:18.671" level="INFO">${output} = Datanode: 87c5eb0b-149e-4683-94a4-bc7d39a11a90 (/default-rack/172.25.0.103/ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/3 pipelines)
Operational State: IN_SERVICE
Health State: HEALTHY
Related ...</msg>
<status status="PASS" starttime="20230717 19:46:03.029" endtime="20230717 19:46:18.671"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:46:18.674" level="INFO">Datanode: 87c5eb0b-149e-4683-94a4-bc7d39a11a90 (/default-rack/172.25.0.103/ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/3 pipelines)
Operational State: IN_SERVICE
Health State: HEALTHY
Related pipelines:
d53df065-c93c-4ba4-951d-7ce4c3578383/RATIS/ONE/RATIS/OPEN/Leader
4434309e-20b3-4896-aea8-56dfc449007c/RATIS/THREE/RATIS/OPEN/Follower
dccb59df-d6ae-4974-bb3a-70d0b20ec655/RATIS/THREE/RATIS/OPEN/Follower

Datanode: cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe (/default-rack/172.25.0.104/ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net/4 pipelines)
Operational State: IN_SERVICE
Health State: HEALTHY
Related pipelines:
7adffc2c-9e94-4914-8b59-50fe3fac600a/RATIS/ONE/RATIS/OPEN/Leader
80e0342c-f4f7-4e2e-a6ae-99a56bac1e64/STANDALONE/ONE/STAND_ALONE/OPEN/Follower
4434309e-20b3-4896-aea8-56dfc449007c/RATIS/THREE/RATIS/OPEN/Follower
dccb59df-d6ae-4974-bb3a-70d0b20ec655/RATIS/THREE/RATIS/OPEN/Leader

Datanode: e9096b01-e48e-4ceb-b568-1d22ceed6cac (/default-rack/172.25.0.102/ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net/3 pipelines)
Operational State: IN_SERVICE
Health State: HEALTHY
Related pipelines:
35a72a85-c521-46ce-b844-af6de2037f1e/RATIS/ONE/RATIS/OPEN/Leader
4434309e-20b3-4896-aea8-56dfc449007c/RATIS/THREE/RATIS/OPEN/Leader
dccb59df-d6ae-4974-bb3a-70d0b20ec655/RATIS/THREE/RATIS/OPEN/Follower
</msg>
<status status="PASS" starttime="20230717 19:46:18.673" endtime="20230717 19:46:18.675"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:46:18.675" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:46:18.675" endtime="20230717 19:46:18.675"/>
</kw>
<status status="PASS" starttime="20230717 19:46:03.028" endtime="20230717 19:46:18.676"/>
</kw>
<msg timestamp="20230717 19:46:18.676" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:46:03.027" endtime="20230717 19:46:18.676"/>
</kw>
<msg timestamp="20230717 19:46:18.676" level="INFO">${output} = Datanode: 87c5eb0b-149e-4683-94a4-bc7d39a11a90 (/default-rack/172.25.0.103/ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/3 pipelines)
Operational State: IN_SERVICE
Health State: HEALTHY
Related ...</msg>
<status status="PASS" starttime="20230717 19:46:03.026" endtime="20230717 19:46:18.676"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Datanode: ${uuid}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:46:18.676" endtime="20230717 19:46:18.679"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${datanodes}</var>
<arg>${output}</arg>
<arg>Datanode:</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20230717 19:46:18.679" level="INFO">3 out of 24 lines matched</msg>
<msg timestamp="20230717 19:46:18.680" level="INFO">${datanodes} = Datanode: 87c5eb0b-149e-4683-94a4-bc7d39a11a90 (/default-rack/172.25.0.103/ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/3 pipelines)
Datanode: cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe (/default-rac...</msg>
<status status="PASS" starttime="20230717 19:46:18.679" endtime="20230717 19:46:18.680"/>
</kw>
<kw name="Split To Lines" library="String">
<var>@{lines}</var>
<arg>${datanodes}</arg>
<doc>Splits the given string to lines.</doc>
<msg timestamp="20230717 19:46:18.685" level="INFO">3 lines returned</msg>
<msg timestamp="20230717 19:46:18.685" level="INFO">@{lines} = [ Datanode: 87c5eb0b-149e-4683-94a4-bc7d39a11a90 (/default-rack/172.25.0.103/ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/3 pipelines) | Datanode: cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe (/default...</msg>
<status status="PASS" starttime="20230717 19:46:18.683" endtime="20230717 19:46:18.685"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${count}</var>
<arg>${lines}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230717 19:46:18.688" level="INFO">Length is 3</msg>
<msg timestamp="20230717 19:46:18.688" level="INFO">${count} = 3</msg>
<status status="PASS" starttime="20230717 19:46:18.687" endtime="20230717 19:46:18.688"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>${expected}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:46:18.690" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:46:18.688" endtime="20230717 19:46:18.690"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:46:02.970" endtime="20230717 19:46:18.691"/>
</test>
<test id="s1-s10-s3-t4" name="Filter list by NodeState" line="48">
<kw name="Execute" library="os">
<var>${uuid}</var>
<arg>grep '^Datanode:' datanode.list | head -1 | awk '{ print \$2 }'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:46:18.702" level="INFO">Running command 'grep '^Datanode:' datanode.list | head -1 | awk '{ print $2 }' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:46:18.711" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:46:18.711" level="INFO">${output} = 87c5eb0b-149e-4683-94a4-bc7d39a11a90</msg>
<status status="PASS" starttime="20230717 19:46:18.698" endtime="20230717 19:46:18.711"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:46:18.714" level="INFO">87c5eb0b-149e-4683-94a4-bc7d39a11a90</msg>
<status status="PASS" starttime="20230717 19:46:18.712" endtime="20230717 19:46:18.714"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:46:18.716" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:46:18.714" endtime="20230717 19:46:18.716"/>
</kw>
<status status="PASS" starttime="20230717 19:46:18.697" endtime="20230717 19:46:18.718"/>
</kw>
<msg timestamp="20230717 19:46:18.718" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:46:18.696" endtime="20230717 19:46:18.718"/>
</kw>
<msg timestamp="20230717 19:46:18.721" level="INFO">${uuid} = 87c5eb0b-149e-4683-94a4-bc7d39a11a90</msg>
<status status="PASS" starttime="20230717 19:46:18.695" endtime="20230717 19:46:18.721"/>
</kw>
<kw name="Execute" library="os">
<var>${expected}</var>
<arg>grep -c 'Health State: HEALTHY' datanode.list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:46:18.737" level="INFO">Running command 'grep -c 'Health State: HEALTHY' datanode.list 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:46:18.742" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:46:18.742" level="INFO">${output} = 3</msg>
<status status="PASS" starttime="20230717 19:46:18.731" endtime="20230717 19:46:18.742"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:46:18.744" level="INFO">3</msg>
<status status="PASS" starttime="20230717 19:46:18.743" endtime="20230717 19:46:18.745"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:46:18.746" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:46:18.745" endtime="20230717 19:46:18.746"/>
</kw>
<status status="PASS" starttime="20230717 19:46:18.725" endtime="20230717 19:46:18.746"/>
</kw>
<msg timestamp="20230717 19:46:18.746" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:46:18.724" endtime="20230717 19:46:18.747"/>
</kw>
<msg timestamp="20230717 19:46:18.747" level="INFO">${expected} = 3</msg>
<status status="PASS" starttime="20230717 19:46:18.723" endtime="20230717 19:46:18.747"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin datanode list --node-state HEALTHY</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:46:18.754" level="INFO">Running command 'ozone admin datanode list --node-state HEALTHY 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:46:35.041" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:46:35.042" level="INFO">${output} = Datanode: 87c5eb0b-149e-4683-94a4-bc7d39a11a90 (/default-rack/172.25.0.103/ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/3 pipelines)
Operational State: IN_SERVICE
Health State: HEALTHY
Related ...</msg>
<status status="PASS" starttime="20230717 19:46:18.750" endtime="20230717 19:46:35.042"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:46:35.043" level="INFO">Datanode: 87c5eb0b-149e-4683-94a4-bc7d39a11a90 (/default-rack/172.25.0.103/ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/3 pipelines)
Operational State: IN_SERVICE
Health State: HEALTHY
Related pipelines:
d53df065-c93c-4ba4-951d-7ce4c3578383/RATIS/ONE/RATIS/OPEN/Leader
4434309e-20b3-4896-aea8-56dfc449007c/RATIS/THREE/RATIS/OPEN/Follower
dccb59df-d6ae-4974-bb3a-70d0b20ec655/RATIS/THREE/RATIS/OPEN/Follower

Datanode: cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe (/default-rack/172.25.0.104/ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net/4 pipelines)
Operational State: IN_SERVICE
Health State: HEALTHY
Related pipelines:
7adffc2c-9e94-4914-8b59-50fe3fac600a/RATIS/ONE/RATIS/OPEN/Leader
80e0342c-f4f7-4e2e-a6ae-99a56bac1e64/STANDALONE/ONE/STAND_ALONE/OPEN/Follower
4434309e-20b3-4896-aea8-56dfc449007c/RATIS/THREE/RATIS/OPEN/Follower
dccb59df-d6ae-4974-bb3a-70d0b20ec655/RATIS/THREE/RATIS/OPEN/Leader

Datanode: e9096b01-e48e-4ceb-b568-1d22ceed6cac (/default-rack/172.25.0.102/ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net/3 pipelines)
Operational State: IN_SERVICE
Health State: HEALTHY
Related pipelines:
35a72a85-c521-46ce-b844-af6de2037f1e/RATIS/ONE/RATIS/OPEN/Leader
4434309e-20b3-4896-aea8-56dfc449007c/RATIS/THREE/RATIS/OPEN/Leader
dccb59df-d6ae-4974-bb3a-70d0b20ec655/RATIS/THREE/RATIS/OPEN/Follower
</msg>
<status status="PASS" starttime="20230717 19:46:35.042" endtime="20230717 19:46:35.044"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:46:35.045" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:46:35.044" endtime="20230717 19:46:35.045"/>
</kw>
<status status="PASS" starttime="20230717 19:46:18.749" endtime="20230717 19:46:35.045"/>
</kw>
<msg timestamp="20230717 19:46:35.046" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:46:18.748" endtime="20230717 19:46:35.046"/>
</kw>
<msg timestamp="20230717 19:46:35.046" level="INFO">${output} = Datanode: 87c5eb0b-149e-4683-94a4-bc7d39a11a90 (/default-rack/172.25.0.103/ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/3 pipelines)
Operational State: IN_SERVICE
Health State: HEALTHY
Related ...</msg>
<status status="PASS" starttime="20230717 19:46:18.747" endtime="20230717 19:46:35.046"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Datanode: ${uuid}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:46:35.047" endtime="20230717 19:46:35.047"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${datanodes}</var>
<arg>${output}</arg>
<arg>Datanode:</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20230717 19:46:35.048" level="INFO">3 out of 24 lines matched</msg>
<msg timestamp="20230717 19:46:35.048" level="INFO">${datanodes} = Datanode: 87c5eb0b-149e-4683-94a4-bc7d39a11a90 (/default-rack/172.25.0.103/ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/3 pipelines)
Datanode: cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe (/default-rac...</msg>
<status status="PASS" starttime="20230717 19:46:35.047" endtime="20230717 19:46:35.048"/>
</kw>
<kw name="Split To Lines" library="String">
<var>@{lines}</var>
<arg>${datanodes}</arg>
<doc>Splits the given string to lines.</doc>
<msg timestamp="20230717 19:46:35.049" level="INFO">3 lines returned</msg>
<msg timestamp="20230717 19:46:35.049" level="INFO">@{lines} = [ Datanode: 87c5eb0b-149e-4683-94a4-bc7d39a11a90 (/default-rack/172.25.0.103/ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/3 pipelines) | Datanode: cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe (/default...</msg>
<status status="PASS" starttime="20230717 19:46:35.048" endtime="20230717 19:46:35.049"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${count}</var>
<arg>${lines}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230717 19:46:35.050" level="INFO">Length is 3</msg>
<msg timestamp="20230717 19:46:35.050" level="INFO">${count} = 3</msg>
<status status="PASS" starttime="20230717 19:46:35.050" endtime="20230717 19:46:35.050"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>${expected}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:46:35.051" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:46:35.051" endtime="20230717 19:46:35.051"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:46:18.693" endtime="20230717 19:46:35.052"/>
</test>
<test id="s1-s10-s3-t5" name="Incomplete command" line="58">
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>ozone admin datanode</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:46:35.060" level="INFO">Running command 'ozone admin datanode 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:46:43.979" level="INFO">${rc} = 255</msg>
<msg timestamp="20230717 19:46:43.979" level="INFO">${output} = Incomplete command
Usage: ozone admin datanode [-hV] [COMMAND]
Datanode specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Com...</msg>
<status status="PASS" starttime="20230717 19:46:35.056" endtime="20230717 19:46:43.979"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:46:43.981" level="INFO">Incomplete command
Usage: ozone admin datanode [-hV] [COMMAND]
Datanode specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Commands:
  list          List info of datanodes
  decommission  Decommission a datanode
  maintenance   Put a datanode into Maintenance Mode
  recommission  Return a datanode to service
  usageinfo     List usage information (such as Capacity, SCMUsed, Remaining)
                  of a datanode by IP address or UUID</msg>
<status status="PASS" starttime="20230717 19:46:43.980" endtime="20230717 19:46:43.982"/>
</kw>
<msg timestamp="20230717 19:46:43.983" level="INFO">${output} = Incomplete command
Usage: ozone admin datanode [-hV] [COMMAND]
Datanode specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Com...</msg>
<status status="PASS" starttime="20230717 19:46:35.055" endtime="20230717 19:46:43.983"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Incomplete command</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:46:43.983" endtime="20230717 19:46:43.987"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>list</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:46:43.990" endtime="20230717 19:46:43.991"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:46:35.054" endtime="20230717 19:46:43.991"/>
</test>
<test id="s1-s10-s3-t6" name="List datanodes as JSON" line="67">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin datanode list --json | jq -r '.'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:46:44.005" level="INFO">Running command 'ozone admin datanode list --json | jq -r '.' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:47:02.286" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:47:02.286" level="INFO">${output} = [
  {
    "datanodeDetails": {
      "level": 0,
      "cost": 0,
      "uuid": "87c5eb0b-149e-4683-94a4-bc7d39a11a90",
      "uuidString": "87c5eb0b-149e-4683-94a4-bc7d39a11a90",
      "ipAddress": "...</msg>
<status status="PASS" starttime="20230717 19:46:43.999" endtime="20230717 19:47:02.287"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:47:02.297" level="INFO">[
  {
    "datanodeDetails": {
      "level": 0,
      "cost": 0,
      "uuid": "87c5eb0b-149e-4683-94a4-bc7d39a11a90",
      "uuidString": "87c5eb0b-149e-4683-94a4-bc7d39a11a90",
      "ipAddress": "172.25.0.103",
      "hostName": "ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net",
      "ports": [
        {
          "name": "HTTP",
          "value": 9882
        },
        {
          "name": "CLIENT_RPC",
          "value": 9864
        },
        {
          "name": "REPLICATION",
          "value": 9886
        },
        {
          "name": "RATIS",
          "value": 9858
        },
        {
          "name": "RATIS_ADMIN",
          "value": 9857
        },
        {
          "name": "RATIS_SERVER",
          "value": 9856
        },
        {
          "name": "RATIS_DATASTREAM",
          "value": 9855
        },
        {
          "name": "STANDALONE",
          "value": 9859
        }
      ],
      "setupTime": 0,
      "persistedOpState": "IN_SERVICE",
      "persistedOpStateExpiryEpochSec": 0,
      "initialVersion": 0,
      "currentVersion": 1,
      "signature": 1010801985,
      "maintenance": false,
      "decommissioned": false,
      "networkLocation": "/default-rack",
      "networkName": "87c5eb0b-149e-4683-94a4-bc7d39a11a90",
      "networkFullPath": "/default-rack/87c5eb0b-149e-4683-94a4-bc7d39a11a90",
      "numOfLeaves": 1
    },
    "healthState": "HEALTHY",
    "opState": "IN_SERVICE"
  },
  {
    "datanodeDetails": {
      "level": 0,
      "cost": 0,
      "uuid": "cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe",
      "uuidString": "cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe",
      "ipAddress": "172.25.0.104",
      "hostName": "ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net",
      "ports": [
        {
          "name": "HTTP",
          "value": 9882
        },
        {
          "name": "CLIENT_RPC",
          "value": 9864
        },
        {
          "name": "REPLICATION",
          "value": 9886
        },
        {
          "name": "RATIS",
          "value": 9858
        },
        {
          "name": "RATIS_ADMIN",
          "value": 9857
        },
        {
          "name": "RATIS_SERVER",
          "value": 9856
        },
        {
          "name": "RATIS_DATASTREAM",
          "value": 9855
        },
        {
          "name": "STANDALONE",
          "value": 9859
        }
      ],
      "setupTime": 0,
      "persistedOpState": "IN_SERVICE",
      "persistedOpStateExpiryEpochSec": 0,
      "initialVersion": 0,
      "currentVersion": 1,
      "signature": 1661513405,
      "maintenance": false,
      "decommissioned": false,
      "networkLocation": "/default-rack",
      "networkName": "cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe",
      "networkFullPath": "/default-rack/cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe",
      "numOfLeaves": 1
    },
    "healthState": "HEALTHY",
    "opState": "IN_SERVICE"
  },
  {
    "datanodeDetails": {
      "level": 0,
      "cost": 0,
      "uuid": "e9096b01-e48e-4ceb-b568-1d22ceed6cac",
      "uuidString": "e9096b01-e48e-4ceb-b568-1d22ceed6cac",
      "ipAddress": "172.25.0.102",
      "hostName": "ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net",
      "ports": [
        {
          "name": "HTTP",
          "value": 9882
        },
        {
          "name": "CLIENT_RPC",
          "value": 9864
        },
        {
          "name": "REPLICATION",
          "value": 9886
        },
        {
          "name": "RATIS",
          "value": 9858
        },
        {
          "name": "RATIS_ADMIN",
          "value": 9857
        },
        {
          "name": "RATIS_SERVER",
          "value": 9856
        },
        {
          "name": "RATIS_DATASTREAM",
          "value": 9855
        },
        {
          "name": "STANDALONE",
          "value": 9859
        }
      ],
      "setupTime": 0,
      "persistedOpState": "IN_SERVICE",
      "persistedOpStateExpiryEpochSec": 0,
      "initialVersion": 0,
      "currentVersion": 1,
      "signature": -1267358847,
      "maintenance": false,
      "decommissioned": false,
      "networkLocation": "/default-rack",
      "networkName": "e9096b01-e48e-4ceb-b568-1d22ceed6cac",
      "networkFullPath": "/default-rack/e9096b01-e48e-4ceb-b568-1d22ceed6cac",
      "numOfLeaves": 1
    },
    "healthState": "HEALTHY",
    "opState": "IN_SERVICE"
  }
]</msg>
<status status="PASS" starttime="20230717 19:47:02.290" endtime="20230717 19:47:02.302"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:47:02.306" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:47:02.303" endtime="20230717 19:47:02.307"/>
</kw>
<status status="PASS" starttime="20230717 19:46:43.999" endtime="20230717 19:47:02.308"/>
</kw>
<msg timestamp="20230717 19:47:02.308" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:46:43.998" endtime="20230717 19:47:02.310"/>
</kw>
<msg timestamp="20230717 19:47:02.312" level="INFO">${output} = [
  {
    "datanodeDetails": {
      "level": 0,
      "cost": 0,
      "uuid": "87c5eb0b-149e-4683-94a4-bc7d39a11a90",
      "uuidString": "87c5eb0b-149e-4683-94a4-bc7d39a11a90",
      "ipAddress": "...</msg>
<status status="PASS" starttime="20230717 19:46:43.996" endtime="20230717 19:47:02.312"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>datanodeDetails</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:47:02.313" endtime="20230717 19:47:02.313"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>healthState</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:47:02.315" endtime="20230717 19:47:02.318"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>opState</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:47:02.320" endtime="20230717 19:47:02.321"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:46:43.994" endtime="20230717 19:47:02.323"/>
</test>
<doc>Test ozone admin datanode command</doc>
<status status="PASS" starttime="20230717 19:45:29.520" endtime="20230717 19:47:02.325"/>
</suite>
<suite id="s1-s10-s4" name="Pipeline" source="/opt/hadoop/smoketest/admincli/pipeline.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:47:02.361" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:47:02.368" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:47:02.368" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20230717 19:47:02.356" endtime="20230717 19:47:02.369"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:47:02.372" level="INFO">s3g</msg>
<status status="PASS" starttime="20230717 19:47:02.371" endtime="20230717 19:47:02.372"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:47:02.373" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:47:02.372" endtime="20230717 19:47:02.373"/>
</kw>
<status status="PASS" starttime="20230717 19:47:02.354" endtime="20230717 19:47:02.374"/>
</kw>
<msg timestamp="20230717 19:47:02.374" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:47:02.354" endtime="20230717 19:47:02.374"/>
</kw>
<msg timestamp="20230717 19:47:02.375" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20230717 19:47:02.353" endtime="20230717 19:47:02.375"/>
</kw>
<msg timestamp="20230717 19:47:02.376" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230717 19:47:02.352" endtime="20230717 19:47:02.376"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230717 19:47:02.377" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230717 19:47:02.376" endtime="20230717 19:47:02.378"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:47:02.398" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:47:02.459" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:47:02.459" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:47:02.392" endtime="20230717 19:47:02.459"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:47:02.460" level="INFO"/>
<status status="PASS" starttime="20230717 19:47:02.459" endtime="20230717 19:47:02.460"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:47:02.461" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:47:02.460" endtime="20230717 19:47:02.461"/>
</kw>
<status status="PASS" starttime="20230717 19:47:02.391" endtime="20230717 19:47:02.461"/>
</kw>
<msg timestamp="20230717 19:47:02.461" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:47:02.389" endtime="20230717 19:47:02.461"/>
</kw>
<status status="PASS" starttime="20230717 19:47:02.388" endtime="20230717 19:47:02.463"/>
</kw>
<status status="PASS" starttime="20230717 19:47:02.379" endtime="20230717 19:47:02.463"/>
</kw>
<status status="PASS" starttime="20230717 19:47:02.352" endtime="20230717 19:47:02.463"/>
</kw>
<status status="PASS" starttime="20230717 19:47:02.351" endtime="20230717 19:47:02.463"/>
</kw>
<test id="s1-s10-s4-t1" name="Create pipeline" line="28">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline create</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:47:02.475" level="INFO">Running command 'ozone admin pipeline create 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:47:19.416" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:47:19.416" level="INFO">${output} = PipelineID=78ce86f1-cb2d-485d-aa35-44e9d2e1d5c7 is created. Pipeline[ Id: 78ce86f1-cb2d-485d-aa35-44e9d2e1d5c7, Nodes: e9096b01-e48e-4ceb-b568-1d22ceed6cac(ozonesecure-ha_datanode1_1.ozonesecure-ha_oz...</msg>
<status status="PASS" starttime="20230717 19:47:02.468" endtime="20230717 19:47:19.416"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:47:19.419" level="INFO">PipelineID=78ce86f1-cb2d-485d-aa35-44e9d2e1d5c7 is created. Pipeline[ Id: 78ce86f1-cb2d-485d-aa35-44e9d2e1d5c7, Nodes: e9096b01-e48e-4ceb-b568-1d22ceed6cac(ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net/172.25.0.102), ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2023-07-17T19:47:18.172Z[UTC]]</msg>
<status status="PASS" starttime="20230717 19:47:19.418" endtime="20230717 19:47:19.419"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:47:19.420" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:47:19.419" endtime="20230717 19:47:19.420"/>
</kw>
<status status="PASS" starttime="20230717 19:47:02.468" endtime="20230717 19:47:19.420"/>
</kw>
<msg timestamp="20230717 19:47:19.420" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:47:02.467" endtime="20230717 19:47:19.421"/>
</kw>
<msg timestamp="20230717 19:47:19.421" level="INFO">${output} = PipelineID=78ce86f1-cb2d-485d-aa35-44e9d2e1d5c7 is created. Pipeline[ Id: 78ce86f1-cb2d-485d-aa35-44e9d2e1d5c7, Nodes: e9096b01-e48e-4ceb-b568-1d22ceed6cac(ozonesecure-ha_datanode1_1.ozonesecure-ha_oz...</msg>
<status status="PASS" starttime="20230717 19:47:02.467" endtime="20230717 19:47:19.421"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>is created.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:47:19.421" endtime="20230717 19:47:19.422"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>STANDALONE/ONE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:47:19.422" endtime="20230717 19:47:19.423"/>
</kw>
<kw name="Execute" library="os">
<var>${pipeline}</var>
<arg>echo "${output}" | grep 'is created' | cut -f1 -d' ' | cut -f2 -d'='</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:47:19.432" level="INFO">Running command 'echo "PipelineID=78ce86f1-cb2d-485d-aa35-44e9d2e1d5c7 is created. Pipeline[ Id: 78ce86f1-cb2d-485d-aa35-44e9d2e1d5c7, Nodes: e9096b01-e48e-4ceb-b568-1d22ceed6cac(ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net/172.25.0.102), ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2023-07-17T19:47:18.172Z[UTC]]" | grep 'is created' | cut -f1 -d' ' | cut -f2 -d'=' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:47:19.441" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:47:19.441" level="INFO">${output} = 78ce86f1-cb2d-485d-aa35-44e9d2e1d5c7</msg>
<status status="PASS" starttime="20230717 19:47:19.427" endtime="20230717 19:47:19.441"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:47:19.455" level="INFO">78ce86f1-cb2d-485d-aa35-44e9d2e1d5c7</msg>
<status status="PASS" starttime="20230717 19:47:19.446" endtime="20230717 19:47:19.455"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:47:19.458" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:47:19.456" endtime="20230717 19:47:19.458"/>
</kw>
<status status="PASS" starttime="20230717 19:47:19.425" endtime="20230717 19:47:19.459"/>
</kw>
<msg timestamp="20230717 19:47:19.460" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:47:19.425" endtime="20230717 19:47:19.460"/>
</kw>
<msg timestamp="20230717 19:47:19.460" level="INFO">${pipeline} = 78ce86f1-cb2d-485d-aa35-44e9d2e1d5c7</msg>
<status status="PASS" starttime="20230717 19:47:19.423" endtime="20230717 19:47:19.460"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PIPELINE}</arg>
<arg>${pipeline}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230717 19:47:19.461" level="INFO">${PIPELINE} = 78ce86f1-cb2d-485d-aa35-44e9d2e1d5c7</msg>
<status status="PASS" starttime="20230717 19:47:19.461" endtime="20230717 19:47:19.462"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:47:02.464" endtime="20230717 19:47:19.462"/>
</test>
<test id="s1-s10-s4-t2" name="List pipelines" line="35">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:47:19.474" level="INFO">Running command 'ozone admin pipeline list 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:47:37.064" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:47:37.064" level="INFO">${output} = Pipeline[ Id: 7adffc2c-9e94-4914-8b59-50fe3fac600a, Nodes: cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe(ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net/172.25.0.104), ReplicationConfig: RATIS/ONE, State:O...</msg>
<status status="PASS" starttime="20230717 19:47:19.468" endtime="20230717 19:47:37.064"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:47:37.067" level="INFO">Pipeline[ Id: 7adffc2c-9e94-4914-8b59-50fe3fac600a, Nodes: cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe(ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net/172.25.0.104), ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe, CreationTimestamp2023-07-17T18:43:08.888Z[UTC]]
Pipeline[ Id: 78ce86f1-cb2d-485d-aa35-44e9d2e1d5c7, Nodes: e9096b01-e48e-4ceb-b568-1d22ceed6cac(ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net/172.25.0.102), ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2023-07-17T19:47:18.172Z[UTC]]
Pipeline[ Id: 80e0342c-f4f7-4e2e-a6ae-99a56bac1e64, Nodes: cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe(ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net/172.25.0.104), ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2023-07-17T19:41:28.703Z[UTC]]
Pipeline[ Id: 35a72a85-c521-46ce-b844-af6de2037f1e, Nodes: e9096b01-e48e-4ceb-b568-1d22ceed6cac(ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net/172.25.0.102), ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:e9096b01-e48e-4ceb-b568-1d22ceed6cac, CreationTimestamp2023-07-17T18:43:07.051Z[UTC]]
Pipeline[ Id: d53df065-c93c-4ba4-951d-7ce4c3578383, Nodes: 87c5eb0b-149e-4683-94a4-bc7d39a11a90(ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/172.25.0.103), ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:87c5eb0b-149e-4683-94a4-bc7d39a11a90, CreationTimestamp2023-07-17T18:43:10.355Z[UTC]]
Pipeline[ Id: 4434309e-20b3-4896-aea8-56dfc449007c, Nodes: 87c5eb0b-149e-4683-94a4-bc7d39a11a90(ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/172.25.0.103)e9096b01-e48e-4ceb-b568-1d22ceed6cac(ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net/172.25.0.102)cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe(ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net/172.25.0.104), ReplicationConfig: RATIS/THREE, State:OPEN, leaderId:e9096b01-e48e-4ceb-b568-1d22ceed6cac, CreationTimestamp2023-07-17T18:43:10.566Z[UTC]]
Pipeline[ Id: dccb59df-d6ae-4974-bb3a-70d0b20ec655, Nodes: cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe(ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net/172.25.0.104)87c5eb0b-149e-4683-94a4-bc7d39a11a90(ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/172.25.0.103)e9096b01-e48e-4ceb-b568-1d22ceed6cac(ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net/172.25.0.102), ReplicationConfig: RATIS/THREE, State:OPEN, leaderId:cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe, CreationTimestamp2023-07-17T18:43:10.518Z[UTC]]</msg>
<status status="PASS" starttime="20230717 19:47:37.065" endtime="20230717 19:47:37.067"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:47:37.068" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:47:37.068" endtime="20230717 19:47:37.069"/>
</kw>
<status status="PASS" starttime="20230717 19:47:19.468" endtime="20230717 19:47:37.069"/>
</kw>
<msg timestamp="20230717 19:47:37.069" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:47:19.467" endtime="20230717 19:47:37.069"/>
</kw>
<msg timestamp="20230717 19:47:37.070" level="INFO">${output} = Pipeline[ Id: 7adffc2c-9e94-4914-8b59-50fe3fac600a, Nodes: cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe(ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net/172.25.0.104), ReplicationConfig: RATIS/ONE, State:O...</msg>
<status status="PASS" starttime="20230717 19:47:19.466" endtime="20230717 19:47:37.070"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>STANDALONE/ONE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:47:37.070" endtime="20230717 19:47:37.071"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:47:19.465" endtime="20230717 19:47:37.071"/>
</test>
<test id="s1-s10-s4-t3" name="List pipelines with explicit host" line="39">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline list --scm ${SCM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:47:37.083" level="INFO">Running command 'ozone admin pipeline list --scm scm1.org 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:47:54.486" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:47:54.486" level="INFO">${output} = Pipeline[ Id: 7adffc2c-9e94-4914-8b59-50fe3fac600a, Nodes: cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe(ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net/172.25.0.104), ReplicationConfig: RATIS/ONE, State:O...</msg>
<status status="PASS" starttime="20230717 19:47:37.079" endtime="20230717 19:47:54.486"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:47:54.488" level="INFO">Pipeline[ Id: 7adffc2c-9e94-4914-8b59-50fe3fac600a, Nodes: cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe(ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net/172.25.0.104), ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe, CreationTimestamp2023-07-17T18:43:08.888Z[UTC]]
Pipeline[ Id: 78ce86f1-cb2d-485d-aa35-44e9d2e1d5c7, Nodes: e9096b01-e48e-4ceb-b568-1d22ceed6cac(ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net/172.25.0.102), ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2023-07-17T19:47:18.172Z[UTC]]
Pipeline[ Id: 80e0342c-f4f7-4e2e-a6ae-99a56bac1e64, Nodes: cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe(ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net/172.25.0.104), ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2023-07-17T19:41:28.703Z[UTC]]
Pipeline[ Id: 35a72a85-c521-46ce-b844-af6de2037f1e, Nodes: e9096b01-e48e-4ceb-b568-1d22ceed6cac(ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net/172.25.0.102), ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:e9096b01-e48e-4ceb-b568-1d22ceed6cac, CreationTimestamp2023-07-17T18:43:07.051Z[UTC]]
Pipeline[ Id: d53df065-c93c-4ba4-951d-7ce4c3578383, Nodes: 87c5eb0b-149e-4683-94a4-bc7d39a11a90(ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/172.25.0.103), ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:87c5eb0b-149e-4683-94a4-bc7d39a11a90, CreationTimestamp2023-07-17T18:43:10.355Z[UTC]]
Pipeline[ Id: 4434309e-20b3-4896-aea8-56dfc449007c, Nodes: 87c5eb0b-149e-4683-94a4-bc7d39a11a90(ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/172.25.0.103)e9096b01-e48e-4ceb-b568-1d22ceed6cac(ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net/172.25.0.102)cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe(ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net/172.25.0.104), ReplicationConfig: RATIS/THREE, State:OPEN, leaderId:e9096b01-e48e-4ceb-b568-1d22ceed6cac, CreationTimestamp2023-07-17T18:43:10.566Z[UTC]]
Pipeline[ Id: dccb59df-d6ae-4974-bb3a-70d0b20ec655, Nodes: cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe(ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net/172.25.0.104)87c5eb0b-149e-4683-94a4-bc7d39a11a90(ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/172.25.0.103)e9096b01-e48e-4ceb-b568-1d22ceed6cac(ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net/172.25.0.102), ReplicationConfig: RATIS/THREE, State:OPEN, leaderId:cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe, CreationTimestamp2023-07-17T18:43:10.518Z[UTC]]</msg>
<status status="PASS" starttime="20230717 19:47:54.487" endtime="20230717 19:47:54.488"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:47:54.489" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:47:54.488" endtime="20230717 19:47:54.489"/>
</kw>
<status status="PASS" starttime="20230717 19:47:37.079" endtime="20230717 19:47:54.489"/>
</kw>
<msg timestamp="20230717 19:47:54.489" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:47:37.078" endtime="20230717 19:47:54.490"/>
</kw>
<msg timestamp="20230717 19:47:54.490" level="INFO">${output} = Pipeline[ Id: 7adffc2c-9e94-4914-8b59-50fe3fac600a, Nodes: cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe(ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net/172.25.0.104), ReplicationConfig: RATIS/ONE, State:O...</msg>
<status status="PASS" starttime="20230717 19:47:37.075" endtime="20230717 19:47:54.490"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>STANDALONE/ONE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:47:54.490" endtime="20230717 19:47:54.491"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:47:37.073" endtime="20230717 19:47:54.492"/>
</test>
<test id="s1-s10-s4-t4" name="Deactivate pipeline" line="43">
<kw name="Execute" library="os">
<arg>ozone admin pipeline deactivate "${PIPELINE}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:47:54.502" level="INFO">Running command 'ozone admin pipeline deactivate "78ce86f1-cb2d-485d-aa35-44e9d2e1d5c7" 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:48:10.110" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:48:10.111" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:47:54.499" endtime="20230717 19:48:10.111"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:48:10.113" level="INFO"/>
<status status="PASS" starttime="20230717 19:48:10.111" endtime="20230717 19:48:10.113"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:48:10.114" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:48:10.113" endtime="20230717 19:48:10.114"/>
</kw>
<status status="PASS" starttime="20230717 19:47:54.498" endtime="20230717 19:48:10.114"/>
</kw>
<msg timestamp="20230717 19:48:10.115" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:47:54.496" endtime="20230717 19:48:10.115"/>
</kw>
<status status="PASS" starttime="20230717 19:47:54.495" endtime="20230717 19:48:10.115"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline list | grep "${PIPELINE}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:48:10.123" level="INFO">Running command 'ozone admin pipeline list | grep "78ce86f1-cb2d-485d-aa35-44e9d2e1d5c7" 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:48:26.877" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:48:26.877" level="INFO">${output} = Pipeline[ Id: 78ce86f1-cb2d-485d-aa35-44e9d2e1d5c7, Nodes: e9096b01-e48e-4ceb-b568-1d22ceed6cac(ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net/172.25.0.102), ReplicationConfig: STANDALONE/ONE, St...</msg>
<status status="PASS" starttime="20230717 19:48:10.118" endtime="20230717 19:48:26.877"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:48:26.881" level="INFO">Pipeline[ Id: 78ce86f1-cb2d-485d-aa35-44e9d2e1d5c7, Nodes: e9096b01-e48e-4ceb-b568-1d22ceed6cac(ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net/172.25.0.102), ReplicationConfig: STANDALONE/ONE, State:DORMANT, leaderId:, CreationTimestamp2023-07-17T19:47:18.172Z[UTC]]</msg>
<status status="PASS" starttime="20230717 19:48:26.879" endtime="20230717 19:48:26.881"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:48:26.882" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:48:26.881" endtime="20230717 19:48:26.882"/>
</kw>
<status status="PASS" starttime="20230717 19:48:10.117" endtime="20230717 19:48:26.882"/>
</kw>
<msg timestamp="20230717 19:48:26.882" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:48:10.117" endtime="20230717 19:48:26.882"/>
</kw>
<msg timestamp="20230717 19:48:26.884" level="INFO">${output} = Pipeline[ Id: 78ce86f1-cb2d-485d-aa35-44e9d2e1d5c7, Nodes: e9096b01-e48e-4ceb-b568-1d22ceed6cac(ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net/172.25.0.102), ReplicationConfig: STANDALONE/ONE, St...</msg>
<status status="PASS" starttime="20230717 19:48:10.116" endtime="20230717 19:48:26.884"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>DORMANT</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:48:26.884" endtime="20230717 19:48:26.884"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:47:54.494" endtime="20230717 19:48:26.885"/>
</test>
<test id="s1-s10-s4-t5" name="Activate pipeline" line="48">
<kw name="Execute" library="os">
<arg>ozone admin pipeline activate "${PIPELINE}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:48:26.906" level="INFO">Running command 'ozone admin pipeline activate "78ce86f1-cb2d-485d-aa35-44e9d2e1d5c7" 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:48:43.226" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:48:43.226" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:48:26.894" endtime="20230717 19:48:43.226"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:48:43.232" level="INFO"/>
<status status="PASS" starttime="20230717 19:48:43.229" endtime="20230717 19:48:43.232"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:48:43.298" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:48:43.232" endtime="20230717 19:48:43.299"/>
</kw>
<status status="PASS" starttime="20230717 19:48:26.892" endtime="20230717 19:48:43.299"/>
</kw>
<msg timestamp="20230717 19:48:43.299" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:48:26.891" endtime="20230717 19:48:43.299"/>
</kw>
<status status="PASS" starttime="20230717 19:48:26.890" endtime="20230717 19:48:43.302"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline list | grep "${PIPELINE}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:48:43.314" level="INFO">Running command 'ozone admin pipeline list | grep "78ce86f1-cb2d-485d-aa35-44e9d2e1d5c7" 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:49:00.061" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:49:00.061" level="INFO">${output} = Pipeline[ Id: 78ce86f1-cb2d-485d-aa35-44e9d2e1d5c7, Nodes: e9096b01-e48e-4ceb-b568-1d22ceed6cac(ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net/172.25.0.102), ReplicationConfig: STANDALONE/ONE, St...</msg>
<status status="PASS" starttime="20230717 19:48:43.306" endtime="20230717 19:49:00.062"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:49:00.070" level="INFO">Pipeline[ Id: 78ce86f1-cb2d-485d-aa35-44e9d2e1d5c7, Nodes: e9096b01-e48e-4ceb-b568-1d22ceed6cac(ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net/172.25.0.102), ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2023-07-17T19:47:18.172Z[UTC]]</msg>
<status status="PASS" starttime="20230717 19:49:00.062" endtime="20230717 19:49:00.070"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:49:00.074" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:49:00.070" endtime="20230717 19:49:00.074"/>
</kw>
<status status="PASS" starttime="20230717 19:48:43.304" endtime="20230717 19:49:00.074"/>
</kw>
<msg timestamp="20230717 19:49:00.075" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:48:43.304" endtime="20230717 19:49:00.075"/>
</kw>
<msg timestamp="20230717 19:49:00.075" level="INFO">${output} = Pipeline[ Id: 78ce86f1-cb2d-485d-aa35-44e9d2e1d5c7, Nodes: e9096b01-e48e-4ceb-b568-1d22ceed6cac(ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net/172.25.0.102), ReplicationConfig: STANDALONE/ONE, St...</msg>
<status status="PASS" starttime="20230717 19:48:43.302" endtime="20230717 19:49:00.075"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>OPEN</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:49:00.075" endtime="20230717 19:49:00.076"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:48:26.885" endtime="20230717 19:49:00.079"/>
</test>
<test id="s1-s10-s4-t6" name="Close pipeline" line="53">
<kw name="Execute" library="os">
<arg>ozone admin pipeline close "${PIPELINE}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:49:00.100" level="INFO">Running command 'ozone admin pipeline close "78ce86f1-cb2d-485d-aa35-44e9d2e1d5c7" 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:49:16.249" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:49:16.249" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:49:00.089" endtime="20230717 19:49:16.250"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:49:16.252" level="INFO"/>
<status status="PASS" starttime="20230717 19:49:16.250" endtime="20230717 19:49:16.252"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:49:16.253" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:49:16.252" endtime="20230717 19:49:16.253"/>
</kw>
<status status="PASS" starttime="20230717 19:49:00.088" endtime="20230717 19:49:16.253"/>
</kw>
<msg timestamp="20230717 19:49:16.253" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:49:00.088" endtime="20230717 19:49:16.256"/>
</kw>
<status status="PASS" starttime="20230717 19:49:00.085" endtime="20230717 19:49:16.256"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:49:16.272" level="INFO">Running command 'ozone admin pipeline list 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:49:33.552" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:49:33.552" level="INFO">${output} = Pipeline[ Id: 7adffc2c-9e94-4914-8b59-50fe3fac600a, Nodes: cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe(ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net/172.25.0.104), ReplicationConfig: RATIS/ONE, State:O...</msg>
<status status="PASS" starttime="20230717 19:49:16.263" endtime="20230717 19:49:33.552"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:49:33.554" level="INFO">Pipeline[ Id: 7adffc2c-9e94-4914-8b59-50fe3fac600a, Nodes: cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe(ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net/172.25.0.104), ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe, CreationTimestamp2023-07-17T18:43:08.888Z[UTC]]
Pipeline[ Id: 78ce86f1-cb2d-485d-aa35-44e9d2e1d5c7, Nodes: e9096b01-e48e-4ceb-b568-1d22ceed6cac(ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net/172.25.0.102), ReplicationConfig: STANDALONE/ONE, State:CLOSED, leaderId:, CreationTimestamp2023-07-17T19:47:18.172Z[UTC]]
Pipeline[ Id: 80e0342c-f4f7-4e2e-a6ae-99a56bac1e64, Nodes: cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe(ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net/172.25.0.104), ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2023-07-17T19:41:28.703Z[UTC]]
Pipeline[ Id: 35a72a85-c521-46ce-b844-af6de2037f1e, Nodes: e9096b01-e48e-4ceb-b568-1d22ceed6cac(ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net/172.25.0.102), ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:e9096b01-e48e-4ceb-b568-1d22ceed6cac, CreationTimestamp2023-07-17T18:43:07.051Z[UTC]]
Pipeline[ Id: d53df065-c93c-4ba4-951d-7ce4c3578383, Nodes: 87c5eb0b-149e-4683-94a4-bc7d39a11a90(ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/172.25.0.103), ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:87c5eb0b-149e-4683-94a4-bc7d39a11a90, CreationTimestamp2023-07-17T18:43:10.355Z[UTC]]
Pipeline[ Id: 4434309e-20b3-4896-aea8-56dfc449007c, Nodes: 87c5eb0b-149e-4683-94a4-bc7d39a11a90(ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/172.25.0.103)e9096b01-e48e-4ceb-b568-1d22ceed6cac(ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net/172.25.0.102)cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe(ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net/172.25.0.104), ReplicationConfig: RATIS/THREE, State:OPEN, leaderId:e9096b01-e48e-4ceb-b568-1d22ceed6cac, CreationTimestamp2023-07-17T18:43:10.566Z[UTC]]
Pipeline[ Id: dccb59df-d6ae-4974-bb3a-70d0b20ec655, Nodes: cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe(ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net/172.25.0.104)87c5eb0b-149e-4683-94a4-bc7d39a11a90(ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/172.25.0.103)e9096b01-e48e-4ceb-b568-1d22ceed6cac(ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net/172.25.0.102), ReplicationConfig: RATIS/THREE, State:OPEN, leaderId:cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe, CreationTimestamp2023-07-17T18:43:10.518Z[UTC]]</msg>
<status status="PASS" starttime="20230717 19:49:33.553" endtime="20230717 19:49:33.555"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:49:33.556" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:49:33.555" endtime="20230717 19:49:33.556"/>
</kw>
<status status="PASS" starttime="20230717 19:49:16.260" endtime="20230717 19:49:33.557"/>
</kw>
<msg timestamp="20230717 19:49:33.557" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:49:16.259" endtime="20230717 19:49:33.557"/>
</kw>
<msg timestamp="20230717 19:49:33.557" level="INFO">${output} = Pipeline[ Id: 7adffc2c-9e94-4914-8b59-50fe3fac600a, Nodes: cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe(ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net/172.25.0.104), ReplicationConfig: RATIS/ONE, State:O...</msg>
<status status="PASS" starttime="20230717 19:49:16.258" endtime="20230717 19:49:33.557"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${PIPELINE}' not in '''${output}'''</arg>
<arg>Pipeline already scrubbed</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230717 19:49:33.558" endtime="20230717 19:49:33.558"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${output}</arg>
<arg>${PIPELINE}.*CLOSED</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230717 19:49:33.559" endtime="20230717 19:49:33.561"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:49:00.080" endtime="20230717 19:49:33.561"/>
</test>
<test id="s1-s10-s4-t7" name="Incomplete command" line="59">
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>ozone admin pipeline</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:49:33.574" level="INFO">Running command 'ozone admin pipeline 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:49:45.003" level="INFO">${rc} = 255</msg>
<msg timestamp="20230717 19:49:45.003" level="INFO">${output} = Incomplete command
Usage: ozone admin pipeline [-hV] [COMMAND]
Pipeline specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Com...</msg>
<status status="PASS" starttime="20230717 19:49:33.570" endtime="20230717 19:49:45.003"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:49:45.005" level="INFO">Incomplete command
Usage: ozone admin pipeline [-hV] [COMMAND]
Pipeline specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Commands:
  list        List all active pipelines
  activate    Activates the given Pipeline
  deactivate  Deactivates the given Pipeline
  create      create pipeline
  close       Close pipeline</msg>
<status status="PASS" starttime="20230717 19:49:45.004" endtime="20230717 19:49:45.005"/>
</kw>
<msg timestamp="20230717 19:49:45.005" level="INFO">${output} = Incomplete command
Usage: ozone admin pipeline [-hV] [COMMAND]
Pipeline specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Com...</msg>
<status status="PASS" starttime="20230717 19:49:33.569" endtime="20230717 19:49:45.005"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Incomplete command</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:49:45.006" endtime="20230717 19:49:45.006"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>close</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:49:45.007" endtime="20230717 19:49:45.007"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>create</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:49:45.007" endtime="20230717 19:49:45.008"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>deactivate</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:49:45.008" endtime="20230717 19:49:45.008"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>list</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:49:45.009" endtime="20230717 19:49:45.010"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:49:33.564" endtime="20230717 19:49:45.010"/>
</test>
<doc>Test ozone admin pipeline command</doc>
<status status="PASS" starttime="20230717 19:47:02.333" endtime="20230717 19:49:45.013"/>
</suite>
<suite id="s1-s10-s5" name="Replicationmanager" source="/opt/hadoop/smoketest/admincli/replicationmanager.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:49:45.058" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:49:45.069" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:49:45.069" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20230717 19:49:45.053" endtime="20230717 19:49:45.069"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:49:45.071" level="INFO">s3g</msg>
<status status="PASS" starttime="20230717 19:49:45.070" endtime="20230717 19:49:45.071"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:49:45.072" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:49:45.071" endtime="20230717 19:49:45.072"/>
</kw>
<status status="PASS" starttime="20230717 19:49:45.051" endtime="20230717 19:49:45.073"/>
</kw>
<msg timestamp="20230717 19:49:45.073" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:49:45.049" endtime="20230717 19:49:45.073"/>
</kw>
<msg timestamp="20230717 19:49:45.073" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20230717 19:49:45.048" endtime="20230717 19:49:45.074"/>
</kw>
<msg timestamp="20230717 19:49:45.075" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230717 19:49:45.048" endtime="20230717 19:49:45.075"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230717 19:49:45.076" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230717 19:49:45.075" endtime="20230717 19:49:45.076"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:49:45.105" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:49:45.204" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:49:45.204" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:49:45.092" endtime="20230717 19:49:45.204"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:49:45.206" level="INFO"/>
<status status="PASS" starttime="20230717 19:49:45.205" endtime="20230717 19:49:45.206"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:49:45.207" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:49:45.207" endtime="20230717 19:49:45.207"/>
</kw>
<status status="PASS" starttime="20230717 19:49:45.085" endtime="20230717 19:49:45.207"/>
</kw>
<msg timestamp="20230717 19:49:45.207" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:49:45.085" endtime="20230717 19:49:45.208"/>
</kw>
<status status="PASS" starttime="20230717 19:49:45.077" endtime="20230717 19:49:45.208"/>
</kw>
<status status="PASS" starttime="20230717 19:49:45.076" endtime="20230717 19:49:45.208"/>
</kw>
<status status="PASS" starttime="20230717 19:49:45.045" endtime="20230717 19:49:45.208"/>
</kw>
<status status="PASS" starttime="20230717 19:49:45.044" endtime="20230717 19:49:45.208"/>
</kw>
<test id="s1-s10-s5-t1" name="Check replicationmanager" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin replicationmanager status</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:49:45.220" level="INFO">Running command 'ozone admin replicationmanager status 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:50:00.959" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:50:00.960" level="INFO">${output} = ReplicationManager is Running.</msg>
<status status="PASS" starttime="20230717 19:49:45.214" endtime="20230717 19:50:00.960"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:50:00.973" level="INFO">ReplicationManager is Running.</msg>
<status status="PASS" starttime="20230717 19:50:00.972" endtime="20230717 19:50:00.974"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:50:00.975" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:50:00.974" endtime="20230717 19:50:00.975"/>
</kw>
<status status="PASS" starttime="20230717 19:49:45.213" endtime="20230717 19:50:00.976"/>
</kw>
<msg timestamp="20230717 19:50:00.976" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:49:45.213" endtime="20230717 19:50:00.976"/>
</kw>
<msg timestamp="20230717 19:50:00.977" level="INFO">${output} = ReplicationManager is Running.</msg>
<status status="PASS" starttime="20230717 19:49:45.211" endtime="20230717 19:50:00.977"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>ReplicationManager</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:50:00.977" endtime="20230717 19:50:00.978"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Running</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:50:00.978" endtime="20230717 19:50:00.978"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:49:45.209" endtime="20230717 19:50:00.979"/>
</test>
<test id="s1-s10-s5-t2" name="Check replicationmanager with explicit host" line="32">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin replicationmanager status --scm ${SCM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:50:00.992" level="INFO">Running command 'ozone admin replicationmanager status --scm scm1.org 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:50:16.505" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:50:16.505" level="INFO">${output} = ReplicationManager is Running.</msg>
<status status="PASS" starttime="20230717 19:50:00.986" endtime="20230717 19:50:16.505"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:50:16.507" level="INFO">ReplicationManager is Running.</msg>
<status status="PASS" starttime="20230717 19:50:16.506" endtime="20230717 19:50:16.508"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:50:16.512" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:50:16.508" endtime="20230717 19:50:16.512"/>
</kw>
<status status="PASS" starttime="20230717 19:50:00.986" endtime="20230717 19:50:16.513"/>
</kw>
<msg timestamp="20230717 19:50:16.513" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:50:00.985" endtime="20230717 19:50:16.513"/>
</kw>
<msg timestamp="20230717 19:50:16.518" level="INFO">${output} = ReplicationManager is Running.</msg>
<status status="PASS" starttime="20230717 19:50:00.984" endtime="20230717 19:50:16.518"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>ReplicationManager</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:50:16.518" endtime="20230717 19:50:16.522"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Running</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:50:16.522" endtime="20230717 19:50:16.523"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:50:00.982" endtime="20230717 19:50:16.526"/>
</test>
<test id="s1-s10-s5-t3" name="Stop replicationmanager" line="37">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin replicationmanager stop</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:50:16.551" level="INFO">Running command 'ozone admin replicationmanager stop 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:50:36.850" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:50:36.850" level="INFO">${output} = Stopping ReplicationManager...
Requested SCM to stop ReplicationManager, it might take sometime for the ReplicationManager to stop.</msg>
<status status="PASS" starttime="20230717 19:50:16.544" endtime="20230717 19:50:36.851"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:50:36.852" level="INFO">Stopping ReplicationManager...
Requested SCM to stop ReplicationManager, it might take sometime for the ReplicationManager to stop.</msg>
<status status="PASS" starttime="20230717 19:50:36.851" endtime="20230717 19:50:36.853"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:50:36.853" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:50:36.853" endtime="20230717 19:50:36.854"/>
</kw>
<status status="PASS" starttime="20230717 19:50:16.541" endtime="20230717 19:50:36.854"/>
</kw>
<msg timestamp="20230717 19:50:36.854" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:50:16.540" endtime="20230717 19:50:36.854"/>
</kw>
<msg timestamp="20230717 19:50:36.854" level="INFO">${output} = Stopping ReplicationManager...
Requested SCM to stop ReplicationManager, it might take sometime for the ReplicationManager to stop.</msg>
<status status="PASS" starttime="20230717 19:50:16.531" endtime="20230717 19:50:36.854"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Stopping ReplicationManager</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:50:36.855" endtime="20230717 19:50:36.855"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>30sec</arg>
<arg>5sec</arg>
<arg>Execute</arg>
<arg>ozone admin replicationmanager status | grep -q 'is Not Running'</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>ozone admin replicationmanager status | grep -q 'is Not Running'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:50:36.862" level="INFO">Running command 'ozone admin replicationmanager status | grep -q 'is Not Running' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:50:50.333" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:50:50.334" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:50:36.858" endtime="20230717 19:50:50.334"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:50:50.338" level="INFO"/>
<status status="PASS" starttime="20230717 19:50:50.336" endtime="20230717 19:50:50.339"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:50:50.340" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:50:50.339" endtime="20230717 19:50:50.341"/>
</kw>
<status status="PASS" starttime="20230717 19:50:36.857" endtime="20230717 19:50:50.341"/>
</kw>
<msg timestamp="20230717 19:50:50.341" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:50:36.857" endtime="20230717 19:50:50.341"/>
</kw>
<status status="PASS" starttime="20230717 19:50:36.856" endtime="20230717 19:50:50.341"/>
</kw>
<status status="PASS" starttime="20230717 19:50:36.855" endtime="20230717 19:50:50.342"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:50:16.529" endtime="20230717 19:50:50.343"/>
</test>
<test id="s1-s10-s5-t4" name="Start replicationmanager" line="42">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin replicationmanager start</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:50:50.359" level="INFO">Running command 'ozone admin replicationmanager start 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:51:06.162" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:51:06.162" level="INFO">${output} = Starting ReplicationManager...</msg>
<status status="PASS" starttime="20230717 19:50:50.349" endtime="20230717 19:51:06.162"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:51:06.163" level="INFO">Starting ReplicationManager...</msg>
<status status="PASS" starttime="20230717 19:51:06.163" endtime="20230717 19:51:06.163"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:51:06.165" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:51:06.164" endtime="20230717 19:51:06.165"/>
</kw>
<status status="PASS" starttime="20230717 19:50:50.348" endtime="20230717 19:51:06.165"/>
</kw>
<msg timestamp="20230717 19:51:06.165" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:50:50.348" endtime="20230717 19:51:06.165"/>
</kw>
<msg timestamp="20230717 19:51:06.166" level="INFO">${output} = Starting ReplicationManager...</msg>
<status status="PASS" starttime="20230717 19:50:50.347" endtime="20230717 19:51:06.166"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Starting ReplicationManager</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:51:06.166" endtime="20230717 19:51:06.166"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>30sec</arg>
<arg>5sec</arg>
<arg>Execute</arg>
<arg>ozone admin replicationmanager status | grep -q 'is Running'</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>ozone admin replicationmanager status | grep -q 'is Running'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:51:06.182" level="INFO">Running command 'ozone admin replicationmanager status | grep -q 'is Running' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:51:21.855" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:51:21.855" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:51:06.175" endtime="20230717 19:51:21.855"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:51:21.857" level="INFO"/>
<status status="PASS" starttime="20230717 19:51:21.856" endtime="20230717 19:51:21.857"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:51:21.858" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:51:21.858" endtime="20230717 19:51:21.859"/>
</kw>
<status status="PASS" starttime="20230717 19:51:06.175" endtime="20230717 19:51:21.859"/>
</kw>
<msg timestamp="20230717 19:51:21.859" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:51:06.168" endtime="20230717 19:51:21.859"/>
</kw>
<status status="PASS" starttime="20230717 19:51:06.167" endtime="20230717 19:51:21.860"/>
</kw>
<status status="PASS" starttime="20230717 19:51:06.167" endtime="20230717 19:51:21.860"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:50:50.346" endtime="20230717 19:51:21.860"/>
</test>
<test id="s1-s10-s5-t5" name="Incomplete command" line="47">
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>ozone admin replicationmanager</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:51:21.877" level="INFO">Running command 'ozone admin replicationmanager 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:51:34.775" level="INFO">${rc} = 255</msg>
<msg timestamp="20230717 19:51:34.775" level="INFO">${output} = Incomplete command
Usage: ozone admin replicationmanager [-hV] [COMMAND]
ReplicationManager specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version infor...</msg>
<status status="PASS" starttime="20230717 19:51:21.865" endtime="20230717 19:51:34.775"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:51:34.777" level="INFO">Incomplete command
Usage: ozone admin replicationmanager [-hV] [COMMAND]
ReplicationManager specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Commands:
  start   Start ReplicationManager
  stop    Stop ReplicationManager
  status  Check if ReplicationManager is running or not</msg>
<status status="PASS" starttime="20230717 19:51:34.776" endtime="20230717 19:51:34.778"/>
</kw>
<msg timestamp="20230717 19:51:34.779" level="INFO">${output} = Incomplete command
Usage: ozone admin replicationmanager [-hV] [COMMAND]
ReplicationManager specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version infor...</msg>
<status status="PASS" starttime="20230717 19:51:21.864" endtime="20230717 19:51:34.779"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Incomplete command</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:51:34.779" endtime="20230717 19:51:34.780"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>start</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:51:34.781" endtime="20230717 19:51:34.782"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>stop</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:51:34.782" endtime="20230717 19:51:34.786"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>status</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:51:34.786" endtime="20230717 19:51:34.786"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:51:21.863" endtime="20230717 19:51:34.787"/>
</test>
<doc>Test ozone admin replicationmanager command</doc>
<status status="PASS" starttime="20230717 19:49:45.024" endtime="20230717 19:51:34.788"/>
</suite>
<suite id="s1-s10-s6" name="Safemode" source="/opt/hadoop/smoketest/admincli/safemode.robot">
<test id="s1-s10-s6-t1" name="Check safemode" line="26">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin safemode status</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:51:34.822" level="INFO">Running command 'ozone admin safemode status 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:51:51.803" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:51:51.803" level="INFO">${output} = SCM is out of safe mode.</msg>
<status status="PASS" starttime="20230717 19:51:34.815" endtime="20230717 19:51:51.803"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:51:51.806" level="INFO">SCM is out of safe mode.</msg>
<status status="PASS" starttime="20230717 19:51:51.803" endtime="20230717 19:51:51.806"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:51:51.808" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:51:51.806" endtime="20230717 19:51:51.808"/>
</kw>
<status status="PASS" starttime="20230717 19:51:34.813" endtime="20230717 19:51:51.808"/>
</kw>
<msg timestamp="20230717 19:51:51.808" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:51:34.812" endtime="20230717 19:51:51.811"/>
</kw>
<msg timestamp="20230717 19:51:51.811" level="INFO">${output} = SCM is out of safe mode.</msg>
<status status="PASS" starttime="20230717 19:51:34.811" endtime="20230717 19:51:51.811"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>SCM is out of safe mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:51:51.811" endtime="20230717 19:51:51.813"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:51:34.808" endtime="20230717 19:51:51.813"/>
</test>
<test id="s1-s10-s6-t2" name="Check safemode with explicit host" line="30">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin safemode status --scm ${SCM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:51:51.830" level="INFO">Running command 'ozone admin safemode status --scm scm1.org 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:52:06.386" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:52:06.387" level="INFO">${output} = SCM is out of safe mode.</msg>
<status status="PASS" starttime="20230717 19:51:51.822" endtime="20230717 19:52:06.387"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:52:06.391" level="INFO">SCM is out of safe mode.</msg>
<status status="PASS" starttime="20230717 19:52:06.389" endtime="20230717 19:52:06.391"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:52:06.395" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:52:06.394" endtime="20230717 19:52:06.395"/>
</kw>
<status status="PASS" starttime="20230717 19:51:51.822" endtime="20230717 19:52:06.398"/>
</kw>
<msg timestamp="20230717 19:52:06.398" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:51:51.820" endtime="20230717 19:52:06.398"/>
</kw>
<msg timestamp="20230717 19:52:06.399" level="INFO">${output} = SCM is out of safe mode.</msg>
<status status="PASS" starttime="20230717 19:51:51.819" endtime="20230717 19:52:06.399"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>SCM is out of safe mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:52:06.400" endtime="20230717 19:52:06.400"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:51:51.816" endtime="20230717 19:52:06.402"/>
</test>
<test id="s1-s10-s6-t3" name="Wait for safemode exit" line="34">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin safemode wait -t 2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:52:06.422" level="INFO">Running command 'ozone admin safemode wait -t 2 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:52:23.398" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:52:23.398" level="INFO">${output} = SCM is out of safe mode.</msg>
<status status="PASS" starttime="20230717 19:52:06.415" endtime="20230717 19:52:23.398"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:52:23.402" level="INFO">SCM is out of safe mode.</msg>
<status status="PASS" starttime="20230717 19:52:23.399" endtime="20230717 19:52:23.402"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:52:23.403" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:52:23.402" endtime="20230717 19:52:23.403"/>
</kw>
<status status="PASS" starttime="20230717 19:52:06.411" endtime="20230717 19:52:23.403"/>
</kw>
<msg timestamp="20230717 19:52:23.404" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:52:06.411" endtime="20230717 19:52:23.404"/>
</kw>
<msg timestamp="20230717 19:52:23.404" level="INFO">${output} = SCM is out of safe mode.</msg>
<status status="PASS" starttime="20230717 19:52:06.408" endtime="20230717 19:52:23.404"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>SCM is out of safe mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:52:23.405" endtime="20230717 19:52:23.406"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:52:06.405" endtime="20230717 19:52:23.406"/>
</test>
<test id="s1-s10-s6-t4" name="Incomplete command" line="38">
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>ozone admin safemode</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:52:23.417" level="INFO">Running command 'ozone admin safemode 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:52:34.954" level="INFO">${rc} = 255</msg>
<msg timestamp="20230717 19:52:34.954" level="INFO">${output} = Incomplete command
Usage: ozone admin safemode [-hV] [COMMAND]
Safe mode specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Co...</msg>
<status status="PASS" starttime="20230717 19:52:23.412" endtime="20230717 19:52:34.955"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:52:34.957" level="INFO">Incomplete command
Usage: ozone admin safemode [-hV] [COMMAND]
Safe mode specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Commands:
  status  Check if SCM is in safe mode
  exit    Force SCM out of safe mode
  wait    Wait until the scm is out from the safe mode.</msg>
<status status="PASS" starttime="20230717 19:52:34.956" endtime="20230717 19:52:34.958"/>
</kw>
<msg timestamp="20230717 19:52:34.958" level="INFO">${output} = Incomplete command
Usage: ozone admin safemode [-hV] [COMMAND]
Safe mode specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Co...</msg>
<status status="PASS" starttime="20230717 19:52:23.410" endtime="20230717 19:52:34.958"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Incomplete command</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:52:34.960" endtime="20230717 19:52:34.961"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>status</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:52:34.961" endtime="20230717 19:52:34.961"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>exit</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:52:34.962" endtime="20230717 19:52:34.962"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>wait</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:52:34.963" endtime="20230717 19:52:34.964"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:52:23.408" endtime="20230717 19:52:34.964"/>
</test>
<doc>Test ozone admin safemode command</doc>
<status status="PASS" starttime="20230717 19:51:34.792" endtime="20230717 19:52:34.967"/>
</suite>
<suite id="s1-s10-s7" name="Scmrole" source="/opt/hadoop/smoketest/admincli/scmrole.robot">
<test id="s1-s10-s7-t1" name="Run scm roles" line="26">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin scm roles</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:52:35.002" level="INFO">Running command 'ozone admin scm roles 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:52:50.064" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:52:50.064" level="INFO">${output} = scm1.org:9894:LEADER:da3b10bc-ec4c-480f-b5d0-63f9c7e74e53:172.25.0.116
scm3.org:9894:FOLLOWER:0cb57506-2706-4c25-9881-ed7ad0f47ea8:172.25.0.118
scm2.org:9894:FOLLOWER:58d8a3f7-6c81-4819-84ff-6aff5b0ce...</msg>
<status status="PASS" starttime="20230717 19:52:34.996" endtime="20230717 19:52:50.064"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:52:50.066" level="INFO">scm1.org:9894:LEADER:da3b10bc-ec4c-480f-b5d0-63f9c7e74e53:172.25.0.116
scm3.org:9894:FOLLOWER:0cb57506-2706-4c25-9881-ed7ad0f47ea8:172.25.0.118
scm2.org:9894:FOLLOWER:58d8a3f7-6c81-4819-84ff-6aff5b0ce812:172.25.0.117</msg>
<status status="PASS" starttime="20230717 19:52:50.065" endtime="20230717 19:52:50.066"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:52:50.068" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:52:50.067" endtime="20230717 19:52:50.068"/>
</kw>
<status status="PASS" starttime="20230717 19:52:34.994" endtime="20230717 19:52:50.068"/>
</kw>
<msg timestamp="20230717 19:52:50.068" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:52:34.993" endtime="20230717 19:52:50.069"/>
</kw>
<msg timestamp="20230717 19:52:50.069" level="INFO">${output} = scm1.org:9894:LEADER:da3b10bc-ec4c-480f-b5d0-63f9c7e74e53:172.25.0.116
scm3.org:9894:FOLLOWER:0cb57506-2706-4c25-9881-ed7ad0f47ea8:172.25.0.118
scm2.org:9894:FOLLOWER:58d8a3f7-6c81-4819-84ff-6aff5b0ce...</msg>
<status status="PASS" starttime="20230717 19:52:34.991" endtime="20230717 19:52:50.069"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${output}</arg>
<arg>[scm:9894(:LEADER|)]</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230717 19:52:50.069" endtime="20230717 19:52:50.071"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:52:34.989" endtime="20230717 19:52:50.071"/>
</test>
<test id="s1-s10-s7-t2" name="List scm roles as JSON" line="30">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin scm roles --json</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:52:50.083" level="INFO">Running command 'ozone admin scm roles --json 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:53:06.439" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:53:06.439" level="INFO">${output} = {
  "scm1.org" : {
    "address" : "scm1.org:9894",
    "raftPeerRole" : "LEADER",
    "ID" : "da3b10bc-ec4c-480f-b5d0-63f9c7e74e53",
    "InetAddress" : "172.25.0.116"
  },
  "scm3.org" : {
    "addr...</msg>
<status status="PASS" starttime="20230717 19:52:50.077" endtime="20230717 19:53:06.439"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:53:06.443" level="INFO">{
  "scm1.org" : {
    "address" : "scm1.org:9894",
    "raftPeerRole" : "LEADER",
    "ID" : "da3b10bc-ec4c-480f-b5d0-63f9c7e74e53",
    "InetAddress" : "172.25.0.116"
  },
  "scm3.org" : {
    "address" : "scm3.org:9894",
    "raftPeerRole" : "FOLLOWER",
    "ID" : "0cb57506-2706-4c25-9881-ed7ad0f47ea8",
    "InetAddress" : "172.25.0.118"
  },
  "scm2.org" : {
    "address" : "scm2.org:9894",
    "raftPeerRole" : "FOLLOWER",
    "ID" : "58d8a3f7-6c81-4819-84ff-6aff5b0ce812",
    "InetAddress" : "172.25.0.117"
  }
}</msg>
<status status="PASS" starttime="20230717 19:53:06.441" endtime="20230717 19:53:06.446"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:53:06.450" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:53:06.447" endtime="20230717 19:53:06.450"/>
</kw>
<status status="PASS" starttime="20230717 19:52:50.076" endtime="20230717 19:53:06.450"/>
</kw>
<msg timestamp="20230717 19:53:06.450" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:52:50.075" endtime="20230717 19:53:06.453"/>
</kw>
<msg timestamp="20230717 19:53:06.453" level="INFO">${output} = {
  "scm1.org" : {
    "address" : "scm1.org:9894",
    "raftPeerRole" : "LEADER",
    "ID" : "da3b10bc-ec4c-480f-b5d0-63f9c7e74e53",
    "InetAddress" : "172.25.0.116"
  },
  "scm3.org" : {
    "addr...</msg>
<status status="PASS" starttime="20230717 19:52:50.074" endtime="20230717 19:53:06.453"/>
</kw>
<kw name="Execute" library="os">
<var>${leader}</var>
<arg>echo '${output}' | jq -r '.[] | select(.raftPeerRole == "LEADER")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:53:06.470" level="INFO">Running command 'echo '{
  "scm1.org" : {
    "address" : "scm1.org:9894",
    "raftPeerRole" : "LEADER",
    "ID" : "da3b10bc-ec4c-480f-b5d0-63f9c7e74e53",
    "InetAddress" : "172.25.0.116"
  },
  "scm3.org" : {
    "address" : "scm3.org:9894",
    "raftPeerRole" : "FOLLOWER",
    "ID" : "0cb57506-2706-4c25-9881-ed7ad0f47ea8",
    "InetAddress" : "172.25.0.118"
  },
  "scm2.org" : {
    "address" : "scm2.org:9894",
    "raftPeerRole" : "FOLLOWER",
    "ID" : "58d8a3f7-6c81-4819-84ff-6aff5b0ce812",
    "InetAddress" : "172.25.0.117"
  }
}' | jq -r '.[] | select(.raftPeerRole == "LEADER")' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:53:06.592" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:53:06.593" level="INFO">${output} = {
  "address": "scm1.org:9894",
  "raftPeerRole": "LEADER",
  "ID": "da3b10bc-ec4c-480f-b5d0-63f9c7e74e53",
  "InetAddress": "172.25.0.116"
}</msg>
<status status="PASS" starttime="20230717 19:53:06.463" endtime="20230717 19:53:06.593"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:53:06.594" level="INFO">{
  "address": "scm1.org:9894",
  "raftPeerRole": "LEADER",
  "ID": "da3b10bc-ec4c-480f-b5d0-63f9c7e74e53",
  "InetAddress": "172.25.0.116"
}</msg>
<status status="PASS" starttime="20230717 19:53:06.593" endtime="20230717 19:53:06.594"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:53:06.599" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:53:06.596" endtime="20230717 19:53:06.602"/>
</kw>
<status status="PASS" starttime="20230717 19:53:06.461" endtime="20230717 19:53:06.602"/>
</kw>
<msg timestamp="20230717 19:53:06.602" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:53:06.459" endtime="20230717 19:53:06.602"/>
</kw>
<msg timestamp="20230717 19:53:06.603" level="INFO">${leader} = {
  "address": "scm1.org:9894",
  "raftPeerRole": "LEADER",
  "ID": "da3b10bc-ec4c-480f-b5d0-63f9c7e74e53",
  "InetAddress": "172.25.0.116"
}</msg>
<status status="PASS" starttime="20230717 19:53:06.454" endtime="20230717 19:53:06.603"/>
</kw>
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${leader}</arg>
<arg>${EMPTY}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="PASS" starttime="20230717 19:53:06.603" endtime="20230717 19:53:06.605"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:52:50.073" endtime="20230717 19:53:06.605"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230717 19:52:34.972" endtime="20230717 19:53:06.608"/>
</suite>
<status status="PASS" starttime="20230717 19:40:34.128" endtime="20230717 19:53:06.618"/>
</suite>
<suite id="s1-s11" name="Om-Leader-Transfer" source="/opt/hadoop/smoketest/omha/om-leader-transfer.robot">
<test id="s1-s11-t1" name="Transfer Leadership for OM" line="49">
<kw name="Get OM Leader Node">
<var>${leaderOM}</var>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om roles --service-id=omservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:53:12.916" level="INFO">Running command 'ozone admin om roles --service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:53:29.920" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:53:29.920" level="INFO">${output} = om3 : FOLLOWER (om3)
om2 : FOLLOWER (om2)
om1 : LEADER (om1)</msg>
<status status="PASS" starttime="20230717 19:53:12.912" endtime="20230717 19:53:29.920"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:53:29.925" level="INFO">om3 : FOLLOWER (om3)
om2 : FOLLOWER (om2)
om1 : LEADER (om1)</msg>
<status status="PASS" starttime="20230717 19:53:29.922" endtime="20230717 19:53:29.925"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:53:29.928" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:53:29.925" endtime="20230717 19:53:29.928"/>
</kw>
<status status="PASS" starttime="20230717 19:53:12.910" endtime="20230717 19:53:29.928"/>
</kw>
<msg timestamp="20230717 19:53:29.929" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:53:12.910" endtime="20230717 19:53:29.929"/>
</kw>
<msg timestamp="20230717 19:53:29.930" level="INFO">${result} = om3 : FOLLOWER (om3)
om2 : FOLLOWER (om2)
om1 : LEADER (om1)</msg>
<status status="PASS" starttime="20230717 19:53:12.909" endtime="20230717 19:53:29.930"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:53:29.932" level="INFO">om3 : FOLLOWER (om3)
om2 : FOLLOWER (om2)
om1 : LEADER (om1)</msg>
<status status="PASS" starttime="20230717 19:53:29.931" endtime="20230717 19:53:29.932"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LEADER</arg>
<arg>1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:53:29.933" endtime="20230717 19:53:29.939"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>FOLLOWER</arg>
<arg>2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:53:29.939" endtime="20230717 19:53:29.942"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${omLine}</var>
<arg>${result}</arg>
<arg>LEADER</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20230717 19:53:29.943" level="INFO">1 out of 3 lines matched</msg>
<msg timestamp="20230717 19:53:29.943" level="INFO">${omLine} = om1 : LEADER (om1)</msg>
<status status="PASS" starttime="20230717 19:53:29.942" endtime="20230717 19:53:29.943"/>
</kw>
<kw name="Split String" library="String">
<var>${split1}</var>
<var>${split2}</var>
<arg>${omLine}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230717 19:53:29.945" level="INFO">${split1} = om1 </msg>
<msg timestamp="20230717 19:53:29.945" level="INFO">${split2} =  LEADER (om1)</msg>
<status status="PASS" starttime="20230717 19:53:29.945" endtime="20230717 19:53:29.946"/>
</kw>
<kw name="Strip String" library="String">
<var>${leaderOM}</var>
<arg>${split1}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230717 19:53:29.947" level="INFO">${leaderOM} = om1</msg>
<status status="PASS" starttime="20230717 19:53:29.946" endtime="20230717 19:53:29.947"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Leader OM: ${leaderOM}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:53:29.948" level="INFO">Leader OM: om1</msg>
<status status="PASS" starttime="20230717 19:53:29.948" endtime="20230717 19:53:29.948"/>
</kw>
<msg timestamp="20230717 19:53:29.952" level="INFO">${leaderOM} = om1</msg>
<status status="PASS" starttime="20230717 19:53:12.908" endtime="20230717 19:53:29.952"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Leader OM: ${leaderOM}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:53:29.953" level="INFO">Leader OM: om1</msg>
<status status="PASS" starttime="20230717 19:53:29.952" endtime="20230717 19:53:29.953"/>
</kw>
<kw name="Get One OM Follower Node">
<var>${followerOM}</var>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om roles --service-id=omservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:53:29.969" level="INFO">Running command 'ozone admin om roles --service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:53:47.770" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:53:47.770" level="INFO">${output} = om3 : FOLLOWER (om3)
om2 : FOLLOWER (om2)
om1 : LEADER (om1)</msg>
<status status="PASS" starttime="20230717 19:53:29.961" endtime="20230717 19:53:47.770"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:53:47.771" level="INFO">om3 : FOLLOWER (om3)
om2 : FOLLOWER (om2)
om1 : LEADER (om1)</msg>
<status status="PASS" starttime="20230717 19:53:47.770" endtime="20230717 19:53:47.771"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:53:47.772" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:53:47.772" endtime="20230717 19:53:47.772"/>
</kw>
<status status="PASS" starttime="20230717 19:53:29.959" endtime="20230717 19:53:47.772"/>
</kw>
<msg timestamp="20230717 19:53:47.772" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:53:29.959" endtime="20230717 19:53:47.774"/>
</kw>
<msg timestamp="20230717 19:53:47.774" level="INFO">${result} = om3 : FOLLOWER (om3)
om2 : FOLLOWER (om2)
om1 : LEADER (om1)</msg>
<status status="PASS" starttime="20230717 19:53:29.957" endtime="20230717 19:53:47.774"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:53:47.777" level="INFO">om3 : FOLLOWER (om3)
om2 : FOLLOWER (om2)
om1 : LEADER (om1)</msg>
<status status="PASS" starttime="20230717 19:53:47.774" endtime="20230717 19:53:47.777"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LEADER</arg>
<arg>1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:53:47.777" endtime="20230717 19:53:47.778"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>FOLLOWER</arg>
<arg>2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:53:47.779" endtime="20230717 19:53:47.781"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${omLines}</var>
<arg>${result}</arg>
<arg>FOLLOWER</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20230717 19:53:47.783" level="INFO">2 out of 3 lines matched</msg>
<msg timestamp="20230717 19:53:47.783" level="INFO">${omLines} = om3 : FOLLOWER (om3)
om2 : FOLLOWER (om2)</msg>
<status status="PASS" starttime="20230717 19:53:47.781" endtime="20230717 19:53:47.783"/>
</kw>
<kw name="Get Line" library="String">
<var>${omLine}</var>
<arg>${omLines}</arg>
<arg>0</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20230717 19:53:47.786" level="INFO">${omLine} = om3 : FOLLOWER (om3)</msg>
<status status="PASS" starttime="20230717 19:53:47.783" endtime="20230717 19:53:47.786"/>
</kw>
<kw name="Split String" library="String">
<var>${split1}</var>
<var>${split2}</var>
<arg>${omLine}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230717 19:53:47.787" level="INFO">${split1} = om3 </msg>
<msg timestamp="20230717 19:53:47.787" level="INFO">${split2} =  FOLLOWER (om3)</msg>
<status status="PASS" starttime="20230717 19:53:47.786" endtime="20230717 19:53:47.787"/>
</kw>
<kw name="Strip String" library="String">
<var>${followerOM}</var>
<arg>${split1}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230717 19:53:47.788" level="INFO">${followerOM} = om3</msg>
<status status="PASS" starttime="20230717 19:53:47.787" endtime="20230717 19:53:47.788"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Follower OM: ${followerOM}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:53:47.789" level="INFO">Follower OM: om3</msg>
<status status="PASS" starttime="20230717 19:53:47.788" endtime="20230717 19:53:47.789"/>
</kw>
<msg timestamp="20230717 19:53:47.791" level="INFO">${followerOM} = om3</msg>
<status status="PASS" starttime="20230717 19:53:29.956" endtime="20230717 19:53:47.793"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Follower OM: ${followerOM}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:53:47.793" level="INFO">Follower OM: om3</msg>
<status status="PASS" starttime="20230717 19:53:47.793" endtime="20230717 19:53:47.793"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om transfer --service-id=omservice -n ${followerOM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:53:47.808" level="INFO">Running command 'ozone admin om transfer --service-id=omservice -n om3 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:54:07.924" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:54:07.924" level="INFO">${output} = Transfer leadership successfully to om3.</msg>
<status status="PASS" starttime="20230717 19:53:47.800" endtime="20230717 19:54:07.924"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:54:07.926" level="INFO">Transfer leadership successfully to om3.</msg>
<status status="PASS" starttime="20230717 19:54:07.925" endtime="20230717 19:54:07.926"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:54:07.927" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:54:07.926" endtime="20230717 19:54:07.927"/>
</kw>
<status status="PASS" starttime="20230717 19:53:47.798" endtime="20230717 19:54:07.928"/>
</kw>
<msg timestamp="20230717 19:54:07.928" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:53:47.798" endtime="20230717 19:54:07.929"/>
</kw>
<msg timestamp="20230717 19:54:07.929" level="INFO">${result} = Transfer leadership successfully to om3.</msg>
<status status="PASS" starttime="20230717 19:53:47.794" endtime="20230717 19:54:07.929"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:54:07.930" level="INFO">Transfer leadership successfully to om3.</msg>
<status status="PASS" starttime="20230717 19:54:07.929" endtime="20230717 19:54:07.930"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Transfer leadership successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:54:07.930" endtime="20230717 19:54:07.931"/>
</kw>
<kw name="Get OM Leader Node">
<var>${newLeaderOM}</var>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om roles --service-id=omservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:54:07.939" level="INFO">Running command 'ozone admin om roles --service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:54:25.651" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:54:25.651" level="INFO">${output} = om1 : FOLLOWER (om1)
om2 : FOLLOWER (om2)
om3 : LEADER (om3)</msg>
<status status="PASS" starttime="20230717 19:54:07.935" endtime="20230717 19:54:25.651"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:54:25.654" level="INFO">om1 : FOLLOWER (om1)
om2 : FOLLOWER (om2)
om3 : LEADER (om3)</msg>
<status status="PASS" starttime="20230717 19:54:25.652" endtime="20230717 19:54:25.654"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:54:25.656" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:54:25.654" endtime="20230717 19:54:25.656"/>
</kw>
<status status="PASS" starttime="20230717 19:54:07.934" endtime="20230717 19:54:25.658"/>
</kw>
<msg timestamp="20230717 19:54:25.658" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:54:07.933" endtime="20230717 19:54:25.659"/>
</kw>
<msg timestamp="20230717 19:54:25.661" level="INFO">${result} = om1 : FOLLOWER (om1)
om2 : FOLLOWER (om2)
om3 : LEADER (om3)</msg>
<status status="PASS" starttime="20230717 19:54:07.933" endtime="20230717 19:54:25.661"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:54:25.663" level="INFO">om1 : FOLLOWER (om1)
om2 : FOLLOWER (om2)
om3 : LEADER (om3)</msg>
<status status="PASS" starttime="20230717 19:54:25.662" endtime="20230717 19:54:25.664"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LEADER</arg>
<arg>1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:54:25.664" endtime="20230717 19:54:25.667"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>FOLLOWER</arg>
<arg>2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:54:25.667" endtime="20230717 19:54:25.668"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${omLine}</var>
<arg>${result}</arg>
<arg>LEADER</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20230717 19:54:25.669" level="INFO">1 out of 3 lines matched</msg>
<msg timestamp="20230717 19:54:25.669" level="INFO">${omLine} = om3 : LEADER (om3)</msg>
<status status="PASS" starttime="20230717 19:54:25.668" endtime="20230717 19:54:25.669"/>
</kw>
<kw name="Split String" library="String">
<var>${split1}</var>
<var>${split2}</var>
<arg>${omLine}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230717 19:54:25.671" level="INFO">${split1} = om3 </msg>
<msg timestamp="20230717 19:54:25.671" level="INFO">${split2} =  LEADER (om3)</msg>
<status status="PASS" starttime="20230717 19:54:25.669" endtime="20230717 19:54:25.671"/>
</kw>
<kw name="Strip String" library="String">
<var>${leaderOM}</var>
<arg>${split1}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230717 19:54:25.673" level="INFO">${leaderOM} = om3</msg>
<status status="PASS" starttime="20230717 19:54:25.672" endtime="20230717 19:54:25.673"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Leader OM: ${leaderOM}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:54:25.674" level="INFO">Leader OM: om3</msg>
<status status="PASS" starttime="20230717 19:54:25.674" endtime="20230717 19:54:25.675"/>
</kw>
<msg timestamp="20230717 19:54:25.679" level="INFO">${newLeaderOM} = om3</msg>
<status status="PASS" starttime="20230717 19:54:07.931" endtime="20230717 19:54:25.681"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${followerOM}</arg>
<arg>${newLeaderOM}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230717 19:54:25.681" endtime="20230717 19:54:25.683"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:53:12.907" endtime="20230717 19:54:25.684"/>
</test>
<test id="s1-s11-t2" name="Transfer Leadership for OM randomly" line="63">
<kw name="Get OM Leader Node">
<var>${leaderOM}</var>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om roles --service-id=omservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:54:25.701" level="INFO">Running command 'ozone admin om roles --service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:54:43.153" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:54:43.153" level="INFO">${output} = om1 : FOLLOWER (om1)
om2 : FOLLOWER (om2)
om3 : LEADER (om3)</msg>
<status status="PASS" starttime="20230717 19:54:25.694" endtime="20230717 19:54:43.153"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:54:43.155" level="INFO">om1 : FOLLOWER (om1)
om2 : FOLLOWER (om2)
om3 : LEADER (om3)</msg>
<status status="PASS" starttime="20230717 19:54:43.154" endtime="20230717 19:54:43.155"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:54:43.156" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:54:43.155" endtime="20230717 19:54:43.156"/>
</kw>
<status status="PASS" starttime="20230717 19:54:25.692" endtime="20230717 19:54:43.156"/>
</kw>
<msg timestamp="20230717 19:54:43.157" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:54:25.691" endtime="20230717 19:54:43.157"/>
</kw>
<msg timestamp="20230717 19:54:43.157" level="INFO">${result} = om1 : FOLLOWER (om1)
om2 : FOLLOWER (om2)
om3 : LEADER (om3)</msg>
<status status="PASS" starttime="20230717 19:54:25.691" endtime="20230717 19:54:43.157"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:54:43.158" level="INFO">om1 : FOLLOWER (om1)
om2 : FOLLOWER (om2)
om3 : LEADER (om3)</msg>
<status status="PASS" starttime="20230717 19:54:43.157" endtime="20230717 19:54:43.158"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LEADER</arg>
<arg>1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:54:43.158" endtime="20230717 19:54:43.159"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>FOLLOWER</arg>
<arg>2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:54:43.159" endtime="20230717 19:54:43.160"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${omLine}</var>
<arg>${result}</arg>
<arg>LEADER</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20230717 19:54:43.160" level="INFO">1 out of 3 lines matched</msg>
<msg timestamp="20230717 19:54:43.161" level="INFO">${omLine} = om3 : LEADER (om3)</msg>
<status status="PASS" starttime="20230717 19:54:43.160" endtime="20230717 19:54:43.161"/>
</kw>
<kw name="Split String" library="String">
<var>${split1}</var>
<var>${split2}</var>
<arg>${omLine}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230717 19:54:43.161" level="INFO">${split1} = om3 </msg>
<msg timestamp="20230717 19:54:43.162" level="INFO">${split2} =  LEADER (om3)</msg>
<status status="PASS" starttime="20230717 19:54:43.161" endtime="20230717 19:54:43.162"/>
</kw>
<kw name="Strip String" library="String">
<var>${leaderOM}</var>
<arg>${split1}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230717 19:54:43.162" level="INFO">${leaderOM} = om3</msg>
<status status="PASS" starttime="20230717 19:54:43.162" endtime="20230717 19:54:43.162"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Leader OM: ${leaderOM}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:54:43.163" level="INFO">Leader OM: om3</msg>
<status status="PASS" starttime="20230717 19:54:43.163" endtime="20230717 19:54:43.163"/>
</kw>
<msg timestamp="20230717 19:54:43.163" level="INFO">${leaderOM} = om3</msg>
<status status="PASS" starttime="20230717 19:54:25.689" endtime="20230717 19:54:43.164"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Leader OM: ${leaderOM}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:54:43.164" level="INFO">Leader OM: om3</msg>
<status status="PASS" starttime="20230717 19:54:43.164" endtime="20230717 19:54:43.164"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om transfer -r</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:54:43.171" level="INFO">Running command 'ozone admin om transfer -r 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:55:01.214" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:55:01.214" level="INFO">${output} = Transfer leadership successfully to random node.</msg>
<status status="PASS" starttime="20230717 19:54:43.167" endtime="20230717 19:55:01.214"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:55:01.216" level="INFO">Transfer leadership successfully to random node.</msg>
<status status="PASS" starttime="20230717 19:55:01.215" endtime="20230717 19:55:01.216"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:55:01.219" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:55:01.216" endtime="20230717 19:55:01.220"/>
</kw>
<status status="PASS" starttime="20230717 19:54:43.166" endtime="20230717 19:55:01.220"/>
</kw>
<msg timestamp="20230717 19:55:01.220" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:54:43.165" endtime="20230717 19:55:01.221"/>
</kw>
<msg timestamp="20230717 19:55:01.222" level="INFO">${result} = Transfer leadership successfully to random node.</msg>
<status status="PASS" starttime="20230717 19:54:43.165" endtime="20230717 19:55:01.222"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:55:01.225" level="INFO">Transfer leadership successfully to random node.</msg>
<status status="PASS" starttime="20230717 19:55:01.222" endtime="20230717 19:55:01.225"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Transfer leadership successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:55:01.225" endtime="20230717 19:55:01.228"/>
</kw>
<kw name="Get OM Leader Node">
<var>${newLeaderOM}</var>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om roles --service-id=omservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:55:01.245" level="INFO">Running command 'ozone admin om roles --service-id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:55:18.374" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:55:18.374" level="INFO">${output} = om3 : FOLLOWER (om3)
om2 : FOLLOWER (om2)
om1 : LEADER (om1)</msg>
<status status="PASS" starttime="20230717 19:55:01.236" endtime="20230717 19:55:18.374"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:55:18.377" level="INFO">om3 : FOLLOWER (om3)
om2 : FOLLOWER (om2)
om1 : LEADER (om1)</msg>
<status status="PASS" starttime="20230717 19:55:18.375" endtime="20230717 19:55:18.378"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:55:18.379" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:55:18.378" endtime="20230717 19:55:18.379"/>
</kw>
<status status="PASS" starttime="20230717 19:55:01.232" endtime="20230717 19:55:18.379"/>
</kw>
<msg timestamp="20230717 19:55:18.379" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:55:01.230" endtime="20230717 19:55:18.381"/>
</kw>
<msg timestamp="20230717 19:55:18.381" level="INFO">${result} = om3 : FOLLOWER (om3)
om2 : FOLLOWER (om2)
om1 : LEADER (om1)</msg>
<status status="PASS" starttime="20230717 19:55:01.229" endtime="20230717 19:55:18.381"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:55:18.383" level="INFO">om3 : FOLLOWER (om3)
om2 : FOLLOWER (om2)
om1 : LEADER (om1)</msg>
<status status="PASS" starttime="20230717 19:55:18.381" endtime="20230717 19:55:18.383"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LEADER</arg>
<arg>1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:55:18.383" endtime="20230717 19:55:18.384"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>FOLLOWER</arg>
<arg>2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:55:18.385" endtime="20230717 19:55:18.386"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${omLine}</var>
<arg>${result}</arg>
<arg>LEADER</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20230717 19:55:18.387" level="INFO">1 out of 3 lines matched</msg>
<msg timestamp="20230717 19:55:18.387" level="INFO">${omLine} = om1 : LEADER (om1)</msg>
<status status="PASS" starttime="20230717 19:55:18.386" endtime="20230717 19:55:18.387"/>
</kw>
<kw name="Split String" library="String">
<var>${split1}</var>
<var>${split2}</var>
<arg>${omLine}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230717 19:55:18.389" level="INFO">${split1} = om1 </msg>
<msg timestamp="20230717 19:55:18.389" level="INFO">${split2} =  LEADER (om1)</msg>
<status status="PASS" starttime="20230717 19:55:18.388" endtime="20230717 19:55:18.389"/>
</kw>
<kw name="Strip String" library="String">
<var>${leaderOM}</var>
<arg>${split1}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230717 19:55:18.390" level="INFO">${leaderOM} = om1</msg>
<status status="PASS" starttime="20230717 19:55:18.390" endtime="20230717 19:55:18.390"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Leader OM: ${leaderOM}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:55:18.392" level="INFO">Leader OM: om1</msg>
<status status="PASS" starttime="20230717 19:55:18.390" endtime="20230717 19:55:18.392"/>
</kw>
<msg timestamp="20230717 19:55:18.393" level="INFO">${newLeaderOM} = om1</msg>
<status status="PASS" starttime="20230717 19:55:01.228" endtime="20230717 19:55:18.393"/>
</kw>
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${leaderOM}</arg>
<arg>${newLeaderOM}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="PASS" starttime="20230717 19:55:18.393" endtime="20230717 19:55:18.395"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:54:25.686" endtime="20230717 19:55:18.395"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230717 19:53:12.798" endtime="20230717 19:55:18.398"/>
</suite>
<suite id="s1-s12" name="Httpfs" source="/opt/hadoop/smoketest/httpfs">
<suite id="s1-s12-s1" name="Operations Tests" source="/opt/hadoop/smoketest/httpfs/operations_tests.robot">
<kw name="Generate volume" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230717 19:55:24.369" level="INFO">${random} = wpvqr</msg>
<status status="PASS" starttime="20230717 19:55:24.368" endtime="20230717 19:55:24.369"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230717 19:55:24.370" level="INFO">${volume} = wpvqr</msg>
<status status="PASS" starttime="20230717 19:55:24.369" endtime="20230717 19:55:24.370"/>
</kw>
<status status="PASS" starttime="20230717 19:55:24.367" endtime="20230717 19:55:24.371"/>
</kw>
<test id="s1-s12-s1-t1" name="Kinit admin user" line="38">
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}'=='false'</arg>
<arg>This is for secured environment</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230717 19:55:24.372" endtime="20230717 19:55:24.373"/>
</kw>
<kw name="Kinit admin">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k om/om@EXAMPLE.COM -t /etc/security/keytabs/om.keytab</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k om/om@EXAMPLE.COM -t /etc/security/keytabs/om.keytab</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:55:24.384" level="INFO">Running command 'kinit -k om/om@EXAMPLE.COM -t /etc/security/keytabs/om.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:55:24.453" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:55:24.453" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:55:24.378" endtime="20230717 19:55:24.453"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:55:24.455" level="INFO"/>
<status status="PASS" starttime="20230717 19:55:24.454" endtime="20230717 19:55:24.455"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:55:24.457" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:55:24.456" endtime="20230717 19:55:24.457"/>
</kw>
<status status="PASS" starttime="20230717 19:55:24.377" endtime="20230717 19:55:24.458"/>
</kw>
<msg timestamp="20230717 19:55:24.458" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:55:24.376" endtime="20230717 19:55:24.459"/>
</kw>
<status status="PASS" starttime="20230717 19:55:24.375" endtime="20230717 19:55:24.459"/>
</kw>
<status status="PASS" starttime="20230717 19:55:24.374" endtime="20230717 19:55:24.459"/>
</kw>
<status status="PASS" starttime="20230717 19:55:24.374" endtime="20230717 19:55:24.459"/>
</kw>
<status status="PASS" starttime="20230717 19:55:24.371" endtime="20230717 19:55:24.460"/>
</test>
<test id="s1-s12-s1-t2" name="Create volume" line="42">
<kw name="Execute curl command" library="operations">
<var>${vol}</var>
<arg>${volume}</arg>
<arg>MKDIRS</arg>
<arg>-X PUT</arg>
<kw name="Set Variable If" library="BuiltIn">
<var>${user.name}</var>
<arg>'${SECURITY_ENABLED}'=='false'</arg>
<arg>&amp;user.name=${USERNAME}</arg>
<arg>${EMPTY}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230717 19:55:24.470" level="INFO">${user.name} = </msg>
<status status="PASS" starttime="20230717 19:55:24.466" endtime="20230717 19:55:24.470"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${final_url}</var>
<arg>SEPARATOR=</arg>
<arg>${URL}</arg>
<arg>${path}</arg>
<arg>?op=</arg>
<arg>${operation}</arg>
<arg>${user.name}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230717 19:55:24.472" level="INFO">${final_url} = http://httpfs:14000/webhdfs/v1/wpvqr?op=MKDIRS</msg>
<status status="PASS" starttime="20230717 19:55:24.470" endtime="20230717 19:55:24.472"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${curl_extra_commands}</var>
<arg>'${SECURITY_ENABLED}'=='true'</arg>
<arg>--negotiate -u :</arg>
<arg>${EMPTY}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230717 19:55:24.473" level="INFO">${curl_extra_commands} = --negotiate -u :</msg>
<status status="PASS" starttime="20230717 19:55:24.472" endtime="20230717 19:55:24.473"/>
</kw>
<kw name="Run Process" library="Process">
<var>${output}</var>
<arg>curl ${extra_commands} ${curl_extra_commands} "${final_url}"</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20230717 19:55:24.476" level="INFO">Starting process:
curl -X PUT --negotiate -u : "http://httpfs:14000/webhdfs/v1/wpvqr?op=MKDIRS"</msg>
<msg timestamp="20230717 19:55:24.485" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230717 19:55:34.964" level="INFO">Process completed.</msg>
<msg timestamp="20230717 19:55:34.965" level="INFO">${output} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230717 19:55:24.473" endtime="20230717 19:55:34.965"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${output.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:55:34.968" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:55:34.966" endtime="20230717 19:55:34.968"/>
</kw>
<msg timestamp="20230717 19:55:34.969" level="INFO">${vol} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230717 19:55:24.463" endtime="20230717 19:55:34.969"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${vol.stdout}</arg>
<arg>true</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:55:34.969" endtime="20230717 19:55:34.970"/>
</kw>
<status status="PASS" starttime="20230717 19:55:24.462" endtime="20230717 19:55:34.970"/>
</test>
<test id="s1-s12-s1-t3" name="Set owner of volume" line="46">
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}'=='false'</arg>
<arg>This is for secured environment</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230717 19:55:34.977" endtime="20230717 19:55:34.979"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>ozone sh volume update --user=testuser /${volume}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20230717 19:55:34.994" level="INFO">Running command 'ozone sh volume update --user=testuser /wpvqr 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:55:55.761" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20230717 19:55:34.979" endtime="20230717 19:55:55.761"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:55:55.767" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:55:55.763" endtime="20230717 19:55:55.768"/>
</kw>
<status status="PASS" starttime="20230717 19:55:34.974" endtime="20230717 19:55:55.768"/>
</test>
<test id="s1-s12-s1-t4" name="Kinit testuser" line="51">
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}'=='false'</arg>
<arg>This is for secured environment</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230717 19:55:55.776" endtime="20230717 19:55:55.781"/>
</kw>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:55:55.791" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:55:55.804" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:55:55.804" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20230717 19:55:55.787" endtime="20230717 19:55:55.804"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:55:55.805" level="INFO">s3g</msg>
<status status="PASS" starttime="20230717 19:55:55.804" endtime="20230717 19:55:55.807"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:55:55.808" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:55:55.807" endtime="20230717 19:55:55.808"/>
</kw>
<status status="PASS" starttime="20230717 19:55:55.786" endtime="20230717 19:55:55.809"/>
</kw>
<msg timestamp="20230717 19:55:55.810" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:55:55.785" endtime="20230717 19:55:55.810"/>
</kw>
<msg timestamp="20230717 19:55:55.811" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20230717 19:55:55.784" endtime="20230717 19:55:55.811"/>
</kw>
<msg timestamp="20230717 19:55:55.811" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230717 19:55:55.783" endtime="20230717 19:55:55.811"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230717 19:55:55.814" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230717 19:55:55.814" endtime="20230717 19:55:55.814"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:55:55.830" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:55:55.922" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:55:55.922" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:55:55.824" endtime="20230717 19:55:55.922"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:55:55.924" level="INFO"/>
<status status="PASS" starttime="20230717 19:55:55.923" endtime="20230717 19:55:55.924"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:55:55.925" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:55:55.924" endtime="20230717 19:55:55.925"/>
</kw>
<status status="PASS" starttime="20230717 19:55:55.823" endtime="20230717 19:55:55.925"/>
</kw>
<msg timestamp="20230717 19:55:55.926" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:55:55.821" endtime="20230717 19:55:55.926"/>
</kw>
<status status="PASS" starttime="20230717 19:55:55.819" endtime="20230717 19:55:55.926"/>
</kw>
<status status="PASS" starttime="20230717 19:55:55.817" endtime="20230717 19:55:55.926"/>
</kw>
<status status="PASS" starttime="20230717 19:55:55.781" endtime="20230717 19:55:55.927"/>
</kw>
<status status="PASS" starttime="20230717 19:55:55.771" endtime="20230717 19:55:55.927"/>
</test>
<test id="s1-s12-s1-t5" name="Create first bucket" line="55">
<kw name="Execute curl command" library="operations">
<var>${bucket}</var>
<arg>${volume}/buck1</arg>
<arg>MKDIRS</arg>
<arg>-X PUT</arg>
<kw name="Set Variable If" library="BuiltIn">
<var>${user.name}</var>
<arg>'${SECURITY_ENABLED}'=='false'</arg>
<arg>&amp;user.name=${USERNAME}</arg>
<arg>${EMPTY}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230717 19:55:55.939" level="INFO">${user.name} = </msg>
<status status="PASS" starttime="20230717 19:55:55.935" endtime="20230717 19:55:55.939"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${final_url}</var>
<arg>SEPARATOR=</arg>
<arg>${URL}</arg>
<arg>${path}</arg>
<arg>?op=</arg>
<arg>${operation}</arg>
<arg>${user.name}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230717 19:55:55.940" level="INFO">${final_url} = http://httpfs:14000/webhdfs/v1/wpvqr/buck1?op=MKDIRS</msg>
<status status="PASS" starttime="20230717 19:55:55.939" endtime="20230717 19:55:55.940"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${curl_extra_commands}</var>
<arg>'${SECURITY_ENABLED}'=='true'</arg>
<arg>--negotiate -u :</arg>
<arg>${EMPTY}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230717 19:55:55.942" level="INFO">${curl_extra_commands} = --negotiate -u :</msg>
<status status="PASS" starttime="20230717 19:55:55.941" endtime="20230717 19:55:55.942"/>
</kw>
<kw name="Run Process" library="Process">
<var>${output}</var>
<arg>curl ${extra_commands} ${curl_extra_commands} "${final_url}"</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20230717 19:55:55.944" level="INFO">Starting process:
curl -X PUT --negotiate -u : "http://httpfs:14000/webhdfs/v1/wpvqr/buck1?op=MKDIRS"</msg>
<msg timestamp="20230717 19:55:55.951" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230717 19:55:56.852" level="INFO">Process completed.</msg>
<msg timestamp="20230717 19:55:56.853" level="INFO">${output} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230717 19:55:55.943" endtime="20230717 19:55:56.853"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${output.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:55:56.856" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:55:56.854" endtime="20230717 19:55:56.857"/>
</kw>
<msg timestamp="20230717 19:55:56.857" level="INFO">${bucket} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230717 19:55:55.933" endtime="20230717 19:55:56.857"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${bucket.stdout}</arg>
<arg>true</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:55:56.857" endtime="20230717 19:55:56.861"/>
</kw>
<status status="PASS" starttime="20230717 19:55:55.932" endtime="20230717 19:55:56.861"/>
</test>
<test id="s1-s12-s1-t6" name="Create second bucket" line="59">
<kw name="Execute curl command" library="operations">
<var>${bucket}</var>
<arg>${volume}/buck2</arg>
<arg>MKDIRS</arg>
<arg>-X PUT</arg>
<kw name="Set Variable If" library="BuiltIn">
<var>${user.name}</var>
<arg>'${SECURITY_ENABLED}'=='false'</arg>
<arg>&amp;user.name=${USERNAME}</arg>
<arg>${EMPTY}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230717 19:55:56.885" level="INFO">${user.name} = </msg>
<status status="PASS" starttime="20230717 19:55:56.875" endtime="20230717 19:55:56.885"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${final_url}</var>
<arg>SEPARATOR=</arg>
<arg>${URL}</arg>
<arg>${path}</arg>
<arg>?op=</arg>
<arg>${operation}</arg>
<arg>${user.name}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230717 19:55:56.888" level="INFO">${final_url} = http://httpfs:14000/webhdfs/v1/wpvqr/buck2?op=MKDIRS</msg>
<status status="PASS" starttime="20230717 19:55:56.885" endtime="20230717 19:55:56.888"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${curl_extra_commands}</var>
<arg>'${SECURITY_ENABLED}'=='true'</arg>
<arg>--negotiate -u :</arg>
<arg>${EMPTY}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230717 19:55:56.891" level="INFO">${curl_extra_commands} = --negotiate -u :</msg>
<status status="PASS" starttime="20230717 19:55:56.889" endtime="20230717 19:55:56.891"/>
</kw>
<kw name="Run Process" library="Process">
<var>${output}</var>
<arg>curl ${extra_commands} ${curl_extra_commands} "${final_url}"</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20230717 19:55:56.893" level="INFO">Starting process:
curl -X PUT --negotiate -u : "http://httpfs:14000/webhdfs/v1/wpvqr/buck2?op=MKDIRS"</msg>
<msg timestamp="20230717 19:55:56.905" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230717 19:55:57.059" level="INFO">Process completed.</msg>
<msg timestamp="20230717 19:55:57.060" level="INFO">${output} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230717 19:55:56.892" endtime="20230717 19:55:57.060"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${output.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:55:57.062" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:55:57.060" endtime="20230717 19:55:57.062"/>
</kw>
<msg timestamp="20230717 19:55:57.063" level="INFO">${bucket} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230717 19:55:56.872" endtime="20230717 19:55:57.063"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${bucket.stdout}</arg>
<arg>true</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:55:57.063" endtime="20230717 19:55:57.066"/>
</kw>
<status status="PASS" starttime="20230717 19:55:56.867" endtime="20230717 19:55:57.069"/>
</test>
<test id="s1-s12-s1-t7" name="Create local testfile" line="63">
<kw name="Create file" library="operations">
<arg>testfile</arg>
<kw name="Run Process" library="Process">
<arg>touch ${file_name}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20230717 19:55:57.079" level="INFO">Starting process:
touch testfile</msg>
<msg timestamp="20230717 19:55:57.092" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230717 19:55:57.098" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20230717 19:55:57.079" endtime="20230717 19:55:57.098"/>
</kw>
<kw name="Run Process" library="Process">
<arg>echo "Hello world!"&gt;${file_name}</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20230717 19:55:57.109" level="INFO">Starting process:
echo "Hello world!"&gt;testfile</msg>
<msg timestamp="20230717 19:55:57.125" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230717 19:55:57.132" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20230717 19:55:57.100" endtime="20230717 19:55:57.135"/>
</kw>
<status status="PASS" starttime="20230717 19:55:57.077" endtime="20230717 19:55:57.135"/>
</kw>
<status status="PASS" starttime="20230717 19:55:57.074" endtime="20230717 19:55:57.136"/>
</test>
<test id="s1-s12-s1-t8" name="Create testfile" line="66">
<kw name="Execute create file command" library="operations">
<var>${file}</var>
<arg>${volume}/buck1/testfile</arg>
<arg>testfile</arg>
<kw name="Set Variable If" library="BuiltIn">
<var>${user.name}</var>
<arg>'${SECURITY_ENABLED}'=='false'</arg>
<arg>&amp;user.name=${USERNAME}</arg>
<arg>${EMPTY}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230717 19:55:57.162" level="INFO">${user.name} = </msg>
<status status="PASS" starttime="20230717 19:55:57.152" endtime="20230717 19:55:57.162"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${curl_extra_commands}</var>
<arg>'${SECURITY_ENABLED}'=='true'</arg>
<arg>--negotiate -u :</arg>
<arg>${EMPTY}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230717 19:55:57.165" level="INFO">${curl_extra_commands} = --negotiate -u :</msg>
<status status="PASS" starttime="20230717 19:55:57.163" endtime="20230717 19:55:57.165"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${final_url}</var>
<arg>SEPARATOR=</arg>
<arg>${URL}</arg>
<arg>${path}</arg>
<arg>?op=CREATE</arg>
<arg>${user.name}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230717 19:55:57.168" level="INFO">${final_url} = http://httpfs:14000/webhdfs/v1/wpvqr/buck1/testfile?op=CREATE</msg>
<status status="PASS" starttime="20230717 19:55:57.166" endtime="20230717 19:55:57.168"/>
</kw>
<kw name="Run Process" library="Process">
<var>${output}</var>
<arg>curl -X PUT ${curl_extra_commands} "${final_url}"</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20230717 19:55:57.170" level="INFO">Starting process:
curl -X PUT --negotiate -u : "http://httpfs:14000/webhdfs/v1/wpvqr/buck1/testfile?op=CREATE"</msg>
<msg timestamp="20230717 19:55:57.181" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230717 19:55:57.232" level="INFO">Process completed.</msg>
<msg timestamp="20230717 19:55:57.233" level="INFO">${output} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230717 19:55:57.168" endtime="20230717 19:55:57.233"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${output.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:55:57.235" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:55:57.233" endtime="20230717 19:55:57.235"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${final_url2}</var>
<arg>SEPARATOR=</arg>
<arg>${URL}</arg>
<arg>${path}</arg>
<arg>?op=CREATE&amp;data=true</arg>
<arg>${user.name}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230717 19:55:57.236" level="INFO">${final_url2} = http://httpfs:14000/webhdfs/v1/wpvqr/buck1/testfile?op=CREATE&amp;data=true</msg>
<status status="PASS" starttime="20230717 19:55:57.236" endtime="20230717 19:55:57.236"/>
</kw>
<kw name="Run Process" library="Process">
<var>${output2}</var>
<arg>curl -X PUT -T ${file_name} ${curl_extra_commands} "${final_url2}" -H"Content-Type: application/octet-stream"</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20230717 19:55:57.237" level="INFO">Starting process:
curl -X PUT -T testfile --negotiate -u : "http://httpfs:14000/webhdfs/v1/wpvqr/buck1/testfile?op=CREATE&amp;data=true" -H"Content-Type: application/octet-stream"</msg>
<msg timestamp="20230717 19:55:57.248" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230717 19:56:04.333" level="INFO">Process completed.</msg>
<msg timestamp="20230717 19:56:04.334" level="INFO">${output2} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230717 19:55:57.236" endtime="20230717 19:56:04.334"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${output2.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:56:04.337" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:56:04.334" endtime="20230717 19:56:04.337"/>
</kw>
<msg timestamp="20230717 19:56:04.337" level="INFO">${file} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230717 19:55:57.146" endtime="20230717 19:56:04.337"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${file.stdout}</arg>
<arg>http://httpfs:14000/webhdfs/v1/${volume}/buck1/testfile</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:56:04.338" endtime="20230717 19:56:04.340"/>
</kw>
<status status="PASS" starttime="20230717 19:55:57.141" endtime="20230717 19:56:04.340"/>
</test>
<test id="s1-s12-s1-t9" name="Read file" line="70">
<kw name="Execute curl command" library="operations">
<var>${file}</var>
<arg>${volume}/buck1/testfile</arg>
<arg>OPEN</arg>
<arg>-L</arg>
<kw name="Set Variable If" library="BuiltIn">
<var>${user.name}</var>
<arg>'${SECURITY_ENABLED}'=='false'</arg>
<arg>&amp;user.name=${USERNAME}</arg>
<arg>${EMPTY}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230717 19:56:04.351" level="INFO">${user.name} = </msg>
<status status="PASS" starttime="20230717 19:56:04.347" endtime="20230717 19:56:04.351"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${final_url}</var>
<arg>SEPARATOR=</arg>
<arg>${URL}</arg>
<arg>${path}</arg>
<arg>?op=</arg>
<arg>${operation}</arg>
<arg>${user.name}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230717 19:56:04.353" level="INFO">${final_url} = http://httpfs:14000/webhdfs/v1/wpvqr/buck1/testfile?op=OPEN</msg>
<status status="PASS" starttime="20230717 19:56:04.352" endtime="20230717 19:56:04.353"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${curl_extra_commands}</var>
<arg>'${SECURITY_ENABLED}'=='true'</arg>
<arg>--negotiate -u :</arg>
<arg>${EMPTY}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230717 19:56:04.355" level="INFO">${curl_extra_commands} = --negotiate -u :</msg>
<status status="PASS" starttime="20230717 19:56:04.354" endtime="20230717 19:56:04.355"/>
</kw>
<kw name="Run Process" library="Process">
<var>${output}</var>
<arg>curl ${extra_commands} ${curl_extra_commands} "${final_url}"</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20230717 19:56:04.357" level="INFO">Starting process:
curl -L --negotiate -u : "http://httpfs:14000/webhdfs/v1/wpvqr/buck1/testfile?op=OPEN"</msg>
<msg timestamp="20230717 19:56:04.366" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230717 19:56:05.502" level="INFO">Process completed.</msg>
<msg timestamp="20230717 19:56:05.502" level="INFO">${output} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230717 19:56:04.355" endtime="20230717 19:56:05.502"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${output.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:56:05.505" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:56:05.503" endtime="20230717 19:56:05.505"/>
</kw>
<msg timestamp="20230717 19:56:05.506" level="INFO">${file} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230717 19:56:04.346" endtime="20230717 19:56:05.506"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${file.stdout}</arg>
<arg>Hello world!</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:56:05.506" endtime="20230717 19:56:05.507"/>
</kw>
<status status="PASS" starttime="20230717 19:56:04.344" endtime="20230717 19:56:05.508"/>
</test>
<test id="s1-s12-s1-t10" name="Delete bucket" line="80">
<kw name="Execute curl command" library="operations">
<var>${bucket}</var>
<arg>${volume}/buck2</arg>
<arg>DELETE</arg>
<arg>-X DELETE</arg>
<kw name="Set Variable If" library="BuiltIn">
<var>${user.name}</var>
<arg>'${SECURITY_ENABLED}'=='false'</arg>
<arg>&amp;user.name=${USERNAME}</arg>
<arg>${EMPTY}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230717 19:56:05.522" level="INFO">${user.name} = </msg>
<status status="PASS" starttime="20230717 19:56:05.515" endtime="20230717 19:56:05.522"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${final_url}</var>
<arg>SEPARATOR=</arg>
<arg>${URL}</arg>
<arg>${path}</arg>
<arg>?op=</arg>
<arg>${operation}</arg>
<arg>${user.name}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230717 19:56:05.526" level="INFO">${final_url} = http://httpfs:14000/webhdfs/v1/wpvqr/buck2?op=DELETE</msg>
<status status="PASS" starttime="20230717 19:56:05.523" endtime="20230717 19:56:05.527"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${curl_extra_commands}</var>
<arg>'${SECURITY_ENABLED}'=='true'</arg>
<arg>--negotiate -u :</arg>
<arg>${EMPTY}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230717 19:56:05.528" level="INFO">${curl_extra_commands} = --negotiate -u :</msg>
<status status="PASS" starttime="20230717 19:56:05.527" endtime="20230717 19:56:05.528"/>
</kw>
<kw name="Run Process" library="Process">
<var>${output}</var>
<arg>curl ${extra_commands} ${curl_extra_commands} "${final_url}"</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20230717 19:56:05.530" level="INFO">Starting process:
curl -X DELETE --negotiate -u : "http://httpfs:14000/webhdfs/v1/wpvqr/buck2?op=DELETE"</msg>
<msg timestamp="20230717 19:56:05.542" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230717 19:56:05.959" level="INFO">Process completed.</msg>
<msg timestamp="20230717 19:56:05.959" level="INFO">${output} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230717 19:56:05.529" endtime="20230717 19:56:05.959"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${output.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:56:05.965" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:56:05.960" endtime="20230717 19:56:05.966"/>
</kw>
<msg timestamp="20230717 19:56:05.966" level="INFO">${bucket} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230717 19:56:05.511" endtime="20230717 19:56:05.966"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${bucket.stdout}</arg>
<arg>true</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:56:05.966" endtime="20230717 19:56:05.969"/>
</kw>
<status status="PASS" starttime="20230717 19:56:05.509" endtime="20230717 19:56:05.969"/>
</test>
<test id="s1-s12-s1-t11" name="Get status of bucket" line="84">
<kw name="Execute curl command" library="operations">
<var>${status}</var>
<arg>${volume}/buck1</arg>
<arg>GETFILESTATUS</arg>
<arg>${EMPTY}</arg>
<kw name="Set Variable If" library="BuiltIn">
<var>${user.name}</var>
<arg>'${SECURITY_ENABLED}'=='false'</arg>
<arg>&amp;user.name=${USERNAME}</arg>
<arg>${EMPTY}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230717 19:56:05.987" level="INFO">${user.name} = </msg>
<status status="PASS" starttime="20230717 19:56:05.980" endtime="20230717 19:56:05.987"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${final_url}</var>
<arg>SEPARATOR=</arg>
<arg>${URL}</arg>
<arg>${path}</arg>
<arg>?op=</arg>
<arg>${operation}</arg>
<arg>${user.name}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230717 19:56:05.995" level="INFO">${final_url} = http://httpfs:14000/webhdfs/v1/wpvqr/buck1?op=GETFILESTATUS</msg>
<status status="PASS" starttime="20230717 19:56:05.991" endtime="20230717 19:56:05.995"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${curl_extra_commands}</var>
<arg>'${SECURITY_ENABLED}'=='true'</arg>
<arg>--negotiate -u :</arg>
<arg>${EMPTY}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230717 19:56:06.000" level="INFO">${curl_extra_commands} = --negotiate -u :</msg>
<status status="PASS" starttime="20230717 19:56:05.995" endtime="20230717 19:56:06.000"/>
</kw>
<kw name="Run Process" library="Process">
<var>${output}</var>
<arg>curl ${extra_commands} ${curl_extra_commands} "${final_url}"</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20230717 19:56:06.005" level="INFO">Starting process:
curl  --negotiate -u : "http://httpfs:14000/webhdfs/v1/wpvqr/buck1?op=GETFILESTATUS"</msg>
<msg timestamp="20230717 19:56:06.011" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230717 19:56:06.086" level="INFO">Process completed.</msg>
<msg timestamp="20230717 19:56:06.086" level="INFO">${output} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230717 19:56:06.000" endtime="20230717 19:56:06.086"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${output.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:56:06.089" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:56:06.087" endtime="20230717 19:56:06.089"/>
</kw>
<msg timestamp="20230717 19:56:06.089" level="INFO">${status} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230717 19:56:05.971" endtime="20230717 19:56:06.089"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${status.stdout}</arg>
<arg>FileStatus</arg>
<arg>DIRECTORY</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:56:06.090" endtime="20230717 19:56:06.093"/>
</kw>
<status status="PASS" starttime="20230717 19:56:05.970" endtime="20230717 19:56:06.093"/>
</test>
<test id="s1-s12-s1-t12" name="Get status of file" line="88">
<kw name="Execute curl command" library="operations">
<var>${status}</var>
<arg>${volume}/buck1/testfile</arg>
<arg>GETFILESTATUS</arg>
<arg>${EMPTY}</arg>
<kw name="Set Variable If" library="BuiltIn">
<var>${user.name}</var>
<arg>'${SECURITY_ENABLED}'=='false'</arg>
<arg>&amp;user.name=${USERNAME}</arg>
<arg>${EMPTY}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230717 19:56:06.116" level="INFO">${user.name} = </msg>
<status status="PASS" starttime="20230717 19:56:06.104" endtime="20230717 19:56:06.116"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${final_url}</var>
<arg>SEPARATOR=</arg>
<arg>${URL}</arg>
<arg>${path}</arg>
<arg>?op=</arg>
<arg>${operation}</arg>
<arg>${user.name}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230717 19:56:06.119" level="INFO">${final_url} = http://httpfs:14000/webhdfs/v1/wpvqr/buck1/testfile?op=GETFILESTATUS</msg>
<status status="PASS" starttime="20230717 19:56:06.117" endtime="20230717 19:56:06.119"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${curl_extra_commands}</var>
<arg>'${SECURITY_ENABLED}'=='true'</arg>
<arg>--negotiate -u :</arg>
<arg>${EMPTY}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230717 19:56:06.120" level="INFO">${curl_extra_commands} = --negotiate -u :</msg>
<status status="PASS" starttime="20230717 19:56:06.119" endtime="20230717 19:56:06.120"/>
</kw>
<kw name="Run Process" library="Process">
<var>${output}</var>
<arg>curl ${extra_commands} ${curl_extra_commands} "${final_url}"</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20230717 19:56:06.122" level="INFO">Starting process:
curl  --negotiate -u : "http://httpfs:14000/webhdfs/v1/wpvqr/buck1/testfile?op=GETFILESTATUS"</msg>
<msg timestamp="20230717 19:56:06.130" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230717 19:56:06.248" level="INFO">Process completed.</msg>
<msg timestamp="20230717 19:56:06.248" level="INFO">${output} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230717 19:56:06.121" endtime="20230717 19:56:06.248"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${output.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:56:06.253" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:56:06.249" endtime="20230717 19:56:06.253"/>
</kw>
<msg timestamp="20230717 19:56:06.253" level="INFO">${status} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230717 19:56:06.098" endtime="20230717 19:56:06.253"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${status.stdout}</arg>
<arg>FileStatus</arg>
<arg>FILE</arg>
<arg>13</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:56:06.254" endtime="20230717 19:56:06.257"/>
</kw>
<status status="PASS" starttime="20230717 19:56:06.095" endtime="20230717 19:56:06.258"/>
</test>
<test id="s1-s12-s1-t13" name="List bucket" line="92">
<kw name="Execute curl command" library="operations">
<var>${list}</var>
<arg>${volume}/buck1</arg>
<arg>LISTSTATUS</arg>
<arg>${EMPTY}</arg>
<kw name="Set Variable If" library="BuiltIn">
<var>${user.name}</var>
<arg>'${SECURITY_ENABLED}'=='false'</arg>
<arg>&amp;user.name=${USERNAME}</arg>
<arg>${EMPTY}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230717 19:56:06.278" level="INFO">${user.name} = </msg>
<status status="PASS" starttime="20230717 19:56:06.271" endtime="20230717 19:56:06.278"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${final_url}</var>
<arg>SEPARATOR=</arg>
<arg>${URL}</arg>
<arg>${path}</arg>
<arg>?op=</arg>
<arg>${operation}</arg>
<arg>${user.name}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230717 19:56:06.290" level="INFO">${final_url} = http://httpfs:14000/webhdfs/v1/wpvqr/buck1?op=LISTSTATUS</msg>
<status status="PASS" starttime="20230717 19:56:06.278" endtime="20230717 19:56:06.290"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${curl_extra_commands}</var>
<arg>'${SECURITY_ENABLED}'=='true'</arg>
<arg>--negotiate -u :</arg>
<arg>${EMPTY}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230717 19:56:06.295" level="INFO">${curl_extra_commands} = --negotiate -u :</msg>
<status status="PASS" starttime="20230717 19:56:06.292" endtime="20230717 19:56:06.295"/>
</kw>
<kw name="Run Process" library="Process">
<var>${output}</var>
<arg>curl ${extra_commands} ${curl_extra_commands} "${final_url}"</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20230717 19:56:06.299" level="INFO">Starting process:
curl  --negotiate -u : "http://httpfs:14000/webhdfs/v1/wpvqr/buck1?op=LISTSTATUS"</msg>
<msg timestamp="20230717 19:56:06.308" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230717 19:56:06.409" level="INFO">Process completed.</msg>
<msg timestamp="20230717 19:56:06.409" level="INFO">${output} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230717 19:56:06.296" endtime="20230717 19:56:06.409"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${output.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:56:06.412" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:56:06.410" endtime="20230717 19:56:06.412"/>
</kw>
<msg timestamp="20230717 19:56:06.413" level="INFO">${list} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230717 19:56:06.265" endtime="20230717 19:56:06.413"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${list.stdout}</arg>
<arg>FileStatus</arg>
<arg>testfile</arg>
<arg>FILE</arg>
<arg>13</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:56:06.413" endtime="20230717 19:56:06.414"/>
</kw>
<status status="PASS" starttime="20230717 19:56:06.259" endtime="20230717 19:56:06.415"/>
</test>
<test id="s1-s12-s1-t14" name="List file" line="96">
<kw name="Execute curl command" library="operations">
<var>${list}</var>
<arg>${volume}/buck1/testfile</arg>
<arg>LISTSTATUS</arg>
<arg>${EMPTY}</arg>
<kw name="Set Variable If" library="BuiltIn">
<var>${user.name}</var>
<arg>'${SECURITY_ENABLED}'=='false'</arg>
<arg>&amp;user.name=${USERNAME}</arg>
<arg>${EMPTY}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230717 19:56:06.435" level="INFO">${user.name} = </msg>
<status status="PASS" starttime="20230717 19:56:06.428" endtime="20230717 19:56:06.435"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${final_url}</var>
<arg>SEPARATOR=</arg>
<arg>${URL}</arg>
<arg>${path}</arg>
<arg>?op=</arg>
<arg>${operation}</arg>
<arg>${user.name}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230717 19:56:06.438" level="INFO">${final_url} = http://httpfs:14000/webhdfs/v1/wpvqr/buck1/testfile?op=LISTSTATUS</msg>
<status status="PASS" starttime="20230717 19:56:06.435" endtime="20230717 19:56:06.438"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${curl_extra_commands}</var>
<arg>'${SECURITY_ENABLED}'=='true'</arg>
<arg>--negotiate -u :</arg>
<arg>${EMPTY}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230717 19:56:06.441" level="INFO">${curl_extra_commands} = --negotiate -u :</msg>
<status status="PASS" starttime="20230717 19:56:06.441" endtime="20230717 19:56:06.441"/>
</kw>
<kw name="Run Process" library="Process">
<var>${output}</var>
<arg>curl ${extra_commands} ${curl_extra_commands} "${final_url}"</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20230717 19:56:06.444" level="INFO">Starting process:
curl  --negotiate -u : "http://httpfs:14000/webhdfs/v1/wpvqr/buck1/testfile?op=LISTSTATUS"</msg>
<msg timestamp="20230717 19:56:06.461" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230717 19:56:06.627" level="INFO">Process completed.</msg>
<msg timestamp="20230717 19:56:06.627" level="INFO">${output} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230717 19:56:06.443" endtime="20230717 19:56:06.627"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${output.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:56:06.630" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:56:06.628" endtime="20230717 19:56:06.630"/>
</kw>
<msg timestamp="20230717 19:56:06.630" level="INFO">${list} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230717 19:56:06.422" endtime="20230717 19:56:06.630"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${list.stdout}</arg>
<arg>FileStatus</arg>
<arg>FILE</arg>
<arg>13</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:56:06.631" endtime="20230717 19:56:06.632"/>
</kw>
<status status="PASS" starttime="20230717 19:56:06.418" endtime="20230717 19:56:06.633"/>
</test>
<test id="s1-s12-s1-t15" name="Get content summary of directory" line="100">
<kw name="Execute curl command" library="operations">
<var>${summary}</var>
<arg>${volume}</arg>
<arg>GETCONTENTSUMMARY</arg>
<arg>${EMPTY}</arg>
<kw name="Set Variable If" library="BuiltIn">
<var>${user.name}</var>
<arg>'${SECURITY_ENABLED}'=='false'</arg>
<arg>&amp;user.name=${USERNAME}</arg>
<arg>${EMPTY}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230717 19:56:06.660" level="INFO">${user.name} = </msg>
<status status="PASS" starttime="20230717 19:56:06.647" endtime="20230717 19:56:06.660"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${final_url}</var>
<arg>SEPARATOR=</arg>
<arg>${URL}</arg>
<arg>${path}</arg>
<arg>?op=</arg>
<arg>${operation}</arg>
<arg>${user.name}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230717 19:56:06.666" level="INFO">${final_url} = http://httpfs:14000/webhdfs/v1/wpvqr?op=GETCONTENTSUMMARY</msg>
<status status="PASS" starttime="20230717 19:56:06.661" endtime="20230717 19:56:06.668"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${curl_extra_commands}</var>
<arg>'${SECURITY_ENABLED}'=='true'</arg>
<arg>--negotiate -u :</arg>
<arg>${EMPTY}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230717 19:56:06.668" level="INFO">${curl_extra_commands} = --negotiate -u :</msg>
<status status="PASS" starttime="20230717 19:56:06.668" endtime="20230717 19:56:06.671"/>
</kw>
<kw name="Run Process" library="Process">
<var>${output}</var>
<arg>curl ${extra_commands} ${curl_extra_commands} "${final_url}"</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20230717 19:56:06.675" level="INFO">Starting process:
curl  --negotiate -u : "http://httpfs:14000/webhdfs/v1/wpvqr?op=GETCONTENTSUMMARY"</msg>
<msg timestamp="20230717 19:56:06.697" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230717 19:56:06.854" level="INFO">Process completed.</msg>
<msg timestamp="20230717 19:56:06.855" level="INFO">${output} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230717 19:56:06.671" endtime="20230717 19:56:06.855"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${output.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:56:06.858" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:56:06.855" endtime="20230717 19:56:06.858"/>
</kw>
<msg timestamp="20230717 19:56:06.859" level="INFO">${summary} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230717 19:56:06.642" endtime="20230717 19:56:06.859"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${summary.stdout}</arg>
<arg>ContentSummary</arg>
<arg>"directoryCount":2</arg>
<arg>"fileCount":1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:56:06.859" endtime="20230717 19:56:06.860"/>
</kw>
<status status="PASS" starttime="20230717 19:56:06.637" endtime="20230717 19:56:06.861"/>
</test>
<test id="s1-s12-s1-t16" name="Get quota usage of directory" line="104">
<kw name="Execute curl command" library="operations">
<var>${usage}</var>
<arg>${volume}</arg>
<arg>GETQUOTAUSAGE</arg>
<arg>${EMPTY}</arg>
<kw name="Set Variable If" library="BuiltIn">
<var>${user.name}</var>
<arg>'${SECURITY_ENABLED}'=='false'</arg>
<arg>&amp;user.name=${USERNAME}</arg>
<arg>${EMPTY}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230717 19:56:06.909" level="INFO">${user.name} = </msg>
<status status="PASS" starttime="20230717 19:56:06.886" endtime="20230717 19:56:06.909"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${final_url}</var>
<arg>SEPARATOR=</arg>
<arg>${URL}</arg>
<arg>${path}</arg>
<arg>?op=</arg>
<arg>${operation}</arg>
<arg>${user.name}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230717 19:56:06.913" level="INFO">${final_url} = http://httpfs:14000/webhdfs/v1/wpvqr?op=GETQUOTAUSAGE</msg>
<status status="PASS" starttime="20230717 19:56:06.910" endtime="20230717 19:56:06.913"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${curl_extra_commands}</var>
<arg>'${SECURITY_ENABLED}'=='true'</arg>
<arg>--negotiate -u :</arg>
<arg>${EMPTY}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230717 19:56:06.916" level="INFO">${curl_extra_commands} = --negotiate -u :</msg>
<status status="PASS" starttime="20230717 19:56:06.914" endtime="20230717 19:56:06.916"/>
</kw>
<kw name="Run Process" library="Process">
<var>${output}</var>
<arg>curl ${extra_commands} ${curl_extra_commands} "${final_url}"</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20230717 19:56:06.919" level="INFO">Starting process:
curl  --negotiate -u : "http://httpfs:14000/webhdfs/v1/wpvqr?op=GETQUOTAUSAGE"</msg>
<msg timestamp="20230717 19:56:06.933" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230717 19:56:07.132" level="INFO">Process completed.</msg>
<msg timestamp="20230717 19:56:07.133" level="INFO">${output} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230717 19:56:06.916" endtime="20230717 19:56:07.133"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${output.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:56:07.136" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:56:07.133" endtime="20230717 19:56:07.136"/>
</kw>
<msg timestamp="20230717 19:56:07.136" level="INFO">${usage} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230717 19:56:06.868" endtime="20230717 19:56:07.136"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${usage.stdout}</arg>
<arg>QuotaUsage</arg>
<arg>"fileAndDirectoryCount":3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:56:07.136" endtime="20230717 19:56:07.138"/>
</kw>
<status status="PASS" starttime="20230717 19:56:06.863" endtime="20230717 19:56:07.138"/>
</test>
<test id="s1-s12-s1-t17" name="Get home directory" line="108">
<kw name="Execute curl command" library="operations">
<var>${home}</var>
<arg>${EMPTY}</arg>
<arg>GETHOMEDIRECTORY</arg>
<arg>${EMPTY}</arg>
<kw name="Set Variable If" library="BuiltIn">
<var>${user.name}</var>
<arg>'${SECURITY_ENABLED}'=='false'</arg>
<arg>&amp;user.name=${USERNAME}</arg>
<arg>${EMPTY}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230717 19:56:07.179" level="INFO">${user.name} = </msg>
<status status="PASS" starttime="20230717 19:56:07.152" endtime="20230717 19:56:07.179"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${final_url}</var>
<arg>SEPARATOR=</arg>
<arg>${URL}</arg>
<arg>${path}</arg>
<arg>?op=</arg>
<arg>${operation}</arg>
<arg>${user.name}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230717 19:56:07.186" level="INFO">${final_url} = http://httpfs:14000/webhdfs/v1/?op=GETHOMEDIRECTORY</msg>
<status status="PASS" starttime="20230717 19:56:07.181" endtime="20230717 19:56:07.186"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${curl_extra_commands}</var>
<arg>'${SECURITY_ENABLED}'=='true'</arg>
<arg>--negotiate -u :</arg>
<arg>${EMPTY}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230717 19:56:07.193" level="INFO">${curl_extra_commands} = --negotiate -u :</msg>
<status status="PASS" starttime="20230717 19:56:07.188" endtime="20230717 19:56:07.194"/>
</kw>
<kw name="Run Process" library="Process">
<var>${output}</var>
<arg>curl ${extra_commands} ${curl_extra_commands} "${final_url}"</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20230717 19:56:07.199" level="INFO">Starting process:
curl  --negotiate -u : "http://httpfs:14000/webhdfs/v1/?op=GETHOMEDIRECTORY"</msg>
<msg timestamp="20230717 19:56:07.212" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230717 19:56:07.298" level="INFO">Process completed.</msg>
<msg timestamp="20230717 19:56:07.298" level="INFO">${output} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230717 19:56:07.194" endtime="20230717 19:56:07.298"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${output.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:56:07.301" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:56:07.299" endtime="20230717 19:56:07.301"/>
</kw>
<msg timestamp="20230717 19:56:07.302" level="INFO">${home} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230717 19:56:07.144" endtime="20230717 19:56:07.302"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${user}</var>
<arg>'${SECURITY_ENABLED}'=='true'</arg>
<arg>testuser</arg>
<arg>${USERNAME}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230717 19:56:07.303" level="INFO">${user} = testuser</msg>
<status status="PASS" starttime="20230717 19:56:07.302" endtime="20230717 19:56:07.303"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${home.stdout}</arg>
<arg>"Path":"\\/user\\/${user}"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:56:07.303" endtime="20230717 19:56:07.309"/>
</kw>
<status status="PASS" starttime="20230717 19:56:07.139" endtime="20230717 19:56:07.309"/>
</test>
<test id="s1-s12-s1-t18" name="Get trash root" line="113">
<kw name="Execute curl command" library="operations">
<var>${trash}</var>
<arg>${volume}/buck1/testfile</arg>
<arg>GETTRASHROOT</arg>
<arg>${EMPTY}</arg>
<kw name="Set Variable If" library="BuiltIn">
<var>${user.name}</var>
<arg>'${SECURITY_ENABLED}'=='false'</arg>
<arg>&amp;user.name=${USERNAME}</arg>
<arg>${EMPTY}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230717 19:56:07.349" level="INFO">${user.name} = </msg>
<status status="PASS" starttime="20230717 19:56:07.328" endtime="20230717 19:56:07.349"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${final_url}</var>
<arg>SEPARATOR=</arg>
<arg>${URL}</arg>
<arg>${path}</arg>
<arg>?op=</arg>
<arg>${operation}</arg>
<arg>${user.name}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230717 19:56:07.354" level="INFO">${final_url} = http://httpfs:14000/webhdfs/v1/wpvqr/buck1/testfile?op=GETTRASHROOT</msg>
<status status="PASS" starttime="20230717 19:56:07.349" endtime="20230717 19:56:07.354"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${curl_extra_commands}</var>
<arg>'${SECURITY_ENABLED}'=='true'</arg>
<arg>--negotiate -u :</arg>
<arg>${EMPTY}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230717 19:56:07.357" level="INFO">${curl_extra_commands} = --negotiate -u :</msg>
<status status="PASS" starttime="20230717 19:56:07.355" endtime="20230717 19:56:07.357"/>
</kw>
<kw name="Run Process" library="Process">
<var>${output}</var>
<arg>curl ${extra_commands} ${curl_extra_commands} "${final_url}"</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20230717 19:56:07.362" level="INFO">Starting process:
curl  --negotiate -u : "http://httpfs:14000/webhdfs/v1/wpvqr/buck1/testfile?op=GETTRASHROOT"</msg>
<msg timestamp="20230717 19:56:07.386" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20230717 19:56:07.570" level="INFO">Process completed.</msg>
<msg timestamp="20230717 19:56:07.571" level="INFO">${output} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230717 19:56:07.361" endtime="20230717 19:56:07.571"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${output.rc}</arg>
<arg>0</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:56:07.575" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:56:07.572" endtime="20230717 19:56:07.575"/>
</kw>
<msg timestamp="20230717 19:56:07.576" level="INFO">${trash} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20230717 19:56:07.315" endtime="20230717 19:56:07.576"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${user}</var>
<arg>'${SECURITY_ENABLED}'=='true'</arg>
<arg>testuser</arg>
<arg>${USERNAME}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230717 19:56:07.577" level="INFO">${user} = testuser</msg>
<status status="PASS" starttime="20230717 19:56:07.576" endtime="20230717 19:56:07.577"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${trash.stdout}</arg>
<arg>"Path":"\\/${volume}\\/buck1\\/.Trash\\/${user}"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:56:07.580" endtime="20230717 19:56:07.585"/>
</kw>
<status status="PASS" starttime="20230717 19:56:07.312" endtime="20230717 19:56:07.587"/>
</test>
<doc>HttpFS gateway test with curl commands</doc>
<status status="PASS" starttime="20230717 19:55:24.284" endtime="20230717 19:56:07.593"/>
</suite>
<status status="PASS" starttime="20230717 19:55:24.226" endtime="20230717 19:56:07.611"/>
</suite>
<suite id="s1-s13" name="Admincli" source="/opt/hadoop/smoketest/admincli">
<suite id="s1-s13-s1" name="Admin" source="/opt/hadoop/smoketest/admincli/admin.robot">
<test id="s1-s13-s1-t1" name="Incomplete command" line="23">
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>ozone admin</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:56:14.370" level="INFO">Running command 'ozone admin 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:56:26.643" level="INFO">${rc} = 2</msg>
<msg timestamp="20230717 19:56:26.643" level="INFO">${output} = Incomplete command
Usage: ozone admin [-hV] [--verbose] [-conf=&lt;configurationPath&gt;]
                   [-D=&lt;String=String&gt;]... [COMMAND]
Developer tools for Ozone Admin operations
      -conf=&lt;configu...</msg>
<status status="PASS" starttime="20230717 19:56:14.363" endtime="20230717 19:56:26.643"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:56:26.651" level="INFO">Incomplete command
Usage: ozone admin [-hV] [--verbose] [-conf=&lt;configurationPath&gt;]
                   [-D=&lt;String=String&gt;]... [COMMAND]
Developer tools for Ozone Admin operations
      -conf=&lt;configurationPath&gt;

  -D, --set=&lt;String=String&gt;

  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
      --verbose   More verbose output. Show the stack trace of the errors.
Commands:
  containerbalancer   ContainerBalancer specific operations
  replicationmanager  ReplicationManager specific operations
  safemode            Safe mode specific operations
  printTopology       Print a tree of the network topology as reported by SCM
  cert                Certificate related operations
  container           Container specific operations
  datanode            Datanode specific operations
  pipeline            Pipeline specific operations
  namespace           Namespace Summary specific admin operations
  om                  Ozone Manager specific admin operations
  reconfig            Dynamically reconfigure server without restarting it
  scm                 Ozone Storage Container Manager specific admin operations</msg>
<status status="PASS" starttime="20230717 19:56:26.648" endtime="20230717 19:56:26.651"/>
</kw>
<msg timestamp="20230717 19:56:26.654" level="INFO">${output} = Incomplete command
Usage: ozone admin [-hV] [--verbose] [-conf=&lt;configurationPath&gt;]
                   [-D=&lt;String=String&gt;]... [COMMAND]
Developer tools for Ozone Admin operations
      -conf=&lt;configu...</msg>
<status status="PASS" starttime="20230717 19:56:14.362" endtime="20230717 19:56:26.654"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Incomplete command</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:56:26.654" endtime="20230717 19:56:26.657"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>container</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:56:26.657" endtime="20230717 19:56:26.658"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>datanode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:56:26.658" endtime="20230717 19:56:26.659"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:56:26.659" endtime="20230717 19:56:26.659"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>pipeline</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:56:26.661" endtime="20230717 19:56:26.662"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>replicationmanager</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:56:26.665" endtime="20230717 19:56:26.666"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>safemode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:56:26.666" endtime="20230717 19:56:26.668"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>printTopology</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:56:26.668" endtime="20230717 19:56:26.670"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:56:14.361" endtime="20230717 19:56:26.672"/>
</test>
<doc>Test ozone admin command</doc>
<status status="PASS" starttime="20230717 19:56:14.295" endtime="20230717 19:56:26.677"/>
</suite>
<suite id="s1-s13-s2" name="Container" source="/opt/hadoop/smoketest/admincli/container.robot">
<kw name="Create test data" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:56:26.717" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:56:26.724" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:56:26.726" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20230717 19:56:26.709" endtime="20230717 19:56:26.726"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:56:26.730" level="INFO">s3g</msg>
<status status="PASS" starttime="20230717 19:56:26.728" endtime="20230717 19:56:26.730"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:56:26.734" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:56:26.732" endtime="20230717 19:56:26.734"/>
</kw>
<status status="PASS" starttime="20230717 19:56:26.707" endtime="20230717 19:56:26.734"/>
</kw>
<msg timestamp="20230717 19:56:26.734" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:56:26.706" endtime="20230717 19:56:26.735"/>
</kw>
<msg timestamp="20230717 19:56:26.735" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20230717 19:56:26.706" endtime="20230717 19:56:26.735"/>
</kw>
<msg timestamp="20230717 19:56:26.735" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230717 19:56:26.704" endtime="20230717 19:56:26.735"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230717 19:56:26.736" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230717 19:56:26.735" endtime="20230717 19:56:26.736"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:56:26.743" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:56:26.780" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:56:26.780" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:56:26.738" endtime="20230717 19:56:26.781"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:56:26.782" level="INFO"/>
<status status="PASS" starttime="20230717 19:56:26.781" endtime="20230717 19:56:26.782"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:56:26.783" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:56:26.783" endtime="20230717 19:56:26.784"/>
</kw>
<status status="PASS" starttime="20230717 19:56:26.738" endtime="20230717 19:56:26.784"/>
</kw>
<msg timestamp="20230717 19:56:26.784" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:56:26.737" endtime="20230717 19:56:26.784"/>
</kw>
<status status="PASS" starttime="20230717 19:56:26.737" endtime="20230717 19:56:26.784"/>
</kw>
<status status="PASS" starttime="20230717 19:56:26.736" endtime="20230717 19:56:26.784"/>
</kw>
<status status="PASS" starttime="20230717 19:56:26.704" endtime="20230717 19:56:26.785"/>
</kw>
<status status="PASS" starttime="20230717 19:56:26.703" endtime="20230717 19:56:26.786"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone freon ockg -n1 -t1 -p container</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:56:26.795" level="INFO">Running command 'ozone freon ockg -n1 -t1 -p container 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:56:53.513" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:56:53.513" level="INFO">${output} = 2023-07-17 19:56:35,422 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-17 19:56:35,875 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230717 19:56:26.790" endtime="20230717 19:56:53.513"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:56:53.515" level="INFO">2023-07-17 19:56:35,422 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-17 19:56:35,875 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-07-17 19:56:35,875 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-07-17 19:56:36,258 [main] INFO freon.BaseFreonGenerator: Executing test with prefix container and number-of-tests 1
2023-07-17 19:56:36,492 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-17 19:56:37,495 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-17 19:56:38,496 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-17 19:56:39,497 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-17 19:56:40,508 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-17 19:56:41,510 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-17 19:56:42,510 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-17 19:56:43,511 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-17 19:56:44,512 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-17 19:56:45,513 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-17 19:56:45,656 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-07-17 19:56:45,993 [pool-2-thread-1] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig0-
2023-07-17 19:56:46,514 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-17 19:56:47,484 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-07-17 19:56:47,514 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-17 19:56:48,516 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-17 19:56:49,518 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-17 19:56:50,523 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-17 19:56:51,527 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-17 19:56:52,527 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-07-17 19:56:53,056 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=7176.64218, max=7176.64218, mean=7176.64218, stddev=0.0, median=7176.64218, p75=7176.64218, p95=7176.64218, p98=7176.64218, p99=7176.64218, p999=7176.64218, mean_rate=0.11552228498447718, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-07-17 19:56:53,057 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 17
2023-07-17 19:56:53,059 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-07-17 19:56:53,059 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230717 19:56:53.514" endtime="20230717 19:56:53.515"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:56:53.516" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:56:53.515" endtime="20230717 19:56:53.516"/>
</kw>
<status status="PASS" starttime="20230717 19:56:26.788" endtime="20230717 19:56:53.516"/>
</kw>
<msg timestamp="20230717 19:56:53.517" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:56:26.786" endtime="20230717 19:56:53.517"/>
</kw>
<status status="PASS" starttime="20230717 19:56:26.786" endtime="20230717 19:56:53.517"/>
</kw>
<status status="PASS" starttime="20230717 19:56:26.702" endtime="20230717 19:56:53.518"/>
</kw>
<test id="s1-s13-s2-t1" name="Create container" line="38">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container create</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:56:53.529" level="INFO">Running command 'ozone admin container create 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:57:17.134" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:57:17.134" level="INFO">${output} = Loaded properties from hadoop-metrics2.properties
Scheduled Metric snapshot period at 10 second(s).
XceiverClientMetrics metrics system started
Container 4 is created.</msg>
<status status="PASS" starttime="20230717 19:56:53.524" endtime="20230717 19:57:17.134"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:57:17.136" level="INFO">Loaded properties from hadoop-metrics2.properties
Scheduled Metric snapshot period at 10 second(s).
XceiverClientMetrics metrics system started
Container 4 is created.</msg>
<status status="PASS" starttime="20230717 19:57:17.135" endtime="20230717 19:57:17.136"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:57:17.136" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:57:17.136" endtime="20230717 19:57:17.136"/>
</kw>
<status status="PASS" starttime="20230717 19:56:53.524" endtime="20230717 19:57:17.137"/>
</kw>
<msg timestamp="20230717 19:57:17.137" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:56:53.521" endtime="20230717 19:57:17.137"/>
</kw>
<msg timestamp="20230717 19:57:17.137" level="INFO">${output} = Loaded properties from hadoop-metrics2.properties
Scheduled Metric snapshot period at 10 second(s).
XceiverClientMetrics metrics system started
Container 4 is created.</msg>
<status status="PASS" starttime="20230717 19:56:53.521" endtime="20230717 19:57:17.137"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>is created</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:57:17.137" endtime="20230717 19:57:17.138"/>
</kw>
<kw name="Execute" library="os">
<var>${container}</var>
<arg>echo "${output}" | grep 'is created' | cut -f2 -d' '</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:57:17.148" level="INFO">Running command 'echo "Loaded properties from hadoop-metrics2.properties
Scheduled Metric snapshot period at 10 second(s).
XceiverClientMetrics metrics system started
Container 4 is created." | grep 'is created' | cut -f2 -d' ' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:57:17.159" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:57:17.159" level="INFO">${output} = 4</msg>
<status status="PASS" starttime="20230717 19:57:17.142" endtime="20230717 19:57:17.159"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:57:17.163" level="INFO">4</msg>
<status status="PASS" starttime="20230717 19:57:17.160" endtime="20230717 19:57:17.163"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:57:17.165" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:57:17.164" endtime="20230717 19:57:17.166"/>
</kw>
<status status="PASS" starttime="20230717 19:57:17.139" endtime="20230717 19:57:17.166"/>
</kw>
<msg timestamp="20230717 19:57:17.166" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:57:17.139" endtime="20230717 19:57:17.167"/>
</kw>
<msg timestamp="20230717 19:57:17.167" level="INFO">${container} = 4</msg>
<status status="PASS" starttime="20230717 19:57:17.138" endtime="20230717 19:57:17.167"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${CONTAINER}</arg>
<arg>${container}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230717 19:57:17.169" level="INFO">${CONTAINER} = 4</msg>
<status status="PASS" starttime="20230717 19:57:17.168" endtime="20230717 19:57:17.169"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:56:53.518" endtime="20230717 19:57:17.171"/>
</test>
<test id="s1-s13-s2-t2" name="List containers" line="44">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:57:17.181" level="INFO">Running command 'ozone admin container list 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:57:34.080" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:57:34.080" level="INFO">${output} = {
  "state" : "CLOSED",
  "stateEnterTime" : "2023-07-17T19:44:36.655Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 193064764,
  ...</msg>
<status status="PASS" starttime="20230717 19:57:17.176" endtime="20230717 19:57:34.080"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:57:34.082" level="INFO">{
  "state" : "CLOSED",
  "stateEnterTime" : "2023-07-17T19:44:36.655Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 193064764,
  "numberOfKeys" : 114,
  "lastUsed" : "2023-07-17T19:57:33.554499Z",
  "owner" : "om1",
  "containerID" : 1,
  "deleteTransactionId" : 27,
  "sequenceId" : 424,
  "open" : false,
  "deleted" : false
}
{
  "state" : "OPEN",
  "stateEnterTime" : "2023-07-17T18:45:54.343Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 138542157,
  "numberOfKeys" : 121,
  "lastUsed" : "2023-07-17T19:57:33.554568Z",
  "owner" : "om1",
  "containerID" : 2,
  "deleteTransactionId" : 29,
  "sequenceId" : 469,
  "open" : true,
  "deleted" : false
}
{
  "state" : "OPEN",
  "stateEnterTime" : "2023-07-17T19:41:28.742Z",
  "replicationConfig" : {
    "replicationFactor" : "ONE",
    "replicationType" : "STANDALONE"
  },
  "usedBytes" : 0,
  "numberOfKeys" : 0,
  "lastUsed" : "2023-07-17T19:57:33.559390Z",
  "owner" : "OZONE",
  "containerID" : 3,
  "deleteTransactionId" : 0,
  "sequenceId" : 0,
  "open" : true,
  "deleted" : false
}
{
  "state" : "OPEN",
  "stateEnterTime" : "2023-07-17T19:57:10.628Z",
  "replicationConfig" : {
    "replicationFactor" : "ONE",
    "replicationType" : "STANDALONE"
  },
  "usedBytes" : 0,
  "numberOfKeys" : 0,
  "lastUsed" : "2023-07-17T19:57:33.559417Z",
  "owner" : "OZONE",
  "containerID" : 4,
  "deleteTransactionId" : 0,
  "sequenceId" : 0,
  "open" : true,
  "deleted" : false
}</msg>
<status status="PASS" starttime="20230717 19:57:34.081" endtime="20230717 19:57:34.082"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:57:34.083" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:57:34.082" endtime="20230717 19:57:34.083"/>
</kw>
<status status="PASS" starttime="20230717 19:57:17.175" endtime="20230717 19:57:34.084"/>
</kw>
<msg timestamp="20230717 19:57:34.084" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:57:17.175" endtime="20230717 19:57:34.084"/>
</kw>
<msg timestamp="20230717 19:57:34.084" level="INFO">${output} = {
  "state" : "CLOSED",
  "stateEnterTime" : "2023-07-17T19:44:36.655Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 193064764,
  ...</msg>
<status status="PASS" starttime="20230717 19:57:17.174" endtime="20230717 19:57:34.084"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>OPEN</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:57:34.085" endtime="20230717 19:57:34.086"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:57:17.172" endtime="20230717 19:57:34.086"/>
</test>
<test id="s1-s13-s2-t3" name="List containers with explicit host" line="48">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container list --scm ${SCM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:57:34.103" level="INFO">Running command 'ozone admin container list --scm scm2.org 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:57:48.997" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:57:48.997" level="INFO">${output} = {
  "state" : "CLOSED",
  "stateEnterTime" : "2023-07-17T19:44:36.655Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 193064764,
  ...</msg>
<status status="PASS" starttime="20230717 19:57:34.097" endtime="20230717 19:57:48.997"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:57:49.000" level="INFO">{
  "state" : "CLOSED",
  "stateEnterTime" : "2023-07-17T19:44:36.655Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 193064764,
  "numberOfKeys" : 114,
  "lastUsed" : "2023-07-17T19:57:48.604174Z",
  "owner" : "om1",
  "containerID" : 1,
  "deleteTransactionId" : 27,
  "sequenceId" : 424,
  "open" : false,
  "deleted" : false
}
{
  "state" : "OPEN",
  "stateEnterTime" : "2023-07-17T18:45:54.343Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 138552410,
  "numberOfKeys" : 123,
  "lastUsed" : "2023-07-17T19:57:48.604231Z",
  "owner" : "om1",
  "containerID" : 2,
  "deleteTransactionId" : 29,
  "sequenceId" : 469,
  "open" : true,
  "deleted" : false
}
{
  "state" : "OPEN",
  "stateEnterTime" : "2023-07-17T19:41:28.742Z",
  "replicationConfig" : {
    "replicationFactor" : "ONE",
    "replicationType" : "STANDALONE"
  },
  "usedBytes" : 0,
  "numberOfKeys" : 0,
  "lastUsed" : "2023-07-17T19:57:48.607173Z",
  "owner" : "OZONE",
  "containerID" : 3,
  "deleteTransactionId" : 0,
  "sequenceId" : 0,
  "open" : true,
  "deleted" : false
}
{
  "state" : "OPEN",
  "stateEnterTime" : "2023-07-17T19:57:10.628Z",
  "replicationConfig" : {
    "replicationFactor" : "ONE",
    "replicationType" : "STANDALONE"
  },
  "usedBytes" : 0,
  "numberOfKeys" : 0,
  "lastUsed" : "2023-07-17T19:57:48.607458Z",
  "owner" : "OZONE",
  "containerID" : 4,
  "deleteTransactionId" : 0,
  "sequenceId" : 0,
  "open" : true,
  "deleted" : false
}</msg>
<status status="PASS" starttime="20230717 19:57:48.999" endtime="20230717 19:57:49.002"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:57:49.003" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:57:49.002" endtime="20230717 19:57:49.003"/>
</kw>
<status status="PASS" starttime="20230717 19:57:34.096" endtime="20230717 19:57:49.003"/>
</kw>
<msg timestamp="20230717 19:57:49.003" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:57:34.095" endtime="20230717 19:57:49.005"/>
</kw>
<msg timestamp="20230717 19:57:49.005" level="INFO">${output} = {
  "state" : "CLOSED",
  "stateEnterTime" : "2023-07-17T19:44:36.655Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 193064764,
  ...</msg>
<status status="PASS" starttime="20230717 19:57:34.093" endtime="20230717 19:57:49.005"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>OPEN</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:57:49.005" endtime="20230717 19:57:49.006"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:57:34.089" endtime="20230717 19:57:49.007"/>
</test>
<test id="s1-s13-s2-t4" name="List containers with container state" line="52">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container list --state=CLOSED</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:57:49.023" level="INFO">Running command 'ozone admin container list --state=CLOSED 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:58:04.260" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:58:04.260" level="INFO">${output} = {
  "state" : "CLOSED",
  "stateEnterTime" : "2023-07-17T19:44:36.655Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 193064764,
  ...</msg>
<status status="PASS" starttime="20230717 19:57:49.016" endtime="20230717 19:58:04.260"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:58:04.262" level="INFO">{
  "state" : "CLOSED",
  "stateEnterTime" : "2023-07-17T19:44:36.655Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 193064764,
  "numberOfKeys" : 114,
  "lastUsed" : "2023-07-17T19:58:03.800048Z",
  "owner" : "om1",
  "containerID" : 1,
  "deleteTransactionId" : 27,
  "sequenceId" : 424,
  "open" : false,
  "deleted" : false
}</msg>
<status status="PASS" starttime="20230717 19:58:04.261" endtime="20230717 19:58:04.262"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:58:04.265" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:58:04.263" endtime="20230717 19:58:04.266"/>
</kw>
<status status="PASS" starttime="20230717 19:57:49.015" endtime="20230717 19:58:04.266"/>
</kw>
<msg timestamp="20230717 19:58:04.266" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:57:49.014" endtime="20230717 19:58:04.267"/>
</kw>
<msg timestamp="20230717 19:58:04.267" level="INFO">${output} = {
  "state" : "CLOSED",
  "stateEnterTime" : "2023-07-17T19:44:36.655Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 193064764,
  ...</msg>
<status status="PASS" starttime="20230717 19:57:49.013" endtime="20230717 19:58:04.267"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>OPEN</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:58:04.267" endtime="20230717 19:58:04.268"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:57:49.010" endtime="20230717 19:58:04.269"/>
</test>
<test id="s1-s13-s2-t5" name="List containers with replication factor ONE" line="56">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container list -t RATIS -r ONE</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:58:04.283" level="INFO">Running command 'ozone admin container list -t RATIS -r ONE 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:58:19.432" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:58:19.432" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:58:04.278" endtime="20230717 19:58:19.432"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:58:19.437" level="INFO"/>
<status status="PASS" starttime="20230717 19:58:19.433" endtime="20230717 19:58:19.437"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:58:19.438" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:58:19.437" endtime="20230717 19:58:19.438"/>
</kw>
<status status="PASS" starttime="20230717 19:58:04.277" endtime="20230717 19:58:19.439"/>
</kw>
<msg timestamp="20230717 19:58:19.439" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:58:04.277" endtime="20230717 19:58:19.439"/>
</kw>
<msg timestamp="20230717 19:58:19.439" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:58:04.275" endtime="20230717 19:58:19.439"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>THREE</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:58:19.439" endtime="20230717 19:58:19.440"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:58:04.272" endtime="20230717 19:58:19.441"/>
</test>
<test id="s1-s13-s2-t6" name="List containers with replication factor THREE" line="60">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container list -t RATIS -r THREE</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:58:19.454" level="INFO">Running command 'ozone admin container list -t RATIS -r THREE 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:58:35.568" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:58:35.568" level="INFO">${output} = {
  "state" : "CLOSED",
  "stateEnterTime" : "2023-07-17T19:44:36.655Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 193064764,
  ...</msg>
<status status="PASS" starttime="20230717 19:58:19.449" endtime="20230717 19:58:35.568"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:58:35.573" level="INFO">{
  "state" : "CLOSED",
  "stateEnterTime" : "2023-07-17T19:44:36.655Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 193064764,
  "numberOfKeys" : 114,
  "lastUsed" : "2023-07-17T19:58:35.130699Z",
  "owner" : "om1",
  "containerID" : 1,
  "deleteTransactionId" : 27,
  "sequenceId" : 424,
  "open" : false,
  "deleted" : false
}
{
  "state" : "OPEN",
  "stateEnterTime" : "2023-07-17T18:45:54.343Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 138552410,
  "numberOfKeys" : 123,
  "lastUsed" : "2023-07-17T19:58:35.130766Z",
  "owner" : "om1",
  "containerID" : 2,
  "deleteTransactionId" : 29,
  "sequenceId" : 469,
  "open" : true,
  "deleted" : false
}</msg>
<status status="PASS" starttime="20230717 19:58:35.570" endtime="20230717 19:58:35.573"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:58:35.578" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:58:35.573" endtime="20230717 19:58:35.578"/>
</kw>
<status status="PASS" starttime="20230717 19:58:19.448" endtime="20230717 19:58:35.579"/>
</kw>
<msg timestamp="20230717 19:58:35.579" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:58:19.448" endtime="20230717 19:58:35.579"/>
</kw>
<msg timestamp="20230717 19:58:35.579" level="INFO">${output} = {
  "state" : "CLOSED",
  "stateEnterTime" : "2023-07-17T19:44:36.655Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "replicationType" : "RATIS"
  },
  "usedBytes" : 193064764,
  ...</msg>
<status status="PASS" starttime="20230717 19:58:19.447" endtime="20230717 19:58:35.579"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>ONE</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:58:35.580" endtime="20230717 19:58:35.581"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:58:19.446" endtime="20230717 19:58:35.581"/>
</test>
<test id="s1-s13-s2-t7" name="Container info" line="64">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info "${CONTAINER}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:58:35.594" level="INFO">Running command 'ozone admin container info "4" 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:58:50.947" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:58:50.948" level="INFO">${output} = Container id: 4
Pipeline id: 80e0342c-f4f7-4e2e-a6ae-99a56bac1e64
Container State: OPEN
Datanodes: [cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe/ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net]
Replicas: ...</msg>
<status status="PASS" starttime="20230717 19:58:35.588" endtime="20230717 19:58:50.948"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:58:50.951" level="INFO">Container id: 4
Pipeline id: 80e0342c-f4f7-4e2e-a6ae-99a56bac1e64
Container State: OPEN
Datanodes: [cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe/ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net]
Replicas: [State: OPEN; ReplicaIndex: 0; Origin: cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe; Location: cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe/ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net]</msg>
<status status="PASS" starttime="20230717 19:58:50.949" endtime="20230717 19:58:50.952"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:58:50.954" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:58:50.952" endtime="20230717 19:58:50.954"/>
</kw>
<status status="PASS" starttime="20230717 19:58:35.587" endtime="20230717 19:58:50.954"/>
</kw>
<msg timestamp="20230717 19:58:50.955" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:58:35.586" endtime="20230717 19:58:50.956"/>
</kw>
<msg timestamp="20230717 19:58:50.956" level="INFO">${output} = Container id: 4
Pipeline id: 80e0342c-f4f7-4e2e-a6ae-99a56bac1e64
Container State: OPEN
Datanodes: [cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe/ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net]
Replicas: ...</msg>
<status status="PASS" starttime="20230717 19:58:35.585" endtime="20230717 19:58:50.956"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Container id: ${CONTAINER}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:58:50.956" endtime="20230717 19:58:50.959"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Pipeline id</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:58:50.960" endtime="20230717 19:58:50.962"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Datanodes</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:58:50.962" endtime="20230717 19:58:50.965"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:58:35.583" endtime="20230717 19:58:50.965"/>
</test>
<test id="s1-s13-s2-t8" name="Verbose container info" line="70">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin --verbose container info "${CONTAINER}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:58:50.979" level="INFO">Running command 'ozone admin --verbose container info "4" 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:59:05.948" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:59:05.948" level="INFO">${output} = Container id: 4
Pipeline Info: Pipeline[ Id: 80e0342c-f4f7-4e2e-a6ae-99a56bac1e64, Nodes: cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe(ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net/172.25.0.104), Replic...</msg>
<status status="PASS" starttime="20230717 19:58:50.972" endtime="20230717 19:59:05.949"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:59:05.954" level="INFO">Container id: 4
Pipeline Info: Pipeline[ Id: 80e0342c-f4f7-4e2e-a6ae-99a56bac1e64, Nodes: cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe(ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net/172.25.0.104), ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2023-07-17T19:41:28.703Z[UTC]]
Container State: OPEN
Datanodes: [cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe/ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net]
Replicas: [State: OPEN; ReplicaIndex: 0; Origin: cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe; Location: cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe/ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net]</msg>
<status status="PASS" starttime="20230717 19:59:05.949" endtime="20230717 19:59:05.955"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:59:05.957" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:59:05.955" endtime="20230717 19:59:05.957"/>
</kw>
<status status="PASS" starttime="20230717 19:58:50.971" endtime="20230717 19:59:05.958"/>
</kw>
<msg timestamp="20230717 19:59:05.958" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:58:50.971" endtime="20230717 19:59:05.959"/>
</kw>
<msg timestamp="20230717 19:59:05.959" level="INFO">${output} = Container id: 4
Pipeline Info: Pipeline[ Id: 80e0342c-f4f7-4e2e-a6ae-99a56bac1e64, Nodes: cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe(ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net/172.25.0.104), Replic...</msg>
<status status="PASS" starttime="20230717 19:58:50.969" endtime="20230717 19:59:05.959"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Pipeline Info</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:59:05.959" endtime="20230717 19:59:05.961"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:58:50.966" endtime="20230717 19:59:05.961"/>
</test>
<test id="s1-s13-s2-t9" name="Close container" line="74">
<kw name="Execute" library="os">
<var>${container}</var>
<arg>ozone admin container list --state OPEN | jq -r 'select(.replicationConfig.replicationFactor == "THREE") | .containerID' | head -1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:59:05.977" level="INFO">Running command 'ozone admin container list --state OPEN | jq -r 'select(.replicationConfig.replicationFactor == "THREE") | .containerID' | head -1 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:59:21.170" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:59:21.170" level="INFO">${output} = 2</msg>
<status status="PASS" starttime="20230717 19:59:05.972" endtime="20230717 19:59:21.171"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:59:21.173" level="INFO">2</msg>
<status status="PASS" starttime="20230717 19:59:21.171" endtime="20230717 19:59:21.174"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:59:21.178" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:59:21.175" endtime="20230717 19:59:21.178"/>
</kw>
<status status="PASS" starttime="20230717 19:59:05.969" endtime="20230717 19:59:21.178"/>
</kw>
<msg timestamp="20230717 19:59:21.179" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:59:05.968" endtime="20230717 19:59:21.179"/>
</kw>
<msg timestamp="20230717 19:59:21.179" level="INFO">${container} = 2</msg>
<status status="PASS" starttime="20230717 19:59:05.967" endtime="20230717 19:59:21.179"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone admin container close "${container}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:59:21.195" level="INFO">Running command 'ozone admin container close "2" 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:59:38.113" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:59:38.113" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 19:59:21.186" endtime="20230717 19:59:38.113"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:59:38.116" level="INFO"/>
<status status="PASS" starttime="20230717 19:59:38.114" endtime="20230717 19:59:38.117"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:59:38.120" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:59:38.119" endtime="20230717 19:59:38.120"/>
</kw>
<status status="PASS" starttime="20230717 19:59:21.185" endtime="20230717 19:59:38.120"/>
</kw>
<msg timestamp="20230717 19:59:38.120" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:59:21.183" endtime="20230717 19:59:38.121"/>
</kw>
<status status="PASS" starttime="20230717 19:59:21.179" endtime="20230717 19:59:38.122"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info "${container}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:59:38.132" level="INFO">Running command 'ozone admin container info "2" 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 19:59:55.841" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 19:59:55.841" level="INFO">${output} = Container id: 2
Pipeline id: 4434309e-20b3-4896-aea8-56dfc449007c
Container State: CLOSING
Datanodes: [87c5eb0b-149e-4683-94a4-bc7d39a11a90/ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net,
e9096b0...</msg>
<status status="PASS" starttime="20230717 19:59:38.125" endtime="20230717 19:59:55.841"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 19:59:55.843" level="INFO">Container id: 2
Pipeline id: 4434309e-20b3-4896-aea8-56dfc449007c
Container State: CLOSING
Datanodes: [87c5eb0b-149e-4683-94a4-bc7d39a11a90/ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net,
e9096b01-e48e-4ceb-b568-1d22ceed6cac/ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net,
cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe/ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net]
Replicas: [State: OPEN; ReplicaIndex: 0; Origin: e9096b01-e48e-4ceb-b568-1d22ceed6cac; Location: e9096b01-e48e-4ceb-b568-1d22ceed6cac/ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net,
State: OPEN; ReplicaIndex: 0; Origin: 87c5eb0b-149e-4683-94a4-bc7d39a11a90; Location: 87c5eb0b-149e-4683-94a4-bc7d39a11a90/ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net,
State: CLOSING; ReplicaIndex: 0; Origin: cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe; Location: cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe/ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net]</msg>
<status status="PASS" starttime="20230717 19:59:55.841" endtime="20230717 19:59:55.843"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 19:59:55.844" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 19:59:55.843" endtime="20230717 19:59:55.844"/>
</kw>
<status status="PASS" starttime="20230717 19:59:38.124" endtime="20230717 19:59:55.846"/>
</kw>
<msg timestamp="20230717 19:59:55.846" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:59:38.124" endtime="20230717 19:59:55.846"/>
</kw>
<msg timestamp="20230717 19:59:55.846" level="INFO">${output} = Container id: 2
Pipeline id: 4434309e-20b3-4896-aea8-56dfc449007c
Container State: CLOSING
Datanodes: [87c5eb0b-149e-4683-94a4-bc7d39a11a90/ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net,
e9096b0...</msg>
<status status="PASS" starttime="20230717 19:59:38.122" endtime="20230717 19:59:55.846"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>CLOS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 19:59:55.847" endtime="20230717 19:59:55.847"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>1min</arg>
<arg>10sec</arg>
<arg>Container is closed</arg>
<arg>${container}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Container is closed">
<arg>${container}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info "${container}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 19:59:55.859" level="INFO">Running command 'ozone admin container info "2" 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 20:00:11.042" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 20:00:11.042" level="INFO">${output} = Container id: 2
Pipeline id: 3a611893-f23f-4b5b-868b-b0885d50ae28
Container State: CLOSED
Datanodes: [e9096b01-e48e-4ceb-b568-1d22ceed6cac/ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net,
87c5eb0b...</msg>
<status status="PASS" starttime="20230717 19:59:55.854" endtime="20230717 20:00:11.042"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 20:00:11.047" level="INFO">Container id: 2
Pipeline id: 3a611893-f23f-4b5b-868b-b0885d50ae28
Container State: CLOSED
Datanodes: [e9096b01-e48e-4ceb-b568-1d22ceed6cac/ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net,
87c5eb0b-149e-4683-94a4-bc7d39a11a90/ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net,
cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe/ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net]
Replicas: [State: CLOSED; ReplicaIndex: 0; Origin: e9096b01-e48e-4ceb-b568-1d22ceed6cac; Location: e9096b01-e48e-4ceb-b568-1d22ceed6cac/ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net,
State: CLOSED; ReplicaIndex: 0; Origin: 87c5eb0b-149e-4683-94a4-bc7d39a11a90; Location: 87c5eb0b-149e-4683-94a4-bc7d39a11a90/ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net,
State: CLOSED; ReplicaIndex: 0; Origin: cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe; Location: cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe/ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net]</msg>
<status status="PASS" starttime="20230717 20:00:11.044" endtime="20230717 20:00:11.048"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 20:00:11.050" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 20:00:11.049" endtime="20230717 20:00:11.050"/>
</kw>
<status status="PASS" starttime="20230717 19:59:55.854" endtime="20230717 20:00:11.051"/>
</kw>
<msg timestamp="20230717 20:00:11.051" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 19:59:55.850" endtime="20230717 20:00:11.052"/>
</kw>
<msg timestamp="20230717 20:00:11.053" level="INFO">${output} = Container id: 2
Pipeline id: 3a611893-f23f-4b5b-868b-b0885d50ae28
Container State: CLOSED
Datanodes: [e9096b01-e48e-4ceb-b568-1d22ceed6cac/ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net,
87c5eb0b...</msg>
<status status="PASS" starttime="20230717 19:59:55.849" endtime="20230717 20:00:11.053"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>CLOSED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 20:00:11.053" endtime="20230717 20:00:11.053"/>
</kw>
<status status="PASS" starttime="20230717 19:59:55.848" endtime="20230717 20:00:11.054"/>
</kw>
<status status="PASS" starttime="20230717 19:59:55.848" endtime="20230717 20:00:11.054"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 19:59:05.962" endtime="20230717 20:00:11.054"/>
</test>
<test id="s1-s13-s2-t10" name="Incomplete command" line="81">
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>ozone admin container</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 20:00:11.086" level="INFO">Running command 'ozone admin container 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 20:00:21.887" level="INFO">${rc} = 255</msg>
<msg timestamp="20230717 20:00:21.887" level="INFO">${output} = Incomplete command
Usage: ozone admin container [-hV] [COMMAND]
Container specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
C...</msg>
<status status="PASS" starttime="20230717 20:00:11.071" endtime="20230717 20:00:21.887"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 20:00:21.888" level="INFO">Incomplete command
Usage: ozone admin container [-hV] [COMMAND]
Container specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Commands:
  list    List containers
  info    Show information about a specific container
  create  Create container
  close   close container
  report  Display the container summary report</msg>
<status status="PASS" starttime="20230717 20:00:21.887" endtime="20230717 20:00:21.888"/>
</kw>
<msg timestamp="20230717 20:00:21.889" level="INFO">${output} = Incomplete command
Usage: ozone admin container [-hV] [COMMAND]
Container specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
C...</msg>
<status status="PASS" starttime="20230717 20:00:11.069" endtime="20230717 20:00:21.889"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Incomplete command</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 20:00:21.889" endtime="20230717 20:00:21.889"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>list</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 20:00:21.889" endtime="20230717 20:00:21.890"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>info</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 20:00:21.890" endtime="20230717 20:00:21.891"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>create</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 20:00:21.891" endtime="20230717 20:00:21.891"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>close</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 20:00:21.892" endtime="20230717 20:00:21.892"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 20:00:11.067" endtime="20230717 20:00:21.893"/>
</test>
<test id="s1-s13-s2-t11" name="Cannot close container without admin privilege" line="93">
<kw name="Requires admin privilege" library="commonlib">
<arg>ozone admin container close "${CONTAINER}"</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip privilege check in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230717 20:00:21.896" endtime="20230717 20:00:21.898"/>
</kw>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 20:00:21.911" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 20:00:21.923" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 20:00:21.923" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20230717 20:00:21.906" endtime="20230717 20:00:21.924"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 20:00:21.925" level="INFO">s3g</msg>
<status status="PASS" starttime="20230717 20:00:21.924" endtime="20230717 20:00:21.926"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 20:00:21.928" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 20:00:21.927" endtime="20230717 20:00:21.928"/>
</kw>
<status status="PASS" starttime="20230717 20:00:21.903" endtime="20230717 20:00:21.930"/>
</kw>
<msg timestamp="20230717 20:00:21.930" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 20:00:21.903" endtime="20230717 20:00:21.930"/>
</kw>
<msg timestamp="20230717 20:00:21.930" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20230717 20:00:21.902" endtime="20230717 20:00:21.930"/>
</kw>
<msg timestamp="20230717 20:00:21.932" level="INFO">${TEST_USER} = testuser2/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230717 20:00:21.900" endtime="20230717 20:00:21.933"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230717 20:00:21.934" level="INFO">${TEST_USER} = testuser2/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230717 20:00:21.933" endtime="20230717 20:00:21.934"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 20:00:21.950" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser2.keytab testuser2/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 20:00:21.984" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 20:00:21.984" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 20:00:21.942" endtime="20230717 20:00:21.984"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 20:00:21.986" level="INFO"/>
<status status="PASS" starttime="20230717 20:00:21.985" endtime="20230717 20:00:21.986"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 20:00:21.987" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 20:00:21.987" endtime="20230717 20:00:21.987"/>
</kw>
<status status="PASS" starttime="20230717 20:00:21.939" endtime="20230717 20:00:21.987"/>
</kw>
<msg timestamp="20230717 20:00:21.989" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 20:00:21.938" endtime="20230717 20:00:21.989"/>
</kw>
<status status="PASS" starttime="20230717 20:00:21.935" endtime="20230717 20:00:21.989"/>
</kw>
<status status="PASS" starttime="20230717 20:00:21.934" endtime="20230717 20:00:21.989"/>
</kw>
<status status="PASS" starttime="20230717 20:00:21.899" endtime="20230717 20:00:21.989"/>
</kw>
<kw name="Access should be denied" library="commonlib">
<arg>${command}</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>${command}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 20:00:22.001" level="INFO">Running command 'ozone admin container close "4" 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 20:00:38.940" level="INFO">${rc} = 255</msg>
<msg timestamp="20230717 20:00:38.941" level="INFO">${output} = Access denied for user testuser2/s3g@EXAMPLE.COM. SCM superuser privilege is required.</msg>
<status status="PASS" starttime="20230717 20:00:21.992" endtime="20230717 20:00:38.941"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 20:00:38.944" level="INFO">Access denied for user testuser2/s3g@EXAMPLE.COM. SCM superuser privilege is required.</msg>
<status status="PASS" starttime="20230717 20:00:38.941" endtime="20230717 20:00:38.944"/>
</kw>
<msg timestamp="20230717 20:00:38.945" level="INFO">${output} = Access denied for user testuser2/s3g@EXAMPLE.COM. SCM superuser privilege is required.</msg>
<status status="PASS" starttime="20230717 20:00:21.991" endtime="20230717 20:00:38.945"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Access denied</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 20:00:38.946" endtime="20230717 20:00:38.949"/>
</kw>
<status status="PASS" starttime="20230717 20:00:21.989" endtime="20230717 20:00:38.949"/>
</kw>
<status status="PASS" starttime="20230717 20:00:21.895" endtime="20230717 20:00:38.949"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 20:00:21.894" endtime="20230717 20:00:38.950"/>
</test>
<test id="s1-s13-s2-t12" name="Cannot create container without admin privilege" line="96">
<kw name="Requires admin privilege" library="commonlib">
<arg>ozone admin container create</arg>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip privilege check in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230717 20:00:38.954" endtime="20230717 20:00:38.955"/>
</kw>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 20:00:38.966" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 20:00:38.973" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 20:00:38.973" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20230717 20:00:38.960" endtime="20230717 20:00:38.973"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 20:00:38.976" level="INFO">s3g</msg>
<status status="PASS" starttime="20230717 20:00:38.974" endtime="20230717 20:00:38.976"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 20:00:38.977" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 20:00:38.976" endtime="20230717 20:00:38.978"/>
</kw>
<status status="PASS" starttime="20230717 20:00:38.959" endtime="20230717 20:00:38.978"/>
</kw>
<msg timestamp="20230717 20:00:38.978" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 20:00:38.959" endtime="20230717 20:00:38.978"/>
</kw>
<msg timestamp="20230717 20:00:38.979" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20230717 20:00:38.958" endtime="20230717 20:00:38.979"/>
</kw>
<msg timestamp="20230717 20:00:38.979" level="INFO">${TEST_USER} = testuser2/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230717 20:00:38.957" endtime="20230717 20:00:38.979"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230717 20:00:38.980" level="INFO">${TEST_USER} = testuser2/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230717 20:00:38.980" endtime="20230717 20:00:38.981"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 20:00:38.989" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser2.keytab testuser2/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 20:00:39.056" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 20:00:39.056" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 20:00:38.984" endtime="20230717 20:00:39.056"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 20:00:39.059" level="INFO"/>
<status status="PASS" starttime="20230717 20:00:39.057" endtime="20230717 20:00:39.059"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 20:00:39.062" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 20:00:39.059" endtime="20230717 20:00:39.062"/>
</kw>
<status status="PASS" starttime="20230717 20:00:38.984" endtime="20230717 20:00:39.062"/>
</kw>
<msg timestamp="20230717 20:00:39.063" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 20:00:38.983" endtime="20230717 20:00:39.063"/>
</kw>
<status status="PASS" starttime="20230717 20:00:38.982" endtime="20230717 20:00:39.063"/>
</kw>
<status status="PASS" starttime="20230717 20:00:38.981" endtime="20230717 20:00:39.063"/>
</kw>
<status status="PASS" starttime="20230717 20:00:38.955" endtime="20230717 20:00:39.063"/>
</kw>
<kw name="Access should be denied" library="commonlib">
<arg>${command}</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>${command}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 20:00:39.072" level="INFO">Running command 'ozone admin container create 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 20:00:58.128" level="INFO">${rc} = 255</msg>
<msg timestamp="20230717 20:00:58.128" level="INFO">${output} = Access denied for user testuser2/s3g@EXAMPLE.COM. SCM superuser privilege is required.</msg>
<status status="PASS" starttime="20230717 20:00:39.067" endtime="20230717 20:00:58.128"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 20:00:58.130" level="INFO">Access denied for user testuser2/s3g@EXAMPLE.COM. SCM superuser privilege is required.</msg>
<status status="PASS" starttime="20230717 20:00:58.129" endtime="20230717 20:00:58.131"/>
</kw>
<msg timestamp="20230717 20:00:58.132" level="INFO">${output} = Access denied for user testuser2/s3g@EXAMPLE.COM. SCM superuser privilege is required.</msg>
<status status="PASS" starttime="20230717 20:00:39.066" endtime="20230717 20:00:58.132"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Access denied</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 20:00:58.132" endtime="20230717 20:00:58.134"/>
</kw>
<status status="PASS" starttime="20230717 20:00:39.063" endtime="20230717 20:00:58.134"/>
</kw>
<status status="PASS" starttime="20230717 20:00:38.952" endtime="20230717 20:00:58.134"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 20:00:38.950" endtime="20230717 20:00:58.135"/>
</test>
<doc>Test ozone admin container command</doc>
<status status="PASS" starttime="20230717 19:56:26.685" endtime="20230717 20:00:58.138"/>
</suite>
<suite id="s1-s13-s3" name="Datanode" source="/opt/hadoop/smoketest/admincli/datanode.robot">
<test id="s1-s13-s3-t1" name="List datanodes" line="23">
<kw name="Execute" library="os">
<arg>ozone admin datanode list &gt; datanode.list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 20:00:58.182" level="INFO">Running command 'ozone admin datanode list &gt; datanode.list'.</msg>
<msg timestamp="20230717 20:01:14.680" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 20:01:14.680" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 20:00:58.176" endtime="20230717 20:01:14.680"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 20:01:14.682" level="INFO"/>
<status status="PASS" starttime="20230717 20:01:14.681" endtime="20230717 20:01:14.683"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 20:01:14.684" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 20:01:14.683" endtime="20230717 20:01:14.685"/>
</kw>
<status status="PASS" starttime="20230717 20:00:58.173" endtime="20230717 20:01:14.685"/>
</kw>
<msg timestamp="20230717 20:01:14.685" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 20:00:58.171" endtime="20230717 20:01:14.685"/>
</kw>
<status status="PASS" starttime="20230717 20:00:58.170" endtime="20230717 20:01:14.686"/>
</kw>
<kw name="Get File" library="OperatingSystem">
<var>${output}</var>
<arg>datanode.list</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20230717 20:01:14.688" level="INFO" html="true">Getting file '&lt;a href="file:///opt/hadoop/datanode.list"&gt;/opt/hadoop/datanode.list&lt;/a&gt;'.</msg>
<msg timestamp="20230717 20:01:14.689" level="INFO">${output} = Datanode: 87c5eb0b-149e-4683-94a4-bc7d39a11a90 (/default-rack/172.25.0.103/ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/3 pipelines)
Operational State: IN_SERVICE
Health State: HEALTHY
Related ...</msg>
<status status="PASS" starttime="20230717 20:01:14.686" endtime="20230717 20:01:14.689"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Datanode:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 20:01:14.693" endtime="20230717 20:01:14.693"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Related pipelines:</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 20:01:14.693" endtime="20230717 20:01:14.694"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 20:00:58.170" endtime="20230717 20:01:14.696"/>
</test>
<test id="s1-s13-s3-t2" name="Filter list by UUID" line="29">
<kw name="Execute" library="os">
<var>${uuid}</var>
<arg>grep '^Datanode:' datanode.list | head -1 | awk '{ print \$2 }'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 20:01:14.715" level="INFO">Running command 'grep '^Datanode:' datanode.list | head -1 | awk '{ print $2 }' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 20:01:14.726" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 20:01:14.726" level="INFO">${output} = 87c5eb0b-149e-4683-94a4-bc7d39a11a90</msg>
<status status="PASS" starttime="20230717 20:01:14.707" endtime="20230717 20:01:14.727"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 20:01:14.731" level="INFO">87c5eb0b-149e-4683-94a4-bc7d39a11a90</msg>
<status status="PASS" starttime="20230717 20:01:14.728" endtime="20230717 20:01:14.731"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 20:01:14.733" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 20:01:14.731" endtime="20230717 20:01:14.734"/>
</kw>
<status status="PASS" starttime="20230717 20:01:14.705" endtime="20230717 20:01:14.734"/>
</kw>
<msg timestamp="20230717 20:01:14.734" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 20:01:14.702" endtime="20230717 20:01:14.734"/>
</kw>
<msg timestamp="20230717 20:01:14.736" level="INFO">${uuid} = 87c5eb0b-149e-4683-94a4-bc7d39a11a90</msg>
<status status="PASS" starttime="20230717 20:01:14.700" endtime="20230717 20:01:14.736"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin datanode list --id "${uuid}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 20:01:14.751" level="INFO">Running command 'ozone admin datanode list --id "87c5eb0b-149e-4683-94a4-bc7d39a11a90" 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 20:01:29.376" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 20:01:29.377" level="INFO">${output} = Datanode: 87c5eb0b-149e-4683-94a4-bc7d39a11a90 (/default-rack/172.25.0.103/ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/3 pipelines)
Operational State: IN_SERVICE
Health State: HEALTHY
Related ...</msg>
<status status="PASS" starttime="20230717 20:01:14.745" endtime="20230717 20:01:29.377"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 20:01:29.379" level="INFO">Datanode: 87c5eb0b-149e-4683-94a4-bc7d39a11a90 (/default-rack/172.25.0.103/ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/3 pipelines)
Operational State: IN_SERVICE
Health State: HEALTHY
Related pipelines:
d53df065-c93c-4ba4-951d-7ce4c3578383/RATIS/ONE/RATIS/OPEN/Leader
4434309e-20b3-4896-aea8-56dfc449007c/RATIS/THREE/RATIS/OPEN/Follower
dccb59df-d6ae-4974-bb3a-70d0b20ec655/RATIS/THREE/RATIS/OPEN/Follower
</msg>
<status status="PASS" starttime="20230717 20:01:29.378" endtime="20230717 20:01:29.379"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 20:01:29.381" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 20:01:29.380" endtime="20230717 20:01:29.381"/>
</kw>
<status status="PASS" starttime="20230717 20:01:14.743" endtime="20230717 20:01:29.381"/>
</kw>
<msg timestamp="20230717 20:01:29.381" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 20:01:14.743" endtime="20230717 20:01:29.382"/>
</kw>
<msg timestamp="20230717 20:01:29.382" level="INFO">${output} = Datanode: 87c5eb0b-149e-4683-94a4-bc7d39a11a90 (/default-rack/172.25.0.103/ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/3 pipelines)
Operational State: IN_SERVICE
Health State: HEALTHY
Related ...</msg>
<status status="PASS" starttime="20230717 20:01:14.736" endtime="20230717 20:01:29.382"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Datanode: ${uuid}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 20:01:29.383" endtime="20230717 20:01:29.383"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${datanodes}</var>
<arg>${output}</arg>
<arg>Datanode:</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20230717 20:01:29.384" level="INFO">1 out of 7 lines matched</msg>
<msg timestamp="20230717 20:01:29.384" level="INFO">${datanodes} = Datanode: 87c5eb0b-149e-4683-94a4-bc7d39a11a90 (/default-rack/172.25.0.103/ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/3 pipelines)</msg>
<status status="PASS" starttime="20230717 20:01:29.384" endtime="20230717 20:01:29.385"/>
</kw>
<kw name="Split To Lines" library="String">
<var>@{lines}</var>
<arg>${datanodes}</arg>
<doc>Splits the given string to lines.</doc>
<msg timestamp="20230717 20:01:29.385" level="INFO">1 lines returned</msg>
<msg timestamp="20230717 20:01:29.386" level="INFO">@{lines} = [ Datanode: 87c5eb0b-149e-4683-94a4-bc7d39a11a90 (/default-rack/172.25.0.103/ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/3 pipelines) ]</msg>
<status status="PASS" starttime="20230717 20:01:29.385" endtime="20230717 20:01:29.386"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${count}</var>
<arg>${lines}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230717 20:01:29.387" level="INFO">Length is 1</msg>
<msg timestamp="20230717 20:01:29.388" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230717 20:01:29.386" endtime="20230717 20:01:29.388"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>1</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 20:01:29.388" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 20:01:29.388" endtime="20230717 20:01:29.388"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 20:01:14.697" endtime="20230717 20:01:29.389"/>
</test>
<test id="s1-s13-s3-t3" name="Filter list by NodeOperationalState" line="38">
<kw name="Execute" library="os">
<var>${uuid}</var>
<arg>grep '^Datanode:' datanode.list | head -1 | awk '{ print \$2 }'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 20:01:29.401" level="INFO">Running command 'grep '^Datanode:' datanode.list | head -1 | awk '{ print $2 }' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 20:01:29.410" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 20:01:29.410" level="INFO">${output} = 87c5eb0b-149e-4683-94a4-bc7d39a11a90</msg>
<status status="PASS" starttime="20230717 20:01:29.394" endtime="20230717 20:01:29.410"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 20:01:29.416" level="INFO">87c5eb0b-149e-4683-94a4-bc7d39a11a90</msg>
<status status="PASS" starttime="20230717 20:01:29.413" endtime="20230717 20:01:29.416"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 20:01:29.418" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 20:01:29.416" endtime="20230717 20:01:29.419"/>
</kw>
<status status="PASS" starttime="20230717 20:01:29.392" endtime="20230717 20:01:29.419"/>
</kw>
<msg timestamp="20230717 20:01:29.419" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 20:01:29.392" endtime="20230717 20:01:29.420"/>
</kw>
<msg timestamp="20230717 20:01:29.421" level="INFO">${uuid} = 87c5eb0b-149e-4683-94a4-bc7d39a11a90</msg>
<status status="PASS" starttime="20230717 20:01:29.391" endtime="20230717 20:01:29.421"/>
</kw>
<kw name="Execute" library="os">
<var>${expected}</var>
<arg>grep -c 'Operational State: IN_SERVICE' datanode.list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 20:01:29.431" level="INFO">Running command 'grep -c 'Operational State: IN_SERVICE' datanode.list 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 20:01:29.436" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 20:01:29.436" level="INFO">${output} = 3</msg>
<status status="PASS" starttime="20230717 20:01:29.426" endtime="20230717 20:01:29.436"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 20:01:29.439" level="INFO">3</msg>
<status status="PASS" starttime="20230717 20:01:29.437" endtime="20230717 20:01:29.439"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 20:01:29.440" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 20:01:29.439" endtime="20230717 20:01:29.440"/>
</kw>
<status status="PASS" starttime="20230717 20:01:29.425" endtime="20230717 20:01:29.440"/>
</kw>
<msg timestamp="20230717 20:01:29.441" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 20:01:29.422" endtime="20230717 20:01:29.441"/>
</kw>
<msg timestamp="20230717 20:01:29.441" level="INFO">${expected} = 3</msg>
<status status="PASS" starttime="20230717 20:01:29.421" endtime="20230717 20:01:29.441"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin datanode list --operational-state IN_SERVICE</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 20:01:29.449" level="INFO">Running command 'ozone admin datanode list --operational-state IN_SERVICE 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 20:01:44.963" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 20:01:44.963" level="INFO">${output} = Datanode: 87c5eb0b-149e-4683-94a4-bc7d39a11a90 (/default-rack/172.25.0.103/ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/3 pipelines)
Operational State: IN_SERVICE
Health State: HEALTHY
Related ...</msg>
<status status="PASS" starttime="20230717 20:01:29.445" endtime="20230717 20:01:44.963"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 20:01:44.968" level="INFO">Datanode: 87c5eb0b-149e-4683-94a4-bc7d39a11a90 (/default-rack/172.25.0.103/ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/3 pipelines)
Operational State: IN_SERVICE
Health State: HEALTHY
Related pipelines:
d53df065-c93c-4ba4-951d-7ce4c3578383/RATIS/ONE/RATIS/OPEN/Leader
4434309e-20b3-4896-aea8-56dfc449007c/RATIS/THREE/RATIS/OPEN/Follower
dccb59df-d6ae-4974-bb3a-70d0b20ec655/RATIS/THREE/RATIS/OPEN/Follower

Datanode: cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe (/default-rack/172.25.0.104/ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net/4 pipelines)
Operational State: IN_SERVICE
Health State: HEALTHY
Related pipelines:
7adffc2c-9e94-4914-8b59-50fe3fac600a/RATIS/ONE/RATIS/OPEN/Leader
80e0342c-f4f7-4e2e-a6ae-99a56bac1e64/STANDALONE/ONE/STAND_ALONE/OPEN/Follower
4434309e-20b3-4896-aea8-56dfc449007c/RATIS/THREE/RATIS/OPEN/Follower
dccb59df-d6ae-4974-bb3a-70d0b20ec655/RATIS/THREE/RATIS/OPEN/Leader

Datanode: e9096b01-e48e-4ceb-b568-1d22ceed6cac (/default-rack/172.25.0.102/ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net/3 pipelines)
Operational State: IN_SERVICE
Health State: HEALTHY
Related pipelines:
35a72a85-c521-46ce-b844-af6de2037f1e/RATIS/ONE/RATIS/OPEN/Leader
4434309e-20b3-4896-aea8-56dfc449007c/RATIS/THREE/RATIS/OPEN/Leader
dccb59df-d6ae-4974-bb3a-70d0b20ec655/RATIS/THREE/RATIS/OPEN/Follower
</msg>
<status status="PASS" starttime="20230717 20:01:44.965" endtime="20230717 20:01:44.968"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 20:01:44.970" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 20:01:44.968" endtime="20230717 20:01:44.970"/>
</kw>
<status status="PASS" starttime="20230717 20:01:29.443" endtime="20230717 20:01:44.970"/>
</kw>
<msg timestamp="20230717 20:01:44.970" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 20:01:29.442" endtime="20230717 20:01:44.971"/>
</kw>
<msg timestamp="20230717 20:01:44.971" level="INFO">${output} = Datanode: 87c5eb0b-149e-4683-94a4-bc7d39a11a90 (/default-rack/172.25.0.103/ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/3 pipelines)
Operational State: IN_SERVICE
Health State: HEALTHY
Related ...</msg>
<status status="PASS" starttime="20230717 20:01:29.442" endtime="20230717 20:01:44.973"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Datanode: ${uuid}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 20:01:44.974" endtime="20230717 20:01:44.976"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${datanodes}</var>
<arg>${output}</arg>
<arg>Datanode:</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20230717 20:01:44.977" level="INFO">3 out of 24 lines matched</msg>
<msg timestamp="20230717 20:01:44.977" level="INFO">${datanodes} = Datanode: 87c5eb0b-149e-4683-94a4-bc7d39a11a90 (/default-rack/172.25.0.103/ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/3 pipelines)
Datanode: cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe (/default-rac...</msg>
<status status="PASS" starttime="20230717 20:01:44.976" endtime="20230717 20:01:44.979"/>
</kw>
<kw name="Split To Lines" library="String">
<var>@{lines}</var>
<arg>${datanodes}</arg>
<doc>Splits the given string to lines.</doc>
<msg timestamp="20230717 20:01:44.980" level="INFO">3 lines returned</msg>
<msg timestamp="20230717 20:01:44.980" level="INFO">@{lines} = [ Datanode: 87c5eb0b-149e-4683-94a4-bc7d39a11a90 (/default-rack/172.25.0.103/ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/3 pipelines) | Datanode: cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe (/default...</msg>
<status status="PASS" starttime="20230717 20:01:44.980" endtime="20230717 20:01:44.980"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${count}</var>
<arg>${lines}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230717 20:01:44.982" level="INFO">Length is 3</msg>
<msg timestamp="20230717 20:01:44.982" level="INFO">${count} = 3</msg>
<status status="PASS" starttime="20230717 20:01:44.981" endtime="20230717 20:01:44.984"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>${expected}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 20:01:44.985" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 20:01:44.984" endtime="20230717 20:01:44.985"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 20:01:29.390" endtime="20230717 20:01:44.987"/>
</test>
<test id="s1-s13-s3-t4" name="Filter list by NodeState" line="48">
<kw name="Execute" library="os">
<var>${uuid}</var>
<arg>grep '^Datanode:' datanode.list | head -1 | awk '{ print \$2 }'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 20:01:45.010" level="INFO">Running command 'grep '^Datanode:' datanode.list | head -1 | awk '{ print $2 }' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 20:01:45.025" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 20:01:45.025" level="INFO">${output} = 87c5eb0b-149e-4683-94a4-bc7d39a11a90</msg>
<status status="PASS" starttime="20230717 20:01:44.997" endtime="20230717 20:01:45.025"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 20:01:45.031" level="INFO">87c5eb0b-149e-4683-94a4-bc7d39a11a90</msg>
<status status="PASS" starttime="20230717 20:01:45.026" endtime="20230717 20:01:45.033"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 20:01:45.036" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 20:01:45.033" endtime="20230717 20:01:45.036"/>
</kw>
<status status="PASS" starttime="20230717 20:01:44.994" endtime="20230717 20:01:45.036"/>
</kw>
<msg timestamp="20230717 20:01:45.038" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 20:01:44.993" endtime="20230717 20:01:45.038"/>
</kw>
<msg timestamp="20230717 20:01:45.038" level="INFO">${uuid} = 87c5eb0b-149e-4683-94a4-bc7d39a11a90</msg>
<status status="PASS" starttime="20230717 20:01:44.991" endtime="20230717 20:01:45.038"/>
</kw>
<kw name="Execute" library="os">
<var>${expected}</var>
<arg>grep -c 'Health State: HEALTHY' datanode.list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 20:01:45.050" level="INFO">Running command 'grep -c 'Health State: HEALTHY' datanode.list 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 20:01:45.061" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 20:01:45.061" level="INFO">${output} = 3</msg>
<status status="PASS" starttime="20230717 20:01:45.045" endtime="20230717 20:01:45.062"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 20:01:45.065" level="INFO">3</msg>
<status status="PASS" starttime="20230717 20:01:45.063" endtime="20230717 20:01:45.066"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 20:01:45.068" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 20:01:45.067" endtime="20230717 20:01:45.068"/>
</kw>
<status status="PASS" starttime="20230717 20:01:45.042" endtime="20230717 20:01:45.069"/>
</kw>
<msg timestamp="20230717 20:01:45.069" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 20:01:45.040" endtime="20230717 20:01:45.069"/>
</kw>
<msg timestamp="20230717 20:01:45.070" level="INFO">${expected} = 3</msg>
<status status="PASS" starttime="20230717 20:01:45.039" endtime="20230717 20:01:45.070"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin datanode list --node-state HEALTHY</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 20:01:45.083" level="INFO">Running command 'ozone admin datanode list --node-state HEALTHY 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 20:02:00.467" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 20:02:00.467" level="INFO">${output} = Datanode: 87c5eb0b-149e-4683-94a4-bc7d39a11a90 (/default-rack/172.25.0.103/ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/3 pipelines)
Operational State: IN_SERVICE
Health State: HEALTHY
Related ...</msg>
<status status="PASS" starttime="20230717 20:01:45.075" endtime="20230717 20:02:00.467"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 20:02:00.475" level="INFO">Datanode: 87c5eb0b-149e-4683-94a4-bc7d39a11a90 (/default-rack/172.25.0.103/ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/3 pipelines)
Operational State: IN_SERVICE
Health State: HEALTHY
Related pipelines:
d53df065-c93c-4ba4-951d-7ce4c3578383/RATIS/ONE/RATIS/OPEN/Leader
4434309e-20b3-4896-aea8-56dfc449007c/RATIS/THREE/RATIS/OPEN/Follower
dccb59df-d6ae-4974-bb3a-70d0b20ec655/RATIS/THREE/RATIS/OPEN/Follower

Datanode: cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe (/default-rack/172.25.0.104/ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net/4 pipelines)
Operational State: IN_SERVICE
Health State: HEALTHY
Related pipelines:
7adffc2c-9e94-4914-8b59-50fe3fac600a/RATIS/ONE/RATIS/OPEN/Leader
80e0342c-f4f7-4e2e-a6ae-99a56bac1e64/STANDALONE/ONE/STAND_ALONE/OPEN/Follower
4434309e-20b3-4896-aea8-56dfc449007c/RATIS/THREE/RATIS/OPEN/Follower
dccb59df-d6ae-4974-bb3a-70d0b20ec655/RATIS/THREE/RATIS/OPEN/Leader

Datanode: e9096b01-e48e-4ceb-b568-1d22ceed6cac (/default-rack/172.25.0.102/ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net/3 pipelines)
Operational State: IN_SERVICE
Health State: HEALTHY
Related pipelines:
35a72a85-c521-46ce-b844-af6de2037f1e/RATIS/ONE/RATIS/OPEN/Leader
4434309e-20b3-4896-aea8-56dfc449007c/RATIS/THREE/RATIS/OPEN/Leader
dccb59df-d6ae-4974-bb3a-70d0b20ec655/RATIS/THREE/RATIS/OPEN/Follower
</msg>
<status status="PASS" starttime="20230717 20:02:00.473" endtime="20230717 20:02:00.475"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 20:02:00.477" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 20:02:00.475" endtime="20230717 20:02:00.477"/>
</kw>
<status status="PASS" starttime="20230717 20:01:45.074" endtime="20230717 20:02:00.479"/>
</kw>
<msg timestamp="20230717 20:02:00.479" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 20:01:45.072" endtime="20230717 20:02:00.479"/>
</kw>
<msg timestamp="20230717 20:02:00.480" level="INFO">${output} = Datanode: 87c5eb0b-149e-4683-94a4-bc7d39a11a90 (/default-rack/172.25.0.103/ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/3 pipelines)
Operational State: IN_SERVICE
Health State: HEALTHY
Related ...</msg>
<status status="PASS" starttime="20230717 20:01:45.070" endtime="20230717 20:02:00.480"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Datanode: ${uuid}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 20:02:00.480" endtime="20230717 20:02:00.481"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${datanodes}</var>
<arg>${output}</arg>
<arg>Datanode:</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20230717 20:02:00.483" level="INFO">3 out of 24 lines matched</msg>
<msg timestamp="20230717 20:02:00.483" level="INFO">${datanodes} = Datanode: 87c5eb0b-149e-4683-94a4-bc7d39a11a90 (/default-rack/172.25.0.103/ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/3 pipelines)
Datanode: cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe (/default-rac...</msg>
<status status="PASS" starttime="20230717 20:02:00.482" endtime="20230717 20:02:00.483"/>
</kw>
<kw name="Split To Lines" library="String">
<var>@{lines}</var>
<arg>${datanodes}</arg>
<doc>Splits the given string to lines.</doc>
<msg timestamp="20230717 20:02:00.484" level="INFO">3 lines returned</msg>
<msg timestamp="20230717 20:02:00.484" level="INFO">@{lines} = [ Datanode: 87c5eb0b-149e-4683-94a4-bc7d39a11a90 (/default-rack/172.25.0.103/ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/3 pipelines) | Datanode: cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe (/default...</msg>
<status status="PASS" starttime="20230717 20:02:00.483" endtime="20230717 20:02:00.484"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${count}</var>
<arg>${lines}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230717 20:02:00.486" level="INFO">Length is 3</msg>
<msg timestamp="20230717 20:02:00.486" level="INFO">${count} = 3</msg>
<status status="PASS" starttime="20230717 20:02:00.484" endtime="20230717 20:02:00.486"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${count}</arg>
<arg>${expected}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 20:02:00.486" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 20:02:00.486" endtime="20230717 20:02:00.488"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 20:01:44.989" endtime="20230717 20:02:00.489"/>
</test>
<test id="s1-s13-s3-t5" name="Incomplete command" line="58">
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>ozone admin datanode</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 20:02:00.500" level="INFO">Running command 'ozone admin datanode 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 20:02:11.112" level="INFO">${rc} = 255</msg>
<msg timestamp="20230717 20:02:11.112" level="INFO">${output} = Incomplete command
Usage: ozone admin datanode [-hV] [COMMAND]
Datanode specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Com...</msg>
<status status="PASS" starttime="20230717 20:02:00.493" endtime="20230717 20:02:11.113"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 20:02:11.116" level="INFO">Incomplete command
Usage: ozone admin datanode [-hV] [COMMAND]
Datanode specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Commands:
  list          List info of datanodes
  decommission  Decommission a datanode
  maintenance   Put a datanode into Maintenance Mode
  recommission  Return a datanode to service
  usageinfo     List usage information (such as Capacity, SCMUsed, Remaining)
                  of a datanode by IP address or UUID</msg>
<status status="PASS" starttime="20230717 20:02:11.113" endtime="20230717 20:02:11.118"/>
</kw>
<msg timestamp="20230717 20:02:11.118" level="INFO">${output} = Incomplete command
Usage: ozone admin datanode [-hV] [COMMAND]
Datanode specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Com...</msg>
<status status="PASS" starttime="20230717 20:02:00.492" endtime="20230717 20:02:11.118"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Incomplete command</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 20:02:11.119" endtime="20230717 20:02:11.123"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>list</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 20:02:11.124" endtime="20230717 20:02:11.124"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 20:02:00.490" endtime="20230717 20:02:11.126"/>
</test>
<test id="s1-s13-s3-t6" name="List datanodes as JSON" line="67">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin datanode list --json | jq -r '.'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 20:02:11.139" level="INFO">Running command 'ozone admin datanode list --json | jq -r '.' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 20:02:28.336" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 20:02:28.336" level="INFO">${output} = [
  {
    "datanodeDetails": {
      "level": 0,
      "cost": 0,
      "uuid": "87c5eb0b-149e-4683-94a4-bc7d39a11a90",
      "uuidString": "87c5eb0b-149e-4683-94a4-bc7d39a11a90",
      "ipAddress": "...</msg>
<status status="PASS" starttime="20230717 20:02:11.131" endtime="20230717 20:02:28.336"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 20:02:28.342" level="INFO">[
  {
    "datanodeDetails": {
      "level": 0,
      "cost": 0,
      "uuid": "87c5eb0b-149e-4683-94a4-bc7d39a11a90",
      "uuidString": "87c5eb0b-149e-4683-94a4-bc7d39a11a90",
      "ipAddress": "172.25.0.103",
      "hostName": "ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net",
      "ports": [
        {
          "name": "HTTP",
          "value": 9882
        },
        {
          "name": "CLIENT_RPC",
          "value": 9864
        },
        {
          "name": "REPLICATION",
          "value": 9886
        },
        {
          "name": "RATIS",
          "value": 9858
        },
        {
          "name": "RATIS_ADMIN",
          "value": 9857
        },
        {
          "name": "RATIS_SERVER",
          "value": 9856
        },
        {
          "name": "RATIS_DATASTREAM",
          "value": 9855
        },
        {
          "name": "STANDALONE",
          "value": 9859
        }
      ],
      "setupTime": 0,
      "persistedOpState": "IN_SERVICE",
      "persistedOpStateExpiryEpochSec": 0,
      "initialVersion": 0,
      "currentVersion": 1,
      "signature": 1475470144,
      "decommissioned": false,
      "maintenance": false,
      "networkLocation": "/default-rack",
      "networkName": "87c5eb0b-149e-4683-94a4-bc7d39a11a90",
      "networkFullPath": "/default-rack/87c5eb0b-149e-4683-94a4-bc7d39a11a90",
      "numOfLeaves": 1
    },
    "healthState": "HEALTHY",
    "opState": "IN_SERVICE"
  },
  {
    "datanodeDetails": {
      "level": 0,
      "cost": 0,
      "uuid": "cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe",
      "uuidString": "cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe",
      "ipAddress": "172.25.0.104",
      "hostName": "ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net",
      "ports": [
        {
          "name": "HTTP",
          "value": 9882
        },
        {
          "name": "CLIENT_RPC",
          "value": 9864
        },
        {
          "name": "REPLICATION",
          "value": 9886
        },
        {
          "name": "RATIS",
          "value": 9858
        },
        {
          "name": "RATIS_ADMIN",
          "value": 9857
        },
        {
          "name": "RATIS_SERVER",
          "value": 9856
        },
        {
          "name": "RATIS_DATASTREAM",
          "value": 9855
        },
        {
          "name": "STANDALONE",
          "value": 9859
        }
      ],
      "setupTime": 0,
      "persistedOpState": "IN_SERVICE",
      "persistedOpStateExpiryEpochSec": 0,
      "initialVersion": 0,
      "currentVersion": 1,
      "signature": 2126181564,
      "decommissioned": false,
      "maintenance": false,
      "networkLocation": "/default-rack",
      "networkName": "cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe",
      "networkFullPath": "/default-rack/cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe",
      "numOfLeaves": 1
    },
    "healthState": "HEALTHY",
    "opState": "IN_SERVICE"
  },
  {
    "datanodeDetails": {
      "level": 0,
      "cost": 0,
      "uuid": "e9096b01-e48e-4ceb-b568-1d22ceed6cac",
      "uuidString": "e9096b01-e48e-4ceb-b568-1d22ceed6cac",
      "ipAddress": "172.25.0.102",
      "hostName": "ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net",
      "ports": [
        {
          "name": "HTTP",
          "value": 9882
        },
        {
          "name": "CLIENT_RPC",
          "value": 9864
        },
        {
          "name": "REPLICATION",
          "value": 9886
        },
        {
          "name": "RATIS",
          "value": 9858
        },
        {
          "name": "RATIS_ADMIN",
          "value": 9857
        },
        {
          "name": "RATIS_SERVER",
          "value": 9856
        },
        {
          "name": "RATIS_DATASTREAM",
          "value": 9855
        },
        {
          "name": "STANDALONE",
          "value": 9859
        }
      ],
      "setupTime": 0,
      "persistedOpState": "IN_SERVICE",
      "persistedOpStateExpiryEpochSec": 0,
      "initialVersion": 0,
      "currentVersion": 1,
      "signature": -802690688,
      "decommissioned": false,
      "maintenance": false,
      "networkLocation": "/default-rack",
      "networkName": "e9096b01-e48e-4ceb-b568-1d22ceed6cac",
      "networkFullPath": "/default-rack/e9096b01-e48e-4ceb-b568-1d22ceed6cac",
      "numOfLeaves": 1
    },
    "healthState": "HEALTHY",
    "opState": "IN_SERVICE"
  }
]</msg>
<status status="PASS" starttime="20230717 20:02:28.339" endtime="20230717 20:02:28.343"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 20:02:28.345" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 20:02:28.343" endtime="20230717 20:02:28.346"/>
</kw>
<status status="PASS" starttime="20230717 20:02:11.130" endtime="20230717 20:02:28.346"/>
</kw>
<msg timestamp="20230717 20:02:28.347" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 20:02:11.129" endtime="20230717 20:02:28.347"/>
</kw>
<msg timestamp="20230717 20:02:28.348" level="INFO">${output} = [
  {
    "datanodeDetails": {
      "level": 0,
      "cost": 0,
      "uuid": "87c5eb0b-149e-4683-94a4-bc7d39a11a90",
      "uuidString": "87c5eb0b-149e-4683-94a4-bc7d39a11a90",
      "ipAddress": "...</msg>
<status status="PASS" starttime="20230717 20:02:11.129" endtime="20230717 20:02:28.349"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>datanodeDetails</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 20:02:28.349" endtime="20230717 20:02:28.350"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>healthState</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 20:02:28.350" endtime="20230717 20:02:28.351"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>opState</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 20:02:28.351" endtime="20230717 20:02:28.352"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 20:02:11.127" endtime="20230717 20:02:28.352"/>
</test>
<doc>Test ozone admin datanode command</doc>
<status status="PASS" starttime="20230717 20:00:58.149" endtime="20230717 20:02:28.354"/>
</suite>
<suite id="s1-s13-s4" name="Pipeline" source="/opt/hadoop/smoketest/admincli/pipeline.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 20:02:28.377" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 20:02:28.385" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 20:02:28.385" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20230717 20:02:28.373" endtime="20230717 20:02:28.385"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 20:02:28.387" level="INFO">s3g</msg>
<status status="PASS" starttime="20230717 20:02:28.386" endtime="20230717 20:02:28.387"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 20:02:28.388" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 20:02:28.387" endtime="20230717 20:02:28.388"/>
</kw>
<status status="PASS" starttime="20230717 20:02:28.372" endtime="20230717 20:02:28.388"/>
</kw>
<msg timestamp="20230717 20:02:28.388" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 20:02:28.372" endtime="20230717 20:02:28.388"/>
</kw>
<msg timestamp="20230717 20:02:28.389" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20230717 20:02:28.371" endtime="20230717 20:02:28.389"/>
</kw>
<msg timestamp="20230717 20:02:28.389" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230717 20:02:28.371" endtime="20230717 20:02:28.389"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230717 20:02:28.390" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230717 20:02:28.389" endtime="20230717 20:02:28.390"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 20:02:28.398" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 20:02:28.479" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 20:02:28.479" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 20:02:28.394" endtime="20230717 20:02:28.479"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 20:02:28.481" level="INFO"/>
<status status="PASS" starttime="20230717 20:02:28.480" endtime="20230717 20:02:28.481"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 20:02:28.482" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 20:02:28.481" endtime="20230717 20:02:28.482"/>
</kw>
<status status="PASS" starttime="20230717 20:02:28.393" endtime="20230717 20:02:28.482"/>
</kw>
<msg timestamp="20230717 20:02:28.482" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 20:02:28.392" endtime="20230717 20:02:28.482"/>
</kw>
<status status="PASS" starttime="20230717 20:02:28.391" endtime="20230717 20:02:28.483"/>
</kw>
<status status="PASS" starttime="20230717 20:02:28.390" endtime="20230717 20:02:28.483"/>
</kw>
<status status="PASS" starttime="20230717 20:02:28.370" endtime="20230717 20:02:28.483"/>
</kw>
<status status="PASS" starttime="20230717 20:02:28.369" endtime="20230717 20:02:28.483"/>
</kw>
<test id="s1-s13-s4-t1" name="Create pipeline" line="28">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline create</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 20:02:28.496" level="INFO">Running command 'ozone admin pipeline create 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 20:02:42.662" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 20:02:42.662" level="INFO">${output} = PipelineID=d8f9e184-d5e9-424a-8e61-ddbbbf581c80 is created. Pipeline[ Id: d8f9e184-d5e9-424a-8e61-ddbbbf581c80, Nodes: e9096b01-e48e-4ceb-b568-1d22ceed6cac(ozonesecure-ha_datanode1_1.ozonesecure-ha_oz...</msg>
<status status="PASS" starttime="20230717 20:02:28.490" endtime="20230717 20:02:42.662"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 20:02:42.666" level="INFO">PipelineID=d8f9e184-d5e9-424a-8e61-ddbbbf581c80 is created. Pipeline[ Id: d8f9e184-d5e9-424a-8e61-ddbbbf581c80, Nodes: e9096b01-e48e-4ceb-b568-1d22ceed6cac(ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net/172.25.0.102), ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2023-07-17T20:02:41.588Z[UTC]]</msg>
<status status="PASS" starttime="20230717 20:02:42.663" endtime="20230717 20:02:42.666"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 20:02:42.668" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 20:02:42.666" endtime="20230717 20:02:42.668"/>
</kw>
<status status="PASS" starttime="20230717 20:02:28.489" endtime="20230717 20:02:42.668"/>
</kw>
<msg timestamp="20230717 20:02:42.668" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 20:02:28.488" endtime="20230717 20:02:42.668"/>
</kw>
<msg timestamp="20230717 20:02:42.669" level="INFO">${output} = PipelineID=d8f9e184-d5e9-424a-8e61-ddbbbf581c80 is created. Pipeline[ Id: d8f9e184-d5e9-424a-8e61-ddbbbf581c80, Nodes: e9096b01-e48e-4ceb-b568-1d22ceed6cac(ozonesecure-ha_datanode1_1.ozonesecure-ha_oz...</msg>
<status status="PASS" starttime="20230717 20:02:28.487" endtime="20230717 20:02:42.669"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>is created.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 20:02:42.669" endtime="20230717 20:02:42.670"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>STANDALONE/ONE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 20:02:42.670" endtime="20230717 20:02:42.671"/>
</kw>
<kw name="Execute" library="os">
<var>${pipeline}</var>
<arg>echo "${output}" | grep 'is created' | cut -f1 -d' ' | cut -f2 -d'='</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 20:02:42.680" level="INFO">Running command 'echo "PipelineID=d8f9e184-d5e9-424a-8e61-ddbbbf581c80 is created. Pipeline[ Id: d8f9e184-d5e9-424a-8e61-ddbbbf581c80, Nodes: e9096b01-e48e-4ceb-b568-1d22ceed6cac(ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net/172.25.0.102), ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2023-07-17T20:02:41.588Z[UTC]]" | grep 'is created' | cut -f1 -d' ' | cut -f2 -d'=' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 20:02:42.689" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 20:02:42.689" level="INFO">${output} = d8f9e184-d5e9-424a-8e61-ddbbbf581c80</msg>
<status status="PASS" starttime="20230717 20:02:42.675" endtime="20230717 20:02:42.689"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 20:02:42.699" level="INFO">d8f9e184-d5e9-424a-8e61-ddbbbf581c80</msg>
<status status="PASS" starttime="20230717 20:02:42.695" endtime="20230717 20:02:42.699"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 20:02:42.703" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 20:02:42.700" endtime="20230717 20:02:42.703"/>
</kw>
<status status="PASS" starttime="20230717 20:02:42.673" endtime="20230717 20:02:42.703"/>
</kw>
<msg timestamp="20230717 20:02:42.704" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 20:02:42.673" endtime="20230717 20:02:42.705"/>
</kw>
<msg timestamp="20230717 20:02:42.705" level="INFO">${pipeline} = d8f9e184-d5e9-424a-8e61-ddbbbf581c80</msg>
<status status="PASS" starttime="20230717 20:02:42.671" endtime="20230717 20:02:42.705"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${PIPELINE}</arg>
<arg>${pipeline}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230717 20:02:42.707" level="INFO">${PIPELINE} = d8f9e184-d5e9-424a-8e61-ddbbbf581c80</msg>
<status status="PASS" starttime="20230717 20:02:42.705" endtime="20230717 20:02:42.707"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 20:02:28.484" endtime="20230717 20:02:42.707"/>
</test>
<test id="s1-s13-s4-t2" name="List pipelines" line="35">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 20:02:42.718" level="INFO">Running command 'ozone admin pipeline list 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 20:02:58.697" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 20:02:58.697" level="INFO">${output} = Pipeline[ Id: 7adffc2c-9e94-4914-8b59-50fe3fac600a, Nodes: cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe(ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net/172.25.0.104), ReplicationConfig: RATIS/ONE, State:O...</msg>
<status status="PASS" starttime="20230717 20:02:42.712" endtime="20230717 20:02:58.697"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 20:02:58.700" level="INFO">Pipeline[ Id: 7adffc2c-9e94-4914-8b59-50fe3fac600a, Nodes: cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe(ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net/172.25.0.104), ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe, CreationTimestamp2023-07-17T18:43:08.888Z[UTC]]
Pipeline[ Id: 80e0342c-f4f7-4e2e-a6ae-99a56bac1e64, Nodes: cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe(ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net/172.25.0.104), ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2023-07-17T19:41:28.703Z[UTC]]
Pipeline[ Id: 35a72a85-c521-46ce-b844-af6de2037f1e, Nodes: e9096b01-e48e-4ceb-b568-1d22ceed6cac(ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net/172.25.0.102), ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:e9096b01-e48e-4ceb-b568-1d22ceed6cac, CreationTimestamp2023-07-17T18:43:07.051Z[UTC]]
Pipeline[ Id: d8f9e184-d5e9-424a-8e61-ddbbbf581c80, Nodes: e9096b01-e48e-4ceb-b568-1d22ceed6cac(ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net/172.25.0.102), ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2023-07-17T20:02:41.588Z[UTC]]
Pipeline[ Id: d53df065-c93c-4ba4-951d-7ce4c3578383, Nodes: 87c5eb0b-149e-4683-94a4-bc7d39a11a90(ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/172.25.0.103), ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:87c5eb0b-149e-4683-94a4-bc7d39a11a90, CreationTimestamp2023-07-17T18:43:10.355Z[UTC]]
Pipeline[ Id: 4434309e-20b3-4896-aea8-56dfc449007c, Nodes: 87c5eb0b-149e-4683-94a4-bc7d39a11a90(ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/172.25.0.103)e9096b01-e48e-4ceb-b568-1d22ceed6cac(ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net/172.25.0.102)cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe(ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net/172.25.0.104), ReplicationConfig: RATIS/THREE, State:OPEN, leaderId:e9096b01-e48e-4ceb-b568-1d22ceed6cac, CreationTimestamp2023-07-17T18:43:10.566Z[UTC]]
Pipeline[ Id: dccb59df-d6ae-4974-bb3a-70d0b20ec655, Nodes: cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe(ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net/172.25.0.104)87c5eb0b-149e-4683-94a4-bc7d39a11a90(ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/172.25.0.103)e9096b01-e48e-4ceb-b568-1d22ceed6cac(ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net/172.25.0.102), ReplicationConfig: RATIS/THREE, State:OPEN, leaderId:cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe, CreationTimestamp2023-07-17T18:43:10.518Z[UTC]]</msg>
<status status="PASS" starttime="20230717 20:02:58.698" endtime="20230717 20:02:58.700"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 20:02:58.701" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 20:02:58.700" endtime="20230717 20:02:58.701"/>
</kw>
<status status="PASS" starttime="20230717 20:02:42.711" endtime="20230717 20:02:58.702"/>
</kw>
<msg timestamp="20230717 20:02:58.702" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 20:02:42.711" endtime="20230717 20:02:58.702"/>
</kw>
<msg timestamp="20230717 20:02:58.702" level="INFO">${output} = Pipeline[ Id: 7adffc2c-9e94-4914-8b59-50fe3fac600a, Nodes: cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe(ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net/172.25.0.104), ReplicationConfig: RATIS/ONE, State:O...</msg>
<status status="PASS" starttime="20230717 20:02:42.710" endtime="20230717 20:02:58.702"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>STANDALONE/ONE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 20:02:58.703" endtime="20230717 20:02:58.705"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 20:02:42.709" endtime="20230717 20:02:58.706"/>
</test>
<test id="s1-s13-s4-t3" name="List pipelines with explicit host" line="39">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline list --scm ${SCM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 20:02:58.726" level="INFO">Running command 'ozone admin pipeline list --scm scm2.org 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 20:03:14.449" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 20:03:14.449" level="INFO">${output} = Pipeline[ Id: 7adffc2c-9e94-4914-8b59-50fe3fac600a, Nodes: cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe(ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net/172.25.0.104), ReplicationConfig: RATIS/ONE, State:O...</msg>
<status status="PASS" starttime="20230717 20:02:58.720" endtime="20230717 20:03:14.449"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 20:03:14.454" level="INFO">Pipeline[ Id: 7adffc2c-9e94-4914-8b59-50fe3fac600a, Nodes: cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe(ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net/172.25.0.104), ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe, CreationTimestamp2023-07-17T18:43:08.888Z[UTC]]
Pipeline[ Id: 80e0342c-f4f7-4e2e-a6ae-99a56bac1e64, Nodes: cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe(ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net/172.25.0.104), ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2023-07-17T19:41:28.703Z[UTC]]
Pipeline[ Id: 35a72a85-c521-46ce-b844-af6de2037f1e, Nodes: e9096b01-e48e-4ceb-b568-1d22ceed6cac(ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net/172.25.0.102), ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:e9096b01-e48e-4ceb-b568-1d22ceed6cac, CreationTimestamp2023-07-17T18:43:07.051Z[UTC]]
Pipeline[ Id: d8f9e184-d5e9-424a-8e61-ddbbbf581c80, Nodes: e9096b01-e48e-4ceb-b568-1d22ceed6cac(ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net/172.25.0.102), ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2023-07-17T20:02:41.588Z[UTC]]
Pipeline[ Id: d53df065-c93c-4ba4-951d-7ce4c3578383, Nodes: 87c5eb0b-149e-4683-94a4-bc7d39a11a90(ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/172.25.0.103), ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:87c5eb0b-149e-4683-94a4-bc7d39a11a90, CreationTimestamp2023-07-17T18:43:10.355Z[UTC]]
Pipeline[ Id: 4434309e-20b3-4896-aea8-56dfc449007c, Nodes: 87c5eb0b-149e-4683-94a4-bc7d39a11a90(ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/172.25.0.103)e9096b01-e48e-4ceb-b568-1d22ceed6cac(ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net/172.25.0.102)cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe(ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net/172.25.0.104), ReplicationConfig: RATIS/THREE, State:OPEN, leaderId:e9096b01-e48e-4ceb-b568-1d22ceed6cac, CreationTimestamp2023-07-17T18:43:10.566Z[UTC]]
Pipeline[ Id: dccb59df-d6ae-4974-bb3a-70d0b20ec655, Nodes: cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe(ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net/172.25.0.104)87c5eb0b-149e-4683-94a4-bc7d39a11a90(ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/172.25.0.103)e9096b01-e48e-4ceb-b568-1d22ceed6cac(ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net/172.25.0.102), ReplicationConfig: RATIS/THREE, State:OPEN, leaderId:cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe, CreationTimestamp2023-07-17T18:43:10.518Z[UTC]]</msg>
<status status="PASS" starttime="20230717 20:03:14.451" endtime="20230717 20:03:14.454"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 20:03:14.455" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 20:03:14.454" endtime="20230717 20:03:14.455"/>
</kw>
<status status="PASS" starttime="20230717 20:02:58.719" endtime="20230717 20:03:14.455"/>
</kw>
<msg timestamp="20230717 20:03:14.455" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 20:02:58.718" endtime="20230717 20:03:14.455"/>
</kw>
<msg timestamp="20230717 20:03:14.458" level="INFO">${output} = Pipeline[ Id: 7adffc2c-9e94-4914-8b59-50fe3fac600a, Nodes: cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe(ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net/172.25.0.104), ReplicationConfig: RATIS/ONE, State:O...</msg>
<status status="PASS" starttime="20230717 20:02:58.709" endtime="20230717 20:03:14.458"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>STANDALONE/ONE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 20:03:14.458" endtime="20230717 20:03:14.459"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 20:02:58.707" endtime="20230717 20:03:14.461"/>
</test>
<test id="s1-s13-s4-t4" name="Deactivate pipeline" line="43">
<kw name="Execute" library="os">
<arg>ozone admin pipeline deactivate "${PIPELINE}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 20:03:14.479" level="INFO">Running command 'ozone admin pipeline deactivate "d8f9e184-d5e9-424a-8e61-ddbbbf581c80" 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 20:03:31.857" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 20:03:31.857" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 20:03:14.470" endtime="20230717 20:03:31.857"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 20:03:31.861" level="INFO"/>
<status status="PASS" starttime="20230717 20:03:31.859" endtime="20230717 20:03:31.861"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 20:03:31.863" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 20:03:31.863" endtime="20230717 20:03:31.864"/>
</kw>
<status status="PASS" starttime="20230717 20:03:14.468" endtime="20230717 20:03:31.865"/>
</kw>
<msg timestamp="20230717 20:03:31.865" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 20:03:14.467" endtime="20230717 20:03:31.868"/>
</kw>
<status status="PASS" starttime="20230717 20:03:14.464" endtime="20230717 20:03:31.869"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline list | grep "${PIPELINE}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 20:03:31.879" level="INFO">Running command 'ozone admin pipeline list | grep "d8f9e184-d5e9-424a-8e61-ddbbbf581c80" 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 20:03:49.514" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 20:03:49.514" level="INFO">${output} = Pipeline[ Id: d8f9e184-d5e9-424a-8e61-ddbbbf581c80, Nodes: e9096b01-e48e-4ceb-b568-1d22ceed6cac(ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net/172.25.0.102), ReplicationConfig: STANDALONE/ONE, St...</msg>
<status status="PASS" starttime="20230717 20:03:31.874" endtime="20230717 20:03:49.514"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 20:03:49.516" level="INFO">Pipeline[ Id: d8f9e184-d5e9-424a-8e61-ddbbbf581c80, Nodes: e9096b01-e48e-4ceb-b568-1d22ceed6cac(ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net/172.25.0.102), ReplicationConfig: STANDALONE/ONE, State:DORMANT, leaderId:, CreationTimestamp2023-07-17T20:02:41.588Z[UTC]]</msg>
<status status="PASS" starttime="20230717 20:03:49.515" endtime="20230717 20:03:49.517"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 20:03:49.518" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 20:03:49.517" endtime="20230717 20:03:49.518"/>
</kw>
<status status="PASS" starttime="20230717 20:03:31.872" endtime="20230717 20:03:49.519"/>
</kw>
<msg timestamp="20230717 20:03:49.519" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 20:03:31.871" endtime="20230717 20:03:49.519"/>
</kw>
<msg timestamp="20230717 20:03:49.519" level="INFO">${output} = Pipeline[ Id: d8f9e184-d5e9-424a-8e61-ddbbbf581c80, Nodes: e9096b01-e48e-4ceb-b568-1d22ceed6cac(ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net/172.25.0.102), ReplicationConfig: STANDALONE/ONE, St...</msg>
<status status="PASS" starttime="20230717 20:03:31.870" endtime="20230717 20:03:49.519"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>DORMANT</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 20:03:49.520" endtime="20230717 20:03:49.520"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 20:03:14.463" endtime="20230717 20:03:49.521"/>
</test>
<test id="s1-s13-s4-t5" name="Activate pipeline" line="48">
<kw name="Execute" library="os">
<arg>ozone admin pipeline activate "${PIPELINE}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 20:03:49.540" level="INFO">Running command 'ozone admin pipeline activate "d8f9e184-d5e9-424a-8e61-ddbbbf581c80" 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 20:04:05.351" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 20:04:05.351" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 20:03:49.533" endtime="20230717 20:04:05.351"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 20:04:05.354" level="INFO"/>
<status status="PASS" starttime="20230717 20:04:05.353" endtime="20230717 20:04:05.354"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 20:04:05.386" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 20:04:05.354" endtime="20230717 20:04:05.386"/>
</kw>
<status status="PASS" starttime="20230717 20:03:49.531" endtime="20230717 20:04:05.387"/>
</kw>
<msg timestamp="20230717 20:04:05.387" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 20:03:49.530" endtime="20230717 20:04:05.387"/>
</kw>
<status status="PASS" starttime="20230717 20:03:49.523" endtime="20230717 20:04:05.387"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline list | grep "${PIPELINE}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 20:04:05.397" level="INFO">Running command 'ozone admin pipeline list | grep "d8f9e184-d5e9-424a-8e61-ddbbbf581c80" 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 20:04:20.321" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 20:04:20.321" level="INFO">${output} = Pipeline[ Id: d8f9e184-d5e9-424a-8e61-ddbbbf581c80, Nodes: e9096b01-e48e-4ceb-b568-1d22ceed6cac(ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net/172.25.0.102), ReplicationConfig: STANDALONE/ONE, St...</msg>
<status status="PASS" starttime="20230717 20:04:05.391" endtime="20230717 20:04:20.321"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 20:04:20.323" level="INFO">Pipeline[ Id: d8f9e184-d5e9-424a-8e61-ddbbbf581c80, Nodes: e9096b01-e48e-4ceb-b568-1d22ceed6cac(ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net/172.25.0.102), ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2023-07-17T20:02:41.588Z[UTC]]</msg>
<status status="PASS" starttime="20230717 20:04:20.322" endtime="20230717 20:04:20.323"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 20:04:20.326" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 20:04:20.323" endtime="20230717 20:04:20.326"/>
</kw>
<status status="PASS" starttime="20230717 20:04:05.391" endtime="20230717 20:04:20.327"/>
</kw>
<msg timestamp="20230717 20:04:20.327" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 20:04:05.390" endtime="20230717 20:04:20.327"/>
</kw>
<msg timestamp="20230717 20:04:20.327" level="INFO">${output} = Pipeline[ Id: d8f9e184-d5e9-424a-8e61-ddbbbf581c80, Nodes: e9096b01-e48e-4ceb-b568-1d22ceed6cac(ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net/172.25.0.102), ReplicationConfig: STANDALONE/ONE, St...</msg>
<status status="PASS" starttime="20230717 20:04:05.388" endtime="20230717 20:04:20.328"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>OPEN</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 20:04:20.328" endtime="20230717 20:04:20.328"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 20:03:49.522" endtime="20230717 20:04:20.329"/>
</test>
<test id="s1-s13-s4-t6" name="Close pipeline" line="53">
<kw name="Execute" library="os">
<arg>ozone admin pipeline close "${PIPELINE}"</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 20:04:20.351" level="INFO">Running command 'ozone admin pipeline close "d8f9e184-d5e9-424a-8e61-ddbbbf581c80" 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 20:04:36.101" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 20:04:36.101" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 20:04:20.342" endtime="20230717 20:04:36.101"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 20:04:36.103" level="INFO"/>
<status status="PASS" starttime="20230717 20:04:36.102" endtime="20230717 20:04:36.103"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 20:04:36.106" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 20:04:36.105" endtime="20230717 20:04:36.106"/>
</kw>
<status status="PASS" starttime="20230717 20:04:20.339" endtime="20230717 20:04:36.106"/>
</kw>
<msg timestamp="20230717 20:04:36.106" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 20:04:20.337" endtime="20230717 20:04:36.107"/>
</kw>
<status status="PASS" starttime="20230717 20:04:20.336" endtime="20230717 20:04:36.107"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin pipeline list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 20:04:36.122" level="INFO">Running command 'ozone admin pipeline list 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 20:04:51.757" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 20:04:51.757" level="INFO">${output} = Pipeline[ Id: 7adffc2c-9e94-4914-8b59-50fe3fac600a, Nodes: cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe(ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net/172.25.0.104), ReplicationConfig: RATIS/ONE, State:O...</msg>
<status status="PASS" starttime="20230717 20:04:36.116" endtime="20230717 20:04:51.757"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 20:04:51.759" level="INFO">Pipeline[ Id: 7adffc2c-9e94-4914-8b59-50fe3fac600a, Nodes: cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe(ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net/172.25.0.104), ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe, CreationTimestamp2023-07-17T18:43:08.888Z[UTC]]
Pipeline[ Id: 80e0342c-f4f7-4e2e-a6ae-99a56bac1e64, Nodes: cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe(ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net/172.25.0.104), ReplicationConfig: STANDALONE/ONE, State:OPEN, leaderId:, CreationTimestamp2023-07-17T19:41:28.703Z[UTC]]
Pipeline[ Id: 35a72a85-c521-46ce-b844-af6de2037f1e, Nodes: e9096b01-e48e-4ceb-b568-1d22ceed6cac(ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net/172.25.0.102), ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:e9096b01-e48e-4ceb-b568-1d22ceed6cac, CreationTimestamp2023-07-17T18:43:07.051Z[UTC]]
Pipeline[ Id: d8f9e184-d5e9-424a-8e61-ddbbbf581c80, Nodes: e9096b01-e48e-4ceb-b568-1d22ceed6cac(ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net/172.25.0.102), ReplicationConfig: STANDALONE/ONE, State:CLOSED, leaderId:, CreationTimestamp2023-07-17T20:02:41.588Z[UTC]]
Pipeline[ Id: d53df065-c93c-4ba4-951d-7ce4c3578383, Nodes: 87c5eb0b-149e-4683-94a4-bc7d39a11a90(ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/172.25.0.103), ReplicationConfig: RATIS/ONE, State:OPEN, leaderId:87c5eb0b-149e-4683-94a4-bc7d39a11a90, CreationTimestamp2023-07-17T18:43:10.355Z[UTC]]
Pipeline[ Id: 4434309e-20b3-4896-aea8-56dfc449007c, Nodes: 87c5eb0b-149e-4683-94a4-bc7d39a11a90(ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/172.25.0.103)e9096b01-e48e-4ceb-b568-1d22ceed6cac(ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net/172.25.0.102)cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe(ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net/172.25.0.104), ReplicationConfig: RATIS/THREE, State:OPEN, leaderId:e9096b01-e48e-4ceb-b568-1d22ceed6cac, CreationTimestamp2023-07-17T18:43:10.566Z[UTC]]
Pipeline[ Id: dccb59df-d6ae-4974-bb3a-70d0b20ec655, Nodes: cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe(ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net/172.25.0.104)87c5eb0b-149e-4683-94a4-bc7d39a11a90(ozonesecure-ha_datanode2_1.ozonesecure-ha_ozone_net/172.25.0.103)e9096b01-e48e-4ceb-b568-1d22ceed6cac(ozonesecure-ha_datanode1_1.ozonesecure-ha_ozone_net/172.25.0.102), ReplicationConfig: RATIS/THREE, State:OPEN, leaderId:cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe, CreationTimestamp2023-07-17T18:43:10.518Z[UTC]]</msg>
<status status="PASS" starttime="20230717 20:04:51.758" endtime="20230717 20:04:51.759"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 20:04:51.761" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 20:04:51.759" endtime="20230717 20:04:51.761"/>
</kw>
<status status="PASS" starttime="20230717 20:04:36.111" endtime="20230717 20:04:51.762"/>
</kw>
<msg timestamp="20230717 20:04:51.762" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 20:04:36.110" endtime="20230717 20:04:51.763"/>
</kw>
<msg timestamp="20230717 20:04:51.765" level="INFO">${output} = Pipeline[ Id: 7adffc2c-9e94-4914-8b59-50fe3fac600a, Nodes: cd78c05d-01cf-4ac0-9b33-21fd1afbd3fe(ozonesecure-ha_datanode3_1.ozonesecure-ha_ozone_net/172.25.0.104), ReplicationConfig: RATIS/ONE, State:O...</msg>
<status status="PASS" starttime="20230717 20:04:36.109" endtime="20230717 20:04:51.765"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${PIPELINE}' not in '''${output}'''</arg>
<arg>Pipeline already scrubbed</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230717 20:04:51.766" endtime="20230717 20:04:51.769"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${output}</arg>
<arg>${PIPELINE}.*CLOSED</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230717 20:04:51.770" endtime="20230717 20:04:51.771"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 20:04:20.332" endtime="20230717 20:04:51.773"/>
</test>
<test id="s1-s13-s4-t7" name="Incomplete command" line="59">
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>ozone admin pipeline</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 20:04:51.788" level="INFO">Running command 'ozone admin pipeline 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 20:05:02.736" level="INFO">${rc} = 255</msg>
<msg timestamp="20230717 20:05:02.736" level="INFO">${output} = Incomplete command
Usage: ozone admin pipeline [-hV] [COMMAND]
Pipeline specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Com...</msg>
<status status="PASS" starttime="20230717 20:04:51.778" endtime="20230717 20:05:02.736"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 20:05:02.742" level="INFO">Incomplete command
Usage: ozone admin pipeline [-hV] [COMMAND]
Pipeline specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Commands:
  list        List all active pipelines
  activate    Activates the given Pipeline
  deactivate  Deactivates the given Pipeline
  create      create pipeline
  close       Close pipeline</msg>
<status status="PASS" starttime="20230717 20:05:02.741" endtime="20230717 20:05:02.742"/>
</kw>
<msg timestamp="20230717 20:05:02.743" level="INFO">${output} = Incomplete command
Usage: ozone admin pipeline [-hV] [COMMAND]
Pipeline specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Com...</msg>
<status status="PASS" starttime="20230717 20:04:51.776" endtime="20230717 20:05:02.743"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Incomplete command</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 20:05:02.743" endtime="20230717 20:05:02.744"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>close</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 20:05:02.745" endtime="20230717 20:05:02.745"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>create</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 20:05:02.745" endtime="20230717 20:05:02.746"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>deactivate</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 20:05:02.747" endtime="20230717 20:05:02.747"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>list</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 20:05:02.747" endtime="20230717 20:05:02.748"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 20:04:51.774" endtime="20230717 20:05:02.749"/>
</test>
<doc>Test ozone admin pipeline command</doc>
<status status="PASS" starttime="20230717 20:02:28.358" endtime="20230717 20:05:02.750"/>
</suite>
<suite id="s1-s13-s5" name="Replicationmanager" source="/opt/hadoop/smoketest/admincli/replicationmanager.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 20:05:02.775" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 20:05:02.782" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 20:05:02.782" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20230717 20:05:02.771" endtime="20230717 20:05:02.782"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 20:05:02.784" level="INFO">s3g</msg>
<status status="PASS" starttime="20230717 20:05:02.783" endtime="20230717 20:05:02.784"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 20:05:02.785" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 20:05:02.784" endtime="20230717 20:05:02.785"/>
</kw>
<status status="PASS" starttime="20230717 20:05:02.770" endtime="20230717 20:05:02.785"/>
</kw>
<msg timestamp="20230717 20:05:02.785" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 20:05:02.769" endtime="20230717 20:05:02.785"/>
</kw>
<msg timestamp="20230717 20:05:02.786" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20230717 20:05:02.768" endtime="20230717 20:05:02.786"/>
</kw>
<msg timestamp="20230717 20:05:02.786" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230717 20:05:02.767" endtime="20230717 20:05:02.787"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230717 20:05:02.787" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230717 20:05:02.787" endtime="20230717 20:05:02.787"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 20:05:02.806" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 20:05:02.869" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 20:05:02.870" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 20:05:02.794" endtime="20230717 20:05:02.870"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 20:05:02.871" level="INFO"/>
<status status="PASS" starttime="20230717 20:05:02.871" endtime="20230717 20:05:02.871"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 20:05:02.872" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 20:05:02.872" endtime="20230717 20:05:02.873"/>
</kw>
<status status="PASS" starttime="20230717 20:05:02.792" endtime="20230717 20:05:02.873"/>
</kw>
<msg timestamp="20230717 20:05:02.873" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 20:05:02.790" endtime="20230717 20:05:02.873"/>
</kw>
<status status="PASS" starttime="20230717 20:05:02.789" endtime="20230717 20:05:02.873"/>
</kw>
<status status="PASS" starttime="20230717 20:05:02.788" endtime="20230717 20:05:02.873"/>
</kw>
<status status="PASS" starttime="20230717 20:05:02.766" endtime="20230717 20:05:02.874"/>
</kw>
<status status="PASS" starttime="20230717 20:05:02.765" endtime="20230717 20:05:02.874"/>
</kw>
<test id="s1-s13-s5-t1" name="Check replicationmanager" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin replicationmanager status</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 20:05:02.887" level="INFO">Running command 'ozone admin replicationmanager status 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 20:05:18.941" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 20:05:18.941" level="INFO">${output} = ReplicationManager is Running.</msg>
<status status="PASS" starttime="20230717 20:05:02.879" endtime="20230717 20:05:18.941"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 20:05:18.943" level="INFO">ReplicationManager is Running.</msg>
<status status="PASS" starttime="20230717 20:05:18.941" endtime="20230717 20:05:18.943"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 20:05:18.944" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 20:05:18.943" endtime="20230717 20:05:18.945"/>
</kw>
<status status="PASS" starttime="20230717 20:05:02.879" endtime="20230717 20:05:18.945"/>
</kw>
<msg timestamp="20230717 20:05:18.945" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 20:05:02.877" endtime="20230717 20:05:18.945"/>
</kw>
<msg timestamp="20230717 20:05:18.947" level="INFO">${output} = ReplicationManager is Running.</msg>
<status status="PASS" starttime="20230717 20:05:02.876" endtime="20230717 20:05:18.947"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>ReplicationManager</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 20:05:18.948" endtime="20230717 20:05:18.949"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Running</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 20:05:18.950" endtime="20230717 20:05:18.950"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 20:05:02.874" endtime="20230717 20:05:18.952"/>
</test>
<test id="s1-s13-s5-t2" name="Check replicationmanager with explicit host" line="32">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin replicationmanager status --scm ${SCM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 20:05:18.965" level="INFO">Running command 'ozone admin replicationmanager status --scm scm2.org 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 20:05:34.779" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 20:05:34.779" level="INFO">${output} = ReplicationManager is Running.</msg>
<status status="PASS" starttime="20230717 20:05:18.961" endtime="20230717 20:05:34.779"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 20:05:34.783" level="INFO">ReplicationManager is Running.</msg>
<status status="PASS" starttime="20230717 20:05:34.780" endtime="20230717 20:05:34.784"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 20:05:34.785" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 20:05:34.785" endtime="20230717 20:05:34.785"/>
</kw>
<status status="PASS" starttime="20230717 20:05:18.959" endtime="20230717 20:05:34.786"/>
</kw>
<msg timestamp="20230717 20:05:34.786" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 20:05:18.958" endtime="20230717 20:05:34.787"/>
</kw>
<msg timestamp="20230717 20:05:34.789" level="INFO">${output} = ReplicationManager is Running.</msg>
<status status="PASS" starttime="20230717 20:05:18.955" endtime="20230717 20:05:34.789"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>ReplicationManager</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 20:05:34.789" endtime="20230717 20:05:34.791"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Running</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 20:05:34.791" endtime="20230717 20:05:34.792"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 20:05:18.954" endtime="20230717 20:05:34.793"/>
</test>
<test id="s1-s13-s5-t3" name="Stop replicationmanager" line="37">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin replicationmanager stop</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 20:05:34.813" level="INFO">Running command 'ozone admin replicationmanager stop 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 20:05:50.362" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 20:05:50.363" level="INFO">${output} = Stopping ReplicationManager...
Requested SCM to stop ReplicationManager, it might take sometime for the ReplicationManager to stop.</msg>
<status status="PASS" starttime="20230717 20:05:34.803" endtime="20230717 20:05:50.364"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 20:05:50.368" level="INFO">Stopping ReplicationManager...
Requested SCM to stop ReplicationManager, it might take sometime for the ReplicationManager to stop.</msg>
<status status="PASS" starttime="20230717 20:05:50.365" endtime="20230717 20:05:50.368"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 20:05:50.371" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 20:05:50.369" endtime="20230717 20:05:50.371"/>
</kw>
<status status="PASS" starttime="20230717 20:05:34.801" endtime="20230717 20:05:50.372"/>
</kw>
<msg timestamp="20230717 20:05:50.372" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 20:05:34.799" endtime="20230717 20:05:50.372"/>
</kw>
<msg timestamp="20230717 20:05:50.373" level="INFO">${output} = Stopping ReplicationManager...
Requested SCM to stop ReplicationManager, it might take sometime for the ReplicationManager to stop.</msg>
<status status="PASS" starttime="20230717 20:05:34.799" endtime="20230717 20:05:50.373"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Stopping ReplicationManager</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 20:05:50.374" endtime="20230717 20:05:50.376"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>30sec</arg>
<arg>5sec</arg>
<arg>Execute</arg>
<arg>ozone admin replicationmanager status | grep -q 'is Not Running'</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>ozone admin replicationmanager status | grep -q 'is Not Running'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 20:05:50.392" level="INFO">Running command 'ozone admin replicationmanager status | grep -q 'is Not Running' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 20:06:05.492" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 20:06:05.492" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 20:05:50.382" endtime="20230717 20:06:05.498"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 20:06:05.502" level="INFO"/>
<status status="PASS" starttime="20230717 20:06:05.499" endtime="20230717 20:06:05.502"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 20:06:05.506" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 20:06:05.504" endtime="20230717 20:06:05.506"/>
</kw>
<status status="PASS" starttime="20230717 20:05:50.381" endtime="20230717 20:06:05.507"/>
</kw>
<msg timestamp="20230717 20:06:05.507" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 20:05:50.380" endtime="20230717 20:06:05.507"/>
</kw>
<status status="PASS" starttime="20230717 20:05:50.378" endtime="20230717 20:06:05.508"/>
</kw>
<status status="PASS" starttime="20230717 20:05:50.376" endtime="20230717 20:06:05.508"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 20:05:34.796" endtime="20230717 20:06:05.509"/>
</test>
<test id="s1-s13-s5-t4" name="Start replicationmanager" line="42">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin replicationmanager start</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 20:06:05.530" level="INFO">Running command 'ozone admin replicationmanager start 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 20:06:20.080" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 20:06:20.080" level="INFO">${output} = Starting ReplicationManager...</msg>
<status status="PASS" starttime="20230717 20:06:05.519" endtime="20230717 20:06:20.080"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 20:06:20.083" level="INFO">Starting ReplicationManager...</msg>
<status status="PASS" starttime="20230717 20:06:20.081" endtime="20230717 20:06:20.083"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 20:06:20.084" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 20:06:20.083" endtime="20230717 20:06:20.084"/>
</kw>
<status status="PASS" starttime="20230717 20:06:05.518" endtime="20230717 20:06:20.085"/>
</kw>
<msg timestamp="20230717 20:06:20.085" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 20:06:05.518" endtime="20230717 20:06:20.085"/>
</kw>
<msg timestamp="20230717 20:06:20.086" level="INFO">${output} = Starting ReplicationManager...</msg>
<status status="PASS" starttime="20230717 20:06:05.516" endtime="20230717 20:06:20.086"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Starting ReplicationManager</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 20:06:20.086" endtime="20230717 20:06:20.087"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>30sec</arg>
<arg>5sec</arg>
<arg>Execute</arg>
<arg>ozone admin replicationmanager status | grep -q 'is Running'</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>ozone admin replicationmanager status | grep -q 'is Running'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 20:06:20.095" level="INFO">Running command 'ozone admin replicationmanager status | grep -q 'is Running' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 20:06:35.926" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 20:06:35.926" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 20:06:20.091" endtime="20230717 20:06:35.926"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 20:06:35.928" level="INFO"/>
<status status="PASS" starttime="20230717 20:06:35.927" endtime="20230717 20:06:35.929"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 20:06:35.930" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 20:06:35.929" endtime="20230717 20:06:35.932"/>
</kw>
<status status="PASS" starttime="20230717 20:06:20.090" endtime="20230717 20:06:35.932"/>
</kw>
<msg timestamp="20230717 20:06:35.932" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 20:06:20.089" endtime="20230717 20:06:35.934"/>
</kw>
<status status="PASS" starttime="20230717 20:06:20.088" endtime="20230717 20:06:35.934"/>
</kw>
<status status="PASS" starttime="20230717 20:06:20.087" endtime="20230717 20:06:35.934"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 20:06:05.512" endtime="20230717 20:06:35.935"/>
</test>
<test id="s1-s13-s5-t5" name="Incomplete command" line="47">
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>ozone admin replicationmanager</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 20:06:35.952" level="INFO">Running command 'ozone admin replicationmanager 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 20:06:48.078" level="INFO">${rc} = 255</msg>
<msg timestamp="20230717 20:06:48.078" level="INFO">${output} = Incomplete command
Usage: ozone admin replicationmanager [-hV] [COMMAND]
ReplicationManager specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version infor...</msg>
<status status="PASS" starttime="20230717 20:06:35.943" endtime="20230717 20:06:48.079"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 20:06:48.081" level="INFO">Incomplete command
Usage: ozone admin replicationmanager [-hV] [COMMAND]
ReplicationManager specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Commands:
  start   Start ReplicationManager
  stop    Stop ReplicationManager
  status  Check if ReplicationManager is running or not</msg>
<status status="PASS" starttime="20230717 20:06:48.080" endtime="20230717 20:06:48.082"/>
</kw>
<msg timestamp="20230717 20:06:48.082" level="INFO">${output} = Incomplete command
Usage: ozone admin replicationmanager [-hV] [COMMAND]
ReplicationManager specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version infor...</msg>
<status status="PASS" starttime="20230717 20:06:35.941" endtime="20230717 20:06:48.082"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Incomplete command</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 20:06:48.082" endtime="20230717 20:06:48.083"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>start</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 20:06:48.084" endtime="20230717 20:06:48.085"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>stop</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 20:06:48.085" endtime="20230717 20:06:48.086"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>status</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 20:06:48.086" endtime="20230717 20:06:48.086"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 20:06:35.938" endtime="20230717 20:06:48.087"/>
</test>
<doc>Test ozone admin replicationmanager command</doc>
<status status="PASS" starttime="20230717 20:05:02.753" endtime="20230717 20:06:48.091"/>
</suite>
<suite id="s1-s13-s6" name="Safemode" source="/opt/hadoop/smoketest/admincli/safemode.robot">
<test id="s1-s13-s6-t1" name="Check safemode" line="26">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin safemode status</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 20:06:48.120" level="INFO">Running command 'ozone admin safemode status 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 20:07:02.848" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 20:07:02.848" level="INFO">${output} = SCM is out of safe mode.</msg>
<status status="PASS" starttime="20230717 20:06:48.116" endtime="20230717 20:07:02.848"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 20:07:02.850" level="INFO">SCM is out of safe mode.</msg>
<status status="PASS" starttime="20230717 20:07:02.849" endtime="20230717 20:07:02.850"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 20:07:02.851" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 20:07:02.850" endtime="20230717 20:07:02.851"/>
</kw>
<status status="PASS" starttime="20230717 20:06:48.114" endtime="20230717 20:07:02.851"/>
</kw>
<msg timestamp="20230717 20:07:02.851" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 20:06:48.114" endtime="20230717 20:07:02.852"/>
</kw>
<msg timestamp="20230717 20:07:02.852" level="INFO">${output} = SCM is out of safe mode.</msg>
<status status="PASS" starttime="20230717 20:06:48.113" endtime="20230717 20:07:02.852"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>SCM is out of safe mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 20:07:02.852" endtime="20230717 20:07:02.852"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 20:06:48.112" endtime="20230717 20:07:02.853"/>
</test>
<test id="s1-s13-s6-t2" name="Check safemode with explicit host" line="30">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin safemode status --scm ${SCM}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 20:07:02.865" level="INFO">Running command 'ozone admin safemode status --scm scm2.org 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 20:07:19.075" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 20:07:19.075" level="INFO">${output} = SCM is out of safe mode.</msg>
<status status="PASS" starttime="20230717 20:07:02.859" endtime="20230717 20:07:19.075"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 20:07:19.077" level="INFO">SCM is out of safe mode.</msg>
<status status="PASS" starttime="20230717 20:07:19.076" endtime="20230717 20:07:19.078"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 20:07:19.078" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 20:07:19.078" endtime="20230717 20:07:19.079"/>
</kw>
<status status="PASS" starttime="20230717 20:07:02.858" endtime="20230717 20:07:19.079"/>
</kw>
<msg timestamp="20230717 20:07:19.079" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 20:07:02.858" endtime="20230717 20:07:19.079"/>
</kw>
<msg timestamp="20230717 20:07:19.080" level="INFO">${output} = SCM is out of safe mode.</msg>
<status status="PASS" starttime="20230717 20:07:02.856" endtime="20230717 20:07:19.080"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>SCM is out of safe mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 20:07:19.080" endtime="20230717 20:07:19.081"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 20:07:02.854" endtime="20230717 20:07:19.081"/>
</test>
<test id="s1-s13-s6-t3" name="Wait for safemode exit" line="34">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin safemode wait -t 2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 20:07:19.102" level="INFO">Running command 'ozone admin safemode wait -t 2 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 20:07:34.501" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 20:07:34.501" level="INFO">${output} = SCM is out of safe mode.</msg>
<status status="PASS" starttime="20230717 20:07:19.092" endtime="20230717 20:07:34.501"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 20:07:34.505" level="INFO">SCM is out of safe mode.</msg>
<status status="PASS" starttime="20230717 20:07:34.502" endtime="20230717 20:07:34.505"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 20:07:34.507" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 20:07:34.506" endtime="20230717 20:07:34.507"/>
</kw>
<status status="PASS" starttime="20230717 20:07:19.090" endtime="20230717 20:07:34.509"/>
</kw>
<msg timestamp="20230717 20:07:34.510" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 20:07:19.089" endtime="20230717 20:07:34.510"/>
</kw>
<msg timestamp="20230717 20:07:34.510" level="INFO">${output} = SCM is out of safe mode.</msg>
<status status="PASS" starttime="20230717 20:07:19.086" endtime="20230717 20:07:34.510"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>SCM is out of safe mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 20:07:34.510" endtime="20230717 20:07:34.511"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 20:07:19.084" endtime="20230717 20:07:34.511"/>
</test>
<test id="s1-s13-s6-t4" name="Incomplete command" line="38">
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>ozone admin safemode</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 20:07:34.522" level="INFO">Running command 'ozone admin safemode 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 20:07:46.066" level="INFO">${rc} = 255</msg>
<msg timestamp="20230717 20:07:46.066" level="INFO">${output} = Incomplete command
Usage: ozone admin safemode [-hV] [COMMAND]
Safe mode specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Co...</msg>
<status status="PASS" starttime="20230717 20:07:34.516" endtime="20230717 20:07:46.066"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 20:07:46.069" level="INFO">Incomplete command
Usage: ozone admin safemode [-hV] [COMMAND]
Safe mode specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Commands:
  status  Check if SCM is in safe mode
  exit    Force SCM out of safe mode
  wait    Wait until the scm is out from the safe mode.</msg>
<status status="PASS" starttime="20230717 20:07:46.068" endtime="20230717 20:07:46.072"/>
</kw>
<msg timestamp="20230717 20:07:46.072" level="INFO">${output} = Incomplete command
Usage: ozone admin safemode [-hV] [COMMAND]
Safe mode specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Co...</msg>
<status status="PASS" starttime="20230717 20:07:34.515" endtime="20230717 20:07:46.072"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Incomplete command</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 20:07:46.073" endtime="20230717 20:07:46.075"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>status</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 20:07:46.075" endtime="20230717 20:07:46.077"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>exit</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 20:07:46.077" endtime="20230717 20:07:46.078"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>wait</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230717 20:07:46.079" endtime="20230717 20:07:46.080"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 20:07:34.513" endtime="20230717 20:07:46.082"/>
</test>
<doc>Test ozone admin safemode command</doc>
<status status="PASS" starttime="20230717 20:06:48.098" endtime="20230717 20:07:46.085"/>
</suite>
<suite id="s1-s13-s7" name="Scmrole" source="/opt/hadoop/smoketest/admincli/scmrole.robot">
<test id="s1-s13-s7-t1" name="Run scm roles" line="26">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin scm roles</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 20:07:46.133" level="INFO">Running command 'ozone admin scm roles 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 20:08:03.710" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 20:08:03.710" level="INFO">${output} = scm1.org:9894:LEADER:da3b10bc-ec4c-480f-b5d0-63f9c7e74e53:172.25.0.116
scm3.org:9894:FOLLOWER:0cb57506-2706-4c25-9881-ed7ad0f47ea8:172.25.0.118
scm2.org:9894:FOLLOWER:58d8a3f7-6c81-4819-84ff-6aff5b0ce...</msg>
<status status="PASS" starttime="20230717 20:07:46.126" endtime="20230717 20:08:03.710"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 20:08:03.712" level="INFO">scm1.org:9894:LEADER:da3b10bc-ec4c-480f-b5d0-63f9c7e74e53:172.25.0.116
scm3.org:9894:FOLLOWER:0cb57506-2706-4c25-9881-ed7ad0f47ea8:172.25.0.118
scm2.org:9894:FOLLOWER:58d8a3f7-6c81-4819-84ff-6aff5b0ce812:172.25.0.117</msg>
<status status="PASS" starttime="20230717 20:08:03.711" endtime="20230717 20:08:03.718"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 20:08:03.723" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 20:08:03.718" endtime="20230717 20:08:03.724"/>
</kw>
<status status="PASS" starttime="20230717 20:07:46.123" endtime="20230717 20:08:03.727"/>
</kw>
<msg timestamp="20230717 20:08:03.728" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 20:07:46.122" endtime="20230717 20:08:03.728"/>
</kw>
<msg timestamp="20230717 20:08:03.728" level="INFO">${output} = scm1.org:9894:LEADER:da3b10bc-ec4c-480f-b5d0-63f9c7e74e53:172.25.0.116
scm3.org:9894:FOLLOWER:0cb57506-2706-4c25-9881-ed7ad0f47ea8:172.25.0.118
scm2.org:9894:FOLLOWER:58d8a3f7-6c81-4819-84ff-6aff5b0ce...</msg>
<status status="PASS" starttime="20230717 20:07:46.120" endtime="20230717 20:08:03.728"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${output}</arg>
<arg>[scm:9894(:LEADER|)]</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230717 20:08:03.731" endtime="20230717 20:08:03.733"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 20:07:46.116" endtime="20230717 20:08:03.733"/>
</test>
<test id="s1-s13-s7-t2" name="List scm roles as JSON" line="30">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin scm roles --json</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 20:08:03.743" level="INFO">Running command 'ozone admin scm roles --json 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 20:08:19.725" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 20:08:19.725" level="INFO">${output} = {
  "scm1.org" : {
    "address" : "scm1.org:9894",
    "raftPeerRole" : "LEADER",
    "ID" : "da3b10bc-ec4c-480f-b5d0-63f9c7e74e53",
    "InetAddress" : "172.25.0.116"
  },
  "scm3.org" : {
    "addr...</msg>
<status status="PASS" starttime="20230717 20:08:03.739" endtime="20230717 20:08:19.725"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 20:08:19.728" level="INFO">{
  "scm1.org" : {
    "address" : "scm1.org:9894",
    "raftPeerRole" : "LEADER",
    "ID" : "da3b10bc-ec4c-480f-b5d0-63f9c7e74e53",
    "InetAddress" : "172.25.0.116"
  },
  "scm3.org" : {
    "address" : "scm3.org:9894",
    "raftPeerRole" : "FOLLOWER",
    "ID" : "0cb57506-2706-4c25-9881-ed7ad0f47ea8",
    "InetAddress" : "172.25.0.118"
  },
  "scm2.org" : {
    "address" : "scm2.org:9894",
    "raftPeerRole" : "FOLLOWER",
    "ID" : "58d8a3f7-6c81-4819-84ff-6aff5b0ce812",
    "InetAddress" : "172.25.0.117"
  }
}</msg>
<status status="PASS" starttime="20230717 20:08:19.726" endtime="20230717 20:08:19.728"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 20:08:19.729" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 20:08:19.728" endtime="20230717 20:08:19.729"/>
</kw>
<status status="PASS" starttime="20230717 20:08:03.737" endtime="20230717 20:08:19.729"/>
</kw>
<msg timestamp="20230717 20:08:19.729" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 20:08:03.737" endtime="20230717 20:08:19.730"/>
</kw>
<msg timestamp="20230717 20:08:19.730" level="INFO">${output} = {
  "scm1.org" : {
    "address" : "scm1.org:9894",
    "raftPeerRole" : "LEADER",
    "ID" : "da3b10bc-ec4c-480f-b5d0-63f9c7e74e53",
    "InetAddress" : "172.25.0.116"
  },
  "scm3.org" : {
    "addr...</msg>
<status status="PASS" starttime="20230717 20:08:03.735" endtime="20230717 20:08:19.730"/>
</kw>
<kw name="Execute" library="os">
<var>${leader}</var>
<arg>echo '${output}' | jq -r '.[] | select(.raftPeerRole == "LEADER")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 20:08:19.745" level="INFO">Running command 'echo '{
  "scm1.org" : {
    "address" : "scm1.org:9894",
    "raftPeerRole" : "LEADER",
    "ID" : "da3b10bc-ec4c-480f-b5d0-63f9c7e74e53",
    "InetAddress" : "172.25.0.116"
  },
  "scm3.org" : {
    "address" : "scm3.org:9894",
    "raftPeerRole" : "FOLLOWER",
    "ID" : "0cb57506-2706-4c25-9881-ed7ad0f47ea8",
    "InetAddress" : "172.25.0.118"
  },
  "scm2.org" : {
    "address" : "scm2.org:9894",
    "raftPeerRole" : "FOLLOWER",
    "ID" : "58d8a3f7-6c81-4819-84ff-6aff5b0ce812",
    "InetAddress" : "172.25.0.117"
  }
}' | jq -r '.[] | select(.raftPeerRole == "LEADER")' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 20:08:19.862" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 20:08:19.862" level="INFO">${output} = {
  "address": "scm1.org:9894",
  "raftPeerRole": "LEADER",
  "ID": "da3b10bc-ec4c-480f-b5d0-63f9c7e74e53",
  "InetAddress": "172.25.0.116"
}</msg>
<status status="PASS" starttime="20230717 20:08:19.737" endtime="20230717 20:08:19.862"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 20:08:19.864" level="INFO">{
  "address": "scm1.org:9894",
  "raftPeerRole": "LEADER",
  "ID": "da3b10bc-ec4c-480f-b5d0-63f9c7e74e53",
  "InetAddress": "172.25.0.116"
}</msg>
<status status="PASS" starttime="20230717 20:08:19.863" endtime="20230717 20:08:19.865"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 20:08:19.868" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 20:08:19.867" endtime="20230717 20:08:19.868"/>
</kw>
<status status="PASS" starttime="20230717 20:08:19.735" endtime="20230717 20:08:19.868"/>
</kw>
<msg timestamp="20230717 20:08:19.868" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 20:08:19.734" endtime="20230717 20:08:19.869"/>
</kw>
<msg timestamp="20230717 20:08:19.871" level="INFO">${leader} = {
  "address": "scm1.org:9894",
  "raftPeerRole": "LEADER",
  "ID": "da3b10bc-ec4c-480f-b5d0-63f9c7e74e53",
  "InetAddress": "172.25.0.116"
}</msg>
<status status="PASS" starttime="20230717 20:08:19.731" endtime="20230717 20:08:19.871"/>
</kw>
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${leader}</arg>
<arg>${EMPTY}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="PASS" starttime="20230717 20:08:19.872" endtime="20230717 20:08:19.882"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230717 20:08:03.734" endtime="20230717 20:08:19.882"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230717 20:07:46.092" endtime="20230717 20:08:19.884"/>
</suite>
<status status="PASS" starttime="20230717 19:56:14.251" endtime="20230717 20:08:19.896"/>
</suite>
<suite id="s1-s14" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s14-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:44:31.459" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:44:31.465" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:44:31.465" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20230717 18:44:31.456" endtime="20230717 18:44:31.465"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:44:31.467" level="INFO">s3g</msg>
<status status="PASS" starttime="20230717 18:44:31.466" endtime="20230717 18:44:31.467"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:44:31.468" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:44:31.467" endtime="20230717 18:44:31.468"/>
</kw>
<status status="PASS" starttime="20230717 18:44:31.455" endtime="20230717 18:44:31.468"/>
</kw>
<msg timestamp="20230717 18:44:31.468" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:44:31.454" endtime="20230717 18:44:31.468"/>
</kw>
<msg timestamp="20230717 18:44:31.469" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20230717 18:44:31.454" endtime="20230717 18:44:31.469"/>
</kw>
<msg timestamp="20230717 18:44:31.469" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230717 18:44:31.453" endtime="20230717 18:44:31.470"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230717 18:44:31.472" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230717 18:44:31.470" endtime="20230717 18:44:31.472"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230717 18:44:31.482" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230717 18:44:31.558" level="INFO">${rc} = 0</msg>
<msg timestamp="20230717 18:44:31.558" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230717 18:44:31.475" endtime="20230717 18:44:31.558"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230717 18:44:31.560" level="INFO"/>
<status status="PASS" starttime="20230717 18:44:31.559" endtime="20230717 18:44:31.561"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230717 18:44:31.562" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230717 18:44:31.561" endtime="20230717 18:44:31.562"/>
</kw>
<status status="PASS" starttime="20230717 18:44:31.474" endtime="20230717 18:44:31.562"/>
</kw>
<msg timestamp="20230717 18:44:31.562" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230717 18:44:31.474" endtime="20230717 18:44:31.563"/>
</kw>
<status status="PASS" starttime="20230717 18:44:31.473" endtime="20230717 18:44:31.563"/>
</kw>
<status status="PASS" starttime="20230717 18:44:31.472" endtime="20230717 18:44:31.563"/>
</kw>
<status status="PASS" starttime="20230717 18:44:31.452" endtime="20230717 18:44:31.563"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230717 18:44:31.451" endtime="20230717 18:44:31.564"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20230717 18:44:31.363" endtime="20230717 18:44:31.566"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="5224366"/>
</suite>
<statistics>
<total>
<stat pass="272" fail="0" skip="2">All Tests</stat>
</total>
<tag>
<stat pass="7" fail="0" skip="0">no-bucket-type</stat>
</tag>
<suite>
<stat pass="272" fail="0" skip="2" id="s1" name="ozonesecure-ha">ozonesecure-ha</stat>
<stat pass="17" fail="0" skip="0" id="s1-s1" name="Freon">ozonesecure-ha.Freon</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s1" name="echoRPCLoad">ozonesecure-ha.Freon.echoRPCLoad</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s2" name="Generate-Chunk">ozonesecure-ha.Freon.Generate-Chunk</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s3" name="Generate">ozonesecure-ha.Freon.Generate</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s4" name="Read-Write-Key">ozonesecure-ha.Freon.Read-Write-Key</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1-s5" name="Remove">ozonesecure-ha.Freon.Remove</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s6" name="Validate-Chunk">ozonesecure-ha.Freon.Validate-Chunk</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s7" name="Validate">ozonesecure-ha.Freon.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Kinit">ozonesecure-ha.Kinit</stat>
<stat pass="3" fail="0" skip="0" id="s1-s3" name="Primordial-Scm">ozonesecure-ha.Primordial-Scm</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Kinit">ozonesecure-ha.Kinit</stat>
<stat pass="2" fail="0" skip="0" id="s1-s5" name="Scm-Decommission">ozonesecure-ha.Scm-Decommission</stat>
<stat pass="23" fail="0" skip="0" id="s1-s6" name="ozonefs-o3fs-link">ozonesecure-ha.ozonefs-o3fs-link</stat>
<stat pass="17" fail="0" skip="0" id="s1-s7" name="Links">ozonesecure-ha.Links</stat>
<stat pass="60" fail="0" skip="1" id="s1-s8" name="s3-encrypted">ozonesecure-ha.s3-encrypted</stat>
<stat pass="2" fail="0" skip="0" id="s1-s8-s1" name="Awss3">ozonesecure-ha.s3-encrypted.Awss3</stat>
<stat pass="1" fail="0" skip="0" id="s1-s8-s2" name="Boto3">ozonesecure-ha.s3-encrypted.Boto3</stat>
<stat pass="4" fail="0" skip="0" id="s1-s8-s3" name="Bucketcreate">ozonesecure-ha.s3-encrypted.Bucketcreate</stat>
<stat pass="2" fail="0" skip="0" id="s1-s8-s4" name="Bucketdelete">ozonesecure-ha.s3-encrypted.Bucketdelete</stat>
<stat pass="2" fail="0" skip="0" id="s1-s8-s5" name="Buckethead">ozonesecure-ha.s3-encrypted.Buckethead</stat>
<stat pass="3" fail="0" skip="0" id="s1-s8-s6" name="Bucketlist">ozonesecure-ha.s3-encrypted.Bucketlist</stat>
<stat pass="1" fail="0" skip="0" id="s1-s8-s7" name="Freon">ozonesecure-ha.s3-encrypted.Freon</stat>
<stat pass="13" fail="0" skip="1" id="s1-s8-s8" name="MultipartUpload">ozonesecure-ha.s3-encrypted.MultipartUpload</stat>
<stat pass="4" fail="0" skip="0" id="s1-s8-s9" name="Objectcopy">ozonesecure-ha.s3-encrypted.Objectcopy</stat>
<stat pass="5" fail="0" skip="0" id="s1-s8-s10" name="Objectdelete">ozonesecure-ha.s3-encrypted.Objectdelete</stat>
<stat pass="5" fail="0" skip="0" id="s1-s8-s11" name="Objecthead">ozonesecure-ha.s3-encrypted.Objecthead</stat>
<stat pass="1" fail="0" skip="0" id="s1-s8-s12" name="Objectmultidelete">ozonesecure-ha.s3-encrypted.Objectmultidelete</stat>
<stat pass="14" fail="0" skip="0" id="s1-s8-s13" name="Objectputget">ozonesecure-ha.s3-encrypted.Objectputget</stat>
<stat pass="2" fail="0" skip="0" id="s1-s8-s14" name="S3 Getsecret">ozonesecure-ha.s3-encrypted.S3 Getsecret</stat>
<stat pass="1" fail="0" skip="0" id="s1-s8-s15" name="Webui">ozonesecure-ha.s3-encrypted.Webui</stat>
<stat pass="53" fail="0" skip="1" id="s1-s9" name="s3-link">ozonesecure-ha.s3-link</stat>
<stat pass="2" fail="0" skip="0" id="s1-s9-s1" name="Awss3">ozonesecure-ha.s3-link.Awss3</stat>
<stat pass="1" fail="0" skip="0" id="s1-s9-s2" name="Boto3">ozonesecure-ha.s3-link.Boto3</stat>
<stat pass="1" fail="0" skip="0" id="s1-s9-s3" name="Bucketdelete">ozonesecure-ha.s3-link.Bucketdelete</stat>
<stat pass="1" fail="0" skip="0" id="s1-s9-s4" name="Buckethead">ozonesecure-ha.s3-link.Buckethead</stat>
<stat pass="3" fail="0" skip="0" id="s1-s9-s5" name="Bucketlist">ozonesecure-ha.s3-link.Bucketlist</stat>
<stat pass="1" fail="0" skip="0" id="s1-s9-s6" name="Freon">ozonesecure-ha.s3-link.Freon</stat>
<stat pass="13" fail="0" skip="1" id="s1-s9-s7" name="MultipartUpload">ozonesecure-ha.s3-link.MultipartUpload</stat>
<stat pass="4" fail="0" skip="0" id="s1-s9-s8" name="Objectcopy">ozonesecure-ha.s3-link.Objectcopy</stat>
<stat pass="5" fail="0" skip="0" id="s1-s9-s9" name="Objectdelete">ozonesecure-ha.s3-link.Objectdelete</stat>
<stat pass="5" fail="0" skip="0" id="s1-s9-s10" name="Objecthead">ozonesecure-ha.s3-link.Objecthead</stat>
<stat pass="1" fail="0" skip="0" id="s1-s9-s11" name="Objectmultidelete">ozonesecure-ha.s3-link.Objectmultidelete</stat>
<stat pass="14" fail="0" skip="0" id="s1-s9-s12" name="Objectputget">ozonesecure-ha.s3-link.Objectputget</stat>
<stat pass="2" fail="0" skip="0" id="s1-s9-s13" name="S3 Getsecret">ozonesecure-ha.s3-link.S3 Getsecret</stat>
<stat pass="37" fail="0" skip="0" id="s1-s10" name="Admincli">ozonesecure-ha.Admincli</stat>
<stat pass="1" fail="0" skip="0" id="s1-s10-s1" name="Admin">ozonesecure-ha.Admincli.Admin</stat>
<stat pass="12" fail="0" skip="0" id="s1-s10-s2" name="Container">ozonesecure-ha.Admincli.Container</stat>
<stat pass="6" fail="0" skip="0" id="s1-s10-s3" name="Datanode">ozonesecure-ha.Admincli.Datanode</stat>
<stat pass="7" fail="0" skip="0" id="s1-s10-s4" name="Pipeline">ozonesecure-ha.Admincli.Pipeline</stat>
<stat pass="5" fail="0" skip="0" id="s1-s10-s5" name="Replicationmanager">ozonesecure-ha.Admincli.Replicationmanager</stat>
<stat pass="4" fail="0" skip="0" id="s1-s10-s6" name="Safemode">ozonesecure-ha.Admincli.Safemode</stat>
<stat pass="2" fail="0" skip="0" id="s1-s10-s7" name="Scmrole">ozonesecure-ha.Admincli.Scmrole</stat>
<stat pass="2" fail="0" skip="0" id="s1-s11" name="Om-Leader-Transfer">ozonesecure-ha.Om-Leader-Transfer</stat>
<stat pass="18" fail="0" skip="0" id="s1-s12" name="Httpfs">ozonesecure-ha.Httpfs</stat>
<stat pass="18" fail="0" skip="0" id="s1-s12-s1" name="Operations Tests">ozonesecure-ha.Httpfs.Operations Tests</stat>
<stat pass="37" fail="0" skip="0" id="s1-s13" name="Admincli">ozonesecure-ha.Admincli</stat>
<stat pass="1" fail="0" skip="0" id="s1-s13-s1" name="Admin">ozonesecure-ha.Admincli.Admin</stat>
<stat pass="12" fail="0" skip="0" id="s1-s13-s2" name="Container">ozonesecure-ha.Admincli.Container</stat>
<stat pass="6" fail="0" skip="0" id="s1-s13-s3" name="Datanode">ozonesecure-ha.Admincli.Datanode</stat>
<stat pass="7" fail="0" skip="0" id="s1-s13-s4" name="Pipeline">ozonesecure-ha.Admincli.Pipeline</stat>
<stat pass="5" fail="0" skip="0" id="s1-s13-s5" name="Replicationmanager">ozonesecure-ha.Admincli.Replicationmanager</stat>
<stat pass="4" fail="0" skip="0" id="s1-s13-s6" name="Safemode">ozonesecure-ha.Admincli.Safemode</stat>
<stat pass="2" fail="0" skip="0" id="s1-s13-s7" name="Scmrole">ozonesecure-ha.Admincli.Scmrole</stat>
<stat pass="1" fail="0" skip="0" id="s1-s14" name="Kinit">ozonesecure-ha.Kinit</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
