<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1 (Python 3.8.10 on linux)" generated="20230711 08:59:30.184" rpa="false" schemaversion="4">
<suite id="s1" name="upgrade">
<suite id="s1-s1" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s1-t1" name="Read data from previously created key" line="28">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230711 08:49:16.343" level="INFO">${random} = 81196</msg>
<status status="PASS" starttime="20230711 08:49:16.342" endtime="20230711 08:49:16.343"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:49:16.350" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-81196 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:49:21.819" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:49:21.819" level="INFO">${output} = 2023-07-11 08:49:20,048 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-11 08:49:20,222 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230711 08:49:16.346" endtime="20230711 08:49:21.819"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:49:21.820" level="INFO">2023-07-11 08:49:20,048 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-11 08:49:20,222 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-07-11 08:49:20,222 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started</msg>
<status status="PASS" starttime="20230711 08:49:21.820" endtime="20230711 08:49:21.821"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:49:21.821" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:49:21.821" endtime="20230711 08:49:21.821"/>
</kw>
<status status="PASS" starttime="20230711 08:49:16.345" endtime="20230711 08:49:21.822"/>
</kw>
<msg timestamp="20230711 08:49:21.822" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:49:16.344" endtime="20230711 08:49:21.823"/>
</kw>
<msg timestamp="20230711 08:49:21.823" level="INFO">${output} = 2023-07-11 08:49:20,048 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-11 08:49:20,222 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230711 08:49:16.343" endtime="20230711 08:49:21.823"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:49:21.823" endtime="20230711 08:49:21.824"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:49:21.827" level="INFO">Running command 'cat /tmp/key-81196 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:49:21.830" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:49:21.830" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230711 08:49:21.824" endtime="20230711 08:49:21.830"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:49:21.831" level="INFO">old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230711 08:49:21.831" endtime="20230711 08:49:21.832"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:49:21.832" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:49:21.832" endtime="20230711 08:49:21.832"/>
</kw>
<msg timestamp="20230711 08:49:21.832" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230711 08:49:21.824" endtime="20230711 08:49:21.833"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:49:21.833" endtime="20230711 08:49:21.833"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:49:21.836" level="INFO">Running command 'rm /tmp/key-81196 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:49:21.839" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:49:21.839" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:49:21.834" endtime="20230711 08:49:21.839"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:49:21.840" level="INFO"/>
<status status="PASS" starttime="20230711 08:49:21.839" endtime="20230711 08:49:21.840"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:49:21.841" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:49:21.840" endtime="20230711 08:49:21.841"/>
</kw>
<status status="PASS" starttime="20230711 08:49:21.834" endtime="20230711 08:49:21.841"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230711 08:49:16.341" endtime="20230711 08:49:21.841"/>
</test>
<test id="s1-s1-t2" name="Setup credentials for S3" line="36">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:49:21.847" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:49:22.669" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:49:22.669" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:49:21.845" endtime="20230711 08:49:22.669"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:49:22.671" level="INFO"/>
<status status="PASS" starttime="20230711 08:49:22.670" endtime="20230711 08:49:22.671"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:49:22.671" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:49:22.671" endtime="20230711 08:49:22.672"/>
</kw>
<status status="PASS" starttime="20230711 08:49:21.845" endtime="20230711 08:49:22.672"/>
</kw>
<msg timestamp="20230711 08:49:22.672" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:49:21.844" endtime="20230711 08:49:22.672"/>
</kw>
<status status="PASS" starttime="20230711 08:49:21.844" endtime="20230711 08:49:22.673"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:49:22.676" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:49:23.212" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:49:23.212" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:49:22.674" endtime="20230711 08:49:23.213"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:49:23.214" level="INFO"/>
<status status="PASS" starttime="20230711 08:49:23.213" endtime="20230711 08:49:23.214"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:49:23.215" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:49:23.214" endtime="20230711 08:49:23.215"/>
</kw>
<status status="PASS" starttime="20230711 08:49:22.673" endtime="20230711 08:49:23.215"/>
</kw>
<msg timestamp="20230711 08:49:23.215" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:49:22.673" endtime="20230711 08:49:23.216"/>
</kw>
<status status="PASS" starttime="20230711 08:49:22.673" endtime="20230711 08:49:23.216"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:49:23.220" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:49:23.767" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:49:23.767" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:49:23.217" endtime="20230711 08:49:23.767"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:49:23.768" level="INFO"/>
<status status="PASS" starttime="20230711 08:49:23.767" endtime="20230711 08:49:23.768"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:49:23.769" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:49:23.768" endtime="20230711 08:49:23.769"/>
</kw>
<status status="PASS" starttime="20230711 08:49:23.217" endtime="20230711 08:49:23.769"/>
</kw>
<msg timestamp="20230711 08:49:23.769" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:49:23.216" endtime="20230711 08:49:23.770"/>
</kw>
<status status="PASS" starttime="20230711 08:49:23.216" endtime="20230711 08:49:23.770"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:49:23.774" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:49:24.314" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:49:24.314" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:49:23.771" endtime="20230711 08:49:24.314"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:49:24.315" level="INFO"/>
<status status="PASS" starttime="20230711 08:49:24.314" endtime="20230711 08:49:24.315"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:49:24.316" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:49:24.315" endtime="20230711 08:49:24.316"/>
</kw>
<status status="PASS" starttime="20230711 08:49:23.771" endtime="20230711 08:49:24.316"/>
</kw>
<msg timestamp="20230711 08:49:24.316" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:49:23.771" endtime="20230711 08:49:24.316"/>
</kw>
<status status="PASS" starttime="20230711 08:49:23.770" endtime="20230711 08:49:24.317"/>
</kw>
<status status="PASS" starttime="20230711 08:49:21.843" endtime="20230711 08:49:24.317"/>
</kw>
<status status="PASS" starttime="20230711 08:49:21.843" endtime="20230711 08:49:24.317"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230711 08:49:21.842" endtime="20230711 08:49:24.317"/>
</test>
<test id="s1-s1-t3" name="Read key created with Ozone Shell using S3 API" line="40">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:49:24.323" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:49:27.466" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:49:27.466" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 11 Jul 2023 08:45:05 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230711 08:49:24.321" endtime="20230711 08:49:27.466"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:49:27.467" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 11 Jul 2023 08:45:05 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 11 Jul 2023 08:49:25 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230711 08:49:27.466" endtime="20230711 08:49:27.467"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:49:27.468" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:49:27.468" endtime="20230711 08:49:27.468"/>
</kw>
<msg timestamp="20230711 08:49:27.468" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 11 Jul 2023 08:45:05 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230711 08:49:24.320" endtime="20230711 08:49:27.468"/>
</kw>
<msg timestamp="20230711 08:49:27.469" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 11 Jul 2023 08:45:05 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230711 08:49:24.320" endtime="20230711 08:49:27.469"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:49:27.469" endtime="20230711 08:49:27.469"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:49:27.473" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:49:27.475" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:49:27.475" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230711 08:49:27.470" endtime="20230711 08:49:27.475"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:49:27.476" level="INFO">old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230711 08:49:27.476" endtime="20230711 08:49:27.476"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:49:27.477" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:49:27.476" endtime="20230711 08:49:27.477"/>
</kw>
<msg timestamp="20230711 08:49:27.478" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230711 08:49:27.469" endtime="20230711 08:49:27.478"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:49:27.478" endtime="20230711 08:49:27.478"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:49:27.481" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:49:27.484" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:49:27.484" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:49:27.479" endtime="20230711 08:49:27.484"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:49:27.485" level="INFO"/>
<status status="PASS" starttime="20230711 08:49:27.484" endtime="20230711 08:49:27.485"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:49:27.486" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:49:27.485" endtime="20230711 08:49:27.486"/>
</kw>
<status status="PASS" starttime="20230711 08:49:27.478" endtime="20230711 08:49:27.486"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230711 08:49:24.319" endtime="20230711 08:49:27.486"/>
</test>
<test id="s1-s1-t4" name="Read key created with S3 API using S3 API" line="47">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:49:27.493" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:49:28.276" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:49:28.276" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 11 Jul 2023 08:45:10 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230711 08:49:27.490" endtime="20230711 08:49:28.276"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:49:28.278" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 11 Jul 2023 08:45:10 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 11 Jul 2023 08:49:28 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230711 08:49:28.276" endtime="20230711 08:49:28.278"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:49:28.278" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:49:28.278" endtime="20230711 08:49:28.278"/>
</kw>
<msg timestamp="20230711 08:49:28.279" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 11 Jul 2023 08:45:10 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230711 08:49:27.489" endtime="20230711 08:49:28.279"/>
</kw>
<msg timestamp="20230711 08:49:28.279" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 11 Jul 2023 08:45:10 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230711 08:49:27.489" endtime="20230711 08:49:28.279"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:49:28.279" endtime="20230711 08:49:28.280"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:49:28.283" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:49:28.286" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:49:28.286" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20230711 08:49:28.280" endtime="20230711 08:49:28.286"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:49:28.288" level="INFO">old1: key created using S3 API</msg>
<status status="PASS" starttime="20230711 08:49:28.287" endtime="20230711 08:49:28.288"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:49:28.288" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:49:28.288" endtime="20230711 08:49:28.289"/>
</kw>
<msg timestamp="20230711 08:49:28.289" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20230711 08:49:28.280" endtime="20230711 08:49:28.289"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:49:28.289" endtime="20230711 08:49:28.290"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:49:28.294" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:49:28.298" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:49:28.298" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:49:28.291" endtime="20230711 08:49:28.299"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:49:28.300" level="INFO"/>
<status status="PASS" starttime="20230711 08:49:28.299" endtime="20230711 08:49:28.300"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:49:28.301" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:49:28.300" endtime="20230711 08:49:28.302"/>
</kw>
<status status="PASS" starttime="20230711 08:49:28.290" endtime="20230711 08:49:28.302"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230711 08:49:27.488" endtime="20230711 08:49:28.302"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230711 08:49:16.250" endtime="20230711 08:49:28.304"/>
</suite>
<suite id="s1-s2" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s2-t1" name="Read data from previously created key" line="28">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230711 08:49:31.623" level="INFO">${random} = 72494</msg>
<status status="PASS" starttime="20230711 08:49:31.622" endtime="20230711 08:49:31.623"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:49:31.629" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-72494 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:49:36.612" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:49:36.612" level="INFO">${output} = 2023-07-11 08:49:35,048 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-11 08:49:35,212 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230711 08:49:31.625" endtime="20230711 08:49:36.612"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:49:36.613" level="INFO">2023-07-11 08:49:35,048 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-11 08:49:35,212 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-07-11 08:49:35,212 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started</msg>
<status status="PASS" starttime="20230711 08:49:36.612" endtime="20230711 08:49:36.613"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:49:36.614" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:49:36.613" endtime="20230711 08:49:36.614"/>
</kw>
<status status="PASS" starttime="20230711 08:49:31.624" endtime="20230711 08:49:36.614"/>
</kw>
<msg timestamp="20230711 08:49:36.614" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:49:31.623" endtime="20230711 08:49:36.615"/>
</kw>
<msg timestamp="20230711 08:49:36.616" level="INFO">${output} = 2023-07-11 08:49:35,048 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-11 08:49:35,212 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230711 08:49:31.623" endtime="20230711 08:49:36.616"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:49:36.616" endtime="20230711 08:49:36.616"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:49:36.619" level="INFO">Running command 'cat /tmp/key-72494 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:49:36.622" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:49:36.622" level="INFO">${output} = new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230711 08:49:36.617" endtime="20230711 08:49:36.622"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:49:36.624" level="INFO">new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230711 08:49:36.623" endtime="20230711 08:49:36.624"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:49:36.624" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:49:36.624" endtime="20230711 08:49:36.624"/>
</kw>
<msg timestamp="20230711 08:49:36.625" level="INFO">${output} = new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230711 08:49:36.617" endtime="20230711 08:49:36.625"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:49:36.625" endtime="20230711 08:49:36.625"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:49:36.628" level="INFO">Running command 'rm /tmp/key-72494 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:49:36.631" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:49:36.631" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:49:36.626" endtime="20230711 08:49:36.631"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:49:36.632" level="INFO"/>
<status status="PASS" starttime="20230711 08:49:36.632" endtime="20230711 08:49:36.632"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:49:36.633" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:49:36.633" endtime="20230711 08:49:36.633"/>
</kw>
<status status="PASS" starttime="20230711 08:49:36.625" endtime="20230711 08:49:36.633"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230711 08:49:31.621" endtime="20230711 08:49:36.634"/>
</test>
<test id="s1-s2-t2" name="Setup credentials for S3" line="36">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:49:36.640" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:49:37.182" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:49:37.182" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:49:36.638" endtime="20230711 08:49:37.182"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:49:37.185" level="INFO"/>
<status status="PASS" starttime="20230711 08:49:37.183" endtime="20230711 08:49:37.185"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:49:37.186" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:49:37.186" endtime="20230711 08:49:37.186"/>
</kw>
<status status="PASS" starttime="20230711 08:49:36.637" endtime="20230711 08:49:37.187"/>
</kw>
<msg timestamp="20230711 08:49:37.187" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:49:36.637" endtime="20230711 08:49:37.187"/>
</kw>
<status status="PASS" starttime="20230711 08:49:36.637" endtime="20230711 08:49:37.188"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:49:37.200" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:49:37.747" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:49:37.747" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:49:37.197" endtime="20230711 08:49:37.747"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:49:37.749" level="INFO"/>
<status status="PASS" starttime="20230711 08:49:37.748" endtime="20230711 08:49:37.749"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:49:37.749" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:49:37.749" endtime="20230711 08:49:37.749"/>
</kw>
<status status="PASS" starttime="20230711 08:49:37.196" endtime="20230711 08:49:37.750"/>
</kw>
<msg timestamp="20230711 08:49:37.750" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:49:37.196" endtime="20230711 08:49:37.750"/>
</kw>
<status status="PASS" starttime="20230711 08:49:37.188" endtime="20230711 08:49:37.750"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:49:37.754" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:49:38.263" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:49:38.263" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:49:37.752" endtime="20230711 08:49:38.263"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:49:38.264" level="INFO"/>
<status status="PASS" starttime="20230711 08:49:38.263" endtime="20230711 08:49:38.264"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:49:38.265" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:49:38.264" endtime="20230711 08:49:38.265"/>
</kw>
<status status="PASS" starttime="20230711 08:49:37.751" endtime="20230711 08:49:38.265"/>
</kw>
<msg timestamp="20230711 08:49:38.265" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:49:37.751" endtime="20230711 08:49:38.266"/>
</kw>
<status status="PASS" starttime="20230711 08:49:37.751" endtime="20230711 08:49:38.266"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:49:38.270" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:49:38.841" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:49:38.841" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:49:38.267" endtime="20230711 08:49:38.841"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:49:38.843" level="INFO"/>
<status status="PASS" starttime="20230711 08:49:38.842" endtime="20230711 08:49:38.843"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:49:38.843" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:49:38.843" endtime="20230711 08:49:38.843"/>
</kw>
<status status="PASS" starttime="20230711 08:49:38.267" endtime="20230711 08:49:38.844"/>
</kw>
<msg timestamp="20230711 08:49:38.844" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:49:38.267" endtime="20230711 08:49:38.844"/>
</kw>
<status status="PASS" starttime="20230711 08:49:38.266" endtime="20230711 08:49:38.844"/>
</kw>
<status status="PASS" starttime="20230711 08:49:36.636" endtime="20230711 08:49:38.844"/>
</kw>
<status status="PASS" starttime="20230711 08:49:36.636" endtime="20230711 08:49:38.844"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230711 08:49:36.635" endtime="20230711 08:49:38.845"/>
</test>
<test id="s1-s2-t3" name="Read key created with Ozone Shell using S3 API" line="40">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:49:38.850" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket new1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:49:39.534" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:49:39.534" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 11 Jul 2023 08:45:39 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230711 08:49:38.848" endtime="20230711 08:49:39.534"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:49:39.535" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 11 Jul 2023 08:45:39 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 11 Jul 2023 08:49:39 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230711 08:49:39.535" endtime="20230711 08:49:39.536"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:49:39.536" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:49:39.536" endtime="20230711 08:49:39.537"/>
</kw>
<msg timestamp="20230711 08:49:39.537" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 11 Jul 2023 08:45:39 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230711 08:49:38.847" endtime="20230711 08:49:39.537"/>
</kw>
<msg timestamp="20230711 08:49:39.537" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 11 Jul 2023 08:45:39 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230711 08:49:38.847" endtime="20230711 08:49:39.537"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:49:39.538" endtime="20230711 08:49:39.538"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:49:39.542" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:49:39.544" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:49:39.544" level="INFO">${output} = new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230711 08:49:39.539" endtime="20230711 08:49:39.544"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:49:39.545" level="INFO">new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230711 08:49:39.545" endtime="20230711 08:49:39.545"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:49:39.546" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:49:39.545" endtime="20230711 08:49:39.546"/>
</kw>
<msg timestamp="20230711 08:49:39.546" level="INFO">${output} = new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230711 08:49:39.538" endtime="20230711 08:49:39.546"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:49:39.547" endtime="20230711 08:49:39.547"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:49:39.550" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:49:39.553" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:49:39.553" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:49:39.548" endtime="20230711 08:49:39.553"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:49:39.554" level="INFO"/>
<status status="PASS" starttime="20230711 08:49:39.554" endtime="20230711 08:49:39.554"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:49:39.555" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:49:39.554" endtime="20230711 08:49:39.555"/>
</kw>
<status status="PASS" starttime="20230711 08:49:39.547" endtime="20230711 08:49:39.555"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230711 08:49:38.846" endtime="20230711 08:49:39.556"/>
</test>
<test id="s1-s2-t4" name="Read key created with S3 API using S3 API" line="47">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:49:39.561" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket new1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:49:40.351" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:49:40.351" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 11 Jul 2023 08:45:44 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230711 08:49:39.559" endtime="20230711 08:49:40.351"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:49:40.352" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 11 Jul 2023 08:45:44 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 11 Jul 2023 08:49:40 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230711 08:49:40.351" endtime="20230711 08:49:40.352"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:49:40.353" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:49:40.353" endtime="20230711 08:49:40.353"/>
</kw>
<msg timestamp="20230711 08:49:40.354" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 11 Jul 2023 08:45:44 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230711 08:49:39.558" endtime="20230711 08:49:40.354"/>
</kw>
<msg timestamp="20230711 08:49:40.354" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 11 Jul 2023 08:45:44 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230711 08:49:39.558" endtime="20230711 08:49:40.354"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:49:40.354" endtime="20230711 08:49:40.355"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:49:40.358" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:49:40.360" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:49:40.360" level="INFO">${output} = new1: key created using S3 API</msg>
<status status="PASS" starttime="20230711 08:49:40.355" endtime="20230711 08:49:40.361"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:49:40.362" level="INFO">new1: key created using S3 API</msg>
<status status="PASS" starttime="20230711 08:49:40.361" endtime="20230711 08:49:40.362"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:49:40.363" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:49:40.362" endtime="20230711 08:49:40.363"/>
</kw>
<msg timestamp="20230711 08:49:40.363" level="INFO">${output} = new1: key created using S3 API</msg>
<status status="PASS" starttime="20230711 08:49:40.355" endtime="20230711 08:49:40.363"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:49:40.363" endtime="20230711 08:49:40.364"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:49:40.367" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:49:40.369" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:49:40.369" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:49:40.364" endtime="20230711 08:49:40.369"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:49:40.371" level="INFO"/>
<status status="PASS" starttime="20230711 08:49:40.370" endtime="20230711 08:49:40.371"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:49:40.371" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:49:40.371" endtime="20230711 08:49:40.371"/>
</kw>
<status status="PASS" starttime="20230711 08:49:40.364" endtime="20230711 08:49:40.372"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230711 08:49:39.556" endtime="20230711 08:49:40.372"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230711 08:49:31.543" endtime="20230711 08:49:40.373"/>
</suite>
<suite id="s1-s3" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s3-t1" name="Create a volume and bucket" line="28">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:49:43.707" level="INFO">Running command 'ozone sh volume create old2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:49:46.484" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:49:46.484" level="INFO">${output} = 2023-07-11 08:49:46,317 [main] INFO rpc.RpcClient: Creating Volume: old2-volume, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20230711 08:49:43.702" endtime="20230711 08:49:46.484"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:49:46.485" level="INFO">2023-07-11 08:49:46,317 [main] INFO rpc.RpcClient: Creating Volume: old2-volume, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20230711 08:49:46.485" endtime="20230711 08:49:46.486"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:49:46.486" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:49:46.486" endtime="20230711 08:49:46.486"/>
</kw>
<status status="PASS" starttime="20230711 08:49:43.702" endtime="20230711 08:49:46.487"/>
</kw>
<msg timestamp="20230711 08:49:46.487" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:49:43.701" endtime="20230711 08:49:46.490"/>
</kw>
<msg timestamp="20230711 08:49:46.491" level="INFO">${output} = 2023-07-11 08:49:46,317 [main] INFO rpc.RpcClient: Creating Volume: old2-volume, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20230711 08:49:43.701" endtime="20230711 08:49:46.491"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:49:46.491" endtime="20230711 08:49:46.492"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:49:46.507" level="INFO">Running command 'ozone sh bucket create /old2-volume/old2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:49:49.828" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:49:49.828" level="INFO">${output} = 2023-07-11 08:49:49,758 [main] INFO rpc.RpcClient: Creating Bucket: old2-volume/old2-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Enc...</msg>
<status status="PASS" starttime="20230711 08:49:46.501" endtime="20230711 08:49:49.828"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:49:49.829" level="INFO">2023-07-11 08:49:49,758 [main] INFO rpc.RpcClient: Creating Bucket: old2-volume/old2-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false </msg>
<status status="PASS" starttime="20230711 08:49:49.829" endtime="20230711 08:49:49.830"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:49:49.831" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:49:49.830" endtime="20230711 08:49:49.831"/>
</kw>
<status status="PASS" starttime="20230711 08:49:46.493" endtime="20230711 08:49:49.831"/>
</kw>
<msg timestamp="20230711 08:49:49.831" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:49:46.492" endtime="20230711 08:49:49.832"/>
</kw>
<msg timestamp="20230711 08:49:49.832" level="INFO">${output} = 2023-07-11 08:49:49,758 [main] INFO rpc.RpcClient: Creating Bucket: old2-volume/old2-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Enc...</msg>
<status status="PASS" starttime="20230711 08:49:46.492" endtime="20230711 08:49:49.832"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:49:49.832" endtime="20230711 08:49:49.832"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230711 08:49:43.700" endtime="20230711 08:49:49.833"/>
</test>
<test id="s1-s3-t2" name="Create key" line="35">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:49:49.838" level="INFO">Running command 'echo "old2: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230711 08:49:49.840" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:49:49.840" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:49:49.835" endtime="20230711 08:49:49.840"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:49:49.841" level="INFO"/>
<status status="PASS" starttime="20230711 08:49:49.840" endtime="20230711 08:49:49.841"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:49:49.842" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:49:49.841" endtime="20230711 08:49:49.842"/>
</kw>
<status status="PASS" starttime="20230711 08:49:49.834" endtime="20230711 08:49:49.842"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:49:49.849" level="INFO">Running command 'ozone sh key put /old2-volume/old2-bucket/old2-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:49:56.270" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:49:56.270" level="INFO">${output} = 2023-07-11 08:49:54,247 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-11 08:49:54,364 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230711 08:49:49.844" endtime="20230711 08:49:56.270"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:49:56.271" level="INFO">2023-07-11 08:49:54,247 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-11 08:49:54,364 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-07-11 08:49:54,364 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2023-07-11 08:49:54,657 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20230711 08:49:56.270" endtime="20230711 08:49:56.271"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:49:56.272" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:49:56.271" endtime="20230711 08:49:56.272"/>
</kw>
<status status="PASS" starttime="20230711 08:49:49.843" endtime="20230711 08:49:56.272"/>
</kw>
<msg timestamp="20230711 08:49:56.272" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:49:49.843" endtime="20230711 08:49:56.273"/>
</kw>
<msg timestamp="20230711 08:49:56.273" level="INFO">${output} = 2023-07-11 08:49:54,247 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-11 08:49:54,364 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230711 08:49:49.842" endtime="20230711 08:49:56.273"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:49:56.273" endtime="20230711 08:49:56.274"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:49:56.277" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:49:56.280" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:49:56.280" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:49:56.274" endtime="20230711 08:49:56.280"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:49:56.281" level="INFO"/>
<status status="PASS" starttime="20230711 08:49:56.280" endtime="20230711 08:49:56.281"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:49:56.282" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:49:56.281" endtime="20230711 08:49:56.282"/>
</kw>
<status status="PASS" starttime="20230711 08:49:56.274" endtime="20230711 08:49:56.282"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230711 08:49:49.833" endtime="20230711 08:49:56.282"/>
</test>
<test id="s1-s3-t3" name="Create a bucket in s3v volume" line="41">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /s3v/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:49:56.289" level="INFO">Running command 'ozone sh bucket create /s3v/old2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:49:59.158" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:49:59.158" level="INFO">${output} = 2023-07-11 08:49:59,095 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old2-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption ...</msg>
<status status="PASS" starttime="20230711 08:49:56.286" endtime="20230711 08:49:59.159"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:49:59.160" level="INFO">2023-07-11 08:49:59,095 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old2-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false </msg>
<status status="PASS" starttime="20230711 08:49:59.159" endtime="20230711 08:49:59.160"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:49:59.160" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:49:59.160" endtime="20230711 08:49:59.161"/>
</kw>
<status status="PASS" starttime="20230711 08:49:56.285" endtime="20230711 08:49:59.161"/>
</kw>
<msg timestamp="20230711 08:49:59.161" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:49:56.285" endtime="20230711 08:49:59.161"/>
</kw>
<msg timestamp="20230711 08:49:59.162" level="INFO">${output} = 2023-07-11 08:49:59,095 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old2-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption ...</msg>
<status status="PASS" starttime="20230711 08:49:56.284" endtime="20230711 08:49:59.162"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:49:59.162" endtime="20230711 08:49:59.162"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230711 08:49:56.284" endtime="20230711 08:49:59.163"/>
</test>
<test id="s1-s3-t4" name="Create key in the bucket in s3v volume" line="46">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: another key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:49:59.168" level="INFO">Running command 'echo "old2: another key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230711 08:49:59.170" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:49:59.170" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:49:59.165" endtime="20230711 08:49:59.170"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:49:59.171" level="INFO"/>
<status status="PASS" starttime="20230711 08:49:59.170" endtime="20230711 08:49:59.171"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:49:59.172" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:49:59.171" endtime="20230711 08:49:59.172"/>
</kw>
<status status="PASS" starttime="20230711 08:49:59.164" endtime="20230711 08:49:59.172"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /s3v/${PREFIX}-bucket/key1-shell /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:49:59.177" level="INFO">Running command 'ozone sh key put /s3v/old2-bucket/key1-shell /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:50:04.590" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:50:04.590" level="INFO">${output} = 2023-07-11 08:50:02,791 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-11 08:50:02,937 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230711 08:49:59.174" endtime="20230711 08:50:04.590"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:50:04.592" level="INFO">2023-07-11 08:50:02,791 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-11 08:50:02,937 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-07-11 08:50:02,937 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2023-07-11 08:50:03,260 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20230711 08:50:04.591" endtime="20230711 08:50:04.592"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:50:04.592" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:50:04.592" endtime="20230711 08:50:04.592"/>
</kw>
<status status="PASS" starttime="20230711 08:49:59.173" endtime="20230711 08:50:04.593"/>
</kw>
<msg timestamp="20230711 08:50:04.593" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:49:59.173" endtime="20230711 08:50:04.593"/>
</kw>
<msg timestamp="20230711 08:50:04.593" level="INFO">${output} = 2023-07-11 08:50:02,791 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-11 08:50:02,937 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230711 08:49:59.172" endtime="20230711 08:50:04.593"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:50:04.594" endtime="20230711 08:50:04.594"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:50:04.597" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:50:04.600" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:50:04.600" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:50:04.595" endtime="20230711 08:50:04.600"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:50:04.601" level="INFO"/>
<status status="PASS" starttime="20230711 08:50:04.600" endtime="20230711 08:50:04.601"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:50:04.602" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:50:04.601" endtime="20230711 08:50:04.602"/>
</kw>
<status status="PASS" starttime="20230711 08:50:04.594" endtime="20230711 08:50:04.602"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230711 08:49:59.164" endtime="20230711 08:50:04.602"/>
</test>
<test id="s1-s3-t5" name="Setup credentials for S3" line="52">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:50:04.611" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:50:05.156" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:50:05.156" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:50:04.608" endtime="20230711 08:50:05.156"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:50:05.158" level="INFO"/>
<status status="PASS" starttime="20230711 08:50:05.156" endtime="20230711 08:50:05.158"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:50:05.159" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:50:05.158" endtime="20230711 08:50:05.159"/>
</kw>
<status status="PASS" starttime="20230711 08:50:04.607" endtime="20230711 08:50:05.159"/>
</kw>
<msg timestamp="20230711 08:50:05.159" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:50:04.607" endtime="20230711 08:50:05.159"/>
</kw>
<status status="PASS" starttime="20230711 08:50:04.607" endtime="20230711 08:50:05.160"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:50:05.165" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:50:05.712" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:50:05.712" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:50:05.162" endtime="20230711 08:50:05.712"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:50:05.713" level="INFO"/>
<status status="PASS" starttime="20230711 08:50:05.712" endtime="20230711 08:50:05.713"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:50:05.714" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:50:05.713" endtime="20230711 08:50:05.714"/>
</kw>
<status status="PASS" starttime="20230711 08:50:05.162" endtime="20230711 08:50:05.714"/>
</kw>
<msg timestamp="20230711 08:50:05.714" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:50:05.161" endtime="20230711 08:50:05.715"/>
</kw>
<status status="PASS" starttime="20230711 08:50:05.160" endtime="20230711 08:50:05.715"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:50:05.719" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:50:06.267" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:50:06.267" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:50:05.717" endtime="20230711 08:50:06.267"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:50:06.268" level="INFO"/>
<status status="PASS" starttime="20230711 08:50:06.267" endtime="20230711 08:50:06.268"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:50:06.269" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:50:06.268" endtime="20230711 08:50:06.269"/>
</kw>
<status status="PASS" starttime="20230711 08:50:05.716" endtime="20230711 08:50:06.269"/>
</kw>
<msg timestamp="20230711 08:50:06.269" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:50:05.716" endtime="20230711 08:50:06.270"/>
</kw>
<status status="PASS" starttime="20230711 08:50:05.715" endtime="20230711 08:50:06.270"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:50:06.274" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:50:06.789" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:50:06.790" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:50:06.271" endtime="20230711 08:50:06.790"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:50:06.792" level="INFO"/>
<status status="PASS" starttime="20230711 08:50:06.790" endtime="20230711 08:50:06.792"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:50:06.793" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:50:06.792" endtime="20230711 08:50:06.793"/>
</kw>
<status status="PASS" starttime="20230711 08:50:06.271" endtime="20230711 08:50:06.793"/>
</kw>
<msg timestamp="20230711 08:50:06.793" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:50:06.271" endtime="20230711 08:50:06.793"/>
</kw>
<status status="PASS" starttime="20230711 08:50:06.270" endtime="20230711 08:50:06.794"/>
</kw>
<status status="PASS" starttime="20230711 08:50:04.606" endtime="20230711 08:50:06.794"/>
</kw>
<status status="PASS" starttime="20230711 08:50:04.606" endtime="20230711 08:50:06.794"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230711 08:50:04.605" endtime="20230711 08:50:06.794"/>
</test>
<test id="s1-s3-t6" name="Try to create a bucket using S3 API" line="56">
<kw name="Create bucket with name" library="commonawslib">
<var>${output}</var>
<arg>${PREFIX}-bucket</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:50:06.801" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket old2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:50:07.502" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:50:07.502" level="INFO">${output} = {
    "Location": "http://s3g:9878/old2-bucket"
}</msg>
<status status="PASS" starttime="20230711 08:50:06.798" endtime="20230711 08:50:07.502"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:50:07.504" level="INFO">{
    "Location": "http://s3g:9878/old2-bucket"
}</msg>
<status status="PASS" starttime="20230711 08:50:07.503" endtime="20230711 08:50:07.504"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:50:07.504" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:50:07.504" endtime="20230711 08:50:07.504"/>
</kw>
<status status="PASS" starttime="20230711 08:50:06.798" endtime="20230711 08:50:07.505"/>
</kw>
<msg timestamp="20230711 08:50:07.505" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:50:06.797" endtime="20230711 08:50:07.505"/>
</kw>
<msg timestamp="20230711 08:50:07.506" level="INFO">${output} = {
    "Location": "http://s3g:9878/old2-bucket"
}</msg>
<status status="PASS" starttime="20230711 08:50:06.797" endtime="20230711 08:50:07.506"/>
</kw>
<msg timestamp="20230711 08:50:07.506" level="INFO">${result} = {
    "Location": "http://s3g:9878/old2-bucket"
}</msg>
<status status="PASS" starttime="20230711 08:50:06.796" endtime="20230711 08:50:07.506"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:50:07.506" endtime="20230711 08:50:07.506"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:50:07.507" endtime="20230711 08:50:07.507"/>
</kw>
<msg timestamp="20230711 08:50:07.507" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20230711 08:50:06.796" endtime="20230711 08:50:07.507"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230711 08:50:07.507" endtime="20230711 08:50:07.508"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230711 08:50:06.795" endtime="20230711 08:50:07.508"/>
</test>
<test id="s1-s3-t7" name="Create key using S3 API" line="61">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using S3 API" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:50:07.513" level="INFO">Running command 'echo "old2: key created using S3 API" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230711 08:50:07.514" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:50:07.514" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:50:07.510" endtime="20230711 08:50:07.514"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:50:07.515" level="INFO"/>
<status status="PASS" starttime="20230711 08:50:07.515" endtime="20230711 08:50:07.515"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:50:07.516" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:50:07.515" endtime="20230711 08:50:07.516"/>
</kw>
<status status="PASS" starttime="20230711 08:50:07.510" endtime="20230711 08:50:07.516"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>put-object --bucket ${PREFIX}-bucket --key key2-s3api --body /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:50:07.520" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket old2-bucket --key key2-s3api --body /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:50:08.694" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:50:08.694" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:50:07.518" endtime="20230711 08:50:08.694"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:50:08.699" level="INFO"/>
<status status="PASS" starttime="20230711 08:50:08.694" endtime="20230711 08:50:08.699"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:50:08.699" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:50:08.699" endtime="20230711 08:50:08.699"/>
</kw>
<msg timestamp="20230711 08:50:08.700" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:50:07.517" endtime="20230711 08:50:08.700"/>
</kw>
<msg timestamp="20230711 08:50:08.700" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:50:07.516" endtime="20230711 08:50:08.700"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:50:08.700" endtime="20230711 08:50:08.701"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:50:08.709" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:50:08.712" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:50:08.712" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:50:08.702" endtime="20230711 08:50:08.712"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:50:08.714" level="INFO"/>
<status status="PASS" starttime="20230711 08:50:08.713" endtime="20230711 08:50:08.714"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:50:08.714" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:50:08.714" endtime="20230711 08:50:08.714"/>
</kw>
<status status="PASS" starttime="20230711 08:50:08.702" endtime="20230711 08:50:08.715"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230711 08:50:07.509" endtime="20230711 08:50:08.721"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230711 08:49:43.620" endtime="20230711 08:50:08.723"/>
</suite>
<suite id="s1-s4" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s4-t1" name="Read data from previously created key" line="28">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230711 08:50:11.928" level="INFO">${random} = 29361</msg>
<status status="PASS" starttime="20230711 08:50:11.927" endtime="20230711 08:50:11.928"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:50:11.934" level="INFO">Running command 'ozone sh key get /old2-volume/old2-bucket/old2-key /tmp/key-29361 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:50:16.647" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:50:16.648" level="INFO">${output} = 2023-07-11 08:50:15,354 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-11 08:50:15,480 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230711 08:50:11.930" endtime="20230711 08:50:16.648"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:50:16.649" level="INFO">2023-07-11 08:50:15,354 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-11 08:50:15,480 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-07-11 08:50:15,480 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started</msg>
<status status="PASS" starttime="20230711 08:50:16.648" endtime="20230711 08:50:16.649"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:50:16.650" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:50:16.649" endtime="20230711 08:50:16.650"/>
</kw>
<status status="PASS" starttime="20230711 08:50:11.929" endtime="20230711 08:50:16.650"/>
</kw>
<msg timestamp="20230711 08:50:16.650" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:50:11.928" endtime="20230711 08:50:16.651"/>
</kw>
<msg timestamp="20230711 08:50:16.651" level="INFO">${output} = 2023-07-11 08:50:15,354 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-11 08:50:15,480 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230711 08:50:11.928" endtime="20230711 08:50:16.651"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:50:16.652" endtime="20230711 08:50:16.652"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:50:16.655" level="INFO">Running command 'cat /tmp/key-29361 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:50:16.658" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:50:16.658" level="INFO">${output} = old2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230711 08:50:16.653" endtime="20230711 08:50:16.658"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:50:16.659" level="INFO">old2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230711 08:50:16.659" endtime="20230711 08:50:16.659"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:50:16.660" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:50:16.660" endtime="20230711 08:50:16.660"/>
</kw>
<msg timestamp="20230711 08:50:16.660" level="INFO">${output} = old2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230711 08:50:16.652" endtime="20230711 08:50:16.660"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:50:16.660" endtime="20230711 08:50:16.661"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:50:16.664" level="INFO">Running command 'rm /tmp/key-29361 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:50:16.666" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:50:16.666" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:50:16.662" endtime="20230711 08:50:16.666"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:50:16.668" level="INFO"/>
<status status="PASS" starttime="20230711 08:50:16.667" endtime="20230711 08:50:16.668"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:50:16.668" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:50:16.668" endtime="20230711 08:50:16.668"/>
</kw>
<status status="PASS" starttime="20230711 08:50:16.661" endtime="20230711 08:50:16.669"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230711 08:50:11.926" endtime="20230711 08:50:16.669"/>
</test>
<test id="s1-s4-t2" name="Setup credentials for S3" line="36">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:50:16.675" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:50:17.182" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:50:17.182" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:50:16.673" endtime="20230711 08:50:17.182"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:50:17.184" level="INFO"/>
<status status="PASS" starttime="20230711 08:50:17.183" endtime="20230711 08:50:17.184"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:50:17.184" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:50:17.184" endtime="20230711 08:50:17.185"/>
</kw>
<status status="PASS" starttime="20230711 08:50:16.672" endtime="20230711 08:50:17.185"/>
</kw>
<msg timestamp="20230711 08:50:17.185" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:50:16.672" endtime="20230711 08:50:17.185"/>
</kw>
<status status="PASS" starttime="20230711 08:50:16.671" endtime="20230711 08:50:17.186"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:50:17.190" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:50:17.695" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:50:17.695" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:50:17.187" endtime="20230711 08:50:17.695"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:50:17.696" level="INFO"/>
<status status="PASS" starttime="20230711 08:50:17.696" endtime="20230711 08:50:17.697"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:50:17.697" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:50:17.697" endtime="20230711 08:50:17.697"/>
</kw>
<status status="PASS" starttime="20230711 08:50:17.187" endtime="20230711 08:50:17.697"/>
</kw>
<msg timestamp="20230711 08:50:17.698" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:50:17.186" endtime="20230711 08:50:17.698"/>
</kw>
<status status="PASS" starttime="20230711 08:50:17.186" endtime="20230711 08:50:17.698"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:50:17.702" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:50:18.197" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:50:18.198" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:50:17.700" endtime="20230711 08:50:18.198"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:50:18.199" level="INFO"/>
<status status="PASS" starttime="20230711 08:50:18.198" endtime="20230711 08:50:18.199"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:50:18.200" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:50:18.199" endtime="20230711 08:50:18.200"/>
</kw>
<status status="PASS" starttime="20230711 08:50:17.699" endtime="20230711 08:50:18.200"/>
</kw>
<msg timestamp="20230711 08:50:18.200" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:50:17.699" endtime="20230711 08:50:18.201"/>
</kw>
<status status="PASS" starttime="20230711 08:50:17.698" endtime="20230711 08:50:18.201"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:50:18.205" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:50:18.725" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:50:18.725" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:50:18.202" endtime="20230711 08:50:18.725"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:50:18.726" level="INFO"/>
<status status="PASS" starttime="20230711 08:50:18.726" endtime="20230711 08:50:18.726"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:50:18.727" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:50:18.726" endtime="20230711 08:50:18.727"/>
</kw>
<status status="PASS" starttime="20230711 08:50:18.202" endtime="20230711 08:50:18.727"/>
</kw>
<msg timestamp="20230711 08:50:18.727" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:50:18.201" endtime="20230711 08:50:18.728"/>
</kw>
<status status="PASS" starttime="20230711 08:50:18.201" endtime="20230711 08:50:18.728"/>
</kw>
<status status="PASS" starttime="20230711 08:50:16.671" endtime="20230711 08:50:18.728"/>
</kw>
<status status="PASS" starttime="20230711 08:50:16.671" endtime="20230711 08:50:18.728"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230711 08:50:16.670" endtime="20230711 08:50:18.728"/>
</test>
<test id="s1-s4-t3" name="Read key created with Ozone Shell using S3 API" line="40">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:50:18.734" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old2-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:50:19.407" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:50:19.407" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 11 Jul 2023 08:50:04 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230711 08:50:18.731" endtime="20230711 08:50:19.407"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:50:19.409" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 11 Jul 2023 08:50:04 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 11 Jul 2023 08:50:19 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230711 08:50:19.408" endtime="20230711 08:50:19.409"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:50:19.410" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:50:19.409" endtime="20230711 08:50:19.410"/>
</kw>
<msg timestamp="20230711 08:50:19.410" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 11 Jul 2023 08:50:04 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230711 08:50:18.731" endtime="20230711 08:50:19.410"/>
</kw>
<msg timestamp="20230711 08:50:19.411" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 11 Jul 2023 08:50:04 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230711 08:50:18.730" endtime="20230711 08:50:19.411"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:50:19.411" endtime="20230711 08:50:19.411"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:50:19.414" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:50:19.417" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:50:19.417" level="INFO">${output} = old2: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230711 08:50:19.412" endtime="20230711 08:50:19.417"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:50:19.418" level="INFO">old2: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230711 08:50:19.417" endtime="20230711 08:50:19.418"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:50:19.418" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:50:19.418" endtime="20230711 08:50:19.418"/>
</kw>
<msg timestamp="20230711 08:50:19.419" level="INFO">${output} = old2: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230711 08:50:19.411" endtime="20230711 08:50:19.419"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:50:19.419" endtime="20230711 08:50:19.420"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:50:19.422" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:50:19.425" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:50:19.425" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:50:19.420" endtime="20230711 08:50:19.425"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:50:19.426" level="INFO"/>
<status status="PASS" starttime="20230711 08:50:19.426" endtime="20230711 08:50:19.426"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:50:19.427" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:50:19.427" endtime="20230711 08:50:19.427"/>
</kw>
<status status="PASS" starttime="20230711 08:50:19.420" endtime="20230711 08:50:19.427"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230711 08:50:18.729" endtime="20230711 08:50:19.428"/>
</test>
<test id="s1-s4-t4" name="Read key created with S3 API using S3 API" line="47">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:50:19.432" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old2-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:50:20.108" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:50:20.108" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 11 Jul 2023 08:50:08 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230711 08:50:19.430" endtime="20230711 08:50:20.108"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:50:20.110" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 11 Jul 2023 08:50:08 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 11 Jul 2023 08:50:19 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230711 08:50:20.109" endtime="20230711 08:50:20.110"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:50:20.110" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:50:20.110" endtime="20230711 08:50:20.110"/>
</kw>
<msg timestamp="20230711 08:50:20.111" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 11 Jul 2023 08:50:08 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230711 08:50:19.430" endtime="20230711 08:50:20.111"/>
</kw>
<msg timestamp="20230711 08:50:20.111" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 11 Jul 2023 08:50:08 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230711 08:50:19.429" endtime="20230711 08:50:20.111"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:50:20.111" endtime="20230711 08:50:20.112"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:50:20.115" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:50:20.118" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:50:20.118" level="INFO">${output} = old2: key created using S3 API</msg>
<status status="PASS" starttime="20230711 08:50:20.112" endtime="20230711 08:50:20.118"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:50:20.119" level="INFO">old2: key created using S3 API</msg>
<status status="PASS" starttime="20230711 08:50:20.118" endtime="20230711 08:50:20.119"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:50:20.120" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:50:20.119" endtime="20230711 08:50:20.120"/>
</kw>
<msg timestamp="20230711 08:50:20.120" level="INFO">${output} = old2: key created using S3 API</msg>
<status status="PASS" starttime="20230711 08:50:20.112" endtime="20230711 08:50:20.120"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:50:20.120" endtime="20230711 08:50:20.121"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:50:20.124" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:50:20.127" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:50:20.127" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:50:20.122" endtime="20230711 08:50:20.127"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:50:20.128" level="INFO"/>
<status status="PASS" starttime="20230711 08:50:20.127" endtime="20230711 08:50:20.128"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:50:20.129" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:50:20.128" endtime="20230711 08:50:20.129"/>
</kw>
<status status="PASS" starttime="20230711 08:50:20.121" endtime="20230711 08:50:20.129"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230711 08:50:19.428" endtime="20230711 08:50:20.129"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230711 08:50:11.843" endtime="20230711 08:50:20.131"/>
</suite>
<suite id="s1-s5" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s5-t1" name="Create key" line="35">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:50:23.449" level="INFO">Running command 'echo "old1: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230711 08:50:23.451" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:50:23.451" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:50:23.444" endtime="20230711 08:50:23.451"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:50:23.452" level="INFO"/>
<status status="PASS" starttime="20230711 08:50:23.451" endtime="20230711 08:50:23.452"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:50:23.452" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:50:23.452" endtime="20230711 08:50:23.452"/>
</kw>
<status status="PASS" starttime="20230711 08:50:23.444" endtime="20230711 08:50:23.453"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:50:23.456" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:50:28.364" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:50:28.364" level="INFO">${output} = 2023-07-11 08:50:26,868 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-11 08:50:26,947 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230711 08:50:23.454" endtime="20230711 08:50:28.364"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:50:28.365" level="INFO">2023-07-11 08:50:26,868 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-11 08:50:26,947 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-07-11 08:50:26,947 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2023-07-11 08:50:27,246 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20230711 08:50:28.364" endtime="20230711 08:50:28.365"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:50:28.366" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:50:28.365" endtime="20230711 08:50:28.366"/>
</kw>
<status status="PASS" starttime="20230711 08:50:23.454" endtime="20230711 08:50:28.366"/>
</kw>
<msg timestamp="20230711 08:50:28.366" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:50:23.453" endtime="20230711 08:50:28.368"/>
</kw>
<msg timestamp="20230711 08:50:28.368" level="INFO">${output} = 2023-07-11 08:50:26,868 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-11 08:50:26,947 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230711 08:50:23.453" endtime="20230711 08:50:28.368"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:50:28.368" endtime="20230711 08:50:28.368"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:50:28.372" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:50:28.374" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:50:28.374" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:50:28.369" endtime="20230711 08:50:28.374"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:50:28.375" level="INFO"/>
<status status="PASS" starttime="20230711 08:50:28.375" endtime="20230711 08:50:28.376"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:50:28.376" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:50:28.376" endtime="20230711 08:50:28.376"/>
</kw>
<status status="PASS" starttime="20230711 08:50:28.369" endtime="20230711 08:50:28.377"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230711 08:50:23.443" endtime="20230711 08:50:28.377"/>
</test>
<test id="s1-s5-t2" name="Create key in the bucket in s3v volume" line="46">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: another key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:50:28.382" level="INFO">Running command 'echo "old1: another key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230711 08:50:28.384" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:50:28.384" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:50:28.379" endtime="20230711 08:50:28.384"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:50:28.385" level="INFO"/>
<status status="PASS" starttime="20230711 08:50:28.384" endtime="20230711 08:50:28.385"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:50:28.385" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:50:28.385" endtime="20230711 08:50:28.385"/>
</kw>
<status status="PASS" starttime="20230711 08:50:28.379" endtime="20230711 08:50:28.388"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /s3v/${PREFIX}-bucket/key1-shell /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:50:28.392" level="INFO">Running command 'ozone sh key put /s3v/old1-bucket/key1-shell /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:50:33.258" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:50:33.258" level="INFO">${output} = 2023-07-11 08:50:31,684 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-11 08:50:31,828 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230711 08:50:28.390" endtime="20230711 08:50:33.258"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:50:33.259" level="INFO">2023-07-11 08:50:31,684 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-11 08:50:31,828 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-07-11 08:50:31,828 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2023-07-11 08:50:32,125 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20230711 08:50:33.259" endtime="20230711 08:50:33.259"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:50:33.260" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:50:33.260" endtime="20230711 08:50:33.260"/>
</kw>
<status status="PASS" starttime="20230711 08:50:28.389" endtime="20230711 08:50:33.260"/>
</kw>
<msg timestamp="20230711 08:50:33.261" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:50:28.389" endtime="20230711 08:50:33.261"/>
</kw>
<msg timestamp="20230711 08:50:33.261" level="INFO">${output} = 2023-07-11 08:50:31,684 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-11 08:50:31,828 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230711 08:50:28.388" endtime="20230711 08:50:33.261"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:50:33.261" endtime="20230711 08:50:33.262"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:50:33.265" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:50:33.268" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:50:33.268" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:50:33.263" endtime="20230711 08:50:33.268"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:50:33.269" level="INFO"/>
<status status="PASS" starttime="20230711 08:50:33.269" endtime="20230711 08:50:33.269"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:50:33.270" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:50:33.270" endtime="20230711 08:50:33.270"/>
</kw>
<status status="PASS" starttime="20230711 08:50:33.262" endtime="20230711 08:50:33.270"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230711 08:50:28.378" endtime="20230711 08:50:33.271"/>
</test>
<test id="s1-s5-t3" name="Setup credentials for S3" line="52">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:50:33.277" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:50:33.789" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:50:33.789" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:50:33.275" endtime="20230711 08:50:33.789"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:50:33.790" level="INFO"/>
<status status="PASS" starttime="20230711 08:50:33.790" endtime="20230711 08:50:33.791"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:50:33.791" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:50:33.791" endtime="20230711 08:50:33.791"/>
</kw>
<status status="PASS" starttime="20230711 08:50:33.274" endtime="20230711 08:50:33.791"/>
</kw>
<msg timestamp="20230711 08:50:33.792" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:50:33.274" endtime="20230711 08:50:33.792"/>
</kw>
<status status="PASS" starttime="20230711 08:50:33.274" endtime="20230711 08:50:33.792"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:50:33.796" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:50:34.304" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:50:34.304" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:50:33.794" endtime="20230711 08:50:34.304"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:50:34.306" level="INFO"/>
<status status="PASS" starttime="20230711 08:50:34.305" endtime="20230711 08:50:34.306"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:50:34.307" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:50:34.306" endtime="20230711 08:50:34.307"/>
</kw>
<status status="PASS" starttime="20230711 08:50:33.793" endtime="20230711 08:50:34.307"/>
</kw>
<msg timestamp="20230711 08:50:34.307" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:50:33.793" endtime="20230711 08:50:34.308"/>
</kw>
<status status="PASS" starttime="20230711 08:50:33.792" endtime="20230711 08:50:34.308"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:50:34.313" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:50:34.841" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:50:34.841" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:50:34.310" endtime="20230711 08:50:34.842"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:50:34.843" level="INFO"/>
<status status="PASS" starttime="20230711 08:50:34.842" endtime="20230711 08:50:34.843"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:50:34.843" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:50:34.843" endtime="20230711 08:50:34.844"/>
</kw>
<status status="PASS" starttime="20230711 08:50:34.310" endtime="20230711 08:50:34.844"/>
</kw>
<msg timestamp="20230711 08:50:34.844" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:50:34.309" endtime="20230711 08:50:34.844"/>
</kw>
<status status="PASS" starttime="20230711 08:50:34.308" endtime="20230711 08:50:34.845"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:50:34.849" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:50:35.366" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:50:35.366" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:50:34.846" endtime="20230711 08:50:35.366"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:50:35.368" level="INFO"/>
<status status="PASS" starttime="20230711 08:50:35.367" endtime="20230711 08:50:35.368"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:50:35.368" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:50:35.368" endtime="20230711 08:50:35.368"/>
</kw>
<status status="PASS" starttime="20230711 08:50:34.846" endtime="20230711 08:50:35.369"/>
</kw>
<msg timestamp="20230711 08:50:35.369" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:50:34.846" endtime="20230711 08:50:35.369"/>
</kw>
<status status="PASS" starttime="20230711 08:50:34.845" endtime="20230711 08:50:35.369"/>
</kw>
<status status="PASS" starttime="20230711 08:50:33.273" endtime="20230711 08:50:35.370"/>
</kw>
<status status="PASS" starttime="20230711 08:50:33.272" endtime="20230711 08:50:35.370"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230711 08:50:33.272" endtime="20230711 08:50:35.370"/>
</test>
<test id="s1-s5-t4" name="Try to create a bucket using S3 API" line="56">
<kw name="Create bucket with name" library="commonawslib">
<var>${output}</var>
<arg>${PREFIX}-bucket</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:50:35.377" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:50:36.029" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:50:36.029" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230711 08:50:35.374" endtime="20230711 08:50:36.029"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:50:36.032" level="INFO">{
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230711 08:50:36.031" endtime="20230711 08:50:36.032"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:50:36.033" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:50:36.032" endtime="20230711 08:50:36.033"/>
</kw>
<status status="PASS" starttime="20230711 08:50:35.374" endtime="20230711 08:50:36.033"/>
</kw>
<msg timestamp="20230711 08:50:36.033" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:50:35.373" endtime="20230711 08:50:36.034"/>
</kw>
<msg timestamp="20230711 08:50:36.034" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230711 08:50:35.373" endtime="20230711 08:50:36.034"/>
</kw>
<msg timestamp="20230711 08:50:36.035" level="INFO">${result} = {
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230711 08:50:35.372" endtime="20230711 08:50:36.035"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:50:36.035" endtime="20230711 08:50:36.035"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:50:36.035" endtime="20230711 08:50:36.036"/>
</kw>
<msg timestamp="20230711 08:50:36.036" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20230711 08:50:35.372" endtime="20230711 08:50:36.036"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230711 08:50:36.036" endtime="20230711 08:50:36.037"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230711 08:50:35.371" endtime="20230711 08:50:36.037"/>
</test>
<test id="s1-s5-t5" name="Create key using S3 API" line="61">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using S3 API" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:50:36.042" level="INFO">Running command 'echo "old1: key created using S3 API" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230711 08:50:36.044" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:50:36.044" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:50:36.039" endtime="20230711 08:50:36.044"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:50:36.045" level="INFO"/>
<status status="PASS" starttime="20230711 08:50:36.044" endtime="20230711 08:50:36.045"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:50:36.046" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:50:36.045" endtime="20230711 08:50:36.046"/>
</kw>
<status status="PASS" starttime="20230711 08:50:36.039" endtime="20230711 08:50:36.046"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>put-object --bucket ${PREFIX}-bucket --key key2-s3api --body /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:50:36.050" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket old1-bucket --key key2-s3api --body /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:50:36.819" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:50:36.820" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:50:36.047" endtime="20230711 08:50:36.820"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:50:36.821" level="INFO"/>
<status status="PASS" starttime="20230711 08:50:36.820" endtime="20230711 08:50:36.821"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:50:36.822" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:50:36.821" endtime="20230711 08:50:36.822"/>
</kw>
<msg timestamp="20230711 08:50:36.822" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:50:36.047" endtime="20230711 08:50:36.822"/>
</kw>
<msg timestamp="20230711 08:50:36.822" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:50:36.046" endtime="20230711 08:50:36.822"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:50:36.823" endtime="20230711 08:50:36.823"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:50:36.826" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:50:36.828" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:50:36.829" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:50:36.824" endtime="20230711 08:50:36.829"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:50:36.830" level="INFO"/>
<status status="PASS" starttime="20230711 08:50:36.829" endtime="20230711 08:50:36.830"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:50:36.830" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:50:36.830" endtime="20230711 08:50:36.831"/>
</kw>
<status status="PASS" starttime="20230711 08:50:36.823" endtime="20230711 08:50:36.831"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230711 08:50:36.038" endtime="20230711 08:50:36.831"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230711 08:50:23.365" endtime="20230711 08:50:36.832"/>
</suite>
<suite id="s1-s6" name="Prepare" source="/opt/ozone/smoketest/upgrade/prepare.robot">
<test id="s1-s6-t1" name="Prepare Ozone Manager" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230711 08:50:40.017" endtime="20230711 08:50:40.018"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM prepare is skipped for version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230711 08:50:40.018" endtime="20230711 08:50:40.019"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:50:40.025" level="INFO">Running command 'ozone admin om prepare -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:50:48.311" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:50:48.311" level="INFO">${output} = Ozone Manager Prepare Request successfully returned with Transaction Id : [109].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20230711 08:50:40.020" endtime="20230711 08:50:48.311"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:50:48.312" level="INFO">Ozone Manager Prepare Request successfully returned with Transaction Id : [109].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [109]
OM : [om3], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [109]
OM : [om2], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [109]

OM Preparation successful! 
All OMs are prepared
No new write requests will be allowed until preparation is cancelled or upgrade/downgrade is done.</msg>
<status status="PASS" starttime="20230711 08:50:48.312" endtime="20230711 08:50:48.313"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:50:48.313" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:50:48.313" endtime="20230711 08:50:48.313"/>
</kw>
<status status="PASS" starttime="20230711 08:50:40.020" endtime="20230711 08:50:48.314"/>
</kw>
<msg timestamp="20230711 08:50:48.314" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:50:40.019" endtime="20230711 08:50:48.315"/>
</kw>
<msg timestamp="20230711 08:50:48.315" level="INFO">${result} = Ozone Manager Prepare Request successfully returned with Transaction Id : [109].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20230711 08:50:40.019" endtime="20230711 08:50:48.315"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:50:48.316" endtime="20230711 08:50:48.316"/>
</kw>
<status status="PASS" starttime="20230711 08:50:48.315" endtime="20230711 08:50:48.316"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230711 08:50:40.016" endtime="20230711 08:50:48.317"/>
</test>
<doc>Prepares OMs</doc>
<status status="PASS" starttime="20230711 08:50:39.966" endtime="20230711 08:50:48.318"/>
</suite>
<suite id="s1-s7" name="Check-Finalization" source="/opt/ozone/smoketest/upgrade/check-finalization.robot">
<test id="s1-s7-t1" name="Check OM Finalized" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230711 08:49:06.657" endtime="20230711 08:49:06.657"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>env</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:49:06.663" level="INFO">Running command 'env 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:49:06.666" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:49:06.666" level="INFO">${output} = OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=ab5281534dfa
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/ha...</msg>
<status status="PASS" starttime="20230711 08:49:06.659" endtime="20230711 08:49:06.666"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:49:06.667" level="INFO">OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=ab5281534dfa
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/hadoop
LD_LIBRARY_PATH=/usr/local/lib
OZONE-SITE.XML_ozone.replication=3
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
ENSURE_SCM_INITIALIZED=/data/metadata/scm/current/VERSION
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OM_SERVICE_ID=omservice
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin
PWD=/opt/hadoop
OZONE-SITE.XML_ozone.scm.container.size=1GB
JAVA_HOME=/usr/lib/jvm/jre/
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE_UPGRADE_FROM=1.3.0
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
SHLVL=1
HOME=/opt/hadoop
OZONE_CONF_DIR=/etc/hadoop
OZONE-SITE.XML_ozone.om.ratis.enable=true
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
OZONE_UPGRADE_TO=1.4.0
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_ozone.scm.ratis.enable=true
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3
_=/usr/bin/env</msg>
<status status="PASS" starttime="20230711 08:49:06.667" endtime="20230711 08:49:06.667"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:49:06.668" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:49:06.668" endtime="20230711 08:49:06.668"/>
</kw>
<status status="PASS" starttime="20230711 08:49:06.658" endtime="20230711 08:49:06.668"/>
</kw>
<msg timestamp="20230711 08:49:06.668" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:49:06.658" endtime="20230711 08:49:06.670"/>
</kw>
<msg timestamp="20230711 08:49:06.670" level="INFO">${result} = OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=ab5281534dfa
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/ha...</msg>
<status status="PASS" starttime="20230711 08:49:06.657" endtime="20230711 08:49:06.670"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:49:06.670" level="INFO">OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=ab5281534dfa
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/hadoop
LD_LIBRARY_PATH=/usr/local/lib
OZONE-SITE.XML_ozone.replication=3
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
ENSURE_SCM_INITIALIZED=/data/metadata/scm/current/VERSION
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OM_SERVICE_ID=omservice
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin
PWD=/opt/hadoop
OZONE-SITE.XML_ozone.scm.container.size=1GB
JAVA_HOME=/usr/lib/jvm/jre/
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE_UPGRADE_FROM=1.3.0
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
SHLVL=1
HOME=/opt/hadoop
OZONE_CONF_DIR=/etc/hadoop
OZONE-SITE.XML_ozone.om.ratis.enable=true
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
OZONE_UPGRADE_TO=1.4.0
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_ozone.scm.ratis.enable=true
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3
_=/usr/bin/env</msg>
<status status="PASS" starttime="20230711 08:49:06.670" endtime="20230711 08:49:06.670"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230711 08:49:06.671" endtime="20230711 08:49:06.671"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:49:06.675" level="INFO">Running command 'ozone admin om finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:49:09.654" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:49:09.654" level="INFO">${output} = ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20230711 08:49:06.672" endtime="20230711 08:49:09.654"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:49:09.655" level="INFO">ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20230711 08:49:09.654" endtime="20230711 08:49:09.655"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:49:09.656" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:49:09.655" endtime="20230711 08:49:09.656"/>
</kw>
<status status="PASS" starttime="20230711 08:49:06.672" endtime="20230711 08:49:09.656"/>
</kw>
<msg timestamp="20230711 08:49:09.656" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:49:06.672" endtime="20230711 08:49:09.657"/>
</kw>
<msg timestamp="20230711 08:49:09.657" level="INFO">${result} = ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20230711 08:49:06.671" endtime="20230711 08:49:09.657"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:49:09.657" level="INFO">ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20230711 08:49:09.657" endtime="20230711 08:49:09.657"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20230711 08:49:09.658" endtime="20230711 08:49:09.658"/>
</kw>
<tag>finalized</tag>
<tag>om</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230711 08:49:06.655" endtime="20230711 08:49:09.658"/>
</test>
<test id="s1-s7-t2" name="Check SCM Finalized" line="32">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230711 08:49:09.660" endtime="20230711 08:49:09.661"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>HDDS finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230711 08:49:09.661" endtime="20230711 08:49:09.661"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:49:09.665" level="INFO">Running command 'ozone admin scm finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:49:12.846" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:49:12.846" level="INFO">${output} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230711 08:49:09.662" endtime="20230711 08:49:12.846"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:49:12.848" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230711 08:49:12.846" endtime="20230711 08:49:12.848"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:49:12.848" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:49:12.848" endtime="20230711 08:49:12.848"/>
</kw>
<status status="PASS" starttime="20230711 08:49:09.662" endtime="20230711 08:49:12.849"/>
</kw>
<msg timestamp="20230711 08:49:12.849" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:49:09.662" endtime="20230711 08:49:12.849"/>
</kw>
<msg timestamp="20230711 08:49:12.849" level="INFO">${result} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230711 08:49:09.661" endtime="20230711 08:49:12.849"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:49:12.850" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230711 08:49:12.850" endtime="20230711 08:49:12.850"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20230711 08:49:12.850" endtime="20230711 08:49:12.851"/>
</kw>
<tag>finalized</tag>
<tag>scm</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230711 08:49:09.659" endtime="20230711 08:49:12.851"/>
</test>
<doc>Finalize Upgrade of the Ozone cluster</doc>
<status status="PASS" starttime="20230711 08:49:06.599" endtime="20230711 08:49:12.853"/>
</suite>
<suite id="s1-s8" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s8-t1" name="Create a volume and bucket" line="28">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:41:01.151" level="INFO">Running command 'ozone sh volume create old1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:41:04.009" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:41:04.009" level="INFO">${output} = 2023-07-11 08:41:03,792 [main] INFO rpc.RpcClient: Creating Volume: old1-volume, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20230711 08:41:01.146" endtime="20230711 08:41:04.009"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:41:04.011" level="INFO">2023-07-11 08:41:03,792 [main] INFO rpc.RpcClient: Creating Volume: old1-volume, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20230711 08:41:04.010" endtime="20230711 08:41:04.011"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:41:04.012" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:41:04.011" endtime="20230711 08:41:04.012"/>
</kw>
<status status="PASS" starttime="20230711 08:41:01.146" endtime="20230711 08:41:04.012"/>
</kw>
<msg timestamp="20230711 08:41:04.012" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:41:01.146" endtime="20230711 08:41:04.014"/>
</kw>
<msg timestamp="20230711 08:41:04.015" level="INFO">${output} = 2023-07-11 08:41:03,792 [main] INFO rpc.RpcClient: Creating Volume: old1-volume, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20230711 08:41:01.145" endtime="20230711 08:41:04.015"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:41:04.015" endtime="20230711 08:41:04.015"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:41:04.024" level="INFO">Running command 'ozone sh bucket create /old1-volume/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:41:07.001" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:41:07.001" level="INFO">${output} = 2023-07-11 08:41:06,914 [main] INFO rpc.RpcClient: Creating Bucket: old1-volume/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Enc...</msg>
<status status="PASS" starttime="20230711 08:41:04.018" endtime="20230711 08:41:07.001"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:41:07.002" level="INFO">2023-07-11 08:41:06,914 [main] INFO rpc.RpcClient: Creating Bucket: old1-volume/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false </msg>
<status status="PASS" starttime="20230711 08:41:07.001" endtime="20230711 08:41:07.002"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:41:07.002" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:41:07.002" endtime="20230711 08:41:07.003"/>
</kw>
<status status="PASS" starttime="20230711 08:41:04.017" endtime="20230711 08:41:07.003"/>
</kw>
<msg timestamp="20230711 08:41:07.004" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:41:04.017" endtime="20230711 08:41:07.004"/>
</kw>
<msg timestamp="20230711 08:41:07.004" level="INFO">${output} = 2023-07-11 08:41:06,914 [main] INFO rpc.RpcClient: Creating Bucket: old1-volume/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Enc...</msg>
<status status="PASS" starttime="20230711 08:41:04.015" endtime="20230711 08:41:07.004"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:41:07.004" endtime="20230711 08:41:07.005"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230711 08:41:01.144" endtime="20230711 08:41:07.005"/>
</test>
<test id="s1-s8-t2" name="Create key" line="35">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:41:07.010" level="INFO">Running command 'echo "old1: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230711 08:41:07.012" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:41:07.012" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:41:07.008" endtime="20230711 08:41:07.012"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:41:07.014" level="INFO"/>
<status status="PASS" starttime="20230711 08:41:07.014" endtime="20230711 08:41:07.014"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:41:07.015" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:41:07.015" endtime="20230711 08:41:07.015"/>
</kw>
<status status="PASS" starttime="20230711 08:41:07.007" endtime="20230711 08:41:07.015"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:41:07.020" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:41:13.158" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:41:13.158" level="INFO">${output} = 2023-07-11 08:41:10,846 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-11 08:41:10,921 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230711 08:41:07.018" endtime="20230711 08:41:13.158"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:41:13.159" level="INFO">2023-07-11 08:41:10,846 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-11 08:41:10,921 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-07-11 08:41:10,921 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2023-07-11 08:41:11,250 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20230711 08:41:13.158" endtime="20230711 08:41:13.159"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:41:13.159" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:41:13.159" endtime="20230711 08:41:13.160"/>
</kw>
<status status="PASS" starttime="20230711 08:41:07.017" endtime="20230711 08:41:13.160"/>
</kw>
<msg timestamp="20230711 08:41:13.160" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:41:07.016" endtime="20230711 08:41:13.160"/>
</kw>
<msg timestamp="20230711 08:41:13.161" level="INFO">${output} = 2023-07-11 08:41:10,846 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-11 08:41:10,921 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230711 08:41:07.016" endtime="20230711 08:41:13.161"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:41:13.161" endtime="20230711 08:41:13.161"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:41:13.164" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:41:13.168" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:41:13.168" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:41:13.162" endtime="20230711 08:41:13.168"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:41:13.169" level="INFO"/>
<status status="PASS" starttime="20230711 08:41:13.168" endtime="20230711 08:41:13.169"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:41:13.170" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:41:13.169" endtime="20230711 08:41:13.170"/>
</kw>
<status status="PASS" starttime="20230711 08:41:13.161" endtime="20230711 08:41:13.170"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230711 08:41:07.006" endtime="20230711 08:41:13.170"/>
</test>
<test id="s1-s8-t3" name="Create a bucket in s3v volume" line="41">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /s3v/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:41:13.176" level="INFO">Running command 'ozone sh bucket create /s3v/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:41:16.099" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:41:16.099" level="INFO">${output} = 2023-07-11 08:41:16,046 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption ...</msg>
<status status="PASS" starttime="20230711 08:41:13.174" endtime="20230711 08:41:16.099"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:41:16.100" level="INFO">2023-07-11 08:41:16,046 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false </msg>
<status status="PASS" starttime="20230711 08:41:16.100" endtime="20230711 08:41:16.100"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:41:16.101" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:41:16.101" endtime="20230711 08:41:16.101"/>
</kw>
<status status="PASS" starttime="20230711 08:41:13.173" endtime="20230711 08:41:16.102"/>
</kw>
<msg timestamp="20230711 08:41:16.102" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:41:13.173" endtime="20230711 08:41:16.102"/>
</kw>
<msg timestamp="20230711 08:41:16.102" level="INFO">${output} = 2023-07-11 08:41:16,046 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption ...</msg>
<status status="PASS" starttime="20230711 08:41:13.172" endtime="20230711 08:41:16.102"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:41:16.103" endtime="20230711 08:41:16.103"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230711 08:41:13.171" endtime="20230711 08:41:16.103"/>
</test>
<test id="s1-s8-t4" name="Create key in the bucket in s3v volume" line="46">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: another key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:41:16.110" level="INFO">Running command 'echo "old1: another key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230711 08:41:16.112" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:41:16.112" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:41:16.106" endtime="20230711 08:41:16.112"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:41:16.113" level="INFO"/>
<status status="PASS" starttime="20230711 08:41:16.112" endtime="20230711 08:41:16.113"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:41:16.114" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:41:16.113" endtime="20230711 08:41:16.114"/>
</kw>
<status status="PASS" starttime="20230711 08:41:16.106" endtime="20230711 08:41:16.114"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /s3v/${PREFIX}-bucket/key1-shell /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:41:16.119" level="INFO">Running command 'ozone sh key put /s3v/old1-bucket/key1-shell /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:41:22.011" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:41:22.011" level="INFO">${output} = 2023-07-11 08:41:19,892 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-11 08:41:20,034 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230711 08:41:16.116" endtime="20230711 08:41:22.011"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:41:22.012" level="INFO">2023-07-11 08:41:19,892 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-11 08:41:20,034 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-07-11 08:41:20,034 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2023-07-11 08:41:20,350 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20230711 08:41:22.011" endtime="20230711 08:41:22.012"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:41:22.013" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:41:22.012" endtime="20230711 08:41:22.013"/>
</kw>
<status status="PASS" starttime="20230711 08:41:16.115" endtime="20230711 08:41:22.013"/>
</kw>
<msg timestamp="20230711 08:41:22.013" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:41:16.115" endtime="20230711 08:41:22.014"/>
</kw>
<msg timestamp="20230711 08:41:22.014" level="INFO">${output} = 2023-07-11 08:41:19,892 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-11 08:41:20,034 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230711 08:41:16.114" endtime="20230711 08:41:22.014"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:41:22.015" endtime="20230711 08:41:22.015"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:41:22.018" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:41:22.020" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:41:22.020" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:41:22.016" endtime="20230711 08:41:22.021"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:41:22.022" level="INFO"/>
<status status="PASS" starttime="20230711 08:41:22.021" endtime="20230711 08:41:22.022"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:41:22.022" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:41:22.022" endtime="20230711 08:41:22.022"/>
</kw>
<status status="PASS" starttime="20230711 08:41:22.015" endtime="20230711 08:41:22.023"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230711 08:41:16.105" endtime="20230711 08:41:22.023"/>
</test>
<test id="s1-s8-t5" name="Setup credentials for S3" line="52">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:41:22.028" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:41:22.734" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:41:22.735" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:41:22.026" endtime="20230711 08:41:22.735"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:41:22.736" level="INFO"/>
<status status="PASS" starttime="20230711 08:41:22.735" endtime="20230711 08:41:22.736"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:41:22.736" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:41:22.736" endtime="20230711 08:41:22.736"/>
</kw>
<status status="PASS" starttime="20230711 08:41:22.026" endtime="20230711 08:41:22.737"/>
</kw>
<msg timestamp="20230711 08:41:22.737" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:41:22.025" endtime="20230711 08:41:22.737"/>
</kw>
<status status="PASS" starttime="20230711 08:41:22.025" endtime="20230711 08:41:22.737"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:41:22.741" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:41:23.261" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:41:23.261" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:41:22.739" endtime="20230711 08:41:23.261"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:41:23.262" level="INFO"/>
<status status="PASS" starttime="20230711 08:41:23.261" endtime="20230711 08:41:23.262"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:41:23.263" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:41:23.262" endtime="20230711 08:41:23.263"/>
</kw>
<status status="PASS" starttime="20230711 08:41:22.739" endtime="20230711 08:41:23.263"/>
</kw>
<msg timestamp="20230711 08:41:23.263" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:41:22.738" endtime="20230711 08:41:23.264"/>
</kw>
<status status="PASS" starttime="20230711 08:41:22.738" endtime="20230711 08:41:23.264"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:41:23.269" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:41:23.833" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:41:23.833" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:41:23.265" endtime="20230711 08:41:23.833"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:41:23.834" level="INFO"/>
<status status="PASS" starttime="20230711 08:41:23.833" endtime="20230711 08:41:23.834"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:41:23.835" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:41:23.834" endtime="20230711 08:41:23.835"/>
</kw>
<status status="PASS" starttime="20230711 08:41:23.265" endtime="20230711 08:41:23.835"/>
</kw>
<msg timestamp="20230711 08:41:23.835" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:41:23.264" endtime="20230711 08:41:23.836"/>
</kw>
<status status="PASS" starttime="20230711 08:41:23.264" endtime="20230711 08:41:23.836"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:41:23.839" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:41:24.368" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:41:24.368" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:41:23.837" endtime="20230711 08:41:24.368"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:41:24.370" level="INFO"/>
<status status="PASS" starttime="20230711 08:41:24.369" endtime="20230711 08:41:24.370"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:41:24.371" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:41:24.370" endtime="20230711 08:41:24.371"/>
</kw>
<status status="PASS" starttime="20230711 08:41:23.837" endtime="20230711 08:41:24.371"/>
</kw>
<msg timestamp="20230711 08:41:24.371" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:41:23.836" endtime="20230711 08:41:24.371"/>
</kw>
<status status="PASS" starttime="20230711 08:41:23.836" endtime="20230711 08:41:24.372"/>
</kw>
<status status="PASS" starttime="20230711 08:41:22.025" endtime="20230711 08:41:24.372"/>
</kw>
<status status="PASS" starttime="20230711 08:41:22.024" endtime="20230711 08:41:24.372"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230711 08:41:22.024" endtime="20230711 08:41:24.372"/>
</test>
<test id="s1-s8-t6" name="Try to create a bucket using S3 API" line="56">
<kw name="Create bucket with name" library="commonawslib">
<var>${output}</var>
<arg>${PREFIX}-bucket</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:41:24.378" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:41:26.418" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:41:26.418" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230711 08:41:24.376" endtime="20230711 08:41:26.418"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:41:26.420" level="INFO">{
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230711 08:41:26.419" endtime="20230711 08:41:26.420"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:41:26.420" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:41:26.420" endtime="20230711 08:41:26.420"/>
</kw>
<status status="PASS" starttime="20230711 08:41:24.375" endtime="20230711 08:41:26.421"/>
</kw>
<msg timestamp="20230711 08:41:26.423" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:41:24.375" endtime="20230711 08:41:26.424"/>
</kw>
<msg timestamp="20230711 08:41:26.424" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230711 08:41:24.375" endtime="20230711 08:41:26.424"/>
</kw>
<msg timestamp="20230711 08:41:26.424" level="INFO">${result} = {
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230711 08:41:24.374" endtime="20230711 08:41:26.424"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:41:26.424" endtime="20230711 08:41:26.425"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:41:26.425" endtime="20230711 08:41:26.426"/>
</kw>
<msg timestamp="20230711 08:41:26.426" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20230711 08:41:24.374" endtime="20230711 08:41:26.426"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230711 08:41:26.426" endtime="20230711 08:41:26.426"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230711 08:41:24.373" endtime="20230711 08:41:26.427"/>
</test>
<test id="s1-s8-t7" name="Create key using S3 API" line="61">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using S3 API" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:41:26.434" level="INFO">Running command 'echo "old1: key created using S3 API" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230711 08:41:26.435" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:41:26.435" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:41:26.431" endtime="20230711 08:41:26.435"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:41:26.436" level="INFO"/>
<status status="PASS" starttime="20230711 08:41:26.436" endtime="20230711 08:41:26.436"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:41:26.437" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:41:26.437" endtime="20230711 08:41:26.437"/>
</kw>
<status status="PASS" starttime="20230711 08:41:26.430" endtime="20230711 08:41:26.437"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>put-object --bucket ${PREFIX}-bucket --key key2-s3api --body /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:41:26.442" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket old1-bucket --key key2-s3api --body /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:41:28.220" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:41:28.220" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:41:26.439" endtime="20230711 08:41:28.220"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:41:28.222" level="INFO"/>
<status status="PASS" starttime="20230711 08:41:28.221" endtime="20230711 08:41:28.222"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:41:28.223" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:41:28.222" endtime="20230711 08:41:28.223"/>
</kw>
<msg timestamp="20230711 08:41:28.223" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:41:26.438" endtime="20230711 08:41:28.223"/>
</kw>
<msg timestamp="20230711 08:41:28.223" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:41:26.437" endtime="20230711 08:41:28.223"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:41:28.224" endtime="20230711 08:41:28.224"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:41:28.227" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:41:28.229" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:41:28.229" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:41:28.225" endtime="20230711 08:41:28.229"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:41:28.230" level="INFO"/>
<status status="PASS" starttime="20230711 08:41:28.230" endtime="20230711 08:41:28.230"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:41:28.231" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:41:28.230" endtime="20230711 08:41:28.231"/>
</kw>
<status status="PASS" starttime="20230711 08:41:28.224" endtime="20230711 08:41:28.231"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230711 08:41:26.429" endtime="20230711 08:41:28.231"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230711 08:41:01.061" endtime="20230711 08:41:28.233"/>
</suite>
<suite id="s1-s9" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s9-t1" name="Read data from previously created key" line="28">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230711 08:41:31.441" level="INFO">${random} = 46104</msg>
<status status="PASS" starttime="20230711 08:41:31.441" endtime="20230711 08:41:31.441"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:41:31.447" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-46104 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:41:36.013" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:41:36.013" level="INFO">${output} = 2023-07-11 08:41:34,742 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-11 08:41:34,827 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230711 08:41:31.444" endtime="20230711 08:41:36.013"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:41:36.015" level="INFO">2023-07-11 08:41:34,742 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-11 08:41:34,827 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-07-11 08:41:34,827 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started</msg>
<status status="PASS" starttime="20230711 08:41:36.013" endtime="20230711 08:41:36.015"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:41:36.015" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:41:36.015" endtime="20230711 08:41:36.016"/>
</kw>
<status status="PASS" starttime="20230711 08:41:31.443" endtime="20230711 08:41:36.016"/>
</kw>
<msg timestamp="20230711 08:41:36.016" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:41:31.442" endtime="20230711 08:41:36.017"/>
</kw>
<msg timestamp="20230711 08:41:36.017" level="INFO">${output} = 2023-07-11 08:41:34,742 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-11 08:41:34,827 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230711 08:41:31.442" endtime="20230711 08:41:36.017"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:41:36.018" endtime="20230711 08:41:36.018"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:41:36.021" level="INFO">Running command 'cat /tmp/key-46104 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:41:36.024" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:41:36.024" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230711 08:41:36.019" endtime="20230711 08:41:36.024"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:41:36.025" level="INFO">old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230711 08:41:36.024" endtime="20230711 08:41:36.025"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:41:36.026" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:41:36.025" endtime="20230711 08:41:36.026"/>
</kw>
<msg timestamp="20230711 08:41:36.026" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230711 08:41:36.018" endtime="20230711 08:41:36.026"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:41:36.026" endtime="20230711 08:41:36.027"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:41:36.029" level="INFO">Running command 'rm /tmp/key-46104 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:41:36.032" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:41:36.032" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:41:36.027" endtime="20230711 08:41:36.032"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:41:36.033" level="INFO"/>
<status status="PASS" starttime="20230711 08:41:36.033" endtime="20230711 08:41:36.033"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:41:36.034" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:41:36.034" endtime="20230711 08:41:36.034"/>
</kw>
<status status="PASS" starttime="20230711 08:41:36.027" endtime="20230711 08:41:36.034"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230711 08:41:31.440" endtime="20230711 08:41:36.035"/>
</test>
<test id="s1-s9-t2" name="Setup credentials for S3" line="36">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:41:36.040" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:41:36.548" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:41:36.548" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:41:36.038" endtime="20230711 08:41:36.548"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:41:36.549" level="INFO"/>
<status status="PASS" starttime="20230711 08:41:36.548" endtime="20230711 08:41:36.549"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:41:36.550" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:41:36.549" endtime="20230711 08:41:36.550"/>
</kw>
<status status="PASS" starttime="20230711 08:41:36.038" endtime="20230711 08:41:36.550"/>
</kw>
<msg timestamp="20230711 08:41:36.550" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:41:36.038" endtime="20230711 08:41:36.551"/>
</kw>
<status status="PASS" starttime="20230711 08:41:36.037" endtime="20230711 08:41:36.551"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:41:36.554" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:41:37.053" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:41:37.053" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:41:36.552" endtime="20230711 08:41:37.053"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:41:37.055" level="INFO"/>
<status status="PASS" starttime="20230711 08:41:37.054" endtime="20230711 08:41:37.055"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:41:37.055" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:41:37.055" endtime="20230711 08:41:37.055"/>
</kw>
<status status="PASS" starttime="20230711 08:41:36.552" endtime="20230711 08:41:37.056"/>
</kw>
<msg timestamp="20230711 08:41:37.056" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:41:36.551" endtime="20230711 08:41:37.056"/>
</kw>
<status status="PASS" starttime="20230711 08:41:36.551" endtime="20230711 08:41:37.056"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:41:37.060" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:41:37.545" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:41:37.545" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:41:37.058" endtime="20230711 08:41:37.545"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:41:37.546" level="INFO"/>
<status status="PASS" starttime="20230711 08:41:37.545" endtime="20230711 08:41:37.546"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:41:37.547" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:41:37.546" endtime="20230711 08:41:37.547"/>
</kw>
<status status="PASS" starttime="20230711 08:41:37.057" endtime="20230711 08:41:37.547"/>
</kw>
<msg timestamp="20230711 08:41:37.547" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:41:37.057" endtime="20230711 08:41:37.548"/>
</kw>
<status status="PASS" starttime="20230711 08:41:37.056" endtime="20230711 08:41:37.548"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:41:37.552" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:41:38.038" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:41:38.038" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:41:37.549" endtime="20230711 08:41:38.038"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:41:38.039" level="INFO"/>
<status status="PASS" starttime="20230711 08:41:38.039" endtime="20230711 08:41:38.039"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:41:38.040" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:41:38.040" endtime="20230711 08:41:38.040"/>
</kw>
<status status="PASS" starttime="20230711 08:41:37.549" endtime="20230711 08:41:38.040"/>
</kw>
<msg timestamp="20230711 08:41:38.040" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:41:37.549" endtime="20230711 08:41:38.041"/>
</kw>
<status status="PASS" starttime="20230711 08:41:37.548" endtime="20230711 08:41:38.041"/>
</kw>
<status status="PASS" starttime="20230711 08:41:36.037" endtime="20230711 08:41:38.041"/>
</kw>
<status status="PASS" starttime="20230711 08:41:36.036" endtime="20230711 08:41:38.041"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230711 08:41:36.036" endtime="20230711 08:41:38.042"/>
</test>
<test id="s1-s9-t3" name="Read key created with Ozone Shell using S3 API" line="40">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:41:38.047" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:41:38.796" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:41:38.796" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 11 Jul 2023 08:41:21 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230711 08:41:38.044" endtime="20230711 08:41:38.796"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:41:38.797" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 11 Jul 2023 08:41:21 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 11 Jul 2023 08:41:38 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230711 08:41:38.796" endtime="20230711 08:41:38.797"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:41:38.798" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:41:38.797" endtime="20230711 08:41:38.798"/>
</kw>
<msg timestamp="20230711 08:41:38.798" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 11 Jul 2023 08:41:21 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230711 08:41:38.044" endtime="20230711 08:41:38.798"/>
</kw>
<msg timestamp="20230711 08:41:38.798" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 11 Jul 2023 08:41:21 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230711 08:41:38.043" endtime="20230711 08:41:38.798"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:41:38.798" endtime="20230711 08:41:38.799"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:41:38.802" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:41:38.804" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:41:38.804" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230711 08:41:38.799" endtime="20230711 08:41:38.804"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:41:38.805" level="INFO">old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230711 08:41:38.805" endtime="20230711 08:41:38.805"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:41:38.806" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:41:38.806" endtime="20230711 08:41:38.806"/>
</kw>
<msg timestamp="20230711 08:41:38.806" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230711 08:41:38.799" endtime="20230711 08:41:38.806"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:41:38.807" endtime="20230711 08:41:38.807"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:41:38.810" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:41:38.813" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:41:38.813" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:41:38.808" endtime="20230711 08:41:38.813"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:41:38.814" level="INFO"/>
<status status="PASS" starttime="20230711 08:41:38.813" endtime="20230711 08:41:38.814"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:41:38.814" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:41:38.814" endtime="20230711 08:41:38.815"/>
</kw>
<status status="PASS" starttime="20230711 08:41:38.807" endtime="20230711 08:41:38.815"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230711 08:41:38.042" endtime="20230711 08:41:38.815"/>
</test>
<test id="s1-s9-t4" name="Read key created with S3 API using S3 API" line="47">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:41:38.820" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:41:39.481" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:41:39.481" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 11 Jul 2023 08:41:28 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230711 08:41:38.818" endtime="20230711 08:41:39.481"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:41:39.482" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 11 Jul 2023 08:41:28 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 11 Jul 2023 08:41:39 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230711 08:41:39.482" endtime="20230711 08:41:39.482"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:41:39.483" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:41:39.483" endtime="20230711 08:41:39.483"/>
</kw>
<msg timestamp="20230711 08:41:39.484" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 11 Jul 2023 08:41:28 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230711 08:41:38.817" endtime="20230711 08:41:39.484"/>
</kw>
<msg timestamp="20230711 08:41:39.484" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 11 Jul 2023 08:41:28 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230711 08:41:38.817" endtime="20230711 08:41:39.484"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:41:39.484" endtime="20230711 08:41:39.485"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:41:39.487" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:41:39.490" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:41:39.490" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20230711 08:41:39.485" endtime="20230711 08:41:39.490"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:41:39.491" level="INFO">old1: key created using S3 API</msg>
<status status="PASS" starttime="20230711 08:41:39.490" endtime="20230711 08:41:39.491"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:41:39.492" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:41:39.491" endtime="20230711 08:41:39.492"/>
</kw>
<msg timestamp="20230711 08:41:39.492" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20230711 08:41:39.485" endtime="20230711 08:41:39.492"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:41:39.492" endtime="20230711 08:41:39.493"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:41:39.496" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:41:39.498" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:41:39.498" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:41:39.494" endtime="20230711 08:41:39.498"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:41:39.499" level="INFO"/>
<status status="PASS" starttime="20230711 08:41:39.498" endtime="20230711 08:41:39.499"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:41:39.499" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:41:39.499" endtime="20230711 08:41:39.500"/>
</kw>
<status status="PASS" starttime="20230711 08:41:39.493" endtime="20230711 08:41:39.500"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230711 08:41:38.816" endtime="20230711 08:41:39.500"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230711 08:41:31.361" endtime="20230711 08:41:39.501"/>
</suite>
<suite id="s1-s10" name="Prepare" source="/opt/ozone/smoketest/upgrade/prepare.robot">
<test id="s1-s10-t1" name="Prepare Ozone Manager" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230711 08:41:42.674" endtime="20230711 08:41:42.674"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM prepare is skipped for version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230711 08:41:42.675" endtime="20230711 08:41:42.675"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:41:42.680" level="INFO">Running command 'ozone admin om prepare -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:41:50.765" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:41:50.765" level="INFO">${output} = Ozone Manager Prepare Request successfully returned with Transaction Id : [23].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Cu...</msg>
<status status="PASS" starttime="20230711 08:41:42.676" endtime="20230711 08:41:50.765"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:41:50.766" level="INFO">Ozone Manager Prepare Request successfully returned with Transaction Id : [23].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [23]
OM : [om3], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [23]
OM : [om2], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [23]

OM Preparation successful! 
All OMs are prepared
No new write requests will be allowed until preparation is cancelled or upgrade/downgrade is done.</msg>
<status status="PASS" starttime="20230711 08:41:50.765" endtime="20230711 08:41:50.766"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:41:50.767" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:41:50.766" endtime="20230711 08:41:50.767"/>
</kw>
<status status="PASS" starttime="20230711 08:41:42.676" endtime="20230711 08:41:50.767"/>
</kw>
<msg timestamp="20230711 08:41:50.767" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:41:42.675" endtime="20230711 08:41:50.769"/>
</kw>
<msg timestamp="20230711 08:41:50.769" level="INFO">${result} = Ozone Manager Prepare Request successfully returned with Transaction Id : [23].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Cu...</msg>
<status status="PASS" starttime="20230711 08:41:42.675" endtime="20230711 08:41:50.769"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:41:50.770" endtime="20230711 08:41:50.770"/>
</kw>
<status status="PASS" starttime="20230711 08:41:50.769" endtime="20230711 08:41:50.770"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230711 08:41:42.673" endtime="20230711 08:41:50.771"/>
</test>
<doc>Prepares OMs</doc>
<status status="PASS" starttime="20230711 08:41:42.625" endtime="20230711 08:41:50.772"/>
</suite>
<suite id="s1-s11" name="Check-Finalization" source="/opt/ozone/smoketest/upgrade/check-finalization.robot">
<test id="s1-s11-t1" name="Check OM Finalized" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230711 08:40:51.848" endtime="20230711 08:40:51.849"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>env</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:40:51.855" level="INFO">Running command 'env 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:40:51.858" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:40:51.858" level="INFO">${output} = OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=f4b1c61930ee
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/ha...</msg>
<status status="PASS" starttime="20230711 08:40:51.850" endtime="20230711 08:40:51.858"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:40:51.860" level="INFO">OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=f4b1c61930ee
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/hadoop
LD_LIBRARY_PATH=/usr/local/lib
OZONE-SITE.XML_ozone.replication=3
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
ENSURE_SCM_INITIALIZED=/data/metadata/scm/current/VERSION
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OM_SERVICE_ID=omservice
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin
PWD=/opt/hadoop
OZONE-SITE.XML_ozone.scm.container.size=1GB
JAVA_HOME=/usr/lib/jvm/jre/
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE_UPGRADE_FROM=1.3.0
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
SHLVL=1
HOME=/opt/hadoop
OZONE_CONF_DIR=/etc/hadoop
OZONE-SITE.XML_ozone.om.ratis.enable=true
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
OZONE_UPGRADE_TO=1.4.0
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_ozone.scm.ratis.enable=true
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3
_=/usr/bin/env</msg>
<status status="PASS" starttime="20230711 08:40:51.859" endtime="20230711 08:40:51.860"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:40:51.860" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:40:51.860" endtime="20230711 08:40:51.860"/>
</kw>
<status status="PASS" starttime="20230711 08:40:51.850" endtime="20230711 08:40:51.861"/>
</kw>
<msg timestamp="20230711 08:40:51.861" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:40:51.850" endtime="20230711 08:40:51.862"/>
</kw>
<msg timestamp="20230711 08:40:51.862" level="INFO">${result} = OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=f4b1c61930ee
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/ha...</msg>
<status status="PASS" starttime="20230711 08:40:51.849" endtime="20230711 08:40:51.862"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:40:51.863" level="INFO">OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=f4b1c61930ee
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/hadoop
LD_LIBRARY_PATH=/usr/local/lib
OZONE-SITE.XML_ozone.replication=3
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
ENSURE_SCM_INITIALIZED=/data/metadata/scm/current/VERSION
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OM_SERVICE_ID=omservice
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin
PWD=/opt/hadoop
OZONE-SITE.XML_ozone.scm.container.size=1GB
JAVA_HOME=/usr/lib/jvm/jre/
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE_UPGRADE_FROM=1.3.0
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
SHLVL=1
HOME=/opt/hadoop
OZONE_CONF_DIR=/etc/hadoop
OZONE-SITE.XML_ozone.om.ratis.enable=true
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
OZONE_UPGRADE_TO=1.4.0
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_ozone.scm.ratis.enable=true
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3
_=/usr/bin/env</msg>
<status status="PASS" starttime="20230711 08:40:51.862" endtime="20230711 08:40:51.863"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230711 08:40:51.863" endtime="20230711 08:40:51.864"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:40:51.868" level="INFO">Running command 'ozone admin om finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:40:55.044" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:40:55.044" level="INFO">${output} = ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20230711 08:40:51.865" endtime="20230711 08:40:55.044"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:40:55.046" level="INFO">ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20230711 08:40:55.044" endtime="20230711 08:40:55.046"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:40:55.046" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:40:55.046" endtime="20230711 08:40:55.046"/>
</kw>
<status status="PASS" starttime="20230711 08:40:51.865" endtime="20230711 08:40:55.047"/>
</kw>
<msg timestamp="20230711 08:40:55.047" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:40:51.864" endtime="20230711 08:40:55.047"/>
</kw>
<msg timestamp="20230711 08:40:55.047" level="INFO">${result} = ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20230711 08:40:51.864" endtime="20230711 08:40:55.047"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:40:55.048" level="INFO">ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20230711 08:40:55.048" endtime="20230711 08:40:55.048"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20230711 08:40:55.048" endtime="20230711 08:40:55.048"/>
</kw>
<tag>finalized</tag>
<tag>om</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230711 08:40:51.847" endtime="20230711 08:40:55.049"/>
</test>
<test id="s1-s11-t2" name="Check SCM Finalized" line="32">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230711 08:40:55.051" endtime="20230711 08:40:55.053"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>HDDS finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230711 08:40:55.053" endtime="20230711 08:40:55.053"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:40:55.059" level="INFO">Running command 'ozone admin scm finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:40:57.906" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:40:57.906" level="INFO">${output} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230711 08:40:55.055" endtime="20230711 08:40:57.906"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:40:57.907" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230711 08:40:57.906" endtime="20230711 08:40:57.907"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:40:57.908" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:40:57.907" endtime="20230711 08:40:57.908"/>
</kw>
<status status="PASS" starttime="20230711 08:40:55.054" endtime="20230711 08:40:57.908"/>
</kw>
<msg timestamp="20230711 08:40:57.908" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:40:55.054" endtime="20230711 08:40:57.909"/>
</kw>
<msg timestamp="20230711 08:40:57.909" level="INFO">${result} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230711 08:40:55.053" endtime="20230711 08:40:57.909"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:40:57.910" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230711 08:40:57.909" endtime="20230711 08:40:57.910"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20230711 08:40:57.910" endtime="20230711 08:40:57.910"/>
</kw>
<tag>finalized</tag>
<tag>scm</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230711 08:40:55.050" endtime="20230711 08:40:57.910"/>
</test>
<doc>Finalize Upgrade of the Ozone cluster</doc>
<status status="PASS" starttime="20230711 08:40:51.796" endtime="20230711 08:40:57.912"/>
</suite>
<suite id="s1-s12" name="Check-Finalization" source="/opt/hadoop/smoketest/upgrade/check-finalization.robot">
<test id="s1-s12-t1" name="Check OM Finalized" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230711 08:55:33.286" endtime="20230711 08:55:33.287"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>env</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:55:33.296" level="INFO">Running command 'env 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:55:33.300" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:55:33.301" level="INFO">${output} = OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=33b4b2e7551c
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/ha...</msg>
<status status="PASS" starttime="20230711 08:55:33.289" endtime="20230711 08:55:33.301"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:55:33.302" level="INFO">OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=33b4b2e7551c
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/hadoop
LD_LIBRARY_PATH=/usr/local/lib
OZONE-SITE.XML_ozone.replication=3
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
ENSURE_SCM_INITIALIZED=/data/metadata/scm/current/VERSION
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OM_SERVICE_ID=omservice
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin
PWD=/opt/hadoop
OZONE-SITE.XML_ozone.scm.container.size=1GB
JAVA_HOME=/usr/lib/jvm/jre/
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE_UPGRADE_FROM=1.3.0
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
SHLVL=1
HOME=/opt/hadoop
OZONE_CONF_DIR=/etc/hadoop
OZONE-SITE.XML_ozone.om.ratis.enable=true
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
OZONE_UPGRADE_TO=1.4.0
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_ozone.scm.ratis.enable=true
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3
_=/usr/bin/env</msg>
<status status="PASS" starttime="20230711 08:55:33.301" endtime="20230711 08:55:33.302"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:55:33.303" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:55:33.303" endtime="20230711 08:55:33.303"/>
</kw>
<status status="PASS" starttime="20230711 08:55:33.289" endtime="20230711 08:55:33.304"/>
</kw>
<msg timestamp="20230711 08:55:33.304" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:55:33.288" endtime="20230711 08:55:33.304"/>
</kw>
<msg timestamp="20230711 08:55:33.304" level="INFO">${result} = OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=33b4b2e7551c
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/ha...</msg>
<status status="PASS" starttime="20230711 08:55:33.287" endtime="20230711 08:55:33.304"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:55:33.305" level="INFO">OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=33b4b2e7551c
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/hadoop
LD_LIBRARY_PATH=/usr/local/lib
OZONE-SITE.XML_ozone.replication=3
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
ENSURE_SCM_INITIALIZED=/data/metadata/scm/current/VERSION
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OM_SERVICE_ID=omservice
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin
PWD=/opt/hadoop
OZONE-SITE.XML_ozone.scm.container.size=1GB
JAVA_HOME=/usr/lib/jvm/jre/
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE_UPGRADE_FROM=1.3.0
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
SHLVL=1
HOME=/opt/hadoop
OZONE_CONF_DIR=/etc/hadoop
OZONE-SITE.XML_ozone.om.ratis.enable=true
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
OZONE_UPGRADE_TO=1.4.0
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_ozone.scm.ratis.enable=true
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3
_=/usr/bin/env</msg>
<status status="PASS" starttime="20230711 08:55:33.305" endtime="20230711 08:55:33.305"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230711 08:55:33.305" endtime="20230711 08:55:33.306"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:55:33.311" level="INFO">Running command 'ozone admin om finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:55:38.495" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:55:38.495" level="INFO">${output} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230711 08:55:33.308" endtime="20230711 08:55:38.495"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:55:38.497" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230711 08:55:38.495" endtime="20230711 08:55:38.497"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:55:38.497" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:55:38.497" endtime="20230711 08:55:38.498"/>
</kw>
<status status="PASS" starttime="20230711 08:55:33.307" endtime="20230711 08:55:38.498"/>
</kw>
<msg timestamp="20230711 08:55:38.498" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:55:33.307" endtime="20230711 08:55:38.498"/>
</kw>
<msg timestamp="20230711 08:55:38.498" level="INFO">${result} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230711 08:55:33.306" endtime="20230711 08:55:38.499"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:55:38.499" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230711 08:55:38.499" endtime="20230711 08:55:38.499"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20230711 08:55:38.499" endtime="20230711 08:55:38.500"/>
</kw>
<tag>finalized</tag>
<tag>om</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230711 08:55:33.285" endtime="20230711 08:55:38.500"/>
</test>
<test id="s1-s12-t2" name="Check SCM Finalized" line="32">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230711 08:55:38.503" endtime="20230711 08:55:38.503"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>HDDS finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230711 08:55:38.504" endtime="20230711 08:55:38.504"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:55:38.509" level="INFO">Running command 'ozone admin scm finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:55:44.213" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:55:44.213" level="INFO">${output} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230711 08:55:38.506" endtime="20230711 08:55:44.213"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:55:44.215" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230711 08:55:44.214" endtime="20230711 08:55:44.215"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:55:44.215" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:55:44.215" endtime="20230711 08:55:44.215"/>
</kw>
<status status="PASS" starttime="20230711 08:55:38.505" endtime="20230711 08:55:44.216"/>
</kw>
<msg timestamp="20230711 08:55:44.216" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:55:38.505" endtime="20230711 08:55:44.216"/>
</kw>
<msg timestamp="20230711 08:55:44.216" level="INFO">${result} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230711 08:55:38.504" endtime="20230711 08:55:44.216"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:55:44.217" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230711 08:55:44.216" endtime="20230711 08:55:44.217"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20230711 08:55:44.217" endtime="20230711 08:55:44.217"/>
</kw>
<tag>finalized</tag>
<tag>scm</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230711 08:55:38.502" endtime="20230711 08:55:44.218"/>
</test>
<doc>Finalize Upgrade of the Ozone cluster</doc>
<status status="PASS" starttime="20230711 08:55:33.198" endtime="20230711 08:55:44.219"/>
</suite>
<suite id="s1-s13" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s13-t1" name="Read data from previously created key" line="28">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230711 08:55:47.860" level="INFO">${random} = 48639</msg>
<status status="PASS" starttime="20230711 08:55:47.859" endtime="20230711 08:55:47.860"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:55:47.866" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-48639 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:55:57.063" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:55:57.063" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:55:47.862" endtime="20230711 08:55:57.063"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:55:57.064" level="INFO"/>
<status status="PASS" starttime="20230711 08:55:57.064" endtime="20230711 08:55:57.065"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:55:57.065" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:55:57.065" endtime="20230711 08:55:57.065"/>
</kw>
<status status="PASS" starttime="20230711 08:55:47.861" endtime="20230711 08:55:57.066"/>
</kw>
<msg timestamp="20230711 08:55:57.066" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:55:47.861" endtime="20230711 08:55:57.066"/>
</kw>
<msg timestamp="20230711 08:55:57.066" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:55:47.860" endtime="20230711 08:55:57.066"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:55:57.066" endtime="20230711 08:55:57.067"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:55:57.070" level="INFO">Running command 'cat /tmp/key-48639 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:55:57.074" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:55:57.074" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230711 08:55:57.067" endtime="20230711 08:55:57.074"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:55:57.075" level="INFO">old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230711 08:55:57.075" endtime="20230711 08:55:57.075"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:55:57.076" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:55:57.076" endtime="20230711 08:55:57.076"/>
</kw>
<msg timestamp="20230711 08:55:57.076" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230711 08:55:57.067" endtime="20230711 08:55:57.076"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:55:57.077" endtime="20230711 08:55:57.077"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:55:57.081" level="INFO">Running command 'rm /tmp/key-48639 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:55:57.085" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:55:57.085" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:55:57.078" endtime="20230711 08:55:57.085"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:55:57.086" level="INFO"/>
<status status="PASS" starttime="20230711 08:55:57.086" endtime="20230711 08:55:57.086"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:55:57.087" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:55:57.087" endtime="20230711 08:55:57.087"/>
</kw>
<status status="PASS" starttime="20230711 08:55:57.077" endtime="20230711 08:55:57.087"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230711 08:55:47.858" endtime="20230711 08:55:57.088"/>
</test>
<test id="s1-s13-t2" name="Setup credentials for S3" line="36">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:55:57.114" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:55:58.402" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:55:58.402" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:55:57.106" endtime="20230711 08:55:58.402"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:55:58.403" level="INFO"/>
<status status="PASS" starttime="20230711 08:55:58.403" endtime="20230711 08:55:58.404"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:55:58.404" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:55:58.404" endtime="20230711 08:55:58.404"/>
</kw>
<status status="PASS" starttime="20230711 08:55:57.106" endtime="20230711 08:55:58.405"/>
</kw>
<msg timestamp="20230711 08:55:58.405" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:55:57.104" endtime="20230711 08:55:58.405"/>
</kw>
<status status="PASS" starttime="20230711 08:55:57.104" endtime="20230711 08:55:58.405"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:55:58.410" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:55:59.106" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:55:59.106" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:55:58.407" endtime="20230711 08:55:59.106"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:55:59.107" level="INFO"/>
<status status="PASS" starttime="20230711 08:55:59.107" endtime="20230711 08:55:59.108"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:55:59.108" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:55:59.108" endtime="20230711 08:55:59.108"/>
</kw>
<status status="PASS" starttime="20230711 08:55:58.407" endtime="20230711 08:55:59.109"/>
</kw>
<msg timestamp="20230711 08:55:59.109" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:55:58.406" endtime="20230711 08:55:59.109"/>
</kw>
<status status="PASS" starttime="20230711 08:55:58.405" endtime="20230711 08:55:59.109"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:55:59.114" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:55:59.837" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:55:59.837" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:55:59.111" endtime="20230711 08:55:59.837"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:55:59.839" level="INFO"/>
<status status="PASS" starttime="20230711 08:55:59.838" endtime="20230711 08:55:59.839"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:55:59.839" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:55:59.839" endtime="20230711 08:55:59.840"/>
</kw>
<status status="PASS" starttime="20230711 08:55:59.110" endtime="20230711 08:55:59.840"/>
</kw>
<msg timestamp="20230711 08:55:59.840" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:55:59.110" endtime="20230711 08:55:59.840"/>
</kw>
<status status="PASS" starttime="20230711 08:55:59.109" endtime="20230711 08:55:59.840"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:55:59.845" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:56:00.501" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:56:00.501" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:55:59.842" endtime="20230711 08:56:00.501"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:56:00.502" level="INFO"/>
<status status="PASS" starttime="20230711 08:56:00.501" endtime="20230711 08:56:00.502"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:56:00.503" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:56:00.503" endtime="20230711 08:56:00.503"/>
</kw>
<status status="PASS" starttime="20230711 08:55:59.841" endtime="20230711 08:56:00.504"/>
</kw>
<msg timestamp="20230711 08:56:00.504" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:55:59.841" endtime="20230711 08:56:00.504"/>
</kw>
<status status="PASS" starttime="20230711 08:55:59.841" endtime="20230711 08:56:00.504"/>
</kw>
<status status="PASS" starttime="20230711 08:55:57.102" endtime="20230711 08:56:00.504"/>
</kw>
<status status="PASS" starttime="20230711 08:55:57.102" endtime="20230711 08:56:00.504"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230711 08:55:57.096" endtime="20230711 08:56:00.505"/>
</test>
<test id="s1-s13-t3" name="Read key created with Ozone Shell using S3 API" line="40">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:56:00.511" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:56:06.744" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:56:06.744" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 11 Jul 2023 08:50:32 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230711 08:56:00.508" endtime="20230711 08:56:06.744"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:56:06.745" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 11 Jul 2023 08:50:32 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 11 Jul 2023 08:56:01 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230711 08:56:06.744" endtime="20230711 08:56:06.745"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:56:06.746" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:56:06.746" endtime="20230711 08:56:06.746"/>
</kw>
<msg timestamp="20230711 08:56:06.747" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 11 Jul 2023 08:50:32 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230711 08:56:00.507" endtime="20230711 08:56:06.747"/>
</kw>
<msg timestamp="20230711 08:56:06.747" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 11 Jul 2023 08:50:32 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230711 08:56:00.507" endtime="20230711 08:56:06.747"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:56:06.747" endtime="20230711 08:56:06.748"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:56:06.752" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:56:06.755" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:56:06.755" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230711 08:56:06.748" endtime="20230711 08:56:06.755"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:56:06.757" level="INFO">old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230711 08:56:06.756" endtime="20230711 08:56:06.757"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:56:06.758" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:56:06.757" endtime="20230711 08:56:06.758"/>
</kw>
<msg timestamp="20230711 08:56:06.758" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230711 08:56:06.748" endtime="20230711 08:56:06.758"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:56:06.759" endtime="20230711 08:56:06.759"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:56:06.762" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:56:06.766" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:56:06.766" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:56:06.760" endtime="20230711 08:56:06.766"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:56:06.768" level="INFO"/>
<status status="PASS" starttime="20230711 08:56:06.767" endtime="20230711 08:56:06.768"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:56:06.768" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:56:06.768" endtime="20230711 08:56:06.769"/>
</kw>
<status status="PASS" starttime="20230711 08:56:06.759" endtime="20230711 08:56:06.769"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230711 08:56:00.506" endtime="20230711 08:56:06.769"/>
</test>
<test id="s1-s13-t4" name="Read key created with S3 API using S3 API" line="47">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:56:06.777" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:56:07.703" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:56:07.703" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 11 Jul 2023 08:50:36 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230711 08:56:06.774" endtime="20230711 08:56:07.703"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:56:07.705" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 11 Jul 2023 08:50:36 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 11 Jul 2023 08:56:07 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230711 08:56:07.704" endtime="20230711 08:56:07.706"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:56:07.706" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:56:07.706" endtime="20230711 08:56:07.707"/>
</kw>
<msg timestamp="20230711 08:56:07.707" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 11 Jul 2023 08:50:36 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230711 08:56:06.773" endtime="20230711 08:56:07.707"/>
</kw>
<msg timestamp="20230711 08:56:07.707" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 11 Jul 2023 08:50:36 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230711 08:56:06.773" endtime="20230711 08:56:07.707"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:56:07.708" endtime="20230711 08:56:07.708"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:56:07.712" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:56:07.716" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:56:07.716" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20230711 08:56:07.709" endtime="20230711 08:56:07.716"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:56:07.717" level="INFO">old1: key created using S3 API</msg>
<status status="PASS" starttime="20230711 08:56:07.716" endtime="20230711 08:56:07.717"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:56:07.718" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:56:07.718" endtime="20230711 08:56:07.718"/>
</kw>
<msg timestamp="20230711 08:56:07.719" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20230711 08:56:07.708" endtime="20230711 08:56:07.719"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:56:07.719" endtime="20230711 08:56:07.719"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:56:07.723" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:56:07.727" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:56:07.727" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:56:07.720" endtime="20230711 08:56:07.727"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:56:07.729" level="INFO"/>
<status status="PASS" starttime="20230711 08:56:07.728" endtime="20230711 08:56:07.729"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:56:07.730" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:56:07.729" endtime="20230711 08:56:07.730"/>
</kw>
<status status="PASS" starttime="20230711 08:56:07.720" endtime="20230711 08:56:07.730"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230711 08:56:06.771" endtime="20230711 08:56:07.730"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230711 08:55:47.759" endtime="20230711 08:56:07.733"/>
</suite>
<suite id="s1-s14" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s14-t1" name="Read data from previously created key" line="28">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230711 08:56:11.659" level="INFO">${random} = 68976</msg>
<status status="PASS" starttime="20230711 08:56:11.658" endtime="20230711 08:56:11.659"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:56:11.666" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-68976 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:56:19.895" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:56:19.895" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:56:11.661" endtime="20230711 08:56:19.895"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:56:19.896" level="INFO"/>
<status status="PASS" starttime="20230711 08:56:19.895" endtime="20230711 08:56:19.896"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:56:19.897" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:56:19.896" endtime="20230711 08:56:19.897"/>
</kw>
<status status="PASS" starttime="20230711 08:56:11.660" endtime="20230711 08:56:19.897"/>
</kw>
<msg timestamp="20230711 08:56:19.897" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:56:11.660" endtime="20230711 08:56:19.898"/>
</kw>
<msg timestamp="20230711 08:56:19.898" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:56:11.659" endtime="20230711 08:56:19.898"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:56:19.898" endtime="20230711 08:56:19.898"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:56:19.903" level="INFO">Running command 'cat /tmp/key-68976 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:56:19.908" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:56:19.908" level="INFO">${output} = new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230711 08:56:19.899" endtime="20230711 08:56:19.908"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:56:19.909" level="INFO">new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230711 08:56:19.908" endtime="20230711 08:56:19.909"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:56:19.910" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:56:19.910" endtime="20230711 08:56:19.910"/>
</kw>
<msg timestamp="20230711 08:56:19.911" level="INFO">${output} = new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230711 08:56:19.899" endtime="20230711 08:56:19.911"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:56:19.911" endtime="20230711 08:56:19.912"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:56:19.916" level="INFO">Running command 'rm /tmp/key-68976 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:56:19.926" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:56:19.926" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:56:19.913" endtime="20230711 08:56:19.927"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:56:19.929" level="INFO"/>
<status status="PASS" starttime="20230711 08:56:19.927" endtime="20230711 08:56:19.929"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:56:19.930" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:56:19.929" endtime="20230711 08:56:19.930"/>
</kw>
<status status="PASS" starttime="20230711 08:56:19.912" endtime="20230711 08:56:19.930"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230711 08:56:11.657" endtime="20230711 08:56:19.931"/>
</test>
<test id="s1-s14-t2" name="Setup credentials for S3" line="36">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:56:19.958" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:56:20.788" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:56:20.788" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:56:19.936" endtime="20230711 08:56:20.788"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:56:20.790" level="INFO"/>
<status status="PASS" starttime="20230711 08:56:20.789" endtime="20230711 08:56:20.790"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:56:20.791" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:56:20.790" endtime="20230711 08:56:20.791"/>
</kw>
<status status="PASS" starttime="20230711 08:56:19.935" endtime="20230711 08:56:20.792"/>
</kw>
<msg timestamp="20230711 08:56:20.792" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:56:19.935" endtime="20230711 08:56:20.792"/>
</kw>
<status status="PASS" starttime="20230711 08:56:19.934" endtime="20230711 08:56:20.792"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:56:20.798" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:56:21.428" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:56:21.428" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:56:20.794" endtime="20230711 08:56:21.428"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:56:21.429" level="INFO"/>
<status status="PASS" starttime="20230711 08:56:21.428" endtime="20230711 08:56:21.429"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:56:21.430" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:56:21.429" endtime="20230711 08:56:21.430"/>
</kw>
<status status="PASS" starttime="20230711 08:56:20.794" endtime="20230711 08:56:21.430"/>
</kw>
<msg timestamp="20230711 08:56:21.430" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:56:20.793" endtime="20230711 08:56:21.431"/>
</kw>
<status status="PASS" starttime="20230711 08:56:20.792" endtime="20230711 08:56:21.431"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:56:21.435" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:56:22.215" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:56:22.215" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:56:21.432" endtime="20230711 08:56:22.215"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:56:22.216" level="INFO"/>
<status status="PASS" starttime="20230711 08:56:22.216" endtime="20230711 08:56:22.217"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:56:22.218" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:56:22.217" endtime="20230711 08:56:22.218"/>
</kw>
<status status="PASS" starttime="20230711 08:56:21.432" endtime="20230711 08:56:22.218"/>
</kw>
<msg timestamp="20230711 08:56:22.218" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:56:21.432" endtime="20230711 08:56:22.218"/>
</kw>
<status status="PASS" starttime="20230711 08:56:21.431" endtime="20230711 08:56:22.219"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:56:22.224" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:56:23.063" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:56:23.063" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:56:22.221" endtime="20230711 08:56:23.063"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:56:23.065" level="INFO"/>
<status status="PASS" starttime="20230711 08:56:23.064" endtime="20230711 08:56:23.065"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:56:23.066" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:56:23.065" endtime="20230711 08:56:23.066"/>
</kw>
<status status="PASS" starttime="20230711 08:56:22.220" endtime="20230711 08:56:23.066"/>
</kw>
<msg timestamp="20230711 08:56:23.067" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:56:22.220" endtime="20230711 08:56:23.067"/>
</kw>
<status status="PASS" starttime="20230711 08:56:22.219" endtime="20230711 08:56:23.067"/>
</kw>
<status status="PASS" starttime="20230711 08:56:19.934" endtime="20230711 08:56:23.067"/>
</kw>
<status status="PASS" starttime="20230711 08:56:19.933" endtime="20230711 08:56:23.067"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230711 08:56:19.932" endtime="20230711 08:56:23.068"/>
</test>
<test id="s1-s14-t3" name="Read key created with Ozone Shell using S3 API" line="40">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:56:23.075" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket new1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:56:24.019" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:56:24.019" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 11 Jul 2023 08:45:39 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230711 08:56:23.071" endtime="20230711 08:56:24.019"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:56:24.021" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 11 Jul 2023 08:45:39 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 11 Jul 2023 08:56:23 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230711 08:56:24.019" endtime="20230711 08:56:24.021"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:56:24.022" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:56:24.021" endtime="20230711 08:56:24.022"/>
</kw>
<msg timestamp="20230711 08:56:24.022" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 11 Jul 2023 08:45:39 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230711 08:56:23.071" endtime="20230711 08:56:24.022"/>
</kw>
<msg timestamp="20230711 08:56:24.022" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 11 Jul 2023 08:45:39 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230711 08:56:23.070" endtime="20230711 08:56:24.022"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:56:24.023" endtime="20230711 08:56:24.023"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:56:24.027" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:56:24.030" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:56:24.030" level="INFO">${output} = new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230711 08:56:24.024" endtime="20230711 08:56:24.030"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:56:24.031" level="INFO">new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230711 08:56:24.031" endtime="20230711 08:56:24.032"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:56:24.032" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:56:24.032" endtime="20230711 08:56:24.032"/>
</kw>
<msg timestamp="20230711 08:56:24.033" level="INFO">${output} = new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230711 08:56:24.023" endtime="20230711 08:56:24.033"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:56:24.033" endtime="20230711 08:56:24.034"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:56:24.037" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:56:24.045" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:56:24.045" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:56:24.034" endtime="20230711 08:56:24.046"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:56:24.048" level="INFO"/>
<status status="PASS" starttime="20230711 08:56:24.046" endtime="20230711 08:56:24.048"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:56:24.050" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:56:24.049" endtime="20230711 08:56:24.050"/>
</kw>
<status status="PASS" starttime="20230711 08:56:24.034" endtime="20230711 08:56:24.050"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230711 08:56:23.069" endtime="20230711 08:56:24.052"/>
</test>
<test id="s1-s14-t4" name="Read key created with S3 API using S3 API" line="47">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:56:24.060" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket new1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:56:25.007" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:56:25.007" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 11 Jul 2023 08:45:44 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230711 08:56:24.057" endtime="20230711 08:56:25.007"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:56:25.009" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 11 Jul 2023 08:45:44 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 11 Jul 2023 08:56:24 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230711 08:56:25.008" endtime="20230711 08:56:25.009"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:56:25.010" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:56:25.009" endtime="20230711 08:56:25.010"/>
</kw>
<msg timestamp="20230711 08:56:25.011" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 11 Jul 2023 08:45:44 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230711 08:56:24.055" endtime="20230711 08:56:25.011"/>
</kw>
<msg timestamp="20230711 08:56:25.011" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 11 Jul 2023 08:45:44 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230711 08:56:24.054" endtime="20230711 08:56:25.011"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:56:25.011" endtime="20230711 08:56:25.012"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:56:25.018" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:56:25.022" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:56:25.022" level="INFO">${output} = new1: key created using S3 API</msg>
<status status="PASS" starttime="20230711 08:56:25.013" endtime="20230711 08:56:25.022"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:56:25.024" level="INFO">new1: key created using S3 API</msg>
<status status="PASS" starttime="20230711 08:56:25.023" endtime="20230711 08:56:25.024"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:56:25.025" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:56:25.024" endtime="20230711 08:56:25.025"/>
</kw>
<msg timestamp="20230711 08:56:25.026" level="INFO">${output} = new1: key created using S3 API</msg>
<status status="PASS" starttime="20230711 08:56:25.012" endtime="20230711 08:56:25.026"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:56:25.026" endtime="20230711 08:56:25.027"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:56:25.031" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:56:25.035" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:56:25.035" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:56:25.028" endtime="20230711 08:56:25.035"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:56:25.037" level="INFO"/>
<status status="PASS" starttime="20230711 08:56:25.036" endtime="20230711 08:56:25.037"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:56:25.037" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:56:25.037" endtime="20230711 08:56:25.038"/>
</kw>
<status status="PASS" starttime="20230711 08:56:25.027" endtime="20230711 08:56:25.038"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230711 08:56:24.053" endtime="20230711 08:56:25.038"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230711 08:56:11.552" endtime="20230711 08:56:25.047"/>
</suite>
<suite id="s1-s15" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s15-t1" name="Read data from previously created key" line="28">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230711 08:56:28.647" level="INFO">${random} = 44080</msg>
<status status="PASS" starttime="20230711 08:56:28.646" endtime="20230711 08:56:28.647"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:56:28.653" level="INFO">Running command 'ozone sh key get /old2-volume/old2-bucket/old2-key /tmp/key-44080 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:56:36.397" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:56:36.397" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:56:28.649" endtime="20230711 08:56:36.397"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:56:36.400" level="INFO"/>
<status status="PASS" starttime="20230711 08:56:36.399" endtime="20230711 08:56:36.400"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:56:36.402" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:56:36.401" endtime="20230711 08:56:36.402"/>
</kw>
<status status="PASS" starttime="20230711 08:56:28.648" endtime="20230711 08:56:36.403"/>
</kw>
<msg timestamp="20230711 08:56:36.403" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:56:28.648" endtime="20230711 08:56:36.403"/>
</kw>
<msg timestamp="20230711 08:56:36.403" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:56:28.647" endtime="20230711 08:56:36.403"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:56:36.404" endtime="20230711 08:56:36.404"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:56:36.409" level="INFO">Running command 'cat /tmp/key-44080 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:56:36.412" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:56:36.412" level="INFO">${output} = old2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230711 08:56:36.406" endtime="20230711 08:56:36.412"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:56:36.414" level="INFO">old2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230711 08:56:36.413" endtime="20230711 08:56:36.415"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:56:36.416" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:56:36.415" endtime="20230711 08:56:36.416"/>
</kw>
<msg timestamp="20230711 08:56:36.416" level="INFO">${output} = old2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230711 08:56:36.405" endtime="20230711 08:56:36.416"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:56:36.417" endtime="20230711 08:56:36.417"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:56:36.422" level="INFO">Running command 'rm /tmp/key-44080 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:56:36.425" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:56:36.425" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:56:36.419" endtime="20230711 08:56:36.425"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:56:36.427" level="INFO"/>
<status status="PASS" starttime="20230711 08:56:36.426" endtime="20230711 08:56:36.427"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:56:36.428" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:56:36.427" endtime="20230711 08:56:36.428"/>
</kw>
<status status="PASS" starttime="20230711 08:56:36.418" endtime="20230711 08:56:36.428"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230711 08:56:28.646" endtime="20230711 08:56:36.428"/>
</test>
<test id="s1-s15-t2" name="Setup credentials for S3" line="36">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:56:36.436" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:56:37.171" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:56:37.171" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:56:36.433" endtime="20230711 08:56:37.171"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:56:37.173" level="INFO"/>
<status status="PASS" starttime="20230711 08:56:37.172" endtime="20230711 08:56:37.173"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:56:37.174" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:56:37.174" endtime="20230711 08:56:37.174"/>
</kw>
<status status="PASS" starttime="20230711 08:56:36.432" endtime="20230711 08:56:37.175"/>
</kw>
<msg timestamp="20230711 08:56:37.175" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:56:36.432" endtime="20230711 08:56:37.175"/>
</kw>
<status status="PASS" starttime="20230711 08:56:36.431" endtime="20230711 08:56:37.176"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:56:37.181" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:56:37.962" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:56:37.962" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:56:37.178" endtime="20230711 08:56:37.962"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:56:37.964" level="INFO"/>
<status status="PASS" starttime="20230711 08:56:37.963" endtime="20230711 08:56:37.964"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:56:37.971" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:56:37.964" endtime="20230711 08:56:37.972"/>
</kw>
<status status="PASS" starttime="20230711 08:56:37.177" endtime="20230711 08:56:37.972"/>
</kw>
<msg timestamp="20230711 08:56:37.973" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:56:37.177" endtime="20230711 08:56:37.973"/>
</kw>
<status status="PASS" starttime="20230711 08:56:37.176" endtime="20230711 08:56:37.973"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:56:37.987" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:56:38.694" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:56:38.694" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:56:37.980" endtime="20230711 08:56:38.694"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:56:38.695" level="INFO"/>
<status status="PASS" starttime="20230711 08:56:38.694" endtime="20230711 08:56:38.695"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:56:38.696" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:56:38.696" endtime="20230711 08:56:38.696"/>
</kw>
<status status="PASS" starttime="20230711 08:56:37.977" endtime="20230711 08:56:38.696"/>
</kw>
<msg timestamp="20230711 08:56:38.696" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:56:37.977" endtime="20230711 08:56:38.697"/>
</kw>
<status status="PASS" starttime="20230711 08:56:37.975" endtime="20230711 08:56:38.697"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:56:38.702" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:56:39.449" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:56:39.449" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:56:38.699" endtime="20230711 08:56:39.449"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:56:39.451" level="INFO"/>
<status status="PASS" starttime="20230711 08:56:39.450" endtime="20230711 08:56:39.451"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:56:39.452" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:56:39.451" endtime="20230711 08:56:39.452"/>
</kw>
<status status="PASS" starttime="20230711 08:56:38.698" endtime="20230711 08:56:39.452"/>
</kw>
<msg timestamp="20230711 08:56:39.452" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:56:38.698" endtime="20230711 08:56:39.452"/>
</kw>
<status status="PASS" starttime="20230711 08:56:38.697" endtime="20230711 08:56:39.453"/>
</kw>
<status status="PASS" starttime="20230711 08:56:36.431" endtime="20230711 08:56:39.453"/>
</kw>
<status status="PASS" starttime="20230711 08:56:36.431" endtime="20230711 08:56:39.453"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230711 08:56:36.430" endtime="20230711 08:56:39.453"/>
</test>
<test id="s1-s15-t3" name="Read key created with Ozone Shell using S3 API" line="40">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:56:39.459" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old2-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:56:40.466" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:56:40.466" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 11 Jul 2023 08:50:04 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230711 08:56:39.456" endtime="20230711 08:56:40.466"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:56:40.468" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 11 Jul 2023 08:50:04 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 11 Jul 2023 08:56:40 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230711 08:56:40.467" endtime="20230711 08:56:40.468"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:56:40.469" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:56:40.469" endtime="20230711 08:56:40.469"/>
</kw>
<msg timestamp="20230711 08:56:40.470" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 11 Jul 2023 08:50:04 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230711 08:56:39.456" endtime="20230711 08:56:40.470"/>
</kw>
<msg timestamp="20230711 08:56:40.470" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 11 Jul 2023 08:50:04 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230711 08:56:39.455" endtime="20230711 08:56:40.470"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:56:40.470" endtime="20230711 08:56:40.471"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:56:40.475" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:56:40.478" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:56:40.478" level="INFO">${output} = old2: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230711 08:56:40.472" endtime="20230711 08:56:40.478"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:56:40.479" level="INFO">old2: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230711 08:56:40.478" endtime="20230711 08:56:40.479"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:56:40.480" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:56:40.479" endtime="20230711 08:56:40.480"/>
</kw>
<msg timestamp="20230711 08:56:40.480" level="INFO">${output} = old2: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230711 08:56:40.471" endtime="20230711 08:56:40.480"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:56:40.481" endtime="20230711 08:56:40.481"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:56:40.484" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:56:40.488" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:56:40.488" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:56:40.482" endtime="20230711 08:56:40.488"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:56:40.489" level="INFO"/>
<status status="PASS" starttime="20230711 08:56:40.488" endtime="20230711 08:56:40.489"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:56:40.490" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:56:40.489" endtime="20230711 08:56:40.490"/>
</kw>
<status status="PASS" starttime="20230711 08:56:40.481" endtime="20230711 08:56:40.490"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230711 08:56:39.454" endtime="20230711 08:56:40.491"/>
</test>
<test id="s1-s15-t4" name="Read key created with S3 API using S3 API" line="47">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:56:40.496" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old2-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:56:41.417" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:56:41.417" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 11 Jul 2023 08:50:08 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230711 08:56:40.493" endtime="20230711 08:56:41.417"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:56:41.418" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 11 Jul 2023 08:50:08 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 11 Jul 2023 08:56:41 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230711 08:56:41.417" endtime="20230711 08:56:41.418"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:56:41.419" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:56:41.418" endtime="20230711 08:56:41.419"/>
</kw>
<msg timestamp="20230711 08:56:41.419" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 11 Jul 2023 08:50:08 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230711 08:56:40.493" endtime="20230711 08:56:41.419"/>
</kw>
<msg timestamp="20230711 08:56:41.419" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 11 Jul 2023 08:50:08 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230711 08:56:40.492" endtime="20230711 08:56:41.419"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:56:41.420" endtime="20230711 08:56:41.420"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:56:41.424" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:56:41.427" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:56:41.427" level="INFO">${output} = old2: key created using S3 API</msg>
<status status="PASS" starttime="20230711 08:56:41.421" endtime="20230711 08:56:41.427"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:56:41.428" level="INFO">old2: key created using S3 API</msg>
<status status="PASS" starttime="20230711 08:56:41.428" endtime="20230711 08:56:41.428"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:56:41.429" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:56:41.428" endtime="20230711 08:56:41.429"/>
</kw>
<msg timestamp="20230711 08:56:41.429" level="INFO">${output} = old2: key created using S3 API</msg>
<status status="PASS" starttime="20230711 08:56:41.420" endtime="20230711 08:56:41.430"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:56:41.430" endtime="20230711 08:56:41.430"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:56:41.434" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:56:41.437" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:56:41.437" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:56:41.431" endtime="20230711 08:56:41.437"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:56:41.438" level="INFO"/>
<status status="PASS" starttime="20230711 08:56:41.437" endtime="20230711 08:56:41.438"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:56:41.439" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:56:41.438" endtime="20230711 08:56:41.439"/>
</kw>
<status status="PASS" starttime="20230711 08:56:41.431" endtime="20230711 08:56:41.439"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230711 08:56:40.492" endtime="20230711 08:56:41.440"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230711 08:56:28.565" endtime="20230711 08:56:41.441"/>
</suite>
<suite id="s1-s16" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s16-t1" name="Create a volume and bucket" line="28">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:56:44.806" level="INFO">Running command 'ozone sh volume create new2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:56:49.261" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:56:49.261" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:56:44.802" endtime="20230711 08:56:49.261"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:56:49.263" level="INFO"/>
<status status="PASS" starttime="20230711 08:56:49.262" endtime="20230711 08:56:49.263"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:56:49.264" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:56:49.264" endtime="20230711 08:56:49.264"/>
</kw>
<status status="PASS" starttime="20230711 08:56:44.801" endtime="20230711 08:56:49.265"/>
</kw>
<msg timestamp="20230711 08:56:49.265" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:56:44.801" endtime="20230711 08:56:49.265"/>
</kw>
<msg timestamp="20230711 08:56:49.265" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:56:44.800" endtime="20230711 08:56:49.265"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:56:49.266" endtime="20230711 08:56:49.266"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:56:49.272" level="INFO">Running command 'ozone sh bucket create /new2-volume/new2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:56:53.510" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:56:53.510" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:56:49.268" endtime="20230711 08:56:53.510"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:56:53.512" level="INFO"/>
<status status="PASS" starttime="20230711 08:56:53.510" endtime="20230711 08:56:53.512"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:56:53.513" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:56:53.512" endtime="20230711 08:56:53.513"/>
</kw>
<status status="PASS" starttime="20230711 08:56:49.268" endtime="20230711 08:56:53.514"/>
</kw>
<msg timestamp="20230711 08:56:53.514" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:56:49.267" endtime="20230711 08:56:53.514"/>
</kw>
<msg timestamp="20230711 08:56:53.515" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:56:49.267" endtime="20230711 08:56:53.515"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:56:53.515" endtime="20230711 08:56:53.515"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230711 08:56:44.799" endtime="20230711 08:56:53.516"/>
</test>
<test id="s1-s16-t2" name="Create key" line="35">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:56:53.523" level="INFO">Running command 'echo "new2: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230711 08:56:53.525" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:56:53.525" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:56:53.519" endtime="20230711 08:56:53.525"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:56:53.526" level="INFO"/>
<status status="PASS" starttime="20230711 08:56:53.526" endtime="20230711 08:56:53.527"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:56:53.527" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:56:53.527" endtime="20230711 08:56:53.527"/>
</kw>
<status status="PASS" starttime="20230711 08:56:53.519" endtime="20230711 08:56:53.528"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:56:53.533" level="INFO">Running command 'ozone sh key put /new2-volume/new2-bucket/new2-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:57:02.265" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:57:02.265" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:56:53.530" endtime="20230711 08:57:02.265"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:57:02.266" level="INFO"/>
<status status="PASS" starttime="20230711 08:57:02.265" endtime="20230711 08:57:02.266"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:57:02.267" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:57:02.266" endtime="20230711 08:57:02.267"/>
</kw>
<status status="PASS" starttime="20230711 08:56:53.529" endtime="20230711 08:57:02.267"/>
</kw>
<msg timestamp="20230711 08:57:02.267" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:56:53.529" endtime="20230711 08:57:02.268"/>
</kw>
<msg timestamp="20230711 08:57:02.268" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:56:53.528" endtime="20230711 08:57:02.268"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:57:02.268" endtime="20230711 08:57:02.268"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:57:02.272" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:57:02.275" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:57:02.275" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:57:02.269" endtime="20230711 08:57:02.275"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:57:02.276" level="INFO"/>
<status status="PASS" starttime="20230711 08:57:02.276" endtime="20230711 08:57:02.277"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:57:02.278" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:57:02.277" endtime="20230711 08:57:02.278"/>
</kw>
<status status="PASS" starttime="20230711 08:57:02.269" endtime="20230711 08:57:02.278"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230711 08:56:53.517" endtime="20230711 08:57:02.278"/>
</test>
<test id="s1-s16-t3" name="Create a bucket in s3v volume" line="41">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /s3v/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:57:02.284" level="INFO">Running command 'ozone sh bucket create /s3v/new2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:57:06.867" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:57:06.867" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:57:02.282" endtime="20230711 08:57:06.867"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:57:06.869" level="INFO"/>
<status status="PASS" starttime="20230711 08:57:06.868" endtime="20230711 08:57:06.869"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:57:06.870" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:57:06.870" endtime="20230711 08:57:06.870"/>
</kw>
<status status="PASS" starttime="20230711 08:57:02.281" endtime="20230711 08:57:06.871"/>
</kw>
<msg timestamp="20230711 08:57:06.871" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:57:02.281" endtime="20230711 08:57:06.871"/>
</kw>
<msg timestamp="20230711 08:57:06.871" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:57:02.280" endtime="20230711 08:57:06.871"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:57:06.871" endtime="20230711 08:57:06.872"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230711 08:57:02.280" endtime="20230711 08:57:06.872"/>
</test>
<test id="s1-s16-t4" name="Create key in the bucket in s3v volume" line="46">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: another key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:57:06.878" level="INFO">Running command 'echo "new2: another key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230711 08:57:06.880" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:57:06.880" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:57:06.875" endtime="20230711 08:57:06.880"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:57:06.881" level="INFO"/>
<status status="PASS" starttime="20230711 08:57:06.880" endtime="20230711 08:57:06.881"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:57:06.882" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:57:06.881" endtime="20230711 08:57:06.882"/>
</kw>
<status status="PASS" starttime="20230711 08:57:06.874" endtime="20230711 08:57:06.882"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /s3v/${PREFIX}-bucket/key1-shell /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:57:06.887" level="INFO">Running command 'ozone sh key put /s3v/new2-bucket/key1-shell /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:57:14.722" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:57:14.722" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:57:06.884" endtime="20230711 08:57:14.722"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:57:14.723" level="INFO"/>
<status status="PASS" starttime="20230711 08:57:14.723" endtime="20230711 08:57:14.724"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:57:14.724" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:57:14.724" endtime="20230711 08:57:14.724"/>
</kw>
<status status="PASS" starttime="20230711 08:57:06.883" endtime="20230711 08:57:14.725"/>
</kw>
<msg timestamp="20230711 08:57:14.725" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:57:06.883" endtime="20230711 08:57:14.725"/>
</kw>
<msg timestamp="20230711 08:57:14.725" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:57:06.882" endtime="20230711 08:57:14.725"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:57:14.726" endtime="20230711 08:57:14.726"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:57:14.730" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:57:14.733" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:57:14.733" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:57:14.727" endtime="20230711 08:57:14.733"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:57:14.734" level="INFO"/>
<status status="PASS" starttime="20230711 08:57:14.733" endtime="20230711 08:57:14.734"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:57:14.735" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:57:14.734" endtime="20230711 08:57:14.735"/>
</kw>
<status status="PASS" starttime="20230711 08:57:14.726" endtime="20230711 08:57:14.735"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230711 08:57:06.873" endtime="20230711 08:57:14.735"/>
</test>
<test id="s1-s16-t5" name="Setup credentials for S3" line="52">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:57:14.741" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:57:15.444" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:57:15.444" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:57:14.739" endtime="20230711 08:57:15.444"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:57:15.446" level="INFO"/>
<status status="PASS" starttime="20230711 08:57:15.445" endtime="20230711 08:57:15.446"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:57:15.446" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:57:15.446" endtime="20230711 08:57:15.447"/>
</kw>
<status status="PASS" starttime="20230711 08:57:14.738" endtime="20230711 08:57:15.447"/>
</kw>
<msg timestamp="20230711 08:57:15.447" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:57:14.738" endtime="20230711 08:57:15.447"/>
</kw>
<status status="PASS" starttime="20230711 08:57:14.738" endtime="20230711 08:57:15.447"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:57:15.452" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:57:16.120" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:57:16.120" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:57:15.449" endtime="20230711 08:57:16.120"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:57:16.121" level="INFO"/>
<status status="PASS" starttime="20230711 08:57:16.120" endtime="20230711 08:57:16.121"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:57:16.122" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:57:16.121" endtime="20230711 08:57:16.122"/>
</kw>
<status status="PASS" starttime="20230711 08:57:15.448" endtime="20230711 08:57:16.122"/>
</kw>
<msg timestamp="20230711 08:57:16.122" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:57:15.448" endtime="20230711 08:57:16.123"/>
</kw>
<status status="PASS" starttime="20230711 08:57:15.447" endtime="20230711 08:57:16.123"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:57:16.127" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:57:16.697" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:57:16.697" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:57:16.124" endtime="20230711 08:57:16.698"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:57:16.699" level="INFO"/>
<status status="PASS" starttime="20230711 08:57:16.698" endtime="20230711 08:57:16.699"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:57:16.700" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:57:16.699" endtime="20230711 08:57:16.700"/>
</kw>
<status status="PASS" starttime="20230711 08:57:16.124" endtime="20230711 08:57:16.700"/>
</kw>
<msg timestamp="20230711 08:57:16.700" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:57:16.123" endtime="20230711 08:57:16.701"/>
</kw>
<status status="PASS" starttime="20230711 08:57:16.123" endtime="20230711 08:57:16.701"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:57:16.705" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:57:17.347" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:57:17.347" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:57:16.702" endtime="20230711 08:57:17.347"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:57:17.348" level="INFO"/>
<status status="PASS" starttime="20230711 08:57:17.348" endtime="20230711 08:57:17.349"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:57:17.349" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:57:17.349" endtime="20230711 08:57:17.349"/>
</kw>
<status status="PASS" starttime="20230711 08:57:16.702" endtime="20230711 08:57:17.350"/>
</kw>
<msg timestamp="20230711 08:57:17.350" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:57:16.701" endtime="20230711 08:57:17.350"/>
</kw>
<status status="PASS" starttime="20230711 08:57:16.701" endtime="20230711 08:57:17.350"/>
</kw>
<status status="PASS" starttime="20230711 08:57:14.737" endtime="20230711 08:57:17.350"/>
</kw>
<status status="PASS" starttime="20230711 08:57:14.737" endtime="20230711 08:57:17.350"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230711 08:57:14.736" endtime="20230711 08:57:17.351"/>
</test>
<test id="s1-s16-t6" name="Try to create a bucket using S3 API" line="56">
<kw name="Create bucket with name" library="commonawslib">
<var>${output}</var>
<arg>${PREFIX}-bucket</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:57:17.357" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket new2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:57:18.198" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:57:18.198" level="INFO">${output} = {
    "Location": "http://s3g:9878/new2-bucket"
}</msg>
<status status="PASS" starttime="20230711 08:57:17.354" endtime="20230711 08:57:18.198"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:57:18.200" level="INFO">{
    "Location": "http://s3g:9878/new2-bucket"
}</msg>
<status status="PASS" starttime="20230711 08:57:18.199" endtime="20230711 08:57:18.200"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:57:18.200" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:57:18.200" endtime="20230711 08:57:18.201"/>
</kw>
<status status="PASS" starttime="20230711 08:57:17.354" endtime="20230711 08:57:18.201"/>
</kw>
<msg timestamp="20230711 08:57:18.201" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:57:17.354" endtime="20230711 08:57:18.201"/>
</kw>
<msg timestamp="20230711 08:57:18.201" level="INFO">${output} = {
    "Location": "http://s3g:9878/new2-bucket"
}</msg>
<status status="PASS" starttime="20230711 08:57:17.353" endtime="20230711 08:57:18.201"/>
</kw>
<msg timestamp="20230711 08:57:18.202" level="INFO">${result} = {
    "Location": "http://s3g:9878/new2-bucket"
}</msg>
<status status="PASS" starttime="20230711 08:57:17.353" endtime="20230711 08:57:18.202"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:57:18.202" endtime="20230711 08:57:18.203"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:57:18.203" endtime="20230711 08:57:18.203"/>
</kw>
<msg timestamp="20230711 08:57:18.203" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20230711 08:57:17.352" endtime="20230711 08:57:18.203"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230711 08:57:18.204" endtime="20230711 08:57:18.204"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230711 08:57:17.351" endtime="20230711 08:57:18.204"/>
</test>
<test id="s1-s16-t7" name="Create key using S3 API" line="61">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using S3 API" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:57:18.210" level="INFO">Running command 'echo "new2: key created using S3 API" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230711 08:57:18.212" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:57:18.212" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:57:18.208" endtime="20230711 08:57:18.212"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:57:18.213" level="INFO"/>
<status status="PASS" starttime="20230711 08:57:18.212" endtime="20230711 08:57:18.213"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:57:18.214" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:57:18.214" endtime="20230711 08:57:18.214"/>
</kw>
<status status="PASS" starttime="20230711 08:57:18.207" endtime="20230711 08:57:18.215"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>put-object --bucket ${PREFIX}-bucket --key key2-s3api --body /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:57:18.225" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket new2-bucket --key key2-s3api --body /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:57:19.622" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:57:19.622" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:57:18.217" endtime="20230711 08:57:19.622"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:57:19.624" level="INFO"/>
<status status="PASS" starttime="20230711 08:57:19.623" endtime="20230711 08:57:19.624"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:57:19.625" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:57:19.624" endtime="20230711 08:57:19.625"/>
</kw>
<msg timestamp="20230711 08:57:19.625" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:57:18.216" endtime="20230711 08:57:19.625"/>
</kw>
<msg timestamp="20230711 08:57:19.626" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:57:18.215" endtime="20230711 08:57:19.626"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:57:19.626" endtime="20230711 08:57:19.627"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:57:19.630" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:57:19.633" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:57:19.633" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:57:19.628" endtime="20230711 08:57:19.633"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:57:19.634" level="INFO"/>
<status status="PASS" starttime="20230711 08:57:19.634" endtime="20230711 08:57:19.635"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:57:19.635" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:57:19.635" endtime="20230711 08:57:19.635"/>
</kw>
<status status="PASS" starttime="20230711 08:57:19.627" endtime="20230711 08:57:19.636"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230711 08:57:18.206" endtime="20230711 08:57:19.636"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230711 08:56:44.708" endtime="20230711 08:57:19.638"/>
</suite>
<suite id="s1-s17" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s17-t1" name="Read data from previously created key" line="28">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230711 08:57:23.191" level="INFO">${random} = 25033</msg>
<status status="PASS" starttime="20230711 08:57:23.191" endtime="20230711 08:57:23.191"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:57:23.198" level="INFO">Running command 'ozone sh key get /new2-volume/new2-bucket/new2-key /tmp/key-25033 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:57:30.088" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:57:30.088" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:57:23.193" endtime="20230711 08:57:30.088"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:57:30.090" level="INFO"/>
<status status="PASS" starttime="20230711 08:57:30.089" endtime="20230711 08:57:30.090"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:57:30.090" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:57:30.090" endtime="20230711 08:57:30.091"/>
</kw>
<status status="PASS" starttime="20230711 08:57:23.193" endtime="20230711 08:57:30.091"/>
</kw>
<msg timestamp="20230711 08:57:30.091" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:57:23.192" endtime="20230711 08:57:30.091"/>
</kw>
<msg timestamp="20230711 08:57:30.091" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:57:23.192" endtime="20230711 08:57:30.091"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:57:30.092" endtime="20230711 08:57:30.092"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:57:30.096" level="INFO">Running command 'cat /tmp/key-25033 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:57:30.098" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:57:30.099" level="INFO">${output} = new2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230711 08:57:30.093" endtime="20230711 08:57:30.099"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:57:30.100" level="INFO">new2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230711 08:57:30.099" endtime="20230711 08:57:30.100"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:57:30.102" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:57:30.101" endtime="20230711 08:57:30.102"/>
</kw>
<msg timestamp="20230711 08:57:30.102" level="INFO">${output} = new2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230711 08:57:30.092" endtime="20230711 08:57:30.102"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:57:30.103" endtime="20230711 08:57:30.103"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:57:30.107" level="INFO">Running command 'rm /tmp/key-25033 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:57:30.110" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:57:30.111" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:57:30.104" endtime="20230711 08:57:30.111"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:57:30.112" level="INFO"/>
<status status="PASS" starttime="20230711 08:57:30.111" endtime="20230711 08:57:30.112"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:57:30.113" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:57:30.113" endtime="20230711 08:57:30.113"/>
</kw>
<status status="PASS" starttime="20230711 08:57:30.104" endtime="20230711 08:57:30.114"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230711 08:57:23.190" endtime="20230711 08:57:30.114"/>
</test>
<test id="s1-s17-t2" name="Setup credentials for S3" line="36">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:57:30.122" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:57:30.751" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:57:30.751" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:57:30.119" endtime="20230711 08:57:30.751"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:57:30.752" level="INFO"/>
<status status="PASS" starttime="20230711 08:57:30.752" endtime="20230711 08:57:30.753"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:57:30.753" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:57:30.753" endtime="20230711 08:57:30.754"/>
</kw>
<status status="PASS" starttime="20230711 08:57:30.119" endtime="20230711 08:57:30.754"/>
</kw>
<msg timestamp="20230711 08:57:30.754" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:57:30.118" endtime="20230711 08:57:30.754"/>
</kw>
<status status="PASS" starttime="20230711 08:57:30.118" endtime="20230711 08:57:30.754"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:57:30.759" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:57:31.346" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:57:31.346" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:57:30.756" endtime="20230711 08:57:31.347"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:57:31.348" level="INFO"/>
<status status="PASS" starttime="20230711 08:57:31.347" endtime="20230711 08:57:31.348"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:57:31.349" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:57:31.348" endtime="20230711 08:57:31.349"/>
</kw>
<status status="PASS" starttime="20230711 08:57:30.755" endtime="20230711 08:57:31.349"/>
</kw>
<msg timestamp="20230711 08:57:31.349" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:57:30.755" endtime="20230711 08:57:31.349"/>
</kw>
<status status="PASS" starttime="20230711 08:57:30.754" endtime="20230711 08:57:31.350"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:57:31.354" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:57:31.979" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:57:31.979" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:57:31.351" endtime="20230711 08:57:31.979"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:57:31.980" level="INFO"/>
<status status="PASS" starttime="20230711 08:57:31.979" endtime="20230711 08:57:31.980"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:57:31.981" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:57:31.980" endtime="20230711 08:57:31.981"/>
</kw>
<status status="PASS" starttime="20230711 08:57:31.351" endtime="20230711 08:57:31.981"/>
</kw>
<msg timestamp="20230711 08:57:31.981" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:57:31.350" endtime="20230711 08:57:31.981"/>
</kw>
<status status="PASS" starttime="20230711 08:57:31.350" endtime="20230711 08:57:31.981"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:57:31.986" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:57:32.612" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:57:32.612" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:57:31.983" endtime="20230711 08:57:32.612"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:57:32.614" level="INFO"/>
<status status="PASS" starttime="20230711 08:57:32.613" endtime="20230711 08:57:32.614"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:57:32.614" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:57:32.614" endtime="20230711 08:57:32.614"/>
</kw>
<status status="PASS" starttime="20230711 08:57:31.983" endtime="20230711 08:57:32.615"/>
</kw>
<msg timestamp="20230711 08:57:32.615" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:57:31.982" endtime="20230711 08:57:32.615"/>
</kw>
<status status="PASS" starttime="20230711 08:57:31.982" endtime="20230711 08:57:32.615"/>
</kw>
<status status="PASS" starttime="20230711 08:57:30.117" endtime="20230711 08:57:32.615"/>
</kw>
<status status="PASS" starttime="20230711 08:57:30.116" endtime="20230711 08:57:32.615"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230711 08:57:30.115" endtime="20230711 08:57:32.615"/>
</test>
<test id="s1-s17-t3" name="Read key created with Ozone Shell using S3 API" line="40">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:57:32.621" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket new2-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:57:33.484" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:57:33.484" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 11 Jul 2023 08:57:14 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230711 08:57:32.618" endtime="20230711 08:57:33.484"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:57:33.486" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 11 Jul 2023 08:57:14 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 11 Jul 2023 08:57:33 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230711 08:57:33.484" endtime="20230711 08:57:33.486"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:57:33.487" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:57:33.486" endtime="20230711 08:57:33.487"/>
</kw>
<msg timestamp="20230711 08:57:33.488" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 11 Jul 2023 08:57:14 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230711 08:57:32.618" endtime="20230711 08:57:33.488"/>
</kw>
<msg timestamp="20230711 08:57:33.488" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 11 Jul 2023 08:57:14 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230711 08:57:32.617" endtime="20230711 08:57:33.488"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:57:33.489" endtime="20230711 08:57:33.489"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:57:33.493" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:57:33.497" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:57:33.497" level="INFO">${output} = new2: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230711 08:57:33.490" endtime="20230711 08:57:33.497"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:57:33.498" level="INFO">new2: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230711 08:57:33.498" endtime="20230711 08:57:33.498"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:57:33.499" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:57:33.499" endtime="20230711 08:57:33.499"/>
</kw>
<msg timestamp="20230711 08:57:33.500" level="INFO">${output} = new2: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230711 08:57:33.490" endtime="20230711 08:57:33.500"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:57:33.500" endtime="20230711 08:57:33.501"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:57:33.504" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:57:33.508" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:57:33.508" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:57:33.501" endtime="20230711 08:57:33.508"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:57:33.510" level="INFO"/>
<status status="PASS" starttime="20230711 08:57:33.509" endtime="20230711 08:57:33.510"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:57:33.511" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:57:33.510" endtime="20230711 08:57:33.511"/>
</kw>
<status status="PASS" starttime="20230711 08:57:33.501" endtime="20230711 08:57:33.511"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230711 08:57:32.616" endtime="20230711 08:57:33.511"/>
</test>
<test id="s1-s17-t4" name="Read key created with S3 API using S3 API" line="47">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:57:33.518" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket new2-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:57:34.289" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:57:34.289" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 11 Jul 2023 08:57:19 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230711 08:57:33.515" endtime="20230711 08:57:34.289"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:57:34.290" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 11 Jul 2023 08:57:19 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 11 Jul 2023 08:57:34 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230711 08:57:34.289" endtime="20230711 08:57:34.291"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:57:34.292" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:57:34.291" endtime="20230711 08:57:34.292"/>
</kw>
<msg timestamp="20230711 08:57:34.292" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 11 Jul 2023 08:57:19 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230711 08:57:33.514" endtime="20230711 08:57:34.292"/>
</kw>
<msg timestamp="20230711 08:57:34.293" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 11 Jul 2023 08:57:19 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230711 08:57:33.513" endtime="20230711 08:57:34.293"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:57:34.293" endtime="20230711 08:57:34.293"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:57:34.297" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:57:34.300" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:57:34.300" level="INFO">${output} = new2: key created using S3 API</msg>
<status status="PASS" starttime="20230711 08:57:34.294" endtime="20230711 08:57:34.300"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:57:34.302" level="INFO">new2: key created using S3 API</msg>
<status status="PASS" starttime="20230711 08:57:34.301" endtime="20230711 08:57:34.302"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:57:34.303" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:57:34.302" endtime="20230711 08:57:34.303"/>
</kw>
<msg timestamp="20230711 08:57:34.303" level="INFO">${output} = new2: key created using S3 API</msg>
<status status="PASS" starttime="20230711 08:57:34.294" endtime="20230711 08:57:34.303"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:57:34.303" endtime="20230711 08:57:34.304"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:57:34.307" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:57:34.311" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:57:34.311" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:57:34.304" endtime="20230711 08:57:34.311"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:57:34.313" level="INFO"/>
<status status="PASS" starttime="20230711 08:57:34.312" endtime="20230711 08:57:34.313"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:57:34.314" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:57:34.313" endtime="20230711 08:57:34.314"/>
</kw>
<status status="PASS" starttime="20230711 08:57:34.304" endtime="20230711 08:57:34.314"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230711 08:57:33.512" endtime="20230711 08:57:34.314"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230711 08:57:23.083" endtime="20230711 08:57:34.317"/>
</suite>
<suite id="s1-s18" name="Check-Finalization" source="/opt/hadoop/smoketest/upgrade/check-finalization.robot">
<test id="s1-s18-t1" name="Check OM Finalized" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230711 08:57:37.805" endtime="20230711 08:57:37.806"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>env</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:57:37.813" level="INFO">Running command 'env 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:57:37.816" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:57:37.816" level="INFO">${output} = OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=33b4b2e7551c
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/ha...</msg>
<status status="PASS" starttime="20230711 08:57:37.808" endtime="20230711 08:57:37.816"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:57:37.818" level="INFO">OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=33b4b2e7551c
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/hadoop
LD_LIBRARY_PATH=/usr/local/lib
OZONE-SITE.XML_ozone.replication=3
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
ENSURE_SCM_INITIALIZED=/data/metadata/scm/current/VERSION
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OM_SERVICE_ID=omservice
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin
PWD=/opt/hadoop
OZONE-SITE.XML_ozone.scm.container.size=1GB
JAVA_HOME=/usr/lib/jvm/jre/
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE_UPGRADE_FROM=1.3.0
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
SHLVL=1
HOME=/opt/hadoop
OZONE_CONF_DIR=/etc/hadoop
OZONE-SITE.XML_ozone.om.ratis.enable=true
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
OZONE_UPGRADE_TO=1.4.0
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_ozone.scm.ratis.enable=true
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3
_=/usr/bin/env</msg>
<status status="PASS" starttime="20230711 08:57:37.817" endtime="20230711 08:57:37.818"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:57:37.818" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:57:37.818" endtime="20230711 08:57:37.819"/>
</kw>
<status status="PASS" starttime="20230711 08:57:37.807" endtime="20230711 08:57:37.819"/>
</kw>
<msg timestamp="20230711 08:57:37.819" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:57:37.807" endtime="20230711 08:57:37.819"/>
</kw>
<msg timestamp="20230711 08:57:37.820" level="INFO">${result} = OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=33b4b2e7551c
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/ha...</msg>
<status status="PASS" starttime="20230711 08:57:37.806" endtime="20230711 08:57:37.820"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:57:37.820" level="INFO">OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=33b4b2e7551c
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/hadoop
LD_LIBRARY_PATH=/usr/local/lib
OZONE-SITE.XML_ozone.replication=3
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
ENSURE_SCM_INITIALIZED=/data/metadata/scm/current/VERSION
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OM_SERVICE_ID=omservice
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin
PWD=/opt/hadoop
OZONE-SITE.XML_ozone.scm.container.size=1GB
JAVA_HOME=/usr/lib/jvm/jre/
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE_UPGRADE_FROM=1.3.0
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
SHLVL=1
HOME=/opt/hadoop
OZONE_CONF_DIR=/etc/hadoop
OZONE-SITE.XML_ozone.om.ratis.enable=true
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
OZONE_UPGRADE_TO=1.4.0
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_ozone.scm.ratis.enable=true
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3
_=/usr/bin/env</msg>
<status status="PASS" starttime="20230711 08:57:37.820" endtime="20230711 08:57:37.820"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230711 08:57:37.821" endtime="20230711 08:57:37.821"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:57:37.826" level="INFO">Running command 'ozone admin om finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:57:42.399" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:57:42.399" level="INFO">${output} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230711 08:57:37.823" endtime="20230711 08:57:42.399"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:57:42.401" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230711 08:57:42.399" endtime="20230711 08:57:42.401"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:57:42.401" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:57:42.401" endtime="20230711 08:57:42.401"/>
</kw>
<status status="PASS" starttime="20230711 08:57:37.822" endtime="20230711 08:57:42.402"/>
</kw>
<msg timestamp="20230711 08:57:42.402" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:57:37.822" endtime="20230711 08:57:42.402"/>
</kw>
<msg timestamp="20230711 08:57:42.403" level="INFO">${result} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230711 08:57:37.821" endtime="20230711 08:57:42.403"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:57:42.403" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230711 08:57:42.403" endtime="20230711 08:57:42.403"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20230711 08:57:42.403" endtime="20230711 08:57:42.404"/>
</kw>
<tag>finalized</tag>
<tag>om</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230711 08:57:37.804" endtime="20230711 08:57:42.404"/>
</test>
<test id="s1-s18-t2" name="Check SCM Finalized" line="32">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230711 08:57:42.406" endtime="20230711 08:57:42.407"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>HDDS finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230711 08:57:42.407" endtime="20230711 08:57:42.407"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:57:42.411" level="INFO">Running command 'ozone admin scm finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:57:46.423" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:57:46.423" level="INFO">${output} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230711 08:57:42.409" endtime="20230711 08:57:46.423"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:57:46.425" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230711 08:57:46.424" endtime="20230711 08:57:46.425"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:57:46.426" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:57:46.425" endtime="20230711 08:57:46.426"/>
</kw>
<status status="PASS" starttime="20230711 08:57:42.408" endtime="20230711 08:57:46.426"/>
</kw>
<msg timestamp="20230711 08:57:46.426" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:57:42.408" endtime="20230711 08:57:46.426"/>
</kw>
<msg timestamp="20230711 08:57:46.426" level="INFO">${result} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230711 08:57:42.407" endtime="20230711 08:57:46.427"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:57:46.427" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230711 08:57:46.427" endtime="20230711 08:57:46.427"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20230711 08:57:46.427" endtime="20230711 08:57:46.428"/>
</kw>
<tag>finalized</tag>
<tag>scm</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230711 08:57:42.405" endtime="20230711 08:57:46.428"/>
</test>
<doc>Finalize Upgrade of the Ozone cluster</doc>
<status status="PASS" starttime="20230711 08:57:37.735" endtime="20230711 08:57:46.430"/>
</suite>
<suite id="s1-s19" name="Snapshot-Sh" source="/opt/hadoop/smoketest/snapshot/snapshot-sh.robot">
<test id="s1-s19-t1" name="Snapshot Creation" line="31">
<kw name="Setup volume and bucket" library="snapshot-setup">
<kw name="Create volume" library="snapshot-setup">
<var>${volume}</var>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230711 08:57:49.900" level="INFO">${random} = qgagj</msg>
<status status="PASS" starttime="20230711 08:57:49.900" endtime="20230711 08:57:49.900"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${volume}</var>
<arg>vol-${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230711 08:57:49.901" level="INFO">${volume} = vol-qgagj</msg>
<status status="PASS" starttime="20230711 08:57:49.900" endtime="20230711 08:57:49.901"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:57:49.908" level="INFO">Running command 'ozone sh volume create /vol-qgagj 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:57:53.975" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:57:53.976" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:57:49.903" endtime="20230711 08:57:53.976"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:57:53.977" level="INFO"/>
<status status="PASS" starttime="20230711 08:57:53.976" endtime="20230711 08:57:53.978"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:57:53.978" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:57:53.978" endtime="20230711 08:57:53.979"/>
</kw>
<status status="PASS" starttime="20230711 08:57:49.902" endtime="20230711 08:57:53.979"/>
</kw>
<msg timestamp="20230711 08:57:53.979" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:57:49.902" endtime="20230711 08:57:53.979"/>
</kw>
<msg timestamp="20230711 08:57:53.980" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230711 08:57:49.901" endtime="20230711 08:57:53.980"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:57:53.980" endtime="20230711 08:57:53.981"/>
</kw>
<msg timestamp="20230711 08:57:53.981" level="INFO">${volume} = vol-qgagj</msg>
<status status="PASS" starttime="20230711 08:57:49.899" endtime="20230711 08:57:53.981"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${VOLUME}</arg>
<arg>${volume}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230711 08:57:53.982" level="INFO">${VOLUME} = vol-qgagj</msg>
<status status="PASS" starttime="20230711 08:57:53.981" endtime="20230711 08:57:53.982"/>
</kw>
<kw name="Create bucket" library="snapshot-setup">
<var>${bucket}</var>
<arg>${VOLUME}</arg>
<arg>FILE_SYSTEM_OPTIMIZED</arg>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230711 08:57:53.984" level="INFO">${random} = mldmj</msg>
<status status="PASS" starttime="20230711 08:57:53.983" endtime="20230711 08:57:53.984"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>buc-${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230711 08:57:53.985" level="INFO">${bucket} = buc-mldmj</msg>
<status status="PASS" starttime="20230711 08:57:53.984" endtime="20230711 08:57:53.985"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create -l ${bucket_layout} /${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:57:53.990" level="INFO">Running command 'ozone sh bucket create -l FILE_SYSTEM_OPTIMIZED /vol-qgagj/buc-mldmj 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:57:58.129" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:57:58.129" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:57:53.987" endtime="20230711 08:57:58.129"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:57:58.130" level="INFO"/>
<status status="PASS" starttime="20230711 08:57:58.130" endtime="20230711 08:57:58.131"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:57:58.131" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:57:58.131" endtime="20230711 08:57:58.131"/>
</kw>
<status status="PASS" starttime="20230711 08:57:53.986" endtime="20230711 08:57:58.132"/>
</kw>
<msg timestamp="20230711 08:57:58.132" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:57:53.986" endtime="20230711 08:57:58.132"/>
</kw>
<msg timestamp="20230711 08:57:58.132" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230711 08:57:53.985" endtime="20230711 08:57:58.132"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:57:58.133" endtime="20230711 08:57:58.133"/>
</kw>
<msg timestamp="20230711 08:57:58.133" level="INFO">${bucket} = buc-mldmj</msg>
<status status="PASS" starttime="20230711 08:57:53.982" endtime="20230711 08:57:58.133"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<arg>${bucket}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230711 08:57:58.134" level="INFO">${BUCKET} = buc-mldmj</msg>
<status status="PASS" starttime="20230711 08:57:58.134" endtime="20230711 08:57:58.134"/>
</kw>
<status status="PASS" starttime="20230711 08:57:49.899" endtime="20230711 08:57:58.135"/>
</kw>
<kw name="Create key" library="snapshot-setup">
<var>${key_one}</var>
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
<arg>/etc/hosts</arg>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230711 08:57:58.136" level="INFO">${random} = wdbhl</msg>
<status status="PASS" starttime="20230711 08:57:58.136" endtime="20230711 08:57:58.137"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>key-${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230711 08:57:58.137" level="INFO">${key} = key-wdbhl</msg>
<status status="PASS" starttime="20230711 08:57:58.137" endtime="20230711 08:57:58.137"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${volume}/${bucket}/${key} ${file}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:57:58.144" level="INFO">Running command 'ozone sh key put /vol-qgagj/buc-mldmj/key-wdbhl /etc/hosts 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:58:05.154" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:58:05.154" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:57:58.140" endtime="20230711 08:58:05.155"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:58:05.156" level="INFO"/>
<status status="PASS" starttime="20230711 08:58:05.155" endtime="20230711 08:58:05.156"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:58:05.156" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:58:05.156" endtime="20230711 08:58:05.157"/>
</kw>
<status status="PASS" starttime="20230711 08:57:58.139" endtime="20230711 08:58:05.157"/>
</kw>
<msg timestamp="20230711 08:58:05.157" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:57:58.138" endtime="20230711 08:58:05.157"/>
</kw>
<msg timestamp="20230711 08:58:05.157" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230711 08:57:58.137" endtime="20230711 08:58:05.157"/>
</kw>
<msg timestamp="20230711 08:58:05.157" level="INFO">${key_one} = key-wdbhl</msg>
<status status="PASS" starttime="20230711 08:57:58.135" endtime="20230711 08:58:05.157"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${KEY_ONE}</arg>
<arg>${key_one}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230711 08:58:05.158" level="INFO">${KEY_ONE} = key-wdbhl</msg>
<status status="PASS" starttime="20230711 08:58:05.158" endtime="20230711 08:58:05.158"/>
</kw>
<kw name="Create snapshot" library="snapshot-setup">
<var>${snapshot_one}</var>
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230711 08:58:05.159" level="INFO">${random} = xjaea</msg>
<status status="PASS" starttime="20230711 08:58:05.159" endtime="20230711 08:58:05.159"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${snapshot}</var>
<arg>snap-${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230711 08:58:05.160" level="INFO">${snapshot} = snap-xjaea</msg>
<status status="PASS" starttime="20230711 08:58:05.159" endtime="20230711 08:58:05.160"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh snapshot create /${volume}/${bucket} ${snapshot}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:58:05.165" level="INFO">Running command 'ozone sh snapshot create /vol-qgagj/buc-mldmj snap-xjaea 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:58:08.829" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:58:08.829" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:58:05.162" endtime="20230711 08:58:08.829"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:58:08.843" level="INFO"/>
<status status="PASS" starttime="20230711 08:58:08.835" endtime="20230711 08:58:08.843"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:58:08.861" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:58:08.859" endtime="20230711 08:58:08.861"/>
</kw>
<status status="PASS" starttime="20230711 08:58:05.161" endtime="20230711 08:58:08.862"/>
</kw>
<msg timestamp="20230711 08:58:08.862" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:58:05.161" endtime="20230711 08:58:08.862"/>
</kw>
<msg timestamp="20230711 08:58:08.862" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230711 08:58:05.160" endtime="20230711 08:58:08.862"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:58:08.864" endtime="20230711 08:58:08.867"/>
</kw>
<msg timestamp="20230711 08:58:08.868" level="INFO">${snapshot_one} = snap-xjaea</msg>
<status status="PASS" starttime="20230711 08:58:05.158" endtime="20230711 08:58:08.868"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${SNAPSHOT_ONE}</arg>
<arg>${snapshot_one}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230711 08:58:08.870" level="INFO">${SNAPSHOT_ONE} = snap-xjaea</msg>
<status status="PASS" starttime="20230711 08:58:08.868" endtime="20230711 08:58:08.870"/>
</kw>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230711 08:57:49.898" endtime="20230711 08:58:08.871"/>
</test>
<test id="s1-s19-t2" name="Snapshot List" line="38">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh snapshot ls /${VOLUME}/${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:58:08.907" level="INFO">Running command 'ozone sh snapshot ls /vol-qgagj/buc-mldmj 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:58:13.489" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:58:13.489" level="INFO">${output} = [ {
  "volumeName" : "vol-qgagj",
  "bucketName" : "buc-mldmj",
  "name" : "snap-xjaea",
  "creationTime" : 1689065888709,
  "snapshotStatus" : "SNAPSHOT_ACTIVE",
  "snapshotId" : "28b26b12-f9e0-4eca-...</msg>
<status status="PASS" starttime="20230711 08:58:08.899" endtime="20230711 08:58:13.489"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:58:13.491" level="INFO">[ {
  "volumeName" : "vol-qgagj",
  "bucketName" : "buc-mldmj",
  "name" : "snap-xjaea",
  "creationTime" : 1689065888709,
  "snapshotStatus" : "SNAPSHOT_ACTIVE",
  "snapshotId" : "28b26b12-f9e0-4eca-a030-05dcc1d1b8a1",
  "snapshotPath" : "vol-qgagj/buc-mldmj",
  "checkpointDir" : "-28b26b12-f9e0-4eca-a030-05dcc1d1b8a1"
} ]</msg>
<status status="PASS" starttime="20230711 08:58:13.490" endtime="20230711 08:58:13.491"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:58:13.491" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:58:13.491" endtime="20230711 08:58:13.492"/>
</kw>
<status status="PASS" starttime="20230711 08:58:08.897" endtime="20230711 08:58:13.492"/>
</kw>
<msg timestamp="20230711 08:58:13.492" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:58:08.896" endtime="20230711 08:58:13.492"/>
</kw>
<msg timestamp="20230711 08:58:13.492" level="INFO">${result} = [ {
  "volumeName" : "vol-qgagj",
  "bucketName" : "buc-mldmj",
  "name" : "snap-xjaea",
  "creationTime" : 1689065888709,
  "snapshotStatus" : "SNAPSHOT_ACTIVE",
  "snapshotId" : "28b26b12-f9e0-4eca-...</msg>
<status status="PASS" starttime="20230711 08:58:08.891" endtime="20230711 08:58:13.492"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${SNAPSHOT_ONE}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:58:13.493" endtime="20230711 08:58:13.493"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>SNAPSHOT_ACTIVE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:58:13.493" endtime="20230711 08:58:13.493"/>
</kw>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230711 08:58:08.873" endtime="20230711 08:58:13.494"/>
</test>
<test id="s1-s19-t3" name="Snapshot Diff" line="43">
<kw name="Create key" library="snapshot-setup">
<var>${key_two}</var>
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
<arg>/etc/passwd</arg>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230711 08:58:13.498" level="INFO">${random} = ccjjb</msg>
<status status="PASS" starttime="20230711 08:58:13.497" endtime="20230711 08:58:13.498"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>key-${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230711 08:58:13.499" level="INFO">${key} = key-ccjjb</msg>
<status status="PASS" starttime="20230711 08:58:13.498" endtime="20230711 08:58:13.499"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${volume}/${bucket}/${key} ${file}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:58:13.503" level="INFO">Running command 'ozone sh key put /vol-qgagj/buc-mldmj/key-ccjjb /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:58:20.117" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:58:20.117" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:58:13.500" endtime="20230711 08:58:20.117"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:58:20.119" level="INFO"/>
<status status="PASS" starttime="20230711 08:58:20.118" endtime="20230711 08:58:20.119"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:58:20.119" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:58:20.119" endtime="20230711 08:58:20.120"/>
</kw>
<status status="PASS" starttime="20230711 08:58:13.500" endtime="20230711 08:58:20.120"/>
</kw>
<msg timestamp="20230711 08:58:20.120" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:58:13.499" endtime="20230711 08:58:20.120"/>
</kw>
<msg timestamp="20230711 08:58:20.120" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230711 08:58:13.499" endtime="20230711 08:58:20.120"/>
</kw>
<msg timestamp="20230711 08:58:20.121" level="INFO">${key_two} = key-ccjjb</msg>
<status status="PASS" starttime="20230711 08:58:13.496" endtime="20230711 08:58:20.121"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${KEY_TWO}</arg>
<arg>${key_two}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230711 08:58:20.122" level="INFO">${KEY_TWO} = key-ccjjb</msg>
<status status="PASS" starttime="20230711 08:58:20.121" endtime="20230711 08:58:20.122"/>
</kw>
<kw name="Create key" library="snapshot-setup">
<var>${key_three}</var>
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
<arg>/etc/group</arg>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230711 08:58:20.123" level="INFO">${random} = vzeot</msg>
<status status="PASS" starttime="20230711 08:58:20.122" endtime="20230711 08:58:20.123"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>key-${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230711 08:58:20.124" level="INFO">${key} = key-vzeot</msg>
<status status="PASS" starttime="20230711 08:58:20.123" endtime="20230711 08:58:20.124"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${volume}/${bucket}/${key} ${file}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:58:20.128" level="INFO">Running command 'ozone sh key put /vol-qgagj/buc-mldmj/key-vzeot /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:58:27.375" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:58:27.375" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:58:20.125" endtime="20230711 08:58:27.375"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:58:27.378" level="INFO"/>
<status status="PASS" starttime="20230711 08:58:27.376" endtime="20230711 08:58:27.378"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:58:27.379" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:58:27.378" endtime="20230711 08:58:27.379"/>
</kw>
<status status="PASS" starttime="20230711 08:58:20.125" endtime="20230711 08:58:27.380"/>
</kw>
<msg timestamp="20230711 08:58:27.380" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:58:20.124" endtime="20230711 08:58:27.380"/>
</kw>
<msg timestamp="20230711 08:58:27.380" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230711 08:58:20.124" endtime="20230711 08:58:27.380"/>
</kw>
<msg timestamp="20230711 08:58:27.381" level="INFO">${key_three} = key-vzeot</msg>
<status status="PASS" starttime="20230711 08:58:20.122" endtime="20230711 08:58:27.381"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${KEY_THREE}</arg>
<arg>${key_three}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230711 08:58:27.382" level="INFO">${KEY_THREE} = key-vzeot</msg>
<status status="PASS" starttime="20230711 08:58:27.381" endtime="20230711 08:58:27.382"/>
</kw>
<kw name="Create snapshot" library="snapshot-setup">
<var>${snapshot_two}</var>
<arg>${VOLUME}</arg>
<arg>${BUCKET}</arg>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230711 08:58:27.383" level="INFO">${random} = cvjlf</msg>
<status status="PASS" starttime="20230711 08:58:27.383" endtime="20230711 08:58:27.383"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${snapshot}</var>
<arg>snap-${random}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230711 08:58:27.385" level="INFO">${snapshot} = snap-cvjlf</msg>
<status status="PASS" starttime="20230711 08:58:27.385" endtime="20230711 08:58:27.386"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh snapshot create /${volume}/${bucket} ${snapshot}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:58:27.392" level="INFO">Running command 'ozone sh snapshot create /vol-qgagj/buc-mldmj snap-cvjlf 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:58:31.518" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:58:31.519" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:58:27.388" endtime="20230711 08:58:31.519"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:58:31.520" level="INFO"/>
<status status="PASS" starttime="20230711 08:58:31.519" endtime="20230711 08:58:31.520"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:58:31.521" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:58:31.521" endtime="20230711 08:58:31.522"/>
</kw>
<status status="PASS" starttime="20230711 08:58:27.387" endtime="20230711 08:58:31.522"/>
</kw>
<msg timestamp="20230711 08:58:31.522" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:58:27.386" endtime="20230711 08:58:31.522"/>
</kw>
<msg timestamp="20230711 08:58:31.523" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230711 08:58:27.386" endtime="20230711 08:58:31.523"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:58:31.523" endtime="20230711 08:58:31.524"/>
</kw>
<msg timestamp="20230711 08:58:31.524" level="INFO">${snapshot_two} = snap-cvjlf</msg>
<status status="PASS" starttime="20230711 08:58:27.382" endtime="20230711 08:58:31.524"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${SNAPSHOT_TWO}</arg>
<arg>${snapshot_two}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230711 08:58:31.525" level="INFO">${SNAPSHOT_TWO} = snap-cvjlf</msg>
<status status="PASS" starttime="20230711 08:58:31.525" endtime="20230711 08:58:31.525"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh snapshot diff /${VOLUME}/${BUCKET} ${SNAPSHOT_ONE} ${SNAPSHOT_TWO}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:58:31.531" level="INFO">Running command 'ozone sh snapshot diff /vol-qgagj/buc-mldmj snap-xjaea snap-cvjlf 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:58:35.011" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:58:35.011" level="INFO">${output} = Snapshot diff job is IN_PROGRESS. Please retry after 60000 ms.</msg>
<status status="PASS" starttime="20230711 08:58:31.528" endtime="20230711 08:58:35.011"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:58:35.013" level="INFO">Snapshot diff job is IN_PROGRESS. Please retry after 60000 ms.</msg>
<status status="PASS" starttime="20230711 08:58:35.012" endtime="20230711 08:58:35.013"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:58:35.014" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:58:35.013" endtime="20230711 08:58:35.014"/>
</kw>
<status status="PASS" starttime="20230711 08:58:31.528" endtime="20230711 08:58:35.015"/>
</kw>
<msg timestamp="20230711 08:58:35.015" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:58:31.526" endtime="20230711 08:58:35.015"/>
</kw>
<msg timestamp="20230711 08:58:35.015" level="INFO">${result} = Snapshot diff job is IN_PROGRESS. Please retry after 60000 ms.</msg>
<status status="PASS" starttime="20230711 08:58:31.525" endtime="20230711 08:58:35.015"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Snapshot diff job is IN_PROGRESS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:58:35.016" endtime="20230711 08:58:35.016"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh snapshot diff /${VOLUME}/${BUCKET} ${SNAPSHOT_ONE} ${SNAPSHOT_TWO}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:58:35.022" level="INFO">Running command 'ozone sh snapshot diff /vol-qgagj/buc-mldmj snap-xjaea snap-cvjlf 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:58:39.270" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:58:39.270" level="INFO">${output} = Difference between snapshot: snap-xjaea and snapshot: snap-cvjlf
+	./key-ccjjb
+	./key-vzeot</msg>
<status status="PASS" starttime="20230711 08:58:35.019" endtime="20230711 08:58:39.270"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:58:39.271" level="INFO">Difference between snapshot: snap-xjaea and snapshot: snap-cvjlf
+	./key-ccjjb
+	./key-vzeot</msg>
<status status="PASS" starttime="20230711 08:58:39.271" endtime="20230711 08:58:39.272"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:58:39.272" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:58:39.272" endtime="20230711 08:58:39.272"/>
</kw>
<status status="PASS" starttime="20230711 08:58:35.018" endtime="20230711 08:58:39.273"/>
</kw>
<msg timestamp="20230711 08:58:39.273" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:58:35.017" endtime="20230711 08:58:39.273"/>
</kw>
<msg timestamp="20230711 08:58:39.273" level="INFO">${result} = Difference between snapshot: snap-xjaea and snapshot: snap-cvjlf
+	./key-ccjjb
+	./key-vzeot</msg>
<status status="PASS" starttime="20230711 08:58:35.016" endtime="20230711 08:58:39.273"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>+</arg>
<arg>${KEY_TWO}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:58:39.274" endtime="20230711 08:58:39.274"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>+</arg>
<arg>${KEY_THREE}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:58:39.274" endtime="20230711 08:58:39.275"/>
</kw>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230711 08:58:13.495" endtime="20230711 08:58:39.275"/>
</test>
<test id="s1-s19-t4" name="List Snapshot Diff Jobs" line="56">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh snapshot listDiff /${VOLUME}/${BUCKET} --all</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:58:39.282" level="INFO">Running command 'ozone sh snapshot listDiff /vol-qgagj/buc-mldmj --all 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:58:43.961" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:58:43.961" level="INFO">${output} = [ {
  "volumeName" : "vol-qgagj",
  "bucketName" : "buc-mldmj",
  "fromSnapshot" : "snap-xjaea",
  "toSnapshot" : "snap-cvjlf",
  "jobStatus" : "DONE"
} ]</msg>
<status status="PASS" starttime="20230711 08:58:39.279" endtime="20230711 08:58:43.961"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:58:43.963" level="INFO">[ {
  "volumeName" : "vol-qgagj",
  "bucketName" : "buc-mldmj",
  "fromSnapshot" : "snap-xjaea",
  "toSnapshot" : "snap-cvjlf",
  "jobStatus" : "DONE"
} ]</msg>
<status status="PASS" starttime="20230711 08:58:43.962" endtime="20230711 08:58:43.963"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:58:43.964" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:58:43.964" endtime="20230711 08:58:43.964"/>
</kw>
<status status="PASS" starttime="20230711 08:58:39.278" endtime="20230711 08:58:43.965"/>
</kw>
<msg timestamp="20230711 08:58:43.965" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:58:39.278" endtime="20230711 08:58:43.965"/>
</kw>
<msg timestamp="20230711 08:58:43.965" level="INFO">${result} = [ {
  "volumeName" : "vol-qgagj",
  "bucketName" : "buc-mldmj",
  "fromSnapshot" : "snap-xjaea",
  "toSnapshot" : "snap-cvjlf",
  "jobStatus" : "DONE"
} ]</msg>
<status status="PASS" starttime="20230711 08:58:39.277" endtime="20230711 08:58:43.965"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${VOLUME}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:58:43.965" endtime="20230711 08:58:43.966"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:58:43.966" endtime="20230711 08:58:43.966"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${SNAPSHOT_ONE}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:58:43.967" endtime="20230711 08:58:43.967"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${SNAPSHOT_TWO}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:58:43.967" endtime="20230711 08:58:43.967"/>
</kw>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230711 08:58:39.276" endtime="20230711 08:58:43.968"/>
</test>
<test id="s1-s19-t5" name="Read Snapshot" line="63">
<kw name="Key Should Match Local File" library="shell">
<arg>/${VOLUME}/${BUCKET}/${SNAPSHOT_INDICATOR}/${SNAPSHOT_ONE}/${KEY_ONE}</arg>
<arg>/etc/hosts</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230711 08:58:43.971" level="INFO">${postfix} = 39967</msg>
<status status="PASS" starttime="20230711 08:58:43.971" endtime="20230711 08:58:43.971"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230711 08:58:43.972" level="INFO">${tmpfile} = /tmp/tempkey-39967</msg>
<status status="PASS" starttime="20230711 08:58:43.972" endtime="20230711 08:58:43.972"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:58:43.977" level="INFO">Running command 'ozone sh key get /vol-qgagj/buc-mldmj/.snapshot/snap-xjaea/key-wdbhl /tmp/tempkey-39967 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:58:50.817" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:58:50.818" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:58:43.974" endtime="20230711 08:58:50.818"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:58:50.819" level="INFO"/>
<status status="PASS" starttime="20230711 08:58:50.818" endtime="20230711 08:58:50.820"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:58:50.820" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:58:50.820" endtime="20230711 08:58:50.821"/>
</kw>
<status status="PASS" starttime="20230711 08:58:43.974" endtime="20230711 08:58:50.821"/>
</kw>
<msg timestamp="20230711 08:58:50.821" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:58:43.973" endtime="20230711 08:58:50.821"/>
</kw>
<status status="PASS" starttime="20230711 08:58:43.972" endtime="20230711 08:58:50.821"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20230711 08:58:50.825" level="INFO">Running command 'diff -q /etc/hosts /tmp/tempkey-39967 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:58:50.831" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20230711 08:58:50.822" endtime="20230711 08:58:50.831"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:58:50.837" level="INFO">Running command 'rm -f /tmp/tempkey-39967 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:58:50.840" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:58:50.840" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:58:50.834" endtime="20230711 08:58:50.840"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:58:50.842" level="INFO"/>
<status status="PASS" starttime="20230711 08:58:50.841" endtime="20230711 08:58:50.842"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:58:50.843" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:58:50.842" endtime="20230711 08:58:50.843"/>
</kw>
<status status="PASS" starttime="20230711 08:58:50.833" endtime="20230711 08:58:50.843"/>
</kw>
<msg timestamp="20230711 08:58:50.843" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:58:50.833" endtime="20230711 08:58:50.843"/>
</kw>
<status status="PASS" starttime="20230711 08:58:50.831" endtime="20230711 08:58:50.843"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230711 08:58:50.844" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20230711 08:58:50.844" endtime="20230711 08:58:50.844"/>
</kw>
<msg timestamp="20230711 08:58:50.845" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20230711 08:58:43.970" endtime="20230711 08:58:50.845"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230711 08:58:50.845" endtime="20230711 08:58:50.845"/>
</kw>
<status status="PASS" starttime="20230711 08:58:43.970" endtime="20230711 08:58:50.845"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>/${VOLUME}/${BUCKET}/${SNAPSHOT_INDICATOR}/${SNAPSHOT_TWO}/${KEY_TWO}</arg>
<arg>/etc/passwd</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230711 08:58:50.847" level="INFO">${postfix} = 26906</msg>
<status status="PASS" starttime="20230711 08:58:50.847" endtime="20230711 08:58:50.848"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230711 08:58:50.848" level="INFO">${tmpfile} = /tmp/tempkey-26906</msg>
<status status="PASS" starttime="20230711 08:58:50.848" endtime="20230711 08:58:50.848"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:58:50.853" level="INFO">Running command 'ozone sh key get /vol-qgagj/buc-mldmj/.snapshot/snap-cvjlf/key-ccjjb /tmp/tempkey-26906 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:58:57.362" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:58:57.362" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:58:50.850" endtime="20230711 08:58:57.362"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:58:57.364" level="INFO"/>
<status status="PASS" starttime="20230711 08:58:57.363" endtime="20230711 08:58:57.364"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:58:57.365" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:58:57.364" endtime="20230711 08:58:57.365"/>
</kw>
<status status="PASS" starttime="20230711 08:58:50.849" endtime="20230711 08:58:57.365"/>
</kw>
<msg timestamp="20230711 08:58:57.366" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:58:50.849" endtime="20230711 08:58:57.366"/>
</kw>
<status status="PASS" starttime="20230711 08:58:50.848" endtime="20230711 08:58:57.366"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20230711 08:58:57.370" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-26906 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:58:57.373" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20230711 08:58:57.366" endtime="20230711 08:58:57.373"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:58:57.379" level="INFO">Running command 'rm -f /tmp/tempkey-26906 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:58:57.383" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:58:57.383" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:58:57.376" endtime="20230711 08:58:57.383"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:58:57.384" level="INFO"/>
<status status="PASS" starttime="20230711 08:58:57.383" endtime="20230711 08:58:57.384"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:58:57.385" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:58:57.384" endtime="20230711 08:58:57.385"/>
</kw>
<status status="PASS" starttime="20230711 08:58:57.375" endtime="20230711 08:58:57.385"/>
</kw>
<msg timestamp="20230711 08:58:57.385" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:58:57.375" endtime="20230711 08:58:57.386"/>
</kw>
<status status="PASS" starttime="20230711 08:58:57.374" endtime="20230711 08:58:57.386"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230711 08:58:57.386" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20230711 08:58:57.386" endtime="20230711 08:58:57.387"/>
</kw>
<msg timestamp="20230711 08:58:57.387" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20230711 08:58:50.846" endtime="20230711 08:58:57.387"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230711 08:58:57.387" endtime="20230711 08:58:57.387"/>
</kw>
<status status="PASS" starttime="20230711 08:58:50.846" endtime="20230711 08:58:57.388"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>/${VOLUME}/${BUCKET}/${SNAPSHOT_INDICATOR}/${SNAPSHOT_TWO}/${KEY_THREE}</arg>
<arg>/etc/group</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230711 08:58:57.390" level="INFO">${postfix} = 59298</msg>
<status status="PASS" starttime="20230711 08:58:57.389" endtime="20230711 08:58:57.390"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230711 08:58:57.390" level="INFO">${tmpfile} = /tmp/tempkey-59298</msg>
<status status="PASS" starttime="20230711 08:58:57.390" endtime="20230711 08:58:57.390"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:58:57.394" level="INFO">Running command 'ozone sh key get /vol-qgagj/buc-mldmj/.snapshot/snap-cvjlf/key-vzeot /tmp/tempkey-59298 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:59:04.457" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:59:04.457" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:58:57.392" endtime="20230711 08:59:04.457"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:59:04.459" level="INFO"/>
<status status="PASS" starttime="20230711 08:59:04.458" endtime="20230711 08:59:04.459"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:59:04.459" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:59:04.459" endtime="20230711 08:59:04.459"/>
</kw>
<status status="PASS" starttime="20230711 08:58:57.391" endtime="20230711 08:59:04.460"/>
</kw>
<msg timestamp="20230711 08:59:04.460" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:58:57.391" endtime="20230711 08:59:04.460"/>
</kw>
<status status="PASS" starttime="20230711 08:58:57.390" endtime="20230711 08:59:04.460"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20230711 08:59:04.464" level="INFO">Running command 'diff -q /etc/group /tmp/tempkey-59298 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:59:04.467" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20230711 08:59:04.460" endtime="20230711 08:59:04.467"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:59:04.473" level="INFO">Running command 'rm -f /tmp/tempkey-59298 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:59:04.476" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:59:04.476" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:59:04.470" endtime="20230711 08:59:04.476"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:59:04.478" level="INFO"/>
<status status="PASS" starttime="20230711 08:59:04.477" endtime="20230711 08:59:04.478"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:59:04.478" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:59:04.478" endtime="20230711 08:59:04.478"/>
</kw>
<status status="PASS" starttime="20230711 08:59:04.469" endtime="20230711 08:59:04.479"/>
</kw>
<msg timestamp="20230711 08:59:04.479" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:59:04.469" endtime="20230711 08:59:04.479"/>
</kw>
<status status="PASS" starttime="20230711 08:59:04.468" endtime="20230711 08:59:04.479"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230711 08:59:04.480" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20230711 08:59:04.479" endtime="20230711 08:59:04.480"/>
</kw>
<msg timestamp="20230711 08:59:04.480" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20230711 08:58:57.389" endtime="20230711 08:59:04.481"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230711 08:59:04.481" endtime="20230711 08:59:04.481"/>
</kw>
<status status="PASS" starttime="20230711 08:58:57.388" endtime="20230711 08:59:04.481"/>
</kw>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230711 08:58:43.969" endtime="20230711 08:59:04.482"/>
</test>
<test id="s1-s19-t6" name="Delete snapshot" line="68">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh snapshot delete /${VOLUME}/${BUCKET} ${SNAPSHOT_ONE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:59:04.489" level="INFO">Running command 'ozone sh snapshot delete /vol-qgagj/buc-mldmj snap-xjaea 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:59:08.543" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:59:08.543" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:59:04.486" endtime="20230711 08:59:08.543"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:59:08.545" level="INFO"/>
<status status="PASS" starttime="20230711 08:59:08.544" endtime="20230711 08:59:08.545"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:59:08.546" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:59:08.545" endtime="20230711 08:59:08.546"/>
</kw>
<status status="PASS" starttime="20230711 08:59:04.485" endtime="20230711 08:59:08.546"/>
</kw>
<msg timestamp="20230711 08:59:08.546" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:59:04.485" endtime="20230711 08:59:08.547"/>
</kw>
<msg timestamp="20230711 08:59:08.547" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:59:04.484" endtime="20230711 08:59:08.547"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:59:08.547" endtime="20230711 08:59:08.548"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh snapshot ls /${VOLUME}/${BUCKET} | jq '[.[] | select(.name == "${SNAPSHOT_ONE}") | .snapshotStatus] | if length &gt; 0 then .[] else "SNAPSHOT_DELETED" end'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:59:08.553" level="INFO">Running command 'ozone sh snapshot ls /vol-qgagj/buc-mldmj | jq '[.[] | select(.name == "snap-xjaea") | .snapshotStatus] | if length &gt; 0 then .[] else "SNAPSHOT_DELETED" end''.</msg>
<msg timestamp="20230711 08:59:12.665" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:59:12.665" level="INFO">${output} = "SNAPSHOT_DELETED"</msg>
<status status="PASS" starttime="20230711 08:59:08.550" endtime="20230711 08:59:12.665"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:59:12.666" level="INFO">"SNAPSHOT_DELETED"</msg>
<status status="PASS" starttime="20230711 08:59:12.666" endtime="20230711 08:59:12.667"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:59:12.667" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:59:12.667" endtime="20230711 08:59:12.667"/>
</kw>
<status status="PASS" starttime="20230711 08:59:08.549" endtime="20230711 08:59:12.668"/>
</kw>
<msg timestamp="20230711 08:59:12.668" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:59:08.549" endtime="20230711 08:59:12.668"/>
</kw>
<msg timestamp="20230711 08:59:12.668" level="INFO">${output} = "SNAPSHOT_DELETED"</msg>
<status status="PASS" starttime="20230711 08:59:08.548" endtime="20230711 08:59:12.668"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>SNAPSHOT_DELETED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:59:12.668" endtime="20230711 08:59:12.669"/>
</kw>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230711 08:59:04.483" endtime="20230711 08:59:12.669"/>
</test>
<doc>Test for using sh commands with snapshots.</doc>
<status status="PASS" starttime="20230711 08:57:49.827" endtime="20230711 08:59:12.671"/>
</suite>
<suite id="s1-s20" name="Finalize" source="/opt/hadoop/smoketest/upgrade/finalize.robot">
<test id="s1-s20-t1" name="Finalize HDDS" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230711 08:53:26.189" endtime="20230711 08:53:26.190"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizeupgrade</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:53:26.197" level="INFO">Running command 'ozone admin scm finalizeupgrade 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:55:22.622" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:55:22.622" level="INFO">${output} = Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature:...</msg>
<status status="PASS" starttime="20230711 08:53:26.192" endtime="20230711 08:55:22.622"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:55:22.624" level="INFO">Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature: RATIS_DATASTREAM_PORT_IN_DATANODEDETAILS.
No onFinalize work defined for feature: WEBUI_PORTS_IN_DATANODEDETAILS.
No onFinalize work defined for feature: HADOOP_PRC_PORTS_IN_DATANODEDETAILS.
Finalization is done.
Exiting...
Finalization of Storage Container Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20230711 08:55:22.623" endtime="20230711 08:55:22.624"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:55:22.625" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:55:22.624" endtime="20230711 08:55:22.625"/>
</kw>
<status status="PASS" starttime="20230711 08:53:26.191" endtime="20230711 08:55:22.625"/>
</kw>
<msg timestamp="20230711 08:55:22.625" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:53:26.190" endtime="20230711 08:55:22.626"/>
</kw>
<msg timestamp="20230711 08:55:22.626" level="INFO">${result} = Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature:...</msg>
<status status="PASS" starttime="20230711 08:53:26.190" endtime="20230711 08:55:22.626"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:55:22.627" level="INFO">Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature: RATIS_DATASTREAM_PORT_IN_DATANODEDETAILS.
No onFinalize work defined for feature: WEBUI_PORTS_IN_DATANODEDETAILS.
No onFinalize work defined for feature: HADOOP_PRC_PORTS_IN_DATANODEDETAILS.
Finalization is done.
Exiting...
Finalization of Storage Container Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20230711 08:55:22.626" endtime="20230711 08:55:22.627"/>
</kw>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230711 08:53:26.187" endtime="20230711 08:55:22.627"/>
</test>
<test id="s1-s20-t2" name="Finalize OMs" line="27">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230711 08:55:22.630" endtime="20230711 08:55:22.630"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizeupgrade -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:55:22.634" level="INFO">Running command 'ozone admin om finalizeupgrade -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:55:29.599" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:55:29.599" level="INFO">${output} = Finalization started.
No onFinalize work defined for feature: HSYNC.
No onFinalize work defined for feature: FILESYSTEM_SNAPSHOT.
No onFinalize work defined for feature: QUOTA.
Finalization is done.
E...</msg>
<status status="PASS" starttime="20230711 08:55:22.632" endtime="20230711 08:55:29.599"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:55:29.601" level="INFO">Finalization started.
No onFinalize work defined for feature: HSYNC.
No onFinalize work defined for feature: FILESYSTEM_SNAPSHOT.
No onFinalize work defined for feature: QUOTA.
Finalization is done.
Exiting...
Finalization of Ozone Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20230711 08:55:29.600" endtime="20230711 08:55:29.601"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:55:29.601" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:55:29.601" endtime="20230711 08:55:29.601"/>
</kw>
<status status="PASS" starttime="20230711 08:55:22.631" endtime="20230711 08:55:29.602"/>
</kw>
<msg timestamp="20230711 08:55:29.602" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:55:22.631" endtime="20230711 08:55:29.602"/>
</kw>
<msg timestamp="20230711 08:55:29.602" level="INFO">${result} = Finalization started.
No onFinalize work defined for feature: HSYNC.
No onFinalize work defined for feature: FILESYSTEM_SNAPSHOT.
No onFinalize work defined for feature: QUOTA.
Finalization is done.
E...</msg>
<status status="PASS" starttime="20230711 08:55:22.630" endtime="20230711 08:55:29.602"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:55:29.603" level="INFO">Finalization started.
No onFinalize work defined for feature: HSYNC.
No onFinalize work defined for feature: FILESYSTEM_SNAPSHOT.
No onFinalize work defined for feature: QUOTA.
Finalization is done.
Exiting...
Finalization of Ozone Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20230711 08:55:29.602" endtime="20230711 08:55:29.603"/>
</kw>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230711 08:55:22.629" endtime="20230711 08:55:29.603"/>
</test>
<doc>Finalize Upgrade of the Ozone cluster</doc>
<status status="PASS" starttime="20230711 08:53:26.129" endtime="20230711 08:55:29.607"/>
</suite>
<suite id="s1-s21" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s21-t1" name="Create key" line="35">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:44:48.741" level="INFO">Running command 'echo "old1: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230711 08:44:48.743" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:44:48.743" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:44:48.736" endtime="20230711 08:44:48.743"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:44:48.745" level="INFO"/>
<status status="PASS" starttime="20230711 08:44:48.744" endtime="20230711 08:44:48.745"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:44:48.746" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:44:48.745" endtime="20230711 08:44:48.746"/>
</kw>
<status status="PASS" starttime="20230711 08:44:48.735" endtime="20230711 08:44:48.746"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:44:48.755" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:44:57.219" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:44:57.219" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:44:48.748" endtime="20230711 08:44:57.219"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:44:57.223" level="INFO"/>
<status status="PASS" starttime="20230711 08:44:57.221" endtime="20230711 08:44:57.223"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:44:57.224" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:44:57.223" endtime="20230711 08:44:57.224"/>
</kw>
<status status="PASS" starttime="20230711 08:44:48.748" endtime="20230711 08:44:57.224"/>
</kw>
<msg timestamp="20230711 08:44:57.224" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:44:48.747" endtime="20230711 08:44:57.224"/>
</kw>
<msg timestamp="20230711 08:44:57.225" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:44:48.746" endtime="20230711 08:44:57.225"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:44:57.225" endtime="20230711 08:44:57.225"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:44:57.232" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:44:57.235" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:44:57.236" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:44:57.227" endtime="20230711 08:44:57.236"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:44:57.242" level="INFO"/>
<status status="PASS" starttime="20230711 08:44:57.241" endtime="20230711 08:44:57.244"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:44:57.245" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:44:57.244" endtime="20230711 08:44:57.245"/>
</kw>
<status status="PASS" starttime="20230711 08:44:57.225" endtime="20230711 08:44:57.246"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230711 08:44:48.734" endtime="20230711 08:44:57.247"/>
</test>
<test id="s1-s21-t2" name="Create key in the bucket in s3v volume" line="46">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: another key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:44:57.256" level="INFO">Running command 'echo "old1: another key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230711 08:44:57.260" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:44:57.260" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:44:57.251" endtime="20230711 08:44:57.260"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:44:57.261" level="INFO"/>
<status status="PASS" starttime="20230711 08:44:57.261" endtime="20230711 08:44:57.262"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:44:57.263" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:44:57.262" endtime="20230711 08:44:57.263"/>
</kw>
<status status="PASS" starttime="20230711 08:44:57.249" endtime="20230711 08:44:57.263"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /s3v/${PREFIX}-bucket/key1-shell /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:44:57.269" level="INFO">Running command 'ozone sh key put /s3v/old1-bucket/key1-shell /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:45:05.537" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:45:05.537" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:44:57.266" endtime="20230711 08:45:05.537"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:45:05.539" level="INFO"/>
<status status="PASS" starttime="20230711 08:45:05.538" endtime="20230711 08:45:05.539"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:45:05.539" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:45:05.539" endtime="20230711 08:45:05.539"/>
</kw>
<status status="PASS" starttime="20230711 08:44:57.265" endtime="20230711 08:45:05.540"/>
</kw>
<msg timestamp="20230711 08:45:05.540" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:44:57.264" endtime="20230711 08:45:05.540"/>
</kw>
<msg timestamp="20230711 08:45:05.540" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:44:57.263" endtime="20230711 08:45:05.540"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:45:05.540" endtime="20230711 08:45:05.541"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:45:05.544" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:45:05.548" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:45:05.548" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:45:05.542" endtime="20230711 08:45:05.548"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:45:05.549" level="INFO"/>
<status status="PASS" starttime="20230711 08:45:05.548" endtime="20230711 08:45:05.549"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:45:05.550" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:45:05.550" endtime="20230711 08:45:05.550"/>
</kw>
<status status="PASS" starttime="20230711 08:45:05.541" endtime="20230711 08:45:05.550"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230711 08:44:57.248" endtime="20230711 08:45:05.551"/>
</test>
<test id="s1-s21-t3" name="Setup credentials for S3" line="52">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:45:05.557" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:45:06.168" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:45:06.168" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:45:05.554" endtime="20230711 08:45:06.168"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:45:06.169" level="INFO"/>
<status status="PASS" starttime="20230711 08:45:06.168" endtime="20230711 08:45:06.169"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:45:06.170" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:45:06.169" endtime="20230711 08:45:06.170"/>
</kw>
<status status="PASS" starttime="20230711 08:45:05.554" endtime="20230711 08:45:06.170"/>
</kw>
<msg timestamp="20230711 08:45:06.171" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:45:05.554" endtime="20230711 08:45:06.171"/>
</kw>
<status status="PASS" starttime="20230711 08:45:05.553" endtime="20230711 08:45:06.171"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:45:06.176" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:45:06.770" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:45:06.770" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:45:06.173" endtime="20230711 08:45:06.770"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:45:06.771" level="INFO"/>
<status status="PASS" starttime="20230711 08:45:06.770" endtime="20230711 08:45:06.771"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:45:06.772" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:45:06.772" endtime="20230711 08:45:06.772"/>
</kw>
<status status="PASS" starttime="20230711 08:45:06.172" endtime="20230711 08:45:06.772"/>
</kw>
<msg timestamp="20230711 08:45:06.772" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:45:06.172" endtime="20230711 08:45:06.773"/>
</kw>
<status status="PASS" starttime="20230711 08:45:06.171" endtime="20230711 08:45:06.773"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:45:06.777" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:45:07.449" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:45:07.449" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:45:06.774" endtime="20230711 08:45:07.449"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:45:07.450" level="INFO"/>
<status status="PASS" starttime="20230711 08:45:07.450" endtime="20230711 08:45:07.450"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:45:07.451" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:45:07.451" endtime="20230711 08:45:07.451"/>
</kw>
<status status="PASS" starttime="20230711 08:45:06.774" endtime="20230711 08:45:07.452"/>
</kw>
<msg timestamp="20230711 08:45:07.452" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:45:06.773" endtime="20230711 08:45:07.452"/>
</kw>
<status status="PASS" starttime="20230711 08:45:06.773" endtime="20230711 08:45:07.452"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:45:07.456" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:45:08.012" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:45:08.012" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:45:07.453" endtime="20230711 08:45:08.012"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:45:08.014" level="INFO"/>
<status status="PASS" starttime="20230711 08:45:08.013" endtime="20230711 08:45:08.015"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:45:08.015" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:45:08.015" endtime="20230711 08:45:08.016"/>
</kw>
<status status="PASS" starttime="20230711 08:45:07.453" endtime="20230711 08:45:08.016"/>
</kw>
<msg timestamp="20230711 08:45:08.016" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:45:07.453" endtime="20230711 08:45:08.016"/>
</kw>
<status status="PASS" starttime="20230711 08:45:07.452" endtime="20230711 08:45:08.016"/>
</kw>
<status status="PASS" starttime="20230711 08:45:05.553" endtime="20230711 08:45:08.017"/>
</kw>
<status status="PASS" starttime="20230711 08:45:05.553" endtime="20230711 08:45:08.017"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230711 08:45:05.552" endtime="20230711 08:45:08.017"/>
</test>
<test id="s1-s21-t4" name="Try to create a bucket using S3 API" line="56">
<kw name="Create bucket with name" library="commonawslib">
<var>${output}</var>
<arg>${PREFIX}-bucket</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:45:08.025" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:45:08.853" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:45:08.853" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230711 08:45:08.022" endtime="20230711 08:45:08.853"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:45:08.855" level="INFO">{
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230711 08:45:08.854" endtime="20230711 08:45:08.855"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:45:08.856" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:45:08.855" endtime="20230711 08:45:08.856"/>
</kw>
<status status="PASS" starttime="20230711 08:45:08.022" endtime="20230711 08:45:08.856"/>
</kw>
<msg timestamp="20230711 08:45:08.857" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:45:08.022" endtime="20230711 08:45:08.857"/>
</kw>
<msg timestamp="20230711 08:45:08.857" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230711 08:45:08.021" endtime="20230711 08:45:08.857"/>
</kw>
<msg timestamp="20230711 08:45:08.857" level="INFO">${result} = {
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230711 08:45:08.020" endtime="20230711 08:45:08.857"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:45:08.858" endtime="20230711 08:45:08.858"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:45:08.858" endtime="20230711 08:45:08.859"/>
</kw>
<msg timestamp="20230711 08:45:08.859" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20230711 08:45:08.020" endtime="20230711 08:45:08.859"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230711 08:45:08.859" endtime="20230711 08:45:08.860"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230711 08:45:08.019" endtime="20230711 08:45:08.860"/>
</test>
<test id="s1-s21-t5" name="Create key using S3 API" line="61">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using S3 API" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:45:08.866" level="INFO">Running command 'echo "old1: key created using S3 API" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230711 08:45:08.868" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:45:08.868" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:45:08.863" endtime="20230711 08:45:08.868"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:45:08.869" level="INFO"/>
<status status="PASS" starttime="20230711 08:45:08.868" endtime="20230711 08:45:08.869"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:45:08.870" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:45:08.869" endtime="20230711 08:45:08.870"/>
</kw>
<status status="PASS" starttime="20230711 08:45:08.862" endtime="20230711 08:45:08.870"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>put-object --bucket ${PREFIX}-bucket --key key2-s3api --body /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:45:08.874" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket old1-bucket --key key2-s3api --body /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:45:10.484" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:45:10.484" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:45:08.872" endtime="20230711 08:45:10.484"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:45:10.486" level="INFO"/>
<status status="PASS" starttime="20230711 08:45:10.485" endtime="20230711 08:45:10.486"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:45:10.486" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:45:10.486" endtime="20230711 08:45:10.487"/>
</kw>
<msg timestamp="20230711 08:45:10.487" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:45:08.871" endtime="20230711 08:45:10.487"/>
</kw>
<msg timestamp="20230711 08:45:10.487" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:45:08.871" endtime="20230711 08:45:10.487"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:45:10.487" endtime="20230711 08:45:10.488"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:45:10.491" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:45:10.494" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:45:10.494" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:45:10.489" endtime="20230711 08:45:10.495"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:45:10.496" level="INFO"/>
<status status="PASS" starttime="20230711 08:45:10.495" endtime="20230711 08:45:10.496"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:45:10.497" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:45:10.496" endtime="20230711 08:45:10.497"/>
</kw>
<status status="PASS" starttime="20230711 08:45:10.488" endtime="20230711 08:45:10.497"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230711 08:45:08.861" endtime="20230711 08:45:10.498"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230711 08:44:48.636" endtime="20230711 08:45:10.500"/>
</suite>
<suite id="s1-s22" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s22-t1" name="Create a volume and bucket" line="28">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:45:14.079" level="INFO">Running command 'ozone sh volume create new1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:45:18.193" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:45:18.193" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:45:14.074" endtime="20230711 08:45:18.193"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:45:18.195" level="INFO"/>
<status status="PASS" starttime="20230711 08:45:18.194" endtime="20230711 08:45:18.195"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:45:18.196" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:45:18.195" endtime="20230711 08:45:18.196"/>
</kw>
<status status="PASS" starttime="20230711 08:45:14.074" endtime="20230711 08:45:18.196"/>
</kw>
<msg timestamp="20230711 08:45:18.196" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:45:14.073" endtime="20230711 08:45:18.196"/>
</kw>
<msg timestamp="20230711 08:45:18.197" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:45:14.073" endtime="20230711 08:45:18.197"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:45:18.197" endtime="20230711 08:45:18.197"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:45:18.202" level="INFO">Running command 'ozone sh bucket create /new1-volume/new1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:45:22.430" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:45:22.430" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:45:18.199" endtime="20230711 08:45:22.430"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:45:22.431" level="INFO"/>
<status status="PASS" starttime="20230711 08:45:22.431" endtime="20230711 08:45:22.431"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:45:22.432" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:45:22.432" endtime="20230711 08:45:22.432"/>
</kw>
<status status="PASS" starttime="20230711 08:45:18.198" endtime="20230711 08:45:22.433"/>
</kw>
<msg timestamp="20230711 08:45:22.433" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:45:18.198" endtime="20230711 08:45:22.433"/>
</kw>
<msg timestamp="20230711 08:45:22.433" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:45:18.198" endtime="20230711 08:45:22.433"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:45:22.434" endtime="20230711 08:45:22.434"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230711 08:45:14.072" endtime="20230711 08:45:22.434"/>
</test>
<test id="s1-s22-t2" name="Create key" line="35">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:45:22.441" level="INFO">Running command 'echo "new1: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230711 08:45:22.443" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:45:22.443" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:45:22.438" endtime="20230711 08:45:22.443"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:45:22.445" level="INFO"/>
<status status="PASS" starttime="20230711 08:45:22.444" endtime="20230711 08:45:22.445"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:45:22.445" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:45:22.445" endtime="20230711 08:45:22.446"/>
</kw>
<status status="PASS" starttime="20230711 08:45:22.437" endtime="20230711 08:45:22.446"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:45:22.450" level="INFO">Running command 'ozone sh key put /new1-volume/new1-bucket/new1-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:45:29.408" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:45:29.408" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:45:22.448" endtime="20230711 08:45:29.408"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:45:29.410" level="INFO"/>
<status status="PASS" starttime="20230711 08:45:29.409" endtime="20230711 08:45:29.410"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:45:29.410" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:45:29.410" endtime="20230711 08:45:29.411"/>
</kw>
<status status="PASS" starttime="20230711 08:45:22.447" endtime="20230711 08:45:29.411"/>
</kw>
<msg timestamp="20230711 08:45:29.411" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:45:22.447" endtime="20230711 08:45:29.411"/>
</kw>
<msg timestamp="20230711 08:45:29.411" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:45:22.446" endtime="20230711 08:45:29.411"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:45:29.411" endtime="20230711 08:45:29.412"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:45:29.415" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:45:29.418" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:45:29.418" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:45:29.412" endtime="20230711 08:45:29.418"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:45:29.419" level="INFO"/>
<status status="PASS" starttime="20230711 08:45:29.419" endtime="20230711 08:45:29.419"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:45:29.420" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:45:29.420" endtime="20230711 08:45:29.420"/>
</kw>
<status status="PASS" starttime="20230711 08:45:29.412" endtime="20230711 08:45:29.421"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230711 08:45:22.436" endtime="20230711 08:45:29.421"/>
</test>
<test id="s1-s22-t3" name="Create a bucket in s3v volume" line="41">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /s3v/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:45:29.427" level="INFO">Running command 'ozone sh bucket create /s3v/new1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:45:33.335" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:45:33.336" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:45:29.424" endtime="20230711 08:45:33.336"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:45:33.337" level="INFO"/>
<status status="PASS" starttime="20230711 08:45:33.336" endtime="20230711 08:45:33.338"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:45:33.339" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:45:33.338" endtime="20230711 08:45:33.339"/>
</kw>
<status status="PASS" starttime="20230711 08:45:29.424" endtime="20230711 08:45:33.340"/>
</kw>
<msg timestamp="20230711 08:45:33.340" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:45:29.423" endtime="20230711 08:45:33.340"/>
</kw>
<msg timestamp="20230711 08:45:33.340" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:45:29.423" endtime="20230711 08:45:33.340"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:45:33.340" endtime="20230711 08:45:33.341"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230711 08:45:29.422" endtime="20230711 08:45:33.341"/>
</test>
<test id="s1-s22-t4" name="Create key in the bucket in s3v volume" line="46">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: another key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:45:33.348" level="INFO">Running command 'echo "new1: another key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230711 08:45:33.351" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:45:33.351" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:45:33.345" endtime="20230711 08:45:33.351"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:45:33.352" level="INFO"/>
<status status="PASS" starttime="20230711 08:45:33.352" endtime="20230711 08:45:33.353"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:45:33.353" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:45:33.353" endtime="20230711 08:45:33.354"/>
</kw>
<status status="PASS" starttime="20230711 08:45:33.344" endtime="20230711 08:45:33.354"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /s3v/${PREFIX}-bucket/key1-shell /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:45:33.360" level="INFO">Running command 'ozone sh key put /s3v/new1-bucket/key1-shell /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:45:40.300" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:45:40.300" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:45:33.357" endtime="20230711 08:45:40.300"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:45:40.302" level="INFO"/>
<status status="PASS" starttime="20230711 08:45:40.301" endtime="20230711 08:45:40.302"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:45:40.303" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:45:40.302" endtime="20230711 08:45:40.303"/>
</kw>
<status status="PASS" starttime="20230711 08:45:33.355" endtime="20230711 08:45:40.303"/>
</kw>
<msg timestamp="20230711 08:45:40.303" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:45:33.355" endtime="20230711 08:45:40.304"/>
</kw>
<msg timestamp="20230711 08:45:40.304" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:45:33.354" endtime="20230711 08:45:40.304"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:45:40.304" endtime="20230711 08:45:40.305"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:45:40.309" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:45:40.311" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:45:40.311" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:45:40.306" endtime="20230711 08:45:40.311"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:45:40.312" level="INFO"/>
<status status="PASS" starttime="20230711 08:45:40.312" endtime="20230711 08:45:40.312"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:45:40.313" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:45:40.312" endtime="20230711 08:45:40.313"/>
</kw>
<status status="PASS" starttime="20230711 08:45:40.305" endtime="20230711 08:45:40.313"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230711 08:45:33.343" endtime="20230711 08:45:40.313"/>
</test>
<test id="s1-s22-t5" name="Setup credentials for S3" line="52">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:45:40.319" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:45:40.935" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:45:40.935" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:45:40.317" endtime="20230711 08:45:40.935"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:45:40.936" level="INFO"/>
<status status="PASS" starttime="20230711 08:45:40.936" endtime="20230711 08:45:40.936"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:45:40.937" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:45:40.937" endtime="20230711 08:45:40.937"/>
</kw>
<status status="PASS" starttime="20230711 08:45:40.316" endtime="20230711 08:45:40.937"/>
</kw>
<msg timestamp="20230711 08:45:40.937" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:45:40.316" endtime="20230711 08:45:40.938"/>
</kw>
<status status="PASS" starttime="20230711 08:45:40.316" endtime="20230711 08:45:40.938"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:45:40.941" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:45:41.564" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:45:41.564" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:45:40.939" endtime="20230711 08:45:41.564"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:45:41.565" level="INFO"/>
<status status="PASS" starttime="20230711 08:45:41.564" endtime="20230711 08:45:41.565"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:45:41.566" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:45:41.566" endtime="20230711 08:45:41.566"/>
</kw>
<status status="PASS" starttime="20230711 08:45:40.939" endtime="20230711 08:45:41.566"/>
</kw>
<msg timestamp="20230711 08:45:41.566" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:45:40.938" endtime="20230711 08:45:41.567"/>
</kw>
<status status="PASS" starttime="20230711 08:45:40.938" endtime="20230711 08:45:41.567"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:45:41.572" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:45:42.131" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:45:42.132" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:45:41.568" endtime="20230711 08:45:42.132"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:45:42.133" level="INFO"/>
<status status="PASS" starttime="20230711 08:45:42.132" endtime="20230711 08:45:42.133"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:45:42.134" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:45:42.133" endtime="20230711 08:45:42.134"/>
</kw>
<status status="PASS" starttime="20230711 08:45:41.568" endtime="20230711 08:45:42.134"/>
</kw>
<msg timestamp="20230711 08:45:42.134" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:45:41.567" endtime="20230711 08:45:42.134"/>
</kw>
<status status="PASS" starttime="20230711 08:45:41.567" endtime="20230711 08:45:42.135"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:45:42.139" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:45:42.785" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:45:42.786" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:45:42.136" endtime="20230711 08:45:42.786"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:45:42.787" level="INFO"/>
<status status="PASS" starttime="20230711 08:45:42.786" endtime="20230711 08:45:42.787"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:45:42.788" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:45:42.787" endtime="20230711 08:45:42.788"/>
</kw>
<status status="PASS" starttime="20230711 08:45:42.136" endtime="20230711 08:45:42.788"/>
</kw>
<msg timestamp="20230711 08:45:42.788" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:45:42.135" endtime="20230711 08:45:42.789"/>
</kw>
<status status="PASS" starttime="20230711 08:45:42.135" endtime="20230711 08:45:42.789"/>
</kw>
<status status="PASS" starttime="20230711 08:45:40.315" endtime="20230711 08:45:42.789"/>
</kw>
<status status="PASS" starttime="20230711 08:45:40.315" endtime="20230711 08:45:42.789"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230711 08:45:40.314" endtime="20230711 08:45:42.789"/>
</test>
<test id="s1-s22-t6" name="Try to create a bucket using S3 API" line="56">
<kw name="Create bucket with name" library="commonawslib">
<var>${output}</var>
<arg>${PREFIX}-bucket</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:45:42.797" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket new1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:45:43.681" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:45:43.681" level="INFO">${output} = {
    "Location": "http://s3g:9878/new1-bucket"
}</msg>
<status status="PASS" starttime="20230711 08:45:42.794" endtime="20230711 08:45:43.681"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:45:43.683" level="INFO">{
    "Location": "http://s3g:9878/new1-bucket"
}</msg>
<status status="PASS" starttime="20230711 08:45:43.682" endtime="20230711 08:45:43.683"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:45:43.684" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:45:43.683" endtime="20230711 08:45:43.684"/>
</kw>
<status status="PASS" starttime="20230711 08:45:42.793" endtime="20230711 08:45:43.684"/>
</kw>
<msg timestamp="20230711 08:45:43.685" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:45:42.793" endtime="20230711 08:45:43.685"/>
</kw>
<msg timestamp="20230711 08:45:43.685" level="INFO">${output} = {
    "Location": "http://s3g:9878/new1-bucket"
}</msg>
<status status="PASS" starttime="20230711 08:45:42.792" endtime="20230711 08:45:43.685"/>
</kw>
<msg timestamp="20230711 08:45:43.685" level="INFO">${result} = {
    "Location": "http://s3g:9878/new1-bucket"
}</msg>
<status status="PASS" starttime="20230711 08:45:42.792" endtime="20230711 08:45:43.686"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:45:43.686" endtime="20230711 08:45:43.686"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:45:43.686" endtime="20230711 08:45:43.687"/>
</kw>
<msg timestamp="20230711 08:45:43.687" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20230711 08:45:42.791" endtime="20230711 08:45:43.687"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230711 08:45:43.687" endtime="20230711 08:45:43.688"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230711 08:45:42.790" endtime="20230711 08:45:43.688"/>
</test>
<test id="s1-s22-t7" name="Create key using S3 API" line="61">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using S3 API" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:45:43.694" level="INFO">Running command 'echo "new1: key created using S3 API" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230711 08:45:43.697" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:45:43.697" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:45:43.691" endtime="20230711 08:45:43.697"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:45:43.698" level="INFO"/>
<status status="PASS" starttime="20230711 08:45:43.697" endtime="20230711 08:45:43.698"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:45:43.699" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:45:43.698" endtime="20230711 08:45:43.699"/>
</kw>
<status status="PASS" starttime="20230711 08:45:43.690" endtime="20230711 08:45:43.700"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>put-object --bucket ${PREFIX}-bucket --key key2-s3api --body /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:45:43.705" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket new1-bucket --key key2-s3api --body /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:45:44.751" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:45:44.751" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:45:43.702" endtime="20230711 08:45:44.751"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:45:44.752" level="INFO"/>
<status status="PASS" starttime="20230711 08:45:44.751" endtime="20230711 08:45:44.752"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:45:44.757" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:45:44.753" endtime="20230711 08:45:44.757"/>
</kw>
<msg timestamp="20230711 08:45:44.758" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:45:43.701" endtime="20230711 08:45:44.758"/>
</kw>
<msg timestamp="20230711 08:45:44.758" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:45:43.700" endtime="20230711 08:45:44.758"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:45:44.758" endtime="20230711 08:45:44.759"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:45:44.762" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:45:44.765" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:45:44.765" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:45:44.759" endtime="20230711 08:45:44.765"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:45:44.767" level="INFO"/>
<status status="PASS" starttime="20230711 08:45:44.766" endtime="20230711 08:45:44.767"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:45:44.767" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:45:44.767" endtime="20230711 08:45:44.768"/>
</kw>
<status status="PASS" starttime="20230711 08:45:44.759" endtime="20230711 08:45:44.768"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230711 08:45:43.689" endtime="20230711 08:45:44.768"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230711 08:45:13.970" endtime="20230711 08:45:44.770"/>
</suite>
<suite id="s1-s23" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s23-t1" name="Read data from previously created key" line="28">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230711 08:45:48.278" level="INFO">${random} = 07562</msg>
<status status="PASS" starttime="20230711 08:45:48.277" endtime="20230711 08:45:48.278"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:45:48.284" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-07562 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:45:55.040" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:45:55.040" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:45:48.280" endtime="20230711 08:45:55.040"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:45:55.042" level="INFO"/>
<status status="PASS" starttime="20230711 08:45:55.041" endtime="20230711 08:45:55.043"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:45:55.044" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:45:55.043" endtime="20230711 08:45:55.044"/>
</kw>
<status status="PASS" starttime="20230711 08:45:48.279" endtime="20230711 08:45:55.045"/>
</kw>
<msg timestamp="20230711 08:45:55.045" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:45:48.278" endtime="20230711 08:45:55.045"/>
</kw>
<msg timestamp="20230711 08:45:55.046" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:45:48.278" endtime="20230711 08:45:55.046"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:45:55.046" endtime="20230711 08:45:55.046"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:45:55.052" level="INFO">Running command 'cat /tmp/key-07562 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:45:55.056" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:45:55.056" level="INFO">${output} = new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230711 08:45:55.048" endtime="20230711 08:45:55.056"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:45:55.058" level="INFO">new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230711 08:45:55.057" endtime="20230711 08:45:55.058"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:45:55.059" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:45:55.058" endtime="20230711 08:45:55.059"/>
</kw>
<msg timestamp="20230711 08:45:55.059" level="INFO">${output} = new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230711 08:45:55.047" endtime="20230711 08:45:55.059"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:45:55.060" endtime="20230711 08:45:55.060"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:45:55.064" level="INFO">Running command 'rm /tmp/key-07562 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:45:55.067" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:45:55.067" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:45:55.061" endtime="20230711 08:45:55.067"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:45:55.068" level="INFO"/>
<status status="PASS" starttime="20230711 08:45:55.068" endtime="20230711 08:45:55.068"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:45:55.069" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:45:55.069" endtime="20230711 08:45:55.069"/>
</kw>
<status status="PASS" starttime="20230711 08:45:55.060" endtime="20230711 08:45:55.070"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230711 08:45:48.276" endtime="20230711 08:45:55.070"/>
</test>
<test id="s1-s23-t2" name="Setup credentials for S3" line="36">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:45:55.078" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:45:55.631" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:45:55.631" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:45:55.075" endtime="20230711 08:45:55.631"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:45:55.632" level="INFO"/>
<status status="PASS" starttime="20230711 08:45:55.631" endtime="20230711 08:45:55.632"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:45:55.633" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:45:55.632" endtime="20230711 08:45:55.633"/>
</kw>
<status status="PASS" starttime="20230711 08:45:55.074" endtime="20230711 08:45:55.633"/>
</kw>
<msg timestamp="20230711 08:45:55.633" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:45:55.074" endtime="20230711 08:45:55.633"/>
</kw>
<status status="PASS" starttime="20230711 08:45:55.073" endtime="20230711 08:45:55.633"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:45:55.638" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:45:56.225" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:45:56.225" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:45:55.635" endtime="20230711 08:45:56.225"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:45:56.227" level="INFO"/>
<status status="PASS" starttime="20230711 08:45:56.226" endtime="20230711 08:45:56.227"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:45:56.227" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:45:56.227" endtime="20230711 08:45:56.227"/>
</kw>
<status status="PASS" starttime="20230711 08:45:55.634" endtime="20230711 08:45:56.228"/>
</kw>
<msg timestamp="20230711 08:45:56.228" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:45:55.634" endtime="20230711 08:45:56.228"/>
</kw>
<status status="PASS" starttime="20230711 08:45:55.634" endtime="20230711 08:45:56.228"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:45:56.233" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:45:56.806" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:45:56.806" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:45:56.230" endtime="20230711 08:45:56.807"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:45:56.809" level="INFO"/>
<status status="PASS" starttime="20230711 08:45:56.808" endtime="20230711 08:45:56.809"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:45:56.810" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:45:56.810" endtime="20230711 08:45:56.811"/>
</kw>
<status status="PASS" starttime="20230711 08:45:56.229" endtime="20230711 08:45:56.811"/>
</kw>
<msg timestamp="20230711 08:45:56.811" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:45:56.229" endtime="20230711 08:45:56.811"/>
</kw>
<status status="PASS" starttime="20230711 08:45:56.228" endtime="20230711 08:45:56.812"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:45:56.817" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:45:57.443" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:45:57.443" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:45:56.814" endtime="20230711 08:45:57.443"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:45:57.445" level="INFO"/>
<status status="PASS" starttime="20230711 08:45:57.444" endtime="20230711 08:45:57.445"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:45:57.446" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:45:57.445" endtime="20230711 08:45:57.446"/>
</kw>
<status status="PASS" starttime="20230711 08:45:56.813" endtime="20230711 08:45:57.447"/>
</kw>
<msg timestamp="20230711 08:45:57.447" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:45:56.812" endtime="20230711 08:45:57.447"/>
</kw>
<status status="PASS" starttime="20230711 08:45:56.812" endtime="20230711 08:45:57.447"/>
</kw>
<status status="PASS" starttime="20230711 08:45:55.072" endtime="20230711 08:45:57.447"/>
</kw>
<status status="PASS" starttime="20230711 08:45:55.072" endtime="20230711 08:45:57.447"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230711 08:45:55.071" endtime="20230711 08:45:57.448"/>
</test>
<test id="s1-s23-t3" name="Read key created with Ozone Shell using S3 API" line="40">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:45:57.454" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket new1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:45:58.238" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:45:58.238" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 11 Jul 2023 08:45:39 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230711 08:45:57.451" endtime="20230711 08:45:58.238"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:45:58.240" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 11 Jul 2023 08:45:39 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 11 Jul 2023 08:45:58 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230711 08:45:58.239" endtime="20230711 08:45:58.240"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:45:58.241" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:45:58.240" endtime="20230711 08:45:58.241"/>
</kw>
<msg timestamp="20230711 08:45:58.241" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 11 Jul 2023 08:45:39 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230711 08:45:57.450" endtime="20230711 08:45:58.241"/>
</kw>
<msg timestamp="20230711 08:45:58.242" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 11 Jul 2023 08:45:39 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230711 08:45:57.450" endtime="20230711 08:45:58.242"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:45:58.242" endtime="20230711 08:45:58.243"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:45:58.246" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:45:58.249" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:45:58.249" level="INFO">${output} = new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230711 08:45:58.243" endtime="20230711 08:45:58.249"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:45:58.251" level="INFO">new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230711 08:45:58.250" endtime="20230711 08:45:58.251"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:45:58.251" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:45:58.251" endtime="20230711 08:45:58.252"/>
</kw>
<msg timestamp="20230711 08:45:58.252" level="INFO">${output} = new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230711 08:45:58.243" endtime="20230711 08:45:58.252"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:45:58.252" endtime="20230711 08:45:58.253"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:45:58.256" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:45:58.259" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:45:58.259" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:45:58.254" endtime="20230711 08:45:58.259"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:45:58.261" level="INFO"/>
<status status="PASS" starttime="20230711 08:45:58.260" endtime="20230711 08:45:58.261"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:45:58.262" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:45:58.261" endtime="20230711 08:45:58.262"/>
</kw>
<status status="PASS" starttime="20230711 08:45:58.253" endtime="20230711 08:45:58.262"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230711 08:45:57.449" endtime="20230711 08:45:58.263"/>
</test>
<test id="s1-s23-t4" name="Read key created with S3 API using S3 API" line="47">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:45:58.268" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket new1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:45:59.036" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:45:59.036" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 11 Jul 2023 08:45:44 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230711 08:45:58.266" endtime="20230711 08:45:59.036"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:45:59.038" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 11 Jul 2023 08:45:44 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 11 Jul 2023 08:45:58 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230711 08:45:59.037" endtime="20230711 08:45:59.038"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:45:59.039" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:45:59.038" endtime="20230711 08:45:59.039"/>
</kw>
<msg timestamp="20230711 08:45:59.039" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 11 Jul 2023 08:45:44 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230711 08:45:58.265" endtime="20230711 08:45:59.039"/>
</kw>
<msg timestamp="20230711 08:45:59.040" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 11 Jul 2023 08:45:44 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230711 08:45:58.264" endtime="20230711 08:45:59.040"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:45:59.040" endtime="20230711 08:45:59.041"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:45:59.044" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:45:59.047" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:45:59.048" level="INFO">${output} = new1: key created using S3 API</msg>
<status status="PASS" starttime="20230711 08:45:59.042" endtime="20230711 08:45:59.048"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:45:59.049" level="INFO">new1: key created using S3 API</msg>
<status status="PASS" starttime="20230711 08:45:59.048" endtime="20230711 08:45:59.049"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:45:59.050" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:45:59.049" endtime="20230711 08:45:59.050"/>
</kw>
<msg timestamp="20230711 08:45:59.050" level="INFO">${output} = new1: key created using S3 API</msg>
<status status="PASS" starttime="20230711 08:45:59.041" endtime="20230711 08:45:59.050"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:45:59.050" endtime="20230711 08:45:59.051"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:45:59.055" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:45:59.057" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:45:59.057" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:45:59.052" endtime="20230711 08:45:59.057"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:45:59.058" level="INFO"/>
<status status="PASS" starttime="20230711 08:45:59.058" endtime="20230711 08:45:59.058"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:45:59.059" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:45:59.058" endtime="20230711 08:45:59.059"/>
</kw>
<status status="PASS" starttime="20230711 08:45:59.051" endtime="20230711 08:45:59.059"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230711 08:45:58.263" endtime="20230711 08:45:59.060"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230711 08:45:48.192" endtime="20230711 08:45:59.061"/>
</suite>
<suite id="s1-s24" name="Check-Finalization" source="/opt/hadoop/smoketest/upgrade/check-finalization.robot">
<test id="s1-s24-t1" name="Check OM Pre Finalized" line="39">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230711 08:46:02.545" endtime="20230711 08:46:02.546"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:46:02.552" level="INFO">Running command 'ozone admin om finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:46:06.823" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:46:06.823" level="INFO">${output} = FINALIZATION_REQUIRED</msg>
<status status="PASS" starttime="20230711 08:46:02.547" endtime="20230711 08:46:06.823"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:46:06.825" level="INFO">FINALIZATION_REQUIRED</msg>
<status status="PASS" starttime="20230711 08:46:06.824" endtime="20230711 08:46:06.825"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:46:06.826" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:46:06.825" endtime="20230711 08:46:06.826"/>
</kw>
<status status="PASS" starttime="20230711 08:46:02.547" endtime="20230711 08:46:06.826"/>
</kw>
<msg timestamp="20230711 08:46:06.826" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:46:02.547" endtime="20230711 08:46:06.827"/>
</kw>
<msg timestamp="20230711 08:46:06.827" level="INFO">${result} = FINALIZATION_REQUIRED</msg>
<status status="PASS" starttime="20230711 08:46:02.546" endtime="20230711 08:46:06.827"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:46:06.827" level="INFO">FINALIZATION_REQUIRED</msg>
<status status="PASS" starttime="20230711 08:46:06.827" endtime="20230711 08:46:06.827"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>FINALIZATION_REQUIRED</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20230711 08:46:06.828" endtime="20230711 08:46:06.828"/>
</kw>
<tag>om</tag>
<tag>pre-finalized</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230711 08:46:02.544" endtime="20230711 08:46:06.828"/>
</test>
<test id="s1-s24-t2" name="Check SCM Pre Finalized" line="45">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230711 08:46:06.830" endtime="20230711 08:46:06.831"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:46:06.835" level="INFO">Running command 'ozone admin scm finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:46:11.001" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:46:11.001" level="INFO">${output} = FINALIZATION_REQUIRED</msg>
<status status="PASS" starttime="20230711 08:46:06.832" endtime="20230711 08:46:11.001"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:46:11.003" level="INFO">FINALIZATION_REQUIRED</msg>
<status status="PASS" starttime="20230711 08:46:11.002" endtime="20230711 08:46:11.003"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:46:11.004" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:46:11.003" endtime="20230711 08:46:11.004"/>
</kw>
<status status="PASS" starttime="20230711 08:46:06.832" endtime="20230711 08:46:11.004"/>
</kw>
<msg timestamp="20230711 08:46:11.004" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:46:06.831" endtime="20230711 08:46:11.004"/>
</kw>
<msg timestamp="20230711 08:46:11.005" level="INFO">${result} = FINALIZATION_REQUIRED</msg>
<status status="PASS" starttime="20230711 08:46:06.831" endtime="20230711 08:46:11.005"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:46:11.005" level="INFO">FINALIZATION_REQUIRED</msg>
<status status="PASS" starttime="20230711 08:46:11.005" endtime="20230711 08:46:11.005"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>FINALIZATION_REQUIRED</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20230711 08:46:11.005" endtime="20230711 08:46:11.006"/>
</kw>
<tag>pre-finalized</tag>
<tag>scm</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230711 08:46:06.829" endtime="20230711 08:46:11.006"/>
</test>
<doc>Finalize Upgrade of the Ozone cluster</doc>
<status status="PASS" starttime="20230711 08:46:02.489" endtime="20230711 08:46:11.009"/>
</suite>
<suite id="s1-s25" name="Upgrade-Snapshot-Check" source="/opt/hadoop/smoketest/snapshot/upgrade-snapshot-check.robot">
<test id="s1-s25-t1" name="Attempt to create snapshot when snapshot feature is disabled" line="28">
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>ozone sh volume create snapvolume-2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:46:14.646" level="INFO">Running command 'ozone sh volume create snapvolume-2 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:46:18.701" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:46:18.701" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:46:14.641" endtime="20230711 08:46:18.701"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:46:18.702" level="INFO"/>
<status status="PASS" starttime="20230711 08:46:18.702" endtime="20230711 08:46:18.702"/>
</kw>
<msg timestamp="20230711 08:46:18.703" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:46:14.640" endtime="20230711 08:46:18.703"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:46:18.703" endtime="20230711 08:46:18.703"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /snapvolume-2/snapbucket-1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:46:18.708" level="INFO">Running command 'ozone sh bucket create /snapvolume-2/snapbucket-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:46:22.985" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:46:22.985" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:46:18.705" endtime="20230711 08:46:22.985"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:46:22.986" level="INFO"/>
<status status="PASS" starttime="20230711 08:46:22.985" endtime="20230711 08:46:22.987"/>
</kw>
<msg timestamp="20230711 08:46:22.987" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:46:18.703" endtime="20230711 08:46:22.987"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:46:22.987" endtime="20230711 08:46:22.988"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>ozone sh snapshot create /snapvolume-2/snapbucket-1 snapshot1</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:46:22.992" level="INFO">Running command 'ozone sh snapshot create /snapvolume-2/snapbucket-1 snapshot1 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:46:26.794" level="INFO">${rc} = 255</msg>
<msg timestamp="20230711 08:46:26.794" level="INFO">${output} = NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OMSnapshotCreateRequest.preExecute(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layout ve...</msg>
<status status="PASS" starttime="20230711 08:46:22.989" endtime="20230711 08:46:26.794"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:46:26.795" level="INFO">NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OMSnapshotCreateRequest.preExecute(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layout version is 5. Current Layout version is 3</msg>
<status status="PASS" starttime="20230711 08:46:26.794" endtime="20230711 08:46:26.795"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:46:26.796" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:46:26.796" endtime="20230711 08:46:26.796"/>
</kw>
<msg timestamp="20230711 08:46:26.797" level="INFO">${output} = NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OMSnapshotCreateRequest.preExecute(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layout ve...</msg>
<status status="PASS" starttime="20230711 08:46:22.988" endtime="20230711 08:46:26.797"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>NOT_SUPPORTED_OPERATION</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:46:26.797" endtime="20230711 08:46:26.797"/>
</kw>
<tag>pre-finalized-snapshot-tests</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230711 08:46:14.639" endtime="20230711 08:46:26.797"/>
</test>
<test id="s1-s25-t2" name="Attempt to list snapshot when snapshot feature is disabled" line="36">
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>ozone sh snapshot ls /snapvolume-2/snapbucket-1</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:46:26.803" level="INFO">Running command 'ozone sh snapshot ls /snapvolume-2/snapbucket-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:46:30.392" level="INFO">${rc} = 255</msg>
<msg timestamp="20230711 08:46:30.392" level="INFO">${output} = NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OzoneManagerRequestHandler.getSnapshots(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layo...</msg>
<status status="PASS" starttime="20230711 08:46:26.800" endtime="20230711 08:46:30.393"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:46:30.394" level="INFO">NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OzoneManagerRequestHandler.getSnapshots(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layout version is 5. Current Layout version is 3</msg>
<status status="PASS" starttime="20230711 08:46:30.393" endtime="20230711 08:46:30.394"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:46:30.395" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:46:30.394" endtime="20230711 08:46:30.395"/>
</kw>
<msg timestamp="20230711 08:46:30.395" level="INFO">${output} = NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OzoneManagerRequestHandler.getSnapshots(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layo...</msg>
<status status="PASS" starttime="20230711 08:46:26.799" endtime="20230711 08:46:30.395"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>NOT_SUPPORTED_OPERATION</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:46:30.395" endtime="20230711 08:46:30.396"/>
</kw>
<tag>pre-finalized-snapshot-tests</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230711 08:46:26.798" endtime="20230711 08:46:30.396"/>
</test>
<test id="s1-s25-t3" name="Attempt to snapshotDiff when snapshot feature is disabled" line="40">
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>ozone sh snapshot snapshotDiff /snapvolume-2/snapbucket-1 snapshot1 snapshot2</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:46:30.402" level="INFO">Running command 'ozone sh snapshot snapshotDiff /snapvolume-2/snapbucket-1 snapshot1 snapshot2 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:46:34.004" level="INFO">${rc} = 255</msg>
<msg timestamp="20230711 08:46:34.005" level="INFO">${output} = NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OzoneManagerRequestHandler.snapshotDiff(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layo...</msg>
<status status="PASS" starttime="20230711 08:46:30.399" endtime="20230711 08:46:34.005"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:46:34.006" level="INFO">NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OzoneManagerRequestHandler.snapshotDiff(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layout version is 5. Current Layout version is 3</msg>
<status status="PASS" starttime="20230711 08:46:34.005" endtime="20230711 08:46:34.006"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:46:34.007" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:46:34.006" endtime="20230711 08:46:34.007"/>
</kw>
<msg timestamp="20230711 08:46:34.008" level="INFO">${output} = NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OzoneManagerRequestHandler.snapshotDiff(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layo...</msg>
<status status="PASS" starttime="20230711 08:46:30.398" endtime="20230711 08:46:34.008"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>NOT_SUPPORTED_OPERATION</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:46:34.008" endtime="20230711 08:46:34.008"/>
</kw>
<tag>pre-finalized-snapshot-tests</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230711 08:46:30.397" endtime="20230711 08:46:34.009"/>
</test>
<test id="s1-s25-t4" name="Attempt to delete when snapshot feature is disabled" line="44">
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>ozone sh snapshot delete /snapvolume-2/snapbucket-1 snapshot1</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:46:34.014" level="INFO">Running command 'ozone sh snapshot delete /snapvolume-2/snapbucket-1 snapshot1 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:46:38.203" level="INFO">${rc} = 255</msg>
<msg timestamp="20230711 08:46:38.203" level="INFO">${output} = NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OMSnapshotDeleteRequest.preExecute(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layout ve...</msg>
<status status="PASS" starttime="20230711 08:46:34.011" endtime="20230711 08:46:38.203"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:46:38.205" level="INFO">NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OMSnapshotDeleteRequest.preExecute(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layout version is 5. Current Layout version is 3</msg>
<status status="PASS" starttime="20230711 08:46:38.204" endtime="20230711 08:46:38.205"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:46:38.206" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:46:38.205" endtime="20230711 08:46:38.206"/>
</kw>
<msg timestamp="20230711 08:46:38.206" level="INFO">${output} = NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OMSnapshotDeleteRequest.preExecute(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layout ve...</msg>
<status status="PASS" starttime="20230711 08:46:34.010" endtime="20230711 08:46:38.206"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>NOT_SUPPORTED_OPERATION</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:46:38.206" endtime="20230711 08:46:38.207"/>
</kw>
<tag>pre-finalized-snapshot-tests</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230711 08:46:34.009" endtime="20230711 08:46:38.207"/>
</test>
<doc>Smoketest ozone cluster snapshot feature</doc>
<status status="PASS" starttime="20230711 08:46:14.557" endtime="20230711 08:46:38.209"/>
</suite>
<suite id="s1-s26" name="Prepare" source="/opt/hadoop/smoketest/upgrade/prepare.robot">
<test id="s1-s26-t1" name="Prepare Ozone Manager" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230711 08:46:41.776" endtime="20230711 08:46:41.777"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM prepare is skipped for version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230711 08:46:41.777" endtime="20230711 08:46:41.777"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:46:41.784" level="INFO">Running command 'ozone admin om prepare -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:46:51.516" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:46:51.517" level="INFO">${output} = Ozone Manager Prepare Request successfully returned with Transaction Id : [69].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Cu...</msg>
<status status="PASS" starttime="20230711 08:46:41.779" endtime="20230711 08:46:51.517"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:46:51.518" level="INFO">Ozone Manager Prepare Request successfully returned with Transaction Id : [69].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [69]
OM : [om3], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [69]
OM : [om2], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [69]

OM Preparation successful! 
All OMs are prepared
No new write requests will be allowed until preparation is cancelled or upgrade/downgrade is done.</msg>
<status status="PASS" starttime="20230711 08:46:51.517" endtime="20230711 08:46:51.518"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:46:51.519" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:46:51.518" endtime="20230711 08:46:51.519"/>
</kw>
<status status="PASS" starttime="20230711 08:46:41.778" endtime="20230711 08:46:51.519"/>
</kw>
<msg timestamp="20230711 08:46:51.519" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:46:41.778" endtime="20230711 08:46:51.520"/>
</kw>
<msg timestamp="20230711 08:46:51.520" level="INFO">${result} = Ozone Manager Prepare Request successfully returned with Transaction Id : [69].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Cu...</msg>
<status status="PASS" starttime="20230711 08:46:41.778" endtime="20230711 08:46:51.520"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:46:51.521" endtime="20230711 08:46:51.521"/>
</kw>
<status status="PASS" starttime="20230711 08:46:51.520" endtime="20230711 08:46:51.521"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230711 08:46:41.775" endtime="20230711 08:46:51.521"/>
</test>
<doc>Prepares OMs</doc>
<status status="PASS" starttime="20230711 08:46:41.716" endtime="20230711 08:46:51.523"/>
</suite>
<suite id="s1-s27" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s27-t1" name="Read data from previously created key" line="28">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230711 08:44:26.704" level="INFO">${random} = 01158</msg>
<status status="PASS" starttime="20230711 08:44:26.703" endtime="20230711 08:44:26.704"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:44:26.711" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-01158 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:44:34.629" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:44:34.629" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:44:26.706" endtime="20230711 08:44:34.629"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:44:34.631" level="INFO"/>
<status status="PASS" starttime="20230711 08:44:34.630" endtime="20230711 08:44:34.631"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:44:34.631" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:44:34.631" endtime="20230711 08:44:34.631"/>
</kw>
<status status="PASS" starttime="20230711 08:44:26.705" endtime="20230711 08:44:34.632"/>
</kw>
<msg timestamp="20230711 08:44:34.632" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:44:26.705" endtime="20230711 08:44:34.632"/>
</kw>
<msg timestamp="20230711 08:44:34.632" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:44:26.704" endtime="20230711 08:44:34.632"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:44:34.632" endtime="20230711 08:44:34.633"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:44:34.636" level="INFO">Running command 'cat /tmp/key-01158 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:44:34.639" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:44:34.639" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230711 08:44:34.634" endtime="20230711 08:44:34.639"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:44:34.641" level="INFO">old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230711 08:44:34.640" endtime="20230711 08:44:34.641"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:44:34.642" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:44:34.642" endtime="20230711 08:44:34.642"/>
</kw>
<msg timestamp="20230711 08:44:34.643" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230711 08:44:34.633" endtime="20230711 08:44:34.643"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:44:34.643" endtime="20230711 08:44:34.644"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:44:34.647" level="INFO">Running command 'rm /tmp/key-01158 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:44:34.651" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:44:34.651" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:44:34.645" endtime="20230711 08:44:34.651"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:44:34.652" level="INFO"/>
<status status="PASS" starttime="20230711 08:44:34.651" endtime="20230711 08:44:34.652"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:44:34.653" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:44:34.653" endtime="20230711 08:44:34.653"/>
</kw>
<status status="PASS" starttime="20230711 08:44:34.644" endtime="20230711 08:44:34.654"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230711 08:44:26.702" endtime="20230711 08:44:34.654"/>
</test>
<test id="s1-s27-t2" name="Setup credentials for S3" line="36">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:44:34.661" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:44:35.745" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:44:35.745" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:44:34.658" endtime="20230711 08:44:35.745"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:44:35.746" level="INFO"/>
<status status="PASS" starttime="20230711 08:44:35.746" endtime="20230711 08:44:35.747"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:44:35.747" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:44:35.747" endtime="20230711 08:44:35.747"/>
</kw>
<status status="PASS" starttime="20230711 08:44:34.658" endtime="20230711 08:44:35.748"/>
</kw>
<msg timestamp="20230711 08:44:35.748" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:44:34.657" endtime="20230711 08:44:35.748"/>
</kw>
<status status="PASS" starttime="20230711 08:44:34.657" endtime="20230711 08:44:35.748"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:44:35.752" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:44:36.381" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:44:36.381" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:44:35.749" endtime="20230711 08:44:36.381"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:44:36.383" level="INFO"/>
<status status="PASS" starttime="20230711 08:44:36.382" endtime="20230711 08:44:36.383"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:44:36.384" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:44:36.383" endtime="20230711 08:44:36.384"/>
</kw>
<status status="PASS" starttime="20230711 08:44:35.749" endtime="20230711 08:44:36.384"/>
</kw>
<msg timestamp="20230711 08:44:36.385" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:44:35.749" endtime="20230711 08:44:36.385"/>
</kw>
<status status="PASS" starttime="20230711 08:44:35.748" endtime="20230711 08:44:36.385"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:44:36.389" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:44:37.044" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:44:37.044" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:44:36.387" endtime="20230711 08:44:37.044"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:44:37.045" level="INFO"/>
<status status="PASS" starttime="20230711 08:44:37.044" endtime="20230711 08:44:37.045"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:44:37.046" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:44:37.046" endtime="20230711 08:44:37.046"/>
</kw>
<status status="PASS" starttime="20230711 08:44:36.386" endtime="20230711 08:44:37.046"/>
</kw>
<msg timestamp="20230711 08:44:37.046" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:44:36.386" endtime="20230711 08:44:37.047"/>
</kw>
<status status="PASS" starttime="20230711 08:44:36.385" endtime="20230711 08:44:37.047"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:44:37.053" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:44:37.770" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:44:37.770" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:44:37.048" endtime="20230711 08:44:37.770"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:44:37.771" level="INFO"/>
<status status="PASS" starttime="20230711 08:44:37.770" endtime="20230711 08:44:37.771"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:44:37.772" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:44:37.772" endtime="20230711 08:44:37.772"/>
</kw>
<status status="PASS" starttime="20230711 08:44:37.048" endtime="20230711 08:44:37.772"/>
</kw>
<msg timestamp="20230711 08:44:37.772" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230711 08:44:37.048" endtime="20230711 08:44:37.773"/>
</kw>
<status status="PASS" starttime="20230711 08:44:37.047" endtime="20230711 08:44:37.773"/>
</kw>
<status status="PASS" starttime="20230711 08:44:34.656" endtime="20230711 08:44:37.773"/>
</kw>
<status status="PASS" starttime="20230711 08:44:34.656" endtime="20230711 08:44:37.773"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230711 08:44:34.655" endtime="20230711 08:44:37.774"/>
</test>
<test id="s1-s27-t3" name="Read key created with Ozone Shell using S3 API" line="40">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:44:37.780" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:44:44.151" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:44:44.151" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 11 Jul 2023 08:41:21 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230711 08:44:37.778" endtime="20230711 08:44:44.151"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:44:44.153" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 11 Jul 2023 08:41:21 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 11 Jul 2023 08:44:38 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230711 08:44:44.152" endtime="20230711 08:44:44.153"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:44:44.154" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:44:44.154" endtime="20230711 08:44:44.154"/>
</kw>
<msg timestamp="20230711 08:44:44.155" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 11 Jul 2023 08:41:21 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230711 08:44:37.777" endtime="20230711 08:44:44.155"/>
</kw>
<msg timestamp="20230711 08:44:44.155" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 11 Jul 2023 08:41:21 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230711 08:44:37.777" endtime="20230711 08:44:44.155"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:44:44.155" endtime="20230711 08:44:44.156"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:44:44.159" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:44:44.162" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:44:44.162" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230711 08:44:44.156" endtime="20230711 08:44:44.162"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:44:44.164" level="INFO">old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230711 08:44:44.163" endtime="20230711 08:44:44.164"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:44:44.165" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:44:44.164" endtime="20230711 08:44:44.165"/>
</kw>
<msg timestamp="20230711 08:44:44.165" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230711 08:44:44.156" endtime="20230711 08:44:44.165"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:44:44.165" endtime="20230711 08:44:44.166"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:44:44.169" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:44:44.179" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:44:44.179" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:44:44.167" endtime="20230711 08:44:44.179"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:44:44.180" level="INFO"/>
<status status="PASS" starttime="20230711 08:44:44.179" endtime="20230711 08:44:44.180"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:44:44.181" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:44:44.180" endtime="20230711 08:44:44.181"/>
</kw>
<status status="PASS" starttime="20230711 08:44:44.166" endtime="20230711 08:44:44.181"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230711 08:44:37.776" endtime="20230711 08:44:44.182"/>
</test>
<test id="s1-s27-t4" name="Read key created with S3 API using S3 API" line="47">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:44:44.189" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:44:45.258" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:44:45.258" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 11 Jul 2023 08:41:28 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230711 08:44:44.186" endtime="20230711 08:44:45.258"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:44:45.260" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 11 Jul 2023 08:41:28 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 11 Jul 2023 08:44:44 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230711 08:44:45.259" endtime="20230711 08:44:45.260"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:44:45.261" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:44:45.260" endtime="20230711 08:44:45.261"/>
</kw>
<msg timestamp="20230711 08:44:45.261" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 11 Jul 2023 08:41:28 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230711 08:44:44.185" endtime="20230711 08:44:45.262"/>
</kw>
<msg timestamp="20230711 08:44:45.262" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 11 Jul 2023 08:41:28 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230711 08:44:44.185" endtime="20230711 08:44:45.262"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:44:45.262" endtime="20230711 08:44:45.263"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:44:45.266" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:44:45.270" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:44:45.270" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20230711 08:44:45.264" endtime="20230711 08:44:45.270"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:44:45.271" level="INFO">old1: key created using S3 API</msg>
<status status="PASS" starttime="20230711 08:44:45.270" endtime="20230711 08:44:45.271"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:44:45.272" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:44:45.271" endtime="20230711 08:44:45.272"/>
</kw>
<msg timestamp="20230711 08:44:45.272" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20230711 08:44:45.263" endtime="20230711 08:44:45.272"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230711 08:44:45.273" endtime="20230711 08:44:45.273"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230711 08:44:45.276" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230711 08:44:45.280" level="INFO">${rc} = 0</msg>
<msg timestamp="20230711 08:44:45.280" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230711 08:44:45.274" endtime="20230711 08:44:45.280"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230711 08:44:45.281" level="INFO"/>
<status status="PASS" starttime="20230711 08:44:45.280" endtime="20230711 08:44:45.281"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230711 08:44:45.282" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230711 08:44:45.281" endtime="20230711 08:44:45.282"/>
</kw>
<status status="PASS" starttime="20230711 08:44:45.273" endtime="20230711 08:44:45.282"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230711 08:44:44.184" endtime="20230711 08:44:45.282"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230711 08:44:26.594" endtime="20230711 08:44:45.284"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="574672"/>
</suite>
<statistics>
<total>
<stat pass="103" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="8" fail="0" skip="0">create-volume-and-bucket</stat>
<stat pass="8" fail="0" skip="0">finalized</stat>
<stat pass="5" fail="0" skip="0">om</stat>
<stat pass="2" fail="0" skip="0">pre-finalized</stat>
<stat pass="4" fail="0" skip="0">pre-finalized-snapshot-tests</stat>
<stat pass="5" fail="0" skip="0">scm</stat>
</tag>
<suite>
<stat pass="103" fail="0" skip="0" id="s1" name="upgrade">upgrade</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1" name="Validate">upgrade.Validate</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2" name="Validate">upgrade.Validate</stat>
<stat pass="7" fail="0" skip="0" id="s1-s3" name="Generate">upgrade.Generate</stat>
<stat pass="4" fail="0" skip="0" id="s1-s4" name="Validate">upgrade.Validate</stat>
<stat pass="5" fail="0" skip="0" id="s1-s5" name="Generate">upgrade.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6" name="Prepare">upgrade.Prepare</stat>
<stat pass="2" fail="0" skip="0" id="s1-s7" name="Check-Finalization">upgrade.Check-Finalization</stat>
<stat pass="7" fail="0" skip="0" id="s1-s8" name="Generate">upgrade.Generate</stat>
<stat pass="4" fail="0" skip="0" id="s1-s9" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s10" name="Prepare">upgrade.Prepare</stat>
<stat pass="2" fail="0" skip="0" id="s1-s11" name="Check-Finalization">upgrade.Check-Finalization</stat>
<stat pass="2" fail="0" skip="0" id="s1-s12" name="Check-Finalization">upgrade.Check-Finalization</stat>
<stat pass="4" fail="0" skip="0" id="s1-s13" name="Validate">upgrade.Validate</stat>
<stat pass="4" fail="0" skip="0" id="s1-s14" name="Validate">upgrade.Validate</stat>
<stat pass="4" fail="0" skip="0" id="s1-s15" name="Validate">upgrade.Validate</stat>
<stat pass="7" fail="0" skip="0" id="s1-s16" name="Generate">upgrade.Generate</stat>
<stat pass="4" fail="0" skip="0" id="s1-s17" name="Validate">upgrade.Validate</stat>
<stat pass="2" fail="0" skip="0" id="s1-s18" name="Check-Finalization">upgrade.Check-Finalization</stat>
<stat pass="6" fail="0" skip="0" id="s1-s19" name="Snapshot-Sh">upgrade.Snapshot-Sh</stat>
<stat pass="2" fail="0" skip="0" id="s1-s20" name="Finalize">upgrade.Finalize</stat>
<stat pass="5" fail="0" skip="0" id="s1-s21" name="Generate">upgrade.Generate</stat>
<stat pass="7" fail="0" skip="0" id="s1-s22" name="Generate">upgrade.Generate</stat>
<stat pass="4" fail="0" skip="0" id="s1-s23" name="Validate">upgrade.Validate</stat>
<stat pass="2" fail="0" skip="0" id="s1-s24" name="Check-Finalization">upgrade.Check-Finalization</stat>
<stat pass="4" fail="0" skip="0" id="s1-s25" name="Upgrade-Snapshot-Check">upgrade.Upgrade-Snapshot-Check</stat>
<stat pass="1" fail="0" skip="0" id="s1-s26" name="Prepare">upgrade.Prepare</stat>
<stat pass="4" fail="0" skip="0" id="s1-s27" name="Validate">upgrade.Validate</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
