<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1 (Python 3.8.10 on linux)" generated="20230706 17:25:21.857" rpa="false" schemaversion="4">
<suite id="s1" name="ozone-topology">
<suite id="s1-s1" name="Cli" source="/opt/hadoop/smoketest/topology/cli.robot">
<test id="s1-s1-t1" name="Run printTopology" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230706 17:20:51.844" level="INFO">Running command 'ozone admin printTopology 2&gt;&amp;1'.</msg>
<msg timestamp="20230706 17:20:57.267" level="INFO">${rc} = 0</msg>
<msg timestamp="20230706 17:20:57.268" level="INFO">${output} = State = HEALTHY
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rac...</msg>
<status status="PASS" starttime="20230706 17:20:51.836" endtime="20230706 17:20:57.268"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230706 17:20:57.269" level="INFO">State = HEALTHY
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2</msg>
<status status="PASS" starttime="20230706 17:20:57.268" endtime="20230706 17:20:57.269"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230706 17:20:57.270" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230706 17:20:57.270" endtime="20230706 17:20:57.270"/>
</kw>
<status status="PASS" starttime="20230706 17:20:51.835" endtime="20230706 17:20:57.271"/>
</kw>
<msg timestamp="20230706 17:20:57.271" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230706 17:20:51.835" endtime="20230706 17:20:57.271"/>
</kw>
<msg timestamp="20230706 17:20:57.271" level="INFO">${output} = State = HEALTHY
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rac...</msg>
<status status="PASS" starttime="20230706 17:20:51.834" endtime="20230706 17:20:57.271"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230706 17:20:57.271" endtime="20230706 17:20:57.272"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230706 17:20:51.833" endtime="20230706 17:20:57.272"/>
</test>
<test id="s1-s1-t2" name="Run printTopology -o" line="30">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology -o</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230706 17:20:57.285" level="INFO">Running command 'ozone admin printTopology -o 2&gt;&amp;1'.</msg>
<msg timestamp="20230706 17:21:01.817" level="INFO">${rc} = 0</msg>
<msg timestamp="20230706 17:21:01.817" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net) IN_SERVICE
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net) IN_SERVICE
 10.5.0.5(ozone-topology_data...</msg>
<status status="PASS" starttime="20230706 17:20:57.282" endtime="20230706 17:21:01.817"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230706 17:21:01.818" level="INFO">State = HEALTHY
Location: /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net) IN_SERVICE
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net) IN_SERVICE
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net) IN_SERVICE
Location: /rack2
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net) IN_SERVICE
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net) IN_SERVICE
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net) IN_SERVICE</msg>
<status status="PASS" starttime="20230706 17:21:01.817" endtime="20230706 17:21:01.818"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230706 17:21:01.819" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230706 17:21:01.819" endtime="20230706 17:21:01.819"/>
</kw>
<status status="PASS" starttime="20230706 17:20:57.282" endtime="20230706 17:21:01.820"/>
</kw>
<msg timestamp="20230706 17:21:01.820" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230706 17:20:57.281" endtime="20230706 17:21:01.820"/>
</kw>
<msg timestamp="20230706 17:21:01.820" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net) IN_SERVICE
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net) IN_SERVICE
 10.5.0.5(ozone-topology_data...</msg>
<status status="PASS" starttime="20230706 17:20:57.281" endtime="20230706 17:21:01.820"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Location: /rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230706 17:21:01.820" endtime="20230706 17:21:01.821"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net) IN_SERVICE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230706 17:21:01.821" endtime="20230706 17:21:01.821"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230706 17:20:57.280" endtime="20230706 17:21:01.822"/>
</test>
<test id="s1-s1-t3" name="Run printTopology --operational-state IN_SERVICE" line="34">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology --operational-state IN_SERVICE</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230706 17:21:01.829" level="INFO">Running command 'ozone admin printTopology --operational-state IN_SERVICE 2&gt;&amp;1'.</msg>
<msg timestamp="20230706 17:21:06.548" level="INFO">${rc} = 0</msg>
<msg timestamp="20230706 17:21:06.548" level="INFO">${output} = State = HEALTHY
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rac...</msg>
<status status="PASS" starttime="20230706 17:21:01.825" endtime="20230706 17:21:06.548"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230706 17:21:06.549" level="INFO">State = HEALTHY
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2</msg>
<status status="PASS" starttime="20230706 17:21:06.548" endtime="20230706 17:21:06.549"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230706 17:21:06.550" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230706 17:21:06.550" endtime="20230706 17:21:06.550"/>
</kw>
<status status="PASS" starttime="20230706 17:21:01.825" endtime="20230706 17:21:06.551"/>
</kw>
<msg timestamp="20230706 17:21:06.551" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230706 17:21:01.824" endtime="20230706 17:21:06.551"/>
</kw>
<msg timestamp="20230706 17:21:06.551" level="INFO">${output} = State = HEALTHY
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rac...</msg>
<status status="PASS" starttime="20230706 17:21:01.824" endtime="20230706 17:21:06.551"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230706 17:21:06.551" endtime="20230706 17:21:06.552"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230706 17:21:01.823" endtime="20230706 17:21:06.552"/>
</test>
<test id="s1-s1-t4" name="Run printTopology --node-state HEALTHY" line="37">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology --node-state HEALTHY</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230706 17:21:06.558" level="INFO">Running command 'ozone admin printTopology --node-state HEALTHY 2&gt;&amp;1'.</msg>
<msg timestamp="20230706 17:21:11.286" level="INFO">${rc} = 0</msg>
<msg timestamp="20230706 17:21:11.287" level="INFO">${output} = State = HEALTHY
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rac...</msg>
<status status="PASS" starttime="20230706 17:21:06.555" endtime="20230706 17:21:11.287"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230706 17:21:11.288" level="INFO">State = HEALTHY
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2</msg>
<status status="PASS" starttime="20230706 17:21:11.287" endtime="20230706 17:21:11.288"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230706 17:21:11.289" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230706 17:21:11.289" endtime="20230706 17:21:11.289"/>
</kw>
<status status="PASS" starttime="20230706 17:21:06.555" endtime="20230706 17:21:11.290"/>
</kw>
<msg timestamp="20230706 17:21:11.290" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230706 17:21:06.555" endtime="20230706 17:21:11.290"/>
</kw>
<msg timestamp="20230706 17:21:11.290" level="INFO">${output} = State = HEALTHY
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rac...</msg>
<status status="PASS" starttime="20230706 17:21:06.554" endtime="20230706 17:21:11.290"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230706 17:21:11.290" endtime="20230706 17:21:11.291"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230706 17:21:06.553" endtime="20230706 17:21:11.291"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230706 17:20:51.772" endtime="20230706 17:21:11.299"/>
</suite>
<suite id="s1-s2" name="Recon" source="/opt/hadoop/smoketest/recon">
<suite id="s1-s2-s1" name="Recon-Api" source="/opt/hadoop/smoketest/recon/recon-api.robot">
<test id="s1-s2-s1-t1" name="Check if Recon picks up OM data" line="61">
<kw name="Execute" library="os">
<arg>ozone sh volume create recon</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230706 17:21:14.571" level="INFO">Running command 'ozone sh volume create recon 2&gt;&amp;1'.</msg>
<msg timestamp="20230706 17:21:19.959" level="INFO">${rc} = 0</msg>
<msg timestamp="20230706 17:21:19.959" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230706 17:21:14.566" endtime="20230706 17:21:19.959"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230706 17:21:19.961" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230706 17:21:19.960" endtime="20230706 17:21:19.961"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230706 17:21:19.961" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230706 17:21:19.961" endtime="20230706 17:21:19.962"/>
</kw>
<status status="PASS" starttime="20230706 17:21:14.566" endtime="20230706 17:21:19.962"/>
</kw>
<msg timestamp="20230706 17:21:19.962" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230706 17:21:14.565" endtime="20230706 17:21:19.962"/>
</kw>
<status status="PASS" starttime="20230706 17:21:14.565" endtime="20230706 17:21:19.963"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create recon/api --layout=LEGACY</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230706 17:21:19.967" level="INFO">Running command 'ozone sh bucket create recon/api --layout=LEGACY 2&gt;&amp;1'.</msg>
<msg timestamp="20230706 17:21:25.130" level="INFO">${rc} = 0</msg>
<msg timestamp="20230706 17:21:25.130" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230706 17:21:19.964" endtime="20230706 17:21:25.130"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230706 17:21:25.131" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230706 17:21:25.130" endtime="20230706 17:21:25.131"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230706 17:21:25.132" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230706 17:21:25.132" endtime="20230706 17:21:25.132"/>
</kw>
<status status="PASS" starttime="20230706 17:21:19.964" endtime="20230706 17:21:25.133"/>
</kw>
<msg timestamp="20230706 17:21:25.133" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230706 17:21:19.963" endtime="20230706 17:21:25.133"/>
</kw>
<status status="PASS" starttime="20230706 17:21:19.963" endtime="20230706 17:21:25.133"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>n=10</arg>
<arg>args=-s 1025 -v recon -b api</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230706 17:21:25.138" level="INFO">Running command 'ozone freon ockg  -t 1 -n10 -p ockg -s 1025 -v recon -b api 2&gt;&amp;1'.</msg>
<msg timestamp="20230706 17:21:35.439" level="INFO">${rc} = 0</msg>
<msg timestamp="20230706 17:21:35.439" level="INFO">${output} = 2023-07-06 17:21:28,110 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-06 17:21:28,278 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230706 17:21:25.135" endtime="20230706 17:21:35.439"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230706 17:21:35.445" level="INFO">2023-07-06 17:21:28,110 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-06 17:21:28,278 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-07-06 17:21:28,278 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-07-06 17:21:28,364 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockg and number-of-tests 10
2023-07-06 17:21:28,459 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-07-06 17:21:29,474 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-07-06 17:21:30,474 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-07-06 17:21:30,723 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-07-06 17:21:31,154 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-07-06 17:21:31,474 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-07-06 17:21:32,476 [Thread-5] INFO freon.ProgressBar: Progress: 20.00 % (2 out of 10)
2023-07-06 17:21:33,476 [Thread-5] INFO freon.ProgressBar: Progress: 30.00 % (3 out of 10)
2023-07-06 17:21:34,477 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (10 out of 10)
2023-07-06 17:21:35,067 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=10, min=123.438193, max=2161.147273, mean=441.51416661653695, stddev=640.1223590637074, median=145.387701, p75=161.054364, p95=2161.147273, p98=2161.147273, p99=2161.147273, p999=2161.147273, mean_rate=1.9407343229623475, m1=2.0, m5=2.0, m15=2.0, rate_unit=events/second, duration_unit=milliseconds
2023-07-06 17:21:35,069 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 7
2023-07-06 17:21:35,069 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-07-06 17:21:35,069 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 10</msg>
<status status="PASS" starttime="20230706 17:21:35.445" endtime="20230706 17:21:35.446"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230706 17:21:35.446" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230706 17:21:35.446" endtime="20230706 17:21:35.447"/>
</kw>
<status status="PASS" starttime="20230706 17:21:25.135" endtime="20230706 17:21:35.447"/>
</kw>
<msg timestamp="20230706 17:21:35.447" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230706 17:21:25.135" endtime="20230706 17:21:35.447"/>
</kw>
<msg timestamp="20230706 17:21:35.448" level="INFO">${result} = 2023-07-06 17:21:28,110 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-06 17:21:28,278 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230706 17:21:25.134" endtime="20230706 17:21:35.448"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230706 17:21:35.448" endtime="20230706 17:21:35.448"/>
</kw>
<status status="PASS" starttime="20230706 17:21:25.133" endtime="20230706 17:21:35.449"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Check if Recon picks up container from OM</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230706 17:21:35.450" endtime="20230706 17:21:35.450"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230706 17:21:35.456" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230706 17:21:35.749" level="INFO">${rc} = 0</msg>
<msg timestamp="20230706 17:21:35.749" level="INFO">${output} = {"data":{"totalCount":2,"prevKey":2,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20230706 17:21:35.453" endtime="20230706 17:21:35.750"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230706 17:21:35.751" level="INFO">{"data":{"totalCount":2,"prevKey":2,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20230706 17:21:35.750" endtime="20230706 17:21:35.751"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230706 17:21:35.752" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230706 17:21:35.751" endtime="20230706 17:21:35.752"/>
</kw>
<status status="PASS" starttime="20230706 17:21:35.452" endtime="20230706 17:21:35.752"/>
</kw>
<msg timestamp="20230706 17:21:35.753" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230706 17:21:35.451" endtime="20230706 17:21:35.753"/>
</kw>
<msg timestamp="20230706 17:21:35.753" level="INFO">${result} = {"data":{"totalCount":2,"prevKey":2,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20230706 17:21:35.451" endtime="20230706 17:21:35.753"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230706 17:21:35.753" endtime="20230706 17:21:35.754"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230706 17:21:35.758" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20230706 17:21:35.797" level="INFO">${rc} = 0</msg>
<msg timestamp="20230706 17:21:35.797" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20230706 17:21:35.756" endtime="20230706 17:21:35.797"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230706 17:21:35.798" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20230706 17:21:35.797" endtime="20230706 17:21:35.798"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230706 17:21:35.799" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230706 17:21:35.799" endtime="20230706 17:21:35.799"/>
</kw>
<status status="PASS" starttime="20230706 17:21:35.755" endtime="20230706 17:21:35.800"/>
</kw>
<msg timestamp="20230706 17:21:35.800" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230706 17:21:35.755" endtime="20230706 17:21:35.800"/>
</kw>
<msg timestamp="20230706 17:21:35.800" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20230706 17:21:35.754" endtime="20230706 17:21:35.800"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230706 17:21:35.801" level="FAIL">'[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20230706 17:21:35.800" endtime="20230706 17:21:35.801"/>
</kw>
<status status="FAIL" starttime="20230706 17:21:35.449" endtime="20230706 17:21:35.802"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230706 17:21:45.803" endtime="20230706 17:21:45.803"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230706 17:21:45.808" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230706 17:21:45.830" level="INFO">${rc} = 0</msg>
<msg timestamp="20230706 17:21:45.830" level="INFO">${output} = {"data":{"totalCount":2,"prevKey":2,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20230706 17:21:45.805" endtime="20230706 17:21:45.830"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230706 17:21:45.831" level="INFO">{"data":{"totalCount":2,"prevKey":2,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20230706 17:21:45.831" endtime="20230706 17:21:45.832"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230706 17:21:45.837" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230706 17:21:45.832" endtime="20230706 17:21:45.837"/>
</kw>
<status status="PASS" starttime="20230706 17:21:45.805" endtime="20230706 17:21:45.839"/>
</kw>
<msg timestamp="20230706 17:21:45.839" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230706 17:21:45.804" endtime="20230706 17:21:45.841"/>
</kw>
<msg timestamp="20230706 17:21:45.841" level="INFO">${result} = {"data":{"totalCount":2,"prevKey":2,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20230706 17:21:45.803" endtime="20230706 17:21:45.843"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230706 17:21:45.843" endtime="20230706 17:21:45.852"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230706 17:21:45.938" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20230706 17:21:45.968" level="INFO">${rc} = 0</msg>
<msg timestamp="20230706 17:21:45.968" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20230706 17:21:45.863" endtime="20230706 17:21:45.968"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230706 17:21:45.973" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20230706 17:21:45.969" endtime="20230706 17:21:45.974"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230706 17:21:45.974" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230706 17:21:45.974" endtime="20230706 17:21:45.974"/>
</kw>
<status status="PASS" starttime="20230706 17:21:45.861" endtime="20230706 17:21:45.975"/>
</kw>
<msg timestamp="20230706 17:21:45.975" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230706 17:21:45.853" endtime="20230706 17:21:45.975"/>
</kw>
<msg timestamp="20230706 17:21:45.975" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20230706 17:21:45.853" endtime="20230706 17:21:45.975"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230706 17:21:45.981" level="FAIL">'[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20230706 17:21:45.975" endtime="20230706 17:21:45.981"/>
</kw>
<status status="FAIL" starttime="20230706 17:21:45.802" endtime="20230706 17:21:45.981"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230706 17:21:55.983" endtime="20230706 17:21:55.983"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230706 17:21:55.989" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230706 17:21:56.006" level="INFO">${rc} = 0</msg>
<msg timestamp="20230706 17:21:56.006" level="INFO">${output} = {"data":{"totalCount":2,"prevKey":2,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20230706 17:21:55.985" endtime="20230706 17:21:56.006"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230706 17:21:56.007" level="INFO">{"data":{"totalCount":2,"prevKey":2,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20230706 17:21:56.007" endtime="20230706 17:21:56.007"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230706 17:21:56.008" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230706 17:21:56.008" endtime="20230706 17:21:56.008"/>
</kw>
<status status="PASS" starttime="20230706 17:21:55.984" endtime="20230706 17:21:56.008"/>
</kw>
<msg timestamp="20230706 17:21:56.009" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230706 17:21:55.984" endtime="20230706 17:21:56.009"/>
</kw>
<msg timestamp="20230706 17:21:56.009" level="INFO">${result} = {"data":{"totalCount":2,"prevKey":2,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20230706 17:21:55.983" endtime="20230706 17:21:56.009"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230706 17:21:56.009" endtime="20230706 17:21:56.010"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230706 17:21:56.013" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20230706 17:21:56.030" level="INFO">${rc} = 0</msg>
<msg timestamp="20230706 17:21:56.031" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1},{"volume":"recon","bucket":"api","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20230706 17:21:56.011" endtime="20230706 17:21:56.031"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230706 17:21:56.032" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1},{"volume":"recon","bucket":"api","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20230706 17:21:56.031" endtime="20230706 17:21:56.032"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230706 17:21:56.033" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230706 17:21:56.032" endtime="20230706 17:21:56.034"/>
</kw>
<status status="PASS" starttime="20230706 17:21:56.011" endtime="20230706 17:21:56.034"/>
</kw>
<msg timestamp="20230706 17:21:56.034" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230706 17:21:56.010" endtime="20230706 17:21:56.034"/>
</kw>
<msg timestamp="20230706 17:21:56.034" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1},{"volume":"recon","bucket":"api","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20230706 17:21:56.010" endtime="20230706 17:21:56.034"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230706 17:21:56.034" endtime="20230706 17:21:56.035"/>
</kw>
<status status="PASS" starttime="20230706 17:21:55.982" endtime="20230706 17:21:56.035"/>
</kw>
<status status="PASS" starttime="20230706 17:21:35.449" endtime="20230706 17:21:56.035"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230706 17:21:14.564" endtime="20230706 17:21:56.035"/>
</test>
<test id="s1-s2-s1-t2" name="Check if Recon picks up DN heartbeats" line="71">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/datanodes</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230706 17:21:56.042" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/datanodes 2&gt;&amp;1'.</msg>
<msg timestamp="20230706 17:21:56.141" level="INFO">${rc} = 0</msg>
<msg timestamp="20230706 17:21:56.141" level="INFO">${output} = {"totalCount":6,"datanodes":[{"uuid":"b2771214-a1e0-4bb8-ad53-d4edba11cbf4","hostname":"ozone-topology_datanode_1_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"stor...</msg>
<status status="PASS" starttime="20230706 17:21:56.040" endtime="20230706 17:21:56.141"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230706 17:21:56.147" level="INFO">{"totalCount":6,"datanodes":[{"uuid":"b2771214-a1e0-4bb8-ad53-d4edba11cbf4","hostname":"ozone-topology_datanode_1_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"storageReport":{"capacity":89297309696,"used":14336,"remaining":19973771264},"pipelines":[{"pipelineID":"efd106df-77cd-4ac1-8db6-6d6d863574e5","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net"},{"pipelineID":"c8a32bea-d89d-4627-ae1a-375e6765ff5f","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net"},{"pipelineID":"2b474cf7-8f16-4fe4-8852-8ae5416e1405","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":2,"version":"1.4.0-SNAPSHOT","setupTime":1688663937077,"revision":"4980c2087b6a32f9f9979c1b97017d191aa4f790","buildDate":"2023-07-06T16:45Z","layoutVersion":7,"networkLocation":"/rack1"},{"uuid":"82673d7e-6e61-4aa3-9559-cc8c689e7347","hostname":"ozone-topology_datanode_4_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"storageReport":{"capacity":89297309696,"used":4096,"remaining":19973877760},"pipelines":[{"pipelineID":"c8a32bea-d89d-4627-ae1a-375e6765ff5f","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net"},{"pipelineID":"41073f60-a123-4cf5-a464-c240127c6d16","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net"},{"pipelineID":"24a6e056-131b-419d-afe4-3ccbd509c3ff","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net"}],"containers":1,"openContainers":1,"leaderCount":1,"version":"1.4.0-SNAPSHOT","setupTime":1688663932895,"revision":"4980c2087b6a32f9f9979c1b97017d191aa4f790","buildDate":"2023-07-06T16:45Z","layoutVersion":7,"networkLocation":"/rack2"},{"uuid":"6c01a338-22b8-44a4-b029-0936c21f398d","hostname":"ozone-topology_datanode_6_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"storageReport":{"capacity":89297309696,"used":14336,"remaining":19973873664},"pipelines":[{"pipelineID":"ba87528b-df8f-458d-8396-2071fae1a37f","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net"},{"pipelineID":"2b474cf7-8f16-4fe4-8852-8ae5416e1405","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net"},{"pipelineID":"41073f60-a123-4cf5-a464-c240127c6d16","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net"}],"containers":1,"openContainers":1,"leaderCount":2,"version":"1.4.0-SNAPSHOT","setupTime":1688663937631,"revision":"4980c2087b6a32f9f9979c1b97017d191aa4f790","buildDate":"2023-07-06T16:45Z","layoutVersion":7,"networkLocation":"/rack2"},{"uuid":"83ed576f-8d42-48e4-8591-b2c222f7ac5a","hostname":"ozone-topology_datanode_3_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"storageReport":{"capacity":89297309696,"used":4096,"remaining":19973758976},"pipelines":[{"pipelineID":"358239fe-51c1-4681-b1a5-ffef540e1e32","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net"},{"pipelineID":"c8a32bea-d89d-4627-ae1a-375e6765ff5f","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net"},{"pipelineID":"41073f60-a123-4cf5-a464-c240127c6d16","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net"}],"containers":1,"openContainers":1,"leaderCount":2,"version":"1.4.0-SNAPSHOT","setupTime":1688663937915,"revision":"4980c2087b6a32f9f9979c1b97017d191aa4f790","buildDate":"2023-07-06T16:45Z","layoutVersion":7,"networkLocation":"/rack1"},{"uuid":"5a77e7f3-9f90-4d92-ae2c-d0667b84ec64","hostname":"ozone-topology_datanode_2_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"storageReport":{"capacity":89297309696,"used":4096,"remaining":19973869568},"pipelines":[{"pipelineID":"232b8831-435c-4d66-886e-5287f7855338","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net"}],"containers":0,"openContainers":0,"leaderCount":1,"version":"1.4.0-SNAPSHOT","setupTime":1688663936220,"revision":"4980c2087b6a32f9f9979c1b97017d191aa4f790","buildDate":"2023-07-06T16:45Z","layoutVersion":7,"networkLocation":"/rack1"},{"uuid":"88fe2230-5799-454c-9cc6-61b1b6d79776","hostname":"ozone-topology_datanode_5_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"storageReport":{"capacity":89297309696,"used":14336,"remaining":19973771264},"pipelines":[{"pipelineID":"e7b8a0f1-38c5-498f-a749-940a32234811","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net"},{"pipelineID":"2b474cf7-8f16-4fe4-8852-8ae5416e1405","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net"}],"containers":1,"openContainers":1,"leaderCount":1,"version":"1.4.0-SNAPSHOT","setupTime":1688663937021,"revision":"4980c2087b6a32f9f9979c1b97017d191aa4f790","buildDate":"2023-07-06T16:45Z","layoutVersion":7,"networkLocation":"/rack2"}]}</msg>
<status status="PASS" starttime="20230706 17:21:56.142" endtime="20230706 17:21:56.147"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230706 17:21:56.148" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230706 17:21:56.147" endtime="20230706 17:21:56.148"/>
</kw>
<status status="PASS" starttime="20230706 17:21:56.039" endtime="20230706 17:21:56.154"/>
</kw>
<msg timestamp="20230706 17:21:56.154" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230706 17:21:56.038" endtime="20230706 17:21:56.154"/>
</kw>
<msg timestamp="20230706 17:21:56.155" level="INFO">${result} = {"totalCount":6,"datanodes":[{"uuid":"b2771214-a1e0-4bb8-ad53-d4edba11cbf4","hostname":"ozone-topology_datanode_1_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":0,"stor...</msg>
<status status="PASS" starttime="20230706 17:21:56.038" endtime="20230706 17:21:56.155"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanodes</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230706 17:21:56.155" endtime="20230706 17:21:56.156"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230706 17:21:56.156" endtime="20230706 17:21:56.159"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230706 17:21:56.159" endtime="20230706 17:21:56.159"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230706 17:21:56.160" endtime="20230706 17:21:56.163"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/pipelines</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230706 17:21:56.179" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/pipelines 2&gt;&amp;1'.</msg>
<msg timestamp="20230706 17:21:56.237" level="INFO">${rc} = 0</msg>
<msg timestamp="20230706 17:21:56.237" level="INFO">${output} = {"totalCount":9,"pipelines":[{"pipelineId":"e7b8a0f1-38c5-498f-a749-940a32234811","status":"OPEN","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"c...</msg>
<status status="PASS" starttime="20230706 17:21:56.170" endtime="20230706 17:21:56.237"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230706 17:21:56.238" level="INFO">{"totalCount":9,"pipelines":[{"pipelineId":"e7b8a0f1-38c5-498f-a749-940a32234811","status":"OPEN","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"88fe2230-5799-454c-9cc6-61b1b6d79776","uuidString":"88fe2230-5799-454c-9cc6-61b1b6d79776","ipAddress":"10.5.0.8","hostName":"ozone-topology_datanode_5_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-1719163873,"decommissioned":false,"maintenance":false,"networkName":"88fe2230-5799-454c-9cc6-61b1b6d79776","networkLocation":"/rack2","networkFullPath":"/rack2/88fe2230-5799-454c-9cc6-61b1b6d79776","numOfLeaves":1}],"lastLeaderElection":0,"duration":120706,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"232b8831-435c-4d66-886e-5287f7855338","status":"OPEN","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"5a77e7f3-9f90-4d92-ae2c-d0667b84ec64","uuidString":"5a77e7f3-9f90-4d92-ae2c-d0667b84ec64","ipAddress":"10.5.0.5","hostName":"ozone-topology_datanode_2_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":1313066860,"decommissioned":false,"maintenance":false,"networkName":"5a77e7f3-9f90-4d92-ae2c-d0667b84ec64","networkLocation":"/rack1","networkFullPath":"/rack1/5a77e7f3-9f90-4d92-ae2c-d0667b84ec64","numOfLeaves":1}],"lastLeaderElection":0,"duration":120595,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"ba87528b-df8f-458d-8396-2071fae1a37f","status":"OPEN","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"6c01a338-22b8-44a4-b029-0936c21f398d","uuidString":"6c01a338-22b8-44a4-b029-0936c21f398d","ipAddress":"10.5.0.9","hostName":"ozone-topology_datanode_6_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":34742789,"decommissioned":false,"maintenance":false,"networkName":"6c01a338-22b8-44a4-b029-0936c21f398d","networkLocation":"/rack2","networkFullPath":"/rack2/6c01a338-22b8-44a4-b029-0936c21f398d","numOfLeaves":1}],"lastLeaderElection":0,"duration":120902,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"efd106df-77cd-4ac1-8db6-6d6d863574e5","status":"OPEN","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"b2771214-a1e0-4bb8-ad53-d4edba11cbf4","uuidString":"b2771214-a1e0-4bb8-ad53-d4edba11cbf4","ipAddress":"10.5.0.4","hostName":"ozone-topology_datanode_1_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-378208151,"decommissioned":false,"maintenance":false,"networkName":"b2771214-a1e0-4bb8-ad53-d4edba11cbf4","networkLocation":"/rack1","networkFullPath":"/rack1/b2771214-a1e0-4bb8-ad53-d4edba11cbf4","numOfLeaves":1}],"lastLeaderElection":0,"duration":121022,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"358239fe-51c1-4681-b1a5-ffef540e1e32","status":"OPEN","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"83ed576f-8d42-48e4-8591-b2c222f7ac5a","uuidString":"83ed576f-8d42-48e4-8591-b2c222f7ac5a","ipAddress":"10.5.0.6","hostName":"ozone-topology_datanode_3_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":290837294,"decommissioned":false,"maintenance":false,"networkName":"83ed576f-8d42-48e4-8591-b2c222f7ac5a","networkLocation":"/rack1","networkFullPath":"/rack1/83ed576f-8d42-48e4-8591-b2c222f7ac5a","numOfLeaves":1}],"lastLeaderElection":0,"duration":120835,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"c8a32bea-d89d-4627-ae1a-375e6765ff5f","status":"OPEN","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"b2771214-a1e0-4bb8-ad53-d4edba11cbf4","uuidString":"b2771214-a1e0-4bb8-ad53-d4edba11cbf4","ipAddress":"10.5.0.4","hostName":"ozone-topology_datanode_1_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-378208151,"decommissioned":false,"maintenance":false,"networkName":"b2771214-a1e0-4bb8-ad53-d4edba11cbf4","networkLocation":"/rack1","networkFullPath":"/rack1/b2771214-a1e0-4bb8-ad53-d4edba11cbf4","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"82673d7e-6e61-4aa3-9559-cc8c689e7347","uuidString":"82673d7e-6e61-4aa3-9559-cc8c689e7347","ipAddress":"10.5.0.7","hostName":"ozone-topology_datanode_4_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-630890606,"decommissioned":false,"maintenance":false,"networkName":"82673d7e-6e61-4aa3-9559-cc8c689e7347","networkLocation":"/rack2","networkFullPath":"/rack2/82673d7e-6e61-4aa3-9559-cc8c689e7347","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"83ed576f-8d42-48e4-8591-b2c222f7ac5a","uuidString":"83ed576f-8d42-48e4-8591-b2c222f7ac5a","ipAddress":"10.5.0.6","hostName":"ozone-topology_datanode_3_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":290837294,"decommissioned":false,"maintenance":false,"networkName":"83ed576f-8d42-48e4-8591-b2c222f7ac5a","networkLocation":"/rack1","networkFullPath":"/rack1/83ed576f-8d42-48e4-8591-b2c222f7ac5a","numOfLeaves":1}],"lastLeaderElection":0,"duration":121078,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"2b474cf7-8f16-4fe4-8852-8ae5416e1405","status":"OPEN","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"6c01a338-22b8-44a4-b029-0936c21f398d","uuidString":"6c01a338-22b8-44a4-b029-0936c21f398d","ipAddress":"10.5.0.9","hostName":"ozone-topology_datanode_6_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":34742789,"decommissioned":false,"maintenance":false,"networkName":"6c01a338-22b8-44a4-b029-0936c21f398d","networkLocation":"/rack2","networkFullPath":"/rack2/6c01a338-22b8-44a4-b029-0936c21f398d","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"b2771214-a1e0-4bb8-ad53-d4edba11cbf4","uuidString":"b2771214-a1e0-4bb8-ad53-d4edba11cbf4","ipAddress":"10.5.0.4","hostName":"ozone-topology_datanode_1_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-378208151,"decommissioned":false,"maintenance":false,"networkName":"b2771214-a1e0-4bb8-ad53-d4edba11cbf4","networkLocation":"/rack1","networkFullPath":"/rack1/b2771214-a1e0-4bb8-ad53-d4edba11cbf4","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"88fe2230-5799-454c-9cc6-61b1b6d79776","uuidString":"88fe2230-5799-454c-9cc6-61b1b6d79776","ipAddress":"10.5.0.8","hostName":"ozone-topology_datanode_5_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-1719163873,"decommissioned":false,"maintenance":false,"networkName":"88fe2230-5799-454c-9cc6-61b1b6d79776","networkLocation":"/rack2","networkFullPath":"/rack2/88fe2230-5799-454c-9cc6-61b1b6d79776","numOfLeaves":1}],"lastLeaderElection":0,"duration":120958,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"41073f60-a123-4cf5-a464-c240127c6d16","status":"OPEN","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"82673d7e-6e61-4aa3-9559-cc8c689e7347","uuidString":"82673d7e-6e61-4aa3-9559-cc8c689e7347","ipAddress":"10.5.0.7","hostName":"ozone-topology_datanode_4_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-630890606,"decommissioned":false,"maintenance":false,"networkName":"82673d7e-6e61-4aa3-9559-cc8c689e7347","networkLocation":"/rack2","networkFullPath":"/rack2/82673d7e-6e61-4aa3-9559-cc8c689e7347","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"83ed576f-8d42-48e4-8591-b2c222f7ac5a","uuidString":"83ed576f-8d42-48e4-8591-b2c222f7ac5a","ipAddress":"10.5.0.6","hostName":"ozone-topology_datanode_3_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":290837294,"decommissioned":false,"maintenance":false,"networkName":"83ed576f-8d42-48e4-8591-b2c222f7ac5a","networkLocation":"/rack1","networkFullPath":"/rack1/83ed576f-8d42-48e4-8591-b2c222f7ac5a","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"6c01a338-22b8-44a4-b029-0936c21f398d","uuidString":"6c01a338-22b8-44a4-b029-0936c21f398d","ipAddress":"10.5.0.9","hostName":"ozone-topology_datanode_6_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":34742789,"decommissioned":false,"maintenance":false,"networkName":"6c01a338-22b8-44a4-b029-0936c21f398d","networkLocation":"/rack2","networkFullPath":"/rack2/6c01a338-22b8-44a4-b029-0936c21f398d","numOfLeaves":1}],"lastLeaderElection":0,"duration":120879,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":0},{"pipelineId":"24a6e056-131b-419d-afe4-3ccbd509c3ff","status":"OPEN","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"82673d7e-6e61-4aa3-9559-cc8c689e7347","uuidString":"82673d7e-6e61-4aa3-9559-cc8c689e7347","ipAddress":"10.5.0.7","hostName":"ozone-topology_datanode_4_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-630890606,"decommissioned":false,"maintenance":false,"networkName":"82673d7e-6e61-4aa3-9559-cc8c689e7347","networkLocation":"/rack2","networkFullPath":"/rack2/82673d7e-6e61-4aa3-9559-cc8c689e7347","numOfLeaves":1}],"lastLeaderElection":0,"duration":122262,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0}]}</msg>
<status status="PASS" starttime="20230706 17:21:56.237" endtime="20230706 17:21:56.238"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230706 17:21:56.240" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230706 17:21:56.239" endtime="20230706 17:21:56.240"/>
</kw>
<status status="PASS" starttime="20230706 17:21:56.169" endtime="20230706 17:21:56.240"/>
</kw>
<msg timestamp="20230706 17:21:56.240" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230706 17:21:56.169" endtime="20230706 17:21:56.240"/>
</kw>
<msg timestamp="20230706 17:21:56.241" level="INFO">${result} = {"totalCount":9,"pipelines":[{"pipelineId":"e7b8a0f1-38c5-498f-a749-940a32234811","status":"OPEN","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"c...</msg>
<status status="PASS" starttime="20230706 17:21:56.163" endtime="20230706 17:21:56.241"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>pipelines</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230706 17:21:56.241" endtime="20230706 17:21:56.242"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230706 17:21:56.242" endtime="20230706 17:21:56.242"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OPEN</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230706 17:21:56.243" endtime="20230706 17:21:56.243"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230706 17:21:56.243" endtime="20230706 17:21:56.244"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230706 17:21:56.244" endtime="20230706 17:21:56.244"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230706 17:21:56.244" endtime="20230706 17:21:56.245"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/clusterState</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230706 17:21:56.249" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20230706 17:21:56.321" level="INFO">${rc} = 0</msg>
<msg timestamp="20230706 17:21:56.321" level="INFO">${output} = {"deletedDirs":0,"pipelines":9,"totalDatanodes":6,"healthyDatanodes":6,"storageReport":{"capacity":535783858176,"used":55296,"remaining":119842922496},"containers":2,"missingContainers":0,"openContain...</msg>
<status status="PASS" starttime="20230706 17:21:56.246" endtime="20230706 17:21:56.321"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230706 17:21:56.322" level="INFO">{"deletedDirs":0,"pipelines":9,"totalDatanodes":6,"healthyDatanodes":6,"storageReport":{"capacity":535783858176,"used":55296,"remaining":119842922496},"containers":2,"missingContainers":0,"openContainers":2,"deletedContainers":0,"volumes":3,"buckets":2,"keys":11,"keysPendingDeletion":0}</msg>
<status status="PASS" starttime="20230706 17:21:56.321" endtime="20230706 17:21:56.322"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230706 17:21:56.323" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230706 17:21:56.322" endtime="20230706 17:21:56.324"/>
</kw>
<status status="PASS" starttime="20230706 17:21:56.246" endtime="20230706 17:21:56.325"/>
</kw>
<msg timestamp="20230706 17:21:56.325" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230706 17:21:56.245" endtime="20230706 17:21:56.325"/>
</kw>
<msg timestamp="20230706 17:21:56.325" level="INFO">${result} = {"deletedDirs":0,"pipelines":9,"totalDatanodes":6,"healthyDatanodes":6,"storageReport":{"capacity":535783858176,"used":55296,"remaining":119842922496},"containers":2,"missingContainers":0,"openContain...</msg>
<status status="PASS" starttime="20230706 17:21:56.245" endtime="20230706 17:21:56.325"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"totalDatanodes\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230706 17:21:56.326" endtime="20230706 17:21:56.326"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"healthyDatanodes\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230706 17:21:56.326" endtime="20230706 17:21:56.327"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"pipelines\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230706 17:21:56.327" endtime="20230706 17:21:56.327"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers/1/replicaHistory</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230706 17:21:56.332" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers/1/replicaHistory 2&gt;&amp;1'.</msg>
<msg timestamp="20230706 17:21:56.358" level="INFO">${rc} = 0</msg>
<msg timestamp="20230706 17:21:56.358" level="INFO">${output} = [{"containerId":1,"datanodeUuid":"b2771214-a1e0-4bb8-ad53-d4edba11cbf4","datanodeHost":"ozone-topology_datanode_1_1.ozone-topology_net","firstSeenTime":1688664035832,"lastSeenTime":1688664035832,"stat...</msg>
<status status="PASS" starttime="20230706 17:21:56.329" endtime="20230706 17:21:56.358"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230706 17:21:56.361" level="INFO">[{"containerId":1,"datanodeUuid":"b2771214-a1e0-4bb8-ad53-d4edba11cbf4","datanodeHost":"ozone-topology_datanode_1_1.ozone-topology_net","firstSeenTime":1688664035832,"lastSeenTime":1688664035832,"state":"OPEN","lastBcsId":0},{"containerId":1,"datanodeUuid":"6c01a338-22b8-44a4-b029-0936c21f398d","datanodeHost":"ozone-topology_datanode_6_1.ozone-topology_net","firstSeenTime":1688664035619,"lastSeenTime":1688664035619,"state":"OPEN","lastBcsId":0},{"containerId":1,"datanodeUuid":"88fe2230-5799-454c-9cc6-61b1b6d79776","datanodeHost":"ozone-topology_datanode_5_1.ozone-topology_net","firstSeenTime":1688664036021,"lastSeenTime":1688664036021,"state":"OPEN","lastBcsId":0}]</msg>
<status status="PASS" starttime="20230706 17:21:56.360" endtime="20230706 17:21:56.361"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230706 17:21:56.362" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230706 17:21:56.361" endtime="20230706 17:21:56.362"/>
</kw>
<status status="PASS" starttime="20230706 17:21:56.328" endtime="20230706 17:21:56.363"/>
</kw>
<msg timestamp="20230706 17:21:56.363" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230706 17:21:56.328" endtime="20230706 17:21:56.363"/>
</kw>
<msg timestamp="20230706 17:21:56.363" level="INFO">${result} = [{"containerId":1,"datanodeUuid":"b2771214-a1e0-4bb8-ad53-d4edba11cbf4","datanodeHost":"ozone-topology_datanode_1_1.ozone-topology_net","firstSeenTime":1688664035832,"lastSeenTime":1688664035832,"stat...</msg>
<status status="PASS" starttime="20230706 17:21:56.327" endtime="20230706 17:21:56.364"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"containerId\":1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230706 17:21:56.364" endtime="20230706 17:21:56.364"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230706 17:21:56.037" endtime="20230706 17:21:56.364"/>
</test>
<test id="s1-s2-s1-t3" name="Check if Recon Web UI is up" line="94">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230706 17:21:56.366" endtime="20230706 17:21:56.367"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${ENDPOINT_URL}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230706 17:21:56.371" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20230706 17:21:56.399" level="INFO">${rc} = 0</msg>
<msg timestamp="20230706 17:21:56.399" level="INFO">${output} = &lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" ...</msg>
<status status="PASS" starttime="20230706 17:21:56.368" endtime="20230706 17:21:56.399"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230706 17:21:56.400" level="INFO">&lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" content="#000000"/&gt;&lt;link rel="manifest" href="/manifest.json"/&gt;&lt;title&gt;Ozone Recon&lt;/title&gt;&lt;link href="/static/css/2.a0dcc6a4.chunk.css" rel="stylesheet"&gt;&lt;link href="/static/css/main.169d2276.chunk.css" rel="stylesheet"&gt;&lt;/head&gt;&lt;body&gt;&lt;noscript&gt;You need to enable JavaScript to run this app.&lt;/noscript&gt;&lt;div id="root"&gt;&lt;/div&gt;&lt;script&gt;!function(e){function r(r){for(var n,l,f=r[0],i=r[1],a=r[2],p=0,s=[];p&lt;f.length;p++)l=f[p],Object.prototype.hasOwnProperty.call(o,l)&amp;&amp;o[l]&amp;&amp;s.push(o[l][0]),o[l]=0;for(n in i)Object.prototype.hasOwnProperty.call(i,n)&amp;&amp;(e[n]=i[n]);for(c&amp;&amp;c(r);s.length;)s.shift()();return u.push.apply(u,a||[]),t()}function t(){for(var e,r=0;r&lt;u.length;r++){for(var t=u[r],n=!0,f=1;f&lt;t.length;f++){var i=t[f];0!==o[i]&amp;&amp;(n=!1)}n&amp;&amp;(u.splice(r--,1),e=l(l.s=t[0]))}return e}var n={},o={1:0},u=[];function l(r){if(n[r])return n[r].exports;var t=n[r]={i:r,l:!1,exports:{}};return e[r].call(t.exports,t,t.exports,l),t.l=!0,t.exports}l.m=e,l.c=n,l.d=function(e,r,t){l.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:t})},l.r=function(e){"undefined"!=typeof Symbol&amp;&amp;Symbol.toStringTag&amp;&amp;Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},l.t=function(e,r){if(1&amp;r&amp;&amp;(e=l(e)),8&amp;r)return e;if(4&amp;r&amp;&amp;"object"==typeof e&amp;&amp;e&amp;&amp;e.__esModule)return e;var t=Object.create(null);if(l.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&amp;r&amp;&amp;"string"!=typeof e)for(var n in e)l.d(t,n,function(r){return e[r]}.bind(null,n));return t},l.n=function(e){var r=e&amp;&amp;e.__esModule?function(){return e.default}:function(){return e};return l.d(r,"a",r),r},l.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},l.p="/";var f=this["webpackJsonpozone-recon"]=this["webpackJsonpozone-recon"]||[],i=f.push.bind(f);f.push=r,f=f.slice();for(var a=0;a&lt;f.length;a++)r(f[a]);var c=i;t()}([])&lt;/script&gt;&lt;script src="/static/js/2.b03bfeb4.chunk.js"&gt;&lt;/script&gt;&lt;script src="/static/js/main.e03e2f5a.chunk.js"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</msg>
<status status="PASS" starttime="20230706 17:21:56.399" endtime="20230706 17:21:56.400"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230706 17:21:56.401" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230706 17:21:56.400" endtime="20230706 17:21:56.401"/>
</kw>
<status status="PASS" starttime="20230706 17:21:56.368" endtime="20230706 17:21:56.401"/>
</kw>
<msg timestamp="20230706 17:21:56.402" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230706 17:21:56.367" endtime="20230706 17:21:56.402"/>
</kw>
<msg timestamp="20230706 17:21:56.402" level="INFO">${result} = &lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" ...</msg>
<status status="PASS" starttime="20230706 17:21:56.367" endtime="20230706 17:21:56.402"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Ozone Recon</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230706 17:21:56.402" endtime="20230706 17:21:56.403"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230706 17:21:56.365" endtime="20230706 17:21:56.403"/>
</test>
<test id="s1-s2-s1-t4" name="Check web UI access" line="99">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230706 17:21:56.409" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230706 17:21:56.418" level="INFO">${rc} = 0</msg>
<msg timestamp="20230706 17:21:56.418" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230706 17:21:56.407" endtime="20230706 17:21:56.418"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230706 17:21:56.419" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230706 17:21:56.418" endtime="20230706 17:21:56.419"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230706 17:21:56.420" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230706 17:21:56.419" endtime="20230706 17:21:56.420"/>
</kw>
<status status="PASS" starttime="20230706 17:21:56.406" endtime="20230706 17:21:56.420"/>
</kw>
<msg timestamp="20230706 17:21:56.420" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230706 17:21:56.406" endtime="20230706 17:21:56.420"/>
</kw>
<status status="PASS" starttime="20230706 17:21:56.405" endtime="20230706 17:21:56.421"/>
</kw>
<kw name="Check http return code">
<arg>${ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230706 17:21:56.425" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20230706 17:21:56.443" level="INFO">${rc} = 0</msg>
<msg timestamp="20230706 17:21:56.443" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230706 17:21:56.423" endtime="20230706 17:21:56.443"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230706 17:21:56.444" level="INFO">200</msg>
<status status="PASS" starttime="20230706 17:21:56.444" endtime="20230706 17:21:56.444"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230706 17:21:56.445" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230706 17:21:56.445" endtime="20230706 17:21:56.445"/>
</kw>
<status status="PASS" starttime="20230706 17:21:56.422" endtime="20230706 17:21:56.445"/>
</kw>
<msg timestamp="20230706 17:21:56.445" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230706 17:21:56.422" endtime="20230706 17:21:56.445"/>
</kw>
<msg timestamp="20230706 17:21:56.446" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230706 17:21:56.421" endtime="20230706 17:21:56.446"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230706 17:21:56.446" endtime="20230706 17:21:56.446"/>
</kw>
<status status="NOT RUN" starttime="20230706 17:21:56.446" endtime="20230706 17:21:56.446"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230706 17:21:56.447" endtime="20230706 17:21:56.447"/>
</kw>
<status status="PASS" starttime="20230706 17:21:56.446" endtime="20230706 17:21:56.447"/>
</branch>
<status status="PASS" starttime="20230706 17:21:56.446" endtime="20230706 17:21:56.447"/>
</if>
<status status="PASS" starttime="20230706 17:21:56.421" endtime="20230706 17:21:56.448"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230706 17:21:56.448" endtime="20230706 17:21:56.449"/>
</kw>
<status status="PASS" starttime="20230706 17:21:56.448" endtime="20230706 17:21:56.449"/>
</kw>
<kw name="Check http return code">
<arg>${ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230706 17:21:56.453" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20230706 17:21:56.468" level="INFO">${rc} = 0</msg>
<msg timestamp="20230706 17:21:56.468" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230706 17:21:56.451" endtime="20230706 17:21:56.468"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230706 17:21:56.469" level="INFO">200</msg>
<status status="PASS" starttime="20230706 17:21:56.468" endtime="20230706 17:21:56.469"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230706 17:21:56.469" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230706 17:21:56.469" endtime="20230706 17:21:56.470"/>
</kw>
<status status="PASS" starttime="20230706 17:21:56.450" endtime="20230706 17:21:56.470"/>
</kw>
<msg timestamp="20230706 17:21:56.470" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230706 17:21:56.450" endtime="20230706 17:21:56.470"/>
</kw>
<msg timestamp="20230706 17:21:56.470" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230706 17:21:56.449" endtime="20230706 17:21:56.470"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230706 17:21:56.471" endtime="20230706 17:21:56.471"/>
</kw>
<status status="NOT RUN" starttime="20230706 17:21:56.471" endtime="20230706 17:21:56.471"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230706 17:21:56.471" endtime="20230706 17:21:56.471"/>
</kw>
<status status="PASS" starttime="20230706 17:21:56.471" endtime="20230706 17:21:56.471"/>
</branch>
<status status="PASS" starttime="20230706 17:21:56.471" endtime="20230706 17:21:56.471"/>
</if>
<status status="PASS" starttime="20230706 17:21:56.449" endtime="20230706 17:21:56.472"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230706 17:21:56.404" endtime="20230706 17:21:56.472"/>
</test>
<test id="s1-s2-s1-t5" name="Check admin only api access" line="107">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230706 17:21:56.477" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230706 17:21:56.481" level="INFO">${rc} = 0</msg>
<msg timestamp="20230706 17:21:56.481" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230706 17:21:56.475" endtime="20230706 17:21:56.481"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230706 17:21:56.482" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230706 17:21:56.481" endtime="20230706 17:21:56.482"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230706 17:21:56.483" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230706 17:21:56.482" endtime="20230706 17:21:56.483"/>
</kw>
<status status="PASS" starttime="20230706 17:21:56.474" endtime="20230706 17:21:56.483"/>
</kw>
<msg timestamp="20230706 17:21:56.483" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230706 17:21:56.474" endtime="20230706 17:21:56.484"/>
</kw>
<status status="PASS" starttime="20230706 17:21:56.474" endtime="20230706 17:21:56.484"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230706 17:21:56.488" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230706 17:21:56.504" level="INFO">${rc} = 0</msg>
<msg timestamp="20230706 17:21:56.504" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230706 17:21:56.486" endtime="20230706 17:21:56.504"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230706 17:21:56.505" level="INFO">200</msg>
<status status="PASS" starttime="20230706 17:21:56.504" endtime="20230706 17:21:56.505"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230706 17:21:56.506" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230706 17:21:56.505" endtime="20230706 17:21:56.506"/>
</kw>
<status status="PASS" starttime="20230706 17:21:56.485" endtime="20230706 17:21:56.506"/>
</kw>
<msg timestamp="20230706 17:21:56.506" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230706 17:21:56.485" endtime="20230706 17:21:56.506"/>
</kw>
<msg timestamp="20230706 17:21:56.507" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230706 17:21:56.485" endtime="20230706 17:21:56.507"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230706 17:21:56.507" endtime="20230706 17:21:56.507"/>
</kw>
<status status="NOT RUN" starttime="20230706 17:21:56.507" endtime="20230706 17:21:56.507"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230706 17:21:56.508" endtime="20230706 17:21:56.508"/>
</kw>
<status status="PASS" starttime="20230706 17:21:56.507" endtime="20230706 17:21:56.508"/>
</branch>
<status status="PASS" starttime="20230706 17:21:56.507" endtime="20230706 17:21:56.508"/>
</if>
<status status="PASS" starttime="20230706 17:21:56.484" endtime="20230706 17:21:56.508"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230706 17:21:56.509" endtime="20230706 17:21:56.510"/>
</kw>
<status status="PASS" starttime="20230706 17:21:56.509" endtime="20230706 17:21:56.510"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230706 17:21:56.514" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230706 17:21:56.531" level="INFO">${rc} = 0</msg>
<msg timestamp="20230706 17:21:56.531" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230706 17:21:56.512" endtime="20230706 17:21:56.531"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230706 17:21:56.535" level="INFO">200</msg>
<status status="PASS" starttime="20230706 17:21:56.535" endtime="20230706 17:21:56.536"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230706 17:21:56.536" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230706 17:21:56.536" endtime="20230706 17:21:56.536"/>
</kw>
<status status="PASS" starttime="20230706 17:21:56.511" endtime="20230706 17:21:56.538"/>
</kw>
<msg timestamp="20230706 17:21:56.538" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230706 17:21:56.511" endtime="20230706 17:21:56.538"/>
</kw>
<msg timestamp="20230706 17:21:56.539" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230706 17:21:56.511" endtime="20230706 17:21:56.539"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230706 17:21:56.539" endtime="20230706 17:21:56.539"/>
</kw>
<status status="NOT RUN" starttime="20230706 17:21:56.539" endtime="20230706 17:21:56.539"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230706 17:21:56.539" endtime="20230706 17:21:56.540"/>
</kw>
<status status="PASS" starttime="20230706 17:21:56.539" endtime="20230706 17:21:56.540"/>
</branch>
<status status="PASS" starttime="20230706 17:21:56.539" endtime="20230706 17:21:56.540"/>
</if>
<status status="PASS" starttime="20230706 17:21:56.510" endtime="20230706 17:21:56.540"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230706 17:21:56.541" endtime="20230706 17:21:56.541"/>
</kw>
<status status="PASS" starttime="20230706 17:21:56.540" endtime="20230706 17:21:56.541"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230706 17:21:56.546" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230706 17:21:56.562" level="INFO">${rc} = 0</msg>
<msg timestamp="20230706 17:21:56.562" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230706 17:21:56.543" endtime="20230706 17:21:56.562"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230706 17:21:56.563" level="INFO">200</msg>
<status status="PASS" starttime="20230706 17:21:56.562" endtime="20230706 17:21:56.563"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230706 17:21:56.564" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230706 17:21:56.563" endtime="20230706 17:21:56.564"/>
</kw>
<status status="PASS" starttime="20230706 17:21:56.543" endtime="20230706 17:21:56.564"/>
</kw>
<msg timestamp="20230706 17:21:56.564" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230706 17:21:56.542" endtime="20230706 17:21:56.564"/>
</kw>
<msg timestamp="20230706 17:21:56.564" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230706 17:21:56.542" endtime="20230706 17:21:56.564"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230706 17:21:56.565" endtime="20230706 17:21:56.565"/>
</kw>
<status status="NOT RUN" starttime="20230706 17:21:56.565" endtime="20230706 17:21:56.565"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230706 17:21:56.565" endtime="20230706 17:21:56.566"/>
</kw>
<status status="PASS" starttime="20230706 17:21:56.565" endtime="20230706 17:21:56.566"/>
</branch>
<status status="PASS" starttime="20230706 17:21:56.565" endtime="20230706 17:21:56.566"/>
</if>
<status status="PASS" starttime="20230706 17:21:56.541" endtime="20230706 17:21:56.566"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230706 17:21:56.567" endtime="20230706 17:21:56.567"/>
</kw>
<status status="PASS" starttime="20230706 17:21:56.566" endtime="20230706 17:21:56.567"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230706 17:21:56.572" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20230706 17:21:56.593" level="INFO">${rc} = 0</msg>
<msg timestamp="20230706 17:21:56.593" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230706 17:21:56.569" endtime="20230706 17:21:56.593"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230706 17:21:56.594" level="INFO">200</msg>
<status status="PASS" starttime="20230706 17:21:56.594" endtime="20230706 17:21:56.595"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230706 17:21:56.595" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230706 17:21:56.595" endtime="20230706 17:21:56.595"/>
</kw>
<status status="PASS" starttime="20230706 17:21:56.568" endtime="20230706 17:21:56.596"/>
</kw>
<msg timestamp="20230706 17:21:56.596" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230706 17:21:56.568" endtime="20230706 17:21:56.596"/>
</kw>
<msg timestamp="20230706 17:21:56.596" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230706 17:21:56.568" endtime="20230706 17:21:56.596"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230706 17:21:56.597" endtime="20230706 17:21:56.597"/>
</kw>
<status status="NOT RUN" starttime="20230706 17:21:56.596" endtime="20230706 17:21:56.597"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230706 17:21:56.597" endtime="20230706 17:21:56.598"/>
</kw>
<status status="PASS" starttime="20230706 17:21:56.597" endtime="20230706 17:21:56.598"/>
</branch>
<status status="PASS" starttime="20230706 17:21:56.596" endtime="20230706 17:21:56.598"/>
</if>
<status status="PASS" starttime="20230706 17:21:56.567" endtime="20230706 17:21:56.598"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230706 17:21:56.473" endtime="20230706 17:21:56.598"/>
</test>
<test id="s1-s2-s1-t6" name="Check unhealthy, (admin) api access" line="120">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230706 17:21:56.616" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230706 17:21:56.620" level="INFO">${rc} = 0</msg>
<msg timestamp="20230706 17:21:56.620" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230706 17:21:56.609" endtime="20230706 17:21:56.620"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230706 17:21:56.624" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230706 17:21:56.623" endtime="20230706 17:21:56.624"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230706 17:21:56.625" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230706 17:21:56.624" endtime="20230706 17:21:56.625"/>
</kw>
<status status="PASS" starttime="20230706 17:21:56.608" endtime="20230706 17:21:56.625"/>
</kw>
<msg timestamp="20230706 17:21:56.625" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230706 17:21:56.608" endtime="20230706 17:21:56.625"/>
</kw>
<status status="PASS" starttime="20230706 17:21:56.607" endtime="20230706 17:21:56.626"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230706 17:21:56.630" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20230706 17:21:56.687" level="INFO">${rc} = 0</msg>
<msg timestamp="20230706 17:21:56.687" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230706 17:21:56.628" endtime="20230706 17:21:56.687"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230706 17:21:56.688" level="INFO">200</msg>
<status status="PASS" starttime="20230706 17:21:56.687" endtime="20230706 17:21:56.688"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230706 17:21:56.689" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230706 17:21:56.688" endtime="20230706 17:21:56.689"/>
</kw>
<status status="PASS" starttime="20230706 17:21:56.627" endtime="20230706 17:21:56.689"/>
</kw>
<msg timestamp="20230706 17:21:56.690" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230706 17:21:56.627" endtime="20230706 17:21:56.690"/>
</kw>
<msg timestamp="20230706 17:21:56.690" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230706 17:21:56.626" endtime="20230706 17:21:56.690"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230706 17:21:56.690" endtime="20230706 17:21:56.691"/>
</kw>
<status status="NOT RUN" starttime="20230706 17:21:56.690" endtime="20230706 17:21:56.691"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230706 17:21:56.691" endtime="20230706 17:21:56.691"/>
</kw>
<status status="PASS" starttime="20230706 17:21:56.691" endtime="20230706 17:21:56.691"/>
</branch>
<status status="PASS" starttime="20230706 17:21:56.690" endtime="20230706 17:21:56.691"/>
</if>
<status status="PASS" starttime="20230706 17:21:56.626" endtime="20230706 17:21:56.692"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230706 17:21:56.693" endtime="20230706 17:21:56.694"/>
</kw>
<status status="PASS" starttime="20230706 17:21:56.692" endtime="20230706 17:21:56.694"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230706 17:21:56.699" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20230706 17:21:56.716" level="INFO">${rc} = 0</msg>
<msg timestamp="20230706 17:21:56.716" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230706 17:21:56.696" endtime="20230706 17:21:56.716"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230706 17:21:56.717" level="INFO">200</msg>
<status status="PASS" starttime="20230706 17:21:56.717" endtime="20230706 17:21:56.717"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230706 17:21:56.719" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230706 17:21:56.718" endtime="20230706 17:21:56.719"/>
</kw>
<status status="PASS" starttime="20230706 17:21:56.695" endtime="20230706 17:21:56.719"/>
</kw>
<msg timestamp="20230706 17:21:56.720" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230706 17:21:56.695" endtime="20230706 17:21:56.720"/>
</kw>
<msg timestamp="20230706 17:21:56.720" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230706 17:21:56.694" endtime="20230706 17:21:56.720"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230706 17:21:56.721" endtime="20230706 17:21:56.721"/>
</kw>
<status status="NOT RUN" starttime="20230706 17:21:56.720" endtime="20230706 17:21:56.721"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230706 17:21:56.721" endtime="20230706 17:21:56.721"/>
</kw>
<status status="PASS" starttime="20230706 17:21:56.721" endtime="20230706 17:21:56.721"/>
</branch>
<status status="PASS" starttime="20230706 17:21:56.720" endtime="20230706 17:21:56.721"/>
</if>
<status status="PASS" starttime="20230706 17:21:56.694" endtime="20230706 17:21:56.721"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230706 17:21:56.722" endtime="20230706 17:21:56.722"/>
</kw>
<status status="PASS" starttime="20230706 17:21:56.722" endtime="20230706 17:21:56.723"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230706 17:21:56.727" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20230706 17:21:56.743" level="INFO">${rc} = 0</msg>
<msg timestamp="20230706 17:21:56.746" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230706 17:21:56.725" endtime="20230706 17:21:56.746"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230706 17:21:56.747" level="INFO">200</msg>
<status status="PASS" starttime="20230706 17:21:56.746" endtime="20230706 17:21:56.747"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230706 17:21:56.747" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230706 17:21:56.747" endtime="20230706 17:21:56.748"/>
</kw>
<status status="PASS" starttime="20230706 17:21:56.724" endtime="20230706 17:21:56.749"/>
</kw>
<msg timestamp="20230706 17:21:56.749" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230706 17:21:56.724" endtime="20230706 17:21:56.749"/>
</kw>
<msg timestamp="20230706 17:21:56.752" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230706 17:21:56.723" endtime="20230706 17:21:56.752"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230706 17:21:56.753" endtime="20230706 17:21:56.753"/>
</kw>
<status status="NOT RUN" starttime="20230706 17:21:56.752" endtime="20230706 17:21:56.753"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230706 17:21:56.753" endtime="20230706 17:21:56.754"/>
</kw>
<status status="PASS" starttime="20230706 17:21:56.753" endtime="20230706 17:21:56.754"/>
</branch>
<status status="PASS" starttime="20230706 17:21:56.752" endtime="20230706 17:21:56.754"/>
</if>
<status status="PASS" starttime="20230706 17:21:56.723" endtime="20230706 17:21:56.754"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230706 17:21:56.755" endtime="20230706 17:21:56.755"/>
</kw>
<status status="PASS" starttime="20230706 17:21:56.754" endtime="20230706 17:21:56.760"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230706 17:21:56.767" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20230706 17:21:56.786" level="INFO">${rc} = 0</msg>
<msg timestamp="20230706 17:21:56.786" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230706 17:21:56.763" endtime="20230706 17:21:56.786"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230706 17:21:56.787" level="INFO">200</msg>
<status status="PASS" starttime="20230706 17:21:56.786" endtime="20230706 17:21:56.787"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230706 17:21:56.788" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230706 17:21:56.787" endtime="20230706 17:21:56.788"/>
</kw>
<status status="PASS" starttime="20230706 17:21:56.763" endtime="20230706 17:21:56.788"/>
</kw>
<msg timestamp="20230706 17:21:56.788" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230706 17:21:56.762" endtime="20230706 17:21:56.788"/>
</kw>
<msg timestamp="20230706 17:21:56.789" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230706 17:21:56.762" endtime="20230706 17:21:56.789"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230706 17:21:56.790" endtime="20230706 17:21:56.790"/>
</kw>
<status status="NOT RUN" starttime="20230706 17:21:56.789" endtime="20230706 17:21:56.790"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230706 17:21:56.790" endtime="20230706 17:21:56.790"/>
</kw>
<status status="PASS" starttime="20230706 17:21:56.790" endtime="20230706 17:21:56.790"/>
</branch>
<status status="PASS" starttime="20230706 17:21:56.789" endtime="20230706 17:21:56.790"/>
</if>
<status status="PASS" starttime="20230706 17:21:56.761" endtime="20230706 17:21:56.791"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230706 17:21:56.602" endtime="20230706 17:21:56.791"/>
</test>
<test id="s1-s2-s1-t7" name="Check normal api access" line="133">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230706 17:21:56.799" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230706 17:21:56.803" level="INFO">${rc} = 0</msg>
<msg timestamp="20230706 17:21:56.804" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230706 17:21:56.796" endtime="20230706 17:21:56.804"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230706 17:21:56.805" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230706 17:21:56.804" endtime="20230706 17:21:56.805"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230706 17:21:56.806" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230706 17:21:56.805" endtime="20230706 17:21:56.806"/>
</kw>
<status status="PASS" starttime="20230706 17:21:56.795" endtime="20230706 17:21:56.807"/>
</kw>
<msg timestamp="20230706 17:21:56.807" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230706 17:21:56.795" endtime="20230706 17:21:56.807"/>
</kw>
<status status="PASS" starttime="20230706 17:21:56.793" endtime="20230706 17:21:56.807"/>
</kw>
<kw name="Check http return code">
<arg>${NON_ADMIN_API_ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230706 17:21:56.812" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20230706 17:21:56.841" level="INFO">${rc} = 0</msg>
<msg timestamp="20230706 17:21:56.841" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230706 17:21:56.809" endtime="20230706 17:21:56.841"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230706 17:21:56.843" level="INFO">200</msg>
<status status="PASS" starttime="20230706 17:21:56.842" endtime="20230706 17:21:56.843"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230706 17:21:56.843" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230706 17:21:56.843" endtime="20230706 17:21:56.843"/>
</kw>
<status status="PASS" starttime="20230706 17:21:56.809" endtime="20230706 17:21:56.844"/>
</kw>
<msg timestamp="20230706 17:21:56.844" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230706 17:21:56.808" endtime="20230706 17:21:56.844"/>
</kw>
<msg timestamp="20230706 17:21:56.844" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230706 17:21:56.808" endtime="20230706 17:21:56.844"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230706 17:21:56.845" endtime="20230706 17:21:56.845"/>
</kw>
<status status="NOT RUN" starttime="20230706 17:21:56.844" endtime="20230706 17:21:56.845"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230706 17:21:56.845" endtime="20230706 17:21:56.846"/>
</kw>
<status status="PASS" starttime="20230706 17:21:56.845" endtime="20230706 17:21:56.846"/>
</branch>
<status status="PASS" starttime="20230706 17:21:56.844" endtime="20230706 17:21:56.846"/>
</if>
<status status="PASS" starttime="20230706 17:21:56.807" endtime="20230706 17:21:56.846"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230706 17:21:56.847" endtime="20230706 17:21:56.847"/>
</kw>
<status status="PASS" starttime="20230706 17:21:56.846" endtime="20230706 17:21:56.847"/>
</kw>
<kw name="Check http return code">
<arg>${NON_ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230706 17:21:56.852" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20230706 17:21:56.886" level="INFO">${rc} = 0</msg>
<msg timestamp="20230706 17:21:56.886" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230706 17:21:56.850" endtime="20230706 17:21:56.887"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230706 17:21:56.888" level="INFO">200</msg>
<status status="PASS" starttime="20230706 17:21:56.887" endtime="20230706 17:21:56.894"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230706 17:21:56.895" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230706 17:21:56.894" endtime="20230706 17:21:56.896"/>
</kw>
<status status="PASS" starttime="20230706 17:21:56.849" endtime="20230706 17:21:56.897"/>
</kw>
<msg timestamp="20230706 17:21:56.897" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230706 17:21:56.849" endtime="20230706 17:21:56.897"/>
</kw>
<msg timestamp="20230706 17:21:56.897" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230706 17:21:56.848" endtime="20230706 17:21:56.897"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230706 17:21:56.898" endtime="20230706 17:21:56.898"/>
</kw>
<status status="NOT RUN" starttime="20230706 17:21:56.898" endtime="20230706 17:21:56.898"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230706 17:21:56.898" endtime="20230706 17:21:56.899"/>
</kw>
<status status="PASS" starttime="20230706 17:21:56.898" endtime="20230706 17:21:56.899"/>
</branch>
<status status="PASS" starttime="20230706 17:21:56.897" endtime="20230706 17:21:56.899"/>
</if>
<status status="PASS" starttime="20230706 17:21:56.848" endtime="20230706 17:21:56.899"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230706 17:21:56.792" endtime="20230706 17:21:56.899"/>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" starttime="20230706 17:21:14.529" endtime="20230706 17:21:56.902"/>
</suite>
<suite id="s1-s2-s2" name="Recon-Nssummary" source="/opt/hadoop/smoketest/recon/recon-nssummary.robot">
<test id="s1-s2-s2-t1" name="Check volume creation" line="99">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230706 17:21:56.919" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230706 17:21:56.923" level="INFO">${rc} = 0</msg>
<msg timestamp="20230706 17:21:56.923" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230706 17:21:56.916" endtime="20230706 17:21:56.923"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230706 17:21:56.924" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230706 17:21:56.923" endtime="20230706 17:21:56.924"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230706 17:21:56.925" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230706 17:21:56.924" endtime="20230706 17:21:56.925"/>
</kw>
<status status="PASS" starttime="20230706 17:21:56.915" endtime="20230706 17:21:56.925"/>
</kw>
<msg timestamp="20230706 17:21:56.925" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230706 17:21:56.915" endtime="20230706 17:21:56.926"/>
</kw>
<status status="PASS" starttime="20230706 17:21:56.914" endtime="20230706 17:21:56.926"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230706 17:21:56.926" endtime="20230706 17:21:56.927"/>
</kw>
<status status="PASS" starttime="20230706 17:21:56.926" endtime="20230706 17:21:56.927"/>
</kw>
<kw name="Create volume">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230706 17:21:56.929" level="INFO">${random} = ovtrw</msg>
<status status="PASS" starttime="20230706 17:21:56.928" endtime="20230706 17:21:56.929"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${VOLUME}</arg>
<arg>vol-${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230706 17:21:56.930" level="INFO">${VOLUME} = vol-ovtrw</msg>
<status status="PASS" starttime="20230706 17:21:56.930" endtime="20230706 17:21:56.930"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${VOLUME}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230706 17:21:56.934" level="INFO">Running command 'ozone sh volume create /vol-ovtrw 2&gt;&amp;1'.</msg>
<msg timestamp="20230706 17:22:01.657" level="INFO">${rc} = 0</msg>
<msg timestamp="20230706 17:22:01.657" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230706 17:21:56.932" endtime="20230706 17:22:01.657"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230706 17:22:01.659" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230706 17:22:01.658" endtime="20230706 17:22:01.659"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230706 17:22:01.660" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230706 17:22:01.659" endtime="20230706 17:22:01.660"/>
</kw>
<status status="PASS" starttime="20230706 17:21:56.931" endtime="20230706 17:22:01.660"/>
</kw>
<msg timestamp="20230706 17:22:01.661" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230706 17:21:56.931" endtime="20230706 17:22:01.661"/>
</kw>
<msg timestamp="20230706 17:22:01.661" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230706 17:21:56.930" endtime="20230706 17:22:01.661"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230706 17:22:01.661" endtime="20230706 17:22:01.662"/>
</kw>
<status status="PASS" starttime="20230706 17:21:56.927" endtime="20230706 17:22:01.662"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230706 17:21:56.913" endtime="20230706 17:22:01.662"/>
</test>
<test id="s1-s2-s2-t2" name="Check bucket creation" line="104">
<kw name="Create bucket">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230706 17:22:01.666" level="INFO">${random} = smliy</msg>
<status status="PASS" starttime="20230706 17:22:01.666" endtime="20230706 17:22:01.666"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<arg>buc-${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230706 17:22:01.667" level="INFO">${BUCKET} = buc-smliy</msg>
<status status="PASS" starttime="20230706 17:22:01.666" endtime="20230706 17:22:01.667"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create -l ${BUCKET_LAYOUT} /${VOLUME}/${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230706 17:22:01.671" level="INFO">Running command 'ozone sh bucket create -l FILE_SYSTEM_OPTIMIZED /vol-ovtrw/buc-smliy 2&gt;&amp;1'.</msg>
<msg timestamp="20230706 17:22:07.077" level="INFO">${rc} = 0</msg>
<msg timestamp="20230706 17:22:07.077" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230706 17:22:01.668" endtime="20230706 17:22:07.077"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230706 17:22:07.079" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230706 17:22:07.078" endtime="20230706 17:22:07.079"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230706 17:22:07.079" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230706 17:22:07.079" endtime="20230706 17:22:07.079"/>
</kw>
<status status="PASS" starttime="20230706 17:22:01.668" endtime="20230706 17:22:07.080"/>
</kw>
<msg timestamp="20230706 17:22:07.080" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230706 17:22:01.668" endtime="20230706 17:22:07.080"/>
</kw>
<msg timestamp="20230706 17:22:07.080" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230706 17:22:01.667" endtime="20230706 17:22:07.080"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230706 17:22:07.080" endtime="20230706 17:22:07.081"/>
</kw>
<status status="PASS" starttime="20230706 17:22:01.665" endtime="20230706 17:22:07.081"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230706 17:22:01.664" endtime="20230706 17:22:07.081"/>
</test>
<test id="s1-s2-s2-t3" name="Check keys creation" line="107">
<kw name="Create keys">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${VOLUME}/${BUCKET}/file1 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230706 17:22:07.087" level="INFO">Running command 'ozone sh key put /vol-ovtrw/buc-smliy/file1 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20230706 17:22:15.399" level="INFO">${rc} = 0</msg>
<msg timestamp="20230706 17:22:15.399" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230706 17:22:07.085" endtime="20230706 17:22:15.399"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230706 17:22:15.401" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230706 17:22:15.400" endtime="20230706 17:22:15.401"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230706 17:22:15.402" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230706 17:22:15.401" endtime="20230706 17:22:15.402"/>
</kw>
<status status="PASS" starttime="20230706 17:22:07.084" endtime="20230706 17:22:15.402"/>
</kw>
<msg timestamp="20230706 17:22:15.402" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230706 17:22:07.084" endtime="20230706 17:22:15.402"/>
</kw>
<msg timestamp="20230706 17:22:15.402" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230706 17:22:07.083" endtime="20230706 17:22:15.403"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230706 17:22:15.403" endtime="20230706 17:22:15.403"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${VOLUME}/${BUCKET}/dir1/dir2/file2 HISTORY.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230706 17:22:15.409" level="INFO">Running command 'ozone sh key put /vol-ovtrw/buc-smliy/dir1/dir2/file2 HISTORY.md 2&gt;&amp;1'.</msg>
<msg timestamp="20230706 17:22:23.869" level="INFO">${rc} = 0</msg>
<msg timestamp="20230706 17:22:23.869" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230706 17:22:15.406" endtime="20230706 17:22:23.869"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230706 17:22:23.871" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230706 17:22:23.870" endtime="20230706 17:22:23.871"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230706 17:22:23.872" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230706 17:22:23.871" endtime="20230706 17:22:23.872"/>
</kw>
<status status="PASS" starttime="20230706 17:22:15.405" endtime="20230706 17:22:23.872"/>
</kw>
<msg timestamp="20230706 17:22:23.872" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230706 17:22:15.404" endtime="20230706 17:22:23.873"/>
</kw>
<msg timestamp="20230706 17:22:23.873" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230706 17:22:15.403" endtime="20230706 17:22:23.873"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230706 17:22:23.873" endtime="20230706 17:22:23.873"/>
</kw>
<status status="PASS" starttime="20230706 17:22:07.083" endtime="20230706 17:22:23.874"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230706 17:22:07.082" endtime="20230706 17:22:23.874"/>
</test>
<test id="s1-s2-s2-t4" name="Check Summary api access" line="110">
<kw name="Check Access">
<arg>${SUMMARY_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230706 17:22:23.881" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230706 17:22:23.886" level="INFO">${rc} = 0</msg>
<msg timestamp="20230706 17:22:23.886" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230706 17:22:23.878" endtime="20230706 17:22:23.886"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230706 17:22:23.887" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230706 17:22:23.886" endtime="20230706 17:22:23.887"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230706 17:22:23.888" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230706 17:22:23.888" endtime="20230706 17:22:23.888"/>
</kw>
<status status="PASS" starttime="20230706 17:22:23.877" endtime="20230706 17:22:23.889"/>
</kw>
<msg timestamp="20230706 17:22:23.889" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230706 17:22:23.877" endtime="20230706 17:22:23.889"/>
</kw>
<status status="PASS" starttime="20230706 17:22:23.877" endtime="20230706 17:22:23.889"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230706 17:22:23.893" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230706 17:22:23.940" level="INFO">${rc} = 0</msg>
<msg timestamp="20230706 17:22:23.940" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230706 17:22:23.891" endtime="20230706 17:22:23.940"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230706 17:22:23.941" level="INFO">200</msg>
<status status="PASS" starttime="20230706 17:22:23.940" endtime="20230706 17:22:23.941"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230706 17:22:23.942" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230706 17:22:23.942" endtime="20230706 17:22:23.942"/>
</kw>
<status status="PASS" starttime="20230706 17:22:23.891" endtime="20230706 17:22:23.943"/>
</kw>
<msg timestamp="20230706 17:22:23.943" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230706 17:22:23.890" endtime="20230706 17:22:23.943"/>
</kw>
<msg timestamp="20230706 17:22:23.943" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230706 17:22:23.890" endtime="20230706 17:22:23.943"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230706 17:22:23.944" endtime="20230706 17:22:23.944"/>
</kw>
<status status="NOT RUN" starttime="20230706 17:22:23.943" endtime="20230706 17:22:23.944"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230706 17:22:23.944" endtime="20230706 17:22:23.945"/>
</kw>
<status status="PASS" starttime="20230706 17:22:23.944" endtime="20230706 17:22:23.945"/>
</branch>
<status status="PASS" starttime="20230706 17:22:23.943" endtime="20230706 17:22:23.945"/>
</if>
<status status="PASS" starttime="20230706 17:22:23.889" endtime="20230706 17:22:23.945"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230706 17:22:23.945" endtime="20230706 17:22:23.946"/>
</kw>
<status status="PASS" starttime="20230706 17:22:23.945" endtime="20230706 17:22:23.946"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230706 17:22:23.952" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230706 17:22:23.969" level="INFO">${rc} = 0</msg>
<msg timestamp="20230706 17:22:23.969" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230706 17:22:23.949" endtime="20230706 17:22:23.969"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230706 17:22:23.970" level="INFO">200</msg>
<status status="PASS" starttime="20230706 17:22:23.969" endtime="20230706 17:22:23.970"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230706 17:22:23.971" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230706 17:22:23.970" endtime="20230706 17:22:23.971"/>
</kw>
<status status="PASS" starttime="20230706 17:22:23.948" endtime="20230706 17:22:23.971"/>
</kw>
<msg timestamp="20230706 17:22:23.972" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230706 17:22:23.947" endtime="20230706 17:22:23.972"/>
</kw>
<msg timestamp="20230706 17:22:23.972" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230706 17:22:23.947" endtime="20230706 17:22:23.972"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230706 17:22:23.973" endtime="20230706 17:22:23.973"/>
</kw>
<status status="NOT RUN" starttime="20230706 17:22:23.972" endtime="20230706 17:22:23.973"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230706 17:22:23.973" endtime="20230706 17:22:23.973"/>
</kw>
<status status="PASS" starttime="20230706 17:22:23.973" endtime="20230706 17:22:23.973"/>
</branch>
<status status="PASS" starttime="20230706 17:22:23.972" endtime="20230706 17:22:23.973"/>
</if>
<status status="PASS" starttime="20230706 17:22:23.946" endtime="20230706 17:22:23.974"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230706 17:22:23.974" endtime="20230706 17:22:23.975"/>
</kw>
<status status="PASS" starttime="20230706 17:22:23.974" endtime="20230706 17:22:23.975"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230706 17:22:23.979" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230706 17:22:23.999" level="INFO">${rc} = 0</msg>
<msg timestamp="20230706 17:22:23.999" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230706 17:22:23.977" endtime="20230706 17:22:23.999"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230706 17:22:24.000" level="INFO">200</msg>
<status status="PASS" starttime="20230706 17:22:23.999" endtime="20230706 17:22:24.000"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230706 17:22:24.001" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230706 17:22:24.001" endtime="20230706 17:22:24.001"/>
</kw>
<status status="PASS" starttime="20230706 17:22:23.976" endtime="20230706 17:22:24.002"/>
</kw>
<msg timestamp="20230706 17:22:24.002" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230706 17:22:23.976" endtime="20230706 17:22:24.002"/>
</kw>
<msg timestamp="20230706 17:22:24.002" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230706 17:22:23.975" endtime="20230706 17:22:24.002"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230706 17:22:24.003" endtime="20230706 17:22:24.003"/>
</kw>
<status status="NOT RUN" starttime="20230706 17:22:24.002" endtime="20230706 17:22:24.003"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230706 17:22:24.003" endtime="20230706 17:22:24.003"/>
</kw>
<status status="PASS" starttime="20230706 17:22:24.003" endtime="20230706 17:22:24.003"/>
</branch>
<status status="PASS" starttime="20230706 17:22:24.002" endtime="20230706 17:22:24.003"/>
</if>
<status status="PASS" starttime="20230706 17:22:23.975" endtime="20230706 17:22:24.004"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230706 17:22:24.004" endtime="20230706 17:22:24.005"/>
</kw>
<status status="PASS" starttime="20230706 17:22:24.004" endtime="20230706 17:22:24.005"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230706 17:22:24.010" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230706 17:22:24.027" level="INFO">${rc} = 0</msg>
<msg timestamp="20230706 17:22:24.027" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230706 17:22:24.007" endtime="20230706 17:22:24.027"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230706 17:22:24.029" level="INFO">200</msg>
<status status="PASS" starttime="20230706 17:22:24.027" endtime="20230706 17:22:24.029"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230706 17:22:24.030" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230706 17:22:24.029" endtime="20230706 17:22:24.030"/>
</kw>
<status status="PASS" starttime="20230706 17:22:24.006" endtime="20230706 17:22:24.030"/>
</kw>
<msg timestamp="20230706 17:22:24.030" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230706 17:22:24.006" endtime="20230706 17:22:24.030"/>
</kw>
<msg timestamp="20230706 17:22:24.031" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230706 17:22:24.006" endtime="20230706 17:22:24.031"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230706 17:22:24.032" endtime="20230706 17:22:24.032"/>
</kw>
<status status="NOT RUN" starttime="20230706 17:22:24.031" endtime="20230706 17:22:24.032"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230706 17:22:24.032" endtime="20230706 17:22:24.032"/>
</kw>
<status status="PASS" starttime="20230706 17:22:24.032" endtime="20230706 17:22:24.033"/>
</branch>
<status status="PASS" starttime="20230706 17:22:24.031" endtime="20230706 17:22:24.033"/>
</if>
<status status="PASS" starttime="20230706 17:22:24.005" endtime="20230706 17:22:24.033"/>
</kw>
<status status="PASS" starttime="20230706 17:22:23.876" endtime="20230706 17:22:24.033"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230706 17:22:23.875" endtime="20230706 17:22:24.033"/>
</test>
<test id="s1-s2-s2-t5" name="Check Disk Usage api access" line="113">
<kw name="Check Access">
<arg>${DISK_USAGE_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230706 17:22:24.041" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230706 17:22:24.046" level="INFO">${rc} = 0</msg>
<msg timestamp="20230706 17:22:24.046" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230706 17:22:24.038" endtime="20230706 17:22:24.046"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230706 17:22:24.048" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230706 17:22:24.047" endtime="20230706 17:22:24.048"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230706 17:22:24.049" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230706 17:22:24.048" endtime="20230706 17:22:24.049"/>
</kw>
<status status="PASS" starttime="20230706 17:22:24.037" endtime="20230706 17:22:24.049"/>
</kw>
<msg timestamp="20230706 17:22:24.049" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230706 17:22:24.037" endtime="20230706 17:22:24.049"/>
</kw>
<status status="PASS" starttime="20230706 17:22:24.036" endtime="20230706 17:22:24.050"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230706 17:22:24.055" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230706 17:22:24.086" level="INFO">${rc} = 0</msg>
<msg timestamp="20230706 17:22:24.086" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230706 17:22:24.052" endtime="20230706 17:22:24.086"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230706 17:22:24.088" level="INFO">200</msg>
<status status="PASS" starttime="20230706 17:22:24.087" endtime="20230706 17:22:24.088"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230706 17:22:24.089" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230706 17:22:24.088" endtime="20230706 17:22:24.089"/>
</kw>
<status status="PASS" starttime="20230706 17:22:24.051" endtime="20230706 17:22:24.089"/>
</kw>
<msg timestamp="20230706 17:22:24.089" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230706 17:22:24.051" endtime="20230706 17:22:24.089"/>
</kw>
<msg timestamp="20230706 17:22:24.090" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230706 17:22:24.050" endtime="20230706 17:22:24.090"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230706 17:22:24.090" endtime="20230706 17:22:24.090"/>
</kw>
<status status="NOT RUN" starttime="20230706 17:22:24.090" endtime="20230706 17:22:24.090"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230706 17:22:24.090" endtime="20230706 17:22:24.091"/>
</kw>
<status status="PASS" starttime="20230706 17:22:24.090" endtime="20230706 17:22:24.091"/>
</branch>
<status status="PASS" starttime="20230706 17:22:24.090" endtime="20230706 17:22:24.091"/>
</if>
<status status="PASS" starttime="20230706 17:22:24.050" endtime="20230706 17:22:24.091"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230706 17:22:24.092" endtime="20230706 17:22:24.092"/>
</kw>
<status status="PASS" starttime="20230706 17:22:24.091" endtime="20230706 17:22:24.092"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230706 17:22:24.097" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230706 17:22:24.123" level="INFO">${rc} = 0</msg>
<msg timestamp="20230706 17:22:24.123" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230706 17:22:24.094" endtime="20230706 17:22:24.123"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230706 17:22:24.125" level="INFO">200</msg>
<status status="PASS" starttime="20230706 17:22:24.123" endtime="20230706 17:22:24.125"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230706 17:22:24.126" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230706 17:22:24.125" endtime="20230706 17:22:24.126"/>
</kw>
<status status="PASS" starttime="20230706 17:22:24.094" endtime="20230706 17:22:24.126"/>
</kw>
<msg timestamp="20230706 17:22:24.126" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230706 17:22:24.094" endtime="20230706 17:22:24.126"/>
</kw>
<msg timestamp="20230706 17:22:24.127" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230706 17:22:24.093" endtime="20230706 17:22:24.127"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230706 17:22:24.127" endtime="20230706 17:22:24.127"/>
</kw>
<status status="NOT RUN" starttime="20230706 17:22:24.127" endtime="20230706 17:22:24.127"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230706 17:22:24.128" endtime="20230706 17:22:24.128"/>
</kw>
<status status="PASS" starttime="20230706 17:22:24.127" endtime="20230706 17:22:24.128"/>
</branch>
<status status="PASS" starttime="20230706 17:22:24.127" endtime="20230706 17:22:24.128"/>
</if>
<status status="PASS" starttime="20230706 17:22:24.092" endtime="20230706 17:22:24.128"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230706 17:22:24.129" endtime="20230706 17:22:24.130"/>
</kw>
<status status="PASS" starttime="20230706 17:22:24.129" endtime="20230706 17:22:24.130"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230706 17:22:24.136" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230706 17:22:24.155" level="INFO">${rc} = 0</msg>
<msg timestamp="20230706 17:22:24.155" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230706 17:22:24.132" endtime="20230706 17:22:24.155"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230706 17:22:24.156" level="INFO">200</msg>
<status status="PASS" starttime="20230706 17:22:24.155" endtime="20230706 17:22:24.156"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230706 17:22:24.157" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230706 17:22:24.156" endtime="20230706 17:22:24.157"/>
</kw>
<status status="PASS" starttime="20230706 17:22:24.131" endtime="20230706 17:22:24.158"/>
</kw>
<msg timestamp="20230706 17:22:24.158" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230706 17:22:24.131" endtime="20230706 17:22:24.158"/>
</kw>
<msg timestamp="20230706 17:22:24.158" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230706 17:22:24.131" endtime="20230706 17:22:24.158"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230706 17:22:24.159" endtime="20230706 17:22:24.159"/>
</kw>
<status status="NOT RUN" starttime="20230706 17:22:24.158" endtime="20230706 17:22:24.159"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230706 17:22:24.159" endtime="20230706 17:22:24.160"/>
</kw>
<status status="PASS" starttime="20230706 17:22:24.159" endtime="20230706 17:22:24.160"/>
</branch>
<status status="PASS" starttime="20230706 17:22:24.158" endtime="20230706 17:22:24.160"/>
</if>
<status status="PASS" starttime="20230706 17:22:24.130" endtime="20230706 17:22:24.160"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230706 17:22:24.161" endtime="20230706 17:22:24.161"/>
</kw>
<status status="PASS" starttime="20230706 17:22:24.160" endtime="20230706 17:22:24.161"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230706 17:22:24.166" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230706 17:22:24.185" level="INFO">${rc} = 0</msg>
<msg timestamp="20230706 17:22:24.185" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230706 17:22:24.163" endtime="20230706 17:22:24.185"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230706 17:22:24.186" level="INFO">200</msg>
<status status="PASS" starttime="20230706 17:22:24.185" endtime="20230706 17:22:24.186"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230706 17:22:24.187" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230706 17:22:24.187" endtime="20230706 17:22:24.187"/>
</kw>
<status status="PASS" starttime="20230706 17:22:24.163" endtime="20230706 17:22:24.187"/>
</kw>
<msg timestamp="20230706 17:22:24.187" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230706 17:22:24.162" endtime="20230706 17:22:24.188"/>
</kw>
<msg timestamp="20230706 17:22:24.188" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230706 17:22:24.162" endtime="20230706 17:22:24.188"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230706 17:22:24.189" endtime="20230706 17:22:24.189"/>
</kw>
<status status="NOT RUN" starttime="20230706 17:22:24.188" endtime="20230706 17:22:24.189"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230706 17:22:24.189" endtime="20230706 17:22:24.189"/>
</kw>
<status status="PASS" starttime="20230706 17:22:24.189" endtime="20230706 17:22:24.189"/>
</branch>
<status status="PASS" starttime="20230706 17:22:24.188" endtime="20230706 17:22:24.190"/>
</if>
<status status="PASS" starttime="20230706 17:22:24.161" endtime="20230706 17:22:24.190"/>
</kw>
<status status="PASS" starttime="20230706 17:22:24.036" endtime="20230706 17:22:24.190"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230706 17:22:24.035" endtime="20230706 17:22:24.190"/>
</test>
<test id="s1-s2-s2-t6" name="Check Quota Usage api access" line="116">
<kw name="Check Access">
<arg>${QUOTA_USAGE_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230706 17:22:24.198" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230706 17:22:24.201" level="INFO">${rc} = 0</msg>
<msg timestamp="20230706 17:22:24.201" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230706 17:22:24.194" endtime="20230706 17:22:24.201"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230706 17:22:24.202" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230706 17:22:24.202" endtime="20230706 17:22:24.203"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230706 17:22:24.203" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230706 17:22:24.203" endtime="20230706 17:22:24.203"/>
</kw>
<status status="PASS" starttime="20230706 17:22:24.194" endtime="20230706 17:22:24.204"/>
</kw>
<msg timestamp="20230706 17:22:24.204" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230706 17:22:24.193" endtime="20230706 17:22:24.204"/>
</kw>
<status status="PASS" starttime="20230706 17:22:24.193" endtime="20230706 17:22:24.204"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230706 17:22:24.209" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230706 17:22:24.239" level="INFO">${rc} = 0</msg>
<msg timestamp="20230706 17:22:24.239" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230706 17:22:24.206" endtime="20230706 17:22:24.239"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230706 17:22:24.241" level="INFO">200</msg>
<status status="PASS" starttime="20230706 17:22:24.239" endtime="20230706 17:22:24.242"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230706 17:22:24.242" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230706 17:22:24.242" endtime="20230706 17:22:24.243"/>
</kw>
<status status="PASS" starttime="20230706 17:22:24.206" endtime="20230706 17:22:24.243"/>
</kw>
<msg timestamp="20230706 17:22:24.243" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230706 17:22:24.206" endtime="20230706 17:22:24.243"/>
</kw>
<msg timestamp="20230706 17:22:24.243" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230706 17:22:24.205" endtime="20230706 17:22:24.243"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230706 17:22:24.244" endtime="20230706 17:22:24.244"/>
</kw>
<status status="NOT RUN" starttime="20230706 17:22:24.244" endtime="20230706 17:22:24.244"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230706 17:22:24.244" endtime="20230706 17:22:24.245"/>
</kw>
<status status="PASS" starttime="20230706 17:22:24.244" endtime="20230706 17:22:24.245"/>
</branch>
<status status="PASS" starttime="20230706 17:22:24.244" endtime="20230706 17:22:24.245"/>
</if>
<status status="PASS" starttime="20230706 17:22:24.204" endtime="20230706 17:22:24.245"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230706 17:22:24.246" endtime="20230706 17:22:24.246"/>
</kw>
<status status="PASS" starttime="20230706 17:22:24.245" endtime="20230706 17:22:24.246"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230706 17:22:24.251" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230706 17:22:24.271" level="INFO">${rc} = 0</msg>
<msg timestamp="20230706 17:22:24.271" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230706 17:22:24.248" endtime="20230706 17:22:24.271"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230706 17:22:24.279" level="INFO">200</msg>
<status status="PASS" starttime="20230706 17:22:24.278" endtime="20230706 17:22:24.279"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230706 17:22:24.279" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230706 17:22:24.279" endtime="20230706 17:22:24.279"/>
</kw>
<status status="PASS" starttime="20230706 17:22:24.248" endtime="20230706 17:22:24.280"/>
</kw>
<msg timestamp="20230706 17:22:24.280" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230706 17:22:24.247" endtime="20230706 17:22:24.281"/>
</kw>
<msg timestamp="20230706 17:22:24.281" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230706 17:22:24.247" endtime="20230706 17:22:24.281"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230706 17:22:24.282" endtime="20230706 17:22:24.282"/>
</kw>
<status status="NOT RUN" starttime="20230706 17:22:24.281" endtime="20230706 17:22:24.282"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230706 17:22:24.282" endtime="20230706 17:22:24.283"/>
</kw>
<status status="PASS" starttime="20230706 17:22:24.282" endtime="20230706 17:22:24.283"/>
</branch>
<status status="PASS" starttime="20230706 17:22:24.281" endtime="20230706 17:22:24.283"/>
</if>
<status status="PASS" starttime="20230706 17:22:24.246" endtime="20230706 17:22:24.283"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230706 17:22:24.284" endtime="20230706 17:22:24.284"/>
</kw>
<status status="PASS" starttime="20230706 17:22:24.283" endtime="20230706 17:22:24.284"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230706 17:22:24.289" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230706 17:22:24.309" level="INFO">${rc} = 0</msg>
<msg timestamp="20230706 17:22:24.309" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230706 17:22:24.286" endtime="20230706 17:22:24.309"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230706 17:22:24.310" level="INFO">200</msg>
<status status="PASS" starttime="20230706 17:22:24.309" endtime="20230706 17:22:24.310"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230706 17:22:24.311" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230706 17:22:24.310" endtime="20230706 17:22:24.311"/>
</kw>
<status status="PASS" starttime="20230706 17:22:24.286" endtime="20230706 17:22:24.311"/>
</kw>
<msg timestamp="20230706 17:22:24.311" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230706 17:22:24.285" endtime="20230706 17:22:24.312"/>
</kw>
<msg timestamp="20230706 17:22:24.312" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230706 17:22:24.285" endtime="20230706 17:22:24.312"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230706 17:22:24.312" endtime="20230706 17:22:24.313"/>
</kw>
<status status="NOT RUN" starttime="20230706 17:22:24.312" endtime="20230706 17:22:24.313"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230706 17:22:24.315" endtime="20230706 17:22:24.320"/>
</kw>
<status status="PASS" starttime="20230706 17:22:24.315" endtime="20230706 17:22:24.320"/>
</branch>
<status status="PASS" starttime="20230706 17:22:24.312" endtime="20230706 17:22:24.321"/>
</if>
<status status="PASS" starttime="20230706 17:22:24.284" endtime="20230706 17:22:24.321"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230706 17:22:24.321" endtime="20230706 17:22:24.322"/>
</kw>
<status status="PASS" starttime="20230706 17:22:24.321" endtime="20230706 17:22:24.322"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230706 17:22:24.328" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230706 17:22:24.347" level="INFO">${rc} = 0</msg>
<msg timestamp="20230706 17:22:24.347" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230706 17:22:24.325" endtime="20230706 17:22:24.347"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230706 17:22:24.349" level="INFO">200</msg>
<status status="PASS" starttime="20230706 17:22:24.348" endtime="20230706 17:22:24.349"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230706 17:22:24.350" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230706 17:22:24.349" endtime="20230706 17:22:24.350"/>
</kw>
<status status="PASS" starttime="20230706 17:22:24.324" endtime="20230706 17:22:24.350"/>
</kw>
<msg timestamp="20230706 17:22:24.350" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230706 17:22:24.324" endtime="20230706 17:22:24.350"/>
</kw>
<msg timestamp="20230706 17:22:24.350" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230706 17:22:24.323" endtime="20230706 17:22:24.350"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230706 17:22:24.351" endtime="20230706 17:22:24.351"/>
</kw>
<status status="NOT RUN" starttime="20230706 17:22:24.351" endtime="20230706 17:22:24.351"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230706 17:22:24.351" endtime="20230706 17:22:24.352"/>
</kw>
<status status="PASS" starttime="20230706 17:22:24.351" endtime="20230706 17:22:24.352"/>
</branch>
<status status="PASS" starttime="20230706 17:22:24.351" endtime="20230706 17:22:24.353"/>
</if>
<status status="PASS" starttime="20230706 17:22:24.322" endtime="20230706 17:22:24.353"/>
</kw>
<status status="PASS" starttime="20230706 17:22:24.192" endtime="20230706 17:22:24.353"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230706 17:22:24.191" endtime="20230706 17:22:24.353"/>
</test>
<test id="s1-s2-s2-t7" name="Check File Size Distribution api access" line="119">
<kw name="Check Access">
<arg>${FILE_SIZE_DIST_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230706 17:22:24.360" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230706 17:22:24.364" level="INFO">${rc} = 0</msg>
<msg timestamp="20230706 17:22:24.364" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230706 17:22:24.358" endtime="20230706 17:22:24.364"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230706 17:22:24.365" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230706 17:22:24.365" endtime="20230706 17:22:24.366"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230706 17:22:24.366" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230706 17:22:24.366" endtime="20230706 17:22:24.366"/>
</kw>
<status status="PASS" starttime="20230706 17:22:24.357" endtime="20230706 17:22:24.367"/>
</kw>
<msg timestamp="20230706 17:22:24.367" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230706 17:22:24.357" endtime="20230706 17:22:24.367"/>
</kw>
<status status="PASS" starttime="20230706 17:22:24.356" endtime="20230706 17:22:24.367"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230706 17:22:24.371" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230706 17:22:24.395" level="INFO">${rc} = 0</msg>
<msg timestamp="20230706 17:22:24.395" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230706 17:22:24.369" endtime="20230706 17:22:24.395"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230706 17:22:24.397" level="INFO">200</msg>
<status status="PASS" starttime="20230706 17:22:24.396" endtime="20230706 17:22:24.397"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230706 17:22:24.397" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230706 17:22:24.397" endtime="20230706 17:22:24.397"/>
</kw>
<status status="PASS" starttime="20230706 17:22:24.369" endtime="20230706 17:22:24.397"/>
</kw>
<msg timestamp="20230706 17:22:24.398" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230706 17:22:24.368" endtime="20230706 17:22:24.398"/>
</kw>
<msg timestamp="20230706 17:22:24.398" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230706 17:22:24.368" endtime="20230706 17:22:24.398"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230706 17:22:24.398" endtime="20230706 17:22:24.398"/>
</kw>
<status status="NOT RUN" starttime="20230706 17:22:24.398" endtime="20230706 17:22:24.398"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230706 17:22:24.399" endtime="20230706 17:22:24.399"/>
</kw>
<status status="PASS" starttime="20230706 17:22:24.399" endtime="20230706 17:22:24.399"/>
</branch>
<status status="PASS" starttime="20230706 17:22:24.398" endtime="20230706 17:22:24.399"/>
</if>
<status status="PASS" starttime="20230706 17:22:24.367" endtime="20230706 17:22:24.399"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230706 17:22:24.400" endtime="20230706 17:22:24.400"/>
</kw>
<status status="PASS" starttime="20230706 17:22:24.399" endtime="20230706 17:22:24.401"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230706 17:22:24.405" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230706 17:22:24.420" level="INFO">${rc} = 0</msg>
<msg timestamp="20230706 17:22:24.420" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230706 17:22:24.403" endtime="20230706 17:22:24.420"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230706 17:22:24.422" level="INFO">200</msg>
<status status="PASS" starttime="20230706 17:22:24.421" endtime="20230706 17:22:24.422"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230706 17:22:24.422" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230706 17:22:24.422" endtime="20230706 17:22:24.422"/>
</kw>
<status status="PASS" starttime="20230706 17:22:24.402" endtime="20230706 17:22:24.423"/>
</kw>
<msg timestamp="20230706 17:22:24.423" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230706 17:22:24.402" endtime="20230706 17:22:24.423"/>
</kw>
<msg timestamp="20230706 17:22:24.423" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230706 17:22:24.401" endtime="20230706 17:22:24.423"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230706 17:22:24.424" endtime="20230706 17:22:24.424"/>
</kw>
<status status="NOT RUN" starttime="20230706 17:22:24.423" endtime="20230706 17:22:24.424"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230706 17:22:24.424" endtime="20230706 17:22:24.424"/>
</kw>
<status status="PASS" starttime="20230706 17:22:24.424" endtime="20230706 17:22:24.425"/>
</branch>
<status status="PASS" starttime="20230706 17:22:24.423" endtime="20230706 17:22:24.425"/>
</if>
<status status="PASS" starttime="20230706 17:22:24.401" endtime="20230706 17:22:24.425"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230706 17:22:24.426" endtime="20230706 17:22:24.426"/>
</kw>
<status status="PASS" starttime="20230706 17:22:24.425" endtime="20230706 17:22:24.426"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230706 17:22:24.431" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230706 17:22:24.449" level="INFO">${rc} = 0</msg>
<msg timestamp="20230706 17:22:24.449" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230706 17:22:24.428" endtime="20230706 17:22:24.449"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230706 17:22:24.450" level="INFO">200</msg>
<status status="PASS" starttime="20230706 17:22:24.449" endtime="20230706 17:22:24.450"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230706 17:22:24.450" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230706 17:22:24.450" endtime="20230706 17:22:24.451"/>
</kw>
<status status="PASS" starttime="20230706 17:22:24.428" endtime="20230706 17:22:24.451"/>
</kw>
<msg timestamp="20230706 17:22:24.451" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230706 17:22:24.427" endtime="20230706 17:22:24.451"/>
</kw>
<msg timestamp="20230706 17:22:24.451" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230706 17:22:24.427" endtime="20230706 17:22:24.451"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230706 17:22:24.452" endtime="20230706 17:22:24.452"/>
</kw>
<status status="NOT RUN" starttime="20230706 17:22:24.451" endtime="20230706 17:22:24.452"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230706 17:22:24.453" endtime="20230706 17:22:24.454"/>
</kw>
<status status="PASS" starttime="20230706 17:22:24.452" endtime="20230706 17:22:24.454"/>
</branch>
<status status="PASS" starttime="20230706 17:22:24.451" endtime="20230706 17:22:24.454"/>
</if>
<status status="PASS" starttime="20230706 17:22:24.426" endtime="20230706 17:22:24.454"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230706 17:22:24.455" endtime="20230706 17:22:24.455"/>
</kw>
<status status="PASS" starttime="20230706 17:22:24.454" endtime="20230706 17:22:24.455"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230706 17:22:24.459" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230706 17:22:24.477" level="INFO">${rc} = 0</msg>
<msg timestamp="20230706 17:22:24.477" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230706 17:22:24.457" endtime="20230706 17:22:24.477"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230706 17:22:24.478" level="INFO">200</msg>
<status status="PASS" starttime="20230706 17:22:24.477" endtime="20230706 17:22:24.478"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230706 17:22:24.479" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230706 17:22:24.479" endtime="20230706 17:22:24.479"/>
</kw>
<status status="PASS" starttime="20230706 17:22:24.457" endtime="20230706 17:22:24.480"/>
</kw>
<msg timestamp="20230706 17:22:24.480" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230706 17:22:24.456" endtime="20230706 17:22:24.480"/>
</kw>
<msg timestamp="20230706 17:22:24.480" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230706 17:22:24.456" endtime="20230706 17:22:24.480"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230706 17:22:24.481" endtime="20230706 17:22:24.481"/>
</kw>
<status status="NOT RUN" starttime="20230706 17:22:24.480" endtime="20230706 17:22:24.481"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230706 17:22:24.481" endtime="20230706 17:22:24.481"/>
</kw>
<status status="PASS" starttime="20230706 17:22:24.481" endtime="20230706 17:22:24.481"/>
</branch>
<status status="PASS" starttime="20230706 17:22:24.480" endtime="20230706 17:22:24.481"/>
</if>
<status status="PASS" starttime="20230706 17:22:24.455" endtime="20230706 17:22:24.482"/>
</kw>
<status status="PASS" starttime="20230706 17:22:24.355" endtime="20230706 17:22:24.482"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230706 17:22:24.355" endtime="20230706 17:22:24.482"/>
</test>
<test id="s1-s2-s2-t8" name="Check Recon Namespace Summary Root" line="122">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/</arg>
<arg>ROOT</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230706 17:22:24.490" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230706 17:22:24.506" level="INFO">${rc} = 0</msg>
<msg timestamp="20230706 17:22:24.506" level="INFO">${output} = {"path":"","type":"ROOT","countStats":{"numVolume":3,"numBucket":2,"numDir":1,"numKey":1},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTim...</msg>
<status status="PASS" starttime="20230706 17:22:24.487" endtime="20230706 17:22:24.507"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230706 17:22:24.508" level="INFO">{"path":"","type":"ROOT","countStats":{"numVolume":3,"numBucket":2,"numDir":1,"numKey":1},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":0,"modificationTime":0,"acls":null},"status":"OK"}</msg>
<status status="PASS" starttime="20230706 17:22:24.507" endtime="20230706 17:22:24.508"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230706 17:22:24.508" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230706 17:22:24.508" endtime="20230706 17:22:24.508"/>
</kw>
<status status="PASS" starttime="20230706 17:22:24.487" endtime="20230706 17:22:24.509"/>
</kw>
<msg timestamp="20230706 17:22:24.509" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230706 17:22:24.486" endtime="20230706 17:22:24.509"/>
</kw>
<msg timestamp="20230706 17:22:24.509" level="INFO">${result} = {"path":"","type":"ROOT","countStats":{"numVolume":3,"numBucket":2,"numDir":1,"numKey":1},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTim...</msg>
<status status="PASS" starttime="20230706 17:22:24.486" endtime="20230706 17:22:24.509"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230706 17:22:24.509" endtime="20230706 17:22:24.510"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230706 17:22:24.510" endtime="20230706 17:22:24.510"/>
</kw>
<status status="PASS" starttime="20230706 17:22:24.485" endtime="20230706 17:22:24.511"/>
</kw>
<status status="PASS" starttime="20230706 17:22:24.484" endtime="20230706 17:22:24.511"/>
</kw>
<status status="PASS" starttime="20230706 17:22:24.483" endtime="20230706 17:22:24.511"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230706 17:22:24.483" endtime="20230706 17:22:24.511"/>
</test>
<test id="s1-s2-s2-t9" name="Check Recon Namespace Summary Volume" line="125">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}</arg>
<arg>VOLUME</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230706 17:22:24.518" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-ovtrw 2&gt;&amp;1'.</msg>
<msg timestamp="20230706 17:22:24.532" level="INFO">${rc} = 0</msg>
<msg timestamp="20230706 17:22:24.532" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230706 17:22:24.515" endtime="20230706 17:22:24.532"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230706 17:22:24.533" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230706 17:22:24.532" endtime="20230706 17:22:24.533"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230706 17:22:24.534" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230706 17:22:24.534" endtime="20230706 17:22:24.534"/>
</kw>
<status status="PASS" starttime="20230706 17:22:24.515" endtime="20230706 17:22:24.535"/>
</kw>
<msg timestamp="20230706 17:22:24.535" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230706 17:22:24.514" endtime="20230706 17:22:24.535"/>
</kw>
<msg timestamp="20230706 17:22:24.535" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230706 17:22:24.514" endtime="20230706 17:22:24.535"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230706 17:22:24.536" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20230706 17:22:24.535" endtime="20230706 17:22:24.536"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230706 17:22:24.536" endtime="20230706 17:22:24.537"/>
</kw>
<status status="FAIL" starttime="20230706 17:22:24.514" endtime="20230706 17:22:24.540"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230706 17:22:34.549" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-ovtrw 2&gt;&amp;1'.</msg>
<msg timestamp="20230706 17:22:34.565" level="INFO">${rc} = 0</msg>
<msg timestamp="20230706 17:22:34.565" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230706 17:22:34.545" endtime="20230706 17:22:34.565"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230706 17:22:34.567" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230706 17:22:34.566" endtime="20230706 17:22:34.567"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230706 17:22:34.568" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230706 17:22:34.567" endtime="20230706 17:22:34.568"/>
</kw>
<status status="PASS" starttime="20230706 17:22:34.544" endtime="20230706 17:22:34.568"/>
</kw>
<msg timestamp="20230706 17:22:34.569" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230706 17:22:34.543" endtime="20230706 17:22:34.569"/>
</kw>
<msg timestamp="20230706 17:22:34.569" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230706 17:22:34.542" endtime="20230706 17:22:34.569"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230706 17:22:34.570" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20230706 17:22:34.570" endtime="20230706 17:22:34.570"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230706 17:22:34.571" endtime="20230706 17:22:34.571"/>
</kw>
<status status="FAIL" starttime="20230706 17:22:34.541" endtime="20230706 17:22:34.571"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230706 17:22:44.577" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-ovtrw 2&gt;&amp;1'.</msg>
<msg timestamp="20230706 17:22:44.595" level="INFO">${rc} = 0</msg>
<msg timestamp="20230706 17:22:44.595" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230706 17:22:44.574" endtime="20230706 17:22:44.596"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230706 17:22:44.597" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230706 17:22:44.596" endtime="20230706 17:22:44.597"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230706 17:22:44.598" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230706 17:22:44.598" endtime="20230706 17:22:44.598"/>
</kw>
<status status="PASS" starttime="20230706 17:22:44.573" endtime="20230706 17:22:44.599"/>
</kw>
<msg timestamp="20230706 17:22:44.599" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230706 17:22:44.573" endtime="20230706 17:22:44.599"/>
</kw>
<msg timestamp="20230706 17:22:44.599" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20230706 17:22:44.572" endtime="20230706 17:22:44.599"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230706 17:22:44.600" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20230706 17:22:44.599" endtime="20230706 17:22:44.600"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230706 17:22:44.600" endtime="20230706 17:22:44.600"/>
</kw>
<status status="FAIL" starttime="20230706 17:22:44.571" endtime="20230706 17:22:44.601"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230706 17:22:54.607" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-ovtrw 2&gt;&amp;1'.</msg>
<msg timestamp="20230706 17:22:54.660" level="INFO">${rc} = 0</msg>
<msg timestamp="20230706 17:22:54.660" level="INFO">${output} = {"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":{},"name":"vol-ovtrw","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"c...</msg>
<status status="PASS" starttime="20230706 17:22:54.604" endtime="20230706 17:22:54.660"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230706 17:22:54.662" level="INFO">{"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":{},"name":"vol-ovtrw","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"creationTime":1688664121423,"modificationTime":1688664121423,"acls":[{"type":"USER","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]}],"admin":"hadoop","owner":"hadoop","volume":"vol-ovtrw"},"status":"OK"}</msg>
<status status="PASS" starttime="20230706 17:22:54.661" endtime="20230706 17:22:54.662"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230706 17:22:54.663" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230706 17:22:54.662" endtime="20230706 17:22:54.663"/>
</kw>
<status status="PASS" starttime="20230706 17:22:54.603" endtime="20230706 17:22:54.663"/>
</kw>
<msg timestamp="20230706 17:22:54.663" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230706 17:22:54.603" endtime="20230706 17:22:54.663"/>
</kw>
<msg timestamp="20230706 17:22:54.665" level="INFO">${result} = {"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":{},"name":"vol-ovtrw","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"c...</msg>
<status status="PASS" starttime="20230706 17:22:54.602" endtime="20230706 17:22:54.665"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230706 17:22:54.665" endtime="20230706 17:22:54.665"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230706 17:22:54.667" endtime="20230706 17:22:54.667"/>
</kw>
<status status="PASS" starttime="20230706 17:22:54.601" endtime="20230706 17:22:54.668"/>
</kw>
<status status="PASS" starttime="20230706 17:22:24.513" endtime="20230706 17:22:54.668"/>
</kw>
<status status="PASS" starttime="20230706 17:22:24.512" endtime="20230706 17:22:54.669"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230706 17:22:24.512" endtime="20230706 17:22:54.669"/>
</test>
<test id="s1-s2-s2-t10" name="Check Recon Namespace Summary Bucket" line="128">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}</arg>
<arg>BUCKET</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230706 17:22:54.689" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-ovtrw/buc-smliy 2&gt;&amp;1'.</msg>
<msg timestamp="20230706 17:22:54.731" level="INFO">${rc} = 0</msg>
<msg timestamp="20230706 17:22:54.731" level="INFO">${output} = {"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-smliy","quotaInBytes":-1,"quotaInNamespa...</msg>
<status status="PASS" starttime="20230706 17:22:54.683" endtime="20230706 17:22:54.732"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230706 17:22:54.733" level="INFO">{"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-smliy","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":4,"creationTime":1688664126950,"modificationTime":1688664126950,"acls":[{"type":"USER","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]}],"volumeName":"vol-ovtrw","storageType":"DISK","versioning":false,"usedBytes":null,"encryptionInfo":null,"replicationConfigInfo":null,"sourceVolume":null,"sourceBucket":null,"bucketLayout":"FILE_SYSTEM_OPTIMIZED","owner":"hadoop"},"status":"OK"}</msg>
<status status="PASS" starttime="20230706 17:22:54.732" endtime="20230706 17:22:54.733"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230706 17:22:54.737" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230706 17:22:54.733" endtime="20230706 17:22:54.737"/>
</kw>
<status status="PASS" starttime="20230706 17:22:54.682" endtime="20230706 17:22:54.737"/>
</kw>
<msg timestamp="20230706 17:22:54.737" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230706 17:22:54.682" endtime="20230706 17:22:54.738"/>
</kw>
<msg timestamp="20230706 17:22:54.738" level="INFO">${result} = {"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-smliy","quotaInBytes":-1,"quotaInNamespa...</msg>
<status status="PASS" starttime="20230706 17:22:54.680" endtime="20230706 17:22:54.738"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230706 17:22:54.738" endtime="20230706 17:22:54.739"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230706 17:22:54.739" endtime="20230706 17:22:54.739"/>
</kw>
<status status="PASS" starttime="20230706 17:22:54.679" endtime="20230706 17:22:54.740"/>
</kw>
<status status="PASS" starttime="20230706 17:22:54.676" endtime="20230706 17:22:54.740"/>
</kw>
<status status="PASS" starttime="20230706 17:22:54.674" endtime="20230706 17:22:54.740"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230706 17:22:54.671" endtime="20230706 17:22:54.740"/>
</test>
<test id="s1-s2-s2-t11" name="Check Recon Namespace Summary Key" line="131">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/file1</arg>
<arg>KEY</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230706 17:22:54.751" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-ovtrw/buc-smliy/file1 2&gt;&amp;1'.</msg>
<msg timestamp="20230706 17:22:54.817" level="INFO">${rc} = 0</msg>
<msg timestamp="20230706 17:22:54.818" level="INFO">${output} = {"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":false,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespac...</msg>
<status status="PASS" starttime="20230706 17:22:54.747" endtime="20230706 17:22:54.818"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230706 17:22:54.819" level="INFO">{"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":false,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":1688664132407,"modificationTime":1688664134956,"acls":[{"type":"USER","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]}],"volumeName":"vol-ovtrw","bucketName":"buc-smliy","keyName":"file1","dataSize":4068,"keyLocationVersions":[{"version":0,"locationList":[{"blockID":{"containerBlockID":{"containerID":3,"localID":111677748019200012},"blockCommitSequenceId":2,"containerID":3,"localID":111677748019200012},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"containerID":3,"localID":111677748019200012,"blockCommitSequenceId":2}],"multipartKey":false,"blocksLatestVersionOnly":[{"blockID":{"containerBlockID":{"containerID":3,"localID":111677748019200012},"blockCommitSequenceId":2,"containerID":3,"localID":111677748019200012},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"containerID":3,"localID":111677748019200012,"blockCommitSequenceId":2}],"locationLists":[[{"blockID":{"containerBlockID":{"containerID":3,"localID":111677748019200012},"blockCommitSequenceId":2,"containerID":3,"localID":111677748019200012},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"containerID":3,"localID":111677748019200012,"blockCommitSequenceId":2}]],"locationListCount":1}],"replicationConfig":{"replicationFactor":"THREE","requiredNodes":3,"replicationType":"RATIS"},"encInfo":null},"status":"OK"}</msg>
<status status="PASS" starttime="20230706 17:22:54.818" endtime="20230706 17:22:54.819"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230706 17:22:54.820" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230706 17:22:54.819" endtime="20230706 17:22:54.820"/>
</kw>
<status status="PASS" starttime="20230706 17:22:54.747" endtime="20230706 17:22:54.820"/>
</kw>
<msg timestamp="20230706 17:22:54.820" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230706 17:22:54.746" endtime="20230706 17:22:54.820"/>
</kw>
<msg timestamp="20230706 17:22:54.821" level="INFO">${result} = {"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":false,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespac...</msg>
<status status="PASS" starttime="20230706 17:22:54.746" endtime="20230706 17:22:54.821"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230706 17:22:54.821" endtime="20230706 17:22:54.821"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230706 17:22:54.822" endtime="20230706 17:22:54.822"/>
</kw>
<status status="PASS" starttime="20230706 17:22:54.745" endtime="20230706 17:22:54.823"/>
</kw>
<status status="PASS" starttime="20230706 17:22:54.745" endtime="20230706 17:22:54.823"/>
</kw>
<status status="PASS" starttime="20230706 17:22:54.744" endtime="20230706 17:22:54.824"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230706 17:22:54.743" endtime="20230706 17:22:54.824"/>
</test>
<test id="s1-s2-s2-t12" name="Check Recon Namespace Summary Directory" line="134">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET_LAYOUT}' == 'LEGACY'</arg>
<arg>Wait For Summary</arg>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2/</arg>
<arg>DIRECTORY</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230706 17:22:54.827" endtime="20230706 17:22:54.828"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET_LAYOUT}' == 'FILE_SYSTEM_OPTIMIZED'</arg>
<arg>Wait For Summary</arg>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2</arg>
<arg>DIRECTORY</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2</arg>
<arg>DIRECTORY</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230706 17:22:54.836" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-ovtrw/buc-smliy/dir1/dir2 2&gt;&amp;1'.</msg>
<msg timestamp="20230706 17:22:54.861" level="INFO">${rc} = 0</msg>
<msg timestamp="20230706 17:22:54.861" level="INFO">${output} = {"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"dir2","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"crea...</msg>
<status status="PASS" starttime="20230706 17:22:54.833" endtime="20230706 17:22:54.861"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230706 17:22:54.868" level="INFO">{"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"dir2","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":1688664140857,"modificationTime":1688664140857,"acls":[{"type":"USER","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]}]},"status":"OK"}</msg>
<status status="PASS" starttime="20230706 17:22:54.862" endtime="20230706 17:22:54.868"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230706 17:22:54.869" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230706 17:22:54.868" endtime="20230706 17:22:54.869"/>
</kw>
<status status="PASS" starttime="20230706 17:22:54.832" endtime="20230706 17:22:54.869"/>
</kw>
<msg timestamp="20230706 17:22:54.869" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230706 17:22:54.832" endtime="20230706 17:22:54.870"/>
</kw>
<msg timestamp="20230706 17:22:54.870" level="INFO">${result} = {"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"dir2","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"crea...</msg>
<status status="PASS" starttime="20230706 17:22:54.831" endtime="20230706 17:22:54.870"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230706 17:22:54.870" endtime="20230706 17:22:54.871"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230706 17:22:54.871" endtime="20230706 17:22:54.872"/>
</kw>
<status status="PASS" starttime="20230706 17:22:54.830" endtime="20230706 17:22:54.872"/>
</kw>
<status status="PASS" starttime="20230706 17:22:54.830" endtime="20230706 17:22:54.872"/>
</kw>
<status status="PASS" starttime="20230706 17:22:54.829" endtime="20230706 17:22:54.872"/>
</kw>
<status status="PASS" starttime="20230706 17:22:54.828" endtime="20230706 17:22:54.872"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230706 17:22:54.826" endtime="20230706 17:22:54.873"/>
</test>
<test id="s1-s2-s2-t13" name="Check Recon Namespace Disk Usage" line="138">
<kw name="Wait For Summary">
<arg>${DISK_USAGE_URL}?path=/${VOLUME}/${BUCKET}&amp;files=true&amp;replica=true</arg>
<arg>\"sizeWithReplica\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230706 17:22:54.883" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/du?path=/vol-ovtrw/buc-smliy&amp;files=true&amp;replica=true 2&gt;&amp;1'.</msg>
<msg timestamp="20230706 17:22:54.903" level="INFO">${rc} = 0</msg>
<msg timestamp="20230706 17:22:54.903" level="INFO">${output} = {"status":"OK","path":"/vol-ovtrw/buc-smliy","size":10106,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-ovtrw/buc-smliy/dir1","size":6038,"sizeWithReplica":-1,"isKey":fal...</msg>
<status status="PASS" starttime="20230706 17:22:54.880" endtime="20230706 17:22:54.903"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230706 17:22:54.904" level="INFO">{"status":"OK","path":"/vol-ovtrw/buc-smliy","size":10106,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-ovtrw/buc-smliy/dir1","size":6038,"sizeWithReplica":-1,"isKey":false}],"sizeDirectKey":4068}</msg>
<status status="PASS" starttime="20230706 17:22:54.903" endtime="20230706 17:22:54.904"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230706 17:22:54.906" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230706 17:22:54.904" endtime="20230706 17:22:54.906"/>
</kw>
<status status="PASS" starttime="20230706 17:22:54.879" endtime="20230706 17:22:54.906"/>
</kw>
<msg timestamp="20230706 17:22:54.907" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230706 17:22:54.879" endtime="20230706 17:22:54.907"/>
</kw>
<msg timestamp="20230706 17:22:54.907" level="INFO">${result} = {"status":"OK","path":"/vol-ovtrw/buc-smliy","size":10106,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-ovtrw/buc-smliy/dir1","size":6038,"sizeWithReplica":-1,"isKey":fal...</msg>
<status status="PASS" starttime="20230706 17:22:54.878" endtime="20230706 17:22:54.907"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230706 17:22:54.907" endtime="20230706 17:22:54.908"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230706 17:22:54.908" endtime="20230706 17:22:54.909"/>
</kw>
<status status="PASS" starttime="20230706 17:22:54.878" endtime="20230706 17:22:54.909"/>
</kw>
<status status="PASS" starttime="20230706 17:22:54.877" endtime="20230706 17:22:54.909"/>
</kw>
<status status="PASS" starttime="20230706 17:22:54.876" endtime="20230706 17:22:54.909"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230706 17:22:54.875" endtime="20230706 17:22:54.909"/>
</test>
<test id="s1-s2-s2-t14" name="Check Recon Namespace Volume Quota Usage" line="141">
<kw name="Wait For Summary">
<arg>${QUOTA_USAGE_URL}?path=/${VOLUME}</arg>
<arg>\"used\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230706 17:22:54.920" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/quota?path=/vol-ovtrw 2&gt;&amp;1'.</msg>
<msg timestamp="20230706 17:22:54.938" level="INFO">${rc} = 0</msg>
<msg timestamp="20230706 17:22:54.938" level="INFO">${output} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20230706 17:22:54.917" endtime="20230706 17:22:54.938"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230706 17:22:54.939" level="INFO">{"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20230706 17:22:54.938" endtime="20230706 17:22:54.939"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230706 17:22:54.940" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230706 17:22:54.939" endtime="20230706 17:22:54.942"/>
</kw>
<status status="PASS" starttime="20230706 17:22:54.917" endtime="20230706 17:22:54.942"/>
</kw>
<msg timestamp="20230706 17:22:54.942" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230706 17:22:54.916" endtime="20230706 17:22:54.942"/>
</kw>
<msg timestamp="20230706 17:22:54.942" level="INFO">${result} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20230706 17:22:54.914" endtime="20230706 17:22:54.942"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230706 17:22:54.943" endtime="20230706 17:22:54.945"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230706 17:22:54.945" endtime="20230706 17:22:54.945"/>
</kw>
<status status="PASS" starttime="20230706 17:22:54.914" endtime="20230706 17:22:54.945"/>
</kw>
<status status="PASS" starttime="20230706 17:22:54.913" endtime="20230706 17:22:54.946"/>
</kw>
<status status="PASS" starttime="20230706 17:22:54.912" endtime="20230706 17:22:54.946"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230706 17:22:54.911" endtime="20230706 17:22:54.946"/>
</test>
<test id="s1-s2-s2-t15" name="Check Recon Namespace Bucket Quota Usage" line="144">
<kw name="Wait For Summary">
<arg>${QUOTA_USAGE_URL}?path=/${VOLUME}/${BUCKET}</arg>
<arg>\"used\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230706 17:22:54.954" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/quota?path=/vol-ovtrw/buc-smliy 2&gt;&amp;1'.</msg>
<msg timestamp="20230706 17:22:54.971" level="INFO">${rc} = 0</msg>
<msg timestamp="20230706 17:22:54.971" level="INFO">${output} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20230706 17:22:54.952" endtime="20230706 17:22:54.971"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230706 17:22:54.973" level="INFO">{"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20230706 17:22:54.972" endtime="20230706 17:22:54.973"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230706 17:22:54.974" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230706 17:22:54.973" endtime="20230706 17:22:54.974"/>
</kw>
<status status="PASS" starttime="20230706 17:22:54.951" endtime="20230706 17:22:54.974"/>
</kw>
<msg timestamp="20230706 17:22:54.974" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230706 17:22:54.951" endtime="20230706 17:22:54.974"/>
</kw>
<msg timestamp="20230706 17:22:54.974" level="INFO">${result} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20230706 17:22:54.950" endtime="20230706 17:22:54.975"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230706 17:22:54.975" endtime="20230706 17:22:54.975"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230706 17:22:54.975" endtime="20230706 17:22:54.976"/>
</kw>
<status status="PASS" starttime="20230706 17:22:54.949" endtime="20230706 17:22:54.976"/>
</kw>
<status status="PASS" starttime="20230706 17:22:54.949" endtime="20230706 17:22:54.976"/>
</kw>
<status status="PASS" starttime="20230706 17:22:54.948" endtime="20230706 17:22:54.976"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230706 17:22:54.947" endtime="20230706 17:22:54.977"/>
</test>
<test id="s1-s2-s2-t16" name="Check Recon Namespace File Size Distribution Root" line="147">
<kw name="Wait For Summary">
<arg>${FILE_SIZE_DIST_URL}?path=/</arg>
<arg>\"dist\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230706 17:22:54.984" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230706 17:22:55.000" level="INFO">${rc} = 0</msg>
<msg timestamp="20230706 17:22:55.000" level="INFO">${output} = {"dist":[0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20230706 17:22:54.982" endtime="20230706 17:22:55.000"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230706 17:22:55.002" level="INFO">{"dist":[0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20230706 17:22:55.001" endtime="20230706 17:22:55.002"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230706 17:22:55.002" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230706 17:22:55.002" endtime="20230706 17:22:55.002"/>
</kw>
<status status="PASS" starttime="20230706 17:22:54.981" endtime="20230706 17:22:55.003"/>
</kw>
<msg timestamp="20230706 17:22:55.003" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230706 17:22:54.981" endtime="20230706 17:22:55.003"/>
</kw>
<msg timestamp="20230706 17:22:55.003" level="INFO">${result} = {"dist":[0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20230706 17:22:54.980" endtime="20230706 17:22:55.003"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230706 17:22:55.003" endtime="20230706 17:22:55.004"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230706 17:22:55.004" endtime="20230706 17:22:55.005"/>
</kw>
<status status="PASS" starttime="20230706 17:22:54.979" endtime="20230706 17:22:55.005"/>
</kw>
<status status="PASS" starttime="20230706 17:22:54.979" endtime="20230706 17:22:55.005"/>
</kw>
<status status="PASS" starttime="20230706 17:22:54.978" endtime="20230706 17:22:55.005"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230706 17:22:54.977" endtime="20230706 17:22:55.006"/>
</test>
<doc>Smoke test for Recon Namespace Summary Endpoint for FILE_SYSTEM_OPTIMIZED buckets.</doc>
<status status="PASS" starttime="20230706 17:21:56.904" endtime="20230706 17:22:55.008"/>
</suite>
<status status="PASS" starttime="20230706 17:21:14.501" endtime="20230706 17:22:55.013"/>
</suite>
<suite id="s1-s3" name="Loaddata" source="/opt/hadoop/smoketest/topology/loaddata.robot">
<test id="s1-s3-t1" name="Create a volume, bucket and key" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create topvol1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230706 17:22:58.248" level="INFO">Running command 'ozone sh volume create topvol1 2&gt;&amp;1'.</msg>
<msg timestamp="20230706 17:23:02.866" level="INFO">${rc} = 0</msg>
<msg timestamp="20230706 17:23:02.866" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230706 17:22:58.244" endtime="20230706 17:23:02.866"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230706 17:23:02.868" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230706 17:23:02.867" endtime="20230706 17:23:02.868"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230706 17:23:02.868" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230706 17:23:02.868" endtime="20230706 17:23:02.868"/>
</kw>
<status status="PASS" starttime="20230706 17:22:58.244" endtime="20230706 17:23:02.869"/>
</kw>
<msg timestamp="20230706 17:23:02.869" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230706 17:22:58.243" endtime="20230706 17:23:02.869"/>
</kw>
<msg timestamp="20230706 17:23:02.869" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230706 17:22:58.243" endtime="20230706 17:23:02.869"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230706 17:23:02.869" endtime="20230706 17:23:02.870"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /topvol1/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230706 17:23:02.875" level="INFO">Running command 'ozone sh bucket create /topvol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20230706 17:23:08.379" level="INFO">${rc} = 0</msg>
<msg timestamp="20230706 17:23:08.380" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230706 17:23:02.872" endtime="20230706 17:23:08.380"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230706 17:23:08.381" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230706 17:23:08.380" endtime="20230706 17:23:08.381"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230706 17:23:08.382" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230706 17:23:08.381" endtime="20230706 17:23:08.382"/>
</kw>
<status status="PASS" starttime="20230706 17:23:02.871" endtime="20230706 17:23:08.382"/>
</kw>
<msg timestamp="20230706 17:23:08.382" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230706 17:23:02.870" endtime="20230706 17:23:08.382"/>
</kw>
<msg timestamp="20230706 17:23:08.383" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230706 17:23:02.870" endtime="20230706 17:23:08.383"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230706 17:23:08.383" endtime="20230706 17:23:08.383"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230706 17:23:08.388" level="INFO">Running command 'ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230706 17:23:16.129" level="INFO">${rc} = 0</msg>
<msg timestamp="20230706 17:23:16.129" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230706 17:23:08.385" endtime="20230706 17:23:16.129"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230706 17:23:16.131" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230706 17:23:16.130" endtime="20230706 17:23:16.131"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230706 17:23:16.131" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230706 17:23:16.131" endtime="20230706 17:23:16.132"/>
</kw>
<status status="PASS" starttime="20230706 17:23:08.384" endtime="20230706 17:23:16.132"/>
</kw>
<msg timestamp="20230706 17:23:16.132" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230706 17:23:08.384" endtime="20230706 17:23:16.132"/>
</kw>
<msg timestamp="20230706 17:23:16.133" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230706 17:23:08.383" endtime="20230706 17:23:16.133"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230706 17:23:16.133" endtime="20230706 17:23:16.133"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230706 17:22:58.242" endtime="20230706 17:23:16.134"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230706 17:22:58.192" endtime="20230706 17:23:16.135"/>
</suite>
<suite id="s1-s4" name="readdata-first-half" source="/opt/hadoop/smoketest/topology/readdata.robot">
<test id="s1-s4-t1" name="Read data from previously created key" line="27">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230706 17:23:24.552" level="INFO">${random} = 25496</msg>
<status status="PASS" starttime="20230706 17:23:24.551" endtime="20230706 17:23:24.552"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230706 17:23:24.558" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-25496 2&gt;&amp;1'.</msg>
<msg timestamp="20230706 17:24:05.203" level="INFO">${rc} = 0</msg>
<msg timestamp="20230706 17:24:05.203" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230706 17:23:24.554" endtime="20230706 17:24:05.204"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230706 17:24:05.205" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230706 17:24:05.204" endtime="20230706 17:24:05.205"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230706 17:24:05.205" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230706 17:24:05.205" endtime="20230706 17:24:05.206"/>
</kw>
<status status="PASS" starttime="20230706 17:23:24.553" endtime="20230706 17:24:05.206"/>
</kw>
<msg timestamp="20230706 17:24:05.206" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230706 17:23:24.553" endtime="20230706 17:24:05.206"/>
</kw>
<msg timestamp="20230706 17:24:05.206" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230706 17:23:24.552" endtime="20230706 17:24:05.206"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230706 17:24:05.206" endtime="20230706 17:24:05.207"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230706 17:23:24.551" endtime="20230706 17:24:05.207"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230706 17:23:24.499" endtime="20230706 17:24:05.210"/>
</suite>
<suite id="s1-s5" name="readdata-second-half" source="/opt/hadoop/smoketest/topology/readdata.robot">
<test id="s1-s5-t1" name="Read data from previously created key" line="27">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230706 17:24:57.383" level="INFO">${random} = 65170</msg>
<status status="PASS" starttime="20230706 17:24:57.382" endtime="20230706 17:24:57.383"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230706 17:24:57.389" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-65170 2&gt;&amp;1'.</msg>
<msg timestamp="20230706 17:25:05.156" level="INFO">${rc} = 0</msg>
<msg timestamp="20230706 17:25:05.156" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230706 17:24:57.384" endtime="20230706 17:25:05.156"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230706 17:25:05.158" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230706 17:25:05.157" endtime="20230706 17:25:05.158"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230706 17:25:05.158" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230706 17:25:05.158" endtime="20230706 17:25:05.159"/>
</kw>
<status status="PASS" starttime="20230706 17:24:57.384" endtime="20230706 17:25:05.159"/>
</kw>
<msg timestamp="20230706 17:25:05.159" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230706 17:24:57.384" endtime="20230706 17:25:05.159"/>
</kw>
<msg timestamp="20230706 17:25:05.160" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20230706 17:24:57.383" endtime="20230706 17:25:05.160"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230706 17:25:05.160" endtime="20230706 17:25:05.161"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230706 17:24:57.381" endtime="20230706 17:25:05.161"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230706 17:24:57.325" endtime="20230706 17:25:05.162"/>
</suite>
<suite id="s1-s6" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s6-t1" name="Check webui static resources" line="29">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230706 17:20:21.004" endtime="20230706 17:20:21.009"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230706 17:20:21.020" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20230706 17:20:21.286" level="INFO">${rc} = 0</msg>
<msg timestamp="20230706 17:20:21.286" level="INFO">${output} = HTTP/1.1 200 OK
Date: Thu, 06 Jul 2023 17:20:21 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Thu, 06 Jul 2023 16:45:48 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20230706 17:20:21.010" endtime="20230706 17:20:21.286"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230706 17:20:21.287" level="INFO">HTTP/1.1 200 OK
Date: Thu, 06 Jul 2023 17:20:21 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Thu, 06 Jul 2023 16:45:48 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20230706 17:20:21.287" endtime="20230706 17:20:21.287"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230706 17:20:21.300" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230706 17:20:21.288" endtime="20230706 17:20:21.301"/>
</kw>
<status status="PASS" starttime="20230706 17:20:21.010" endtime="20230706 17:20:21.303"/>
</kw>
<msg timestamp="20230706 17:20:21.303" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230706 17:20:21.009" endtime="20230706 17:20:21.307"/>
</kw>
<msg timestamp="20230706 17:20:21.308" level="INFO">${result} = HTTP/1.1 200 OK
Date: Thu, 06 Jul 2023 17:20:21 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Thu, 06 Jul 2023 16:45:48 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20230706 17:20:21.009" endtime="20230706 17:20:21.308"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230706 17:20:21.308" endtime="20230706 17:20:21.308"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230706 17:20:21.003" endtime="20230706 17:20:21.308"/>
</test>
<test id="s1-s6-t2" name="Basic Freon smoketest" line="34">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230706 17:20:21.320" endtime="20230706 17:20:21.324"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>10</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230706 17:20:21.326" level="INFO">${random} = fvqeAuJzld</msg>
<status status="PASS" starttime="20230706 17:20:21.324" endtime="20230706 17:20:21.326"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230706 17:20:21.352" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p fvqeAuJzld  2&gt;&amp;1'.</msg>
<msg timestamp="20230706 17:20:38.143" level="INFO">${rc} = 0</msg>
<msg timestamp="20230706 17:20:38.143" level="INFO">${output} = 2023-07-06 17:20:27,183 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-06 17:20:27,419 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230706 17:20:21.340" endtime="20230706 17:20:38.143"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230706 17:20:38.145" level="INFO">2023-07-06 17:20:27,183 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-06 17:20:27,419 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-07-06 17:20:27,419 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-07-06 17:20:27,534 [main] INFO freon.BaseFreonGenerator: Executing test with prefix fvqeAuJzld and number-of-tests 1
2023-07-06 17:20:27,612 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-06 17:20:28,619 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-06 17:20:29,620 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-06 17:20:30,624 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-06 17:20:30,937 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2023-07-06 17:20:31,473 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false, Replication Type set to server-side default replication type, Namespace Quota set to -1, Space Quota set to -1 
2023-07-06 17:20:31,624 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-06 17:20:32,625 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-06 17:20:33,626 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-06 17:20:33,716 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-07-06 17:20:34,137 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-07-06 17:20:34,627 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-06 17:20:35,628 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-06 17:20:36,630 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-06 17:20:37,630 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-07-06 17:20:37,757 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=4882.248896, max=4882.248896, mean=4882.248896, stddev=0.0, median=4882.248896, p75=4882.248896, p95=4882.248896, p98=4882.248896, p99=4882.248896, p999=4882.248896, mean_rate=0.16494444727426802, m1=0.2, m5=0.2, m15=0.2, rate_unit=events/second, duration_unit=milliseconds
2023-07-06 17:20:37,757 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 10
2023-07-06 17:20:37,757 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-07-06 17:20:37,757 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230706 17:20:38.144" endtime="20230706 17:20:38.145"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230706 17:20:38.146" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230706 17:20:38.145" endtime="20230706 17:20:38.146"/>
</kw>
<status status="PASS" starttime="20230706 17:20:21.338" endtime="20230706 17:20:38.146"/>
</kw>
<msg timestamp="20230706 17:20:38.146" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230706 17:20:21.337" endtime="20230706 17:20:38.146"/>
</kw>
<msg timestamp="20230706 17:20:38.147" level="INFO">${result} = 2023-07-06 17:20:27,183 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-06 17:20:27,419 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230706 17:20:21.328" endtime="20230706 17:20:38.147"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230706 17:20:38.147" endtime="20230706 17:20:38.147"/>
</kw>
<status status="PASS" starttime="20230706 17:20:21.326" endtime="20230706 17:20:38.147"/>
</kw>
<kw name="Freon OCKV" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230706 17:20:38.155" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p fvqeAuJzld  2&gt;&amp;1'.</msg>
<msg timestamp="20230706 17:20:48.548" level="INFO">${rc} = 0</msg>
<msg timestamp="20230706 17:20:48.548" level="INFO">${output} = 2023-07-06 17:20:40,949 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-06 17:20:41,154 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230706 17:20:38.152" endtime="20230706 17:20:48.548"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230706 17:20:48.549" level="INFO">2023-07-06 17:20:40,949 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-06 17:20:41,154 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-07-06 17:20:41,154 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-07-06 17:20:41,250 [main] INFO freon.BaseFreonGenerator: Executing test with prefix fvqeAuJzld and number-of-tests 1
2023-07-06 17:20:41,322 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-06 17:20:42,336 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-06 17:20:43,338 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-06 17:20:44,338 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-06 17:20:45,270 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-07-06 17:20:45,339 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-06 17:20:46,339 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-06 17:20:47,340 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-07-06 17:20:48,152 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=96.290799, max=96.290799, mean=96.290799, stddev=0.0, median=96.290799, p75=96.290799, p95=96.290799, p98=96.290799, p99=96.290799, p999=96.290799, mean_rate=0.8899713067999856, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-07-06 17:20:48,153 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 7
2023-07-06 17:20:48,154 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-07-06 17:20:48,154 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230706 17:20:48.548" endtime="20230706 17:20:48.549"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230706 17:20:48.550" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230706 17:20:48.549" endtime="20230706 17:20:48.550"/>
</kw>
<status status="PASS" starttime="20230706 17:20:38.151" endtime="20230706 17:20:48.550"/>
</kw>
<msg timestamp="20230706 17:20:48.550" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230706 17:20:38.151" endtime="20230706 17:20:48.551"/>
</kw>
<msg timestamp="20230706 17:20:48.551" level="INFO">${result} = 2023-07-06 17:20:40,949 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-06 17:20:41,154 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230706 17:20:38.150" endtime="20230706 17:20:48.551"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230706 17:20:48.551" endtime="20230706 17:20:48.552"/>
</kw>
<status status="PASS" starttime="20230706 17:20:38.148" endtime="20230706 17:20:48.552"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230706 17:20:21.319" endtime="20230706 17:20:48.552"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230706 17:20:20.936" endtime="20230706 17:20:48.554"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="214148"/>
</suite>
<statistics>
<total>
<stat pass="32" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="32" fail="0" skip="0" id="s1" name="ozone-topology">ozone-topology</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1" name="Cli">ozone-topology.Cli</stat>
<stat pass="23" fail="0" skip="0" id="s1-s2" name="Recon">ozone-topology.Recon</stat>
<stat pass="7" fail="0" skip="0" id="s1-s2-s1" name="Recon-Api">ozone-topology.Recon.Recon-Api</stat>
<stat pass="16" fail="0" skip="0" id="s1-s2-s2" name="Recon-Nssummary">ozone-topology.Recon.Recon-Nssummary</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="Loaddata">ozone-topology.Loaddata</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="readdata-first-half">ozone-topology.readdata-first-half</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5" name="readdata-second-half">ozone-topology.readdata-second-half</stat>
<stat pass="2" fail="0" skip="0" id="s1-s6" name="Basic">ozone-topology.Basic</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
