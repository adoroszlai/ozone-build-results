<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1 (Python 3.8.10 on linux)" generated="20230706 17:36:19.390" rpa="false" schemaversion="4">
<suite id="s1" name="restart">
<suite id="s1-s1" name="Validate" source="/opt/hadoop/smoketest/freon/validate.robot">
<test id="s1-s1-t1" name="Ozone Client Key Validator" line="25">
<kw name="Freon OCKV" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230706 17:33:07.098" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p ockgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20230706 17:33:13.825" level="INFO">${rc} = 0</msg>
<msg timestamp="20230706 17:33:13.825" level="INFO">${output} = 2023-07-06 17:33:09,171 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-06 17:33:09,324 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230706 17:33:07.094" endtime="20230706 17:33:13.825"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230706 17:33:13.826" level="INFO">2023-07-06 17:33:09,171 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-06 17:33:09,324 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-07-06 17:33:09,324 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-07-06 17:33:09,437 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpre and number-of-tests 1
2023-07-06 17:33:09,504 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-06 17:33:10,510 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-06 17:33:11,199 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-07-06 17:33:11,511 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-06 17:33:12,511 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-07-06 17:33:13,438 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=59.177321, max=59.177321, mean=59.177321, stddev=0.0, median=59.177321, p75=59.177321, p95=59.177321, p98=59.177321, p99=59.177321, p999=59.177321, mean_rate=0.9688700005141697, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-07-06 17:33:13,439 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2023-07-06 17:33:13,439 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-07-06 17:33:13,439 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230706 17:33:13.826" endtime="20230706 17:33:13.827"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230706 17:33:13.827" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230706 17:33:13.827" endtime="20230706 17:33:13.827"/>
</kw>
<status status="PASS" starttime="20230706 17:33:07.093" endtime="20230706 17:33:13.828"/>
</kw>
<msg timestamp="20230706 17:33:13.828" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230706 17:33:07.093" endtime="20230706 17:33:13.828"/>
</kw>
<msg timestamp="20230706 17:33:13.828" level="INFO">${result} = 2023-07-06 17:33:09,171 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-06 17:33:09,324 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230706 17:33:07.092" endtime="20230706 17:33:13.828"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230706 17:33:13.828" endtime="20230706 17:33:13.829"/>
</kw>
<status status="PASS" starttime="20230706 17:33:07.090" endtime="20230706 17:33:13.829"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230706 17:33:07.090" endtime="20230706 17:33:13.829"/>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" starttime="20230706 17:33:07.039" endtime="20230706 17:33:13.831"/>
</suite>
<suite id="s1-s2" name="Generate-Chunk" source="/opt/hadoop/smoketest/freon/generate-chunk.robot">
<test id="s1-s2-t1" name="DN Chunk Generator" line="25">
<kw name="Freon DCG" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230706 17:33:17.126" endtime="20230706 17:33:17.126"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcg -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230706 17:33:17.132" level="INFO">Running command 'ozone freon dcg -t 1 -n100 -p dcgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20230706 17:33:25.534" level="INFO">${rc} = 0</msg>
<msg timestamp="20230706 17:33:25.534" level="INFO">${output} = 2023-07-06 17:33:19,186 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-06 17:33:19,356 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230706 17:33:17.127" endtime="20230706 17:33:25.534"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230706 17:33:25.535" level="INFO">2023-07-06 17:33:19,186 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-06 17:33:19,356 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-07-06 17:33:19,356 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-07-06 17:33:20,039 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcgpre and number-of-tests 100
2023-07-06 17:33:20,072 [Thread-4] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-07-06 17:33:20,520 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-07-06 17:33:20,879 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-07-06 17:33:21,079 [Thread-4] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-07-06 17:33:22,080 [Thread-4] INFO freon.ProgressBar: Progress: 8.00 % (8 out of 100)
2023-07-06 17:33:23,081 [Thread-4] INFO freon.ProgressBar: Progress: 44.00 % (44 out of 100)
2023-07-06 17:33:24,082 [Thread-4] INFO freon.ProgressBar: Progress: 83.00 % (83 out of 100)
2023-07-06 17:33:25,082 [Thread-4] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2023-07-06 17:33:25,179 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-write, count=100, min=16.632032, max=986.974861, mean=36.52042242319306, stddev=94.55348500846604, median=25.978057, p75=30.808428, p95=42.602889, p98=47.958391, p99=56.68858, p999=986.974861, mean_rate=22.505197382916148, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-07-06 17:33:25,179 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 5
2023-07-06 17:33:25,179 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-07-06 17:33:25,179 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20230706 17:33:25.534" endtime="20230706 17:33:25.535"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230706 17:33:25.536" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230706 17:33:25.535" endtime="20230706 17:33:25.536"/>
</kw>
<status status="PASS" starttime="20230706 17:33:17.127" endtime="20230706 17:33:25.536"/>
</kw>
<msg timestamp="20230706 17:33:25.536" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230706 17:33:17.127" endtime="20230706 17:33:25.537"/>
</kw>
<msg timestamp="20230706 17:33:25.537" level="INFO">${result} = 2023-07-06 17:33:19,186 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-06 17:33:19,356 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230706 17:33:17.126" endtime="20230706 17:33:25.537"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230706 17:33:25.537" endtime="20230706 17:33:25.538"/>
</kw>
<status status="PASS" starttime="20230706 17:33:17.124" endtime="20230706 17:33:25.538"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230706 17:33:17.123" endtime="20230706 17:33:25.538"/>
</test>
<doc>Test freon chunk generation commands</doc>
<status status="PASS" starttime="20230706 17:33:17.073" endtime="20230706 17:33:25.540"/>
</suite>
<suite id="s1-s3" name="Validate-Chunk" source="/opt/hadoop/smoketest/freon/validate-chunk.robot">
<test id="s1-s3-t1" name="DN Chunk Validator" line="25">
<kw name="Freon DCV" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230706 17:33:28.660" endtime="20230706 17:33:28.660"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcv -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230706 17:33:28.666" level="INFO">Running command 'ozone freon dcv -t 1 -n100 -p dcgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20230706 17:33:34.694" level="INFO">${rc} = 0</msg>
<msg timestamp="20230706 17:33:34.695" level="INFO">${output} = 2023-07-06 17:33:30,789 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-06 17:33:30,974 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230706 17:33:28.662" endtime="20230706 17:33:34.695"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230706 17:33:34.696" level="INFO">2023-07-06 17:33:30,789 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-06 17:33:30,974 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-07-06 17:33:30,974 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-07-06 17:33:31,054 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcgpre and number-of-tests 100
2023-07-06 17:33:31,105 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-07-06 17:33:31,628 [main] INFO freon.DatanodeChunkValidator: Using pipeline PipelineID=2ab0c656-6867-4094-952d-6c471268b20e
2023-07-06 17:33:32,108 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-07-06 17:33:32,108 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-07-06 17:33:32,419 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-07-06 17:33:33,108 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-07-06 17:33:34,109 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2023-07-06 17:33:34,345 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-validate, count=100, min=2.304829, max=13.137535, mean=4.12770117, stddev=2.219105141785937, median=3.362588, p75=4.458649, p95=8.889798, p98=11.675054, p99=11.956169, p999=13.137535, mean_rate=93.37355186188086, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-07-06 17:33:34,345 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2023-07-06 17:33:34,346 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-07-06 17:33:34,346 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20230706 17:33:34.695" endtime="20230706 17:33:34.696"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230706 17:33:34.697" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230706 17:33:34.696" endtime="20230706 17:33:34.697"/>
</kw>
<status status="PASS" starttime="20230706 17:33:28.661" endtime="20230706 17:33:34.697"/>
</kw>
<msg timestamp="20230706 17:33:34.697" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230706 17:33:28.661" endtime="20230706 17:33:34.698"/>
</kw>
<msg timestamp="20230706 17:33:34.698" level="INFO">${result} = 2023-07-06 17:33:30,789 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-06 17:33:30,974 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230706 17:33:28.660" endtime="20230706 17:33:34.698"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230706 17:33:34.698" endtime="20230706 17:33:34.699"/>
</kw>
<status status="PASS" starttime="20230706 17:33:28.658" endtime="20230706 17:33:34.699"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230706 17:33:28.657" endtime="20230706 17:33:34.699"/>
</test>
<doc>Test freon chunk validation commands</doc>
<status status="PASS" starttime="20230706 17:33:28.609" endtime="20230706 17:33:34.701"/>
</suite>
<suite id="s1-s4" name="Validate" source="/opt/hadoop/smoketest/freon/validate.robot">
<test id="s1-s4-t1" name="Ozone Client Key Validator" line="25">
<kw name="Freon OCKV" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230706 17:34:56.664" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p ockgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20230706 17:35:03.985" level="INFO">${rc} = 0</msg>
<msg timestamp="20230706 17:35:03.985" level="INFO">${output} = 2023-07-06 17:34:58,992 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-06 17:34:59,113 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230706 17:34:56.658" endtime="20230706 17:35:03.985"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230706 17:35:03.986" level="INFO">2023-07-06 17:34:58,992 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-06 17:34:59,113 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-07-06 17:34:59,113 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-07-06 17:34:59,198 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpre and number-of-tests 1
2023-07-06 17:34:59,255 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-06 17:35:00,265 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-06 17:35:01,265 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-06 17:35:01,404 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-07-06 17:35:02,266 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-06 17:35:03,266 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-07-06 17:35:03,599 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=53.650534, max=53.650534, mean=53.650534, stddev=0.0, median=53.650534, p75=53.650534, p95=53.650534, p98=53.650534, p99=53.650534, p999=53.650534, mean_rate=0.96483041094821, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-07-06 17:35:03,600 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2023-07-06 17:35:03,600 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-07-06 17:35:03,600 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230706 17:35:03.985" endtime="20230706 17:35:03.986"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230706 17:35:03.987" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230706 17:35:03.986" endtime="20230706 17:35:03.987"/>
</kw>
<status status="PASS" starttime="20230706 17:34:56.658" endtime="20230706 17:35:03.987"/>
</kw>
<msg timestamp="20230706 17:35:03.987" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230706 17:34:56.658" endtime="20230706 17:35:03.988"/>
</kw>
<msg timestamp="20230706 17:35:03.988" level="INFO">${result} = 2023-07-06 17:34:58,992 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-06 17:34:59,113 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230706 17:34:56.657" endtime="20230706 17:35:03.988"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230706 17:35:03.988" endtime="20230706 17:35:03.989"/>
</kw>
<status status="PASS" starttime="20230706 17:34:56.656" endtime="20230706 17:35:03.989"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230706 17:34:56.655" endtime="20230706 17:35:03.989"/>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" starttime="20230706 17:34:56.599" endtime="20230706 17:35:03.991"/>
</suite>
<suite id="s1-s5" name="Validate-Chunk" source="/opt/hadoop/smoketest/freon/validate-chunk.robot">
<test id="s1-s5-t1" name="DN Chunk Validator" line="25">
<kw name="Freon DCV" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230706 17:35:07.135" endtime="20230706 17:35:07.136"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcv -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230706 17:35:07.141" level="INFO">Running command 'ozone freon dcv -t 1 -n100 -p dcgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20230706 17:35:14.217" level="INFO">${rc} = 0</msg>
<msg timestamp="20230706 17:35:14.217" level="INFO">${output} = 2023-07-06 17:35:09,359 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-06 17:35:09,587 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230706 17:35:07.137" endtime="20230706 17:35:14.217"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230706 17:35:14.219" level="INFO">2023-07-06 17:35:09,359 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-06 17:35:09,587 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-07-06 17:35:09,587 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-07-06 17:35:09,705 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcgpre and number-of-tests 100
2023-07-06 17:35:09,777 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-07-06 17:35:10,376 [main] INFO freon.DatanodeChunkValidator: Using pipeline PipelineID=2ab0c656-6867-4094-952d-6c471268b20e
2023-07-06 17:35:10,780 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-07-06 17:35:11,026 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-07-06 17:35:11,370 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-07-06 17:35:11,780 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-07-06 17:35:12,781 [Thread-3] INFO freon.ProgressBar: Progress: 74.00 % (74 out of 100)
2023-07-06 17:35:13,781 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2023-07-06 17:35:13,850 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-validate, count=100, min=2.467438, max=34.547919, mean=4.979015520000001, stddev=3.5845792128469656, median=4.100028, p75=5.671115, p95=8.886393, p98=11.448536, p99=12.281582, p999=34.547919, mean_rate=68.59217354135978, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-07-06 17:35:13,850 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2023-07-06 17:35:13,851 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-07-06 17:35:13,851 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20230706 17:35:14.218" endtime="20230706 17:35:14.219"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230706 17:35:14.219" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230706 17:35:14.219" endtime="20230706 17:35:14.219"/>
</kw>
<status status="PASS" starttime="20230706 17:35:07.137" endtime="20230706 17:35:14.220"/>
</kw>
<msg timestamp="20230706 17:35:14.220" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230706 17:35:07.136" endtime="20230706 17:35:14.220"/>
</kw>
<msg timestamp="20230706 17:35:14.220" level="INFO">${result} = 2023-07-06 17:35:09,359 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-06 17:35:09,587 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230706 17:35:07.136" endtime="20230706 17:35:14.220"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230706 17:35:14.221" endtime="20230706 17:35:14.221"/>
</kw>
<status status="PASS" starttime="20230706 17:35:07.134" endtime="20230706 17:35:14.221"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230706 17:35:07.133" endtime="20230706 17:35:14.222"/>
</test>
<doc>Test freon chunk validation commands</doc>
<status status="PASS" starttime="20230706 17:35:07.085" endtime="20230706 17:35:14.223"/>
</suite>
<suite id="s1-s6" name="Generate" source="/opt/hadoop/smoketest/freon/generate.robot">
<test id="s1-s6-t1" name="Ozone Client Key Generator" line="25">
<kw name="Freon OCKG" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230706 17:35:17.237" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p ockgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20230706 17:35:25.151" level="INFO">${rc} = 0</msg>
<msg timestamp="20230706 17:35:25.151" level="INFO">${output} = 2023-07-06 17:35:19,365 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-06 17:35:19,591 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230706 17:35:17.232" endtime="20230706 17:35:25.151"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230706 17:35:25.153" level="INFO">2023-07-06 17:35:19,365 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-06 17:35:19,591 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-07-06 17:35:19,594 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-07-06 17:35:19,717 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpost and number-of-tests 1
2023-07-06 17:35:19,780 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-06 17:35:20,792 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-06 17:35:21,792 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-06 17:35:21,827 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-07-06 17:35:22,216 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-07-06 17:35:22,795 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-06 17:35:23,795 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-07-06 17:35:24,792 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=3020.673103, max=3020.673103, mean=3020.673103, stddev=0.0, median=3020.673103, p75=3020.673103, p95=3020.673103, p98=3020.673103, p99=3020.673103, p999=3020.673103, mean_rate=0.24538997046142036, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-07-06 17:35:24,792 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 5
2023-07-06 17:35:24,792 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-07-06 17:35:24,792 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230706 17:35:25.152" endtime="20230706 17:35:25.153"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230706 17:35:25.154" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230706 17:35:25.153" endtime="20230706 17:35:25.154"/>
</kw>
<status status="PASS" starttime="20230706 17:35:17.232" endtime="20230706 17:35:25.154"/>
</kw>
<msg timestamp="20230706 17:35:25.155" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230706 17:35:17.231" endtime="20230706 17:35:25.155"/>
</kw>
<msg timestamp="20230706 17:35:25.155" level="INFO">${result} = 2023-07-06 17:35:19,365 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-06 17:35:19,591 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230706 17:35:17.231" endtime="20230706 17:35:25.155"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230706 17:35:25.155" endtime="20230706 17:35:25.156"/>
</kw>
<status status="PASS" starttime="20230706 17:35:17.229" endtime="20230706 17:35:25.156"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230706 17:35:17.229" endtime="20230706 17:35:25.156"/>
</test>
<test id="s1-s6-t2" name="OM Key Generator" line="28">
<kw name="Freon OMKG" library="freon">
<arg>prefix=omkg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon omkg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230706 17:35:25.164" level="INFO">Running command 'ozone freon omkg  -t 1 -n1 -p omkgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20230706 17:35:29.811" level="INFO">${rc} = 0</msg>
<msg timestamp="20230706 17:35:29.811" level="INFO">${output} = 2023-07-06 17:35:27,563 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-06 17:35:27,764 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230706 17:35:25.161" endtime="20230706 17:35:29.811"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230706 17:35:29.812" level="INFO">2023-07-06 17:35:27,563 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-06 17:35:27,764 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-07-06 17:35:27,764 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-07-06 17:35:27,844 [main] INFO freon.BaseFreonGenerator: Executing test with prefix omkgpost and number-of-tests 1
2023-07-06 17:35:27,897 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-06 17:35:28,899 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-07-06 17:35:29,743 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=78.209835, max=78.209835, mean=78.209835, stddev=0.0, median=78.209835, p75=78.209835, p95=78.209835, p98=78.209835, p99=78.209835, p999=78.209835, mean_rate=0.9713560052513371, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-07-06 17:35:29,744 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2023-07-06 17:35:29,749 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-07-06 17:35:29,749 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230706 17:35:29.811" endtime="20230706 17:35:29.812"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230706 17:35:29.813" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230706 17:35:29.813" endtime="20230706 17:35:29.813"/>
</kw>
<status status="PASS" starttime="20230706 17:35:25.161" endtime="20230706 17:35:29.814"/>
</kw>
<msg timestamp="20230706 17:35:29.814" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230706 17:35:25.161" endtime="20230706 17:35:29.814"/>
</kw>
<msg timestamp="20230706 17:35:29.814" level="INFO">${result} = 2023-07-06 17:35:27,563 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-06 17:35:27,764 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230706 17:35:25.160" endtime="20230706 17:35:29.814"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230706 17:35:29.815" endtime="20230706 17:35:29.816"/>
</kw>
<status status="PASS" starttime="20230706 17:35:25.158" endtime="20230706 17:35:29.816"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230706 17:35:25.157" endtime="20230706 17:35:29.817"/>
</test>
<test id="s1-s6-t3" name="OM Bucket Generator" line="31">
<kw name="Freon OMBG" library="freon">
<arg>prefix=ombg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ombg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230706 17:35:29.824" level="INFO">Running command 'ozone freon ombg  -t 1 -n1 -p ombgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20230706 17:35:33.887" level="INFO">${rc} = 0</msg>
<msg timestamp="20230706 17:35:33.887" level="INFO">${output} = 2023-07-06 17:35:31,808 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-06 17:35:31,917 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230706 17:35:29.822" endtime="20230706 17:35:33.887"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230706 17:35:33.888" level="INFO">2023-07-06 17:35:31,808 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-06 17:35:31,917 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-07-06 17:35:31,917 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-07-06 17:35:31,990 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombgpost and number-of-tests 1
2023-07-06 17:35:32,035 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-06 17:35:33,050 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-07-06 17:35:33,813 [shutdown-hook-0] INFO metrics: type=TIMER, name=bucket-create, count=1, min=27.893647, max=27.893647, mean=27.893647, stddev=0.0, median=27.893647, p75=27.893647, p95=27.893647, p98=27.893647, p99=27.893647, p999=27.893647, mean_rate=0.9757943678240028, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-07-06 17:35:33,814 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2023-07-06 17:35:33,814 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-07-06 17:35:33,814 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230706 17:35:33.887" endtime="20230706 17:35:33.888"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230706 17:35:33.889" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230706 17:35:33.888" endtime="20230706 17:35:33.889"/>
</kw>
<status status="PASS" starttime="20230706 17:35:29.821" endtime="20230706 17:35:33.889"/>
</kw>
<msg timestamp="20230706 17:35:33.889" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230706 17:35:29.821" endtime="20230706 17:35:33.890"/>
</kw>
<msg timestamp="20230706 17:35:33.890" level="INFO">${result} = 2023-07-06 17:35:31,808 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-06 17:35:31,917 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230706 17:35:29.820" endtime="20230706 17:35:33.890"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230706 17:35:33.890" endtime="20230706 17:35:33.891"/>
</kw>
<status status="PASS" starttime="20230706 17:35:29.819" endtime="20230706 17:35:33.891"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230706 17:35:29.818" endtime="20230706 17:35:33.891"/>
</test>
<doc>Test freon data generation commands</doc>
<status status="PASS" starttime="20230706 17:35:17.181" endtime="20230706 17:35:33.893"/>
</suite>
<suite id="s1-s7" name="Validate" source="/opt/hadoop/smoketest/freon/validate.robot">
<test id="s1-s7-t1" name="Ozone Client Key Validator" line="25">
<kw name="Freon OCKV" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230706 17:35:36.890" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p ockgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20230706 17:35:42.994" level="INFO">${rc} = 0</msg>
<msg timestamp="20230706 17:35:42.994" level="INFO">${output} = 2023-07-06 17:35:38,885 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-06 17:35:38,997 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230706 17:35:36.885" endtime="20230706 17:35:42.994"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230706 17:35:42.996" level="INFO">2023-07-06 17:35:38,885 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-06 17:35:38,997 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-07-06 17:35:38,997 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-07-06 17:35:39,108 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpost and number-of-tests 1
2023-07-06 17:35:39,179 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-06 17:35:40,184 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-06 17:35:40,530 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-07-06 17:35:41,185 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-06 17:35:42,185 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-07-06 17:35:42,622 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=50.12644, max=50.12644, mean=50.12644, stddev=0.0, median=50.12644, p75=50.12644, p95=50.12644, p98=50.12644, p99=50.12644, p999=50.12644, mean_rate=0.9717823019079088, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-07-06 17:35:42,623 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2023-07-06 17:35:42,623 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-07-06 17:35:42,623 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230706 17:35:42.995" endtime="20230706 17:35:42.996"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230706 17:35:42.997" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230706 17:35:42.996" endtime="20230706 17:35:42.997"/>
</kw>
<status status="PASS" starttime="20230706 17:35:36.884" endtime="20230706 17:35:42.997"/>
</kw>
<msg timestamp="20230706 17:35:42.997" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230706 17:35:36.884" endtime="20230706 17:35:42.997"/>
</kw>
<msg timestamp="20230706 17:35:42.998" level="INFO">${result} = 2023-07-06 17:35:38,885 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-06 17:35:38,997 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230706 17:35:36.883" endtime="20230706 17:35:42.998"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230706 17:35:42.998" endtime="20230706 17:35:42.998"/>
</kw>
<status status="PASS" starttime="20230706 17:35:36.881" endtime="20230706 17:35:42.998"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230706 17:35:36.880" endtime="20230706 17:35:42.999"/>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" starttime="20230706 17:35:36.830" endtime="20230706 17:35:43.000"/>
</suite>
<suite id="s1-s8" name="Generate-Chunk" source="/opt/hadoop/smoketest/freon/generate-chunk.robot">
<test id="s1-s8-t1" name="DN Chunk Generator" line="25">
<kw name="Freon DCG" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230706 17:35:45.928" endtime="20230706 17:35:45.928"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcg -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230706 17:35:45.933" level="INFO">Running command 'ozone freon dcg -t 1 -n100 -p dcgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20230706 17:35:54.493" level="INFO">${rc} = 0</msg>
<msg timestamp="20230706 17:35:54.493" level="INFO">${output} = 2023-07-06 17:35:48,112 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-06 17:35:48,316 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230706 17:35:45.930" endtime="20230706 17:35:54.493"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230706 17:35:54.494" level="INFO">2023-07-06 17:35:48,112 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-06 17:35:48,316 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-07-06 17:35:48,316 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-07-06 17:35:49,023 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcgpost and number-of-tests 100
2023-07-06 17:35:49,084 [Thread-4] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-07-06 17:35:49,496 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-07-06 17:35:49,795 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-07-06 17:35:50,086 [Thread-4] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-07-06 17:35:51,087 [Thread-4] INFO freon.ProgressBar: Progress: 15.00 % (15 out of 100)
2023-07-06 17:35:52,088 [Thread-4] INFO freon.ProgressBar: Progress: 54.00 % (54 out of 100)
2023-07-06 17:35:53,088 [Thread-4] INFO freon.ProgressBar: Progress: 98.00 % (98 out of 100)
2023-07-06 17:35:54,088 [Thread-4] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2023-07-06 17:35:54,138 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-write, count=100, min=13.156728, max=887.765678, mean=33.43264559419782, stddev=85.2613343360905, median=23.237087, p75=27.606929, p95=38.124111, p98=56.482729, p99=65.266315, p999=887.765678, mean_rate=22.4282255486473, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-07-06 17:35:54,139 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 5
2023-07-06 17:35:54,139 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-07-06 17:35:54,139 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20230706 17:35:54.494" endtime="20230706 17:35:54.494"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230706 17:35:54.495" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230706 17:35:54.495" endtime="20230706 17:35:54.495"/>
</kw>
<status status="PASS" starttime="20230706 17:35:45.929" endtime="20230706 17:35:54.495"/>
</kw>
<msg timestamp="20230706 17:35:54.495" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230706 17:35:45.929" endtime="20230706 17:35:54.496"/>
</kw>
<msg timestamp="20230706 17:35:54.496" level="INFO">${result} = 2023-07-06 17:35:48,112 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-06 17:35:48,316 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230706 17:35:45.928" endtime="20230706 17:35:54.496"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230706 17:35:54.496" endtime="20230706 17:35:54.497"/>
</kw>
<status status="PASS" starttime="20230706 17:35:45.926" endtime="20230706 17:35:54.497"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230706 17:35:45.926" endtime="20230706 17:35:54.497"/>
</test>
<doc>Test freon chunk generation commands</doc>
<status status="PASS" starttime="20230706 17:35:45.882" endtime="20230706 17:35:54.499"/>
</suite>
<suite id="s1-s9" name="Validate-Chunk" source="/opt/hadoop/smoketest/freon/validate-chunk.robot">
<test id="s1-s9-t1" name="DN Chunk Validator" line="25">
<kw name="Freon DCV" library="freon">
<arg>prefix=dcg${PREFIX}</arg>
<arg>n=100</arg>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20230706 17:35:57.401" endtime="20230706 17:35:57.401"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon dcv -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230706 17:35:57.407" level="INFO">Running command 'ozone freon dcv -t 1 -n100 -p dcgpost  2&gt;&amp;1'.</msg>
<msg timestamp="20230706 17:36:03.410" level="INFO">${rc} = 0</msg>
<msg timestamp="20230706 17:36:03.410" level="INFO">${output} = 2023-07-06 17:35:59,394 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-06 17:35:59,622 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230706 17:35:57.403" endtime="20230706 17:36:03.410"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230706 17:36:03.412" level="INFO">2023-07-06 17:35:59,394 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-06 17:35:59,622 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-07-06 17:35:59,624 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-07-06 17:35:59,728 [main] INFO freon.BaseFreonGenerator: Executing test with prefix dcgpost and number-of-tests 100
2023-07-06 17:35:59,789 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-07-06 17:36:00,351 [main] INFO freon.DatanodeChunkValidator: Using pipeline PipelineID=2ab0c656-6867-4094-952d-6c471268b20e
2023-07-06 17:36:00,794 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-07-06 17:36:00,915 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-07-06 17:36:01,196 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-07-06 17:36:01,794 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-07-06 17:36:02,795 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2023-07-06 17:36:03,046 [shutdown-hook-0] INFO metrics: type=TIMER, name=chunk-validate, count=100, min=1.772897, max=13.980768, mean=3.7308460054228108, stddev=2.0713724315573048, median=3.055567, p75=3.991319, p95=7.461909, p98=10.709989, p99=12.470585, p999=13.980768, mean_rate=93.73560270939421, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-07-06 17:36:03,047 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2023-07-06 17:36:03,047 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-07-06 17:36:03,047 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20230706 17:36:03.411" endtime="20230706 17:36:03.412"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230706 17:36:03.413" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230706 17:36:03.412" endtime="20230706 17:36:03.413"/>
</kw>
<status status="PASS" starttime="20230706 17:35:57.402" endtime="20230706 17:36:03.413"/>
</kw>
<msg timestamp="20230706 17:36:03.413" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230706 17:35:57.402" endtime="20230706 17:36:03.413"/>
</kw>
<msg timestamp="20230706 17:36:03.414" level="INFO">${result} = 2023-07-06 17:35:59,394 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-06 17:35:59,622 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230706 17:35:57.401" endtime="20230706 17:36:03.414"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230706 17:36:03.414" endtime="20230706 17:36:03.414"/>
</kw>
<status status="PASS" starttime="20230706 17:35:57.400" endtime="20230706 17:36:03.415"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230706 17:35:57.399" endtime="20230706 17:36:03.415"/>
</test>
<doc>Test freon chunk validation commands</doc>
<status status="PASS" starttime="20230706 17:35:57.354" endtime="20230706 17:36:03.417"/>
</suite>
<suite id="s1-s10" name="Generate" source="/opt/hadoop/smoketest/freon/generate.robot">
<test id="s1-s10-t1" name="Ozone Client Key Generator" line="25">
<kw name="Freon OCKG" library="freon">
<arg>prefix=ockg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230706 17:32:43.883" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p ockgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20230706 17:32:54.965" level="INFO">${rc} = 0</msg>
<msg timestamp="20230706 17:32:54.966" level="INFO">${output} = 2023-07-06 17:32:46,987 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-06 17:32:47,224 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230706 17:32:43.877" endtime="20230706 17:32:54.966"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230706 17:32:54.967" level="INFO">2023-07-06 17:32:46,987 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-06 17:32:47,224 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-07-06 17:32:47,224 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-07-06 17:32:47,368 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpre and number-of-tests 1
2023-07-06 17:32:47,442 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-06 17:32:48,448 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-06 17:32:49,448 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-06 17:32:50,449 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-06 17:32:50,638 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2023-07-06 17:32:50,807 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false, Replication Type set to server-side default replication type, Namespace Quota set to -1, Space Quota set to -1 
2023-07-06 17:32:51,449 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-06 17:32:51,639 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-07-06 17:32:51,927 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-07-06 17:32:52,449 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-06 17:32:53,450 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-06 17:32:54,452 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-07-06 17:32:54,545 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=2752.391247, max=2752.391247, mean=2752.391247, stddev=0.0, median=2752.391247, p75=2752.391247, p95=2752.391247, p98=2752.391247, p99=2752.391247, p999=2752.391247, mean_rate=0.2703215833707647, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-07-06 17:32:54,545 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 7
2023-07-06 17:32:54,548 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-07-06 17:32:54,548 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230706 17:32:54.966" endtime="20230706 17:32:54.967"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230706 17:32:54.968" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230706 17:32:54.967" endtime="20230706 17:32:54.968"/>
</kw>
<status status="PASS" starttime="20230706 17:32:43.876" endtime="20230706 17:32:54.968"/>
</kw>
<msg timestamp="20230706 17:32:54.968" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230706 17:32:43.876" endtime="20230706 17:32:54.969"/>
</kw>
<msg timestamp="20230706 17:32:54.969" level="INFO">${result} = 2023-07-06 17:32:46,987 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-06 17:32:47,224 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230706 17:32:43.875" endtime="20230706 17:32:54.969"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230706 17:32:54.969" endtime="20230706 17:32:54.970"/>
</kw>
<status status="PASS" starttime="20230706 17:32:43.872" endtime="20230706 17:32:54.970"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230706 17:32:43.870" endtime="20230706 17:32:54.970"/>
</test>
<test id="s1-s10-t2" name="OM Key Generator" line="28">
<kw name="Freon OMKG" library="freon">
<arg>prefix=omkg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon omkg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230706 17:32:54.976" level="INFO">Running command 'ozone freon omkg  -t 1 -n1 -p omkgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20230706 17:32:59.548" level="INFO">${rc} = 0</msg>
<msg timestamp="20230706 17:32:59.548" level="INFO">${output} = 2023-07-06 17:32:57,130 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-06 17:32:57,312 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230706 17:32:54.974" endtime="20230706 17:32:59.548"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230706 17:32:59.549" level="INFO">2023-07-06 17:32:57,130 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-06 17:32:57,312 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-07-06 17:32:57,312 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-07-06 17:32:57,407 [main] INFO freon.BaseFreonGenerator: Executing test with prefix omkgpre and number-of-tests 1
2023-07-06 17:32:57,464 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-06 17:32:58,469 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-06 17:32:59,469 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-07-06 17:32:59,492 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=163.902993, max=163.902993, mean=163.902993, stddev=0.0, median=163.902993, p75=163.902993, p95=163.902993, p98=163.902993, p99=163.902993, p999=163.902993, mean_rate=0.8431454227327193, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-07-06 17:32:59,495 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2023-07-06 17:32:59,495 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-07-06 17:32:59,495 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230706 17:32:59.548" endtime="20230706 17:32:59.550"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230706 17:32:59.550" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230706 17:32:59.550" endtime="20230706 17:32:59.550"/>
</kw>
<status status="PASS" starttime="20230706 17:32:54.974" endtime="20230706 17:32:59.551"/>
</kw>
<msg timestamp="20230706 17:32:59.551" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230706 17:32:54.973" endtime="20230706 17:32:59.551"/>
</kw>
<msg timestamp="20230706 17:32:59.551" level="INFO">${result} = 2023-07-06 17:32:57,130 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-06 17:32:57,312 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230706 17:32:54.973" endtime="20230706 17:32:59.551"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230706 17:32:59.552" endtime="20230706 17:32:59.552"/>
</kw>
<status status="PASS" starttime="20230706 17:32:54.971" endtime="20230706 17:32:59.552"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230706 17:32:54.971" endtime="20230706 17:32:59.553"/>
</test>
<test id="s1-s10-t3" name="OM Bucket Generator" line="31">
<kw name="Freon OMBG" library="freon">
<arg>prefix=ombg${PREFIX}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ombg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230706 17:32:59.560" level="INFO">Running command 'ozone freon ombg  -t 1 -n1 -p ombgpre  2&gt;&amp;1'.</msg>
<msg timestamp="20230706 17:33:04.054" level="INFO">${rc} = 0</msg>
<msg timestamp="20230706 17:33:04.054" level="INFO">${output} = 2023-07-06 17:33:01,713 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-06 17:33:01,928 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230706 17:32:59.557" endtime="20230706 17:33:04.054"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230706 17:33:04.055" level="INFO">2023-07-06 17:33:01,713 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-06 17:33:01,928 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-07-06 17:33:01,928 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-07-06 17:33:02,010 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombgpre and number-of-tests 1
2023-07-06 17:33:02,067 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-07-06 17:33:03,068 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-07-06 17:33:03,988 [shutdown-hook-0] INFO metrics: type=TIMER, name=bucket-create, count=1, min=19.813511, max=19.813511, mean=19.813511, stddev=0.0, median=19.813511, p75=19.813511, p95=19.813511, p98=19.813511, p99=19.813511, p999=19.813511, mean_rate=0.9667092199820319, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-07-06 17:33:03,990 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2023-07-06 17:33:03,990 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-07-06 17:33:03,990 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230706 17:33:04.055" endtime="20230706 17:33:04.056"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230706 17:33:04.056" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230706 17:33:04.056" endtime="20230706 17:33:04.056"/>
</kw>
<status status="PASS" starttime="20230706 17:32:59.557" endtime="20230706 17:33:04.057"/>
</kw>
<msg timestamp="20230706 17:33:04.057" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230706 17:32:59.557" endtime="20230706 17:33:04.057"/>
</kw>
<msg timestamp="20230706 17:33:04.057" level="INFO">${result} = 2023-07-06 17:33:01,713 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-07-06 17:33:01,928 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230706 17:32:59.556" endtime="20230706 17:33:04.057"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230706 17:33:04.057" endtime="20230706 17:33:04.058"/>
</kw>
<status status="PASS" starttime="20230706 17:32:59.554" endtime="20230706 17:33:04.058"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230706 17:32:59.554" endtime="20230706 17:33:04.058"/>
</test>
<doc>Test freon data generation commands</doc>
<status status="PASS" starttime="20230706 17:32:43.796" endtime="20230706 17:33:04.060"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="93707"/>
</suite>
<statistics>
<total>
<stat pass="14" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="14" fail="0" skip="0" id="s1" name="restart">restart</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Validate">restart.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Generate-Chunk">restart.Generate-Chunk</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="Validate-Chunk">restart.Validate-Chunk</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Validate">restart.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5" name="Validate-Chunk">restart.Validate-Chunk</stat>
<stat pass="3" fail="0" skip="0" id="s1-s6" name="Generate">restart.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s7" name="Validate">restart.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s8" name="Generate-Chunk">restart.Generate-Chunk</stat>
<stat pass="1" fail="0" skip="0" id="s1-s9" name="Validate-Chunk">restart.Validate-Chunk</stat>
<stat pass="3" fail="0" skip="0" id="s1-s10" name="Generate">restart.Generate</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
