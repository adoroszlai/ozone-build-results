<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20231122 02:00:17.689" rpa="false" schemaversion="4">
<suite id="s1" name="ozone-topology">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-t1" name="Check webui static resources" line="29">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231122 01:55:27.393" endtime="20231122 01:55:27.394"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:55:27.398" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:55:27.543" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:55:27.544" level="INFO">${output} = HTTP/1.1 200 OK
Date: Wed, 22 Nov 2023 01:55:27 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Wed, 22 Nov 2023 01:26:46 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20231122 01:55:27.396" endtime="20231122 01:55:27.544"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:55:27.545" level="INFO">HTTP/1.1 200 OK
Date: Wed, 22 Nov 2023 01:55:27 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Wed, 22 Nov 2023 01:26:46 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20231122 01:55:27.544" endtime="20231122 01:55:27.545"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:55:27.546" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:55:27.545" endtime="20231122 01:55:27.546"/>
</kw>
<status status="PASS" starttime="20231122 01:55:27.395" endtime="20231122 01:55:27.546"/>
</kw>
<msg timestamp="20231122 01:55:27.546" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:55:27.395" endtime="20231122 01:55:27.546"/>
</kw>
<msg timestamp="20231122 01:55:27.546" level="INFO">${result} = HTTP/1.1 200 OK
Date: Wed, 22 Nov 2023 01:55:27 GMT
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Last-Modified: Wed, 22 Nov 2023 01:26:46 GMT
Content-Typ...</msg>
<status status="PASS" starttime="20231122 01:55:27.394" endtime="20231122 01:55:27.546"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:55:27.547" endtime="20231122 01:55:27.547"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231122 01:55:27.392" endtime="20231122 01:55:27.547"/>
</test>
<test id="s1-s1-t2" name="Basic Freon smoketest" line="34">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231122 01:55:27.549" endtime="20231122 01:55:27.550"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>10</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231122 01:55:27.550" level="INFO">${random} = AzJsytC6Wy</msg>
<status status="PASS" starttime="20231122 01:55:27.550" endtime="20231122 01:55:27.550"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:55:27.557" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p AzJsytC6Wy  2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:55:43.640" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:55:43.640" level="INFO">${output} = 2023-11-22 01:55:31,814 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-11-22 01:55:31,928 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231122 01:55:27.555" endtime="20231122 01:55:43.640"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:55:43.641" level="INFO">2023-11-22 01:55:31,814 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-11-22 01:55:31,928 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-11-22 01:55:31,928 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-11-22 01:55:32,007 [main] INFO freon.BaseFreonGenerator: Executing test with prefix AzJsytC6Wy and number-of-tests 1
2023-11-22 01:55:32,053 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-11-22 01:55:33,059 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-11-22 01:55:34,060 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-11-22 01:55:35,060 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-11-22 01:55:35,348 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMLeaderNotReadyException): om1 is Leader but not ready to process request yet.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createLeaderNotReadyException(OzoneManagerProtocolServerSideTranslatorPB.java:304)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createLeaderErrorException(OzoneManagerProtocolServerSideTranslatorPB.java:276)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:267)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.internalProcessRequest(OzoneManagerProtocolServerSideTranslatorPB.java:211)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:171)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:89)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:162)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server.processCall(ProtobufRpcEngine.java:484)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:595)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:573)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1227)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1094)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1017)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1899)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:3048)
, while invoking $Proxy25.submitRequest over nodeId=null,nodeAddress=om:9862 after 1 failover attempts. Trying to failover after sleeping for 4000ms. Current retry count: 1.
2023-11-22 01:55:36,061 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-11-22 01:55:37,061 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-11-22 01:55:38,062 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-11-22 01:55:39,062 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-11-22 01:55:39,829 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2023-11-22 01:55:40,071 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-11-22 01:55:40,119 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false, Replication Type set to server-side default replication type, Namespace Quota set to -1, Space Quota set to -1 
2023-11-22 01:55:41,072 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-11-22 01:55:41,167 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-11-22 01:55:41,557 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-11-22 01:55:42,073 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-11-22 01:55:43,073 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-11-22 01:55:43,279 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=2864.993183, max=2864.993183, mean=2864.993183, stddev=0.0, median=2864.993183, p75=2864.993183, p95=2864.993183, p98=2864.993183, p99=2864.993183, p999=2864.993183, mean_rate=0.3236899858745963, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-11-22 01:55:43,280 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 11
2023-11-22 01:55:43,280 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-11-22 01:55:43,280 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20231122 01:55:43.640" endtime="20231122 01:55:43.641"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:55:43.642" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:55:43.641" endtime="20231122 01:55:43.642"/>
</kw>
<status status="PASS" starttime="20231122 01:55:27.555" endtime="20231122 01:55:43.642"/>
</kw>
<msg timestamp="20231122 01:55:43.642" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:55:27.555" endtime="20231122 01:55:43.642"/>
</kw>
<msg timestamp="20231122 01:55:43.643" level="INFO">${result} = 2023-11-22 01:55:31,814 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-11-22 01:55:31,928 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231122 01:55:27.554" endtime="20231122 01:55:43.643"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:55:43.643" endtime="20231122 01:55:43.643"/>
</kw>
<status status="PASS" starttime="20231122 01:55:27.551" endtime="20231122 01:55:43.643"/>
</kw>
<kw name="Freon OCKV" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:55:43.648" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p AzJsytC6Wy  2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:55:50.148" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:55:50.148" level="INFO">${output} = 2023-11-22 01:55:45,819 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-11-22 01:55:45,924 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231122 01:55:43.646" endtime="20231122 01:55:50.148"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:55:50.149" level="INFO">2023-11-22 01:55:45,819 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-11-22 01:55:45,924 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-11-22 01:55:45,924 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-11-22 01:55:46,007 [main] INFO freon.BaseFreonGenerator: Executing test with prefix AzJsytC6Wy and number-of-tests 1
2023-11-22 01:55:46,047 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-11-22 01:55:47,050 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-11-22 01:55:47,895 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-11-22 01:55:48,050 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-11-22 01:55:49,051 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-11-22 01:55:49,792 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=54.535188, max=54.535188, mean=54.535188, stddev=0.0, median=54.535188, p75=54.535188, p95=54.535188, p98=54.535188, p99=54.535188, p999=54.535188, mean_rate=0.945301782692735, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-11-22 01:55:49,792 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2023-11-22 01:55:49,792 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-11-22 01:55:49,792 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20231122 01:55:50.149" endtime="20231122 01:55:50.149"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:55:50.150" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:55:50.150" endtime="20231122 01:55:50.150"/>
</kw>
<status status="PASS" starttime="20231122 01:55:43.646" endtime="20231122 01:55:50.150"/>
</kw>
<msg timestamp="20231122 01:55:50.151" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:55:43.645" endtime="20231122 01:55:50.151"/>
</kw>
<msg timestamp="20231122 01:55:50.151" level="INFO">${result} = 2023-11-22 01:55:45,819 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-11-22 01:55:45,924 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231122 01:55:43.645" endtime="20231122 01:55:50.151"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:55:50.151" endtime="20231122 01:55:50.152"/>
</kw>
<status status="PASS" starttime="20231122 01:55:43.643" endtime="20231122 01:55:50.152"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231122 01:55:27.549" endtime="20231122 01:55:50.152"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20231122 01:55:27.310" endtime="20231122 01:55:50.153"/>
</suite>
<suite id="s1-s2" name="Cli" source="/opt/hadoop/smoketest/topology/cli.robot">
<test id="s1-s2-t1" name="Run printTopology" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:55:52.351" level="INFO">Running command 'ozone admin printTopology 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:55:55.274" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:55:55.274" level="INFO">${output} = State = HEALTHY
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rac...</msg>
<status status="PASS" starttime="20231122 01:55:52.350" endtime="20231122 01:55:55.274"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:55:55.275" level="INFO">State = HEALTHY
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1</msg>
<status status="PASS" starttime="20231122 01:55:55.275" endtime="20231122 01:55:55.276"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:55:55.276" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:55:55.276" endtime="20231122 01:55:55.276"/>
</kw>
<status status="PASS" starttime="20231122 01:55:52.349" endtime="20231122 01:55:55.276"/>
</kw>
<msg timestamp="20231122 01:55:55.277" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:55:52.349" endtime="20231122 01:55:55.277"/>
</kw>
<msg timestamp="20231122 01:55:55.277" level="INFO">${output} = State = HEALTHY
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rac...</msg>
<status status="PASS" starttime="20231122 01:55:52.348" endtime="20231122 01:55:55.277"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:55:55.277" endtime="20231122 01:55:55.278"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231122 01:55:52.348" endtime="20231122 01:55:55.278"/>
</test>
<test id="s1-s2-t2" name="Run printTopology -o" line="30">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology -o</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:55:55.283" level="INFO">Running command 'ozone admin printTopology -o 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:55:58.237" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:55:58.237" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net) IN_SERVICE
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net) IN_SERVICE
 10.5.0.4(ozone-topology_data...</msg>
<status status="PASS" starttime="20231122 01:55:55.281" endtime="20231122 01:55:58.237"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:55:58.238" level="INFO">State = HEALTHY
Location: /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net) IN_SERVICE
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net) IN_SERVICE
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net) IN_SERVICE
Location: /rack2
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net) IN_SERVICE
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net) IN_SERVICE
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net) IN_SERVICE</msg>
<status status="PASS" starttime="20231122 01:55:58.237" endtime="20231122 01:55:58.238"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:55:58.238" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:55:58.238" endtime="20231122 01:55:58.238"/>
</kw>
<status status="PASS" starttime="20231122 01:55:55.280" endtime="20231122 01:55:58.238"/>
</kw>
<msg timestamp="20231122 01:55:58.239" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:55:55.280" endtime="20231122 01:55:58.239"/>
</kw>
<msg timestamp="20231122 01:55:58.239" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net) IN_SERVICE
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net) IN_SERVICE
 10.5.0.4(ozone-topology_data...</msg>
<status status="PASS" starttime="20231122 01:55:55.279" endtime="20231122 01:55:58.239"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Location: /rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:55:58.239" endtime="20231122 01:55:58.239"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net) IN_SERVICE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:55:58.239" endtime="20231122 01:55:58.240"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231122 01:55:55.279" endtime="20231122 01:55:58.240"/>
</test>
<test id="s1-s2-t3" name="Run printTopology --operational-state IN_SERVICE" line="34">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology --operational-state IN_SERVICE</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:55:58.244" level="INFO">Running command 'ozone admin printTopology --operational-state IN_SERVICE 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:56:01.402" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:56:01.402" level="INFO">${output} = State = HEALTHY
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rac...</msg>
<status status="PASS" starttime="20231122 01:55:58.242" endtime="20231122 01:56:01.402"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:56:01.403" level="INFO">State = HEALTHY
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1</msg>
<status status="PASS" starttime="20231122 01:56:01.403" endtime="20231122 01:56:01.403"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:56:01.404" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:56:01.404" endtime="20231122 01:56:01.404"/>
</kw>
<status status="PASS" starttime="20231122 01:55:58.242" endtime="20231122 01:56:01.404"/>
</kw>
<msg timestamp="20231122 01:56:01.404" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:55:58.241" endtime="20231122 01:56:01.404"/>
</kw>
<msg timestamp="20231122 01:56:01.405" level="INFO">${output} = State = HEALTHY
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rac...</msg>
<status status="PASS" starttime="20231122 01:55:58.241" endtime="20231122 01:56:01.405"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:56:01.405" endtime="20231122 01:56:01.405"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231122 01:55:58.240" endtime="20231122 01:56:01.405"/>
</test>
<test id="s1-s2-t4" name="Run printTopology --node-state HEALTHY" line="37">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin printTopology --node-state HEALTHY</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:56:01.409" level="INFO">Running command 'ozone admin printTopology --node-state HEALTHY 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:56:04.190" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:56:04.190" level="INFO">${output} = State = HEALTHY
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rac...</msg>
<status status="PASS" starttime="20231122 01:56:01.407" endtime="20231122 01:56:04.190"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:56:04.191" level="INFO">State = HEALTHY
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1</msg>
<status status="PASS" starttime="20231122 01:56:04.191" endtime="20231122 01:56:04.191"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:56:04.192" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:56:04.191" endtime="20231122 01:56:04.192"/>
</kw>
<status status="PASS" starttime="20231122 01:56:01.407" endtime="20231122 01:56:04.192"/>
</kw>
<msg timestamp="20231122 01:56:04.192" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:56:01.407" endtime="20231122 01:56:04.192"/>
</kw>
<msg timestamp="20231122 01:56:04.192" level="INFO">${output} = State = HEALTHY
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):HTTP=9882,CLIENT_RPC=9864,REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rac...</msg>
<status status="PASS" starttime="20231122 01:56:01.406" endtime="20231122 01:56:04.192"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:56:04.193" endtime="20231122 01:56:04.193"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231122 01:56:01.406" endtime="20231122 01:56:04.193"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20231122 01:55:52.304" endtime="20231122 01:56:04.194"/>
</suite>
<suite id="s1-s3" name="Recon" source="/opt/hadoop/smoketest/recon">
<suite id="s1-s3-s1" name="Recon-Api" source="/opt/hadoop/smoketest/recon/recon-api.robot">
<test id="s1-s3-s1-t1" name="Check if Recon picks up OM data" line="61">
<kw name="Execute" library="os">
<arg>ozone sh volume create recon</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:56:06.354" level="INFO">Running command 'ozone sh volume create recon 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:56:09.711" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:56:09.711" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20231122 01:56:06.352" endtime="20231122 01:56:09.711"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:56:09.712" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20231122 01:56:09.711" endtime="20231122 01:56:09.712"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:56:09.713" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:56:09.712" endtime="20231122 01:56:09.713"/>
</kw>
<status status="PASS" starttime="20231122 01:56:06.352" endtime="20231122 01:56:09.713"/>
</kw>
<msg timestamp="20231122 01:56:09.713" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:56:06.352" endtime="20231122 01:56:09.713"/>
</kw>
<status status="PASS" starttime="20231122 01:56:06.351" endtime="20231122 01:56:09.713"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create recon/api --layout=LEGACY</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:56:09.718" level="INFO">Running command 'ozone sh bucket create recon/api --layout=LEGACY 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:56:13.374" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:56:13.374" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20231122 01:56:09.716" endtime="20231122 01:56:13.374"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:56:13.376" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20231122 01:56:13.375" endtime="20231122 01:56:13.376"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:56:13.376" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:56:13.376" endtime="20231122 01:56:13.376"/>
</kw>
<status status="PASS" starttime="20231122 01:56:09.715" endtime="20231122 01:56:13.377"/>
</kw>
<msg timestamp="20231122 01:56:13.377" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:56:09.714" endtime="20231122 01:56:13.377"/>
</kw>
<status status="PASS" starttime="20231122 01:56:09.714" endtime="20231122 01:56:13.377"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>n=10</arg>
<arg>args=-s 1025 -v recon -b api</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:56:13.380" level="INFO">Running command 'ozone freon ockg  -t 1 -n10 -p ockg -s 1025 -v recon -b api 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:56:20.011" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:56:20.011" level="INFO">${output} = 2023-11-22 01:56:15,189 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-11-22 01:56:15,294 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231122 01:56:13.379" endtime="20231122 01:56:20.011"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:56:20.012" level="INFO">2023-11-22 01:56:15,189 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-11-22 01:56:15,294 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-11-22 01:56:15,294 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-11-22 01:56:15,374 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockg and number-of-tests 10
2023-11-22 01:56:15,414 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-11-22 01:56:16,416 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-11-22 01:56:17,182 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-11-22 01:56:17,416 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-11-22 01:56:17,448 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-11-22 01:56:18,418 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 10)
2023-11-22 01:56:19,418 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (10 out of 10)
2023-11-22 01:56:19,661 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=10, min=52.214977, max=1924.882303, mean=266.4069015652621, stddev=551.462176913237, median=73.076365, p75=109.468598, p95=1924.882303, p98=1924.882303, p99=1924.882303, p999=1924.882303, mean_rate=3.2496847261493444, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-11-22 01:56:19,661 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2023-11-22 01:56:19,661 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-11-22 01:56:19,661 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 10</msg>
<status status="PASS" starttime="20231122 01:56:20.011" endtime="20231122 01:56:20.012"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:56:20.013" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:56:20.012" endtime="20231122 01:56:20.013"/>
</kw>
<status status="PASS" starttime="20231122 01:56:13.378" endtime="20231122 01:56:20.013"/>
</kw>
<msg timestamp="20231122 01:56:20.013" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:56:13.378" endtime="20231122 01:56:20.013"/>
</kw>
<msg timestamp="20231122 01:56:20.013" level="INFO">${result} = 2023-11-22 01:56:15,189 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-11-22 01:56:15,294 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231122 01:56:13.377" endtime="20231122 01:56:20.013"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:56:20.013" endtime="20231122 01:56:20.014"/>
</kw>
<status status="PASS" starttime="20231122 01:56:13.377" endtime="20231122 01:56:20.014"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Check if Recon picks up container from OM</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231122 01:56:20.015" endtime="20231122 01:56:20.015"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:56:20.017" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:56:20.176" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:56:20.176" level="INFO">${output} = {"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20231122 01:56:20.016" endtime="20231122 01:56:20.176"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:56:20.177" level="INFO">{"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20231122 01:56:20.177" endtime="20231122 01:56:20.178"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:56:20.178" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:56:20.178" endtime="20231122 01:56:20.178"/>
</kw>
<status status="PASS" starttime="20231122 01:56:20.016" endtime="20231122 01:56:20.178"/>
</kw>
<msg timestamp="20231122 01:56:20.179" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:56:20.015" endtime="20231122 01:56:20.179"/>
</kw>
<msg timestamp="20231122 01:56:20.179" level="INFO">${result} = {"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20231122 01:56:20.015" endtime="20231122 01:56:20.179"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:56:20.179" endtime="20231122 01:56:20.179"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:56:20.184" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:56:20.205" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:56:20.205" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20231122 01:56:20.181" endtime="20231122 01:56:20.206"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:56:20.206" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20231122 01:56:20.206" endtime="20231122 01:56:20.206"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:56:20.207" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:56:20.207" endtime="20231122 01:56:20.207"/>
</kw>
<status status="PASS" starttime="20231122 01:56:20.181" endtime="20231122 01:56:20.207"/>
</kw>
<msg timestamp="20231122 01:56:20.207" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:56:20.180" endtime="20231122 01:56:20.207"/>
</kw>
<msg timestamp="20231122 01:56:20.207" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20231122 01:56:20.180" endtime="20231122 01:56:20.207"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20231122 01:56:20.208" level="FAIL">'[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20231122 01:56:20.207" endtime="20231122 01:56:20.208"/>
</kw>
<status status="FAIL" starttime="20231122 01:56:20.014" endtime="20231122 01:56:20.208"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231122 01:56:30.209" endtime="20231122 01:56:30.210"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:56:30.213" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:56:30.225" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:56:30.225" level="INFO">${output} = {"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20231122 01:56:30.211" endtime="20231122 01:56:30.225"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:56:30.226" level="INFO">{"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20231122 01:56:30.225" endtime="20231122 01:56:30.226"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:56:30.226" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:56:30.226" endtime="20231122 01:56:30.226"/>
</kw>
<status status="PASS" starttime="20231122 01:56:30.211" endtime="20231122 01:56:30.226"/>
</kw>
<msg timestamp="20231122 01:56:30.226" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:56:30.210" endtime="20231122 01:56:30.227"/>
</kw>
<msg timestamp="20231122 01:56:30.227" level="INFO">${result} = {"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20231122 01:56:30.210" endtime="20231122 01:56:30.227"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:56:30.227" endtime="20231122 01:56:30.227"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:56:30.230" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:56:30.242" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:56:30.242" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20231122 01:56:30.228" endtime="20231122 01:56:30.242"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:56:30.243" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20231122 01:56:30.242" endtime="20231122 01:56:30.243"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:56:30.243" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:56:30.243" endtime="20231122 01:56:30.243"/>
</kw>
<status status="PASS" starttime="20231122 01:56:30.228" endtime="20231122 01:56:30.244"/>
</kw>
<msg timestamp="20231122 01:56:30.244" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:56:30.228" endtime="20231122 01:56:30.244"/>
</kw>
<msg timestamp="20231122 01:56:30.244" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20231122 01:56:30.227" endtime="20231122 01:56:30.244"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20231122 01:56:30.244" level="FAIL">'[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20231122 01:56:30.244" endtime="20231122 01:56:30.244"/>
</kw>
<status status="FAIL" starttime="20231122 01:56:30.209" endtime="20231122 01:56:30.245"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231122 01:56:40.246" endtime="20231122 01:56:40.246"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:56:40.249" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:56:40.260" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:56:40.261" level="INFO">${output} = {"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20231122 01:56:40.247" endtime="20231122 01:56:40.261"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:56:40.261" level="INFO">{"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20231122 01:56:40.261" endtime="20231122 01:56:40.261"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:56:40.262" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:56:40.261" endtime="20231122 01:56:40.262"/>
</kw>
<status status="PASS" starttime="20231122 01:56:40.247" endtime="20231122 01:56:40.262"/>
</kw>
<msg timestamp="20231122 01:56:40.262" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:56:40.247" endtime="20231122 01:56:40.262"/>
</kw>
<msg timestamp="20231122 01:56:40.262" level="INFO">${result} = {"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20231122 01:56:40.246" endtime="20231122 01:56:40.262"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:56:40.263" endtime="20231122 01:56:40.263"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:56:40.265" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:56:40.277" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:56:40.277" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20231122 01:56:40.264" endtime="20231122 01:56:40.277"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:56:40.278" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20231122 01:56:40.278" endtime="20231122 01:56:40.278"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:56:40.279" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:56:40.278" endtime="20231122 01:56:40.279"/>
</kw>
<status status="PASS" starttime="20231122 01:56:40.264" endtime="20231122 01:56:40.279"/>
</kw>
<msg timestamp="20231122 01:56:40.279" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:56:40.263" endtime="20231122 01:56:40.279"/>
</kw>
<msg timestamp="20231122 01:56:40.279" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20231122 01:56:40.263" endtime="20231122 01:56:40.279"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20231122 01:56:40.280" level="FAIL">'[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20231122 01:56:40.279" endtime="20231122 01:56:40.280"/>
</kw>
<status status="FAIL" starttime="20231122 01:56:40.245" endtime="20231122 01:56:40.280"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231122 01:56:50.281" endtime="20231122 01:56:50.281"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:56:50.284" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:56:50.295" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:56:50.295" level="INFO">${output} = {"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20231122 01:56:50.283" endtime="20231122 01:56:50.295"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:56:50.296" level="INFO">{"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20231122 01:56:50.296" endtime="20231122 01:56:50.296"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:56:50.297" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:56:50.296" endtime="20231122 01:56:50.297"/>
</kw>
<status status="PASS" starttime="20231122 01:56:50.282" endtime="20231122 01:56:50.297"/>
</kw>
<msg timestamp="20231122 01:56:50.297" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:56:50.282" endtime="20231122 01:56:50.297"/>
</kw>
<msg timestamp="20231122 01:56:50.297" level="INFO">${result} = {"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20231122 01:56:50.282" endtime="20231122 01:56:50.297"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:56:50.298" endtime="20231122 01:56:50.298"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:56:50.301" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:56:50.313" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:56:50.313" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20231122 01:56:50.299" endtime="20231122 01:56:50.313"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:56:50.314" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20231122 01:56:50.313" endtime="20231122 01:56:50.314"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:56:50.314" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:56:50.314" endtime="20231122 01:56:50.315"/>
</kw>
<status status="PASS" starttime="20231122 01:56:50.299" endtime="20231122 01:56:50.315"/>
</kw>
<msg timestamp="20231122 01:56:50.315" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:56:50.298" endtime="20231122 01:56:50.315"/>
</kw>
<msg timestamp="20231122 01:56:50.315" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20231122 01:56:50.298" endtime="20231122 01:56:50.315"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20231122 01:56:50.316" level="FAIL">'[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20231122 01:56:50.315" endtime="20231122 01:56:50.316"/>
</kw>
<status status="FAIL" starttime="20231122 01:56:50.280" endtime="20231122 01:56:50.316"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231122 01:57:00.317" endtime="20231122 01:57:00.317"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:57:00.321" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:57:00.332" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:57:00.332" level="INFO">${output} = {"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20231122 01:57:00.319" endtime="20231122 01:57:00.332"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:57:00.333" level="INFO">{"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20231122 01:57:00.333" endtime="20231122 01:57:00.333"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:57:00.334" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:57:00.333" endtime="20231122 01:57:00.334"/>
</kw>
<status status="PASS" starttime="20231122 01:57:00.318" endtime="20231122 01:57:00.334"/>
</kw>
<msg timestamp="20231122 01:57:00.334" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:57:00.318" endtime="20231122 01:57:00.334"/>
</kw>
<msg timestamp="20231122 01:57:00.334" level="INFO">${result} = {"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20231122 01:57:00.317" endtime="20231122 01:57:00.334"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:57:00.334" endtime="20231122 01:57:00.335"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:57:00.338" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:57:00.350" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:57:00.350" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20231122 01:57:00.336" endtime="20231122 01:57:00.351"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:57:00.351" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20231122 01:57:00.351" endtime="20231122 01:57:00.351"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:57:00.352" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:57:00.352" endtime="20231122 01:57:00.352"/>
</kw>
<status status="PASS" starttime="20231122 01:57:00.335" endtime="20231122 01:57:00.352"/>
</kw>
<msg timestamp="20231122 01:57:00.352" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:57:00.335" endtime="20231122 01:57:00.352"/>
</kw>
<msg timestamp="20231122 01:57:00.353" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20231122 01:57:00.335" endtime="20231122 01:57:00.353"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20231122 01:57:00.353" level="FAIL">'[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20231122 01:57:00.353" endtime="20231122 01:57:00.353"/>
</kw>
<status status="FAIL" starttime="20231122 01:57:00.316" endtime="20231122 01:57:00.353"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231122 01:57:10.354" endtime="20231122 01:57:10.355"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:57:10.358" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:57:10.369" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:57:10.369" level="INFO">${output} = {"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20231122 01:57:10.356" endtime="20231122 01:57:10.370"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:57:10.370" level="INFO">{"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20231122 01:57:10.370" endtime="20231122 01:57:10.370"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:57:10.371" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:57:10.370" endtime="20231122 01:57:10.371"/>
</kw>
<status status="PASS" starttime="20231122 01:57:10.356" endtime="20231122 01:57:10.371"/>
</kw>
<msg timestamp="20231122 01:57:10.371" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:57:10.356" endtime="20231122 01:57:10.371"/>
</kw>
<msg timestamp="20231122 01:57:10.371" level="INFO">${result} = {"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20231122 01:57:10.355" endtime="20231122 01:57:10.371"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:57:10.371" endtime="20231122 01:57:10.372"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:57:10.374" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:57:10.387" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:57:10.387" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20231122 01:57:10.373" endtime="20231122 01:57:10.387"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:57:10.388" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20231122 01:57:10.388" endtime="20231122 01:57:10.388"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:57:10.389" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:57:10.389" endtime="20231122 01:57:10.389"/>
</kw>
<status status="PASS" starttime="20231122 01:57:10.373" endtime="20231122 01:57:10.389"/>
</kw>
<msg timestamp="20231122 01:57:10.389" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:57:10.372" endtime="20231122 01:57:10.389"/>
</kw>
<msg timestamp="20231122 01:57:10.390" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]</msg>
<status status="PASS" starttime="20231122 01:57:10.372" endtime="20231122 01:57:10.390"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20231122 01:57:10.390" level="FAIL">'[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1}]' does not contain '"fileSize":2048,"count":10'</msg>
<status status="FAIL" starttime="20231122 01:57:10.390" endtime="20231122 01:57:10.390"/>
</kw>
<status status="FAIL" starttime="20231122 01:57:10.354" endtime="20231122 01:57:10.390"/>
</kw>
<kw name="Check if Recon picks up container from OM">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit as ozone admin</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231122 01:57:20.391" endtime="20231122 01:57:20.392"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:57:20.395" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:57:20.405" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:57:20.405" level="INFO">${output} = {"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20231122 01:57:20.393" endtime="20231122 01:57:20.405"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:57:20.406" level="INFO">{"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":null}]}}</msg>
<status status="PASS" starttime="20231122 01:57:20.406" endtime="20231122 01:57:20.406"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:57:20.407" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:57:20.406" endtime="20231122 01:57:20.407"/>
</kw>
<status status="PASS" starttime="20231122 01:57:20.392" endtime="20231122 01:57:20.407"/>
</kw>
<msg timestamp="20231122 01:57:20.407" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:57:20.392" endtime="20231122 01:57:20.407"/>
</kw>
<msg timestamp="20231122 01:57:20.407" level="INFO">${result} = {"data":{"totalCount":3,"prevKey":3,"containers":[{"ContainerID":1,"NumberOfKeys":0,"pipelines":null},{"ContainerID":2,"NumberOfKeys":0,"pipelines":null},{"ContainerID":3,"NumberOfKeys":0,"pipelines":...</msg>
<status status="PASS" starttime="20231122 01:57:20.392" endtime="20231122 01:57:20.407"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"ContainerID\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:57:20.407" endtime="20231122 01:57:20.408"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/utilization/fileCount</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:57:20.410" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/utilization/fileCount 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:57:20.422" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:57:20.422" level="INFO">${output} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1},{"volume":"recon","bucket":"api","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20231122 01:57:20.409" endtime="20231122 01:57:20.422"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:57:20.423" level="INFO">[{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1},{"volume":"recon","bucket":"api","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20231122 01:57:20.422" endtime="20231122 01:57:20.423"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:57:20.424" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:57:20.423" endtime="20231122 01:57:20.424"/>
</kw>
<status status="PASS" starttime="20231122 01:57:20.408" endtime="20231122 01:57:20.424"/>
</kw>
<msg timestamp="20231122 01:57:20.424" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:57:20.408" endtime="20231122 01:57:20.424"/>
</kw>
<msg timestamp="20231122 01:57:20.424" level="INFO">${result} = [{"volume":"vol1","bucket":"bucket1","fileSize":16384,"count":1},{"volume":"recon","bucket":"api","fileSize":2048,"count":10}]</msg>
<status status="PASS" starttime="20231122 01:57:20.408" endtime="20231122 01:57:20.424"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"fileSize\":2048,\"count\":10</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:57:20.424" endtime="20231122 01:57:20.425"/>
</kw>
<status status="PASS" starttime="20231122 01:57:20.391" endtime="20231122 01:57:20.425"/>
</kw>
<status status="PASS" starttime="20231122 01:56:20.014" endtime="20231122 01:57:20.425"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231122 01:56:06.351" endtime="20231122 01:57:20.425"/>
</test>
<test id="s1-s3-s1-t2" name="Check if Recon picks up DN heartbeats" line="71">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/datanodes</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:57:20.429" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/datanodes 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:57:20.456" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:57:20.456" level="INFO">${output} = {"totalCount":6,"datanodes":[{"uuid":"6869e2f4-51ed-4f72-983b-4587eff63488","hostname":"ozone-topology_datanode_1_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1700618...</msg>
<status status="PASS" starttime="20231122 01:57:20.428" endtime="20231122 01:57:20.457"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:57:20.457" level="INFO">{"totalCount":6,"datanodes":[{"uuid":"6869e2f4-51ed-4f72-983b-4587eff63488","hostname":"ozone-topology_datanode_1_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1700618239096,"storageReport":{"capacity":89297309696,"used":11267,"remaining":19635204096},"pipelines":[{"pipelineID":"f09dc45a-6f0a-4697-89d6-d2d7f6d37634","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net"},{"pipelineID":"adf9b478-70a0-43ac-b592-7e5d41c590b8","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net"},{"pipelineID":"cd51fb5a-8c7e-4bd9-90bb-549cb5d1f4b5","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":2,"version":"1.4.0-SNAPSHOT","setupTime":1700618078606,"revision":"4445662c29e72d0e48652dfe6d4a4043bcacaa6b","buildDate":"2023-11-22T01:26Z","layoutVersion":7,"networkLocation":"/rack1"},{"uuid":"847a6eb8-c023-459a-909f-51b9c8faa205","hostname":"ozone-topology_datanode_6_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1700618216121,"storageReport":{"capacity":89297309696,"used":4096,"remaining":19935813632},"pipelines":[{"pipelineID":"a3f4d6b5-8997-4712-a567-88e7fbffcc25","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net"}],"containers":0,"openContainers":0,"leaderCount":1,"version":"1.4.0-SNAPSHOT","setupTime":1700618079451,"revision":"4445662c29e72d0e48652dfe6d4a4043bcacaa6b","buildDate":"2023-11-22T01:26Z","layoutVersion":7,"networkLocation":"/rack2"},{"uuid":"1e57a478-42e0-4032-8bc2-716df1e9f328","hostname":"ozone-topology_datanode_3_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1700618232336,"storageReport":{"capacity":89297309696,"used":21511,"remaining":19635204096},"pipelines":[{"pipelineID":"f650df79-73e7-4802-8e3f-8f39515434b5","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net"},{"pipelineID":"ee445a1d-da6c-44f4-8ba1-658f5c783e69","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net"}],"containers":1,"openContainers":1,"leaderCount":2,"version":"1.4.0-SNAPSHOT","setupTime":1700618078629,"revision":"4445662c29e72d0e48652dfe6d4a4043bcacaa6b","buildDate":"2023-11-22T01:26Z","layoutVersion":7,"networkLocation":"/rack1"},{"uuid":"4bb9c4e5-b858-4e17-b421-fc2cb6d9bcdd","hostname":"ozone-topology_datanode_4_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1700618239113,"storageReport":{"capacity":89297309696,"used":7171,"remaining":19635204096},"pipelines":[{"pipelineID":"2d774527-1c0f-45a5-bcd4-c0a8a3542ec0","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net"},{"pipelineID":"f09dc45a-6f0a-4697-89d6-d2d7f6d37634","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net"},{"pipelineID":"cd51fb5a-8c7e-4bd9-90bb-549cb5d1f4b5","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":2,"version":"1.4.0-SNAPSHOT","setupTime":1700618076898,"revision":"4445662c29e72d0e48652dfe6d4a4043bcacaa6b","buildDate":"2023-11-22T01:26Z","layoutVersion":7,"networkLocation":"/rack2"},{"uuid":"08fbba64-1b08-4ed9-85f8-196b1bc71a84","hostname":"ozone-topology_datanode_5_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1700618239100,"storageReport":{"capacity":89297309696,"used":26632,"remaining":19635204096},"pipelines":[{"pipelineID":"15eb9b6f-9efa-45e9-9093-14d4a1c34d60","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net"},{"pipelineID":"f650df79-73e7-4802-8e3f-8f39515434b5","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net"},{"pipelineID":"f09dc45a-6f0a-4697-89d6-d2d7f6d37634","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":1,"version":"1.4.0-SNAPSHOT","setupTime":1700618077177,"revision":"4445662c29e72d0e48652dfe6d4a4043bcacaa6b","buildDate":"2023-11-22T01:26Z","layoutVersion":7,"networkLocation":"/rack2"},{"uuid":"8a4383e4-e060-4998-b69d-0511849b8a97","hostname":"ozone-topology_datanode_2_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1700618238004,"storageReport":{"capacity":89297309696,"used":23561,"remaining":19635204096},"pipelines":[{"pipelineID":"0368c104-9402-4362-b4d3-053efb0b59de","replicationType":"RATIS","replicationFactor":"ONE","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net"},{"pipelineID":"f650df79-73e7-4802-8e3f-8f39515434b5","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net"},{"pipelineID":"cd51fb5a-8c7e-4bd9-90bb-549cb5d1f4b5","replicationType":"RATIS","replicationFactor":"THREE","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net"}],"containers":2,"openContainers":2,"leaderCount":1,"version":"1.4.0-SNAPSHOT","setupTime":1700618077563,"revision":"4445662c29e72d0e48652dfe6d4a4043bcacaa6b","buildDate":"2023-11-22T01:26Z","layoutVersion":7,"networkLocation":"/rack1"}]}</msg>
<status status="PASS" starttime="20231122 01:57:20.457" endtime="20231122 01:57:20.458"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:57:20.458" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:57:20.458" endtime="20231122 01:57:20.458"/>
</kw>
<status status="PASS" starttime="20231122 01:57:20.427" endtime="20231122 01:57:20.458"/>
</kw>
<msg timestamp="20231122 01:57:20.458" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:57:20.427" endtime="20231122 01:57:20.458"/>
</kw>
<msg timestamp="20231122 01:57:20.459" level="INFO">${result} = {"totalCount":6,"datanodes":[{"uuid":"6869e2f4-51ed-4f72-983b-4587eff63488","hostname":"ozone-topology_datanode_1_1.ozone-topology_net","state":"HEALTHY","opState":"IN_SERVICE","lastHeartbeat":1700618...</msg>
<status status="PASS" starttime="20231122 01:57:20.426" endtime="20231122 01:57:20.459"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanodes</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:57:20.459" endtime="20231122 01:57:20.459"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:57:20.459" endtime="20231122 01:57:20.460"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:57:20.460" endtime="20231122 01:57:20.460"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:57:20.460" endtime="20231122 01:57:20.460"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/pipelines</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:57:20.463" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/pipelines 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:57:20.497" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:57:20.497" level="INFO">${output} = {"totalCount":9,"pipelines":[{"pipelineId":"2d774527-1c0f-45a5-bcd4-c0a8a3542ec0","status":"OPEN","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"c...</msg>
<status status="PASS" starttime="20231122 01:57:20.462" endtime="20231122 01:57:20.497"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:57:20.498" level="INFO">{"totalCount":9,"pipelines":[{"pipelineId":"2d774527-1c0f-45a5-bcd4-c0a8a3542ec0","status":"OPEN","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"4bb9c4e5-b858-4e17-b421-fc2cb6d9bcdd","uuidString":"4bb9c4e5-b858-4e17-b421-fc2cb6d9bcdd","ipAddress":"10.5.0.7","hostName":"ozone-topology_datanode_4_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-2143923649,"decommissioned":false,"maintenance":false,"networkName":"4bb9c4e5-b858-4e17-b421-fc2cb6d9bcdd","networkLocation":"/rack2","networkFullPath":"/rack2/4bb9c4e5-b858-4e17-b421-fc2cb6d9bcdd","numOfLeaves":1}],"lastLeaderElection":0,"duration":124309,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"15eb9b6f-9efa-45e9-9093-14d4a1c34d60","status":"OPEN","leaderNode":"ozone-topology_datanode_5_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"08fbba64-1b08-4ed9-85f8-196b1bc71a84","uuidString":"08fbba64-1b08-4ed9-85f8-196b1bc71a84","ipAddress":"10.5.0.8","hostName":"ozone-topology_datanode_5_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":1330469895,"decommissioned":false,"maintenance":false,"networkName":"08fbba64-1b08-4ed9-85f8-196b1bc71a84","networkLocation":"/rack2","networkFullPath":"/rack2/08fbba64-1b08-4ed9-85f8-196b1bc71a84","numOfLeaves":1}],"lastLeaderElection":0,"duration":124301,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"0368c104-9402-4362-b4d3-053efb0b59de","status":"OPEN","leaderNode":"ozone-topology_datanode_2_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"8a4383e4-e060-4998-b69d-0511849b8a97","uuidString":"8a4383e4-e060-4998-b69d-0511849b8a97","ipAddress":"10.5.0.5","hostName":"ozone-topology_datanode_2_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":201702596,"decommissioned":false,"maintenance":false,"networkName":"8a4383e4-e060-4998-b69d-0511849b8a97","networkLocation":"/rack1","networkFullPath":"/rack1/8a4383e4-e060-4998-b69d-0511849b8a97","numOfLeaves":1}],"lastLeaderElection":0,"duration":124285,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"f650df79-73e7-4802-8e3f-8f39515434b5","status":"OPEN","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"1e57a478-42e0-4032-8bc2-716df1e9f328","uuidString":"1e57a478-42e0-4032-8bc2-716df1e9f328","ipAddress":"10.5.0.6","hostName":"ozone-topology_datanode_3_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-1767494233,"decommissioned":false,"maintenance":false,"networkName":"1e57a478-42e0-4032-8bc2-716df1e9f328","networkLocation":"/rack1","networkFullPath":"/rack1/1e57a478-42e0-4032-8bc2-716df1e9f328","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"08fbba64-1b08-4ed9-85f8-196b1bc71a84","uuidString":"08fbba64-1b08-4ed9-85f8-196b1bc71a84","ipAddress":"10.5.0.8","hostName":"ozone-topology_datanode_5_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":1330469895,"decommissioned":false,"maintenance":false,"networkName":"08fbba64-1b08-4ed9-85f8-196b1bc71a84","networkLocation":"/rack2","networkFullPath":"/rack2/08fbba64-1b08-4ed9-85f8-196b1bc71a84","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"8a4383e4-e060-4998-b69d-0511849b8a97","uuidString":"8a4383e4-e060-4998-b69d-0511849b8a97","ipAddress":"10.5.0.5","hostName":"ozone-topology_datanode_2_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":201702596,"decommissioned":false,"maintenance":false,"networkName":"8a4383e4-e060-4998-b69d-0511849b8a97","networkLocation":"/rack1","networkFullPath":"/rack1/8a4383e4-e060-4998-b69d-0511849b8a97","numOfLeaves":1}],"lastLeaderElection":0,"duration":124013,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"f09dc45a-6f0a-4697-89d6-d2d7f6d37634","status":"OPEN","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"08fbba64-1b08-4ed9-85f8-196b1bc71a84","uuidString":"08fbba64-1b08-4ed9-85f8-196b1bc71a84","ipAddress":"10.5.0.8","hostName":"ozone-topology_datanode_5_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":1330469895,"decommissioned":false,"maintenance":false,"networkName":"08fbba64-1b08-4ed9-85f8-196b1bc71a84","networkLocation":"/rack2","networkFullPath":"/rack2/08fbba64-1b08-4ed9-85f8-196b1bc71a84","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"6869e2f4-51ed-4f72-983b-4587eff63488","uuidString":"6869e2f4-51ed-4f72-983b-4587eff63488","ipAddress":"10.5.0.4","hostName":"ozone-topology_datanode_1_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":1357576778,"decommissioned":false,"maintenance":false,"networkName":"6869e2f4-51ed-4f72-983b-4587eff63488","networkLocation":"/rack1","networkFullPath":"/rack1/6869e2f4-51ed-4f72-983b-4587eff63488","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"4bb9c4e5-b858-4e17-b421-fc2cb6d9bcdd","uuidString":"4bb9c4e5-b858-4e17-b421-fc2cb6d9bcdd","ipAddress":"10.5.0.7","hostName":"ozone-topology_datanode_4_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-2143923649,"decommissioned":false,"maintenance":false,"networkName":"4bb9c4e5-b858-4e17-b421-fc2cb6d9bcdd","networkLocation":"/rack2","networkFullPath":"/rack2/4bb9c4e5-b858-4e17-b421-fc2cb6d9bcdd","numOfLeaves":1}],"lastLeaderElection":0,"duration":124191,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1},{"pipelineId":"ee445a1d-da6c-44f4-8ba1-658f5c783e69","status":"OPEN","leaderNode":"ozone-topology_datanode_3_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"1e57a478-42e0-4032-8bc2-716df1e9f328","uuidString":"1e57a478-42e0-4032-8bc2-716df1e9f328","ipAddress":"10.5.0.6","hostName":"ozone-topology_datanode_3_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-1767494233,"decommissioned":false,"maintenance":false,"networkName":"1e57a478-42e0-4032-8bc2-716df1e9f328","networkLocation":"/rack1","networkFullPath":"/rack1/1e57a478-42e0-4032-8bc2-716df1e9f328","numOfLeaves":1}],"lastLeaderElection":0,"duration":124029,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"a3f4d6b5-8997-4712-a567-88e7fbffcc25","status":"OPEN","leaderNode":"ozone-topology_datanode_6_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"847a6eb8-c023-459a-909f-51b9c8faa205","uuidString":"847a6eb8-c023-459a-909f-51b9c8faa205","ipAddress":"10.5.0.9","hostName":"ozone-topology_datanode_6_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":1067233936,"decommissioned":false,"maintenance":false,"networkName":"847a6eb8-c023-459a-909f-51b9c8faa205","networkLocation":"/rack2","networkFullPath":"/rack2/847a6eb8-c023-459a-909f-51b9c8faa205","numOfLeaves":1}],"lastLeaderElection":0,"duration":123733,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"adf9b478-70a0-43ac-b592-7e5d41c590b8","status":"OPEN","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"6869e2f4-51ed-4f72-983b-4587eff63488","uuidString":"6869e2f4-51ed-4f72-983b-4587eff63488","ipAddress":"10.5.0.4","hostName":"ozone-topology_datanode_1_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":1357576778,"decommissioned":false,"maintenance":false,"networkName":"6869e2f4-51ed-4f72-983b-4587eff63488","networkLocation":"/rack1","networkFullPath":"/rack1/6869e2f4-51ed-4f72-983b-4587eff63488","numOfLeaves":1}],"lastLeaderElection":0,"duration":124912,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"ONE","containers":0},{"pipelineId":"cd51fb5a-8c7e-4bd9-90bb-549cb5d1f4b5","status":"OPEN","leaderNode":"ozone-topology_datanode_1_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"cost":0,"uuid":"6869e2f4-51ed-4f72-983b-4587eff63488","uuidString":"6869e2f4-51ed-4f72-983b-4587eff63488","ipAddress":"10.5.0.4","hostName":"ozone-topology_datanode_1_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":1357576778,"decommissioned":false,"maintenance":false,"networkName":"6869e2f4-51ed-4f72-983b-4587eff63488","networkLocation":"/rack1","networkFullPath":"/rack1/6869e2f4-51ed-4f72-983b-4587eff63488","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"4bb9c4e5-b858-4e17-b421-fc2cb6d9bcdd","uuidString":"4bb9c4e5-b858-4e17-b421-fc2cb6d9bcdd","ipAddress":"10.5.0.7","hostName":"ozone-topology_datanode_4_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":-2143923649,"decommissioned":false,"maintenance":false,"networkName":"4bb9c4e5-b858-4e17-b421-fc2cb6d9bcdd","networkLocation":"/rack2","networkFullPath":"/rack2/4bb9c4e5-b858-4e17-b421-fc2cb6d9bcdd","numOfLeaves":1},{"level":0,"parent":null,"cost":0,"uuid":"8a4383e4-e060-4998-b69d-0511849b8a97","uuidString":"8a4383e4-e060-4998-b69d-0511849b8a97","ipAddress":"10.5.0.5","hostName":"ozone-topology_datanode_2_1.ozone-topology_net","ports":[{"name":"HTTP","value":9882},{"name":"CLIENT_RPC","value":9864},{"name":"REPLICATION","value":9886},{"name":"RATIS","value":9858},{"name":"RATIS_ADMIN","value":9857},{"name":"RATIS_SERVER","value":9856},{"name":"STANDALONE","value":9859}],"certSerialId":null,"version":null,"setupTime":0,"revision":null,"buildDate":null,"persistedOpState":"IN_SERVICE","persistedOpStateExpiryEpochSec":0,"initialVersion":0,"currentVersion":1,"signature":201702596,"decommissioned":false,"maintenance":false,"networkName":"8a4383e4-e060-4998-b69d-0511849b8a97","networkLocation":"/rack1","networkFullPath":"/rack1/8a4383e4-e060-4998-b69d-0511849b8a97","numOfLeaves":1}],"lastLeaderElection":0,"duration":124232,"leaderElections":0,"replicationType":"RATIS","replicationFactor":"THREE","containers":1}]}</msg>
<status status="PASS" starttime="20231122 01:57:20.497" endtime="20231122 01:57:20.498"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:57:20.499" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:57:20.498" endtime="20231122 01:57:20.499"/>
</kw>
<status status="PASS" starttime="20231122 01:57:20.461" endtime="20231122 01:57:20.499"/>
</kw>
<msg timestamp="20231122 01:57:20.499" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:57:20.461" endtime="20231122 01:57:20.499"/>
</kw>
<msg timestamp="20231122 01:57:20.499" level="INFO">${result} = {"totalCount":9,"pipelines":[{"pipelineId":"2d774527-1c0f-45a5-bcd4-c0a8a3542ec0","status":"OPEN","leaderNode":"ozone-topology_datanode_4_1.ozone-topology_net","datanodes":[{"level":0,"parent":null,"c...</msg>
<status status="PASS" starttime="20231122 01:57:20.461" endtime="20231122 01:57:20.500"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>pipelines</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:57:20.500" endtime="20231122 01:57:20.500"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:57:20.500" endtime="20231122 01:57:20.500"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OPEN</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:57:20.500" endtime="20231122 01:57:20.501"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:57:20.501" endtime="20231122 01:57:20.501"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:57:20.501" endtime="20231122 01:57:20.502"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>datanode_3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:57:20.502" endtime="20231122 01:57:20.502"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/clusterState</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:57:20.505" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:57:20.541" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:57:20.541" level="INFO">${output} = {"deletedDirs":0,"pipelines":9,"totalDatanodes":6,"healthyDatanodes":6,"storageReport":{"capacity":535783858176,"used":94238,"remaining":118111834112},"containers":3,"missingContainers":0,"openContain...</msg>
<status status="PASS" starttime="20231122 01:57:20.503" endtime="20231122 01:57:20.541"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:57:20.542" level="INFO">{"deletedDirs":0,"pipelines":9,"totalDatanodes":6,"healthyDatanodes":6,"storageReport":{"capacity":535783858176,"used":94238,"remaining":118111834112},"containers":3,"missingContainers":0,"openContainers":3,"deletedContainers":0,"volumes":3,"buckets":2,"keys":11,"keysPendingDeletion":0}</msg>
<status status="PASS" starttime="20231122 01:57:20.541" endtime="20231122 01:57:20.542"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:57:20.542" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:57:20.542" endtime="20231122 01:57:20.542"/>
</kw>
<status status="PASS" starttime="20231122 01:57:20.503" endtime="20231122 01:57:20.543"/>
</kw>
<msg timestamp="20231122 01:57:20.543" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:57:20.503" endtime="20231122 01:57:20.543"/>
</kw>
<msg timestamp="20231122 01:57:20.543" level="INFO">${result} = {"deletedDirs":0,"pipelines":9,"totalDatanodes":6,"healthyDatanodes":6,"storageReport":{"capacity":535783858176,"used":94238,"remaining":118111834112},"containers":3,"missingContainers":0,"openContain...</msg>
<status status="PASS" starttime="20231122 01:57:20.502" endtime="20231122 01:57:20.543"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"totalDatanodes\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:57:20.543" endtime="20231122 01:57:20.543"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"healthyDatanodes\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:57:20.543" endtime="20231122 01:57:20.544"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"pipelines\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:57:20.544" endtime="20231122 01:57:20.544"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${API_ENDPOINT_URL}/containers/1/replicaHistory</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:57:20.547" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/containers/1/replicaHistory 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:57:20.563" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:57:20.563" level="INFO">${output} = [{"containerId":1,"datanodeUuid":"1e57a478-42e0-4032-8bc2-716df1e9f328","datanodeHost":"ozone-topology_datanode_3_1.ozone-topology_net","firstSeenTime":1700618142539,"lastSeenTime":1700618142539,"stat...</msg>
<status status="PASS" starttime="20231122 01:57:20.546" endtime="20231122 01:57:20.563"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:57:20.564" level="INFO">[{"containerId":1,"datanodeUuid":"1e57a478-42e0-4032-8bc2-716df1e9f328","datanodeHost":"ozone-topology_datanode_3_1.ozone-topology_net","firstSeenTime":1700618142539,"lastSeenTime":1700618142539,"state":"OPEN","lastBcsId":0},{"containerId":1,"datanodeUuid":"08fbba64-1b08-4ed9-85f8-196b1bc71a84","datanodeHost":"ozone-topology_datanode_5_1.ozone-topology_net","firstSeenTime":1700618142634,"lastSeenTime":1700618142634,"state":"OPEN","lastBcsId":0},{"containerId":1,"datanodeUuid":"8a4383e4-e060-4998-b69d-0511849b8a97","datanodeHost":"ozone-topology_datanode_2_1.ozone-topology_net","firstSeenTime":1700618142667,"lastSeenTime":1700618142667,"state":"OPEN","lastBcsId":0}]</msg>
<status status="PASS" starttime="20231122 01:57:20.564" endtime="20231122 01:57:20.564"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:57:20.565" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:57:20.564" endtime="20231122 01:57:20.565"/>
</kw>
<status status="PASS" starttime="20231122 01:57:20.545" endtime="20231122 01:57:20.565"/>
</kw>
<msg timestamp="20231122 01:57:20.565" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:57:20.545" endtime="20231122 01:57:20.566"/>
</kw>
<msg timestamp="20231122 01:57:20.566" level="INFO">${result} = [{"containerId":1,"datanodeUuid":"1e57a478-42e0-4032-8bc2-716df1e9f328","datanodeHost":"ozone-topology_datanode_3_1.ozone-topology_net","firstSeenTime":1700618142539,"lastSeenTime":1700618142539,"stat...</msg>
<status status="PASS" starttime="20231122 01:57:20.544" endtime="20231122 01:57:20.566"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"containerId\":1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:57:20.566" endtime="20231122 01:57:20.566"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231122 01:57:20.426" endtime="20231122 01:57:20.567"/>
</test>
<test id="s1-s3-s1-t3" name="Check if Recon Web UI is up" line="94">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231122 01:57:20.568" endtime="20231122 01:57:20.568"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${ENDPOINT_URL}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:57:20.572" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:57:20.585" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:57:20.585" level="INFO">${output} = &lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" ...</msg>
<status status="PASS" starttime="20231122 01:57:20.570" endtime="20231122 01:57:20.586"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:57:20.587" level="INFO">&lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" content="#000000"/&gt;&lt;link rel="manifest" href="/manifest.json"/&gt;&lt;title&gt;Ozone Recon&lt;/title&gt;&lt;link href="/static/css/2.221a50ab.chunk.css" rel="stylesheet"&gt;&lt;link href="/static/css/main.5ac28d52.chunk.css" rel="stylesheet"&gt;&lt;/head&gt;&lt;body&gt;&lt;noscript&gt;You need to enable JavaScript to run this app.&lt;/noscript&gt;&lt;div id="root"&gt;&lt;/div&gt;&lt;script&gt;!function(e){function r(r){for(var n,l,f=r[0],i=r[1],a=r[2],p=0,s=[];p&lt;f.length;p++)l=f[p],Object.prototype.hasOwnProperty.call(o,l)&amp;&amp;o[l]&amp;&amp;s.push(o[l][0]),o[l]=0;for(n in i)Object.prototype.hasOwnProperty.call(i,n)&amp;&amp;(e[n]=i[n]);for(c&amp;&amp;c(r);s.length;)s.shift()();return u.push.apply(u,a||[]),t()}function t(){for(var e,r=0;r&lt;u.length;r++){for(var t=u[r],n=!0,f=1;f&lt;t.length;f++){var i=t[f];0!==o[i]&amp;&amp;(n=!1)}n&amp;&amp;(u.splice(r--,1),e=l(l.s=t[0]))}return e}var n={},o={1:0},u=[];function l(r){if(n[r])return n[r].exports;var t=n[r]={i:r,l:!1,exports:{}};return e[r].call(t.exports,t,t.exports,l),t.l=!0,t.exports}l.m=e,l.c=n,l.d=function(e,r,t){l.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:t})},l.r=function(e){"undefined"!=typeof Symbol&amp;&amp;Symbol.toStringTag&amp;&amp;Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},l.t=function(e,r){if(1&amp;r&amp;&amp;(e=l(e)),8&amp;r)return e;if(4&amp;r&amp;&amp;"object"==typeof e&amp;&amp;e&amp;&amp;e.__esModule)return e;var t=Object.create(null);if(l.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&amp;r&amp;&amp;"string"!=typeof e)for(var n in e)l.d(t,n,function(r){return e[r]}.bind(null,n));return t},l.n=function(e){var r=e&amp;&amp;e.__esModule?function(){return e.default}:function(){return e};return l.d(r,"a",r),r},l.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},l.p="/";var f=this["webpackJsonpozone-recon"]=this["webpackJsonpozone-recon"]||[],i=f.push.bind(f);f.push=r,f=f.slice();for(var a=0;a&lt;f.length;a++)r(f[a]);var c=i;t()}([])&lt;/script&gt;&lt;script src="/static/js/2.97653368.chunk.js"&gt;&lt;/script&gt;&lt;script src="/static/js/main.4fc326ee.chunk.js"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</msg>
<status status="PASS" starttime="20231122 01:57:20.586" endtime="20231122 01:57:20.587"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:57:20.587" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:57:20.587" endtime="20231122 01:57:20.587"/>
</kw>
<status status="PASS" starttime="20231122 01:57:20.569" endtime="20231122 01:57:20.587"/>
</kw>
<msg timestamp="20231122 01:57:20.587" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:57:20.569" endtime="20231122 01:57:20.587"/>
</kw>
<msg timestamp="20231122 01:57:20.588" level="INFO">${result} = &lt;!doctype html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;link rel="shortcut icon" href="/favicon.ico"/&gt;&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;&lt;meta name="theme-color" ...</msg>
<status status="PASS" starttime="20231122 01:57:20.568" endtime="20231122 01:57:20.588"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Ozone Recon</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:57:20.588" endtime="20231122 01:57:20.588"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231122 01:57:20.567" endtime="20231122 01:57:20.588"/>
</test>
<test id="s1-s3-s1-t4" name="Check web UI access" line="99">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:57:20.592" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:57:20.594" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:57:20.594" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20231122 01:57:20.590" endtime="20231122 01:57:20.594"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:57:20.595" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20231122 01:57:20.595" endtime="20231122 01:57:20.595"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:57:20.595" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:57:20.595" endtime="20231122 01:57:20.596"/>
</kw>
<status status="PASS" starttime="20231122 01:57:20.590" endtime="20231122 01:57:20.596"/>
</kw>
<msg timestamp="20231122 01:57:20.596" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:57:20.590" endtime="20231122 01:57:20.596"/>
</kw>
<status status="PASS" starttime="20231122 01:57:20.589" endtime="20231122 01:57:20.596"/>
</kw>
<kw name="Check http return code">
<arg>${ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:57:20.599" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:57:20.609" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:57:20.609" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20231122 01:57:20.597" endtime="20231122 01:57:20.609"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:57:20.610" level="INFO">200</msg>
<status status="PASS" starttime="20231122 01:57:20.609" endtime="20231122 01:57:20.610"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:57:20.610" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:57:20.610" endtime="20231122 01:57:20.611"/>
</kw>
<status status="PASS" starttime="20231122 01:57:20.597" endtime="20231122 01:57:20.611"/>
</kw>
<msg timestamp="20231122 01:57:20.611" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:57:20.597" endtime="20231122 01:57:20.611"/>
</kw>
<msg timestamp="20231122 01:57:20.611" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20231122 01:57:20.596" endtime="20231122 01:57:20.611"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231122 01:57:20.611" endtime="20231122 01:57:20.611"/>
</kw>
<status status="NOT RUN" starttime="20231122 01:57:20.611" endtime="20231122 01:57:20.611"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:57:20.612" endtime="20231122 01:57:20.612"/>
</kw>
<status status="PASS" starttime="20231122 01:57:20.612" endtime="20231122 01:57:20.612"/>
</branch>
<status status="PASS" starttime="20231122 01:57:20.611" endtime="20231122 01:57:20.612"/>
</if>
<status status="PASS" starttime="20231122 01:57:20.596" endtime="20231122 01:57:20.612"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231122 01:57:20.613" endtime="20231122 01:57:20.613"/>
</kw>
<status status="PASS" starttime="20231122 01:57:20.612" endtime="20231122 01:57:20.613"/>
</kw>
<kw name="Check http return code">
<arg>${ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:57:20.615" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:57:20.626" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:57:20.626" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20231122 01:57:20.614" endtime="20231122 01:57:20.626"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:57:20.627" level="INFO">200</msg>
<status status="PASS" starttime="20231122 01:57:20.626" endtime="20231122 01:57:20.627"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:57:20.627" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:57:20.627" endtime="20231122 01:57:20.627"/>
</kw>
<status status="PASS" starttime="20231122 01:57:20.614" endtime="20231122 01:57:20.628"/>
</kw>
<msg timestamp="20231122 01:57:20.628" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:57:20.614" endtime="20231122 01:57:20.628"/>
</kw>
<msg timestamp="20231122 01:57:20.628" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20231122 01:57:20.613" endtime="20231122 01:57:20.628"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231122 01:57:20.629" endtime="20231122 01:57:20.629"/>
</kw>
<status status="NOT RUN" starttime="20231122 01:57:20.628" endtime="20231122 01:57:20.629"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:57:20.629" endtime="20231122 01:57:20.629"/>
</kw>
<status status="PASS" starttime="20231122 01:57:20.629" endtime="20231122 01:57:20.629"/>
</branch>
<status status="PASS" starttime="20231122 01:57:20.628" endtime="20231122 01:57:20.630"/>
</if>
<status status="PASS" starttime="20231122 01:57:20.613" endtime="20231122 01:57:20.630"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231122 01:57:20.589" endtime="20231122 01:57:20.630"/>
</test>
<test id="s1-s3-s1-t5" name="Check admin only api access" line="107">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:57:20.634" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:57:20.636" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:57:20.636" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20231122 01:57:20.632" endtime="20231122 01:57:20.636"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:57:20.637" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20231122 01:57:20.636" endtime="20231122 01:57:20.637"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:57:20.637" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:57:20.637" endtime="20231122 01:57:20.637"/>
</kw>
<status status="PASS" starttime="20231122 01:57:20.632" endtime="20231122 01:57:20.637"/>
</kw>
<msg timestamp="20231122 01:57:20.637" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:57:20.632" endtime="20231122 01:57:20.637"/>
</kw>
<status status="PASS" starttime="20231122 01:57:20.631" endtime="20231122 01:57:20.638"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:57:20.640" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:57:20.651" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:57:20.651" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20231122 01:57:20.639" endtime="20231122 01:57:20.651"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:57:20.652" level="INFO">200</msg>
<status status="PASS" starttime="20231122 01:57:20.651" endtime="20231122 01:57:20.652"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:57:20.652" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:57:20.652" endtime="20231122 01:57:20.652"/>
</kw>
<status status="PASS" starttime="20231122 01:57:20.639" endtime="20231122 01:57:20.652"/>
</kw>
<msg timestamp="20231122 01:57:20.652" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:57:20.638" endtime="20231122 01:57:20.652"/>
</kw>
<msg timestamp="20231122 01:57:20.653" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20231122 01:57:20.638" endtime="20231122 01:57:20.653"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231122 01:57:20.653" endtime="20231122 01:57:20.653"/>
</kw>
<status status="NOT RUN" starttime="20231122 01:57:20.653" endtime="20231122 01:57:20.653"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:57:20.653" endtime="20231122 01:57:20.654"/>
</kw>
<status status="PASS" starttime="20231122 01:57:20.653" endtime="20231122 01:57:20.654"/>
</branch>
<status status="PASS" starttime="20231122 01:57:20.653" endtime="20231122 01:57:20.654"/>
</if>
<status status="PASS" starttime="20231122 01:57:20.638" endtime="20231122 01:57:20.654"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231122 01:57:20.654" endtime="20231122 01:57:20.655"/>
</kw>
<status status="PASS" starttime="20231122 01:57:20.654" endtime="20231122 01:57:20.655"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:57:20.657" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:57:20.668" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:57:20.668" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20231122 01:57:20.656" endtime="20231122 01:57:20.668"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:57:20.668" level="INFO">200</msg>
<status status="PASS" starttime="20231122 01:57:20.668" endtime="20231122 01:57:20.668"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:57:20.669" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:57:20.669" endtime="20231122 01:57:20.669"/>
</kw>
<status status="PASS" starttime="20231122 01:57:20.656" endtime="20231122 01:57:20.669"/>
</kw>
<msg timestamp="20231122 01:57:20.669" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:57:20.655" endtime="20231122 01:57:20.669"/>
</kw>
<msg timestamp="20231122 01:57:20.669" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20231122 01:57:20.655" endtime="20231122 01:57:20.670"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231122 01:57:20.670" endtime="20231122 01:57:20.670"/>
</kw>
<status status="NOT RUN" starttime="20231122 01:57:20.670" endtime="20231122 01:57:20.670"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:57:20.670" endtime="20231122 01:57:20.670"/>
</kw>
<status status="PASS" starttime="20231122 01:57:20.670" endtime="20231122 01:57:20.671"/>
</branch>
<status status="PASS" starttime="20231122 01:57:20.670" endtime="20231122 01:57:20.671"/>
</if>
<status status="PASS" starttime="20231122 01:57:20.655" endtime="20231122 01:57:20.671"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231122 01:57:20.671" endtime="20231122 01:57:20.671"/>
</kw>
<status status="PASS" starttime="20231122 01:57:20.671" endtime="20231122 01:57:20.671"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:57:20.674" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:57:20.684" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:57:20.684" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20231122 01:57:20.673" endtime="20231122 01:57:20.684"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:57:20.685" level="INFO">200</msg>
<status status="PASS" starttime="20231122 01:57:20.685" endtime="20231122 01:57:20.685"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:57:20.686" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:57:20.685" endtime="20231122 01:57:20.686"/>
</kw>
<status status="PASS" starttime="20231122 01:57:20.673" endtime="20231122 01:57:20.686"/>
</kw>
<msg timestamp="20231122 01:57:20.686" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:57:20.672" endtime="20231122 01:57:20.686"/>
</kw>
<msg timestamp="20231122 01:57:20.686" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20231122 01:57:20.672" endtime="20231122 01:57:20.686"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231122 01:57:20.686" endtime="20231122 01:57:20.686"/>
</kw>
<status status="NOT RUN" starttime="20231122 01:57:20.686" endtime="20231122 01:57:20.687"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:57:20.687" endtime="20231122 01:57:20.687"/>
</kw>
<status status="PASS" starttime="20231122 01:57:20.687" endtime="20231122 01:57:20.687"/>
</branch>
<status status="PASS" starttime="20231122 01:57:20.686" endtime="20231122 01:57:20.687"/>
</if>
<status status="PASS" starttime="20231122 01:57:20.672" endtime="20231122 01:57:20.687"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231122 01:57:20.688" endtime="20231122 01:57:20.688"/>
</kw>
<status status="PASS" starttime="20231122 01:57:20.687" endtime="20231122 01:57:20.688"/>
</kw>
<kw name="Check http return code">
<arg>${ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:57:20.691" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:57:20.701" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:57:20.701" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20231122 01:57:20.690" endtime="20231122 01:57:20.701"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:57:20.702" level="INFO">200</msg>
<status status="PASS" starttime="20231122 01:57:20.701" endtime="20231122 01:57:20.702"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:57:20.702" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:57:20.702" endtime="20231122 01:57:20.703"/>
</kw>
<status status="PASS" starttime="20231122 01:57:20.689" endtime="20231122 01:57:20.703"/>
</kw>
<msg timestamp="20231122 01:57:20.703" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:57:20.689" endtime="20231122 01:57:20.703"/>
</kw>
<msg timestamp="20231122 01:57:20.703" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20231122 01:57:20.688" endtime="20231122 01:57:20.703"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231122 01:57:20.703" endtime="20231122 01:57:20.703"/>
</kw>
<status status="NOT RUN" starttime="20231122 01:57:20.703" endtime="20231122 01:57:20.703"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:57:20.704" endtime="20231122 01:57:20.704"/>
</kw>
<status status="PASS" starttime="20231122 01:57:20.704" endtime="20231122 01:57:20.704"/>
</branch>
<status status="PASS" starttime="20231122 01:57:20.703" endtime="20231122 01:57:20.704"/>
</if>
<status status="PASS" starttime="20231122 01:57:20.688" endtime="20231122 01:57:20.704"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231122 01:57:20.630" endtime="20231122 01:57:20.704"/>
</test>
<test id="s1-s3-s1-t6" name="Check unhealthy, (admin) api access" line="120">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:57:20.708" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:57:20.710" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:57:20.710" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20231122 01:57:20.707" endtime="20231122 01:57:20.710"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:57:20.711" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20231122 01:57:20.710" endtime="20231122 01:57:20.711"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:57:20.711" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:57:20.711" endtime="20231122 01:57:20.711"/>
</kw>
<status status="PASS" starttime="20231122 01:57:20.706" endtime="20231122 01:57:20.712"/>
</kw>
<msg timestamp="20231122 01:57:20.712" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:57:20.706" endtime="20231122 01:57:20.712"/>
</kw>
<status status="PASS" starttime="20231122 01:57:20.706" endtime="20231122 01:57:20.712"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:57:20.715" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:57:20.742" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:57:20.742" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20231122 01:57:20.714" endtime="20231122 01:57:20.742"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:57:20.743" level="INFO">200</msg>
<status status="PASS" starttime="20231122 01:57:20.743" endtime="20231122 01:57:20.743"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:57:20.744" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:57:20.743" endtime="20231122 01:57:20.744"/>
</kw>
<status status="PASS" starttime="20231122 01:57:20.713" endtime="20231122 01:57:20.744"/>
</kw>
<msg timestamp="20231122 01:57:20.744" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:57:20.713" endtime="20231122 01:57:20.744"/>
</kw>
<msg timestamp="20231122 01:57:20.744" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20231122 01:57:20.713" endtime="20231122 01:57:20.744"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231122 01:57:20.745" endtime="20231122 01:57:20.745"/>
</kw>
<status status="NOT RUN" starttime="20231122 01:57:20.744" endtime="20231122 01:57:20.745"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:57:20.745" endtime="20231122 01:57:20.745"/>
</kw>
<status status="PASS" starttime="20231122 01:57:20.745" endtime="20231122 01:57:20.745"/>
</branch>
<status status="PASS" starttime="20231122 01:57:20.744" endtime="20231122 01:57:20.745"/>
</if>
<status status="PASS" starttime="20231122 01:57:20.712" endtime="20231122 01:57:20.745"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231122 01:57:20.746" endtime="20231122 01:57:20.746"/>
</kw>
<status status="PASS" starttime="20231122 01:57:20.746" endtime="20231122 01:57:20.746"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:57:20.750" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:57:20.772" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:57:20.772" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20231122 01:57:20.748" endtime="20231122 01:57:20.772"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:57:20.773" level="INFO">200</msg>
<status status="PASS" starttime="20231122 01:57:20.772" endtime="20231122 01:57:20.773"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:57:20.773" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:57:20.773" endtime="20231122 01:57:20.773"/>
</kw>
<status status="PASS" starttime="20231122 01:57:20.747" endtime="20231122 01:57:20.773"/>
</kw>
<msg timestamp="20231122 01:57:20.773" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:57:20.747" endtime="20231122 01:57:20.774"/>
</kw>
<msg timestamp="20231122 01:57:20.774" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20231122 01:57:20.747" endtime="20231122 01:57:20.774"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231122 01:57:20.774" endtime="20231122 01:57:20.774"/>
</kw>
<status status="NOT RUN" starttime="20231122 01:57:20.774" endtime="20231122 01:57:20.774"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:57:20.774" endtime="20231122 01:57:20.775"/>
</kw>
<status status="PASS" starttime="20231122 01:57:20.774" endtime="20231122 01:57:20.775"/>
</branch>
<status status="PASS" starttime="20231122 01:57:20.774" endtime="20231122 01:57:20.775"/>
</if>
<status status="PASS" starttime="20231122 01:57:20.746" endtime="20231122 01:57:20.775"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231122 01:57:20.775" endtime="20231122 01:57:20.776"/>
</kw>
<status status="PASS" starttime="20231122 01:57:20.775" endtime="20231122 01:57:20.776"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:57:20.779" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:57:20.790" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:57:20.790" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20231122 01:57:20.777" endtime="20231122 01:57:20.790"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:57:20.791" level="INFO">200</msg>
<status status="PASS" starttime="20231122 01:57:20.790" endtime="20231122 01:57:20.791"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:57:20.791" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:57:20.791" endtime="20231122 01:57:20.792"/>
</kw>
<status status="PASS" starttime="20231122 01:57:20.777" endtime="20231122 01:57:20.792"/>
</kw>
<msg timestamp="20231122 01:57:20.792" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:57:20.777" endtime="20231122 01:57:20.792"/>
</kw>
<msg timestamp="20231122 01:57:20.792" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20231122 01:57:20.776" endtime="20231122 01:57:20.792"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231122 01:57:20.792" endtime="20231122 01:57:20.792"/>
</kw>
<status status="NOT RUN" starttime="20231122 01:57:20.792" endtime="20231122 01:57:20.792"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:57:20.793" endtime="20231122 01:57:20.793"/>
</kw>
<status status="PASS" starttime="20231122 01:57:20.793" endtime="20231122 01:57:20.793"/>
</branch>
<status status="PASS" starttime="20231122 01:57:20.792" endtime="20231122 01:57:20.793"/>
</if>
<status status="PASS" starttime="20231122 01:57:20.776" endtime="20231122 01:57:20.793"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231122 01:57:20.794" endtime="20231122 01:57:20.794"/>
</kw>
<status status="PASS" starttime="20231122 01:57:20.793" endtime="20231122 01:57:20.794"/>
</kw>
<kw name="Check http return code">
<arg>${UNHEALTHY_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:57:20.797" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/containers/unhealthy 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:57:20.809" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:57:20.809" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20231122 01:57:20.795" endtime="20231122 01:57:20.809"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:57:20.809" level="INFO">200</msg>
<status status="PASS" starttime="20231122 01:57:20.809" endtime="20231122 01:57:20.809"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:57:20.810" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:57:20.810" endtime="20231122 01:57:20.810"/>
</kw>
<status status="PASS" starttime="20231122 01:57:20.795" endtime="20231122 01:57:20.810"/>
</kw>
<msg timestamp="20231122 01:57:20.810" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:57:20.795" endtime="20231122 01:57:20.810"/>
</kw>
<msg timestamp="20231122 01:57:20.811" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20231122 01:57:20.794" endtime="20231122 01:57:20.811"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231122 01:57:20.811" endtime="20231122 01:57:20.811"/>
</kw>
<status status="NOT RUN" starttime="20231122 01:57:20.811" endtime="20231122 01:57:20.811"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:57:20.811" endtime="20231122 01:57:20.812"/>
</kw>
<status status="PASS" starttime="20231122 01:57:20.811" endtime="20231122 01:57:20.812"/>
</branch>
<status status="PASS" starttime="20231122 01:57:20.811" endtime="20231122 01:57:20.812"/>
</if>
<status status="PASS" starttime="20231122 01:57:20.794" endtime="20231122 01:57:20.812"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231122 01:57:20.705" endtime="20231122 01:57:20.812"/>
</test>
<test id="s1-s3-s1-t7" name="Check normal api access" line="133">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:57:20.816" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:57:20.818" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:57:20.818" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20231122 01:57:20.814" endtime="20231122 01:57:20.818"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:57:20.818" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20231122 01:57:20.818" endtime="20231122 01:57:20.818"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:57:20.819" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:57:20.819" endtime="20231122 01:57:20.819"/>
</kw>
<status status="PASS" starttime="20231122 01:57:20.814" endtime="20231122 01:57:20.819"/>
</kw>
<msg timestamp="20231122 01:57:20.819" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:57:20.813" endtime="20231122 01:57:20.819"/>
</kw>
<status status="PASS" starttime="20231122 01:57:20.813" endtime="20231122 01:57:20.819"/>
</kw>
<kw name="Check http return code">
<arg>${NON_ADMIN_API_ENDPOINT_URL}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:57:20.822" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:57:20.840" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:57:20.840" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20231122 01:57:20.821" endtime="20231122 01:57:20.840"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:57:20.841" level="INFO">200</msg>
<status status="PASS" starttime="20231122 01:57:20.841" endtime="20231122 01:57:20.841"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:57:20.844" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:57:20.842" endtime="20231122 01:57:20.844"/>
</kw>
<status status="PASS" starttime="20231122 01:57:20.821" endtime="20231122 01:57:20.844"/>
</kw>
<msg timestamp="20231122 01:57:20.844" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:57:20.820" endtime="20231122 01:57:20.844"/>
</kw>
<msg timestamp="20231122 01:57:20.845" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20231122 01:57:20.820" endtime="20231122 01:57:20.845"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231122 01:57:20.845" endtime="20231122 01:57:20.845"/>
</kw>
<status status="NOT RUN" starttime="20231122 01:57:20.845" endtime="20231122 01:57:20.845"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:57:20.846" endtime="20231122 01:57:20.846"/>
</kw>
<status status="PASS" starttime="20231122 01:57:20.845" endtime="20231122 01:57:20.846"/>
</branch>
<status status="PASS" starttime="20231122 01:57:20.845" endtime="20231122 01:57:20.846"/>
</if>
<status status="PASS" starttime="20231122 01:57:20.819" endtime="20231122 01:57:20.846"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231122 01:57:20.849" endtime="20231122 01:57:20.849"/>
</kw>
<status status="PASS" starttime="20231122 01:57:20.846" endtime="20231122 01:57:20.849"/>
</kw>
<kw name="Check http return code">
<arg>${NON_ADMIN_API_ENDPOINT_URL}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:57:20.854" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/clusterState 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:57:20.874" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:57:20.874" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20231122 01:57:20.851" endtime="20231122 01:57:20.874"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:57:20.876" level="INFO">200</msg>
<status status="PASS" starttime="20231122 01:57:20.875" endtime="20231122 01:57:20.876"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:57:20.876" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:57:20.876" endtime="20231122 01:57:20.877"/>
</kw>
<status status="PASS" starttime="20231122 01:57:20.851" endtime="20231122 01:57:20.877"/>
</kw>
<msg timestamp="20231122 01:57:20.877" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:57:20.851" endtime="20231122 01:57:20.877"/>
</kw>
<msg timestamp="20231122 01:57:20.877" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20231122 01:57:20.850" endtime="20231122 01:57:20.877"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231122 01:57:20.878" endtime="20231122 01:57:20.878"/>
</kw>
<status status="NOT RUN" starttime="20231122 01:57:20.878" endtime="20231122 01:57:20.878"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:57:20.879" endtime="20231122 01:57:20.879"/>
</kw>
<status status="PASS" starttime="20231122 01:57:20.878" endtime="20231122 01:57:20.879"/>
</branch>
<status status="PASS" starttime="20231122 01:57:20.878" endtime="20231122 01:57:20.879"/>
</if>
<status status="PASS" starttime="20231122 01:57:20.849" endtime="20231122 01:57:20.879"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231122 01:57:20.812" endtime="20231122 01:57:20.880"/>
</test>
<doc>Smoke test to start cluster with docker-compose environments.</doc>
<status status="PASS" starttime="20231122 01:56:06.320" endtime="20231122 01:57:20.881"/>
</suite>
<suite id="s1-s3-s2" name="Recon-Nssummary" source="/opt/hadoop/smoketest/recon/recon-nssummary.robot">
<test id="s1-s3-s2-t1" name="Check volume creation" line="99">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:57:20.898" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:57:20.901" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:57:20.901" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20231122 01:57:20.895" endtime="20231122 01:57:20.901"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:57:20.902" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20231122 01:57:20.901" endtime="20231122 01:57:20.902"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:57:20.902" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:57:20.902" endtime="20231122 01:57:20.903"/>
</kw>
<status status="PASS" starttime="20231122 01:57:20.895" endtime="20231122 01:57:20.903"/>
</kw>
<msg timestamp="20231122 01:57:20.903" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:57:20.895" endtime="20231122 01:57:20.903"/>
</kw>
<status status="PASS" starttime="20231122 01:57:20.894" endtime="20231122 01:57:20.903"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231122 01:57:20.903" endtime="20231122 01:57:20.904"/>
</kw>
<status status="PASS" starttime="20231122 01:57:20.903" endtime="20231122 01:57:20.904"/>
</kw>
<kw name="Create volume">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231122 01:57:20.905" level="INFO">${random} = nnvwj</msg>
<status status="PASS" starttime="20231122 01:57:20.904" endtime="20231122 01:57:20.905"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${VOLUME}</arg>
<arg>vol-${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231122 01:57:20.905" level="INFO">${VOLUME} = vol-nnvwj</msg>
<status status="PASS" starttime="20231122 01:57:20.905" endtime="20231122 01:57:20.905"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${VOLUME}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:57:20.917" level="INFO">Running command 'ozone sh volume create /vol-nnvwj 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:57:23.970" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:57:23.970" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20231122 01:57:20.915" endtime="20231122 01:57:23.970"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:57:23.971" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20231122 01:57:23.971" endtime="20231122 01:57:23.971"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:57:23.972" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:57:23.971" endtime="20231122 01:57:23.972"/>
</kw>
<status status="PASS" starttime="20231122 01:57:20.915" endtime="20231122 01:57:23.972"/>
</kw>
<msg timestamp="20231122 01:57:23.972" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:57:20.915" endtime="20231122 01:57:23.972"/>
</kw>
<msg timestamp="20231122 01:57:23.972" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20231122 01:57:20.905" endtime="20231122 01:57:23.972"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:57:23.972" endtime="20231122 01:57:23.973"/>
</kw>
<status status="PASS" starttime="20231122 01:57:20.904" endtime="20231122 01:57:23.973"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231122 01:57:20.894" endtime="20231122 01:57:23.973"/>
</test>
<test id="s1-s3-s2-t2" name="Check bucket creation" line="104">
<kw name="Create bucket">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231122 01:57:23.975" level="INFO">${random} = npgpd</msg>
<status status="PASS" starttime="20231122 01:57:23.974" endtime="20231122 01:57:23.975"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<arg>buc-${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231122 01:57:23.975" level="INFO">${BUCKET} = buc-npgpd</msg>
<status status="PASS" starttime="20231122 01:57:23.975" endtime="20231122 01:57:23.975"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create -l ${BUCKET_LAYOUT} /${VOLUME}/${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:57:23.978" level="INFO">Running command 'ozone sh bucket create -l FILE_SYSTEM_OPTIMIZED /vol-nnvwj/buc-npgpd 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:57:27.285" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:57:27.285" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20231122 01:57:23.976" endtime="20231122 01:57:27.285"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:57:27.285" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20231122 01:57:27.285" endtime="20231122 01:57:27.286"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:57:27.286" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:57:27.286" endtime="20231122 01:57:27.286"/>
</kw>
<status status="PASS" starttime="20231122 01:57:23.976" endtime="20231122 01:57:27.286"/>
</kw>
<msg timestamp="20231122 01:57:27.286" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:57:23.976" endtime="20231122 01:57:27.286"/>
</kw>
<msg timestamp="20231122 01:57:27.287" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20231122 01:57:23.975" endtime="20231122 01:57:27.287"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:57:27.287" endtime="20231122 01:57:27.287"/>
</kw>
<status status="PASS" starttime="20231122 01:57:23.974" endtime="20231122 01:57:27.287"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231122 01:57:23.973" endtime="20231122 01:57:27.287"/>
</test>
<test id="s1-s3-s2-t3" name="Check keys creation" line="107">
<kw name="Create keys">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${VOLUME}/${BUCKET}/file1 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:57:27.291" level="INFO">Running command 'ozone sh key put /vol-nnvwj/buc-npgpd/file1 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:57:32.159" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:57:32.159" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20231122 01:57:27.290" endtime="20231122 01:57:32.159"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:57:32.160" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20231122 01:57:32.159" endtime="20231122 01:57:32.160"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:57:32.160" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:57:32.160" endtime="20231122 01:57:32.160"/>
</kw>
<status status="PASS" starttime="20231122 01:57:27.290" endtime="20231122 01:57:32.161"/>
</kw>
<msg timestamp="20231122 01:57:32.161" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:57:27.289" endtime="20231122 01:57:32.161"/>
</kw>
<msg timestamp="20231122 01:57:32.161" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20231122 01:57:27.289" endtime="20231122 01:57:32.161"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:57:32.161" endtime="20231122 01:57:32.161"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${VOLUME}/${BUCKET}/dir1/dir2/file2 HISTORY.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:57:32.164" level="INFO">Running command 'ozone sh key put /vol-nnvwj/buc-npgpd/dir1/dir2/file2 HISTORY.md 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:57:37.162" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:57:37.162" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20231122 01:57:32.163" endtime="20231122 01:57:37.162"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:57:37.163" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20231122 01:57:37.162" endtime="20231122 01:57:37.163"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:57:37.163" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:57:37.163" endtime="20231122 01:57:37.163"/>
</kw>
<status status="PASS" starttime="20231122 01:57:32.162" endtime="20231122 01:57:37.164"/>
</kw>
<msg timestamp="20231122 01:57:37.164" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:57:32.162" endtime="20231122 01:57:37.164"/>
</kw>
<msg timestamp="20231122 01:57:37.164" level="INFO">${result} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20231122 01:57:32.162" endtime="20231122 01:57:37.164"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:57:37.164" endtime="20231122 01:57:37.164"/>
</kw>
<status status="PASS" starttime="20231122 01:57:27.288" endtime="20231122 01:57:37.164"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231122 01:57:27.288" endtime="20231122 01:57:37.165"/>
</test>
<test id="s1-s3-s2-t4" name="Check Summary api access" line="110">
<kw name="Check Access">
<arg>${SUMMARY_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:57:37.169" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:57:37.171" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:57:37.171" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20231122 01:57:37.167" endtime="20231122 01:57:37.171"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:57:37.172" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20231122 01:57:37.172" endtime="20231122 01:57:37.172"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:57:37.173" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:57:37.172" endtime="20231122 01:57:37.173"/>
</kw>
<status status="PASS" starttime="20231122 01:57:37.167" endtime="20231122 01:57:37.173"/>
</kw>
<msg timestamp="20231122 01:57:37.173" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:57:37.167" endtime="20231122 01:57:37.173"/>
</kw>
<status status="PASS" starttime="20231122 01:57:37.166" endtime="20231122 01:57:37.173"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:57:37.176" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:57:37.205" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:57:37.205" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20231122 01:57:37.175" endtime="20231122 01:57:37.205"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:57:37.207" level="INFO">200</msg>
<status status="PASS" starttime="20231122 01:57:37.206" endtime="20231122 01:57:37.207"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:57:37.207" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:57:37.207" endtime="20231122 01:57:37.208"/>
</kw>
<status status="PASS" starttime="20231122 01:57:37.174" endtime="20231122 01:57:37.208"/>
</kw>
<msg timestamp="20231122 01:57:37.208" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:57:37.174" endtime="20231122 01:57:37.208"/>
</kw>
<msg timestamp="20231122 01:57:37.208" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20231122 01:57:37.174" endtime="20231122 01:57:37.208"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231122 01:57:37.209" endtime="20231122 01:57:37.209"/>
</kw>
<status status="NOT RUN" starttime="20231122 01:57:37.208" endtime="20231122 01:57:37.209"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:57:37.209" endtime="20231122 01:57:37.209"/>
</kw>
<status status="PASS" starttime="20231122 01:57:37.209" endtime="20231122 01:57:37.209"/>
</branch>
<status status="PASS" starttime="20231122 01:57:37.208" endtime="20231122 01:57:37.209"/>
</if>
<status status="PASS" starttime="20231122 01:57:37.173" endtime="20231122 01:57:37.209"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231122 01:57:37.210" endtime="20231122 01:57:37.210"/>
</kw>
<status status="PASS" starttime="20231122 01:57:37.210" endtime="20231122 01:57:37.210"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:57:37.213" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:57:37.224" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:57:37.225" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20231122 01:57:37.212" endtime="20231122 01:57:37.225"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:57:37.225" level="INFO">200</msg>
<status status="PASS" starttime="20231122 01:57:37.225" endtime="20231122 01:57:37.225"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:57:37.226" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:57:37.225" endtime="20231122 01:57:37.226"/>
</kw>
<status status="PASS" starttime="20231122 01:57:37.211" endtime="20231122 01:57:37.226"/>
</kw>
<msg timestamp="20231122 01:57:37.226" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:57:37.211" endtime="20231122 01:57:37.226"/>
</kw>
<msg timestamp="20231122 01:57:37.226" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20231122 01:57:37.211" endtime="20231122 01:57:37.226"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231122 01:57:37.227" endtime="20231122 01:57:37.227"/>
</kw>
<status status="NOT RUN" starttime="20231122 01:57:37.226" endtime="20231122 01:57:37.227"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:57:37.227" endtime="20231122 01:57:37.227"/>
</kw>
<status status="PASS" starttime="20231122 01:57:37.227" endtime="20231122 01:57:37.227"/>
</branch>
<status status="PASS" starttime="20231122 01:57:37.226" endtime="20231122 01:57:37.227"/>
</if>
<status status="PASS" starttime="20231122 01:57:37.210" endtime="20231122 01:57:37.227"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231122 01:57:37.228" endtime="20231122 01:57:37.228"/>
</kw>
<status status="PASS" starttime="20231122 01:57:37.227" endtime="20231122 01:57:37.228"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:57:37.231" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:57:37.242" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:57:37.242" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20231122 01:57:37.230" endtime="20231122 01:57:37.242"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:57:37.242" level="INFO">200</msg>
<status status="PASS" starttime="20231122 01:57:37.242" endtime="20231122 01:57:37.242"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:57:37.243" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:57:37.243" endtime="20231122 01:57:37.243"/>
</kw>
<status status="PASS" starttime="20231122 01:57:37.229" endtime="20231122 01:57:37.243"/>
</kw>
<msg timestamp="20231122 01:57:37.243" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:57:37.229" endtime="20231122 01:57:37.243"/>
</kw>
<msg timestamp="20231122 01:57:37.243" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20231122 01:57:37.229" endtime="20231122 01:57:37.243"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231122 01:57:37.244" endtime="20231122 01:57:37.244"/>
</kw>
<status status="NOT RUN" starttime="20231122 01:57:37.243" endtime="20231122 01:57:37.244"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:57:37.244" endtime="20231122 01:57:37.244"/>
</kw>
<status status="PASS" starttime="20231122 01:57:37.244" endtime="20231122 01:57:37.244"/>
</branch>
<status status="PASS" starttime="20231122 01:57:37.243" endtime="20231122 01:57:37.244"/>
</if>
<status status="PASS" starttime="20231122 01:57:37.228" endtime="20231122 01:57:37.244"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231122 01:57:37.245" endtime="20231122 01:57:37.245"/>
</kw>
<status status="PASS" starttime="20231122 01:57:37.244" endtime="20231122 01:57:37.245"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:57:37.248" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:57:37.259" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:57:37.259" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20231122 01:57:37.247" endtime="20231122 01:57:37.259"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:57:37.260" level="INFO">200</msg>
<status status="PASS" starttime="20231122 01:57:37.259" endtime="20231122 01:57:37.260"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:57:37.260" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:57:37.260" endtime="20231122 01:57:37.260"/>
</kw>
<status status="PASS" starttime="20231122 01:57:37.246" endtime="20231122 01:57:37.261"/>
</kw>
<msg timestamp="20231122 01:57:37.261" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:57:37.246" endtime="20231122 01:57:37.261"/>
</kw>
<msg timestamp="20231122 01:57:37.261" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20231122 01:57:37.246" endtime="20231122 01:57:37.261"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231122 01:57:37.261" endtime="20231122 01:57:37.261"/>
</kw>
<status status="NOT RUN" starttime="20231122 01:57:37.261" endtime="20231122 01:57:37.261"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:57:37.261" endtime="20231122 01:57:37.262"/>
</kw>
<status status="PASS" starttime="20231122 01:57:37.261" endtime="20231122 01:57:37.262"/>
</branch>
<status status="PASS" starttime="20231122 01:57:37.261" endtime="20231122 01:57:37.262"/>
</if>
<status status="PASS" starttime="20231122 01:57:37.245" endtime="20231122 01:57:37.262"/>
</kw>
<status status="PASS" starttime="20231122 01:57:37.166" endtime="20231122 01:57:37.262"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231122 01:57:37.165" endtime="20231122 01:57:37.262"/>
</test>
<test id="s1-s3-s2-t5" name="Check Disk Usage api access" line="113">
<kw name="Check Access">
<arg>${DISK_USAGE_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:57:37.266" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:57:37.268" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:57:37.268" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20231122 01:57:37.264" endtime="20231122 01:57:37.268"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:57:37.269" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20231122 01:57:37.268" endtime="20231122 01:57:37.269"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:57:37.269" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:57:37.269" endtime="20231122 01:57:37.269"/>
</kw>
<status status="PASS" starttime="20231122 01:57:37.264" endtime="20231122 01:57:37.269"/>
</kw>
<msg timestamp="20231122 01:57:37.269" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:57:37.264" endtime="20231122 01:57:37.269"/>
</kw>
<status status="PASS" starttime="20231122 01:57:37.264" endtime="20231122 01:57:37.270"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:57:37.272" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:57:37.291" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:57:37.291" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20231122 01:57:37.271" endtime="20231122 01:57:37.291"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:57:37.292" level="INFO">200</msg>
<status status="PASS" starttime="20231122 01:57:37.292" endtime="20231122 01:57:37.292"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:57:37.293" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:57:37.292" endtime="20231122 01:57:37.293"/>
</kw>
<status status="PASS" starttime="20231122 01:57:37.271" endtime="20231122 01:57:37.293"/>
</kw>
<msg timestamp="20231122 01:57:37.293" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:57:37.271" endtime="20231122 01:57:37.293"/>
</kw>
<msg timestamp="20231122 01:57:37.293" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20231122 01:57:37.270" endtime="20231122 01:57:37.293"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231122 01:57:37.294" endtime="20231122 01:57:37.294"/>
</kw>
<status status="NOT RUN" starttime="20231122 01:57:37.293" endtime="20231122 01:57:37.294"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:57:37.294" endtime="20231122 01:57:37.294"/>
</kw>
<status status="PASS" starttime="20231122 01:57:37.294" endtime="20231122 01:57:37.294"/>
</branch>
<status status="PASS" starttime="20231122 01:57:37.293" endtime="20231122 01:57:37.294"/>
</if>
<status status="PASS" starttime="20231122 01:57:37.270" endtime="20231122 01:57:37.294"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231122 01:57:37.295" endtime="20231122 01:57:37.295"/>
</kw>
<status status="PASS" starttime="20231122 01:57:37.294" endtime="20231122 01:57:37.295"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:57:37.298" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:57:37.311" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:57:37.311" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20231122 01:57:37.297" endtime="20231122 01:57:37.311"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:57:37.312" level="INFO">200</msg>
<status status="PASS" starttime="20231122 01:57:37.311" endtime="20231122 01:57:37.312"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:57:37.312" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:57:37.312" endtime="20231122 01:57:37.312"/>
</kw>
<status status="PASS" starttime="20231122 01:57:37.297" endtime="20231122 01:57:37.312"/>
</kw>
<msg timestamp="20231122 01:57:37.312" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:57:37.296" endtime="20231122 01:57:37.313"/>
</kw>
<msg timestamp="20231122 01:57:37.313" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20231122 01:57:37.296" endtime="20231122 01:57:37.313"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231122 01:57:37.313" endtime="20231122 01:57:37.313"/>
</kw>
<status status="NOT RUN" starttime="20231122 01:57:37.313" endtime="20231122 01:57:37.313"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:57:37.313" endtime="20231122 01:57:37.314"/>
</kw>
<status status="PASS" starttime="20231122 01:57:37.313" endtime="20231122 01:57:37.314"/>
</branch>
<status status="PASS" starttime="20231122 01:57:37.313" endtime="20231122 01:57:37.314"/>
</if>
<status status="PASS" starttime="20231122 01:57:37.295" endtime="20231122 01:57:37.314"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231122 01:57:37.314" endtime="20231122 01:57:37.315"/>
</kw>
<status status="PASS" starttime="20231122 01:57:37.314" endtime="20231122 01:57:37.315"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:57:37.318" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:57:37.330" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:57:37.330" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20231122 01:57:37.316" endtime="20231122 01:57:37.330"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:57:37.331" level="INFO">200</msg>
<status status="PASS" starttime="20231122 01:57:37.331" endtime="20231122 01:57:37.331"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:57:37.332" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:57:37.331" endtime="20231122 01:57:37.332"/>
</kw>
<status status="PASS" starttime="20231122 01:57:37.316" endtime="20231122 01:57:37.332"/>
</kw>
<msg timestamp="20231122 01:57:37.332" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:57:37.315" endtime="20231122 01:57:37.332"/>
</kw>
<msg timestamp="20231122 01:57:37.332" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20231122 01:57:37.315" endtime="20231122 01:57:37.332"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231122 01:57:37.333" endtime="20231122 01:57:37.333"/>
</kw>
<status status="NOT RUN" starttime="20231122 01:57:37.332" endtime="20231122 01:57:37.333"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:57:37.333" endtime="20231122 01:57:37.333"/>
</kw>
<status status="PASS" starttime="20231122 01:57:37.333" endtime="20231122 01:57:37.333"/>
</branch>
<status status="PASS" starttime="20231122 01:57:37.332" endtime="20231122 01:57:37.333"/>
</if>
<status status="PASS" starttime="20231122 01:57:37.315" endtime="20231122 01:57:37.333"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231122 01:57:37.334" endtime="20231122 01:57:37.334"/>
</kw>
<status status="PASS" starttime="20231122 01:57:37.333" endtime="20231122 01:57:37.334"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:57:37.337" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:57:37.348" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:57:37.349" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20231122 01:57:37.336" endtime="20231122 01:57:37.349"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:57:37.349" level="INFO">200</msg>
<status status="PASS" starttime="20231122 01:57:37.349" endtime="20231122 01:57:37.350"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:57:37.350" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:57:37.350" endtime="20231122 01:57:37.350"/>
</kw>
<status status="PASS" starttime="20231122 01:57:37.335" endtime="20231122 01:57:37.350"/>
</kw>
<msg timestamp="20231122 01:57:37.351" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:57:37.335" endtime="20231122 01:57:37.351"/>
</kw>
<msg timestamp="20231122 01:57:37.351" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20231122 01:57:37.335" endtime="20231122 01:57:37.351"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231122 01:57:37.351" endtime="20231122 01:57:37.351"/>
</kw>
<status status="NOT RUN" starttime="20231122 01:57:37.351" endtime="20231122 01:57:37.351"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:57:37.352" endtime="20231122 01:57:37.352"/>
</kw>
<status status="PASS" starttime="20231122 01:57:37.352" endtime="20231122 01:57:37.352"/>
</branch>
<status status="PASS" starttime="20231122 01:57:37.351" endtime="20231122 01:57:37.352"/>
</if>
<status status="PASS" starttime="20231122 01:57:37.334" endtime="20231122 01:57:37.352"/>
</kw>
<status status="PASS" starttime="20231122 01:57:37.263" endtime="20231122 01:57:37.352"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231122 01:57:37.263" endtime="20231122 01:57:37.353"/>
</test>
<test id="s1-s3-s2-t6" name="Check Quota Usage api access" line="116">
<kw name="Check Access">
<arg>${QUOTA_USAGE_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:57:37.357" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:57:37.359" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:57:37.359" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20231122 01:57:37.356" endtime="20231122 01:57:37.359"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:57:37.360" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20231122 01:57:37.359" endtime="20231122 01:57:37.360"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:57:37.360" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:57:37.360" endtime="20231122 01:57:37.360"/>
</kw>
<status status="PASS" starttime="20231122 01:57:37.355" endtime="20231122 01:57:37.361"/>
</kw>
<msg timestamp="20231122 01:57:37.361" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:57:37.355" endtime="20231122 01:57:37.361"/>
</kw>
<status status="PASS" starttime="20231122 01:57:37.354" endtime="20231122 01:57:37.361"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:57:37.364" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:57:37.383" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:57:37.383" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20231122 01:57:37.362" endtime="20231122 01:57:37.383"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:57:37.385" level="INFO">200</msg>
<status status="PASS" starttime="20231122 01:57:37.384" endtime="20231122 01:57:37.385"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:57:37.385" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:57:37.385" endtime="20231122 01:57:37.385"/>
</kw>
<status status="PASS" starttime="20231122 01:57:37.362" endtime="20231122 01:57:37.386"/>
</kw>
<msg timestamp="20231122 01:57:37.386" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:57:37.362" endtime="20231122 01:57:37.386"/>
</kw>
<msg timestamp="20231122 01:57:37.386" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20231122 01:57:37.361" endtime="20231122 01:57:37.386"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231122 01:57:37.386" endtime="20231122 01:57:37.386"/>
</kw>
<status status="NOT RUN" starttime="20231122 01:57:37.386" endtime="20231122 01:57:37.386"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:57:37.387" endtime="20231122 01:57:37.387"/>
</kw>
<status status="PASS" starttime="20231122 01:57:37.386" endtime="20231122 01:57:37.387"/>
</branch>
<status status="PASS" starttime="20231122 01:57:37.386" endtime="20231122 01:57:37.387"/>
</if>
<status status="PASS" starttime="20231122 01:57:37.361" endtime="20231122 01:57:37.387"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231122 01:57:37.388" endtime="20231122 01:57:37.388"/>
</kw>
<status status="PASS" starttime="20231122 01:57:37.387" endtime="20231122 01:57:37.388"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:57:37.393" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:57:37.407" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:57:37.407" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20231122 01:57:37.391" endtime="20231122 01:57:37.407"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:57:37.408" level="INFO">200</msg>
<status status="PASS" starttime="20231122 01:57:37.408" endtime="20231122 01:57:37.408"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:57:37.409" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:57:37.408" endtime="20231122 01:57:37.409"/>
</kw>
<status status="PASS" starttime="20231122 01:57:37.390" endtime="20231122 01:57:37.409"/>
</kw>
<msg timestamp="20231122 01:57:37.409" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:57:37.390" endtime="20231122 01:57:37.409"/>
</kw>
<msg timestamp="20231122 01:57:37.409" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20231122 01:57:37.389" endtime="20231122 01:57:37.409"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231122 01:57:37.410" endtime="20231122 01:57:37.410"/>
</kw>
<status status="NOT RUN" starttime="20231122 01:57:37.409" endtime="20231122 01:57:37.410"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:57:37.410" endtime="20231122 01:57:37.410"/>
</kw>
<status status="PASS" starttime="20231122 01:57:37.410" endtime="20231122 01:57:37.410"/>
</branch>
<status status="PASS" starttime="20231122 01:57:37.409" endtime="20231122 01:57:37.410"/>
</if>
<status status="PASS" starttime="20231122 01:57:37.388" endtime="20231122 01:57:37.410"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231122 01:57:37.411" endtime="20231122 01:57:37.411"/>
</kw>
<status status="PASS" starttime="20231122 01:57:37.411" endtime="20231122 01:57:37.411"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:57:37.414" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:57:37.427" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:57:37.427" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20231122 01:57:37.413" endtime="20231122 01:57:37.428"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:57:37.428" level="INFO">200</msg>
<status status="PASS" starttime="20231122 01:57:37.428" endtime="20231122 01:57:37.428"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:57:37.429" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:57:37.428" endtime="20231122 01:57:37.429"/>
</kw>
<status status="PASS" starttime="20231122 01:57:37.413" endtime="20231122 01:57:37.429"/>
</kw>
<msg timestamp="20231122 01:57:37.429" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:57:37.412" endtime="20231122 01:57:37.429"/>
</kw>
<msg timestamp="20231122 01:57:37.429" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20231122 01:57:37.412" endtime="20231122 01:57:37.429"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231122 01:57:37.430" endtime="20231122 01:57:37.430"/>
</kw>
<status status="NOT RUN" starttime="20231122 01:57:37.430" endtime="20231122 01:57:37.430"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:57:37.430" endtime="20231122 01:57:37.430"/>
</kw>
<status status="PASS" starttime="20231122 01:57:37.430" endtime="20231122 01:57:37.430"/>
</branch>
<status status="PASS" starttime="20231122 01:57:37.429" endtime="20231122 01:57:37.430"/>
</if>
<status status="PASS" starttime="20231122 01:57:37.411" endtime="20231122 01:57:37.430"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231122 01:57:37.431" endtime="20231122 01:57:37.431"/>
</kw>
<status status="PASS" starttime="20231122 01:57:37.431" endtime="20231122 01:57:37.431"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:57:37.434" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:57:37.448" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:57:37.448" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20231122 01:57:37.433" endtime="20231122 01:57:37.448"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:57:37.449" level="INFO">200</msg>
<status status="PASS" starttime="20231122 01:57:37.448" endtime="20231122 01:57:37.449"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:57:37.449" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:57:37.449" endtime="20231122 01:57:37.449"/>
</kw>
<status status="PASS" starttime="20231122 01:57:37.432" endtime="20231122 01:57:37.449"/>
</kw>
<msg timestamp="20231122 01:57:37.449" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:57:37.432" endtime="20231122 01:57:37.450"/>
</kw>
<msg timestamp="20231122 01:57:37.450" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20231122 01:57:37.432" endtime="20231122 01:57:37.450"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231122 01:57:37.450" endtime="20231122 01:57:37.450"/>
</kw>
<status status="NOT RUN" starttime="20231122 01:57:37.450" endtime="20231122 01:57:37.450"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:57:37.450" endtime="20231122 01:57:37.451"/>
</kw>
<status status="PASS" starttime="20231122 01:57:37.450" endtime="20231122 01:57:37.451"/>
</branch>
<status status="PASS" starttime="20231122 01:57:37.450" endtime="20231122 01:57:37.451"/>
</if>
<status status="PASS" starttime="20231122 01:57:37.431" endtime="20231122 01:57:37.451"/>
</kw>
<status status="PASS" starttime="20231122 01:57:37.354" endtime="20231122 01:57:37.451"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231122 01:57:37.353" endtime="20231122 01:57:37.451"/>
</test>
<test id="s1-s3-s2-t7" name="Check File Size Distribution api access" line="119">
<kw name="Check Access">
<arg>${FILE_SIZE_DIST_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:57:37.455" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:57:37.457" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:57:37.457" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20231122 01:57:37.454" endtime="20231122 01:57:37.457"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:57:37.458" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20231122 01:57:37.457" endtime="20231122 01:57:37.458"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:57:37.458" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:57:37.458" endtime="20231122 01:57:37.458"/>
</kw>
<status status="PASS" starttime="20231122 01:57:37.453" endtime="20231122 01:57:37.459"/>
</kw>
<msg timestamp="20231122 01:57:37.459" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:57:37.453" endtime="20231122 01:57:37.459"/>
</kw>
<status status="PASS" starttime="20231122 01:57:37.453" endtime="20231122 01:57:37.459"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:57:37.462" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:57:37.485" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:57:37.485" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20231122 01:57:37.461" endtime="20231122 01:57:37.485"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:57:37.486" level="INFO">200</msg>
<status status="PASS" starttime="20231122 01:57:37.485" endtime="20231122 01:57:37.486"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:57:37.487" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:57:37.486" endtime="20231122 01:57:37.487"/>
</kw>
<status status="PASS" starttime="20231122 01:57:37.460" endtime="20231122 01:57:37.487"/>
</kw>
<msg timestamp="20231122 01:57:37.487" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:57:37.460" endtime="20231122 01:57:37.488"/>
</kw>
<msg timestamp="20231122 01:57:37.488" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20231122 01:57:37.459" endtime="20231122 01:57:37.488"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231122 01:57:37.489" endtime="20231122 01:57:37.489"/>
</kw>
<status status="NOT RUN" starttime="20231122 01:57:37.488" endtime="20231122 01:57:37.489"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:57:37.489" endtime="20231122 01:57:37.490"/>
</kw>
<status status="PASS" starttime="20231122 01:57:37.489" endtime="20231122 01:57:37.490"/>
</branch>
<status status="PASS" starttime="20231122 01:57:37.488" endtime="20231122 01:57:37.490"/>
</if>
<status status="PASS" starttime="20231122 01:57:37.459" endtime="20231122 01:57:37.490"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231122 01:57:37.490" endtime="20231122 01:57:37.491"/>
</kw>
<status status="PASS" starttime="20231122 01:57:37.490" endtime="20231122 01:57:37.491"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:57:37.495" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:57:37.508" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:57:37.508" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20231122 01:57:37.493" endtime="20231122 01:57:37.508"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:57:37.509" level="INFO">200</msg>
<status status="PASS" starttime="20231122 01:57:37.509" endtime="20231122 01:57:37.510"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:57:37.510" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:57:37.510" endtime="20231122 01:57:37.510"/>
</kw>
<status status="PASS" starttime="20231122 01:57:37.492" endtime="20231122 01:57:37.510"/>
</kw>
<msg timestamp="20231122 01:57:37.511" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:57:37.492" endtime="20231122 01:57:37.511"/>
</kw>
<msg timestamp="20231122 01:57:37.511" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20231122 01:57:37.492" endtime="20231122 01:57:37.511"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231122 01:57:37.511" endtime="20231122 01:57:37.511"/>
</kw>
<status status="NOT RUN" starttime="20231122 01:57:37.511" endtime="20231122 01:57:37.512"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:57:37.512" endtime="20231122 01:57:37.512"/>
</kw>
<status status="PASS" starttime="20231122 01:57:37.512" endtime="20231122 01:57:37.512"/>
</branch>
<status status="PASS" starttime="20231122 01:57:37.511" endtime="20231122 01:57:37.512"/>
</if>
<status status="PASS" starttime="20231122 01:57:37.491" endtime="20231122 01:57:37.512"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231122 01:57:37.513" endtime="20231122 01:57:37.513"/>
</kw>
<status status="PASS" starttime="20231122 01:57:37.513" endtime="20231122 01:57:37.514"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:57:37.517" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:57:37.528" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:57:37.528" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20231122 01:57:37.515" endtime="20231122 01:57:37.528"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:57:37.529" level="INFO">200</msg>
<status status="PASS" starttime="20231122 01:57:37.528" endtime="20231122 01:57:37.529"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:57:37.530" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:57:37.529" endtime="20231122 01:57:37.530"/>
</kw>
<status status="PASS" starttime="20231122 01:57:37.515" endtime="20231122 01:57:37.530"/>
</kw>
<msg timestamp="20231122 01:57:37.530" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:57:37.515" endtime="20231122 01:57:37.530"/>
</kw>
<msg timestamp="20231122 01:57:37.530" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20231122 01:57:37.514" endtime="20231122 01:57:37.530"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231122 01:57:37.531" endtime="20231122 01:57:37.531"/>
</kw>
<status status="NOT RUN" starttime="20231122 01:57:37.531" endtime="20231122 01:57:37.531"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:57:37.531" endtime="20231122 01:57:37.532"/>
</kw>
<status status="PASS" starttime="20231122 01:57:37.531" endtime="20231122 01:57:37.532"/>
</branch>
<status status="PASS" starttime="20231122 01:57:37.530" endtime="20231122 01:57:37.532"/>
</if>
<status status="PASS" starttime="20231122 01:57:37.514" endtime="20231122 01:57:37.532"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231122 01:57:37.533" endtime="20231122 01:57:37.533"/>
</kw>
<status status="PASS" starttime="20231122 01:57:37.532" endtime="20231122 01:57:37.533"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:57:37.537" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:57:37.549" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:57:37.549" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20231122 01:57:37.535" endtime="20231122 01:57:37.549"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:57:37.550" level="INFO">200</msg>
<status status="PASS" starttime="20231122 01:57:37.549" endtime="20231122 01:57:37.550"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:57:37.550" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:57:37.550" endtime="20231122 01:57:37.551"/>
</kw>
<status status="PASS" starttime="20231122 01:57:37.535" endtime="20231122 01:57:37.551"/>
</kw>
<msg timestamp="20231122 01:57:37.551" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:57:37.535" endtime="20231122 01:57:37.551"/>
</kw>
<msg timestamp="20231122 01:57:37.551" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20231122 01:57:37.534" endtime="20231122 01:57:37.551"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231122 01:57:37.552" endtime="20231122 01:57:37.552"/>
</kw>
<status status="NOT RUN" starttime="20231122 01:57:37.551" endtime="20231122 01:57:37.552"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:57:37.552" endtime="20231122 01:57:37.553"/>
</kw>
<status status="PASS" starttime="20231122 01:57:37.552" endtime="20231122 01:57:37.553"/>
</branch>
<status status="PASS" starttime="20231122 01:57:37.551" endtime="20231122 01:57:37.553"/>
</if>
<status status="PASS" starttime="20231122 01:57:37.533" endtime="20231122 01:57:37.553"/>
</kw>
<status status="PASS" starttime="20231122 01:57:37.452" endtime="20231122 01:57:37.553"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231122 01:57:37.452" endtime="20231122 01:57:37.553"/>
</test>
<test id="s1-s3-s2-t8" name="Check Recon Namespace Summary Root" line="122">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/</arg>
<arg>ROOT</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:57:37.559" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:57:37.571" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:57:37.572" level="INFO">${output} = {"path":"","type":"ROOT","countStats":{"numVolume":3,"numBucket":2,"numDir":1,"numKey":1},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTim...</msg>
<status status="PASS" starttime="20231122 01:57:37.558" endtime="20231122 01:57:37.572"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:57:37.572" level="INFO">{"path":"","type":"ROOT","countStats":{"numVolume":3,"numBucket":2,"numDir":1,"numKey":1},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":0,"modificationTime":0,"acls":null},"status":"OK"}</msg>
<status status="PASS" starttime="20231122 01:57:37.572" endtime="20231122 01:57:37.573"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:57:37.573" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:57:37.573" endtime="20231122 01:57:37.573"/>
</kw>
<status status="PASS" starttime="20231122 01:57:37.557" endtime="20231122 01:57:37.573"/>
</kw>
<msg timestamp="20231122 01:57:37.573" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:57:37.557" endtime="20231122 01:57:37.573"/>
</kw>
<msg timestamp="20231122 01:57:37.573" level="INFO">${result} = {"path":"","type":"ROOT","countStats":{"numVolume":3,"numBucket":2,"numDir":1,"numKey":1},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTim...</msg>
<status status="PASS" starttime="20231122 01:57:37.556" endtime="20231122 01:57:37.573"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:57:37.574" endtime="20231122 01:57:37.574"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:57:37.574" endtime="20231122 01:57:37.574"/>
</kw>
<status status="PASS" starttime="20231122 01:57:37.556" endtime="20231122 01:57:37.574"/>
</kw>
<status status="PASS" starttime="20231122 01:57:37.555" endtime="20231122 01:57:37.574"/>
</kw>
<status status="PASS" starttime="20231122 01:57:37.555" endtime="20231122 01:57:37.575"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231122 01:57:37.554" endtime="20231122 01:57:37.575"/>
</test>
<test id="s1-s3-s2-t9" name="Check Recon Namespace Summary Volume" line="125">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}</arg>
<arg>VOLUME</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:57:37.580" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-nnvwj 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:57:37.591" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:57:37.591" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20231122 01:57:37.579" endtime="20231122 01:57:37.591"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:57:37.592" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20231122 01:57:37.591" endtime="20231122 01:57:37.592"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:57:37.593" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:57:37.592" endtime="20231122 01:57:37.593"/>
</kw>
<status status="PASS" starttime="20231122 01:57:37.578" endtime="20231122 01:57:37.593"/>
</kw>
<msg timestamp="20231122 01:57:37.593" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:57:37.578" endtime="20231122 01:57:37.593"/>
</kw>
<msg timestamp="20231122 01:57:37.593" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20231122 01:57:37.578" endtime="20231122 01:57:37.593"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20231122 01:57:37.594" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20231122 01:57:37.594" endtime="20231122 01:57:37.594"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231122 01:57:37.594" endtime="20231122 01:57:37.594"/>
</kw>
<status status="FAIL" starttime="20231122 01:57:37.577" endtime="20231122 01:57:37.595"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:57:47.599" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-nnvwj 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:57:47.611" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:57:47.611" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20231122 01:57:47.597" endtime="20231122 01:57:47.611"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:57:47.612" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20231122 01:57:47.611" endtime="20231122 01:57:47.612"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:57:47.612" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:57:47.612" endtime="20231122 01:57:47.612"/>
</kw>
<status status="PASS" starttime="20231122 01:57:47.597" endtime="20231122 01:57:47.612"/>
</kw>
<msg timestamp="20231122 01:57:47.612" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:57:47.596" endtime="20231122 01:57:47.613"/>
</kw>
<msg timestamp="20231122 01:57:47.613" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20231122 01:57:47.596" endtime="20231122 01:57:47.613"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20231122 01:57:47.613" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20231122 01:57:47.613" endtime="20231122 01:57:47.613"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231122 01:57:47.613" endtime="20231122 01:57:47.614"/>
</kw>
<status status="FAIL" starttime="20231122 01:57:47.595" endtime="20231122 01:57:47.614"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:57:57.618" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-nnvwj 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:57:57.630" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:57:57.630" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20231122 01:57:57.616" endtime="20231122 01:57:57.630"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:57:57.630" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20231122 01:57:57.630" endtime="20231122 01:57:57.631"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:57:57.631" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:57:57.631" endtime="20231122 01:57:57.631"/>
</kw>
<status status="PASS" starttime="20231122 01:57:57.616" endtime="20231122 01:57:57.631"/>
</kw>
<msg timestamp="20231122 01:57:57.631" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:57:57.615" endtime="20231122 01:57:57.631"/>
</kw>
<msg timestamp="20231122 01:57:57.632" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20231122 01:57:57.615" endtime="20231122 01:57:57.632"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20231122 01:57:57.632" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20231122 01:57:57.632" endtime="20231122 01:57:57.632"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231122 01:57:57.632" endtime="20231122 01:57:57.632"/>
</kw>
<status status="FAIL" starttime="20231122 01:57:57.614" endtime="20231122 01:57:57.632"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:58:07.637" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-nnvwj 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:58:07.649" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:58:07.649" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20231122 01:58:07.635" endtime="20231122 01:58:07.649"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:58:07.650" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20231122 01:58:07.650" endtime="20231122 01:58:07.650"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:58:07.651" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:58:07.651" endtime="20231122 01:58:07.651"/>
</kw>
<status status="PASS" starttime="20231122 01:58:07.635" endtime="20231122 01:58:07.651"/>
</kw>
<msg timestamp="20231122 01:58:07.651" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:58:07.634" endtime="20231122 01:58:07.651"/>
</kw>
<msg timestamp="20231122 01:58:07.652" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}</msg>
<status status="PASS" starttime="20231122 01:58:07.634" endtime="20231122 01:58:07.652"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20231122 01:58:07.652" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"PATH_NOT_FOUND"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20231122 01:58:07.652" endtime="20231122 01:58:07.652"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231122 01:58:07.652" endtime="20231122 01:58:07.652"/>
</kw>
<status status="FAIL" starttime="20231122 01:58:07.633" endtime="20231122 01:58:07.653"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:58:17.657" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-nnvwj 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:58:17.678" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:58:17.678" level="INFO">${output} = {"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":{},"name":"vol-nnvwj","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"c...</msg>
<status status="PASS" starttime="20231122 01:58:17.655" endtime="20231122 01:58:17.678"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:58:17.679" level="INFO">{"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":{},"name":"vol-nnvwj","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"creationTime":1700618243912,"modificationTime":1700618243912,"acls":[{"type":"USER","name":"hadoop","scope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","scope":"ACCESS","aclList":["ALL"]}],"admin":"hadoop","owner":"hadoop","volume":"vol-nnvwj"},"status":"OK"}</msg>
<status status="PASS" starttime="20231122 01:58:17.679" endtime="20231122 01:58:17.679"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:58:17.680" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:58:17.680" endtime="20231122 01:58:17.680"/>
</kw>
<status status="PASS" starttime="20231122 01:58:17.654" endtime="20231122 01:58:17.680"/>
</kw>
<msg timestamp="20231122 01:58:17.680" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:58:17.654" endtime="20231122 01:58:17.680"/>
</kw>
<msg timestamp="20231122 01:58:17.681" level="INFO">${result} = {"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":{},"name":"vol-nnvwj","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"c...</msg>
<status status="PASS" starttime="20231122 01:58:17.654" endtime="20231122 01:58:17.681"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:58:17.681" endtime="20231122 01:58:17.681"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:58:17.681" endtime="20231122 01:58:17.682"/>
</kw>
<status status="PASS" starttime="20231122 01:58:17.653" endtime="20231122 01:58:17.682"/>
</kw>
<status status="PASS" starttime="20231122 01:57:37.577" endtime="20231122 01:58:17.682"/>
</kw>
<status status="PASS" starttime="20231122 01:57:37.576" endtime="20231122 01:58:17.682"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231122 01:57:37.575" endtime="20231122 01:58:17.682"/>
</test>
<test id="s1-s3-s2-t10" name="Check Recon Namespace Summary Bucket" line="128">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}</arg>
<arg>BUCKET</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:58:17.688" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-nnvwj/buc-npgpd 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:58:17.708" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:58:17.708" level="INFO">${output} = {"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-npgpd","quotaInBytes":-1,"quotaInNamespa...</msg>
<status status="PASS" starttime="20231122 01:58:17.686" endtime="20231122 01:58:17.708"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:58:17.709" level="INFO">{"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-npgpd","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":4,"creationTime":1700618247166,"modificationTime":1700618247166,"acls":[{"type":"USER","name":"hadoop","scope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","scope":"ACCESS","aclList":["ALL"]}],"volumeName":"vol-nnvwj","storageType":"DISK","versioning":false,"usedBytes":30318,"encryptionInfo":null,"replicationConfigInfo":null,"sourceVolume":null,"sourceBucket":null,"bucketLayout":"FILE_SYSTEM_OPTIMIZED","owner":"hadoop"},"status":"OK"}</msg>
<status status="PASS" starttime="20231122 01:58:17.708" endtime="20231122 01:58:17.709"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:58:17.709" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:58:17.709" endtime="20231122 01:58:17.710"/>
</kw>
<status status="PASS" starttime="20231122 01:58:17.686" endtime="20231122 01:58:17.710"/>
</kw>
<msg timestamp="20231122 01:58:17.710" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:58:17.686" endtime="20231122 01:58:17.710"/>
</kw>
<msg timestamp="20231122 01:58:17.710" level="INFO">${result} = {"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-npgpd","quotaInBytes":-1,"quotaInNamespa...</msg>
<status status="PASS" starttime="20231122 01:58:17.685" endtime="20231122 01:58:17.710"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:58:17.710" endtime="20231122 01:58:17.711"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:58:17.711" endtime="20231122 01:58:17.711"/>
</kw>
<status status="PASS" starttime="20231122 01:58:17.684" endtime="20231122 01:58:17.711"/>
</kw>
<status status="PASS" starttime="20231122 01:58:17.684" endtime="20231122 01:58:17.711"/>
</kw>
<status status="PASS" starttime="20231122 01:58:17.683" endtime="20231122 01:58:17.711"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231122 01:58:17.683" endtime="20231122 01:58:17.711"/>
</test>
<test id="s1-s3-s2-t11" name="Check Recon Namespace Summary Key" line="131">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/file1</arg>
<arg>KEY</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:58:17.717" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-nnvwj/buc-npgpd/file1 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:58:17.749" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:58:17.749" level="INFO">${output} = {"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":true,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespace...</msg>
<status status="PASS" starttime="20231122 01:58:17.715" endtime="20231122 01:58:17.749"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:58:17.750" level="INFO">{"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":true,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":1700618250306,"modificationTime":1700618251760,"acls":[{"type":"USER","name":"hadoop","scope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","scope":"ACCESS","aclList":["ALL"]}],"volumeName":"vol-nnvwj","bucketName":"buc-npgpd","keyName":"file1","dataSize":4068,"keyLocationVersions":[{"version":0,"locationVersionMap":{"0":[{"blockID":{"containerBlockID":{"containerID":3,"localID":111677748019200012},"blockCommitSequenceId":6,"containerID":3,"localID":111677748019200012},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"blockCommitSequenceId":6,"containerID":3,"localID":111677748019200012}]},"locationList":[{"blockID":{"containerBlockID":{"containerID":3,"localID":111677748019200012},"blockCommitSequenceId":6,"containerID":3,"localID":111677748019200012},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"blockCommitSequenceId":6,"containerID":3,"localID":111677748019200012}],"blocksLatestVersionOnly":[{"blockID":{"containerBlockID":{"containerID":3,"localID":111677748019200012},"blockCommitSequenceId":6,"containerID":3,"localID":111677748019200012},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"blockCommitSequenceId":6,"containerID":3,"localID":111677748019200012}],"locationLists":[[{"blockID":{"containerBlockID":{"containerID":3,"localID":111677748019200012},"blockCommitSequenceId":6,"containerID":3,"localID":111677748019200012},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"blockCommitSequenceId":6,"containerID":3,"localID":111677748019200012}]],"locationListCount":1,"multipartKey":false}],"replicationConfig":{"replicationFactor":"THREE","requiredNodes":3,"replicationType":"RATIS"},"encInfo":null},"status":"OK"}</msg>
<status status="PASS" starttime="20231122 01:58:17.749" endtime="20231122 01:58:17.750"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:58:17.751" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:58:17.750" endtime="20231122 01:58:17.751"/>
</kw>
<status status="PASS" starttime="20231122 01:58:17.715" endtime="20231122 01:58:17.751"/>
</kw>
<msg timestamp="20231122 01:58:17.751" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:58:17.715" endtime="20231122 01:58:17.751"/>
</kw>
<msg timestamp="20231122 01:58:17.751" level="INFO">${result} = {"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":true,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespace...</msg>
<status status="PASS" starttime="20231122 01:58:17.714" endtime="20231122 01:58:17.751"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:58:17.751" endtime="20231122 01:58:17.752"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:58:17.752" endtime="20231122 01:58:17.752"/>
</kw>
<status status="PASS" starttime="20231122 01:58:17.714" endtime="20231122 01:58:17.752"/>
</kw>
<status status="PASS" starttime="20231122 01:58:17.713" endtime="20231122 01:58:17.752"/>
</kw>
<status status="PASS" starttime="20231122 01:58:17.713" endtime="20231122 01:58:17.752"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231122 01:58:17.712" endtime="20231122 01:58:17.752"/>
</test>
<test id="s1-s3-s2-t12" name="Check Recon Namespace Summary Directory" line="134">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET_LAYOUT}' == 'LEGACY'</arg>
<arg>Wait For Summary</arg>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2/</arg>
<arg>DIRECTORY</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231122 01:58:17.753" endtime="20231122 01:58:17.754"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET_LAYOUT}' == 'FILE_SYSTEM_OPTIMIZED'</arg>
<arg>Wait For Summary</arg>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2</arg>
<arg>DIRECTORY</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2</arg>
<arg>DIRECTORY</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:58:17.759" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-nnvwj/buc-npgpd/dir1/dir2 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:58:17.775" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:58:17.775" level="INFO">${output} = {"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"dir2","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"crea...</msg>
<status status="PASS" starttime="20231122 01:58:17.758" endtime="20231122 01:58:17.775"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:58:17.776" level="INFO">{"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"dir2","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":1700618255125,"modificationTime":1700618255125,"acls":[{"type":"USER","name":"hadoop","scope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","scope":"ACCESS","aclList":["ALL"]}]},"status":"OK"}</msg>
<status status="PASS" starttime="20231122 01:58:17.776" endtime="20231122 01:58:17.776"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:58:17.777" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:58:17.776" endtime="20231122 01:58:17.777"/>
</kw>
<status status="PASS" starttime="20231122 01:58:17.757" endtime="20231122 01:58:17.777"/>
</kw>
<msg timestamp="20231122 01:58:17.777" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:58:17.757" endtime="20231122 01:58:17.777"/>
</kw>
<msg timestamp="20231122 01:58:17.777" level="INFO">${result} = {"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"dir2","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"crea...</msg>
<status status="PASS" starttime="20231122 01:58:17.755" endtime="20231122 01:58:17.777"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:58:17.777" endtime="20231122 01:58:17.778"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:58:17.778" endtime="20231122 01:58:17.778"/>
</kw>
<status status="PASS" starttime="20231122 01:58:17.755" endtime="20231122 01:58:17.778"/>
</kw>
<status status="PASS" starttime="20231122 01:58:17.755" endtime="20231122 01:58:17.778"/>
</kw>
<status status="PASS" starttime="20231122 01:58:17.754" endtime="20231122 01:58:17.778"/>
</kw>
<status status="PASS" starttime="20231122 01:58:17.754" endtime="20231122 01:58:17.778"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231122 01:58:17.753" endtime="20231122 01:58:17.779"/>
</test>
<test id="s1-s3-s2-t13" name="Check Recon Namespace Disk Usage" line="138">
<kw name="Wait For Summary">
<arg>${DISK_USAGE_URL}?path=/${VOLUME}/${BUCKET}&amp;files=true&amp;replica=true</arg>
<arg>\"sizeWithReplica\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:58:17.784" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/du?path=/vol-nnvwj/buc-npgpd&amp;files=true&amp;replica=true 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:58:17.796" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:58:17.796" level="INFO">${output} = {"status":"OK","path":"/vol-nnvwj/buc-npgpd","size":10106,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-nnvwj/buc-npgpd/dir1","size":6038,"sizeWithReplica":-1,"isKey":fal...</msg>
<status status="PASS" starttime="20231122 01:58:17.782" endtime="20231122 01:58:17.796"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:58:17.797" level="INFO">{"status":"OK","path":"/vol-nnvwj/buc-npgpd","size":10106,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-nnvwj/buc-npgpd/dir1","size":6038,"sizeWithReplica":-1,"isKey":false}],"sizeDirectKey":4068}</msg>
<status status="PASS" starttime="20231122 01:58:17.796" endtime="20231122 01:58:17.797"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:58:17.797" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:58:17.797" endtime="20231122 01:58:17.797"/>
</kw>
<status status="PASS" starttime="20231122 01:58:17.782" endtime="20231122 01:58:17.797"/>
</kw>
<msg timestamp="20231122 01:58:17.797" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:58:17.781" endtime="20231122 01:58:17.797"/>
</kw>
<msg timestamp="20231122 01:58:17.798" level="INFO">${result} = {"status":"OK","path":"/vol-nnvwj/buc-npgpd","size":10106,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-nnvwj/buc-npgpd/dir1","size":6038,"sizeWithReplica":-1,"isKey":fal...</msg>
<status status="PASS" starttime="20231122 01:58:17.781" endtime="20231122 01:58:17.798"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:58:17.798" endtime="20231122 01:58:17.798"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:58:17.798" endtime="20231122 01:58:17.798"/>
</kw>
<status status="PASS" starttime="20231122 01:58:17.781" endtime="20231122 01:58:17.799"/>
</kw>
<status status="PASS" starttime="20231122 01:58:17.780" endtime="20231122 01:58:17.799"/>
</kw>
<status status="PASS" starttime="20231122 01:58:17.780" endtime="20231122 01:58:17.799"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231122 01:58:17.779" endtime="20231122 01:58:17.799"/>
</test>
<test id="s1-s3-s2-t14" name="Check Recon Namespace Volume Quota Usage" line="141">
<kw name="Wait For Summary">
<arg>${QUOTA_USAGE_URL}?path=/${VOLUME}</arg>
<arg>\"used\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:58:17.804" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/quota?path=/vol-nnvwj 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:58:17.816" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:58:17.816" level="INFO">${output} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20231122 01:58:17.802" endtime="20231122 01:58:17.816"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:58:17.817" level="INFO">{"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20231122 01:58:17.816" endtime="20231122 01:58:17.817"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:58:17.817" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:58:17.817" endtime="20231122 01:58:17.818"/>
</kw>
<status status="PASS" starttime="20231122 01:58:17.802" endtime="20231122 01:58:17.818"/>
</kw>
<msg timestamp="20231122 01:58:17.818" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:58:17.802" endtime="20231122 01:58:17.818"/>
</kw>
<msg timestamp="20231122 01:58:17.818" level="INFO">${result} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20231122 01:58:17.801" endtime="20231122 01:58:17.818"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:58:17.818" endtime="20231122 01:58:17.818"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:58:17.819" endtime="20231122 01:58:17.819"/>
</kw>
<status status="PASS" starttime="20231122 01:58:17.801" endtime="20231122 01:58:17.819"/>
</kw>
<status status="PASS" starttime="20231122 01:58:17.800" endtime="20231122 01:58:17.819"/>
</kw>
<status status="PASS" starttime="20231122 01:58:17.800" endtime="20231122 01:58:17.819"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231122 01:58:17.799" endtime="20231122 01:58:17.819"/>
</test>
<test id="s1-s3-s2-t15" name="Check Recon Namespace Bucket Quota Usage" line="144">
<kw name="Wait For Summary">
<arg>${QUOTA_USAGE_URL}?path=/${VOLUME}/${BUCKET}</arg>
<arg>\"used\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:58:17.824" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/quota?path=/vol-nnvwj/buc-npgpd 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:58:17.836" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:58:17.837" level="INFO">${output} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20231122 01:58:17.823" endtime="20231122 01:58:17.837"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:58:17.838" level="INFO">{"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20231122 01:58:17.837" endtime="20231122 01:58:17.838"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:58:17.838" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:58:17.838" endtime="20231122 01:58:17.838"/>
</kw>
<status status="PASS" starttime="20231122 01:58:17.822" endtime="20231122 01:58:17.838"/>
</kw>
<msg timestamp="20231122 01:58:17.839" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:58:17.822" endtime="20231122 01:58:17.839"/>
</kw>
<msg timestamp="20231122 01:58:17.839" level="INFO">${result} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20231122 01:58:17.822" endtime="20231122 01:58:17.839"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:58:17.839" endtime="20231122 01:58:17.839"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:58:17.839" endtime="20231122 01:58:17.840"/>
</kw>
<status status="PASS" starttime="20231122 01:58:17.821" endtime="20231122 01:58:17.840"/>
</kw>
<status status="PASS" starttime="20231122 01:58:17.821" endtime="20231122 01:58:17.840"/>
</kw>
<status status="PASS" starttime="20231122 01:58:17.820" endtime="20231122 01:58:17.840"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231122 01:58:17.820" endtime="20231122 01:58:17.840"/>
</test>
<test id="s1-s3-s2-t16" name="Check Recon Namespace File Size Distribution Root" line="147">
<kw name="Wait For Summary">
<arg>${FILE_SIZE_DIST_URL}?path=/</arg>
<arg>\"dist\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:58:17.845" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:58:17.857" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:58:17.857" level="INFO">${output} = {"dist":[0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20231122 01:58:17.843" endtime="20231122 01:58:17.857"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:58:17.858" level="INFO">{"dist":[0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20231122 01:58:17.857" endtime="20231122 01:58:17.858"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:58:17.859" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:58:17.858" endtime="20231122 01:58:17.859"/>
</kw>
<status status="PASS" starttime="20231122 01:58:17.843" endtime="20231122 01:58:17.859"/>
</kw>
<msg timestamp="20231122 01:58:17.859" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:58:17.843" endtime="20231122 01:58:17.859"/>
</kw>
<msg timestamp="20231122 01:58:17.859" level="INFO">${result} = {"dist":[0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20231122 01:58:17.842" endtime="20231122 01:58:17.859"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:58:17.859" endtime="20231122 01:58:17.860"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:58:17.860" endtime="20231122 01:58:17.861"/>
</kw>
<status status="PASS" starttime="20231122 01:58:17.842" endtime="20231122 01:58:17.861"/>
</kw>
<status status="PASS" starttime="20231122 01:58:17.842" endtime="20231122 01:58:17.861"/>
</kw>
<status status="PASS" starttime="20231122 01:58:17.841" endtime="20231122 01:58:17.861"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231122 01:58:17.840" endtime="20231122 01:58:17.861"/>
</test>
<doc>Smoke test for Recon Namespace Summary Endpoint for FILE_SYSTEM_OPTIMIZED buckets.</doc>
<status status="PASS" starttime="20231122 01:57:20.883" endtime="20231122 01:58:17.862"/>
</suite>
<status status="PASS" starttime="20231122 01:56:06.299" endtime="20231122 01:58:17.864"/>
</suite>
<suite id="s1-s4" name="Loaddata" source="/opt/hadoop/smoketest/topology/loaddata.robot">
<test id="s1-s4-t1" name="Create a volume, bucket and key" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create topvol1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:58:20.072" level="INFO">Running command 'ozone sh volume create topvol1 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:58:23.579" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:58:23.579" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20231122 01:58:20.070" endtime="20231122 01:58:23.579"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:58:23.580" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20231122 01:58:23.579" endtime="20231122 01:58:23.580"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:58:23.580" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:58:23.580" endtime="20231122 01:58:23.581"/>
</kw>
<status status="PASS" starttime="20231122 01:58:20.069" endtime="20231122 01:58:23.581"/>
</kw>
<msg timestamp="20231122 01:58:23.581" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:58:20.069" endtime="20231122 01:58:23.581"/>
</kw>
<msg timestamp="20231122 01:58:23.581" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20231122 01:58:20.069" endtime="20231122 01:58:23.581"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:58:23.581" endtime="20231122 01:58:23.582"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /topvol1/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:58:23.584" level="INFO">Running command 'ozone sh bucket create /topvol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:58:27.268" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:58:27.268" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20231122 01:58:23.583" endtime="20231122 01:58:27.268"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:58:27.269" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20231122 01:58:27.268" endtime="20231122 01:58:27.269"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:58:27.269" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:58:27.269" endtime="20231122 01:58:27.269"/>
</kw>
<status status="PASS" starttime="20231122 01:58:23.582" endtime="20231122 01:58:27.270"/>
</kw>
<msg timestamp="20231122 01:58:27.270" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:58:23.582" endtime="20231122 01:58:27.270"/>
</kw>
<msg timestamp="20231122 01:58:27.270" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20231122 01:58:23.582" endtime="20231122 01:58:27.270"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:58:27.270" endtime="20231122 01:58:27.270"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:58:27.273" level="INFO">Running command 'ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:58:32.358" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:58:32.358" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20231122 01:58:27.271" endtime="20231122 01:58:32.358"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:58:32.359" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20231122 01:58:32.358" endtime="20231122 01:58:32.359"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:58:32.359" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:58:32.359" endtime="20231122 01:58:32.359"/>
</kw>
<status status="PASS" starttime="20231122 01:58:27.271" endtime="20231122 01:58:32.360"/>
</kw>
<msg timestamp="20231122 01:58:32.360" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:58:27.271" endtime="20231122 01:58:32.360"/>
</kw>
<msg timestamp="20231122 01:58:32.360" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20231122 01:58:27.270" endtime="20231122 01:58:32.360"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:58:32.360" endtime="20231122 01:58:32.360"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231122 01:58:20.068" endtime="20231122 01:58:32.361"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20231122 01:58:20.025" endtime="20231122 01:58:32.361"/>
</suite>
<suite id="s1-s5" name="readdata-first-half" source="/opt/hadoop/smoketest/topology/readdata.robot">
<test id="s1-s5-t1" name="Read data from previously created key" line="27">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231122 01:58:38.662" level="INFO">${random} = 53274</msg>
<status status="PASS" starttime="20231122 01:58:38.662" endtime="20231122 01:58:38.662"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:58:38.665" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-53274 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:59:31.515" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:59:31.515" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20231122 01:58:38.663" endtime="20231122 01:59:31.515"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:59:31.516" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20231122 01:59:31.515" endtime="20231122 01:59:31.516"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:59:31.517" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:59:31.516" endtime="20231122 01:59:31.517"/>
</kw>
<status status="PASS" starttime="20231122 01:58:38.663" endtime="20231122 01:59:31.517"/>
</kw>
<msg timestamp="20231122 01:59:31.517" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:58:38.663" endtime="20231122 01:59:31.517"/>
</kw>
<msg timestamp="20231122 01:59:31.517" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20231122 01:58:38.662" endtime="20231122 01:59:31.517"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:59:31.518" endtime="20231122 01:59:31.518"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231122 01:58:38.661" endtime="20231122 01:59:31.518"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20231122 01:58:38.618" endtime="20231122 01:59:31.519"/>
</suite>
<suite id="s1-s6" name="readdata-second-half" source="/opt/hadoop/smoketest/topology/readdata.robot">
<test id="s1-s6-t1" name="Read data from previously created key" line="27">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231122 01:59:59.045" level="INFO">${random} = 94715</msg>
<status status="PASS" starttime="20231122 01:59:59.045" endtime="20231122 01:59:59.045"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:59:59.048" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-94715 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 02:00:04.118" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 02:00:04.118" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20231122 01:59:59.047" endtime="20231122 02:00:04.118"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 02:00:04.119" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20231122 02:00:04.119" endtime="20231122 02:00:04.119"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 02:00:04.120" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 02:00:04.119" endtime="20231122 02:00:04.120"/>
</kw>
<status status="PASS" starttime="20231122 01:59:59.046" endtime="20231122 02:00:04.120"/>
</kw>
<msg timestamp="20231122 02:00:04.120" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:59:59.046" endtime="20231122 02:00:04.120"/>
</kw>
<msg timestamp="20231122 02:00:04.120" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" starttime="20231122 01:59:59.046" endtime="20231122 02:00:04.120"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 02:00:04.120" endtime="20231122 02:00:04.121"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231122 01:59:59.044" endtime="20231122 02:00:04.121"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20231122 01:59:59.001" endtime="20231122 02:00:04.122"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="236656"/>
</suite>
<statistics>
<total>
<stat pass="32" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="32" fail="0" skip="0" id="s1" name="ozone-topology">ozone-topology</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1" name="Basic">ozone-topology.Basic</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2" name="Cli">ozone-topology.Cli</stat>
<stat pass="23" fail="0" skip="0" id="s1-s3" name="Recon">ozone-topology.Recon</stat>
<stat pass="7" fail="0" skip="0" id="s1-s3-s1" name="Recon-Api">ozone-topology.Recon.Recon-Api</stat>
<stat pass="16" fail="0" skip="0" id="s1-s3-s2" name="Recon-Nssummary">ozone-topology.Recon.Recon-Nssummary</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Loaddata">ozone-topology.Loaddata</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5" name="readdata-first-half">ozone-topology.readdata-first-half</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6" name="readdata-second-half">ozone-topology.readdata-second-half</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
