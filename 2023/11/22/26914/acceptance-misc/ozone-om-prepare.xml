<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20231122 01:54:24.811" rpa="false" schemaversion="4">
<suite id="s1" name="ozone-om-prepare">
<suite id="s1-s1" name="Om-Prepare" source="/opt/hadoop/smoketest/omha/om-prepare.robot">
<kw name="Create Specific OM data for prepare" type="SETUP">
<kw name="Freon OCKG" library="freon">
<arg>prefix=om-prepare</arg>
<arg>n=100</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:50:15.464" level="INFO">Running command 'ozone freon ockg --om-service-id=omservice -t 1 -n100 -p om-prepare  2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:50:26.833" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:50:26.833" level="INFO">${output} = 2023-11-22 01:50:17,290 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-11-22 01:50:17,414 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231122 01:50:15.463" endtime="20231122 01:50:26.833"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:50:26.834" level="INFO">2023-11-22 01:50:17,290 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-11-22 01:50:17,414 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-11-22 01:50:17,415 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-11-22 01:50:17,532 [main] INFO freon.BaseFreonGenerator: Executing test with prefix om-prepare and number-of-tests 100
2023-11-22 01:50:17,597 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-11-22 01:50:18,197 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2023-11-22 01:50:18,374 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false, Replication Type set to server-side default replication type, Namespace Quota set to -1, Space Quota set to -1 
2023-11-22 01:50:18,627 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-11-22 01:50:19,259 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-11-22 01:50:19,555 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-11-22 01:50:19,628 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-11-22 01:50:20,628 [Thread-3] INFO freon.ProgressBar: Progress: 2.00 % (2 out of 100)
2023-11-22 01:50:21,629 [Thread-3] INFO freon.ProgressBar: Progress: 16.00 % (16 out of 100)
2023-11-22 01:50:22,630 [Thread-3] INFO freon.ProgressBar: Progress: 34.00 % (34 out of 100)
2023-11-22 01:50:23,631 [Thread-3] INFO freon.ProgressBar: Progress: 54.00 % (54 out of 100)
2023-11-22 01:50:24,631 [Thread-3] INFO freon.ProgressBar: Progress: 78.00 % (78 out of 100)
2023-11-22 01:50:25,632 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2023-11-22 01:50:26,492 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=100, min=29.171311, max=1765.344812, mean=70.04826711410315, stddev=169.7111410847002, median=46.747761, p75=57.083766, p95=89.411729, p98=247.626358, p99=266.488788, p999=1765.344812, mean_rate=12.430018123203837, m1=10.0, m5=10.0, m15=10.0, rate_unit=events/second, duration_unit=milliseconds
2023-11-22 01:50:26,492 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 9
2023-11-22 01:50:26,493 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-11-22 01:50:26,493 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20231122 01:50:26.833" endtime="20231122 01:50:26.834"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:50:26.834" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:50:26.834" endtime="20231122 01:50:26.834"/>
</kw>
<status status="PASS" starttime="20231122 01:50:15.462" endtime="20231122 01:50:26.834"/>
</kw>
<msg timestamp="20231122 01:50:26.834" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:50:15.462" endtime="20231122 01:50:26.834"/>
</kw>
<msg timestamp="20231122 01:50:26.835" level="INFO">${result} = 2023-11-22 01:50:17,290 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-11-22 01:50:17,414 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231122 01:50:15.462" endtime="20231122 01:50:26.835"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:50:26.835" endtime="20231122 01:50:26.835"/>
</kw>
<status status="PASS" starttime="20231122 01:50:15.461" endtime="20231122 01:50:26.835"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231122 01:50:26.836" level="INFO">${random} = 09241</msg>
<status status="PASS" starttime="20231122 01:50:26.835" endtime="20231122 01:50:26.836"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231122 01:50:26.837" level="INFO">${volume_name} = 09241-volume-for-prepare</msg>
<status status="PASS" starttime="20231122 01:50:26.836" endtime="20231122 01:50:26.837"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${bucket_name}</arg>
<arg>${random}-bucket-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231122 01:50:26.838" level="INFO">${bucket_name} = 09241-bucket-for-prepare</msg>
<status status="PASS" starttime="20231122 01:50:26.837" endtime="20231122 01:50:26.838"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${volume_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:50:26.840" level="INFO">Running command 'ozone sh volume create /09241-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:50:28.959" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:50:28.959" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231122 01:50:26.839" endtime="20231122 01:50:28.959"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:50:28.959" level="INFO"/>
<status status="PASS" starttime="20231122 01:50:28.959" endtime="20231122 01:50:28.959"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:50:28.960" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:50:28.960" endtime="20231122 01:50:28.960"/>
</kw>
<status status="PASS" starttime="20231122 01:50:26.838" endtime="20231122 01:50:28.960"/>
</kw>
<msg timestamp="20231122 01:50:28.960" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:50:26.838" endtime="20231122 01:50:28.960"/>
</kw>
<status status="PASS" starttime="20231122 01:50:26.838" endtime="20231122 01:50:28.960"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume_name}/${bucket_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:50:28.963" level="INFO">Running command 'ozone sh bucket create /09241-volume-for-prepare/09241-bucket-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:50:31.114" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:50:31.114" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231122 01:50:28.961" endtime="20231122 01:50:31.114"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:50:31.115" level="INFO"/>
<status status="PASS" starttime="20231122 01:50:31.114" endtime="20231122 01:50:31.115"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:50:31.115" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:50:31.115" endtime="20231122 01:50:31.115"/>
</kw>
<status status="PASS" starttime="20231122 01:50:28.961" endtime="20231122 01:50:31.115"/>
</kw>
<msg timestamp="20231122 01:50:31.115" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:50:28.961" endtime="20231122 01:50:31.115"/>
</kw>
<status status="PASS" starttime="20231122 01:50:28.960" endtime="20231122 01:50:31.115"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:50:31.118" level="INFO">Running command 'ozone sh key put /09241-volume-for-prepare/09241-bucket-for-prepare/prepare-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:50:34.706" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:50:34.707" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231122 01:50:31.117" endtime="20231122 01:50:34.707"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:50:34.707" level="INFO"/>
<status status="PASS" starttime="20231122 01:50:34.707" endtime="20231122 01:50:34.707"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:50:34.708" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:50:34.707" endtime="20231122 01:50:34.708"/>
</kw>
<status status="PASS" starttime="20231122 01:50:31.116" endtime="20231122 01:50:34.708"/>
</kw>
<msg timestamp="20231122 01:50:34.708" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:50:31.116" endtime="20231122 01:50:34.708"/>
</kw>
<status status="PASS" starttime="20231122 01:50:31.116" endtime="20231122 01:50:34.708"/>
</kw>
<status status="PASS" starttime="20231122 01:50:15.460" endtime="20231122 01:50:34.708"/>
</kw>
<test id="s1-s1-t1" name="Prepare Ozone Manager" line="39">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231122 01:50:34.709" endtime="20231122 01:50:34.709"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id=omservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:50:34.712" level="INFO">Running command 'ozone admin om prepare -id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:50:42.045" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:50:42.045" level="INFO">${output} = Ozone Manager Prepare Request successfully returned with Transaction Id : [413].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20231122 01:50:34.711" endtime="20231122 01:50:42.045"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:50:42.046" level="INFO">Ozone Manager Prepare Request successfully returned with Transaction Id : [413].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [413]
OM : [om3], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [413]
OM : [om2], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [413]

OM Preparation successful! 
All OMs are prepared
No new write requests will be allowed until preparation is cancelled or upgrade/downgrade is done.</msg>
<status status="PASS" starttime="20231122 01:50:42.046" endtime="20231122 01:50:42.046"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:50:42.047" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:50:42.046" endtime="20231122 01:50:42.047"/>
</kw>
<status status="PASS" starttime="20231122 01:50:34.710" endtime="20231122 01:50:42.047"/>
</kw>
<msg timestamp="20231122 01:50:42.047" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:50:34.710" endtime="20231122 01:50:42.047"/>
</kw>
<msg timestamp="20231122 01:50:42.047" level="INFO">${result} = Ozone Manager Prepare Request successfully returned with Transaction Id : [413].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20231122 01:50:34.710" endtime="20231122 01:50:42.047"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:50:42.048" endtime="20231122 01:50:42.048"/>
</kw>
<status status="PASS" starttime="20231122 01:50:42.047" endtime="20231122 01:50:42.048"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231122 01:50:34.709" endtime="20231122 01:50:42.048"/>
</test>
<test id="s1-s1-t2" name="Checks if the expected data is present in OM" line="43">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231122 01:50:42.049" endtime="20231122 01:50:42.050"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:50:42.052" level="INFO">Running command 'ozone sh key info /09241-volume-for-prepare/09241-bucket-for-prepare/prepare-key 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:50:44.321" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:50:44.322" level="INFO">${output} = {
  "volumeName" : "09241-volume-for-prepare",
  "bucketName" : "09241-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17289,
  "creationTime" : "2023-11-22T01:50:33.165Z",
  "modificati...</msg>
<status status="PASS" starttime="20231122 01:50:42.051" endtime="20231122 01:50:44.322"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:50:44.322" level="INFO">{
  "volumeName" : "09241-volume-for-prepare",
  "bucketName" : "09241-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17289,
  "creationTime" : "2023-11-22T01:50:33.165Z",
  "modificationTime" : "2023-11-22T01:50:34.359Z",
  "replicationConfig" : {
    "replicationFactor" : "ONE",
    "requiredNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "ozoneKeyLocations" : [ {
    "containerID" : 6,
    "localID" : 111677748019200101,
    "length" : 17289,
    "offset" : 0,
    "keyOffset" : 0
  } ],
  "file" : true
}</msg>
<status status="PASS" starttime="20231122 01:50:44.322" endtime="20231122 01:50:44.322"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:50:44.323" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:50:44.323" endtime="20231122 01:50:44.323"/>
</kw>
<status status="PASS" starttime="20231122 01:50:42.050" endtime="20231122 01:50:44.323"/>
</kw>
<msg timestamp="20231122 01:50:44.323" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:50:42.050" endtime="20231122 01:50:44.323"/>
</kw>
<msg timestamp="20231122 01:50:44.323" level="INFO">${result} = {
  "volumeName" : "09241-volume-for-prepare",
  "bucketName" : "09241-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17289,
  "creationTime" : "2023-11-22T01:50:33.165Z",
  "modificati...</msg>
<status status="PASS" starttime="20231122 01:50:42.050" endtime="20231122 01:50:44.323"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"name\" : \"prepare-key\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:50:44.323" endtime="20231122 01:50:44.324"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231122 01:50:42.049" endtime="20231122 01:50:44.324"/>
</test>
<test id="s1-s1-t3" name="Test write operation fails" line="47">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231122 01:50:44.325" endtime="20231122 01:50:44.325"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key2 /opt/hadoop/NOTICE.txt</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:50:44.327" level="INFO">Running command 'ozone sh key put /09241-volume-for-prepare/09241-bucket-for-prepare/prepare-key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:50:46.469" level="INFO">${rc} = 255</msg>
<msg timestamp="20231122 01:50:46.469" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20231122 01:50:44.326" endtime="20231122 01:50:46.469"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:50:46.470" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20231122 01:50:46.470" endtime="20231122 01:50:46.470"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:50:46.471" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:50:46.470" endtime="20231122 01:50:46.471"/>
</kw>
<msg timestamp="20231122 01:50:46.471" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20231122 01:50:44.325" endtime="20231122 01:50:46.471"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:50:46.471" endtime="20231122 01:50:46.471"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key2</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:50:46.473" level="INFO">Running command 'ozone sh key info /09241-volume-for-prepare/09241-bucket-for-prepare/prepare-key2 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:50:48.518" level="INFO">${rc} = 255</msg>
<msg timestamp="20231122 01:50:48.518" level="INFO">${output} = KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20231122 01:50:46.472" endtime="20231122 01:50:48.518"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:50:48.519" level="INFO">KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20231122 01:50:48.519" endtime="20231122 01:50:48.519"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:50:48.520" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:50:48.519" endtime="20231122 01:50:48.520"/>
</kw>
<status status="PASS" starttime="20231122 01:50:46.472" endtime="20231122 01:50:48.520"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231122 01:50:44.324" endtime="20231122 01:50:48.520"/>
</test>
<doc>Smoke test to test preparing OMs in an OM HA cluster.</doc>
<status status="PASS" starttime="20231122 01:50:15.403" endtime="20231122 01:50:48.521"/>
</suite>
<suite id="s1-s2" name="Om-Cancel-Prepare" source="/opt/hadoop/smoketest/omha/om-cancel-prepare.robot">
<kw name="Generate volume and bucket names" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231122 01:50:50.390" level="INFO">${random} = 19839</msg>
<status status="PASS" starttime="20231122 01:50:50.390" endtime="20231122 01:50:50.390"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-cancel</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231122 01:50:50.392" level="INFO">${volume_name} = 19839-volume-for-cancel</msg>
<status status="PASS" starttime="20231122 01:50:50.390" endtime="20231122 01:50:50.392"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${bucket_name}</arg>
<arg>${random}-bucket-for-cancel</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231122 01:50:50.393" level="INFO">${bucket_name} = 19839-bucket-for-cancel</msg>
<status status="PASS" starttime="20231122 01:50:50.392" endtime="20231122 01:50:50.393"/>
</kw>
<status status="PASS" starttime="20231122 01:50:50.390" endtime="20231122 01:50:50.393"/>
</kw>
<test id="s1-s2-t1" name="Cancel Ozone Manager Prepare" line="33">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231122 01:50:50.393" endtime="20231122 01:50:50.394"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om cancelprepare -id=omservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:50:50.396" level="INFO">Running command 'ozone admin om cancelprepare -id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:50:52.695" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:50:52.695" level="INFO">${output} = Cancel prepare succeeded, cluster can now accept write requests.</msg>
<status status="PASS" starttime="20231122 01:50:50.395" endtime="20231122 01:50:52.695"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:50:52.696" level="INFO">Cancel prepare succeeded, cluster can now accept write requests.</msg>
<status status="PASS" starttime="20231122 01:50:52.695" endtime="20231122 01:50:52.696"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:50:52.696" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:50:52.696" endtime="20231122 01:50:52.696"/>
</kw>
<status status="PASS" starttime="20231122 01:50:50.394" endtime="20231122 01:50:52.696"/>
</kw>
<msg timestamp="20231122 01:50:52.696" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:50:50.394" endtime="20231122 01:50:52.696"/>
</kw>
<msg timestamp="20231122 01:50:52.697" level="INFO">${result} = Cancel prepare succeeded, cluster can now accept write requests.</msg>
<status status="PASS" starttime="20231122 01:50:50.394" endtime="20231122 01:50:52.697"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>5sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Cancel prepare succeeded</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Cancel prepare succeeded</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:50:52.697" endtime="20231122 01:50:52.697"/>
</kw>
<status status="PASS" starttime="20231122 01:50:52.697" endtime="20231122 01:50:52.697"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231122 01:50:50.393" endtime="20231122 01:50:52.698"/>
</test>
<test id="s1-s2-t2" name="Test write operations" line="37">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231122 01:50:52.699" endtime="20231122 01:50:52.699"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${volume_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:50:52.701" level="INFO">Running command 'ozone sh volume create /19839-volume-for-cancel 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:50:54.780" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:50:54.780" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231122 01:50:52.700" endtime="20231122 01:50:54.780"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:50:54.781" level="INFO"/>
<status status="PASS" starttime="20231122 01:50:54.780" endtime="20231122 01:50:54.781"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:50:54.781" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:50:54.781" endtime="20231122 01:50:54.781"/>
</kw>
<status status="PASS" starttime="20231122 01:50:52.700" endtime="20231122 01:50:54.781"/>
</kw>
<msg timestamp="20231122 01:50:54.782" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:50:52.700" endtime="20231122 01:50:54.782"/>
</kw>
<status status="PASS" starttime="20231122 01:50:52.699" endtime="20231122 01:50:54.782"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume_name}/${bucket_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:50:54.784" level="INFO">Running command 'ozone sh bucket create /19839-volume-for-cancel/19839-bucket-for-cancel 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:50:56.910" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:50:56.911" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231122 01:50:54.783" endtime="20231122 01:50:56.911"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:50:56.911" level="INFO"/>
<status status="PASS" starttime="20231122 01:50:56.911" endtime="20231122 01:50:56.911"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:50:56.912" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:50:56.912" endtime="20231122 01:50:56.912"/>
</kw>
<status status="PASS" starttime="20231122 01:50:54.783" endtime="20231122 01:50:56.912"/>
</kw>
<msg timestamp="20231122 01:50:56.912" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:50:54.782" endtime="20231122 01:50:56.912"/>
</kw>
<status status="PASS" starttime="20231122 01:50:54.782" endtime="20231122 01:50:56.912"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${volume_name}/${bucket_name}/cancel-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:50:56.915" level="INFO">Running command 'ozone sh key put /19839-volume-for-cancel/19839-bucket-for-cancel/cancel-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:51:00.483" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:51:00.483" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231122 01:50:56.913" endtime="20231122 01:51:00.483"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:51:00.484" level="INFO"/>
<status status="PASS" starttime="20231122 01:51:00.484" endtime="20231122 01:51:00.484"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:51:00.485" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:51:00.484" endtime="20231122 01:51:00.485"/>
</kw>
<status status="PASS" starttime="20231122 01:50:56.913" endtime="20231122 01:51:00.485"/>
</kw>
<msg timestamp="20231122 01:51:00.485" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:50:56.913" endtime="20231122 01:51:00.485"/>
</kw>
<msg timestamp="20231122 01:51:00.485" level="INFO">${result} = </msg>
<status status="PASS" starttime="20231122 01:50:56.912" endtime="20231122 01:51:00.485"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume_name}/${bucket_name}/cancel-key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:51:00.488" level="INFO">Running command 'ozone sh key info /19839-volume-for-cancel/19839-bucket-for-cancel/cancel-key 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:51:02.812" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:51:02.812" level="INFO">${output} = {
  "volumeName" : "19839-volume-for-cancel",
  "bucketName" : "19839-bucket-for-cancel",
  "name" : "cancel-key",
  "dataSize" : 17289,
  "creationTime" : "2023-11-22T01:50:58.921Z",
  "modificationT...</msg>
<status status="PASS" starttime="20231122 01:51:00.486" endtime="20231122 01:51:02.812"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:51:02.813" level="INFO">{
  "volumeName" : "19839-volume-for-cancel",
  "bucketName" : "19839-bucket-for-cancel",
  "name" : "cancel-key",
  "dataSize" : 17289,
  "creationTime" : "2023-11-22T01:50:58.921Z",
  "modificationTime" : "2023-11-22T01:51:00.117Z",
  "replicationConfig" : {
    "replicationFactor" : "ONE",
    "requiredNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "ozoneKeyLocations" : [ {
    "containerID" : 3,
    "localID" : 111677748019200103,
    "length" : 17289,
    "offset" : 0,
    "keyOffset" : 0
  } ],
  "file" : true
}</msg>
<status status="PASS" starttime="20231122 01:51:02.812" endtime="20231122 01:51:02.813"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:51:02.814" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:51:02.813" endtime="20231122 01:51:02.814"/>
</kw>
<status status="PASS" starttime="20231122 01:51:00.486" endtime="20231122 01:51:02.814"/>
</kw>
<msg timestamp="20231122 01:51:02.814" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:51:00.486" endtime="20231122 01:51:02.814"/>
</kw>
<msg timestamp="20231122 01:51:02.814" level="INFO">${result} = {
  "volumeName" : "19839-volume-for-cancel",
  "bucketName" : "19839-bucket-for-cancel",
  "name" : "cancel-key",
  "dataSize" : 17289,
  "creationTime" : "2023-11-22T01:50:58.921Z",
  "modificationT...</msg>
<status status="PASS" starttime="20231122 01:51:00.485" endtime="20231122 01:51:02.814"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"name\" : \"cancel-key\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:51:02.814" endtime="20231122 01:51:02.815"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231122 01:50:52.698" endtime="20231122 01:51:02.815"/>
</test>
<doc>Smoke test for ozone manager cancel prepare</doc>
<status status="PASS" starttime="20231122 01:50:50.349" endtime="20231122 01:51:02.815"/>
</suite>
<suite id="s1-s3" name="Om-Prepare" source="/opt/hadoop/smoketest/omha/om-prepare.robot">
<kw name="Create Specific OM data for prepare" type="SETUP">
<kw name="Freon OCKG" library="freon">
<arg>prefix=om-prepare</arg>
<arg>n=100</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:51:04.706" level="INFO">Running command 'ozone freon ockg --om-service-id=omservice -t 1 -n100 -p om-prepare  2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:51:12.658" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:51:12.658" level="INFO">${output} = 2023-11-22 01:51:06,071 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-11-22 01:51:06,166 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231122 01:51:04.705" endtime="20231122 01:51:12.658"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:51:12.659" level="INFO">2023-11-22 01:51:06,071 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-11-22 01:51:06,166 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-11-22 01:51:06,166 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-11-22 01:51:06,245 [main] INFO freon.BaseFreonGenerator: Executing test with prefix om-prepare and number-of-tests 100
2023-11-22 01:51:06,286 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-11-22 01:51:07,273 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-11-22 01:51:07,289 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-11-22 01:51:07,496 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-11-22 01:51:08,289 [Thread-3] INFO freon.ProgressBar: Progress: 9.00 % (9 out of 100)
2023-11-22 01:51:09,290 [Thread-3] INFO freon.ProgressBar: Progress: 35.00 % (35 out of 100)
2023-11-22 01:51:10,290 [Thread-3] INFO freon.ProgressBar: Progress: 66.00 % (66 out of 100)
2023-11-22 01:51:11,290 [Thread-3] INFO freon.ProgressBar: Progress: 99.00 % (99 out of 100)
2023-11-22 01:51:12,291 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2023-11-22 01:51:12,317 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=100, min=20.62099, max=1091.035807, mean=44.42929281446516, stddev=103.76102128529642, median=32.447253, p75=39.627776, p95=50.220269, p98=58.985278, p99=63.579983, p999=1091.035807, mean_rate=18.153433268920196, m1=20.0, m5=20.0, m15=20.0, rate_unit=events/second, duration_unit=milliseconds
2023-11-22 01:51:12,317 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 6
2023-11-22 01:51:12,317 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-11-22 01:51:12,317 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20231122 01:51:12.659" endtime="20231122 01:51:12.659"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:51:12.660" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:51:12.659" endtime="20231122 01:51:12.660"/>
</kw>
<status status="PASS" starttime="20231122 01:51:04.704" endtime="20231122 01:51:12.660"/>
</kw>
<msg timestamp="20231122 01:51:12.660" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:51:04.704" endtime="20231122 01:51:12.660"/>
</kw>
<msg timestamp="20231122 01:51:12.660" level="INFO">${result} = 2023-11-22 01:51:06,071 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-11-22 01:51:06,166 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231122 01:51:04.704" endtime="20231122 01:51:12.660"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:51:12.660" endtime="20231122 01:51:12.661"/>
</kw>
<status status="PASS" starttime="20231122 01:51:04.703" endtime="20231122 01:51:12.661"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231122 01:51:12.661" level="INFO">${random} = 09429</msg>
<status status="PASS" starttime="20231122 01:51:12.661" endtime="20231122 01:51:12.661"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231122 01:51:12.662" level="INFO">${volume_name} = 09429-volume-for-prepare</msg>
<status status="PASS" starttime="20231122 01:51:12.661" endtime="20231122 01:51:12.662"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${bucket_name}</arg>
<arg>${random}-bucket-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231122 01:51:12.663" level="INFO">${bucket_name} = 09429-bucket-for-prepare</msg>
<status status="PASS" starttime="20231122 01:51:12.662" endtime="20231122 01:51:12.663"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${volume_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:51:12.666" level="INFO">Running command 'ozone sh volume create /09429-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:51:14.646" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:51:14.646" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231122 01:51:12.664" endtime="20231122 01:51:14.646"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:51:14.646" level="INFO"/>
<status status="PASS" starttime="20231122 01:51:14.646" endtime="20231122 01:51:14.646"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:51:14.647" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:51:14.647" endtime="20231122 01:51:14.647"/>
</kw>
<status status="PASS" starttime="20231122 01:51:12.664" endtime="20231122 01:51:14.647"/>
</kw>
<msg timestamp="20231122 01:51:14.647" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:51:12.664" endtime="20231122 01:51:14.647"/>
</kw>
<status status="PASS" starttime="20231122 01:51:12.664" endtime="20231122 01:51:14.647"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume_name}/${bucket_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:51:14.650" level="INFO">Running command 'ozone sh bucket create /09429-volume-for-prepare/09429-bucket-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:51:16.702" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:51:16.702" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231122 01:51:14.648" endtime="20231122 01:51:16.702"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:51:16.703" level="INFO"/>
<status status="PASS" starttime="20231122 01:51:16.702" endtime="20231122 01:51:16.703"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:51:16.703" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:51:16.703" endtime="20231122 01:51:16.703"/>
</kw>
<status status="PASS" starttime="20231122 01:51:14.648" endtime="20231122 01:51:16.703"/>
</kw>
<msg timestamp="20231122 01:51:16.703" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:51:14.648" endtime="20231122 01:51:16.704"/>
</kw>
<status status="PASS" starttime="20231122 01:51:14.647" endtime="20231122 01:51:16.704"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:51:16.706" level="INFO">Running command 'ozone sh key put /09429-volume-for-prepare/09429-bucket-for-prepare/prepare-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:51:20.215" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:51:20.215" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231122 01:51:16.705" endtime="20231122 01:51:20.215"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:51:20.216" level="INFO"/>
<status status="PASS" starttime="20231122 01:51:20.216" endtime="20231122 01:51:20.216"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:51:20.217" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:51:20.216" endtime="20231122 01:51:20.217"/>
</kw>
<status status="PASS" starttime="20231122 01:51:16.704" endtime="20231122 01:51:20.217"/>
</kw>
<msg timestamp="20231122 01:51:20.217" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:51:16.704" endtime="20231122 01:51:20.217"/>
</kw>
<status status="PASS" starttime="20231122 01:51:16.704" endtime="20231122 01:51:20.217"/>
</kw>
<status status="PASS" starttime="20231122 01:51:04.702" endtime="20231122 01:51:20.217"/>
</kw>
<test id="s1-s3-t1" name="Prepare Ozone Manager" line="39">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231122 01:51:20.218" endtime="20231122 01:51:20.218"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id=omservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:51:20.221" level="INFO">Running command 'ozone admin om prepare -id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:51:27.347" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:51:27.347" level="INFO">${output} = Ozone Manager Prepare Request successfully returned with Transaction Id : [833].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20231122 01:51:20.220" endtime="20231122 01:51:27.347"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:51:27.348" level="INFO">Ozone Manager Prepare Request successfully returned with Transaction Id : [833].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [833]
OM : [om3], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [833]
OM : [om2], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [833]

OM Preparation successful! 
All OMs are prepared
No new write requests will be allowed until preparation is cancelled or upgrade/downgrade is done.</msg>
<status status="PASS" starttime="20231122 01:51:27.348" endtime="20231122 01:51:27.348"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:51:27.349" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:51:27.348" endtime="20231122 01:51:27.349"/>
</kw>
<status status="PASS" starttime="20231122 01:51:20.219" endtime="20231122 01:51:27.349"/>
</kw>
<msg timestamp="20231122 01:51:27.349" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:51:20.219" endtime="20231122 01:51:27.349"/>
</kw>
<msg timestamp="20231122 01:51:27.349" level="INFO">${result} = Ozone Manager Prepare Request successfully returned with Transaction Id : [833].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20231122 01:51:20.219" endtime="20231122 01:51:27.349"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:51:27.350" endtime="20231122 01:51:27.350"/>
</kw>
<status status="PASS" starttime="20231122 01:51:27.349" endtime="20231122 01:51:27.350"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231122 01:51:20.217" endtime="20231122 01:51:27.350"/>
</test>
<test id="s1-s3-t2" name="Checks if the expected data is present in OM" line="43">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231122 01:51:27.351" endtime="20231122 01:51:27.352"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:51:27.354" level="INFO">Running command 'ozone sh key info /09429-volume-for-prepare/09429-bucket-for-prepare/prepare-key 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:51:29.519" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:51:29.519" level="INFO">${output} = {
  "volumeName" : "09429-volume-for-prepare",
  "bucketName" : "09429-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17289,
  "creationTime" : "2023-11-22T01:51:18.685Z",
  "modificati...</msg>
<status status="PASS" starttime="20231122 01:51:27.353" endtime="20231122 01:51:29.519"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:51:29.520" level="INFO">{
  "volumeName" : "09429-volume-for-prepare",
  "bucketName" : "09429-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17289,
  "creationTime" : "2023-11-22T01:51:18.685Z",
  "modificationTime" : "2023-11-22T01:51:19.869Z",
  "replicationConfig" : {
    "replicationFactor" : "ONE",
    "requiredNodes" : 1,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "ozoneKeyLocations" : [ {
    "containerID" : 3,
    "localID" : 111677748019200204,
    "length" : 17289,
    "offset" : 0,
    "keyOffset" : 0
  } ],
  "file" : true
}</msg>
<status status="PASS" starttime="20231122 01:51:29.520" endtime="20231122 01:51:29.520"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:51:29.521" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:51:29.521" endtime="20231122 01:51:29.521"/>
</kw>
<status status="PASS" starttime="20231122 01:51:27.352" endtime="20231122 01:51:29.521"/>
</kw>
<msg timestamp="20231122 01:51:29.521" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:51:27.352" endtime="20231122 01:51:29.521"/>
</kw>
<msg timestamp="20231122 01:51:29.521" level="INFO">${result} = {
  "volumeName" : "09429-volume-for-prepare",
  "bucketName" : "09429-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17289,
  "creationTime" : "2023-11-22T01:51:18.685Z",
  "modificati...</msg>
<status status="PASS" starttime="20231122 01:51:27.352" endtime="20231122 01:51:29.521"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"name\" : \"prepare-key\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:51:29.522" endtime="20231122 01:51:29.522"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231122 01:51:27.351" endtime="20231122 01:51:29.522"/>
</test>
<test id="s1-s3-t3" name="Test write operation fails" line="47">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231122 01:51:29.523" endtime="20231122 01:51:29.523"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key2 /opt/hadoop/NOTICE.txt</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:51:29.525" level="INFO">Running command 'ozone sh key put /09429-volume-for-prepare/09429-bucket-for-prepare/prepare-key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:51:31.643" level="INFO">${rc} = 255</msg>
<msg timestamp="20231122 01:51:31.643" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20231122 01:51:29.524" endtime="20231122 01:51:31.643"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:51:31.644" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20231122 01:51:31.643" endtime="20231122 01:51:31.644"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:51:31.644" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:51:31.644" endtime="20231122 01:51:31.644"/>
</kw>
<msg timestamp="20231122 01:51:31.645" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20231122 01:51:29.524" endtime="20231122 01:51:31.645"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:51:31.645" endtime="20231122 01:51:31.645"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key2</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:51:31.647" level="INFO">Running command 'ozone sh key info /09429-volume-for-prepare/09429-bucket-for-prepare/prepare-key2 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:51:33.777" level="INFO">${rc} = 255</msg>
<msg timestamp="20231122 01:51:33.777" level="INFO">${output} = KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20231122 01:51:31.646" endtime="20231122 01:51:33.777"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:51:33.778" level="INFO">KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20231122 01:51:33.777" endtime="20231122 01:51:33.778"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:51:33.778" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:51:33.778" endtime="20231122 01:51:33.778"/>
</kw>
<status status="PASS" starttime="20231122 01:51:31.645" endtime="20231122 01:51:33.779"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231122 01:51:29.522" endtime="20231122 01:51:33.779"/>
</test>
<doc>Smoke test to test preparing OMs in an OM HA cluster.</doc>
<status status="PASS" starttime="20231122 01:51:04.650" endtime="20231122 01:51:33.780"/>
</suite>
<suite id="s1-s4" name="Om-Prepared" source="/opt/hadoop/smoketest/omha/om-prepared.robot">
<test id="s1-s4-t1" name="Test create volume fails" line="26">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231122 01:51:35.651" endtime="20231122 01:51:35.651"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231122 01:51:35.652" level="INFO">${random} = 01733</msg>
<status status="PASS" starttime="20231122 01:51:35.652" endtime="20231122 01:51:35.652"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231122 01:51:35.653" level="INFO">${volume_name} = 01733-volume-for-prepare</msg>
<status status="PASS" starttime="20231122 01:51:35.652" endtime="20231122 01:51:35.653"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:51:35.655" level="INFO">Running command 'ozone sh volume create /01733-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:51:37.741" level="INFO">${rc} = 255</msg>
<msg timestamp="20231122 01:51:37.741" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20231122 01:51:35.654" endtime="20231122 01:51:37.741"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:51:37.742" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20231122 01:51:37.742" endtime="20231122 01:51:37.742"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:51:37.743" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:51:37.742" endtime="20231122 01:51:37.743"/>
</kw>
<msg timestamp="20231122 01:51:37.743" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20231122 01:51:35.653" endtime="20231122 01:51:37.743"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:51:37.743" endtime="20231122 01:51:37.743"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume info /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:51:37.745" level="INFO">Running command 'ozone sh volume info /01733-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:51:39.754" level="INFO">${rc} = 255</msg>
<msg timestamp="20231122 01:51:39.754" level="INFO">${output} = VOLUME_NOT_FOUND Volume 01733-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20231122 01:51:37.744" endtime="20231122 01:51:39.754"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:51:39.755" level="INFO">VOLUME_NOT_FOUND Volume 01733-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20231122 01:51:39.754" endtime="20231122 01:51:39.755"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:51:39.755" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:51:39.755" endtime="20231122 01:51:39.755"/>
</kw>
<msg timestamp="20231122 01:51:39.756" level="INFO">${result} = VOLUME_NOT_FOUND Volume 01733-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20231122 01:51:37.743" endtime="20231122 01:51:39.756"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:51:39.756" endtime="20231122 01:51:39.756"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231122 01:51:35.650" endtime="20231122 01:51:39.756"/>
</test>
<test id="s1-s4-t2" name="Test list volumes succeeds" line="34">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231122 01:51:39.757" endtime="20231122 01:51:39.758"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:51:39.760" level="INFO">Running command 'ozone sh volume list 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:51:42.107" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:51:42.107" level="INFO">${output} = [ {
  "metadata" : { },
  "name" : "09429-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "...</msg>
<status status="PASS" starttime="20231122 01:51:39.759" endtime="20231122 01:51:42.107"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:51:42.108" level="INFO">[ {
  "metadata" : { },
  "name" : "09429-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-11-22T01:51:14.629Z",
  "modificationTime" : "2023-11-22T01:51:14.629Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "s3v",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 0,
  "creationTime" : "2023-11-22T01:49:58.021Z",
  "modificationTime" : "2023-11-22T01:49:58.021Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "09241-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-11-22T01:50:28.941Z",
  "modificationTime" : "2023-11-22T01:50:28.941Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "vol1",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-11-22T01:50:18.210Z",
  "modificationTime" : "2023-11-22T01:50:18.210Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "19839-volume-for-cancel",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-11-22T01:50:54.761Z",
  "modificationTime" : "2023-11-22T01:50:54.761Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
} ]</msg>
<status status="PASS" starttime="20231122 01:51:42.107" endtime="20231122 01:51:42.108"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:51:42.108" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:51:42.108" endtime="20231122 01:51:42.108"/>
</kw>
<status status="PASS" starttime="20231122 01:51:39.758" endtime="20231122 01:51:42.109"/>
</kw>
<msg timestamp="20231122 01:51:42.109" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:51:39.758" endtime="20231122 01:51:42.109"/>
</kw>
<msg timestamp="20231122 01:51:42.109" level="INFO">${result} = [ {
  "metadata" : { },
  "name" : "09429-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "...</msg>
<status status="PASS" starttime="20231122 01:51:39.758" endtime="20231122 01:51:42.109"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231122 01:51:39.757" endtime="20231122 01:51:42.109"/>
</test>
<doc>Smoke test to test that OMs are prepared in an OM HA cluster.</doc>
<status status="PASS" starttime="20231122 01:51:35.611" endtime="20231122 01:51:42.110"/>
</suite>
<suite id="s1-s5" name="Om-Prepared" source="/opt/hadoop/smoketest/omha/om-prepared.robot">
<test id="s1-s5-t1" name="Test create volume fails" line="26">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231122 01:52:47.198" endtime="20231122 01:52:47.199"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231122 01:52:47.199" level="INFO">${random} = 82906</msg>
<status status="PASS" starttime="20231122 01:52:47.199" endtime="20231122 01:52:47.199"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231122 01:52:47.201" level="INFO">${volume_name} = 82906-volume-for-prepare</msg>
<status status="PASS" starttime="20231122 01:52:47.200" endtime="20231122 01:52:47.201"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:52:47.202" level="INFO">Running command 'ozone sh volume create /82906-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:52:49.332" level="INFO">${rc} = 255</msg>
<msg timestamp="20231122 01:52:49.332" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20231122 01:52:47.201" endtime="20231122 01:52:49.332"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:52:49.333" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20231122 01:52:49.333" endtime="20231122 01:52:49.333"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:52:49.334" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:52:49.333" endtime="20231122 01:52:49.334"/>
</kw>
<msg timestamp="20231122 01:52:49.334" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20231122 01:52:47.201" endtime="20231122 01:52:49.334"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:52:49.334" endtime="20231122 01:52:49.334"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume info /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:52:49.336" level="INFO">Running command 'ozone sh volume info /82906-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:52:51.640" level="INFO">${rc} = 255</msg>
<msg timestamp="20231122 01:52:51.640" level="INFO">${output} = VOLUME_NOT_FOUND Volume 82906-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20231122 01:52:49.335" endtime="20231122 01:52:51.641"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:52:51.641" level="INFO">VOLUME_NOT_FOUND Volume 82906-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20231122 01:52:51.641" endtime="20231122 01:52:51.641"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:52:51.642" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:52:51.642" endtime="20231122 01:52:51.642"/>
</kw>
<msg timestamp="20231122 01:52:51.642" level="INFO">${result} = VOLUME_NOT_FOUND Volume 82906-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20231122 01:52:49.334" endtime="20231122 01:52:51.642"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:52:51.642" endtime="20231122 01:52:51.643"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231122 01:52:47.198" endtime="20231122 01:52:51.643"/>
</test>
<test id="s1-s5-t2" name="Test list volumes succeeds" line="34">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231122 01:52:51.644" endtime="20231122 01:52:51.644"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:52:51.647" level="INFO">Running command 'ozone sh volume list 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:52:54.040" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:52:54.040" level="INFO">${output} = [ {
  "metadata" : { },
  "name" : "09429-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "...</msg>
<status status="PASS" starttime="20231122 01:52:51.645" endtime="20231122 01:52:54.040"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:52:54.041" level="INFO">[ {
  "metadata" : { },
  "name" : "09429-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-11-22T01:51:14.629Z",
  "modificationTime" : "2023-11-22T01:51:14.629Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "s3v",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 0,
  "creationTime" : "2023-11-22T01:50:01.424Z",
  "modificationTime" : "2023-11-22T01:50:01.424Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "09241-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-11-22T01:50:28.941Z",
  "modificationTime" : "2023-11-22T01:50:28.941Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "vol1",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-11-22T01:50:18.210Z",
  "modificationTime" : "2023-11-22T01:50:18.210Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "19839-volume-for-cancel",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-11-22T01:50:54.761Z",
  "modificationTime" : "2023-11-22T01:50:54.761Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
} ]</msg>
<status status="PASS" starttime="20231122 01:52:54.041" endtime="20231122 01:52:54.041"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:52:54.042" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:52:54.042" endtime="20231122 01:52:54.042"/>
</kw>
<status status="PASS" starttime="20231122 01:52:51.645" endtime="20231122 01:52:54.042"/>
</kw>
<msg timestamp="20231122 01:52:54.042" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:52:51.645" endtime="20231122 01:52:54.042"/>
</kw>
<msg timestamp="20231122 01:52:54.042" level="INFO">${result} = [ {
  "metadata" : { },
  "name" : "09429-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "...</msg>
<status status="PASS" starttime="20231122 01:52:51.644" endtime="20231122 01:52:54.042"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231122 01:52:51.643" endtime="20231122 01:52:54.043"/>
</test>
<doc>Smoke test to test that OMs are prepared in an OM HA cluster.</doc>
<status status="PASS" starttime="20231122 01:52:47.157" endtime="20231122 01:52:54.043"/>
</suite>
<suite id="s1-s6" name="Loaddata" source="/opt/hadoop/smoketest/topology/loaddata.robot">
<test id="s1-s6-t1" name="Create a volume, bucket and key" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create topvol1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:53:55.034" level="INFO">Running command 'ozone sh volume create topvol1 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:53:57.885" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:53:57.885" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231122 01:53:55.032" endtime="20231122 01:53:57.885"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:53:57.886" level="INFO"/>
<status status="PASS" starttime="20231122 01:53:57.886" endtime="20231122 01:53:57.887"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:53:57.887" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:53:57.887" endtime="20231122 01:53:57.887"/>
</kw>
<status status="PASS" starttime="20231122 01:53:55.031" endtime="20231122 01:53:57.888"/>
</kw>
<msg timestamp="20231122 01:53:57.889" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:53:55.031" endtime="20231122 01:53:57.889"/>
</kw>
<msg timestamp="20231122 01:53:57.889" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231122 01:53:55.030" endtime="20231122 01:53:57.889"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:53:57.890" endtime="20231122 01:53:57.890"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /topvol1/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:53:57.902" level="INFO">Running command 'ozone sh bucket create /topvol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:54:00.581" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:54:00.581" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231122 01:53:57.892" endtime="20231122 01:54:00.581"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:54:00.582" level="INFO"/>
<status status="PASS" starttime="20231122 01:54:00.581" endtime="20231122 01:54:00.582"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:54:00.582" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:54:00.582" endtime="20231122 01:54:00.582"/>
</kw>
<status status="PASS" starttime="20231122 01:53:57.891" endtime="20231122 01:54:00.583"/>
</kw>
<msg timestamp="20231122 01:54:00.583" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:53:57.891" endtime="20231122 01:54:00.583"/>
</kw>
<msg timestamp="20231122 01:54:00.583" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231122 01:53:57.890" endtime="20231122 01:54:00.583"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:54:00.583" endtime="20231122 01:54:00.583"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:54:00.586" level="INFO">Running command 'ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:54:05.360" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:54:05.360" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231122 01:54:00.584" endtime="20231122 01:54:05.360"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:54:05.361" level="INFO"/>
<status status="PASS" starttime="20231122 01:54:05.361" endtime="20231122 01:54:05.361"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:54:05.362" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:54:05.361" endtime="20231122 01:54:05.362"/>
</kw>
<status status="PASS" starttime="20231122 01:54:00.584" endtime="20231122 01:54:05.362"/>
</kw>
<msg timestamp="20231122 01:54:05.362" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:54:00.584" endtime="20231122 01:54:05.362"/>
</kw>
<msg timestamp="20231122 01:54:05.362" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231122 01:54:00.583" endtime="20231122 01:54:05.362"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:54:05.362" endtime="20231122 01:54:05.363"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231122 01:53:55.029" endtime="20231122 01:54:05.363"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20231122 01:53:54.982" endtime="20231122 01:54:05.364"/>
</suite>
<suite id="s1-s7" name="Readdata" source="/opt/hadoop/smoketest/topology/readdata.robot">
<test id="s1-s7-t1" name="Read data from previously created key" line="27">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231122 01:54:07.357" level="INFO">${random} = 72275</msg>
<status status="PASS" starttime="20231122 01:54:07.357" endtime="20231122 01:54:07.357"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231122 01:54:07.359" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-72275 2&gt;&amp;1'.</msg>
<msg timestamp="20231122 01:54:11.567" level="INFO">${rc} = 0</msg>
<msg timestamp="20231122 01:54:11.567" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231122 01:54:07.358" endtime="20231122 01:54:11.567"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231122 01:54:11.568" level="INFO"/>
<status status="PASS" starttime="20231122 01:54:11.567" endtime="20231122 01:54:11.568"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231122 01:54:11.568" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231122 01:54:11.568" endtime="20231122 01:54:11.568"/>
</kw>
<status status="PASS" starttime="20231122 01:54:07.358" endtime="20231122 01:54:11.569"/>
</kw>
<msg timestamp="20231122 01:54:11.569" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231122 01:54:07.358" endtime="20231122 01:54:11.569"/>
</kw>
<msg timestamp="20231122 01:54:11.569" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231122 01:54:07.357" endtime="20231122 01:54:11.569"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231122 01:54:11.569" endtime="20231122 01:54:11.569"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231122 01:54:07.356" endtime="20231122 01:54:11.570"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20231122 01:54:07.318" endtime="20231122 01:54:11.570"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="102733"/>
</suite>
<statistics>
<total>
<stat pass="14" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="14" fail="0" skip="0" id="s1" name="ozone-om-prepare">ozone-om-prepare</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1" name="Om-Prepare">ozone-om-prepare.Om-Prepare</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2" name="Om-Cancel-Prepare">ozone-om-prepare.Om-Cancel-Prepare</stat>
<stat pass="3" fail="0" skip="0" id="s1-s3" name="Om-Prepare">ozone-om-prepare.Om-Prepare</stat>
<stat pass="2" fail="0" skip="0" id="s1-s4" name="Om-Prepared">ozone-om-prepare.Om-Prepared</stat>
<stat pass="2" fail="0" skip="0" id="s1-s5" name="Om-Prepared">ozone-om-prepare.Om-Prepared</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6" name="Loaddata">ozone-om-prepare.Loaddata</stat>
<stat pass="1" fail="0" skip="0" id="s1-s7" name="Readdata">ozone-om-prepare.Readdata</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
