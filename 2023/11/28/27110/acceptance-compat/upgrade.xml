<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20231128 20:02:36.289" rpa="false" schemaversion="4">
<suite id="s1" name="upgrade">
<suite id="s1-s1" name="Check-Finalization" source="/opt/ozone/smoketest/upgrade/check-finalization.robot">
<test id="s1-s1-t1" name="Check OM Finalized" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231128 19:56:42.811" endtime="20231128 19:56:42.811"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>env</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231128 19:56:42.814" level="INFO">Running command 'env 2&gt;&amp;1'.</msg>
<msg timestamp="20231128 19:56:42.816" level="INFO">${rc} = 0</msg>
<msg timestamp="20231128 19:56:42.816" level="INFO">${output} = OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=805f2ced6654
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE-SITE.XML_ozone.serv...</msg>
<status status="PASS" starttime="20231128 19:56:42.812" endtime="20231128 19:56:42.816"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231128 19:56:42.816" level="INFO">OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=805f2ced6654
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE-SITE.XML_ozone.server.default.replication=3
OZONE_LOG_DIR=/var/log/hadoop
LD_LIBRARY_PATH=/usr/local/lib
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
ENSURE_SCM_INITIALIZED=/data/metadata/scm/current/VERSION
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OM_SERVICE_ID=omservice
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin
PWD=/opt/hadoop
OZONE-SITE.XML_ozone.scm.container.size=1GB
JAVA_HOME=/usr/lib/jvm/jre/
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE_UPGRADE_FROM=1.3.0
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
SHLVL=1
HOME=/opt/hadoop
OZONE_CONF_DIR=/etc/hadoop
OZONE-SITE.XML_ozone.om.ratis.enable=true
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
OZONE_UPGRADE_TO=1.4.0
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_ozone.scm.ratis.enable=true
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3
OZONE-SITE.XML_hdds.datanode.volume.min.free.space=100MB
_=/usr/bin/env</msg>
<status status="PASS" starttime="20231128 19:56:42.816" endtime="20231128 19:56:42.817"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231128 19:56:42.817" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231128 19:56:42.817" endtime="20231128 19:56:42.817"/>
</kw>
<status status="PASS" starttime="20231128 19:56:42.812" endtime="20231128 19:56:42.817"/>
</kw>
<msg timestamp="20231128 19:56:42.817" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231128 19:56:42.812" endtime="20231128 19:56:42.818"/>
</kw>
<msg timestamp="20231128 19:56:42.818" level="INFO">${result} = OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=805f2ced6654
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE-SITE.XML_ozone.serv...</msg>
<status status="PASS" starttime="20231128 19:56:42.811" endtime="20231128 19:56:42.818"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231128 19:56:42.819" level="INFO">OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=805f2ced6654
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE-SITE.XML_ozone.server.default.replication=3
OZONE_LOG_DIR=/var/log/hadoop
LD_LIBRARY_PATH=/usr/local/lib
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
ENSURE_SCM_INITIALIZED=/data/metadata/scm/current/VERSION
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OM_SERVICE_ID=omservice
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin
PWD=/opt/hadoop
OZONE-SITE.XML_ozone.scm.container.size=1GB
JAVA_HOME=/usr/lib/jvm/jre/
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE_UPGRADE_FROM=1.3.0
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
SHLVL=1
HOME=/opt/hadoop
OZONE_CONF_DIR=/etc/hadoop
OZONE-SITE.XML_ozone.om.ratis.enable=true
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
OZONE_UPGRADE_TO=1.4.0
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_ozone.scm.ratis.enable=true
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3
OZONE-SITE.XML_hdds.datanode.volume.min.free.space=100MB
_=/usr/bin/env</msg>
<status status="PASS" starttime="20231128 19:56:42.818" endtime="20231128 19:56:42.819"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20231128 19:56:42.819" endtime="20231128 19:56:42.819"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231128 19:56:42.821" level="INFO">Running command 'ozone admin om finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20231128 19:56:44.646" level="INFO">${rc} = 0</msg>
<msg timestamp="20231128 19:56:44.646" level="INFO">${output} = ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20231128 19:56:42.820" endtime="20231128 19:56:44.646"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231128 19:56:44.647" level="INFO">ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20231128 19:56:44.646" endtime="20231128 19:56:44.647"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231128 19:56:44.647" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231128 19:56:44.647" endtime="20231128 19:56:44.647"/>
</kw>
<status status="PASS" starttime="20231128 19:56:42.820" endtime="20231128 19:56:44.647"/>
</kw>
<msg timestamp="20231128 19:56:44.647" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231128 19:56:42.820" endtime="20231128 19:56:44.648"/>
</kw>
<msg timestamp="20231128 19:56:44.648" level="INFO">${result} = ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20231128 19:56:42.819" endtime="20231128 19:56:44.648"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231128 19:56:44.648" level="INFO">ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20231128 19:56:44.648" endtime="20231128 19:56:44.648"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20231128 19:56:44.648" endtime="20231128 19:56:44.649"/>
</kw>
<tag>finalized</tag>
<tag>om</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20231128 19:56:42.810" endtime="20231128 19:56:44.649"/>
</test>
<test id="s1-s1-t2" name="Check SCM Finalized" line="32">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231128 19:56:44.650" endtime="20231128 19:56:44.650"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>HDDS finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20231128 19:56:44.650" endtime="20231128 19:56:44.651"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231128 19:56:44.653" level="INFO">Running command 'ozone admin scm finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20231128 19:56:46.437" level="INFO">${rc} = 0</msg>
<msg timestamp="20231128 19:56:46.437" level="INFO">${output} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20231128 19:56:44.652" endtime="20231128 19:56:46.437"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231128 19:56:46.438" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20231128 19:56:46.438" endtime="20231128 19:56:46.438"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231128 19:56:46.439" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231128 19:56:46.438" endtime="20231128 19:56:46.439"/>
</kw>
<status status="PASS" starttime="20231128 19:56:44.651" endtime="20231128 19:56:46.439"/>
</kw>
<msg timestamp="20231128 19:56:46.439" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231128 19:56:44.651" endtime="20231128 19:56:46.439"/>
</kw>
<msg timestamp="20231128 19:56:46.439" level="INFO">${result} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20231128 19:56:44.651" endtime="20231128 19:56:46.439"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231128 19:56:46.440" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20231128 19:56:46.439" endtime="20231128 19:56:46.440"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20231128 19:56:46.440" endtime="20231128 19:56:46.440"/>
</kw>
<tag>finalized</tag>
<tag>scm</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20231128 19:56:44.650" endtime="20231128 19:56:46.440"/>
</test>
<doc>Finalize Upgrade of the Ozone cluster</doc>
<status status="PASS" starttime="20231128 19:56:42.774" endtime="20231128 19:56:46.441"/>
</suite>
<suite id="s1-s2" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s2-t1" name="Create a volume and bucket" line="28">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231128 19:56:48.506" level="INFO">Running command 'ozone sh volume create old1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20231128 19:56:50.302" level="INFO">${rc} = 0</msg>
<msg timestamp="20231128 19:56:50.302" level="INFO">${output} = 2023-11-28 19:56:50,219 [main] INFO rpc.RpcClient: Creating Volume: old1-volume, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20231128 19:56:48.504" endtime="20231128 19:56:50.302"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231128 19:56:50.304" level="INFO">2023-11-28 19:56:50,219 [main] INFO rpc.RpcClient: Creating Volume: old1-volume, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20231128 19:56:50.303" endtime="20231128 19:56:50.304"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231128 19:56:50.304" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231128 19:56:50.304" endtime="20231128 19:56:50.305"/>
</kw>
<status status="PASS" starttime="20231128 19:56:48.503" endtime="20231128 19:56:50.305"/>
</kw>
<msg timestamp="20231128 19:56:50.305" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231128 19:56:48.503" endtime="20231128 19:56:50.306"/>
</kw>
<msg timestamp="20231128 19:56:50.306" level="INFO">${output} = 2023-11-28 19:56:50,219 [main] INFO rpc.RpcClient: Creating Volume: old1-volume, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20231128 19:56:48.503" endtime="20231128 19:56:50.306"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231128 19:56:50.307" endtime="20231128 19:56:50.307"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231128 19:56:50.312" level="INFO">Running command 'ozone sh bucket create /old1-volume/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20231128 19:56:52.490" level="INFO">${rc} = 0</msg>
<msg timestamp="20231128 19:56:52.491" level="INFO">${output} = 2023-11-28 19:56:52,428 [main] INFO rpc.RpcClient: Creating Bucket: old1-volume/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Enc...</msg>
<status status="PASS" starttime="20231128 19:56:50.311" endtime="20231128 19:56:52.491"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231128 19:56:52.492" level="INFO">2023-11-28 19:56:52,428 [main] INFO rpc.RpcClient: Creating Bucket: old1-volume/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false </msg>
<status status="PASS" starttime="20231128 19:56:52.491" endtime="20231128 19:56:52.492"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231128 19:56:52.492" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231128 19:56:52.492" endtime="20231128 19:56:52.492"/>
</kw>
<status status="PASS" starttime="20231128 19:56:50.309" endtime="20231128 19:56:52.493"/>
</kw>
<msg timestamp="20231128 19:56:52.493" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231128 19:56:50.308" endtime="20231128 19:56:52.493"/>
</kw>
<msg timestamp="20231128 19:56:52.493" level="INFO">${output} = 2023-11-28 19:56:52,428 [main] INFO rpc.RpcClient: Creating Bucket: old1-volume/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Enc...</msg>
<status status="PASS" starttime="20231128 19:56:50.307" endtime="20231128 19:56:52.493"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231128 19:56:52.494" endtime="20231128 19:56:52.494"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231128 19:56:48.502" endtime="20231128 19:56:52.494"/>
</test>
<test id="s1-s2-t2" name="Create key" line="35">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231128 19:56:52.499" level="INFO">Running command 'echo "old1: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20231128 19:56:52.500" level="INFO">${rc} = 0</msg>
<msg timestamp="20231128 19:56:52.500" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231128 19:56:52.497" endtime="20231128 19:56:52.500"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231128 19:56:52.501" level="INFO"/>
<status status="PASS" starttime="20231128 19:56:52.500" endtime="20231128 19:56:52.501"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231128 19:56:52.501" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231128 19:56:52.501" endtime="20231128 19:56:52.501"/>
</kw>
<status status="PASS" starttime="20231128 19:56:52.496" endtime="20231128 19:56:52.502"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231128 19:56:52.505" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231128 19:56:56.477" level="INFO">${rc} = 0</msg>
<msg timestamp="20231128 19:56:56.477" level="INFO">${output} = 2023-11-28 19:56:55,036 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-11-28 19:56:55,115 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231128 19:56:52.503" endtime="20231128 19:56:56.477"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231128 19:56:56.478" level="INFO">2023-11-28 19:56:55,036 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-11-28 19:56:55,115 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-11-28 19:56:55,115 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2023-11-28 19:56:55,335 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20231128 19:56:56.477" endtime="20231128 19:56:56.478"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231128 19:56:56.478" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231128 19:56:56.478" endtime="20231128 19:56:56.478"/>
</kw>
<status status="PASS" starttime="20231128 19:56:52.503" endtime="20231128 19:56:56.478"/>
</kw>
<msg timestamp="20231128 19:56:56.478" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231128 19:56:52.502" endtime="20231128 19:56:56.479"/>
</kw>
<msg timestamp="20231128 19:56:56.479" level="INFO">${output} = 2023-11-28 19:56:55,036 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-11-28 19:56:55,115 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231128 19:56:52.502" endtime="20231128 19:56:56.479"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231128 19:56:56.479" endtime="20231128 19:56:56.479"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231128 19:56:56.481" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231128 19:56:56.483" level="INFO">${rc} = 0</msg>
<msg timestamp="20231128 19:56:56.483" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231128 19:56:56.480" endtime="20231128 19:56:56.483"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231128 19:56:56.483" level="INFO"/>
<status status="PASS" starttime="20231128 19:56:56.483" endtime="20231128 19:56:56.484"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231128 19:56:56.484" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231128 19:56:56.484" endtime="20231128 19:56:56.484"/>
</kw>
<status status="PASS" starttime="20231128 19:56:56.479" endtime="20231128 19:56:56.484"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231128 19:56:52.495" endtime="20231128 19:56:56.484"/>
</test>
<test id="s1-s2-t3" name="Create a bucket in s3v volume" line="41">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /s3v/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231128 19:56:56.487" level="INFO">Running command 'ozone sh bucket create /s3v/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20231128 19:56:58.200" level="INFO">${rc} = 0</msg>
<msg timestamp="20231128 19:56:58.200" level="INFO">${output} = 2023-11-28 19:56:58,156 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption ...</msg>
<status status="PASS" starttime="20231128 19:56:56.486" endtime="20231128 19:56:58.200"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231128 19:56:58.201" level="INFO">2023-11-28 19:56:58,156 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false </msg>
<status status="PASS" starttime="20231128 19:56:58.201" endtime="20231128 19:56:58.201"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231128 19:56:58.202" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231128 19:56:58.201" endtime="20231128 19:56:58.202"/>
</kw>
<status status="PASS" starttime="20231128 19:56:56.486" endtime="20231128 19:56:58.202"/>
</kw>
<msg timestamp="20231128 19:56:58.202" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231128 19:56:56.486" endtime="20231128 19:56:58.202"/>
</kw>
<msg timestamp="20231128 19:56:58.202" level="INFO">${output} = 2023-11-28 19:56:58,156 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption ...</msg>
<status status="PASS" starttime="20231128 19:56:56.486" endtime="20231128 19:56:58.202"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231128 19:56:58.203" endtime="20231128 19:56:58.203"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231128 19:56:56.485" endtime="20231128 19:56:58.203"/>
</test>
<test id="s1-s2-t4" name="Create key in the bucket in s3v volume" line="46">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: another key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231128 19:56:58.205" level="INFO">Running command 'echo "old1: another key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20231128 19:56:58.206" level="INFO">${rc} = 0</msg>
<msg timestamp="20231128 19:56:58.206" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231128 19:56:58.204" endtime="20231128 19:56:58.206"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231128 19:56:58.207" level="INFO"/>
<status status="PASS" starttime="20231128 19:56:58.207" endtime="20231128 19:56:58.207"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231128 19:56:58.207" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231128 19:56:58.207" endtime="20231128 19:56:58.207"/>
</kw>
<status status="PASS" starttime="20231128 19:56:58.204" endtime="20231128 19:56:58.208"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /s3v/${PREFIX}-bucket/key1-shell /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231128 19:56:58.210" level="INFO">Running command 'ozone sh key put /s3v/old1-bucket/key1-shell /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231128 19:57:01.523" level="INFO">${rc} = 0</msg>
<msg timestamp="20231128 19:57:01.523" level="INFO">${output} = 2023-11-28 19:57:00,462 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-11-28 19:57:00,535 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231128 19:56:58.209" endtime="20231128 19:57:01.523"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231128 19:57:01.524" level="INFO">2023-11-28 19:57:00,462 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-11-28 19:57:00,535 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-11-28 19:57:00,535 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2023-11-28 19:57:00,729 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20231128 19:57:01.523" endtime="20231128 19:57:01.524"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231128 19:57:01.524" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231128 19:57:01.524" endtime="20231128 19:57:01.524"/>
</kw>
<status status="PASS" starttime="20231128 19:56:58.208" endtime="20231128 19:57:01.524"/>
</kw>
<msg timestamp="20231128 19:57:01.524" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231128 19:56:58.208" endtime="20231128 19:57:01.525"/>
</kw>
<msg timestamp="20231128 19:57:01.525" level="INFO">${output} = 2023-11-28 19:57:00,462 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-11-28 19:57:00,535 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231128 19:56:58.208" endtime="20231128 19:57:01.525"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231128 19:57:01.525" endtime="20231128 19:57:01.525"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231128 19:57:01.527" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231128 19:57:01.528" level="INFO">${rc} = 0</msg>
<msg timestamp="20231128 19:57:01.528" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231128 19:57:01.526" endtime="20231128 19:57:01.528"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231128 19:57:01.529" level="INFO"/>
<status status="PASS" starttime="20231128 19:57:01.528" endtime="20231128 19:57:01.529"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231128 19:57:01.529" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231128 19:57:01.529" endtime="20231128 19:57:01.529"/>
</kw>
<status status="PASS" starttime="20231128 19:57:01.525" endtime="20231128 19:57:01.530"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231128 19:56:58.203" endtime="20231128 19:57:01.530"/>
</test>
<test id="s1-s2-t5" name="Setup credentials for S3" line="52">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231128 19:57:01.533" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20231128 19:57:01.865" level="INFO">${rc} = 0</msg>
<msg timestamp="20231128 19:57:01.865" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231128 19:57:01.532" endtime="20231128 19:57:01.865"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231128 19:57:01.866" level="INFO"/>
<status status="PASS" starttime="20231128 19:57:01.866" endtime="20231128 19:57:01.866"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231128 19:57:01.867" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231128 19:57:01.866" endtime="20231128 19:57:01.867"/>
</kw>
<status status="PASS" starttime="20231128 19:57:01.532" endtime="20231128 19:57:01.867"/>
</kw>
<msg timestamp="20231128 19:57:01.867" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231128 19:57:01.531" endtime="20231128 19:57:01.867"/>
</kw>
<status status="PASS" starttime="20231128 19:57:01.531" endtime="20231128 19:57:01.868"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231128 19:57:01.870" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20231128 19:57:02.208" level="INFO">${rc} = 0</msg>
<msg timestamp="20231128 19:57:02.208" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231128 19:57:01.869" endtime="20231128 19:57:02.208"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231128 19:57:02.209" level="INFO"/>
<status status="PASS" starttime="20231128 19:57:02.208" endtime="20231128 19:57:02.209"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231128 19:57:02.209" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231128 19:57:02.209" endtime="20231128 19:57:02.209"/>
</kw>
<status status="PASS" starttime="20231128 19:57:01.868" endtime="20231128 19:57:02.210"/>
</kw>
<msg timestamp="20231128 19:57:02.210" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231128 19:57:01.868" endtime="20231128 19:57:02.210"/>
</kw>
<status status="PASS" starttime="20231128 19:57:01.868" endtime="20231128 19:57:02.210"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231128 19:57:02.213" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20231128 19:57:02.531" level="INFO">${rc} = 0</msg>
<msg timestamp="20231128 19:57:02.531" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231128 19:57:02.211" endtime="20231128 19:57:02.531"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231128 19:57:02.532" level="INFO"/>
<status status="PASS" starttime="20231128 19:57:02.531" endtime="20231128 19:57:02.532"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231128 19:57:02.532" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231128 19:57:02.532" endtime="20231128 19:57:02.533"/>
</kw>
<status status="PASS" starttime="20231128 19:57:02.211" endtime="20231128 19:57:02.533"/>
</kw>
<msg timestamp="20231128 19:57:02.533" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231128 19:57:02.211" endtime="20231128 19:57:02.533"/>
</kw>
<status status="PASS" starttime="20231128 19:57:02.210" endtime="20231128 19:57:02.533"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231128 19:57:02.536" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231128 19:57:02.869" level="INFO">${rc} = 0</msg>
<msg timestamp="20231128 19:57:02.869" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231128 19:57:02.534" endtime="20231128 19:57:02.869"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231128 19:57:02.870" level="INFO"/>
<status status="PASS" starttime="20231128 19:57:02.869" endtime="20231128 19:57:02.870"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231128 19:57:02.870" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231128 19:57:02.870" endtime="20231128 19:57:02.870"/>
</kw>
<status status="PASS" starttime="20231128 19:57:02.534" endtime="20231128 19:57:02.871"/>
</kw>
<msg timestamp="20231128 19:57:02.871" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231128 19:57:02.534" endtime="20231128 19:57:02.871"/>
</kw>
<status status="PASS" starttime="20231128 19:57:02.534" endtime="20231128 19:57:02.871"/>
</kw>
<status status="PASS" starttime="20231128 19:57:01.531" endtime="20231128 19:57:02.871"/>
</kw>
<status status="PASS" starttime="20231128 19:57:01.531" endtime="20231128 19:57:02.871"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231128 19:57:01.530" endtime="20231128 19:57:02.871"/>
</test>
<test id="s1-s2-t6" name="Try to create a bucket using S3 API" line="56">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231128 19:57:02.873" level="INFO">${randStr} = 6183425282</msg>
<status status="PASS" starttime="20231128 19:57:02.873" endtime="20231128 19:57:02.873"/>
</kw>
<msg timestamp="20231128 19:57:02.873" level="INFO">${random} = ozone-test-6183425282</msg>
<status status="PASS" starttime="20231128 19:57:02.872" endtime="20231128 19:57:02.873"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<var>${output}</var>
<arg>${PREFIX}-bucket-${random}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231128 19:57:02.876" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket old1-bucket-ozone-test-6183425282 2&gt;&amp;1'.</msg>
<msg timestamp="20231128 19:57:04.113" level="INFO">${rc} = 0</msg>
<msg timestamp="20231128 19:57:04.113" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket-ozone-test-6183425282"
}</msg>
<status status="PASS" starttime="20231128 19:57:02.875" endtime="20231128 19:57:04.113"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231128 19:57:04.113" level="INFO">{
    "Location": "http://s3g:9878/old1-bucket-ozone-test-6183425282"
}</msg>
<status status="PASS" starttime="20231128 19:57:04.113" endtime="20231128 19:57:04.114"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231128 19:57:04.114" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231128 19:57:04.114" endtime="20231128 19:57:04.114"/>
</kw>
<status status="PASS" starttime="20231128 19:57:02.875" endtime="20231128 19:57:04.115"/>
</kw>
<msg timestamp="20231128 19:57:04.115" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231128 19:57:02.874" endtime="20231128 19:57:04.115"/>
</kw>
<msg timestamp="20231128 19:57:04.115" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket-ozone-test-6183425282"
}</msg>
<status status="PASS" starttime="20231128 19:57:02.874" endtime="20231128 19:57:04.115"/>
</kw>
<msg timestamp="20231128 19:57:04.115" level="INFO">${result} = {
    "Location": "http://s3g:9878/old1-bucket-ozone-test-6183425282"
}</msg>
<status status="PASS" starttime="20231128 19:57:02.874" endtime="20231128 19:57:04.115"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231128 19:57:04.115" endtime="20231128 19:57:04.116"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231128 19:57:04.116" endtime="20231128 19:57:04.116"/>
</kw>
<msg timestamp="20231128 19:57:04.116" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20231128 19:57:02.873" endtime="20231128 19:57:04.116"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231128 19:57:04.117" endtime="20231128 19:57:04.117"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231128 19:57:02.872" endtime="20231128 19:57:04.117"/>
</test>
<test id="s1-s2-t7" name="Create key using S3 API" line="62">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using S3 API" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231128 19:57:04.120" level="INFO">Running command 'echo "old1: key created using S3 API" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20231128 19:57:04.121" level="INFO">${rc} = 0</msg>
<msg timestamp="20231128 19:57:04.121" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231128 19:57:04.119" endtime="20231128 19:57:04.121"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231128 19:57:04.122" level="INFO"/>
<status status="PASS" starttime="20231128 19:57:04.122" endtime="20231128 19:57:04.122"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231128 19:57:04.123" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231128 19:57:04.122" endtime="20231128 19:57:04.123"/>
</kw>
<status status="PASS" starttime="20231128 19:57:04.118" endtime="20231128 19:57:04.123"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>put-object --bucket ${PREFIX}-bucket --key key2-s3api --body /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231128 19:57:04.126" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket old1-bucket --key key2-s3api --body /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231128 19:57:05.142" level="INFO">${rc} = 0</msg>
<msg timestamp="20231128 19:57:05.142" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231128 19:57:04.125" endtime="20231128 19:57:05.142"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231128 19:57:05.143" level="INFO"/>
<status status="PASS" starttime="20231128 19:57:05.142" endtime="20231128 19:57:05.143"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231128 19:57:05.143" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231128 19:57:05.143" endtime="20231128 19:57:05.143"/>
</kw>
<msg timestamp="20231128 19:57:05.143" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231128 19:57:04.124" endtime="20231128 19:57:05.143"/>
</kw>
<msg timestamp="20231128 19:57:05.144" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231128 19:57:04.124" endtime="20231128 19:57:05.144"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231128 19:57:05.144" endtime="20231128 19:57:05.144"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231128 19:57:05.146" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231128 19:57:05.147" level="INFO">${rc} = 0</msg>
<msg timestamp="20231128 19:57:05.147" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231128 19:57:05.145" endtime="20231128 19:57:05.147"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231128 19:57:05.148" level="INFO"/>
<status status="PASS" starttime="20231128 19:57:05.147" endtime="20231128 19:57:05.148"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231128 19:57:05.148" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231128 19:57:05.148" endtime="20231128 19:57:05.148"/>
</kw>
<status status="PASS" starttime="20231128 19:57:05.144" endtime="20231128 19:57:05.149"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231128 19:57:04.118" endtime="20231128 19:57:05.149"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20231128 19:56:48.433" endtime="20231128 19:57:05.150"/>
</suite>
<suite id="s1-s3" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s3-t1" name="Read data from previously created key" line="28">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231128 19:57:07.166" level="INFO">${random} = 11448</msg>
<status status="PASS" starttime="20231128 19:57:07.166" endtime="20231128 19:57:07.166"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231128 19:57:07.171" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-11448 2&gt;&amp;1'.</msg>
<msg timestamp="20231128 19:57:10.214" level="INFO">${rc} = 0</msg>
<msg timestamp="20231128 19:57:10.214" level="INFO">${output} = 2023-11-28 19:57:09,326 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-11-28 19:57:09,392 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231128 19:57:07.168" endtime="20231128 19:57:10.214"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231128 19:57:10.215" level="INFO">2023-11-28 19:57:09,326 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-11-28 19:57:09,392 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-11-28 19:57:09,394 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started</msg>
<status status="PASS" starttime="20231128 19:57:10.215" endtime="20231128 19:57:10.215"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231128 19:57:10.216" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231128 19:57:10.215" endtime="20231128 19:57:10.216"/>
</kw>
<status status="PASS" starttime="20231128 19:57:07.168" endtime="20231128 19:57:10.216"/>
</kw>
<msg timestamp="20231128 19:57:10.216" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231128 19:57:07.167" endtime="20231128 19:57:10.217"/>
</kw>
<msg timestamp="20231128 19:57:10.217" level="INFO">${output} = 2023-11-28 19:57:09,326 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-11-28 19:57:09,392 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231128 19:57:07.166" endtime="20231128 19:57:10.217"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231128 19:57:10.217" endtime="20231128 19:57:10.217"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231128 19:57:10.219" level="INFO">Running command 'cat /tmp/key-11448 2&gt;&amp;1'.</msg>
<msg timestamp="20231128 19:57:10.220" level="INFO">${rc} = 0</msg>
<msg timestamp="20231128 19:57:10.220" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231128 19:57:10.218" endtime="20231128 19:57:10.220"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231128 19:57:10.221" level="INFO">old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231128 19:57:10.221" endtime="20231128 19:57:10.221"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231128 19:57:10.221" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231128 19:57:10.221" endtime="20231128 19:57:10.221"/>
</kw>
<msg timestamp="20231128 19:57:10.222" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20231128 19:57:10.217" endtime="20231128 19:57:10.222"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231128 19:57:10.222" endtime="20231128 19:57:10.222"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231128 19:57:10.224" level="INFO">Running command 'rm /tmp/key-11448 2&gt;&amp;1'.</msg>
<msg timestamp="20231128 19:57:10.225" level="INFO">${rc} = 0</msg>
<msg timestamp="20231128 19:57:10.225" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231128 19:57:10.223" endtime="20231128 19:57:10.225"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231128 19:57:10.225" level="INFO"/>
<status status="PASS" starttime="20231128 19:57:10.225" endtime="20231128 19:57:10.226"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231128 19:57:10.226" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231128 19:57:10.226" endtime="20231128 19:57:10.226"/>
</kw>
<status status="PASS" starttime="20231128 19:57:10.222" endtime="20231128 19:57:10.226"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231128 19:57:07.165" endtime="20231128 19:57:10.226"/>
</test>
<test id="s1-s3-t2" name="Setup credentials for S3" line="36">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231128 19:57:10.230" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20231128 19:57:10.557" level="INFO">${rc} = 0</msg>
<msg timestamp="20231128 19:57:10.558" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231128 19:57:10.229" endtime="20231128 19:57:10.558"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231128 19:57:10.558" level="INFO"/>
<status status="PASS" starttime="20231128 19:57:10.558" endtime="20231128 19:57:10.558"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231128 19:57:10.559" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231128 19:57:10.558" endtime="20231128 19:57:10.559"/>
</kw>
<status status="PASS" starttime="20231128 19:57:10.229" endtime="20231128 19:57:10.559"/>
</kw>
<msg timestamp="20231128 19:57:10.559" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231128 19:57:10.228" endtime="20231128 19:57:10.560"/>
</kw>
<status status="PASS" starttime="20231128 19:57:10.228" endtime="20231128 19:57:10.560"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231128 19:57:10.562" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20231128 19:57:10.892" level="INFO">${rc} = 0</msg>
<msg timestamp="20231128 19:57:10.892" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231128 19:57:10.561" endtime="20231128 19:57:10.892"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231128 19:57:10.893" level="INFO"/>
<status status="PASS" starttime="20231128 19:57:10.892" endtime="20231128 19:57:10.893"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231128 19:57:10.893" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231128 19:57:10.893" endtime="20231128 19:57:10.893"/>
</kw>
<status status="PASS" starttime="20231128 19:57:10.560" endtime="20231128 19:57:10.893"/>
</kw>
<msg timestamp="20231128 19:57:10.893" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231128 19:57:10.560" endtime="20231128 19:57:10.894"/>
</kw>
<status status="PASS" starttime="20231128 19:57:10.560" endtime="20231128 19:57:10.894"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231128 19:57:10.896" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20231128 19:57:11.237" level="INFO">${rc} = 0</msg>
<msg timestamp="20231128 19:57:11.237" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231128 19:57:10.895" endtime="20231128 19:57:11.237"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231128 19:57:11.238" level="INFO"/>
<status status="PASS" starttime="20231128 19:57:11.238" endtime="20231128 19:57:11.238"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231128 19:57:11.239" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231128 19:57:11.238" endtime="20231128 19:57:11.239"/>
</kw>
<status status="PASS" starttime="20231128 19:57:10.895" endtime="20231128 19:57:11.239"/>
</kw>
<msg timestamp="20231128 19:57:11.239" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231128 19:57:10.894" endtime="20231128 19:57:11.239"/>
</kw>
<status status="PASS" starttime="20231128 19:57:10.894" endtime="20231128 19:57:11.239"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231128 19:57:11.242" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231128 19:57:11.564" level="INFO">${rc} = 0</msg>
<msg timestamp="20231128 19:57:11.564" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231128 19:57:11.240" endtime="20231128 19:57:11.564"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231128 19:57:11.565" level="INFO"/>
<status status="PASS" starttime="20231128 19:57:11.565" endtime="20231128 19:57:11.565"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231128 19:57:11.566" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231128 19:57:11.565" endtime="20231128 19:57:11.566"/>
</kw>
<status status="PASS" starttime="20231128 19:57:11.240" endtime="20231128 19:57:11.566"/>
</kw>
<msg timestamp="20231128 19:57:11.566" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231128 19:57:11.240" endtime="20231128 19:57:11.566"/>
</kw>
<status status="PASS" starttime="20231128 19:57:11.239" endtime="20231128 19:57:11.566"/>
</kw>
<status status="PASS" starttime="20231128 19:57:10.228" endtime="20231128 19:57:11.566"/>
</kw>
<status status="PASS" starttime="20231128 19:57:10.228" endtime="20231128 19:57:11.567"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231128 19:57:10.227" endtime="20231128 19:57:11.567"/>
</test>
<test id="s1-s3-t3" name="Read key created with Ozone Shell using S3 API" line="40">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231128 19:57:11.570" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231128 19:57:12.053" level="INFO">${rc} = 0</msg>
<msg timestamp="20231128 19:57:12.054" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 28 Nov 2023 19:57:01 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231128 19:57:11.568" endtime="20231128 19:57:12.054"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231128 19:57:12.054" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 28 Nov 2023 19:57:01 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 28 Nov 2023 19:57:11 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231128 19:57:12.054" endtime="20231128 19:57:12.054"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231128 19:57:12.055" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231128 19:57:12.055" endtime="20231128 19:57:12.055"/>
</kw>
<msg timestamp="20231128 19:57:12.055" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 28 Nov 2023 19:57:01 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231128 19:57:11.568" endtime="20231128 19:57:12.055"/>
</kw>
<msg timestamp="20231128 19:57:12.055" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 28 Nov 2023 19:57:01 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231128 19:57:11.568" endtime="20231128 19:57:12.055"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231128 19:57:12.056" endtime="20231128 19:57:12.056"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231128 19:57:12.058" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231128 19:57:12.059" level="INFO">${rc} = 0</msg>
<msg timestamp="20231128 19:57:12.059" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231128 19:57:12.056" endtime="20231128 19:57:12.059"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231128 19:57:12.060" level="INFO">old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231128 19:57:12.059" endtime="20231128 19:57:12.060"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231128 19:57:12.060" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231128 19:57:12.060" endtime="20231128 19:57:12.060"/>
</kw>
<msg timestamp="20231128 19:57:12.060" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20231128 19:57:12.056" endtime="20231128 19:57:12.061"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231128 19:57:12.061" endtime="20231128 19:57:12.061"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231128 19:57:12.062" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231128 19:57:12.064" level="INFO">${rc} = 0</msg>
<msg timestamp="20231128 19:57:12.064" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231128 19:57:12.061" endtime="20231128 19:57:12.064"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231128 19:57:12.064" level="INFO"/>
<status status="PASS" starttime="20231128 19:57:12.064" endtime="20231128 19:57:12.064"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231128 19:57:12.065" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231128 19:57:12.065" endtime="20231128 19:57:12.065"/>
</kw>
<status status="PASS" starttime="20231128 19:57:12.061" endtime="20231128 19:57:12.065"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231128 19:57:11.567" endtime="20231128 19:57:12.065"/>
</test>
<test id="s1-s3-t4" name="Read key created with S3 API using S3 API" line="47">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231128 19:57:12.068" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231128 19:57:12.491" level="INFO">${rc} = 0</msg>
<msg timestamp="20231128 19:57:12.492" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 28 Nov 2023 19:57:05 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231128 19:57:12.067" endtime="20231128 19:57:12.492"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231128 19:57:12.492" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 28 Nov 2023 19:57:05 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Tue, 28 Nov 2023 19:57:12 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231128 19:57:12.492" endtime="20231128 19:57:12.492"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231128 19:57:12.493" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231128 19:57:12.493" endtime="20231128 19:57:12.493"/>
</kw>
<msg timestamp="20231128 19:57:12.493" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 28 Nov 2023 19:57:05 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231128 19:57:12.067" endtime="20231128 19:57:12.493"/>
</kw>
<msg timestamp="20231128 19:57:12.494" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Tue, 28 Nov 2023 19:57:05 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20231128 19:57:12.066" endtime="20231128 19:57:12.494"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231128 19:57:12.494" endtime="20231128 19:57:12.494"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231128 19:57:12.496" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231128 19:57:12.497" level="INFO">${rc} = 0</msg>
<msg timestamp="20231128 19:57:12.497" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20231128 19:57:12.494" endtime="20231128 19:57:12.497"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231128 19:57:12.498" level="INFO">old1: key created using S3 API</msg>
<status status="PASS" starttime="20231128 19:57:12.497" endtime="20231128 19:57:12.498"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231128 19:57:12.498" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231128 19:57:12.498" endtime="20231128 19:57:12.498"/>
</kw>
<msg timestamp="20231128 19:57:12.498" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20231128 19:57:12.494" endtime="20231128 19:57:12.498"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231128 19:57:12.499" endtime="20231128 19:57:12.499"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231128 19:57:12.500" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231128 19:57:12.502" level="INFO">${rc} = 0</msg>
<msg timestamp="20231128 19:57:12.502" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231128 19:57:12.499" endtime="20231128 19:57:12.502"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231128 19:57:12.502" level="INFO"/>
<status status="PASS" starttime="20231128 19:57:12.502" endtime="20231128 19:57:12.502"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231128 19:57:12.503" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231128 19:57:12.502" endtime="20231128 19:57:12.503"/>
</kw>
<status status="PASS" starttime="20231128 19:57:12.499" endtime="20231128 19:57:12.503"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231128 19:57:12.066" endtime="20231128 19:57:12.503"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20231128 19:57:07.102" endtime="20231128 19:57:12.504"/>
</suite>
<suite id="s1-s4" name="Prepare" source="/opt/ozone/smoketest/upgrade/prepare.robot">
<test id="s1-s4-t1" name="Prepare Ozone Manager" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231128 19:57:14.487" endtime="20231128 19:57:14.487"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM prepare is skipped for version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20231128 19:57:14.487" endtime="20231128 19:57:14.487"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231128 19:57:14.490" level="INFO">Running command 'ozone admin om prepare -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231128 20:02:14.487" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20231128 19:57:14.488" endtime="20231128 20:02:14.487"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20231128 20:02:14.487" endtime="20231128 20:02:14.487"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20231128 20:02:14.487" endtime="20231128 20:02:14.487"/>
</kw>
<status status="FAIL" starttime="20231128 19:57:14.488" endtime="20231128 20:02:14.488"/>
</kw>
<msg timestamp="20231128 20:02:14.488" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20231128 19:57:14.488" endtime="20231128 20:02:14.489"/>
</kw>
<status status="FAIL" starttime="20231128 19:57:14.487" endtime="20231128 20:02:14.489"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20231128 20:02:14.489" endtime="20231128 20:02:14.489"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20231128 19:57:14.486" endtime="20231128 20:02:14.489">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Prepares OMs</doc>
<status status="FAIL" starttime="20231128 19:57:14.453" endtime="20231128 20:02:14.490"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="325823"/>
</suite>
<statistics>
<total>
<stat pass="13" fail="1" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="2" fail="0" skip="0">create-volume-and-bucket</stat>
<stat pass="2" fail="0" skip="0">finalized</stat>
<stat pass="1" fail="0" skip="0">om</stat>
<stat pass="1" fail="0" skip="0">scm</stat>
</tag>
<suite>
<stat pass="13" fail="1" skip="0" id="s1" name="upgrade">upgrade</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1" name="Check-Finalization">upgrade.Check-Finalization</stat>
<stat pass="7" fail="0" skip="0" id="s1-s2" name="Generate">upgrade.Generate</stat>
<stat pass="4" fail="0" skip="0" id="s1-s3" name="Validate">upgrade.Validate</stat>
<stat pass="0" fail="1" skip="0" id="s1-s4" name="Prepare">upgrade.Prepare</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
