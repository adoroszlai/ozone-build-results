<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20231121 10:52:12.782" rpa="false" schemaversion="4">
<suite id="s1" name="ozone-legacy-bucket" source="/opt/hadoop/smoketest/recon/recon-nssummary.robot">
<test id="s1-t1" name="Check volume creation" line="99">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231121 10:51:08.862" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20231121 10:51:08.865" level="INFO">${rc} = 0</msg>
<msg timestamp="20231121 10:51:08.865" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20231121 10:51:08.861" endtime="20231121 10:51:08.865"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 10:51:08.865" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20231121 10:51:08.865" endtime="20231121 10:51:08.865"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231121 10:51:08.866" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231121 10:51:08.866" endtime="20231121 10:51:08.866"/>
</kw>
<status status="PASS" starttime="20231121 10:51:08.860" endtime="20231121 10:51:08.866"/>
</kw>
<msg timestamp="20231121 10:51:08.866" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231121 10:51:08.860" endtime="20231121 10:51:08.866"/>
</kw>
<status status="PASS" starttime="20231121 10:51:08.859" endtime="20231121 10:51:08.866"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231121 10:51:08.867" endtime="20231121 10:51:08.867"/>
</kw>
<status status="PASS" starttime="20231121 10:51:08.867" endtime="20231121 10:51:08.867"/>
</kw>
<kw name="Create volume">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231121 10:51:08.868" level="INFO">${random} = dclmv</msg>
<status status="PASS" starttime="20231121 10:51:08.868" endtime="20231121 10:51:08.868"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${VOLUME}</arg>
<arg>vol-${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231121 10:51:08.868" level="INFO">${VOLUME} = vol-dclmv</msg>
<status status="PASS" starttime="20231121 10:51:08.868" endtime="20231121 10:51:08.868"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${VOLUME}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231121 10:51:08.871" level="INFO">Running command 'ozone sh volume create /vol-dclmv 2&gt;&amp;1'.</msg>
<msg timestamp="20231121 10:51:13.145" level="INFO">${rc} = 0</msg>
<msg timestamp="20231121 10:51:13.145" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 10:51:08.870" endtime="20231121 10:51:13.146"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 10:51:13.146" level="INFO"/>
<status status="PASS" starttime="20231121 10:51:13.146" endtime="20231121 10:51:13.146"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231121 10:51:13.147" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231121 10:51:13.147" endtime="20231121 10:51:13.147"/>
</kw>
<status status="PASS" starttime="20231121 10:51:08.869" endtime="20231121 10:51:13.147"/>
</kw>
<msg timestamp="20231121 10:51:13.147" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231121 10:51:08.869" endtime="20231121 10:51:13.147"/>
</kw>
<msg timestamp="20231121 10:51:13.147" level="INFO">${result} = </msg>
<status status="PASS" starttime="20231121 10:51:08.869" endtime="20231121 10:51:13.147"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231121 10:51:13.148" endtime="20231121 10:51:13.148"/>
</kw>
<status status="PASS" starttime="20231121 10:51:08.867" endtime="20231121 10:51:13.148"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231121 10:51:08.859" endtime="20231121 10:51:13.148"/>
</test>
<test id="s1-t2" name="Check bucket creation" line="104">
<kw name="Create bucket">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231121 10:51:13.150" level="INFO">${random} = vrvjh</msg>
<status status="PASS" starttime="20231121 10:51:13.150" endtime="20231121 10:51:13.150"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<arg>buc-${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231121 10:51:13.150" level="INFO">${BUCKET} = buc-vrvjh</msg>
<status status="PASS" starttime="20231121 10:51:13.150" endtime="20231121 10:51:13.150"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create -l ${BUCKET_LAYOUT} /${VOLUME}/${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231121 10:51:13.153" level="INFO">Running command 'ozone sh bucket create -l LEGACY /vol-dclmv/buc-vrvjh 2&gt;&amp;1'.</msg>
<msg timestamp="20231121 10:51:16.758" level="INFO">${rc} = 0</msg>
<msg timestamp="20231121 10:51:16.758" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 10:51:13.152" endtime="20231121 10:51:16.758"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 10:51:16.759" level="INFO"/>
<status status="PASS" starttime="20231121 10:51:16.759" endtime="20231121 10:51:16.759"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231121 10:51:16.760" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231121 10:51:16.759" endtime="20231121 10:51:16.760"/>
</kw>
<status status="PASS" starttime="20231121 10:51:13.151" endtime="20231121 10:51:16.760"/>
</kw>
<msg timestamp="20231121 10:51:16.760" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231121 10:51:13.151" endtime="20231121 10:51:16.760"/>
</kw>
<msg timestamp="20231121 10:51:16.760" level="INFO">${result} = </msg>
<status status="PASS" starttime="20231121 10:51:13.151" endtime="20231121 10:51:16.760"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231121 10:51:16.760" endtime="20231121 10:51:16.761"/>
</kw>
<status status="PASS" starttime="20231121 10:51:13.149" endtime="20231121 10:51:16.761"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231121 10:51:13.149" endtime="20231121 10:51:16.761"/>
</test>
<test id="s1-t3" name="Check keys creation" line="107">
<kw name="Create keys">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${VOLUME}/${BUCKET}/file1 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231121 10:51:16.765" level="INFO">Running command 'ozone sh key put /vol-dclmv/buc-vrvjh/file1 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20231121 10:51:23.495" level="INFO">${rc} = 0</msg>
<msg timestamp="20231121 10:51:23.495" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 10:51:16.763" endtime="20231121 10:51:23.495"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 10:51:23.495" level="INFO"/>
<status status="PASS" starttime="20231121 10:51:23.495" endtime="20231121 10:51:23.496"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231121 10:51:23.496" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231121 10:51:23.496" endtime="20231121 10:51:23.496"/>
</kw>
<status status="PASS" starttime="20231121 10:51:16.763" endtime="20231121 10:51:23.496"/>
</kw>
<msg timestamp="20231121 10:51:23.496" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231121 10:51:16.763" endtime="20231121 10:51:23.496"/>
</kw>
<msg timestamp="20231121 10:51:23.497" level="INFO">${result} = </msg>
<status status="PASS" starttime="20231121 10:51:16.762" endtime="20231121 10:51:23.497"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231121 10:51:23.497" endtime="20231121 10:51:23.497"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${VOLUME}/${BUCKET}/dir1/dir2/file2 HISTORY.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231121 10:51:23.500" level="INFO">Running command 'ozone sh key put /vol-dclmv/buc-vrvjh/dir1/dir2/file2 HISTORY.md 2&gt;&amp;1'.</msg>
<msg timestamp="20231121 10:51:28.625" level="INFO">${rc} = 0</msg>
<msg timestamp="20231121 10:51:28.625" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231121 10:51:23.498" endtime="20231121 10:51:28.625"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 10:51:28.626" level="INFO"/>
<status status="PASS" starttime="20231121 10:51:28.626" endtime="20231121 10:51:28.626"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231121 10:51:28.627" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231121 10:51:28.626" endtime="20231121 10:51:28.627"/>
</kw>
<status status="PASS" starttime="20231121 10:51:23.498" endtime="20231121 10:51:28.627"/>
</kw>
<msg timestamp="20231121 10:51:28.627" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231121 10:51:23.498" endtime="20231121 10:51:28.627"/>
</kw>
<msg timestamp="20231121 10:51:28.627" level="INFO">${result} = </msg>
<status status="PASS" starttime="20231121 10:51:23.497" endtime="20231121 10:51:28.627"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231121 10:51:28.627" endtime="20231121 10:51:28.628"/>
</kw>
<status status="PASS" starttime="20231121 10:51:16.762" endtime="20231121 10:51:28.628"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231121 10:51:16.761" endtime="20231121 10:51:28.628"/>
</test>
<test id="s1-t4" name="Check Summary api access" line="110">
<kw name="Check Access">
<arg>${SUMMARY_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231121 10:51:28.633" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20231121 10:51:28.635" level="INFO">${rc} = 0</msg>
<msg timestamp="20231121 10:51:28.635" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20231121 10:51:28.631" endtime="20231121 10:51:28.635"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 10:51:28.636" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20231121 10:51:28.635" endtime="20231121 10:51:28.636"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231121 10:51:28.636" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231121 10:51:28.636" endtime="20231121 10:51:28.636"/>
</kw>
<status status="PASS" starttime="20231121 10:51:28.631" endtime="20231121 10:51:28.636"/>
</kw>
<msg timestamp="20231121 10:51:28.636" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231121 10:51:28.630" endtime="20231121 10:51:28.636"/>
</kw>
<status status="PASS" starttime="20231121 10:51:28.629" endtime="20231121 10:51:28.636"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231121 10:51:28.639" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231121 10:51:28.767" level="INFO">${rc} = 0</msg>
<msg timestamp="20231121 10:51:28.767" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20231121 10:51:28.638" endtime="20231121 10:51:28.767"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 10:51:28.768" level="INFO">200</msg>
<status status="PASS" starttime="20231121 10:51:28.768" endtime="20231121 10:51:28.769"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231121 10:51:28.769" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231121 10:51:28.769" endtime="20231121 10:51:28.769"/>
</kw>
<status status="PASS" starttime="20231121 10:51:28.638" endtime="20231121 10:51:28.769"/>
</kw>
<msg timestamp="20231121 10:51:28.769" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231121 10:51:28.637" endtime="20231121 10:51:28.769"/>
</kw>
<msg timestamp="20231121 10:51:28.770" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20231121 10:51:28.637" endtime="20231121 10:51:28.770"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231121 10:51:28.770" endtime="20231121 10:51:28.770"/>
</kw>
<status status="NOT RUN" starttime="20231121 10:51:28.770" endtime="20231121 10:51:28.770"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231121 10:51:28.770" endtime="20231121 10:51:28.771"/>
</kw>
<status status="PASS" starttime="20231121 10:51:28.770" endtime="20231121 10:51:28.771"/>
</branch>
<status status="PASS" starttime="20231121 10:51:28.770" endtime="20231121 10:51:28.771"/>
</if>
<status status="PASS" starttime="20231121 10:51:28.637" endtime="20231121 10:51:28.771"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231121 10:51:28.771" endtime="20231121 10:51:28.771"/>
</kw>
<status status="PASS" starttime="20231121 10:51:28.771" endtime="20231121 10:51:28.772"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231121 10:51:28.774" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231121 10:51:28.786" level="INFO">${rc} = 0</msg>
<msg timestamp="20231121 10:51:28.786" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20231121 10:51:28.773" endtime="20231121 10:51:28.786"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 10:51:28.787" level="INFO">200</msg>
<status status="PASS" starttime="20231121 10:51:28.786" endtime="20231121 10:51:28.787"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231121 10:51:28.787" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231121 10:51:28.787" endtime="20231121 10:51:28.787"/>
</kw>
<status status="PASS" starttime="20231121 10:51:28.773" endtime="20231121 10:51:28.787"/>
</kw>
<msg timestamp="20231121 10:51:28.787" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231121 10:51:28.772" endtime="20231121 10:51:28.787"/>
</kw>
<msg timestamp="20231121 10:51:28.788" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20231121 10:51:28.772" endtime="20231121 10:51:28.788"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231121 10:51:28.788" endtime="20231121 10:51:28.788"/>
</kw>
<status status="NOT RUN" starttime="20231121 10:51:28.788" endtime="20231121 10:51:28.788"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231121 10:51:28.788" endtime="20231121 10:51:28.789"/>
</kw>
<status status="PASS" starttime="20231121 10:51:28.788" endtime="20231121 10:51:28.789"/>
</branch>
<status status="PASS" starttime="20231121 10:51:28.788" endtime="20231121 10:51:28.789"/>
</if>
<status status="PASS" starttime="20231121 10:51:28.772" endtime="20231121 10:51:28.789"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231121 10:51:28.789" endtime="20231121 10:51:28.789"/>
</kw>
<status status="PASS" starttime="20231121 10:51:28.789" endtime="20231121 10:51:28.789"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231121 10:51:28.792" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231121 10:51:28.803" level="INFO">${rc} = 0</msg>
<msg timestamp="20231121 10:51:28.803" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20231121 10:51:28.791" endtime="20231121 10:51:28.803"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 10:51:28.803" level="INFO">200</msg>
<status status="PASS" starttime="20231121 10:51:28.803" endtime="20231121 10:51:28.804"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231121 10:51:28.804" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231121 10:51:28.804" endtime="20231121 10:51:28.804"/>
</kw>
<status status="PASS" starttime="20231121 10:51:28.791" endtime="20231121 10:51:28.804"/>
</kw>
<msg timestamp="20231121 10:51:28.804" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231121 10:51:28.790" endtime="20231121 10:51:28.804"/>
</kw>
<msg timestamp="20231121 10:51:28.805" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20231121 10:51:28.790" endtime="20231121 10:51:28.805"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231121 10:51:28.805" endtime="20231121 10:51:28.805"/>
</kw>
<status status="NOT RUN" starttime="20231121 10:51:28.805" endtime="20231121 10:51:28.805"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231121 10:51:28.805" endtime="20231121 10:51:28.806"/>
</kw>
<status status="PASS" starttime="20231121 10:51:28.805" endtime="20231121 10:51:28.806"/>
</branch>
<status status="PASS" starttime="20231121 10:51:28.805" endtime="20231121 10:51:28.806"/>
</if>
<status status="PASS" starttime="20231121 10:51:28.790" endtime="20231121 10:51:28.806"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231121 10:51:28.806" endtime="20231121 10:51:28.806"/>
</kw>
<status status="PASS" starttime="20231121 10:51:28.806" endtime="20231121 10:51:28.807"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231121 10:51:28.809" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231121 10:51:28.819" level="INFO">${rc} = 0</msg>
<msg timestamp="20231121 10:51:28.819" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20231121 10:51:28.808" endtime="20231121 10:51:28.819"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 10:51:28.820" level="INFO">200</msg>
<status status="PASS" starttime="20231121 10:51:28.819" endtime="20231121 10:51:28.820"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231121 10:51:28.820" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231121 10:51:28.820" endtime="20231121 10:51:28.820"/>
</kw>
<status status="PASS" starttime="20231121 10:51:28.808" endtime="20231121 10:51:28.821"/>
</kw>
<msg timestamp="20231121 10:51:28.821" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231121 10:51:28.807" endtime="20231121 10:51:28.821"/>
</kw>
<msg timestamp="20231121 10:51:28.821" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20231121 10:51:28.807" endtime="20231121 10:51:28.821"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231121 10:51:28.821" endtime="20231121 10:51:28.821"/>
</kw>
<status status="NOT RUN" starttime="20231121 10:51:28.821" endtime="20231121 10:51:28.821"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231121 10:51:28.821" endtime="20231121 10:51:28.822"/>
</kw>
<status status="PASS" starttime="20231121 10:51:28.821" endtime="20231121 10:51:28.822"/>
</branch>
<status status="PASS" starttime="20231121 10:51:28.821" endtime="20231121 10:51:28.822"/>
</if>
<status status="PASS" starttime="20231121 10:51:28.807" endtime="20231121 10:51:28.822"/>
</kw>
<status status="PASS" starttime="20231121 10:51:28.629" endtime="20231121 10:51:28.822"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231121 10:51:28.628" endtime="20231121 10:51:28.822"/>
</test>
<test id="s1-t5" name="Check Disk Usage api access" line="113">
<kw name="Check Access">
<arg>${DISK_USAGE_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231121 10:51:28.826" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20231121 10:51:28.828" level="INFO">${rc} = 0</msg>
<msg timestamp="20231121 10:51:28.828" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20231121 10:51:28.824" endtime="20231121 10:51:28.828"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 10:51:28.829" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20231121 10:51:28.828" endtime="20231121 10:51:28.829"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231121 10:51:28.829" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231121 10:51:28.829" endtime="20231121 10:51:28.829"/>
</kw>
<status status="PASS" starttime="20231121 10:51:28.824" endtime="20231121 10:51:28.829"/>
</kw>
<msg timestamp="20231121 10:51:28.829" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231121 10:51:28.824" endtime="20231121 10:51:28.830"/>
</kw>
<status status="PASS" starttime="20231121 10:51:28.824" endtime="20231121 10:51:28.830"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231121 10:51:28.833" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231121 10:51:28.847" level="INFO">${rc} = 0</msg>
<msg timestamp="20231121 10:51:28.847" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20231121 10:51:28.831" endtime="20231121 10:51:28.847"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 10:51:28.848" level="INFO">200</msg>
<status status="PASS" starttime="20231121 10:51:28.847" endtime="20231121 10:51:28.848"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231121 10:51:28.848" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231121 10:51:28.848" endtime="20231121 10:51:28.848"/>
</kw>
<status status="PASS" starttime="20231121 10:51:28.831" endtime="20231121 10:51:28.849"/>
</kw>
<msg timestamp="20231121 10:51:28.849" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231121 10:51:28.831" endtime="20231121 10:51:28.849"/>
</kw>
<msg timestamp="20231121 10:51:28.849" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20231121 10:51:28.830" endtime="20231121 10:51:28.849"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231121 10:51:28.849" endtime="20231121 10:51:28.849"/>
</kw>
<status status="NOT RUN" starttime="20231121 10:51:28.849" endtime="20231121 10:51:28.849"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231121 10:51:28.850" endtime="20231121 10:51:28.850"/>
</kw>
<status status="PASS" starttime="20231121 10:51:28.849" endtime="20231121 10:51:28.850"/>
</branch>
<status status="PASS" starttime="20231121 10:51:28.849" endtime="20231121 10:51:28.850"/>
</if>
<status status="PASS" starttime="20231121 10:51:28.830" endtime="20231121 10:51:28.850"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231121 10:51:28.850" endtime="20231121 10:51:28.851"/>
</kw>
<status status="PASS" starttime="20231121 10:51:28.850" endtime="20231121 10:51:28.851"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231121 10:51:28.854" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231121 10:51:28.864" level="INFO">${rc} = 0</msg>
<msg timestamp="20231121 10:51:28.864" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20231121 10:51:28.852" endtime="20231121 10:51:28.864"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 10:51:28.864" level="INFO">200</msg>
<status status="PASS" starttime="20231121 10:51:28.864" endtime="20231121 10:51:28.864"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231121 10:51:28.865" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231121 10:51:28.864" endtime="20231121 10:51:28.865"/>
</kw>
<status status="PASS" starttime="20231121 10:51:28.852" endtime="20231121 10:51:28.865"/>
</kw>
<msg timestamp="20231121 10:51:28.865" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231121 10:51:28.852" endtime="20231121 10:51:28.865"/>
</kw>
<msg timestamp="20231121 10:51:28.865" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20231121 10:51:28.851" endtime="20231121 10:51:28.865"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231121 10:51:28.866" endtime="20231121 10:51:28.866"/>
</kw>
<status status="NOT RUN" starttime="20231121 10:51:28.865" endtime="20231121 10:51:28.866"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231121 10:51:28.866" endtime="20231121 10:51:28.866"/>
</kw>
<status status="PASS" starttime="20231121 10:51:28.866" endtime="20231121 10:51:28.866"/>
</branch>
<status status="PASS" starttime="20231121 10:51:28.865" endtime="20231121 10:51:28.866"/>
</if>
<status status="PASS" starttime="20231121 10:51:28.851" endtime="20231121 10:51:28.867"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231121 10:51:28.867" endtime="20231121 10:51:28.867"/>
</kw>
<status status="PASS" starttime="20231121 10:51:28.867" endtime="20231121 10:51:28.867"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231121 10:51:28.870" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231121 10:51:28.879" level="INFO">${rc} = 0</msg>
<msg timestamp="20231121 10:51:28.880" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20231121 10:51:28.869" endtime="20231121 10:51:28.880"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 10:51:28.880" level="INFO">200</msg>
<status status="PASS" starttime="20231121 10:51:28.880" endtime="20231121 10:51:28.880"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231121 10:51:28.881" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231121 10:51:28.880" endtime="20231121 10:51:28.881"/>
</kw>
<status status="PASS" starttime="20231121 10:51:28.868" endtime="20231121 10:51:28.881"/>
</kw>
<msg timestamp="20231121 10:51:28.881" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231121 10:51:28.868" endtime="20231121 10:51:28.881"/>
</kw>
<msg timestamp="20231121 10:51:28.881" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20231121 10:51:28.868" endtime="20231121 10:51:28.881"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231121 10:51:28.882" endtime="20231121 10:51:28.882"/>
</kw>
<status status="NOT RUN" starttime="20231121 10:51:28.881" endtime="20231121 10:51:28.882"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231121 10:51:28.882" endtime="20231121 10:51:28.882"/>
</kw>
<status status="PASS" starttime="20231121 10:51:28.882" endtime="20231121 10:51:28.882"/>
</branch>
<status status="PASS" starttime="20231121 10:51:28.881" endtime="20231121 10:51:28.882"/>
</if>
<status status="PASS" starttime="20231121 10:51:28.867" endtime="20231121 10:51:28.882"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231121 10:51:28.883" endtime="20231121 10:51:28.883"/>
</kw>
<status status="PASS" starttime="20231121 10:51:28.882" endtime="20231121 10:51:28.883"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231121 10:51:28.886" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231121 10:51:28.895" level="INFO">${rc} = 0</msg>
<msg timestamp="20231121 10:51:28.895" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20231121 10:51:28.885" endtime="20231121 10:51:28.896"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 10:51:28.896" level="INFO">200</msg>
<status status="PASS" starttime="20231121 10:51:28.896" endtime="20231121 10:51:28.896"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231121 10:51:28.897" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231121 10:51:28.896" endtime="20231121 10:51:28.897"/>
</kw>
<status status="PASS" starttime="20231121 10:51:28.884" endtime="20231121 10:51:28.897"/>
</kw>
<msg timestamp="20231121 10:51:28.897" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231121 10:51:28.884" endtime="20231121 10:51:28.897"/>
</kw>
<msg timestamp="20231121 10:51:28.897" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20231121 10:51:28.884" endtime="20231121 10:51:28.897"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231121 10:51:28.898" endtime="20231121 10:51:28.898"/>
</kw>
<status status="NOT RUN" starttime="20231121 10:51:28.897" endtime="20231121 10:51:28.898"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231121 10:51:28.898" endtime="20231121 10:51:28.898"/>
</kw>
<status status="PASS" starttime="20231121 10:51:28.898" endtime="20231121 10:51:28.898"/>
</branch>
<status status="PASS" starttime="20231121 10:51:28.897" endtime="20231121 10:51:28.898"/>
</if>
<status status="PASS" starttime="20231121 10:51:28.883" endtime="20231121 10:51:28.898"/>
</kw>
<status status="PASS" starttime="20231121 10:51:28.823" endtime="20231121 10:51:28.898"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231121 10:51:28.823" endtime="20231121 10:51:28.899"/>
</test>
<test id="s1-t6" name="Check Quota Usage api access" line="116">
<kw name="Check Access">
<arg>${QUOTA_USAGE_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231121 10:51:28.902" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20231121 10:51:28.904" level="INFO">${rc} = 0</msg>
<msg timestamp="20231121 10:51:28.904" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20231121 10:51:28.901" endtime="20231121 10:51:28.904"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 10:51:28.905" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20231121 10:51:28.905" endtime="20231121 10:51:28.905"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231121 10:51:28.906" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231121 10:51:28.905" endtime="20231121 10:51:28.906"/>
</kw>
<status status="PASS" starttime="20231121 10:51:28.900" endtime="20231121 10:51:28.906"/>
</kw>
<msg timestamp="20231121 10:51:28.906" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231121 10:51:28.900" endtime="20231121 10:51:28.906"/>
</kw>
<status status="PASS" starttime="20231121 10:51:28.900" endtime="20231121 10:51:28.906"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231121 10:51:28.909" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231121 10:51:28.921" level="INFO">${rc} = 0</msg>
<msg timestamp="20231121 10:51:28.921" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20231121 10:51:28.907" endtime="20231121 10:51:28.921"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 10:51:28.921" level="INFO">200</msg>
<status status="PASS" starttime="20231121 10:51:28.921" endtime="20231121 10:51:28.921"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231121 10:51:28.922" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231121 10:51:28.921" endtime="20231121 10:51:28.922"/>
</kw>
<status status="PASS" starttime="20231121 10:51:28.907" endtime="20231121 10:51:28.922"/>
</kw>
<msg timestamp="20231121 10:51:28.922" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231121 10:51:28.907" endtime="20231121 10:51:28.922"/>
</kw>
<msg timestamp="20231121 10:51:28.922" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20231121 10:51:28.906" endtime="20231121 10:51:28.922"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231121 10:51:28.923" endtime="20231121 10:51:28.923"/>
</kw>
<status status="NOT RUN" starttime="20231121 10:51:28.922" endtime="20231121 10:51:28.923"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231121 10:51:28.923" endtime="20231121 10:51:28.923"/>
</kw>
<status status="PASS" starttime="20231121 10:51:28.923" endtime="20231121 10:51:28.923"/>
</branch>
<status status="PASS" starttime="20231121 10:51:28.922" endtime="20231121 10:51:28.923"/>
</if>
<status status="PASS" starttime="20231121 10:51:28.906" endtime="20231121 10:51:28.923"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231121 10:51:28.924" endtime="20231121 10:51:28.924"/>
</kw>
<status status="PASS" starttime="20231121 10:51:28.923" endtime="20231121 10:51:28.924"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231121 10:51:28.927" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231121 10:51:28.937" level="INFO">${rc} = 0</msg>
<msg timestamp="20231121 10:51:28.937" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20231121 10:51:28.926" endtime="20231121 10:51:28.937"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 10:51:28.938" level="INFO">200</msg>
<status status="PASS" starttime="20231121 10:51:28.937" endtime="20231121 10:51:28.938"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231121 10:51:28.938" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231121 10:51:28.938" endtime="20231121 10:51:28.938"/>
</kw>
<status status="PASS" starttime="20231121 10:51:28.925" endtime="20231121 10:51:28.938"/>
</kw>
<msg timestamp="20231121 10:51:28.938" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231121 10:51:28.925" endtime="20231121 10:51:28.939"/>
</kw>
<msg timestamp="20231121 10:51:28.939" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20231121 10:51:28.925" endtime="20231121 10:51:28.939"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231121 10:51:28.939" endtime="20231121 10:51:28.939"/>
</kw>
<status status="NOT RUN" starttime="20231121 10:51:28.939" endtime="20231121 10:51:28.939"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231121 10:51:28.939" endtime="20231121 10:51:28.940"/>
</kw>
<status status="PASS" starttime="20231121 10:51:28.939" endtime="20231121 10:51:28.940"/>
</branch>
<status status="PASS" starttime="20231121 10:51:28.939" endtime="20231121 10:51:28.940"/>
</if>
<status status="PASS" starttime="20231121 10:51:28.924" endtime="20231121 10:51:28.940"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231121 10:51:28.940" endtime="20231121 10:51:28.941"/>
</kw>
<status status="PASS" starttime="20231121 10:51:28.940" endtime="20231121 10:51:28.941"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231121 10:51:28.943" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231121 10:51:28.953" level="INFO">${rc} = 0</msg>
<msg timestamp="20231121 10:51:28.953" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20231121 10:51:28.942" endtime="20231121 10:51:28.953"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 10:51:28.953" level="INFO">200</msg>
<status status="PASS" starttime="20231121 10:51:28.953" endtime="20231121 10:51:28.953"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231121 10:51:28.954" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231121 10:51:28.954" endtime="20231121 10:51:28.954"/>
</kw>
<status status="PASS" starttime="20231121 10:51:28.942" endtime="20231121 10:51:28.954"/>
</kw>
<msg timestamp="20231121 10:51:28.954" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231121 10:51:28.941" endtime="20231121 10:51:28.954"/>
</kw>
<msg timestamp="20231121 10:51:28.954" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20231121 10:51:28.941" endtime="20231121 10:51:28.954"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231121 10:51:28.955" endtime="20231121 10:51:28.955"/>
</kw>
<status status="NOT RUN" starttime="20231121 10:51:28.955" endtime="20231121 10:51:28.955"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231121 10:51:28.955" endtime="20231121 10:51:28.955"/>
</kw>
<status status="PASS" starttime="20231121 10:51:28.955" endtime="20231121 10:51:28.955"/>
</branch>
<status status="PASS" starttime="20231121 10:51:28.954" endtime="20231121 10:51:28.955"/>
</if>
<status status="PASS" starttime="20231121 10:51:28.941" endtime="20231121 10:51:28.955"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231121 10:51:28.956" endtime="20231121 10:51:28.956"/>
</kw>
<status status="PASS" starttime="20231121 10:51:28.956" endtime="20231121 10:51:28.956"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231121 10:51:28.959" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231121 10:51:28.968" level="INFO">${rc} = 0</msg>
<msg timestamp="20231121 10:51:28.968" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20231121 10:51:28.958" endtime="20231121 10:51:28.968"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 10:51:28.969" level="INFO">200</msg>
<status status="PASS" starttime="20231121 10:51:28.969" endtime="20231121 10:51:28.969"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231121 10:51:28.970" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231121 10:51:28.969" endtime="20231121 10:51:28.970"/>
</kw>
<status status="PASS" starttime="20231121 10:51:28.957" endtime="20231121 10:51:28.970"/>
</kw>
<msg timestamp="20231121 10:51:28.970" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231121 10:51:28.957" endtime="20231121 10:51:28.970"/>
</kw>
<msg timestamp="20231121 10:51:28.970" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20231121 10:51:28.957" endtime="20231121 10:51:28.970"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231121 10:51:28.971" endtime="20231121 10:51:28.971"/>
</kw>
<status status="NOT RUN" starttime="20231121 10:51:28.970" endtime="20231121 10:51:28.971"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231121 10:51:28.971" endtime="20231121 10:51:28.971"/>
</kw>
<status status="PASS" starttime="20231121 10:51:28.971" endtime="20231121 10:51:28.971"/>
</branch>
<status status="PASS" starttime="20231121 10:51:28.970" endtime="20231121 10:51:28.971"/>
</if>
<status status="PASS" starttime="20231121 10:51:28.956" endtime="20231121 10:51:28.971"/>
</kw>
<status status="PASS" starttime="20231121 10:51:28.900" endtime="20231121 10:51:28.971"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231121 10:51:28.899" endtime="20231121 10:51:28.972"/>
</test>
<test id="s1-t7" name="Check File Size Distribution api access" line="119">
<kw name="Check Access">
<arg>${FILE_SIZE_DIST_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231121 10:51:28.975" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20231121 10:51:28.978" level="INFO">${rc} = 0</msg>
<msg timestamp="20231121 10:51:28.978" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20231121 10:51:28.974" endtime="20231121 10:51:28.978"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 10:51:28.978" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20231121 10:51:28.978" endtime="20231121 10:51:28.978"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231121 10:51:28.979" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231121 10:51:28.978" endtime="20231121 10:51:28.979"/>
</kw>
<status status="PASS" starttime="20231121 10:51:28.974" endtime="20231121 10:51:28.979"/>
</kw>
<msg timestamp="20231121 10:51:28.979" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231121 10:51:28.973" endtime="20231121 10:51:28.979"/>
</kw>
<status status="PASS" starttime="20231121 10:51:28.973" endtime="20231121 10:51:28.979"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231121 10:51:28.982" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231121 10:51:28.998" level="INFO">${rc} = 0</msg>
<msg timestamp="20231121 10:51:28.998" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20231121 10:51:28.981" endtime="20231121 10:51:28.998"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 10:51:28.999" level="INFO">200</msg>
<status status="PASS" starttime="20231121 10:51:28.998" endtime="20231121 10:51:28.999"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231121 10:51:28.999" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231121 10:51:28.999" endtime="20231121 10:51:29.000"/>
</kw>
<status status="PASS" starttime="20231121 10:51:28.980" endtime="20231121 10:51:29.000"/>
</kw>
<msg timestamp="20231121 10:51:29.000" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231121 10:51:28.980" endtime="20231121 10:51:29.000"/>
</kw>
<msg timestamp="20231121 10:51:29.000" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20231121 10:51:28.980" endtime="20231121 10:51:29.000"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231121 10:51:29.001" endtime="20231121 10:51:29.001"/>
</kw>
<status status="NOT RUN" starttime="20231121 10:51:29.000" endtime="20231121 10:51:29.001"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231121 10:51:29.001" endtime="20231121 10:51:29.001"/>
</kw>
<status status="PASS" starttime="20231121 10:51:29.001" endtime="20231121 10:51:29.001"/>
</branch>
<status status="PASS" starttime="20231121 10:51:29.000" endtime="20231121 10:51:29.001"/>
</if>
<status status="PASS" starttime="20231121 10:51:28.979" endtime="20231121 10:51:29.001"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231121 10:51:29.002" endtime="20231121 10:51:29.002"/>
</kw>
<status status="PASS" starttime="20231121 10:51:29.002" endtime="20231121 10:51:29.002"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231121 10:51:29.005" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231121 10:51:29.016" level="INFO">${rc} = 0</msg>
<msg timestamp="20231121 10:51:29.016" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20231121 10:51:29.004" endtime="20231121 10:51:29.016"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 10:51:29.016" level="INFO">200</msg>
<status status="PASS" starttime="20231121 10:51:29.016" endtime="20231121 10:51:29.017"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231121 10:51:29.017" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231121 10:51:29.017" endtime="20231121 10:51:29.017"/>
</kw>
<status status="PASS" starttime="20231121 10:51:29.004" endtime="20231121 10:51:29.017"/>
</kw>
<msg timestamp="20231121 10:51:29.017" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231121 10:51:29.003" endtime="20231121 10:51:29.017"/>
</kw>
<msg timestamp="20231121 10:51:29.018" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20231121 10:51:29.003" endtime="20231121 10:51:29.018"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231121 10:51:29.018" endtime="20231121 10:51:29.018"/>
</kw>
<status status="NOT RUN" starttime="20231121 10:51:29.018" endtime="20231121 10:51:29.018"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231121 10:51:29.018" endtime="20231121 10:51:29.018"/>
</kw>
<status status="PASS" starttime="20231121 10:51:29.018" endtime="20231121 10:51:29.019"/>
</branch>
<status status="PASS" starttime="20231121 10:51:29.018" endtime="20231121 10:51:29.019"/>
</if>
<status status="PASS" starttime="20231121 10:51:29.002" endtime="20231121 10:51:29.019"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231121 10:51:29.019" endtime="20231121 10:51:29.019"/>
</kw>
<status status="PASS" starttime="20231121 10:51:29.019" endtime="20231121 10:51:29.019"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231121 10:51:29.022" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231121 10:51:29.032" level="INFO">${rc} = 0</msg>
<msg timestamp="20231121 10:51:29.032" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20231121 10:51:29.021" endtime="20231121 10:51:29.032"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 10:51:29.033" level="INFO">200</msg>
<status status="PASS" starttime="20231121 10:51:29.032" endtime="20231121 10:51:29.033"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231121 10:51:29.033" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231121 10:51:29.033" endtime="20231121 10:51:29.033"/>
</kw>
<status status="PASS" starttime="20231121 10:51:29.021" endtime="20231121 10:51:29.033"/>
</kw>
<msg timestamp="20231121 10:51:29.033" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231121 10:51:29.020" endtime="20231121 10:51:29.033"/>
</kw>
<msg timestamp="20231121 10:51:29.034" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20231121 10:51:29.020" endtime="20231121 10:51:29.034"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231121 10:51:29.034" endtime="20231121 10:51:29.034"/>
</kw>
<status status="NOT RUN" starttime="20231121 10:51:29.034" endtime="20231121 10:51:29.034"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231121 10:51:29.034" endtime="20231121 10:51:29.035"/>
</kw>
<status status="PASS" starttime="20231121 10:51:29.034" endtime="20231121 10:51:29.035"/>
</branch>
<status status="PASS" starttime="20231121 10:51:29.034" endtime="20231121 10:51:29.035"/>
</if>
<status status="PASS" starttime="20231121 10:51:29.020" endtime="20231121 10:51:29.035"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231121 10:51:29.035" endtime="20231121 10:51:29.035"/>
</kw>
<status status="PASS" starttime="20231121 10:51:29.035" endtime="20231121 10:51:29.035"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231121 10:51:29.038" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231121 10:51:29.048" level="INFO">${rc} = 0</msg>
<msg timestamp="20231121 10:51:29.048" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20231121 10:51:29.037" endtime="20231121 10:51:29.048"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 10:51:29.049" level="INFO">200</msg>
<status status="PASS" starttime="20231121 10:51:29.048" endtime="20231121 10:51:29.049"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231121 10:51:29.049" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231121 10:51:29.049" endtime="20231121 10:51:29.049"/>
</kw>
<status status="PASS" starttime="20231121 10:51:29.036" endtime="20231121 10:51:29.049"/>
</kw>
<msg timestamp="20231121 10:51:29.049" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231121 10:51:29.036" endtime="20231121 10:51:29.049"/>
</kw>
<msg timestamp="20231121 10:51:29.050" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20231121 10:51:29.036" endtime="20231121 10:51:29.050"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231121 10:51:29.050" endtime="20231121 10:51:29.050"/>
</kw>
<status status="NOT RUN" starttime="20231121 10:51:29.050" endtime="20231121 10:51:29.050"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231121 10:51:29.050" endtime="20231121 10:51:29.051"/>
</kw>
<status status="PASS" starttime="20231121 10:51:29.050" endtime="20231121 10:51:29.051"/>
</branch>
<status status="PASS" starttime="20231121 10:51:29.050" endtime="20231121 10:51:29.051"/>
</if>
<status status="PASS" starttime="20231121 10:51:29.035" endtime="20231121 10:51:29.051"/>
</kw>
<status status="PASS" starttime="20231121 10:51:28.973" endtime="20231121 10:51:29.051"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231121 10:51:28.972" endtime="20231121 10:51:29.051"/>
</test>
<test id="s1-t8" name="Check Recon Namespace Summary Root" line="122">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/</arg>
<arg>ROOT</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231121 10:51:29.055" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231121 10:51:29.065" level="INFO">${rc} = 0</msg>
<msg timestamp="20231121 10:51:29.065" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}</msg>
<status status="PASS" starttime="20231121 10:51:29.054" endtime="20231121 10:51:29.065"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 10:51:29.066" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}</msg>
<status status="PASS" starttime="20231121 10:51:29.065" endtime="20231121 10:51:29.066"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231121 10:51:29.066" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231121 10:51:29.066" endtime="20231121 10:51:29.067"/>
</kw>
<status status="PASS" starttime="20231121 10:51:29.054" endtime="20231121 10:51:29.067"/>
</kw>
<msg timestamp="20231121 10:51:29.067" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231121 10:51:29.053" endtime="20231121 10:51:29.067"/>
</kw>
<msg timestamp="20231121 10:51:29.067" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}</msg>
<status status="PASS" starttime="20231121 10:51:29.053" endtime="20231121 10:51:29.067"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20231121 10:51:29.068" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20231121 10:51:29.067" endtime="20231121 10:51:29.068"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231121 10:51:29.068" endtime="20231121 10:51:29.068"/>
</kw>
<status status="FAIL" starttime="20231121 10:51:29.053" endtime="20231121 10:51:29.068"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231121 10:51:39.072" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231121 10:51:39.083" level="INFO">${rc} = 0</msg>
<msg timestamp="20231121 10:51:39.083" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}</msg>
<status status="PASS" starttime="20231121 10:51:39.070" endtime="20231121 10:51:39.083"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 10:51:39.084" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}</msg>
<status status="PASS" starttime="20231121 10:51:39.083" endtime="20231121 10:51:39.084"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231121 10:51:39.084" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231121 10:51:39.084" endtime="20231121 10:51:39.084"/>
</kw>
<status status="PASS" starttime="20231121 10:51:39.070" endtime="20231121 10:51:39.084"/>
</kw>
<msg timestamp="20231121 10:51:39.084" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231121 10:51:39.070" endtime="20231121 10:51:39.085"/>
</kw>
<msg timestamp="20231121 10:51:39.085" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}</msg>
<status status="PASS" starttime="20231121 10:51:39.069" endtime="20231121 10:51:39.085"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20231121 10:51:39.085" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20231121 10:51:39.085" endtime="20231121 10:51:39.085"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231121 10:51:39.085" endtime="20231121 10:51:39.086"/>
</kw>
<status status="FAIL" starttime="20231121 10:51:39.068" endtime="20231121 10:51:39.086"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231121 10:51:49.090" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231121 10:51:49.101" level="INFO">${rc} = 0</msg>
<msg timestamp="20231121 10:51:49.101" level="INFO">${output} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}</msg>
<status status="PASS" starttime="20231121 10:51:49.088" endtime="20231121 10:51:49.101"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 10:51:49.101" level="INFO">{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}</msg>
<status status="PASS" starttime="20231121 10:51:49.101" endtime="20231121 10:51:49.101"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231121 10:51:49.102" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231121 10:51:49.102" endtime="20231121 10:51:49.102"/>
</kw>
<status status="PASS" starttime="20231121 10:51:49.087" endtime="20231121 10:51:49.102"/>
</kw>
<msg timestamp="20231121 10:51:49.102" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231121 10:51:49.087" endtime="20231121 10:51:49.102"/>
</kw>
<msg timestamp="20231121 10:51:49.102" level="INFO">${result} = {"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}</msg>
<status status="PASS" starttime="20231121 10:51:49.087" endtime="20231121 10:51:49.102"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20231121 10:51:49.103" level="FAIL">'{"path":"","type":"UNKNOWN","countStats":null,"objectInfo":null,"status":"INITIALIZING"}' does not contain '"status":"OK"'</msg>
<status status="FAIL" starttime="20231121 10:51:49.103" endtime="20231121 10:51:49.103"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231121 10:51:49.103" endtime="20231121 10:51:49.103"/>
</kw>
<status status="FAIL" starttime="20231121 10:51:49.086" endtime="20231121 10:51:49.103"/>
</kw>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231121 10:51:59.108" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231121 10:51:59.126" level="INFO">${rc} = 0</msg>
<msg timestamp="20231121 10:51:59.126" level="INFO">${output} = {"path":"","type":"ROOT","countStats":{"numVolume":2,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTim...</msg>
<status status="PASS" starttime="20231121 10:51:59.106" endtime="20231121 10:51:59.126"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 10:51:59.127" level="INFO">{"path":"","type":"ROOT","countStats":{"numVolume":2,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":0,"modificationTime":0,"acls":null},"status":"OK"}</msg>
<status status="PASS" starttime="20231121 10:51:59.127" endtime="20231121 10:51:59.127"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231121 10:51:59.128" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231121 10:51:59.128" endtime="20231121 10:51:59.128"/>
</kw>
<status status="PASS" starttime="20231121 10:51:59.105" endtime="20231121 10:51:59.128"/>
</kw>
<msg timestamp="20231121 10:51:59.128" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231121 10:51:59.105" endtime="20231121 10:51:59.128"/>
</kw>
<msg timestamp="20231121 10:51:59.129" level="INFO">${result} = {"path":"","type":"ROOT","countStats":{"numVolume":2,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTim...</msg>
<status status="PASS" starttime="20231121 10:51:59.105" endtime="20231121 10:51:59.129"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231121 10:51:59.129" endtime="20231121 10:51:59.129"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231121 10:51:59.129" endtime="20231121 10:51:59.129"/>
</kw>
<status status="PASS" starttime="20231121 10:51:59.104" endtime="20231121 10:51:59.129"/>
</kw>
<status status="PASS" starttime="20231121 10:51:29.052" endtime="20231121 10:51:59.129"/>
</kw>
<status status="PASS" starttime="20231121 10:51:29.052" endtime="20231121 10:51:59.130"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231121 10:51:29.051" endtime="20231121 10:51:59.130"/>
</test>
<test id="s1-t9" name="Check Recon Namespace Summary Volume" line="125">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}</arg>
<arg>VOLUME</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231121 10:51:59.134" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-dclmv 2&gt;&amp;1'.</msg>
<msg timestamp="20231121 10:51:59.159" level="INFO">${rc} = 0</msg>
<msg timestamp="20231121 10:51:59.159" level="INFO">${output} = {"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":{},"name":"vol-dclmv","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"c...</msg>
<status status="PASS" starttime="20231121 10:51:59.133" endtime="20231121 10:51:59.159"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 10:51:59.160" level="INFO">{"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":{},"name":"vol-dclmv","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"creationTime":1700563872968,"modificationTime":1700563872968,"acls":[{"type":"USER","name":"hadoop","scope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","scope":"ACCESS","aclList":["ALL"]}],"admin":"hadoop","owner":"hadoop","volume":"vol-dclmv"},"status":"OK"}</msg>
<status status="PASS" starttime="20231121 10:51:59.159" endtime="20231121 10:51:59.160"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231121 10:51:59.160" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231121 10:51:59.160" endtime="20231121 10:51:59.160"/>
</kw>
<status status="PASS" starttime="20231121 10:51:59.133" endtime="20231121 10:51:59.161"/>
</kw>
<msg timestamp="20231121 10:51:59.161" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231121 10:51:59.132" endtime="20231121 10:51:59.161"/>
</kw>
<msg timestamp="20231121 10:51:59.161" level="INFO">${result} = {"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":2,"numKey":2},"objectInfo":{"metadata":{},"name":"vol-dclmv","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"c...</msg>
<status status="PASS" starttime="20231121 10:51:59.132" endtime="20231121 10:51:59.161"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231121 10:51:59.161" endtime="20231121 10:51:59.161"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231121 10:51:59.162" endtime="20231121 10:51:59.162"/>
</kw>
<status status="PASS" starttime="20231121 10:51:59.132" endtime="20231121 10:51:59.162"/>
</kw>
<status status="PASS" starttime="20231121 10:51:59.131" endtime="20231121 10:51:59.162"/>
</kw>
<status status="PASS" starttime="20231121 10:51:59.131" endtime="20231121 10:51:59.162"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231121 10:51:59.130" endtime="20231121 10:51:59.162"/>
</test>
<test id="s1-t10" name="Check Recon Namespace Summary Bucket" line="128">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}</arg>
<arg>BUCKET</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231121 10:51:59.167" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-dclmv/buc-vrvjh 2&gt;&amp;1'.</msg>
<msg timestamp="20231121 10:51:59.189" level="INFO">${rc} = 0</msg>
<msg timestamp="20231121 10:51:59.189" level="INFO">${output} = {"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-vrvjh","quotaInBytes":-1,"quotaInNamespa...</msg>
<status status="PASS" starttime="20231121 10:51:59.166" endtime="20231121 10:51:59.189"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 10:51:59.190" level="INFO">{"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-vrvjh","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":4,"creationTime":1700563876608,"modificationTime":1700563876608,"acls":[{"type":"USER","name":"hadoop","scope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","scope":"ACCESS","aclList":["ALL"]}],"volumeName":"vol-dclmv","storageType":"DISK","versioning":false,"usedBytes":30318,"encryptionInfo":null,"replicationConfigInfo":null,"sourceVolume":null,"sourceBucket":null,"bucketLayout":"LEGACY","owner":"hadoop"},"status":"OK"}</msg>
<status status="PASS" starttime="20231121 10:51:59.190" endtime="20231121 10:51:59.191"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231121 10:51:59.191" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231121 10:51:59.191" endtime="20231121 10:51:59.191"/>
</kw>
<status status="PASS" starttime="20231121 10:51:59.165" endtime="20231121 10:51:59.191"/>
</kw>
<msg timestamp="20231121 10:51:59.191" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231121 10:51:59.165" endtime="20231121 10:51:59.191"/>
</kw>
<msg timestamp="20231121 10:51:59.191" level="INFO">${result} = {"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":2,"numKey":2},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-vrvjh","quotaInBytes":-1,"quotaInNamespa...</msg>
<status status="PASS" starttime="20231121 10:51:59.165" endtime="20231121 10:51:59.192"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231121 10:51:59.192" endtime="20231121 10:51:59.192"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231121 10:51:59.192" endtime="20231121 10:51:59.192"/>
</kw>
<status status="PASS" starttime="20231121 10:51:59.164" endtime="20231121 10:51:59.192"/>
</kw>
<status status="PASS" starttime="20231121 10:51:59.164" endtime="20231121 10:51:59.192"/>
</kw>
<status status="PASS" starttime="20231121 10:51:59.163" endtime="20231121 10:51:59.192"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231121 10:51:59.163" endtime="20231121 10:51:59.193"/>
</test>
<test id="s1-t11" name="Check Recon Namespace Summary Key" line="131">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/file1</arg>
<arg>KEY</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231121 10:51:59.197" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-dclmv/buc-vrvjh/file1 2&gt;&amp;1'.</msg>
<msg timestamp="20231121 10:51:59.230" level="INFO">${rc} = 0</msg>
<msg timestamp="20231121 10:51:59.231" level="INFO">${output} = {"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":true,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespace...</msg>
<status status="PASS" starttime="20231121 10:51:59.196" endtime="20231121 10:51:59.231"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 10:51:59.231" level="INFO">{"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":true,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":1700563880660,"modificationTime":1700563883007,"acls":[{"type":"USER","name":"hadoop","scope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","scope":"ACCESS","aclList":["ALL"]}],"volumeName":"vol-dclmv","bucketName":"buc-vrvjh","keyName":"file1","dataSize":4068,"keyLocationVersions":[{"version":0,"locationVersionMap":{"0":[{"blockID":{"containerBlockID":{"containerID":1,"localID":111677748019200001},"blockCommitSequenceId":2,"containerID":1,"localID":111677748019200001},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"containerID":1,"localID":111677748019200001,"blockCommitSequenceId":2}]},"locationList":[{"blockID":{"containerBlockID":{"containerID":1,"localID":111677748019200001},"blockCommitSequenceId":2,"containerID":1,"localID":111677748019200001},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"containerID":1,"localID":111677748019200001,"blockCommitSequenceId":2}],"multipartKey":false,"blocksLatestVersionOnly":[{"blockID":{"containerBlockID":{"containerID":1,"localID":111677748019200001},"blockCommitSequenceId":2,"containerID":1,"localID":111677748019200001},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"containerID":1,"localID":111677748019200001,"blockCommitSequenceId":2}],"locationLists":[[{"blockID":{"containerBlockID":{"containerID":1,"localID":111677748019200001},"blockCommitSequenceId":2,"containerID":1,"localID":111677748019200001},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"containerID":1,"localID":111677748019200001,"blockCommitSequenceId":2}]],"locationListCount":1}],"replicationConfig":{"replicationFactor":"THREE","requiredNodes":3,"replicationType":"RATIS"},"encInfo":null},"status":"OK"}</msg>
<status status="PASS" starttime="20231121 10:51:59.231" endtime="20231121 10:51:59.232"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231121 10:51:59.232" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231121 10:51:59.232" endtime="20231121 10:51:59.232"/>
</kw>
<status status="PASS" starttime="20231121 10:51:59.196" endtime="20231121 10:51:59.232"/>
</kw>
<msg timestamp="20231121 10:51:59.232" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231121 10:51:59.195" endtime="20231121 10:51:59.232"/>
</kw>
<msg timestamp="20231121 10:51:59.233" level="INFO">${result} = {"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":true,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespace...</msg>
<status status="PASS" starttime="20231121 10:51:59.195" endtime="20231121 10:51:59.233"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231121 10:51:59.233" endtime="20231121 10:51:59.233"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231121 10:51:59.233" endtime="20231121 10:51:59.234"/>
</kw>
<status status="PASS" starttime="20231121 10:51:59.195" endtime="20231121 10:51:59.234"/>
</kw>
<status status="PASS" starttime="20231121 10:51:59.194" endtime="20231121 10:51:59.234"/>
</kw>
<status status="PASS" starttime="20231121 10:51:59.194" endtime="20231121 10:51:59.234"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231121 10:51:59.193" endtime="20231121 10:51:59.234"/>
</test>
<test id="s1-t12" name="Check Recon Namespace Summary Directory" line="134">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET_LAYOUT}' == 'LEGACY'</arg>
<arg>Wait For Summary</arg>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2/</arg>
<arg>DIRECTORY</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2/</arg>
<arg>DIRECTORY</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231121 10:51:59.239" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-dclmv/buc-vrvjh/dir1/dir2/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231121 10:51:59.252" level="INFO">${rc} = 0</msg>
<msg timestamp="20231121 10:51:59.252" level="INFO">${output} = {"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"dir1","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"crea...</msg>
<status status="PASS" starttime="20231121 10:51:59.238" endtime="20231121 10:51:59.252"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 10:51:59.253" level="INFO">{"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"dir1","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":0,"modificationTime":0,"acls":[]},"status":"OK"}</msg>
<status status="PASS" starttime="20231121 10:51:59.252" endtime="20231121 10:51:59.253"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231121 10:51:59.253" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231121 10:51:59.253" endtime="20231121 10:51:59.253"/>
</kw>
<status status="PASS" starttime="20231121 10:51:59.237" endtime="20231121 10:51:59.253"/>
</kw>
<msg timestamp="20231121 10:51:59.254" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231121 10:51:59.237" endtime="20231121 10:51:59.254"/>
</kw>
<msg timestamp="20231121 10:51:59.254" level="INFO">${result} = {"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":1},"objectInfo":{"metadata":{},"name":"dir1","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"crea...</msg>
<status status="PASS" starttime="20231121 10:51:59.237" endtime="20231121 10:51:59.254"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231121 10:51:59.254" endtime="20231121 10:51:59.254"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231121 10:51:59.254" endtime="20231121 10:51:59.255"/>
</kw>
<status status="PASS" starttime="20231121 10:51:59.236" endtime="20231121 10:51:59.255"/>
</kw>
<status status="PASS" starttime="20231121 10:51:59.236" endtime="20231121 10:51:59.255"/>
</kw>
<status status="PASS" starttime="20231121 10:51:59.235" endtime="20231121 10:51:59.255"/>
</kw>
<status status="PASS" starttime="20231121 10:51:59.235" endtime="20231121 10:51:59.255"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET_LAYOUT}' == 'FILE_SYSTEM_OPTIMIZED'</arg>
<arg>Wait For Summary</arg>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2</arg>
<arg>DIRECTORY</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231121 10:51:59.255" endtime="20231121 10:51:59.255"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231121 10:51:59.234" endtime="20231121 10:51:59.255"/>
</test>
<test id="s1-t13" name="Check Recon Namespace Disk Usage" line="138">
<kw name="Wait For Summary">
<arg>${DISK_USAGE_URL}?path=/${VOLUME}/${BUCKET}&amp;files=true&amp;replica=true</arg>
<arg>\"sizeWithReplica\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231121 10:51:59.260" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/du?path=/vol-dclmv/buc-vrvjh&amp;files=true&amp;replica=true 2&gt;&amp;1'.</msg>
<msg timestamp="20231121 10:51:59.272" level="INFO">${rc} = 0</msg>
<msg timestamp="20231121 10:51:59.272" level="INFO">${output} = {"status":"OK","path":"/vol-dclmv/buc-vrvjh","size":10106,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-dclmv/buc-vrvjh/dir1","size":6038,"sizeWithReplica":-1,"isKey":fal...</msg>
<status status="PASS" starttime="20231121 10:51:59.259" endtime="20231121 10:51:59.272"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 10:51:59.273" level="INFO">{"status":"OK","path":"/vol-dclmv/buc-vrvjh","size":10106,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-dclmv/buc-vrvjh/dir1","size":6038,"sizeWithReplica":-1,"isKey":false}],"sizeDirectKey":4068}</msg>
<status status="PASS" starttime="20231121 10:51:59.272" endtime="20231121 10:51:59.273"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231121 10:51:59.273" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231121 10:51:59.273" endtime="20231121 10:51:59.273"/>
</kw>
<status status="PASS" starttime="20231121 10:51:59.258" endtime="20231121 10:51:59.273"/>
</kw>
<msg timestamp="20231121 10:51:59.273" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231121 10:51:59.258" endtime="20231121 10:51:59.274"/>
</kw>
<msg timestamp="20231121 10:51:59.274" level="INFO">${result} = {"status":"OK","path":"/vol-dclmv/buc-vrvjh","size":10106,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-dclmv/buc-vrvjh/dir1","size":6038,"sizeWithReplica":-1,"isKey":fal...</msg>
<status status="PASS" starttime="20231121 10:51:59.258" endtime="20231121 10:51:59.274"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231121 10:51:59.274" endtime="20231121 10:51:59.274"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231121 10:51:59.274" endtime="20231121 10:51:59.275"/>
</kw>
<status status="PASS" starttime="20231121 10:51:59.257" endtime="20231121 10:51:59.275"/>
</kw>
<status status="PASS" starttime="20231121 10:51:59.257" endtime="20231121 10:51:59.275"/>
</kw>
<status status="PASS" starttime="20231121 10:51:59.256" endtime="20231121 10:51:59.275"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231121 10:51:59.256" endtime="20231121 10:51:59.275"/>
</test>
<test id="s1-t14" name="Check Recon Namespace Volume Quota Usage" line="141">
<kw name="Wait For Summary">
<arg>${QUOTA_USAGE_URL}?path=/${VOLUME}</arg>
<arg>\"used\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231121 10:51:59.280" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/quota?path=/vol-dclmv 2&gt;&amp;1'.</msg>
<msg timestamp="20231121 10:51:59.291" level="INFO">${rc} = 0</msg>
<msg timestamp="20231121 10:51:59.291" level="INFO">${output} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20231121 10:51:59.279" endtime="20231121 10:51:59.291"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 10:51:59.292" level="INFO">{"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20231121 10:51:59.292" endtime="20231121 10:51:59.292"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231121 10:51:59.293" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231121 10:51:59.292" endtime="20231121 10:51:59.293"/>
</kw>
<status status="PASS" starttime="20231121 10:51:59.278" endtime="20231121 10:51:59.293"/>
</kw>
<msg timestamp="20231121 10:51:59.293" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231121 10:51:59.278" endtime="20231121 10:51:59.293"/>
</kw>
<msg timestamp="20231121 10:51:59.293" level="INFO">${result} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20231121 10:51:59.277" endtime="20231121 10:51:59.293"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231121 10:51:59.293" endtime="20231121 10:51:59.294"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231121 10:51:59.294" endtime="20231121 10:51:59.294"/>
</kw>
<status status="PASS" starttime="20231121 10:51:59.277" endtime="20231121 10:51:59.294"/>
</kw>
<status status="PASS" starttime="20231121 10:51:59.277" endtime="20231121 10:51:59.294"/>
</kw>
<status status="PASS" starttime="20231121 10:51:59.276" endtime="20231121 10:51:59.294"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231121 10:51:59.275" endtime="20231121 10:51:59.294"/>
</test>
<test id="s1-t15" name="Check Recon Namespace Bucket Quota Usage" line="144">
<kw name="Wait For Summary">
<arg>${QUOTA_USAGE_URL}?path=/${VOLUME}/${BUCKET}</arg>
<arg>\"used\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231121 10:51:59.299" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/quota?path=/vol-dclmv/buc-vrvjh 2&gt;&amp;1'.</msg>
<msg timestamp="20231121 10:51:59.310" level="INFO">${rc} = 0</msg>
<msg timestamp="20231121 10:51:59.310" level="INFO">${output} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20231121 10:51:59.298" endtime="20231121 10:51:59.310"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 10:51:59.311" level="INFO">{"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20231121 10:51:59.310" endtime="20231121 10:51:59.311"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231121 10:51:59.311" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231121 10:51:59.311" endtime="20231121 10:51:59.312"/>
</kw>
<status status="PASS" starttime="20231121 10:51:59.297" endtime="20231121 10:51:59.312"/>
</kw>
<msg timestamp="20231121 10:51:59.312" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231121 10:51:59.297" endtime="20231121 10:51:59.312"/>
</kw>
<msg timestamp="20231121 10:51:59.312" level="INFO">${result} = {"allowed":-1,"used":10106,"status":"OK"}</msg>
<status status="PASS" starttime="20231121 10:51:59.297" endtime="20231121 10:51:59.312"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231121 10:51:59.312" endtime="20231121 10:51:59.312"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231121 10:51:59.313" endtime="20231121 10:51:59.313"/>
</kw>
<status status="PASS" starttime="20231121 10:51:59.296" endtime="20231121 10:51:59.313"/>
</kw>
<status status="PASS" starttime="20231121 10:51:59.296" endtime="20231121 10:51:59.313"/>
</kw>
<status status="PASS" starttime="20231121 10:51:59.295" endtime="20231121 10:51:59.313"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231121 10:51:59.295" endtime="20231121 10:51:59.313"/>
</test>
<test id="s1-t16" name="Check Recon Namespace File Size Distribution Root" line="147">
<kw name="Wait For Summary">
<arg>${FILE_SIZE_DIST_URL}?path=/</arg>
<arg>\"dist\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231121 10:51:59.319" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231121 10:51:59.330" level="INFO">${rc} = 0</msg>
<msg timestamp="20231121 10:51:59.331" level="INFO">${output} = {"dist":[0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20231121 10:51:59.317" endtime="20231121 10:51:59.331"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231121 10:51:59.331" level="INFO">{"dist":[0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20231121 10:51:59.331" endtime="20231121 10:51:59.332"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231121 10:51:59.332" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231121 10:51:59.332" endtime="20231121 10:51:59.332"/>
</kw>
<status status="PASS" starttime="20231121 10:51:59.316" endtime="20231121 10:51:59.332"/>
</kw>
<msg timestamp="20231121 10:51:59.332" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231121 10:51:59.316" endtime="20231121 10:51:59.332"/>
</kw>
<msg timestamp="20231121 10:51:59.333" level="INFO">${result} = {"dist":[0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20231121 10:51:59.316" endtime="20231121 10:51:59.333"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231121 10:51:59.333" endtime="20231121 10:51:59.333"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231121 10:51:59.333" endtime="20231121 10:51:59.334"/>
</kw>
<status status="PASS" starttime="20231121 10:51:59.315" endtime="20231121 10:51:59.334"/>
</kw>
<status status="PASS" starttime="20231121 10:51:59.315" endtime="20231121 10:51:59.334"/>
</kw>
<status status="PASS" starttime="20231121 10:51:59.314" endtime="20231121 10:51:59.334"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231121 10:51:59.314" endtime="20231121 10:51:59.334"/>
</test>
<doc>Smoke test for Recon Namespace Summary Endpoint for LEGACY buckets.</doc>
<status status="PASS" starttime="20231121 10:51:08.816" endtime="20231121 10:51:59.335"/>
</suite>
<statistics>
<total>
<stat pass="16" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="16" fail="0" skip="0" id="s1" name="ozone-legacy-bucket">ozone-legacy-bucket</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
