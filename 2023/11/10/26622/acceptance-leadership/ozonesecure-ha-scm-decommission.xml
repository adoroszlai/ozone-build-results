<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20231110 13:42:46.516" rpa="false" schemaversion="4">
<suite id="s1" name="ozonesecure-ha-scm-decommission">
<suite id="s1-s1" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s1-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/' | sed 's/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231110 13:39:07.441" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' | sed 's/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231110 13:39:07.447" level="INFO">${rc} = 0</msg>
<msg timestamp="20231110 13:39:07.448" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231110 13:39:07.437" endtime="20231110 13:39:07.448"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231110 13:39:07.449" level="INFO">scm</msg>
<status status="PASS" starttime="20231110 13:39:07.448" endtime="20231110 13:39:07.449"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231110 13:39:07.450" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231110 13:39:07.449" endtime="20231110 13:39:07.450"/>
</kw>
<status status="PASS" starttime="20231110 13:39:07.437" endtime="20231110 13:39:07.450"/>
</kw>
<msg timestamp="20231110 13:39:07.450" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231110 13:39:07.436" endtime="20231110 13:39:07.450"/>
</kw>
<msg timestamp="20231110 13:39:07.451" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231110 13:39:07.436" endtime="20231110 13:39:07.451"/>
</kw>
<msg timestamp="20231110 13:39:07.451" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231110 13:39:07.435" endtime="20231110 13:39:07.451"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231110 13:39:07.452" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231110 13:39:07.451" endtime="20231110 13:39:07.452"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231110 13:39:07.457" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231110 13:39:07.545" level="INFO">${rc} = 0</msg>
<msg timestamp="20231110 13:39:07.545" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231110 13:39:07.454" endtime="20231110 13:39:07.545"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231110 13:39:07.548" level="INFO"/>
<status status="PASS" starttime="20231110 13:39:07.546" endtime="20231110 13:39:07.548"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231110 13:39:07.549" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231110 13:39:07.548" endtime="20231110 13:39:07.549"/>
</kw>
<status status="PASS" starttime="20231110 13:39:07.454" endtime="20231110 13:39:07.549"/>
</kw>
<msg timestamp="20231110 13:39:07.550" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231110 13:39:07.453" endtime="20231110 13:39:07.550"/>
</kw>
<status status="PASS" starttime="20231110 13:39:07.452" endtime="20231110 13:39:07.550"/>
</kw>
<status status="PASS" starttime="20231110 13:39:07.452" endtime="20231110 13:39:07.550"/>
</kw>
<status status="PASS" starttime="20231110 13:39:07.434" endtime="20231110 13:39:07.550"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20231110 13:39:07.432" endtime="20231110 13:39:07.551"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20231110 13:39:07.361" endtime="20231110 13:39:07.552"/>
</suite>
<suite id="s1-s2" name="Primordial-Scm" source="/opt/hadoop/smoketest/scmha/primordial-scm.robot">
<test id="s1-s2-t1" name="Verify SCM Count" line="33">
<kw name="Get SCM Node Count">
<var>${scm_count}</var>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm roles --service-id=scmservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231110 13:39:20.392" level="INFO">Running command 'ozone admin scm roles --service-id=scmservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231110 13:39:26.613" level="INFO">${rc} = 0</msg>
<msg timestamp="20231110 13:39:26.613" level="INFO">${output} = scm1.org:9894:LEADER:8fe50594-7864-4ffd-8b60-d58a0e816297:172.25.0.116
scm4.org:9894:FOLLOWER:da53bea2-f1dd-43d0-9220-7ec658cc1a27:172.25.0.120
scm2.org:9894:FOLLOWER:13588435-c116-4eec-920d-0479a0174...</msg>
<status status="PASS" starttime="20231110 13:39:20.388" endtime="20231110 13:39:26.613"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231110 13:39:26.615" level="INFO">scm1.org:9894:LEADER:8fe50594-7864-4ffd-8b60-d58a0e816297:172.25.0.116
scm4.org:9894:FOLLOWER:da53bea2-f1dd-43d0-9220-7ec658cc1a27:172.25.0.120
scm2.org:9894:FOLLOWER:13588435-c116-4eec-920d-0479a0174a1f:172.25.0.117
scm3.org:9894:FOLLOWER:bed20374-2cac-47a9-b772-6bd6b352ec2d:172.25.0.118</msg>
<status status="PASS" starttime="20231110 13:39:26.614" endtime="20231110 13:39:26.615"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231110 13:39:26.616" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231110 13:39:26.615" endtime="20231110 13:39:26.616"/>
</kw>
<status status="PASS" starttime="20231110 13:39:20.387" endtime="20231110 13:39:26.616"/>
</kw>
<msg timestamp="20231110 13:39:26.616" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231110 13:39:20.387" endtime="20231110 13:39:26.616"/>
</kw>
<msg timestamp="20231110 13:39:26.617" level="INFO">${result} = scm1.org:9894:LEADER:8fe50594-7864-4ffd-8b60-d58a0e816297:172.25.0.116
scm4.org:9894:FOLLOWER:da53bea2-f1dd-43d0-9220-7ec658cc1a27:172.25.0.120
scm2.org:9894:FOLLOWER:13588435-c116-4eec-920d-0479a0174...</msg>
<status status="PASS" starttime="20231110 13:39:20.386" endtime="20231110 13:39:26.617"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231110 13:39:26.617" level="INFO">scm1.org:9894:LEADER:8fe50594-7864-4ffd-8b60-d58a0e816297:172.25.0.116
scm4.org:9894:FOLLOWER:da53bea2-f1dd-43d0-9220-7ec658cc1a27:172.25.0.120
scm2.org:9894:FOLLOWER:13588435-c116-4eec-920d-0479a0174a1f:172.25.0.117
scm3.org:9894:FOLLOWER:bed20374-2cac-47a9-b772-6bd6b352ec2d:172.25.0.118</msg>
<status status="PASS" starttime="20231110 13:39:26.617" endtime="20231110 13:39:26.617"/>
</kw>
<kw name="Get Line Count" library="String">
<var>${scm_count}</var>
<arg>${result}</arg>
<doc>Returns and logs the number of lines in the given string.</doc>
<msg timestamp="20231110 13:39:26.618" level="INFO">4 lines</msg>
<msg timestamp="20231110 13:39:26.618" level="INFO">${scm_count} = 4</msg>
<status status="PASS" starttime="20231110 13:39:26.617" endtime="20231110 13:39:26.618"/>
</kw>
<msg timestamp="20231110 13:39:26.618" level="INFO">${scm_count} = 4</msg>
<status status="PASS" starttime="20231110 13:39:20.386" endtime="20231110 13:39:26.619"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>SCM Instance Count: ${scm_count}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231110 13:39:26.619" level="INFO">SCM Instance Count: 4</msg>
<status status="PASS" starttime="20231110 13:39:26.619" endtime="20231110 13:39:26.619"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${scm_count}</var>
<arg>${scm_count}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20231110 13:39:26.620" level="INFO">${scm_count} = 4</msg>
<status status="PASS" starttime="20231110 13:39:26.620" endtime="20231110 13:39:26.620"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>4</arg>
<arg>${scm_count}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231110 13:39:26.620" endtime="20231110 13:39:26.621"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231110 13:39:20.384" endtime="20231110 13:39:26.621"/>
</test>
<test id="s1-s2-t2" name="Transfer Leader to SCM4" line="39">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm roles --service-id=scmservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231110 13:39:26.628" level="INFO">Running command 'ozone admin scm roles --service-id=scmservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231110 13:39:32.608" level="INFO">${rc} = 0</msg>
<msg timestamp="20231110 13:39:32.608" level="INFO">${output} = scm1.org:9894:LEADER:8fe50594-7864-4ffd-8b60-d58a0e816297:172.25.0.116
scm4.org:9894:FOLLOWER:da53bea2-f1dd-43d0-9220-7ec658cc1a27:172.25.0.120
scm2.org:9894:FOLLOWER:13588435-c116-4eec-920d-0479a0174...</msg>
<status status="PASS" starttime="20231110 13:39:26.624" endtime="20231110 13:39:32.608"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231110 13:39:32.609" level="INFO">scm1.org:9894:LEADER:8fe50594-7864-4ffd-8b60-d58a0e816297:172.25.0.116
scm4.org:9894:FOLLOWER:da53bea2-f1dd-43d0-9220-7ec658cc1a27:172.25.0.120
scm2.org:9894:FOLLOWER:13588435-c116-4eec-920d-0479a0174a1f:172.25.0.117
scm3.org:9894:FOLLOWER:bed20374-2cac-47a9-b772-6bd6b352ec2d:172.25.0.118</msg>
<status status="PASS" starttime="20231110 13:39:32.609" endtime="20231110 13:39:32.609"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231110 13:39:32.610" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231110 13:39:32.610" endtime="20231110 13:39:32.610"/>
</kw>
<status status="PASS" starttime="20231110 13:39:26.623" endtime="20231110 13:39:32.610"/>
</kw>
<msg timestamp="20231110 13:39:32.610" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231110 13:39:26.623" endtime="20231110 13:39:32.611"/>
</kw>
<msg timestamp="20231110 13:39:32.611" level="INFO">${result} = scm1.org:9894:LEADER:8fe50594-7864-4ffd-8b60-d58a0e816297:172.25.0.116
scm4.org:9894:FOLLOWER:da53bea2-f1dd-43d0-9220-7ec658cc1a27:172.25.0.120
scm2.org:9894:FOLLOWER:13588435-c116-4eec-920d-0479a0174...</msg>
<status status="PASS" starttime="20231110 13:39:26.623" endtime="20231110 13:39:32.611"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231110 13:39:32.611" level="INFO">scm1.org:9894:LEADER:8fe50594-7864-4ffd-8b60-d58a0e816297:172.25.0.116
scm4.org:9894:FOLLOWER:da53bea2-f1dd-43d0-9220-7ec658cc1a27:172.25.0.120
scm2.org:9894:FOLLOWER:13588435-c116-4eec-920d-0479a0174a1f:172.25.0.117
scm3.org:9894:FOLLOWER:bed20374-2cac-47a9-b772-6bd6b352ec2d:172.25.0.118</msg>
<status status="PASS" starttime="20231110 13:39:32.611" endtime="20231110 13:39:32.611"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${scm4_line}</var>
<arg>${result}</arg>
<arg>scm4.org</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20231110 13:39:32.612" level="INFO">1 out of 4 lines matched</msg>
<msg timestamp="20231110 13:39:32.612" level="INFO">${scm4_line} = scm4.org:9894:FOLLOWER:da53bea2-f1dd-43d0-9220-7ec658cc1a27:172.25.0.120</msg>
<status status="PASS" starttime="20231110 13:39:32.611" endtime="20231110 13:39:32.612"/>
</kw>
<kw name="Split String" library="String">
<var>${scm4_split}</var>
<arg>${scm4_line}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231110 13:39:32.612" level="INFO">${scm4_split} = ['scm4.org', '9894', 'FOLLOWER', 'da53bea2-f1dd-43d0-9220-7ec658cc1a27', '172.25.0.120']</msg>
<status status="PASS" starttime="20231110 13:39:32.612" endtime="20231110 13:39:32.613"/>
</kw>
<kw name="Strip String" library="String">
<var>${scm4_uuid}</var>
<arg>${scm4_split[3]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20231110 13:39:32.615" level="INFO">${scm4_uuid} = da53bea2-f1dd-43d0-9220-7ec658cc1a27</msg>
<status status="PASS" starttime="20231110 13:39:32.613" endtime="20231110 13:39:32.615"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm transfer --service-id=scmservice -n ${scm4_uuid}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231110 13:39:32.619" level="INFO">Running command 'ozone admin scm transfer --service-id=scmservice -n da53bea2-f1dd-43d0-9220-7ec658cc1a27 2&gt;&amp;1'.</msg>
<msg timestamp="20231110 13:39:40.291" level="INFO">${rc} = 0</msg>
<msg timestamp="20231110 13:39:40.291" level="INFO">${output} = Transfer leadership successfully to da53bea2-f1dd-43d0-9220-7ec658cc1a27.</msg>
<status status="PASS" starttime="20231110 13:39:32.617" endtime="20231110 13:39:40.291"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231110 13:39:40.293" level="INFO">Transfer leadership successfully to da53bea2-f1dd-43d0-9220-7ec658cc1a27.</msg>
<status status="PASS" starttime="20231110 13:39:40.292" endtime="20231110 13:39:40.294"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231110 13:39:40.296" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231110 13:39:40.296" endtime="20231110 13:39:40.296"/>
</kw>
<status status="PASS" starttime="20231110 13:39:32.616" endtime="20231110 13:39:40.297"/>
</kw>
<msg timestamp="20231110 13:39:40.297" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231110 13:39:32.616" endtime="20231110 13:39:40.297"/>
</kw>
<msg timestamp="20231110 13:39:40.297" level="INFO">${result} = Transfer leadership successfully to da53bea2-f1dd-43d0-9220-7ec658cc1a27.</msg>
<status status="PASS" starttime="20231110 13:39:32.615" endtime="20231110 13:39:40.297"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231110 13:39:40.298" level="INFO">Transfer leadership successfully to da53bea2-f1dd-43d0-9220-7ec658cc1a27.</msg>
<status status="PASS" starttime="20231110 13:39:40.298" endtime="20231110 13:39:40.298"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Transfer leadership successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231110 13:39:40.299" endtime="20231110 13:39:40.299"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231110 13:39:26.622" endtime="20231110 13:39:40.300"/>
</test>
<test id="s1-s2-t3" name="Verify SCM4 Certificate" line="50">
<kw name="Execute" library="os">
<var>${root_ca_output}</var>
<arg>ozone admin cert list -c 1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231110 13:39:40.310" level="INFO">Running command 'ozone admin cert list -c 1 2&gt;&amp;1'.</msg>
<msg timestamp="20231110 13:39:48.747" level="INFO">${rc} = 0</msg>
<msg timestamp="20231110 13:39:48.747" level="INFO">${output} = The certificate list could be longer than the batch size: 1. Please use the "-c" option to see more certificates.
Certificate list:(Type=VALID, BatchSize=1, CertCount=1)
SerialNumber      Valid From  ...</msg>
<status status="PASS" starttime="20231110 13:39:40.306" endtime="20231110 13:39:48.747"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231110 13:39:48.748" level="INFO">The certificate list could be longer than the batch size: 1. Please use the "-c" option to see more certificates.
Certificate list:(Type=VALID, BatchSize=1, CertCount=1)
SerialNumber      Valid From                     Expiry                         Subject                                                                                                        Issuer                                                                                                        
1                 Fri Nov 10 13:35:22 UTC 2023   Mon Dec 18 13:35:22 UTC 2028   CN=scm@scm1.org,OU=8fe50594-7864-4ffd-8b60-d58a0e816297,O=CID-e7d26ff3-a7f8-45fb-8717-6dd874480c0a,SERIALNUMBER=1 CN=scm@scm1.org,OU=8fe50594-7864-4ffd-8b60-d58a0e816297,O=CID-e7d26ff3-a7f8-45fb-8717-6dd874480c0a,SERIALNUMBER=1</msg>
<status status="PASS" starttime="20231110 13:39:48.747" endtime="20231110 13:39:48.748"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231110 13:39:48.750" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231110 13:39:48.749" endtime="20231110 13:39:48.750"/>
</kw>
<status status="PASS" starttime="20231110 13:39:40.305" endtime="20231110 13:39:48.750"/>
</kw>
<msg timestamp="20231110 13:39:48.750" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231110 13:39:40.305" endtime="20231110 13:39:48.750"/>
</kw>
<msg timestamp="20231110 13:39:48.750" level="INFO">${root_ca_output} = The certificate list could be longer than the batch size: 1. Please use the "-c" option to see more certificates.
Certificate list:(Type=VALID, BatchSize=1, CertCount=1)
SerialNumber      Valid From  ...</msg>
<status status="PASS" starttime="20231110 13:39:40.304" endtime="20231110 13:39:48.751"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${root_ca_cert}</var>
<arg>${root_ca_output}</arg>
<arg>scm1.org</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20231110 13:39:48.752" level="INFO">1 out of 4 lines matched</msg>
<msg timestamp="20231110 13:39:48.752" level="INFO">${root_ca_cert} = 1                 Fri Nov 10 13:35:22 UTC 2023   Mon Dec 18 13:35:22 UTC 2028   CN=scm@scm1.org,OU=8fe50594-7864-4ffd-8b60-d58a0e816297,O=CID-e7d26ff3-a7f8-45fb-8717-6dd874480c0a,SERIALNUMBER=1 CN=scm...</msg>
<status status="PASS" starttime="20231110 13:39:48.751" endtime="20231110 13:39:48.752"/>
</kw>
<kw name="Split String" library="String">
<var>${root_ca_cert_split}</var>
<arg>${root_ca_cert}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231110 13:39:48.754" level="INFO">${root_ca_cert_split} = ['1', 'Fri', 'Nov', '10', '13:35:22', 'UTC', '2023', 'Mon', 'Dec', '18', '13:35:22', 'UTC', '2028', 'CN=scm@scm1.org,OU=8fe50594-7864-4ffd-8b60-d58a0e816297,O=CID-e7d26ff3-a7f8-45fb-8717-6dd874480c0a,...</msg>
<status status="PASS" starttime="20231110 13:39:48.752" endtime="20231110 13:39:48.754"/>
</kw>
<kw name="Strip String" library="String">
<var>${root_ca_cert_subject}</var>
<arg>${root_ca_cert_split[3]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20231110 13:39:48.757" level="INFO">${root_ca_cert_subject} = 10</msg>
<status status="PASS" starttime="20231110 13:39:48.754" endtime="20231110 13:39:48.757"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin cert list -c 1000000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231110 13:39:48.770" level="INFO">Running command 'ozone admin cert list -c 1000000 2&gt;&amp;1'.</msg>
<msg timestamp="20231110 13:39:57.433" level="INFO">${rc} = 0</msg>
<msg timestamp="20231110 13:39:57.433" level="INFO">${output} = Certificate list:(Type=VALID, BatchSize=1000000, CertCount=12)
SerialNumber      Valid From                     Expiry                         Subject                                                  ...</msg>
<status status="PASS" starttime="20231110 13:39:48.762" endtime="20231110 13:39:57.433"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231110 13:39:57.435" level="INFO">Certificate list:(Type=VALID, BatchSize=1000000, CertCount=12)
SerialNumber      Valid From                     Expiry                         Subject                                                                                                        Issuer                                                                                                        
1                 Fri Nov 10 13:35:22 UTC 2023   Mon Dec 18 13:35:22 UTC 2028   CN=scm@scm1.org,OU=8fe50594-7864-4ffd-8b60-d58a0e816297,O=CID-e7d26ff3-a7f8-45fb-8717-6dd874480c0a,SERIALNUMBER=1 CN=scm@scm1.org,OU=8fe50594-7864-4ffd-8b60-d58a0e816297,O=CID-e7d26ff3-a7f8-45fb-8717-6dd874480c0a,SERIALNUMBER=1
2                 Fri Nov 10 13:35:23 UTC 2023   Mon Dec 18 13:35:23 UTC 2028   CN=scm-sub@scm1.org,OU=8fe50594-7864-4ffd-8b60-d58a0e816297,O=CID-e7d26ff3-a7f8-45fb-8717-6dd874480c0a,SERIALNUMBER=2 CN=scm@scm1.org,OU=8fe50594-7864-4ffd-8b60-d58a0e816297,O=CID-e7d26ff3-a7f8-45fb-8717-6dd874480c0a,SERIALNUMBER=1
3                 Fri Nov 10 13:35:51 UTC 2023   Sat Nov 09 13:35:51 UTC 2024   CN=recon@recon,OU=8fe50594-7864-4ffd-8b60-d58a0e816297,O=CID-e7d26ff3-a7f8-45fb-8717-6dd874480c0a,SERIALNUMBER=3 CN=scm-sub@scm1.org,OU=8fe50594-7864-4ffd-8b60-d58a0e816297,O=CID-e7d26ff3-a7f8-45fb-8717-6dd874480c0a,SERIALNUMBER=2
4                 Fri Nov 10 13:35:52 UTC 2023   Mon Dec 18 13:35:52 UTC 2028   CN=scm-sub@scm2.org,OU=13588435-c116-4eec-920d-0479a0174a1f,O=CID-e7d26ff3-a7f8-45fb-8717-6dd874480c0a,SERIALNUMBER=4 CN=scm@scm1.org,OU=8fe50594-7864-4ffd-8b60-d58a0e816297,O=CID-e7d26ff3-a7f8-45fb-8717-6dd874480c0a,SERIALNUMBER=1
5                 Fri Nov 10 13:36:14 UTC 2023   Mon Dec 18 13:36:14 UTC 2028   CN=scm-sub@scm3.org,OU=bed20374-2cac-47a9-b772-6bd6b352ec2d,O=CID-e7d26ff3-a7f8-45fb-8717-6dd874480c0a,SERIALNUMBER=5 CN=scm@scm1.org,OU=8fe50594-7864-4ffd-8b60-d58a0e816297,O=CID-e7d26ff3-a7f8-45fb-8717-6dd874480c0a,SERIALNUMBER=1
6                 Fri Nov 10 13:36:59 UTC 2023   Sat Nov 09 13:36:59 UTC 2024   CN=dn@04b06233ba30,OU=8fe50594-7864-4ffd-8b60-d58a0e816297,O=CID-e7d26ff3-a7f8-45fb-8717-6dd874480c0a,SERIALNUMBER=6 CN=scm-sub@scm1.org,OU=8fe50594-7864-4ffd-8b60-d58a0e816297,O=CID-e7d26ff3-a7f8-45fb-8717-6dd874480c0a,SERIALNUMBER=2
7                 Fri Nov 10 13:37:02 UTC 2023   Sat Nov 09 13:37:02 UTC 2024   CN=dn@60fabc5f0fca,OU=8fe50594-7864-4ffd-8b60-d58a0e816297,O=CID-e7d26ff3-a7f8-45fb-8717-6dd874480c0a,SERIALNUMBER=7 CN=scm-sub@scm1.org,OU=8fe50594-7864-4ffd-8b60-d58a0e816297,O=CID-e7d26ff3-a7f8-45fb-8717-6dd874480c0a,SERIALNUMBER=2
8                 Fri Nov 10 13:37:03 UTC 2023   Sat Nov 09 13:37:03 UTC 2024   CN=dn@af036e0c3c9d,OU=8fe50594-7864-4ffd-8b60-d58a0e816297,O=CID-e7d26ff3-a7f8-45fb-8717-6dd874480c0a,SERIALNUMBER=8 CN=scm-sub@scm1.org,OU=8fe50594-7864-4ffd-8b60-d58a0e816297,O=CID-e7d26ff3-a7f8-45fb-8717-6dd874480c0a,SERIALNUMBER=2
9                 Fri Nov 10 13:37:07 UTC 2023   Sat Nov 09 13:37:07 UTC 2024   CN=om1,OU=8fe50594-7864-4ffd-8b60-d58a0e816297,O=CID-e7d26ff3-a7f8-45fb-8717-6dd874480c0a,SERIALNUMBER=9       CN=scm-sub@scm1.org,OU=8fe50594-7864-4ffd-8b60-d58a0e816297,O=CID-e7d26ff3-a7f8-45fb-8717-6dd874480c0a,SERIALNUMBER=2
10                Fri Nov 10 13:37:07 UTC 2023   Sat Nov 09 13:37:07 UTC 2024   CN=om2,OU=8fe50594-7864-4ffd-8b60-d58a0e816297,O=CID-e7d26ff3-a7f8-45fb-8717-6dd874480c0a,SERIALNUMBER=10      CN=scm-sub@scm1.org,OU=8fe50594-7864-4ffd-8b60-d58a0e816297,O=CID-e7d26ff3-a7f8-45fb-8717-6dd874480c0a,SERIALNUMBER=2
11                Fri Nov 10 13:37:09 UTC 2023   Sat Nov 09 13:37:09 UTC 2024   CN=om3,OU=8fe50594-7864-4ffd-8b60-d58a0e816297,O=CID-e7d26ff3-a7f8-45fb-8717-6dd874480c0a,SERIALNUMBER=11      CN=scm-sub@scm1.org,OU=8fe50594-7864-4ffd-8b60-d58a0e816297,O=CID-e7d26ff3-a7f8-45fb-8717-6dd874480c0a,SERIALNUMBER=2
12                Fri Nov 10 13:38:45 UTC 2023   Mon Dec 18 13:38:45 UTC 2028   CN=scm-sub@scm4.org,OU=da53bea2-f1dd-43d0-9220-7ec658cc1a27,O=CID-e7d26ff3-a7f8-45fb-8717-6dd874480c0a,SERIALNUMBER=12 CN=scm@scm1.org,OU=8fe50594-7864-4ffd-8b60-d58a0e816297,O=CID-e7d26ff3-a7f8-45fb-8717-6dd874480c0a,SERIALNUMBER=1</msg>
<status status="PASS" starttime="20231110 13:39:57.434" endtime="20231110 13:39:57.435"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231110 13:39:57.436" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231110 13:39:57.435" endtime="20231110 13:39:57.436"/>
</kw>
<status status="PASS" starttime="20231110 13:39:48.761" endtime="20231110 13:39:57.436"/>
</kw>
<msg timestamp="20231110 13:39:57.436" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231110 13:39:48.759" endtime="20231110 13:39:57.436"/>
</kw>
<msg timestamp="20231110 13:39:57.437" level="INFO">${output} = Certificate list:(Type=VALID, BatchSize=1000000, CertCount=12)
SerialNumber      Valid From                     Expiry                         Subject                                                  ...</msg>
<status status="PASS" starttime="20231110 13:39:48.759" endtime="20231110 13:39:57.437"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${scm4_cert}</var>
<arg>${output}</arg>
<arg>scm4.org</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20231110 13:39:57.438" level="INFO">1 out of 14 lines matched</msg>
<msg timestamp="20231110 13:39:57.438" level="INFO">${scm4_cert} = 12                Fri Nov 10 13:38:45 UTC 2023   Mon Dec 18 13:38:45 UTC 2028   CN=scm-sub@scm4.org,OU=da53bea2-f1dd-43d0-9220-7ec658cc1a27,O=CID-e7d26ff3-a7f8-45fb-8717-6dd874480c0a,SERIALNUMBER=12 C...</msg>
<status status="PASS" starttime="20231110 13:39:57.437" endtime="20231110 13:39:57.438"/>
</kw>
<kw name="Split String" library="String">
<var>${scm4_cert_split}</var>
<arg>${scm4_cert}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231110 13:39:57.438" level="INFO">${scm4_cert_split} = ['12', 'Fri', 'Nov', '10', '13:38:45', 'UTC', '2023', 'Mon', 'Dec', '18', '13:38:45', 'UTC', '2028', 'CN=scm-sub@scm4.org,OU=da53bea2-f1dd-43d0-9220-7ec658cc1a27,O=CID-e7d26ff3-a7f8-45fb-8717-6dd87448...</msg>
<status status="PASS" starttime="20231110 13:39:57.438" endtime="20231110 13:39:57.438"/>
</kw>
<kw name="Strip String" library="String">
<var>${scm4_cert_issuer}</var>
<arg>${scm4_cert_split[4]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20231110 13:39:57.440" level="INFO">${scm4_cert_issuer} = 13:38:45</msg>
<status status="PASS" starttime="20231110 13:39:57.439" endtime="20231110 13:39:57.440"/>
</kw>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<arg>${scm4_cert_issuer}</arg>
<arg>${root_ca_cert_subject}</arg>
<doc>Fails if objects are equal after converting them to strings.</doc>
<status status="PASS" starttime="20231110 13:39:57.441" endtime="20231110 13:39:57.444"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231110 13:39:40.303" endtime="20231110 13:39:57.446"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20231110 13:39:20.325" endtime="20231110 13:39:57.448"/>
</suite>
<suite id="s1-s3" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s3-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/' | sed 's/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231110 13:41:09.625" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' | sed 's/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231110 13:41:09.631" level="INFO">${rc} = 0</msg>
<msg timestamp="20231110 13:41:09.631" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231110 13:41:09.621" endtime="20231110 13:41:09.631"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231110 13:41:09.633" level="INFO">scm</msg>
<status status="PASS" starttime="20231110 13:41:09.632" endtime="20231110 13:41:09.633"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231110 13:41:09.634" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231110 13:41:09.634" endtime="20231110 13:41:09.635"/>
</kw>
<status status="PASS" starttime="20231110 13:41:09.621" endtime="20231110 13:41:09.635"/>
</kw>
<msg timestamp="20231110 13:41:09.635" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231110 13:41:09.620" endtime="20231110 13:41:09.635"/>
</kw>
<msg timestamp="20231110 13:41:09.635" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231110 13:41:09.620" endtime="20231110 13:41:09.635"/>
</kw>
<msg timestamp="20231110 13:41:09.636" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231110 13:41:09.619" endtime="20231110 13:41:09.636"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231110 13:41:09.636" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231110 13:41:09.636" endtime="20231110 13:41:09.636"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231110 13:41:09.642" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231110 13:41:09.819" level="INFO">${rc} = 0</msg>
<msg timestamp="20231110 13:41:09.819" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231110 13:41:09.639" endtime="20231110 13:41:09.819"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231110 13:41:09.821" level="INFO"/>
<status status="PASS" starttime="20231110 13:41:09.820" endtime="20231110 13:41:09.821"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231110 13:41:09.823" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231110 13:41:09.822" endtime="20231110 13:41:09.823"/>
</kw>
<status status="PASS" starttime="20231110 13:41:09.638" endtime="20231110 13:41:09.824"/>
</kw>
<msg timestamp="20231110 13:41:09.824" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231110 13:41:09.638" endtime="20231110 13:41:09.827"/>
</kw>
<status status="PASS" starttime="20231110 13:41:09.637" endtime="20231110 13:41:09.827"/>
</kw>
<status status="PASS" starttime="20231110 13:41:09.637" endtime="20231110 13:41:09.828"/>
</kw>
<status status="PASS" starttime="20231110 13:41:09.618" endtime="20231110 13:41:09.828"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20231110 13:41:09.617" endtime="20231110 13:41:09.829"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20231110 13:41:09.549" endtime="20231110 13:41:09.843"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="37608"/>
</suite>
<statistics>
<total>
<stat pass="5" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="5" fail="0" skip="0" id="s1" name="ozonesecure-ha-scm-decommission">ozonesecure-ha-scm-decommission</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Kinit">ozonesecure-ha-scm-decommission.Kinit</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Primordial-Scm">ozonesecure-ha-scm-decommission.Primordial-Scm</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="Kinit">ozonesecure-ha-scm-decommission.Kinit</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
