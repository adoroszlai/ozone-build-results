<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20231129 08:50:34.372" rpa="false" schemaversion="4">
<suite id="s1" name="ozonesecure-ec">
<suite id="s1-s1" name="S3" source="/opt/hadoop/smoketest/s3">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20231129 08:36:18.347" endtime="20231129 08:36:18.348"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231129 08:36:18.349" level="INFO">${randStr} = 4981119922</msg>
<status status="PASS" starttime="20231129 08:36:18.349" endtime="20231129 08:36:18.349"/>
</kw>
<msg timestamp="20231129 08:36:18.349" level="INFO">${random} = ozone-test-4981119922</msg>
<status status="PASS" starttime="20231129 08:36:18.348" endtime="20231129 08:36:18.349"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231129 08:36:18.351" level="INFO">${PREFIX} = ozone-test-4981119922</msg>
<status status="PASS" starttime="20231129 08:36:18.349" endtime="20231129 08:36:18.351"/>
</kw>
<status status="PASS" starttime="20231129 08:36:18.348" endtime="20231129 08:36:18.351"/>
</kw>
<status status="PASS" starttime="20231129 08:36:18.348" endtime="20231129 08:36:18.351"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which aws</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:36:18.365" level="INFO">Running command 'which aws 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:36:18.365" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:36:18.365" level="INFO">${output} = /usr/local/bin/aws</msg>
<status status="PASS" starttime="20231129 08:36:18.352" endtime="20231129 08:36:18.365"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20231129 08:36:18.366" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:36:18.365" endtime="20231129 08:36:18.366"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="NOT RUN" starttime="20231129 08:36:18.366" endtime="20231129 08:36:18.366"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:36:18.366" endtime="20231129 08:36:18.366"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="NOT RUN" starttime="20231129 08:36:18.366" endtime="20231129 08:36:18.366"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:36:18.366" endtime="20231129 08:36:18.366"/>
</kw>
<status status="PASS" starttime="20231129 08:36:18.352" endtime="20231129 08:36:18.367"/>
</kw>
<status status="PASS" starttime="20231129 08:36:18.351" endtime="20231129 08:36:18.367"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:36:18.370" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:36:18.372" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:36:18.372" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231129 08:36:18.369" endtime="20231129 08:36:18.372"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:36:18.373" level="INFO">scm</msg>
<status status="PASS" starttime="20231129 08:36:18.373" endtime="20231129 08:36:18.373"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:36:18.373" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:36:18.373" endtime="20231129 08:36:18.374"/>
</kw>
<status status="PASS" starttime="20231129 08:36:18.369" endtime="20231129 08:36:18.374"/>
</kw>
<msg timestamp="20231129 08:36:18.374" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:36:18.368" endtime="20231129 08:36:18.374"/>
</kw>
<msg timestamp="20231129 08:36:18.374" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231129 08:36:18.368" endtime="20231129 08:36:18.374"/>
</kw>
<msg timestamp="20231129 08:36:18.374" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231129 08:36:18.368" endtime="20231129 08:36:18.374"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231129 08:36:18.375" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231129 08:36:18.374" endtime="20231129 08:36:18.375"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:36:18.378" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:36:18.421" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:36:18.421" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:36:18.376" endtime="20231129 08:36:18.421"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:36:18.422" level="INFO"/>
<status status="PASS" starttime="20231129 08:36:18.421" endtime="20231129 08:36:18.422"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:36:18.422" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:36:18.422" endtime="20231129 08:36:18.422"/>
</kw>
<status status="PASS" starttime="20231129 08:36:18.376" endtime="20231129 08:36:18.422"/>
</kw>
<msg timestamp="20231129 08:36:18.422" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:36:18.376" endtime="20231129 08:36:18.422"/>
</kw>
<status status="PASS" starttime="20231129 08:36:18.375" endtime="20231129 08:36:18.423"/>
</kw>
<status status="PASS" starttime="20231129 08:36:18.375" endtime="20231129 08:36:18.423"/>
</kw>
<status status="PASS" starttime="20231129 08:36:18.368" endtime="20231129 08:36:18.423"/>
</kw>
<status status="PASS" starttime="20231129 08:36:18.367" endtime="20231129 08:36:18.423"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup secure v4 headers" library="commonawslib">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:36:18.425" level="INFO">Running command 'ozone s3 getsecret  2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:36:22.396" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:36:22.397" level="INFO">${output} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=78682391034d661dcfcd9fe0cb590d8133f69aef07066eee36c5c4e0e09dcd54
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231129 08:36:18.424" endtime="20231129 08:36:22.397"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:36:22.397" level="INFO">awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=78682391034d661dcfcd9fe0cb590d8133f69aef07066eee36c5c4e0e09dcd54
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231129 08:36:22.397" endtime="20231129 08:36:22.397"/>
</kw>
<msg timestamp="20231129 08:36:22.398" level="INFO">${result} = awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=78682391034d661dcfcd9fe0cb590d8133f69aef07066eee36c5c4e0e09dcd54
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231129 08:36:18.423" endtime="20231129 08:36:22.398"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${exists}</var>
<arg>Should Contain</arg>
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3_SECRET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20231129 08:36:22.399" level="FAIL">'awsAccessKey=testuser/scm@EXAMPLE.COM
awsSecret=78682391034d661dcfcd9fe0cb590d8133f69aef07066eee36c5c4e0e09dcd54
isDeleted=false
transactionLogIndex=0' does not contain 'S3_SECRET_ALREADY_EXISTS'</msg>
<status status="FAIL" starttime="20231129 08:36:22.398" endtime="20231129 08:36:22.399"/>
</kw>
<msg timestamp="20231129 08:36:22.399" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20231129 08:36:22.398" endtime="20231129 08:36:22.399"/>
</kw>
<if>
<branch type="IF" condition="${exists}">
<kw name="Execute" library="os">
<arg>ozone s3 revokesecret -y ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231129 08:36:22.399" endtime="20231129 08:36:22.399"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone s3 getsecret ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231129 08:36:22.399" endtime="20231129 08:36:22.399"/>
</kw>
<status status="NOT RUN" starttime="20231129 08:36:22.399" endtime="20231129 08:36:22.399"/>
</branch>
<status status="PASS" starttime="20231129 08:36:22.399" endtime="20231129 08:36:22.400"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${accessKey}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsAccessKey=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231129 08:36:22.400" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231129 08:36:22.400" endtime="20231129 08:36:22.400"/>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey}</arg>
<arg>testuser</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20231129 08:36:22.401" level="INFO">${accessKey} = ['testuser/scm@EXAMPLE.COM']</msg>
<status status="PASS" starttime="20231129 08:36:22.400" endtime="20231129 08:36:22.401"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${secret}</var>
<arg>${result}</arg>
<arg>(?&lt;=awsSecret=).*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231129 08:36:22.401" level="INFO">${secret} = ['78682391034d661dcfcd9fe0cb590d8133f69aef07066eee36c5c4e0e09dcd54']</msg>
<status status="PASS" starttime="20231129 08:36:22.401" endtime="20231129 08:36:22.401"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${accessKey}</var>
<arg>${accessKey[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:36:22.402" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231129 08:36:22.401" endtime="20231129 08:36:22.402"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${secret}</var>
<arg>${secret[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:36:22.403" level="INFO">${secret} = 78682391034d661dcfcd9fe0cb590d8133f69aef07066eee36c5c4e0e09dcd54</msg>
<status status="PASS" starttime="20231129 08:36:22.402" endtime="20231129 08:36:22.403"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:36:22.406" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:36:22.800" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:36:22.801" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:36:22.404" endtime="20231129 08:36:22.801"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:36:22.801" level="INFO"/>
<status status="PASS" starttime="20231129 08:36:22.801" endtime="20231129 08:36:22.801"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:36:22.802" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:36:22.802" endtime="20231129 08:36:22.802"/>
</kw>
<status status="PASS" starttime="20231129 08:36:22.404" endtime="20231129 08:36:22.802"/>
</kw>
<msg timestamp="20231129 08:36:22.802" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:36:22.404" endtime="20231129 08:36:22.802"/>
</kw>
<status status="PASS" starttime="20231129 08:36:22.403" endtime="20231129 08:36:22.802"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${accessKey}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:36:22.805" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:36:23.185" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:36:23.185" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:36:22.803" endtime="20231129 08:36:23.185"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:36:23.186" level="INFO"/>
<status status="PASS" starttime="20231129 08:36:23.186" endtime="20231129 08:36:23.186"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:36:23.187" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:36:23.186" endtime="20231129 08:36:23.187"/>
</kw>
<status status="PASS" starttime="20231129 08:36:22.803" endtime="20231129 08:36:23.187"/>
</kw>
<msg timestamp="20231129 08:36:23.187" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:36:22.803" endtime="20231129 08:36:23.187"/>
</kw>
<status status="PASS" starttime="20231129 08:36:22.802" endtime="20231129 08:36:23.187"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key ${secret}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:36:23.190" level="INFO">Running command 'aws configure set aws_secret_access_key 78682391034d661dcfcd9fe0cb590d8133f69aef07066eee36c5c4e0e09dcd54 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:36:23.605" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:36:23.605" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:36:23.189" endtime="20231129 08:36:23.605"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:36:23.606" level="INFO"/>
<status status="PASS" starttime="20231129 08:36:23.606" endtime="20231129 08:36:23.606"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:36:23.607" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:36:23.606" endtime="20231129 08:36:23.607"/>
</kw>
<status status="PASS" starttime="20231129 08:36:23.188" endtime="20231129 08:36:23.607"/>
</kw>
<msg timestamp="20231129 08:36:23.607" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:36:23.188" endtime="20231129 08:36:23.607"/>
</kw>
<status status="PASS" starttime="20231129 08:36:23.187" endtime="20231129 08:36:23.607"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:36:23.610" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:36:24.016" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:36:24.016" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:36:23.608" endtime="20231129 08:36:24.016"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:36:24.017" level="INFO"/>
<status status="PASS" starttime="20231129 08:36:24.016" endtime="20231129 08:36:24.017"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:36:24.017" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:36:24.017" endtime="20231129 08:36:24.017"/>
</kw>
<status status="PASS" starttime="20231129 08:36:23.608" endtime="20231129 08:36:24.018"/>
</kw>
<msg timestamp="20231129 08:36:24.018" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:36:23.608" endtime="20231129 08:36:24.018"/>
</kw>
<status status="PASS" starttime="20231129 08:36:23.607" endtime="20231129 08:36:24.018"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set default.s3.addressing_style ${OZONE_S3_ADDRESS_STYLE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:36:24.020" level="INFO">Running command 'aws configure set default.s3.addressing_style path 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:36:24.403" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:36:24.403" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:36:24.019" endtime="20231129 08:36:24.403"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:36:24.404" level="INFO"/>
<status status="PASS" starttime="20231129 08:36:24.403" endtime="20231129 08:36:24.404"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:36:24.404" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:36:24.404" endtime="20231129 08:36:24.404"/>
</kw>
<status status="PASS" starttime="20231129 08:36:24.019" endtime="20231129 08:36:24.404"/>
</kw>
<msg timestamp="20231129 08:36:24.404" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:36:24.018" endtime="20231129 08:36:24.404"/>
</kw>
<status status="PASS" starttime="20231129 08:36:24.018" endtime="20231129 08:36:24.405"/>
</kw>
<status status="PASS" starttime="20231129 08:36:18.423" endtime="20231129 08:36:24.405"/>
</kw>
<status status="PASS" starttime="20231129 08:36:18.423" endtime="20231129 08:36:24.405"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231129 08:36:24.405" endtime="20231129 08:36:24.405"/>
</kw>
<status status="PASS" starttime="20231129 08:36:18.367" endtime="20231129 08:36:24.405"/>
</kw>
<status status="PASS" starttime="20231129 08:36:18.367" endtime="20231129 08:36:24.405"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231129 08:36:24.405" endtime="20231129 08:36:24.406"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231129 08:36:24.406" endtime="20231129 08:36:24.406"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231129 08:36:24.406" endtime="20231129 08:36:24.406"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create EC bucket" library="commonawslib">
<kw name="Bucket Exists" library="shell">
<var>${exists}</var>
<arg>o3://${OM_SERVICE_ID}/s3v/erasure</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:36:24.409" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/s3v/erasure 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:36:28.995" level="INFO">${rc} = 255</msg>
<msg timestamp="20231129 08:36:28.995" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20231129 08:36:24.408" endtime="20231129 08:36:28.995"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20231129 08:36:28.996" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:36:28.995" endtime="20231129 08:36:28.996"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:36:28.996" endtime="20231129 08:36:28.996"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:36:28.996" endtime="20231129 08:36:28.996"/>
</kw>
<msg timestamp="20231129 08:36:28.997" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20231129 08:36:24.407" endtime="20231129 08:36:28.997"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${exists}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20231129 08:36:28.997" endtime="20231129 08:36:28.997"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create --replication rs-3-2-1024k --type EC o3://${OM_SERVICE_ID}/s3v/erasure</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:36:29.000" level="INFO">Running command 'ozone sh bucket create --replication rs-3-2-1024k --type EC o3://om/s3v/erasure 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:36:33.311" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:36:33.311" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:36:28.998" endtime="20231129 08:36:33.311"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:36:33.312" level="INFO"/>
<status status="PASS" starttime="20231129 08:36:33.311" endtime="20231129 08:36:33.312"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:36:33.312" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:36:33.312" endtime="20231129 08:36:33.312"/>
</kw>
<status status="PASS" starttime="20231129 08:36:28.998" endtime="20231129 08:36:33.312"/>
</kw>
<msg timestamp="20231129 08:36:33.312" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:36:28.997" endtime="20231129 08:36:33.312"/>
</kw>
<status status="PASS" starttime="20231129 08:36:28.997" endtime="20231129 08:36:33.313"/>
</kw>
<status status="PASS" starttime="20231129 08:36:24.407" endtime="20231129 08:36:33.313"/>
</kw>
<status status="PASS" starttime="20231129 08:36:24.406" endtime="20231129 08:36:33.313"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231129 08:36:33.313" level="INFO">${OZONE_S3_TESTS_SET_UP} = True</msg>
<status status="PASS" starttime="20231129 08:36:33.313" endtime="20231129 08:36:33.313"/>
</kw>
<status status="PASS" starttime="20231129 08:36:18.347" endtime="20231129 08:36:33.313"/>
</kw>
<suite id="s1-s1-s1" name="Awss3" source="/opt/hadoop/smoketest/s3/awss3.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20231129 08:36:33.323" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:36:33.323" endtime="20231129 08:36:33.323"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231129 08:36:33.323" endtime="20231129 08:36:33.323"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231129 08:36:33.324" endtime="20231129 08:36:33.324"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:36:33.324" endtime="20231129 08:36:33.324"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:36:33.324" endtime="20231129 08:36:33.324"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:36:33.324" endtime="20231129 08:36:33.324"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:36:33.324" endtime="20231129 08:36:33.325"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:36:33.325" endtime="20231129 08:36:33.325"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20231129 08:36:33.325" endtime="20231129 08:36:33.325"/>
</kw>
<status status="PASS" starttime="20231129 08:36:33.322" endtime="20231129 08:36:33.325"/>
</kw>
<test id="s1-s1-s1-t1" name="File upload and directory list" line="31">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:36:33.329" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20231129 08:36:33.331" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:36:33.331" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:36:33.327" endtime="20231129 08:36:33.331"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:36:33.332" level="INFO"/>
<status status="PASS" starttime="20231129 08:36:33.331" endtime="20231129 08:36:33.332"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:36:33.332" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:36:33.332" endtime="20231129 08:36:33.332"/>
</kw>
<status status="PASS" starttime="20231129 08:36:33.326" endtime="20231129 08:36:33.333"/>
</kw>
<msg timestamp="20231129 08:36:33.333" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:36:33.326" endtime="20231129 08:36:33.333"/>
</kw>
<status status="PASS" starttime="20231129 08:36:33.326" endtime="20231129 08:36:33.333"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:36:33.337" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://erasure 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:36:38.428" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:36:38.428" level="INFO">${output} = Completed 29 Bytes/29 Bytes (6 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://erasure/testfile             </msg>
<status status="PASS" starttime="20231129 08:36:33.335" endtime="20231129 08:36:38.428"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:36:38.429" level="INFO">Completed 29 Bytes/29 Bytes (6 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://erasure/testfile             </msg>
<status status="PASS" starttime="20231129 08:36:38.429" endtime="20231129 08:36:38.429"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:36:38.430" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:36:38.429" endtime="20231129 08:36:38.430"/>
</kw>
<status status="PASS" starttime="20231129 08:36:33.334" endtime="20231129 08:36:38.430"/>
</kw>
<msg timestamp="20231129 08:36:38.430" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:36:33.334" endtime="20231129 08:36:38.430"/>
</kw>
<msg timestamp="20231129 08:36:38.430" level="INFO">${output} = Completed 29 Bytes/29 Bytes (6 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://erasure/testfile             </msg>
<status status="PASS" starttime="20231129 08:36:33.334" endtime="20231129 08:36:38.430"/>
</kw>
<msg timestamp="20231129 08:36:38.430" level="INFO">${result} = Completed 29 Bytes/29 Bytes (6 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://erasure/testfile             </msg>
<status status="PASS" starttime="20231129 08:36:33.333" endtime="20231129 08:36:38.430"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>upload</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:36:38.431" endtime="20231129 08:36:38.431"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}/dir1/dir2/file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:36:38.434" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://erasure/dir1/dir2/file 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:36:39.196" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:36:39.197" level="INFO">${output} = Completed 29 Bytes/29 Bytes (94 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://erasure/dir1/dir2/file        </msg>
<status status="PASS" starttime="20231129 08:36:38.433" endtime="20231129 08:36:39.197"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:36:39.198" level="INFO">Completed 29 Bytes/29 Bytes (94 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://erasure/dir1/dir2/file        </msg>
<status status="PASS" starttime="20231129 08:36:39.197" endtime="20231129 08:36:39.198"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:36:39.198" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:36:39.198" endtime="20231129 08:36:39.199"/>
</kw>
<status status="PASS" starttime="20231129 08:36:38.432" endtime="20231129 08:36:39.199"/>
</kw>
<msg timestamp="20231129 08:36:39.199" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:36:38.432" endtime="20231129 08:36:39.199"/>
</kw>
<msg timestamp="20231129 08:36:39.199" level="INFO">${output} = Completed 29 Bytes/29 Bytes (94 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://erasure/dir1/dir2/file        </msg>
<status status="PASS" starttime="20231129 08:36:38.431" endtime="20231129 08:36:39.199"/>
</kw>
<msg timestamp="20231129 08:36:39.199" level="INFO">${result} = Completed 29 Bytes/29 Bytes (94 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://erasure/dir1/dir2/file        </msg>
<status status="PASS" starttime="20231129 08:36:38.431" endtime="20231129 08:36:39.199"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>upload</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:36:39.200" endtime="20231129 08:36:39.200"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:36:39.204" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://erasure 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:36:39.826" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:36:39.826" level="INFO">${output} =                            PRE dir1/
2023-11-29 08:36:38         29 testfile</msg>
<status status="PASS" starttime="20231129 08:36:39.202" endtime="20231129 08:36:39.826"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:36:39.827" level="INFO">                           PRE dir1/
2023-11-29 08:36:38         29 testfile</msg>
<status status="PASS" starttime="20231129 08:36:39.827" endtime="20231129 08:36:39.828"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:36:39.828" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:36:39.828" endtime="20231129 08:36:39.828"/>
</kw>
<status status="PASS" starttime="20231129 08:36:39.202" endtime="20231129 08:36:39.828"/>
</kw>
<msg timestamp="20231129 08:36:39.828" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:36:39.201" endtime="20231129 08:36:39.828"/>
</kw>
<msg timestamp="20231129 08:36:39.828" level="INFO">${output} =                            PRE dir1/
2023-11-29 08:36:38         29 testfile</msg>
<status status="PASS" starttime="20231129 08:36:39.201" endtime="20231129 08:36:39.828"/>
</kw>
<msg timestamp="20231129 08:36:39.829" level="INFO">${result} =                            PRE dir1/
2023-11-29 08:36:38         29 testfile</msg>
<status status="PASS" starttime="20231129 08:36:39.200" endtime="20231129 08:36:39.829"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>testfile</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:36:39.829" endtime="20231129 08:36:39.829"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:36:39.829" endtime="20231129 08:36:39.829"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:36:39.830" endtime="20231129 08:36:39.830"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/dir1/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:36:39.833" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://erasure/dir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:36:40.334" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:36:40.334" level="INFO">${output} =                            PRE dir2/
2023-11-29 08:36:38          0 </msg>
<status status="PASS" starttime="20231129 08:36:39.831" endtime="20231129 08:36:40.334"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:36:40.335" level="INFO">                           PRE dir2/
2023-11-29 08:36:38          0 </msg>
<status status="PASS" starttime="20231129 08:36:40.334" endtime="20231129 08:36:40.335"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:36:40.335" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:36:40.335" endtime="20231129 08:36:40.335"/>
</kw>
<status status="PASS" starttime="20231129 08:36:39.831" endtime="20231129 08:36:40.335"/>
</kw>
<msg timestamp="20231129 08:36:40.336" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:36:39.831" endtime="20231129 08:36:40.336"/>
</kw>
<msg timestamp="20231129 08:36:40.336" level="INFO">${output} =                            PRE dir2/
2023-11-29 08:36:38          0 </msg>
<status status="PASS" starttime="20231129 08:36:39.830" endtime="20231129 08:36:40.336"/>
</kw>
<msg timestamp="20231129 08:36:40.336" level="INFO">${result} =                            PRE dir2/
2023-11-29 08:36:38          0 </msg>
<status status="PASS" starttime="20231129 08:36:39.830" endtime="20231129 08:36:40.336"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>testfile</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:36:40.336" endtime="20231129 08:36:40.337"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:36:40.337" endtime="20231129 08:36:40.337"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:36:40.337" endtime="20231129 08:36:40.337"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/dir1/dir2/file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:36:40.340" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://erasure/dir1/dir2/file 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:36:40.824" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:36:40.824" level="INFO">${output} = 2023-11-29 08:36:39         29 file</msg>
<status status="PASS" starttime="20231129 08:36:40.339" endtime="20231129 08:36:40.824"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:36:40.825" level="INFO">2023-11-29 08:36:39         29 file</msg>
<status status="PASS" starttime="20231129 08:36:40.825" endtime="20231129 08:36:40.825"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:36:40.826" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:36:40.826" endtime="20231129 08:36:40.826"/>
</kw>
<status status="PASS" starttime="20231129 08:36:40.338" endtime="20231129 08:36:40.826"/>
</kw>
<msg timestamp="20231129 08:36:40.826" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:36:40.338" endtime="20231129 08:36:40.826"/>
</kw>
<msg timestamp="20231129 08:36:40.827" level="INFO">${output} = 2023-11-29 08:36:39         29 file</msg>
<status status="PASS" starttime="20231129 08:36:40.338" endtime="20231129 08:36:40.827"/>
</kw>
<msg timestamp="20231129 08:36:40.827" level="INFO">${result} = 2023-11-29 08:36:39         29 file</msg>
<status status="PASS" starttime="20231129 08:36:40.337" endtime="20231129 08:36:40.827"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>testfile</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:36:40.827" endtime="20231129 08:36:40.827"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:36:40.827" endtime="20231129 08:36:40.828"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>file</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:36:40.828" endtime="20231129 08:36:40.828"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:36:33.325" endtime="20231129 08:36:40.829"/>
</test>
<test id="s1-s1-s1-t2" name="File upload with special chars" line="50">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:36:40.833" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20231129 08:36:40.835" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:36:40.835" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:36:40.832" endtime="20231129 08:36:40.835"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:36:40.836" level="INFO"/>
<status status="PASS" starttime="20231129 08:36:40.836" endtime="20231129 08:36:40.836"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:36:40.837" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:36:40.836" endtime="20231129 08:36:40.837"/>
</kw>
<status status="PASS" starttime="20231129 08:36:40.831" endtime="20231129 08:36:40.837"/>
</kw>
<msg timestamp="20231129 08:36:40.837" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:36:40.831" endtime="20231129 08:36:40.837"/>
</kw>
<status status="PASS" starttime="20231129 08:36:40.830" endtime="20231129 08:36:40.837"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}/specialchars/a+b</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:36:40.841" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://erasure/specialchars/a+b 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:36:41.608" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:36:41.608" level="INFO">${output} = Completed 29 Bytes/29 Bytes (93 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://erasure/specialchars/a+b      </msg>
<status status="PASS" starttime="20231129 08:36:40.839" endtime="20231129 08:36:41.608"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:36:41.609" level="INFO">Completed 29 Bytes/29 Bytes (93 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://erasure/specialchars/a+b      </msg>
<status status="PASS" starttime="20231129 08:36:41.609" endtime="20231129 08:36:41.610"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:36:41.610" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:36:41.610" endtime="20231129 08:36:41.610"/>
</kw>
<status status="PASS" starttime="20231129 08:36:40.839" endtime="20231129 08:36:41.610"/>
</kw>
<msg timestamp="20231129 08:36:41.610" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:36:40.839" endtime="20231129 08:36:41.610"/>
</kw>
<msg timestamp="20231129 08:36:41.611" level="INFO">${output} = Completed 29 Bytes/29 Bytes (93 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://erasure/specialchars/a+b      </msg>
<status status="PASS" starttime="20231129 08:36:40.838" endtime="20231129 08:36:41.611"/>
</kw>
<msg timestamp="20231129 08:36:41.611" level="INFO">${result} = Completed 29 Bytes/29 Bytes (93 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://erasure/specialchars/a+b      </msg>
<status status="PASS" starttime="20231129 08:36:40.838" endtime="20231129 08:36:41.611"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>upload</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:36:41.611" endtime="20231129 08:36:41.611"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/specialchars/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:36:41.615" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://erasure/specialchars/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:36:42.130" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:36:42.130" level="INFO">${output} = 2023-11-29 08:36:41          0 
2023-11-29 08:36:41         29 a+b</msg>
<status status="PASS" starttime="20231129 08:36:41.613" endtime="20231129 08:36:42.130"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:36:42.131" level="INFO">2023-11-29 08:36:41          0 
2023-11-29 08:36:41         29 a+b</msg>
<status status="PASS" starttime="20231129 08:36:42.130" endtime="20231129 08:36:42.131"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:36:42.131" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:36:42.131" endtime="20231129 08:36:42.131"/>
</kw>
<status status="PASS" starttime="20231129 08:36:41.612" endtime="20231129 08:36:42.132"/>
</kw>
<msg timestamp="20231129 08:36:42.132" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:36:41.612" endtime="20231129 08:36:42.132"/>
</kw>
<msg timestamp="20231129 08:36:42.132" level="INFO">${output} = 2023-11-29 08:36:41          0 
2023-11-29 08:36:41         29 a+b</msg>
<status status="PASS" starttime="20231129 08:36:41.612" endtime="20231129 08:36:42.132"/>
</kw>
<msg timestamp="20231129 08:36:42.132" level="INFO">${result} = 2023-11-29 08:36:41          0 
2023-11-29 08:36:41         29 a+b</msg>
<status status="PASS" starttime="20231129 08:36:41.611" endtime="20231129 08:36:42.132"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>'a b'</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:36:42.132" endtime="20231129 08:36:42.132"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>a+b</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:36:42.133" endtime="20231129 08:36:42.133"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:36:40.829" endtime="20231129 08:36:42.133"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20231129 08:36:33.313" endtime="20231129 08:36:42.134"/>
</suite>
<suite id="s1-s1-s2" name="Boto3" source="/opt/hadoop/smoketest/s3/boto3.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20231129 08:36:42.148" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:36:42.148" endtime="20231129 08:36:42.148"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231129 08:36:42.148" endtime="20231129 08:36:42.148"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231129 08:36:42.148" endtime="20231129 08:36:42.148"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:36:42.148" endtime="20231129 08:36:42.148"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:36:42.148" endtime="20231129 08:36:42.148"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:36:42.149" endtime="20231129 08:36:42.149"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:36:42.149" endtime="20231129 08:36:42.149"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:36:42.149" endtime="20231129 08:36:42.149"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20231129 08:36:42.149" endtime="20231129 08:36:42.149"/>
</kw>
<status status="PASS" starttime="20231129 08:36:42.147" endtime="20231129 08:36:42.149"/>
</kw>
<test id="s1-s1-s2-t1" name="Boto3 Client Test" line="34">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>python3 ${S3_SMOKETEST_DIR}/boto_client.py ${ENDPOINT_URL} ${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:36:42.152" level="INFO">Running command 'python3 /opt/hadoop/smoketest/s3/boto_client.py http://s3g:9878 erasure 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:36:46.430" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:36:46.430" level="INFO">${output} = test_create_bucket (__main__.TestBotoClient) ... /usr/local/lib/python3.6/site-packages/boto3/compat.py:88: PythonDeprecationWarning: Boto3 will no longer support Python 3.6 starting May 30, 2022. To ...</msg>
<status status="PASS" starttime="20231129 08:36:42.151" endtime="20231129 08:36:46.430"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:36:46.431" level="INFO">test_create_bucket (__main__.TestBotoClient) ... /usr/local/lib/python3.6/site-packages/boto3/compat.py:88: PythonDeprecationWarning: Boto3 will no longer support Python 3.6 starting May 30, 2022. To continue receiving service updates, bug fixes, and security updates please upgrade to Python 3.7 or later. More information can be found here: https://aws.amazon.com/blogs/developer/python-support-policy-updates-for-aws-sdks-and-tools/
  warnings.warn(warning, PythonDeprecationWarning)
ok
test_list_bucket (__main__.TestBotoClient) ... ok
test_head_bucket (__main__.TestBotoClient) ... ok
test_bucket_delete (__main__.TestBotoClient) ... ok
test_upload_file (__main__.TestBotoClient) ... ok
test_download_file (__main__.TestBotoClient) ... ok
test_delete_objects (__main__.TestBotoClient) ... ok
test_head_object (__main__.TestBotoClient) ... ok
test_multi_uploads (__main__.TestBotoClient) ... ok

----------------------------------------------------------------------
Ran 9 tests in 4.072s

OK
{'ResponseMetadata': {'RequestId': 'b077aecc-bc68-4ea3-9033-eb5388a0b62e', 'HostId': 'wOZ3PIEIJ7Yar', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Wed, 29 Nov 2023 08:36:42 GMT', 'cache-control': 'no-cache', 'expires': 'Wed, 29 Nov 2023 08:36:42 GMT', 'pragma': 'no-cache', 'content-type': 'text/plain;charset=utf-8', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'location': 'http://s3g:9878/ozone-test-wqxonygpdw', 'server': 'Ozone', 'x-amz-id-2': 'wOZ3PIEIJ7Yar', 'x-amz-request-id': 'b077aecc-bc68-4ea3-9033-eb5388a0b62e', 'content-length': '0'}, 'RetryAttempts': 0}, 'Location': 'http://s3g:9878/ozone-test-wqxonygpdw'}
None
None
None
{'ResponseMetadata': {'RequestId': 'f99779c8-e987-4efc-a491-06786f8e8e91', 'HostId': 'wMum0ee7HVbxl0', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Wed, 29 Nov 2023 08:36:44 GMT', 'cache-control': 'no-cache', 'expires': 'Wed, 29 Nov 2023 08:36:44 GMT', 'pragma': 'no-cache', 'content-type': 'text/plain;charset=utf-8', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'location': 'http://s3g:9878/bucket-yxskgbpkvu', 'server': 'Ozone', 'x-amz-id-2': 'wMum0ee7HVbxl0', 'x-amz-request-id': 'f99779c8-e987-4efc-a491-06786f8e8e91', 'content-length': '0'}, 'RetryAttempts': 0}, 'Location': 'http://s3g:9878/bucket-yxskgbpkvu'}
{'ResponseMetadata': {'RequestId': '2ff9fff6-e28c-4bc7-9aec-1c2db03e1957', 'HostId': '6jyCy3sFL0', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Wed, 29 Nov 2023 08:36:44 GMT', 'cache-control': 'no-cache', 'expires': 'Wed, 29 Nov 2023 08:36:44 GMT', 'pragma': 'no-cache', 'content-type': 'application/xml', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': '6jyCy3sFL0', 'x-amz-request-id': '2ff9fff6-e28c-4bc7-9aec-1c2db03e1957', 'content-length': '465'}, 'RetryAttempts': 0}, 'Buckets': [{'Name': 'bucket-yxskgbpkvu', 'CreationDate': datetime.datetime(2023, 11, 29, 8, 36, 44, 515000, tzinfo=tzlocal())}, {'Name': 'erasure', 'CreationDate': datetime.datetime(2023, 11, 29, 8, 36, 33, 249000, tzinfo=tzlocal())}, {'Name': 'ozone-test-wqxonygpdw', 'CreationDate': datetime.datetime(2023, 11, 29, 8, 36, 42, 492000, tzinfo=tzlocal())}]}
{'ResponseMetadata': {'RequestId': 'adcdbfdd-75a9-41d0-8628-542a132cdc9d', 'HostId': 'in5SoVyh3', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Wed, 29 Nov 2023 08:36:44 GMT', 'cache-control': 'no-cache', 'expires': 'Wed, 29 Nov 2023 08:36:44 GMT', 'pragma': 'no-cache', 'content-type': 'text/xml', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': 'in5SoVyh3', 'x-amz-request-id': 'adcdbfdd-75a9-41d0-8628-542a132cdc9d', 'content-length': '0'}, 'RetryAttempts': 0}}
{'ResponseMetadata': {'RequestId': '6648d5ea-88ec-428e-aaf6-bc84b69543f9', 'HostId': '8SCEd9dY52', 'HTTPStatusCode': 204, 'HTTPHeaders': {'date': 'Wed, 29 Nov 2023 08:36:44 GMT', 'cache-control': 'no-cache', 'expires': 'Wed, 29 Nov 2023 08:36:44 GMT', 'pragma': 'no-cache', 'content-type': 'text/plain;charset=utf-8', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': '8SCEd9dY52', 'x-amz-request-id': '6648d5ea-88ec-428e-aaf6-bc84b69543f9'}, 'RetryAttempts': 0}}
{'ResponseMetadata': {'RequestId': '25e2fb8a-cfb0-4fa2-80a9-ed706ece3e91', 'HostId': 'OMKbGNsQs695t', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Wed, 29 Nov 2023 08:36:44 GMT', 'cache-control': 'no-cache', 'expires': 'Wed, 29 Nov 2023 08:36:44 GMT', 'pragma': 'no-cache', 'content-type': 'binary/octet-stream', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'etag': '"d5568357dc4eaab62bd52312f884c9be"', 'last-modified': 'Wed, 29 Nov 2023 08:36:44 GMT', 'server': 'Ozone', 'x-amz-id-2': 'OMKbGNsQs695t', 'x-amz-request-id': '25e2fb8a-cfb0-4fa2-80a9-ed706ece3e91', 'content-length': '4068'}, 'RetryAttempts': 0}, 'LastModified': datetime.datetime(2023, 11, 29, 8, 36, 44, tzinfo=tzutc()), 'ContentLength': 4068, 'ETag': '"d5568357dc4eaab62bd52312f884c9be"', 'CacheControl': 'no-cache', 'ContentType': 'binary/octet-stream', 'Expires': datetime.datetime(2023, 11, 29, 8, 36, 44, tzinfo=tzutc()), 'Metadata': {}}
{'ResponseMetadata': {'RequestId': 'e0bf5221-4110-4163-b187-63246365dbdf', 'HostId': '2RtGcz37E', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Wed, 29 Nov 2023 08:36:44 GMT', 'cache-control': 'no-cache', 'expires': 'Wed, 29 Nov 2023 08:36:44 GMT', 'pragma': 'no-cache', 'content-type': 'application/xml', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': '2RtGcz37E', 'x-amz-request-id': 'e0bf5221-4110-4163-b187-63246365dbdf', 'content-length': '212'}, 'RetryAttempts': 0}, 'Deleted': [{'Key': 'README4.md'}, {'Key': 'README3.md'}]}
{'ResponseMetadata': {'RequestId': '56e2da27-966c-4d72-b18b-bbc294d42599', 'HostId': 'yRTBkvxlI', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Wed, 29 Nov 2023 08:36:44 GMT', 'cache-control': 'no-cache', 'expires': 'Wed, 29 Nov 2023 08:36:44 GMT', 'pragma': 'no-cache', 'content-type': 'binary/octet-stream', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'etag': '"d5568357dc4eaab62bd52312f884c9be"', 'last-modified': 'Wed, 29 Nov 2023 08:36:43 GMT', 'server': 'Ozone', 'x-amz-id-2': 'yRTBkvxlI', 'x-amz-request-id': '56e2da27-966c-4d72-b18b-bbc294d42599', 'content-length': '4068'}, 'RetryAttempts': 0}, 'LastModified': datetime.datetime(2023, 11, 29, 8, 36, 43, tzinfo=tzutc()), 'ContentLength': 4068, 'ETag': '"d5568357dc4eaab62bd52312f884c9be"', 'CacheControl': 'no-cache', 'ContentType': 'binary/octet-stream', 'Expires': datetime.datetime(2023, 11, 29, 8, 36, 44, tzinfo=tzutc()), 'Metadata': {}}
{'ResponseMetadata': {'RequestId': '455b9dd9-8045-4987-9866-0154f7b47abf', 'HostId': 'Q14xKBTfBD', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Wed, 29 Nov 2023 08:36:44 GMT', 'cache-control': 'no-cache', 'expires': 'Wed, 29 Nov 2023 08:36:44 GMT', 'pragma': 'no-cache', 'content-type': 'application/xml', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': 'Q14xKBTfBD', 'x-amz-request-id': '455b9dd9-8045-4987-9866-0154f7b47abf', 'content-length': '287'}, 'RetryAttempts': 0}, 'Bucket': 'erasure', 'Key': 'hetyqpsskn', 'UploadId': '5c1faed5-6436-4e58-b367-0615e77f4be4-111492923715944461'}
{'ResponseMetadata': {'RequestId': '417ce539-71dd-4d1f-a8d8-ec45a7042e3a', 'HostId': 'tK7HfMLf92w', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Wed, 29 Nov 2023 08:36:46 GMT', 'cache-control': 'no-cache', 'expires': 'Wed, 29 Nov 2023 08:36:46 GMT', 'pragma': 'no-cache', 'content-type': 'application/xml', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': 'tK7HfMLf92w', 'x-amz-request-id': '417ce539-71dd-4d1f-a8d8-ec45a7042e3a', 'content-length': '288'}, 'RetryAttempts': 0}, 'Location': 'erasure', 'Bucket': 'erasure', 'Key': 'hetyqpsskn', 'ETag': '"24d794dfc756320ffadb905d526299bc-2"'}
Boto3 Client Test PASSED!</msg>
<status status="PASS" starttime="20231129 08:36:46.430" endtime="20231129 08:36:46.431"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:36:46.431" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:36:46.431" endtime="20231129 08:36:46.432"/>
</kw>
<status status="PASS" starttime="20231129 08:36:42.150" endtime="20231129 08:36:46.432"/>
</kw>
<msg timestamp="20231129 08:36:46.432" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:36:42.150" endtime="20231129 08:36:46.432"/>
</kw>
<msg timestamp="20231129 08:36:46.432" level="INFO">${result} = test_create_bucket (__main__.TestBotoClient) ... /usr/local/lib/python3.6/site-packages/boto3/compat.py:88: PythonDeprecationWarning: Boto3 will no longer support Python 3.6 starting May 30, 2022. To ...</msg>
<status status="PASS" starttime="20231129 08:36:42.150" endtime="20231129 08:36:46.432"/>
</kw>
<timeout value="15 minutes"/>
<status status="PASS" starttime="20231129 08:36:42.149" endtime="20231129 08:36:46.432"/>
</test>
<doc>S3 gateway test with Boto3 Client</doc>
<status status="PASS" starttime="20231129 08:36:42.135" endtime="20231129 08:36:46.433"/>
</suite>
<suite id="s1-s1-s3" name="Bucketcreate" source="/opt/hadoop/smoketest/s3/bucketcreate.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20231129 08:36:46.443" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:36:46.443" endtime="20231129 08:36:46.443"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231129 08:36:46.444" endtime="20231129 08:36:46.444"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231129 08:36:46.444" endtime="20231129 08:36:46.444"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:36:46.444" endtime="20231129 08:36:46.444"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:36:46.444" endtime="20231129 08:36:46.444"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:36:46.444" endtime="20231129 08:36:46.444"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:36:46.444" endtime="20231129 08:36:46.445"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:36:46.445" endtime="20231129 08:36:46.445"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20231129 08:36:46.445" endtime="20231129 08:36:46.445"/>
</kw>
<status status="PASS" starttime="20231129 08:36:46.443" endtime="20231129 08:36:46.445"/>
</kw>
<test id="s1-s1-s3-t1" name="Create new bucket" line="32">
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Ozone String" library="commonawslib">
<var>${postfix}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231129 08:36:46.447" level="INFO">${randStr} = 2696797612</msg>
<status status="PASS" starttime="20231129 08:36:46.446" endtime="20231129 08:36:46.447"/>
</kw>
<msg timestamp="20231129 08:36:46.447" level="INFO">${postfix} = ozone-test-2696797612</msg>
<status status="PASS" starttime="20231129 08:36:46.446" endtime="20231129 08:36:46.447"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:36:46.447" level="INFO">${bucket} = bucket-ozone-test-2696797612</msg>
<status status="PASS" starttime="20231129 08:36:46.447" endtime="20231129 08:36:46.447"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:36:46.452" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-ozone-test-2696797612 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:36:46.894" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:36:46.895" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-2696797612"
}</msg>
<status status="PASS" starttime="20231129 08:36:46.450" endtime="20231129 08:36:46.895"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:36:46.896" level="INFO">{
    "Location": "http://s3g:9878/bucket-ozone-test-2696797612"
}</msg>
<status status="PASS" starttime="20231129 08:36:46.895" endtime="20231129 08:36:46.896"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:36:46.896" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:36:46.896" endtime="20231129 08:36:46.896"/>
</kw>
<status status="PASS" starttime="20231129 08:36:46.449" endtime="20231129 08:36:46.896"/>
</kw>
<msg timestamp="20231129 08:36:46.896" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:36:46.449" endtime="20231129 08:36:46.896"/>
</kw>
<msg timestamp="20231129 08:36:46.897" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-2696797612"
}</msg>
<status status="PASS" starttime="20231129 08:36:46.448" endtime="20231129 08:36:46.897"/>
</kw>
<msg timestamp="20231129 08:36:46.897" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-ozone-test-2696797612"
}</msg>
<status status="PASS" starttime="20231129 08:36:46.448" endtime="20231129 08:36:46.897"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:36:46.897" endtime="20231129 08:36:46.897"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:36:46.897" endtime="20231129 08:36:46.898"/>
</kw>
<status status="PASS" starttime="20231129 08:36:46.447" endtime="20231129 08:36:46.898"/>
</kw>
<status status="PASS" starttime="20231129 08:36:46.446" endtime="20231129 08:36:46.898"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:36:46.445" endtime="20231129 08:36:46.898"/>
</test>
<test id="s1-s1-s3-t2" name="Create bucket which already exists" line="35">
<kw name="Create bucket" library="commonawslib">
<var>${bucket}</var>
<kw name="Generate Ozone String" library="commonawslib">
<var>${postfix}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231129 08:36:46.900" level="INFO">${randStr} = 6939900327</msg>
<status status="PASS" starttime="20231129 08:36:46.900" endtime="20231129 08:36:46.900"/>
</kw>
<msg timestamp="20231129 08:36:46.900" level="INFO">${postfix} = ozone-test-6939900327</msg>
<status status="PASS" starttime="20231129 08:36:46.900" endtime="20231129 08:36:46.900"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:36:46.901" level="INFO">${bucket} = bucket-ozone-test-6939900327</msg>
<status status="PASS" starttime="20231129 08:36:46.901" endtime="20231129 08:36:46.901"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:36:46.904" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-ozone-test-6939900327 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:36:47.347" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:36:47.348" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-6939900327"
}</msg>
<status status="PASS" starttime="20231129 08:36:46.903" endtime="20231129 08:36:47.348"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:36:47.349" level="INFO">{
    "Location": "http://s3g:9878/bucket-ozone-test-6939900327"
}</msg>
<status status="PASS" starttime="20231129 08:36:47.348" endtime="20231129 08:36:47.349"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:36:47.349" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:36:47.349" endtime="20231129 08:36:47.349"/>
</kw>
<status status="PASS" starttime="20231129 08:36:46.902" endtime="20231129 08:36:47.349"/>
</kw>
<msg timestamp="20231129 08:36:47.349" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:36:46.902" endtime="20231129 08:36:47.349"/>
</kw>
<msg timestamp="20231129 08:36:47.350" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-6939900327"
}</msg>
<status status="PASS" starttime="20231129 08:36:46.902" endtime="20231129 08:36:47.350"/>
</kw>
<msg timestamp="20231129 08:36:47.350" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-ozone-test-6939900327"
}</msg>
<status status="PASS" starttime="20231129 08:36:46.901" endtime="20231129 08:36:47.350"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:36:47.350" endtime="20231129 08:36:47.350"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:36:47.350" endtime="20231129 08:36:47.351"/>
</kw>
<status status="PASS" starttime="20231129 08:36:46.901" endtime="20231129 08:36:47.351"/>
</kw>
<msg timestamp="20231129 08:36:47.351" level="INFO">${bucket} = bucket-ozone-test-6939900327</msg>
<status status="PASS" starttime="20231129 08:36:46.899" endtime="20231129 08:36:47.351"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:36:47.353" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-ozone-test-6939900327 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:36:48.002" level="INFO">${rc} = 255</msg>
<msg timestamp="20231129 08:36:48.002" level="INFO">${output} = 
An error occurred (BucketAlreadyExists) when calling the CreateBucket operation: The requested bucket name is not available as it already exists.</msg>
<status status="PASS" starttime="20231129 08:36:47.352" endtime="20231129 08:36:48.002"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:36:48.003" level="INFO">
An error occurred (BucketAlreadyExists) when calling the CreateBucket operation: The requested bucket name is not available as it already exists.</msg>
<status status="PASS" starttime="20231129 08:36:48.002" endtime="20231129 08:36:48.003"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:36:48.003" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:36:48.003" endtime="20231129 08:36:48.004"/>
</kw>
<msg timestamp="20231129 08:36:48.004" level="INFO">${output} = 
An error occurred (BucketAlreadyExists) when calling the CreateBucket operation: The requested bucket name is not available as it already exists.</msg>
<status status="PASS" starttime="20231129 08:36:47.351" endtime="20231129 08:36:48.004"/>
</kw>
<msg timestamp="20231129 08:36:48.004" level="INFO">${result} = 
An error occurred (BucketAlreadyExists) when calling the CreateBucket operation: The requested bucket name is not available as it already exists.</msg>
<status status="PASS" starttime="20231129 08:36:47.351" endtime="20231129 08:36:48.004"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BucketAlreadyExists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:36:48.004" endtime="20231129 08:36:48.005"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:36:46.899" endtime="20231129 08:36:48.005"/>
</test>
<test id="s1-s1-s3-t3" name="Create bucket with invalid bucket name" line="40">
<kw name="Generate Ozone String" library="commonawslib">
<var>${randStr}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231129 08:36:48.007" level="INFO">${randStr} = 7271412999</msg>
<status status="PASS" starttime="20231129 08:36:48.006" endtime="20231129 08:36:48.007"/>
</kw>
<msg timestamp="20231129 08:36:48.007" level="INFO">${randStr} = ozone-test-7271412999</msg>
<status status="PASS" starttime="20231129 08:36:48.006" endtime="20231129 08:36:48.007"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket invalid_bucket_${randStr}</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:36:48.010" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket invalid_bucket_ozone-test-7271412999 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:36:48.452" level="INFO">${rc} = 255</msg>
<msg timestamp="20231129 08:36:48.452" level="INFO">${output} = 
An error occurred (InvalidBucketName) when calling the CreateBucket operation: The specified bucket is not valid.</msg>
<status status="PASS" starttime="20231129 08:36:48.008" endtime="20231129 08:36:48.452"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:36:48.453" level="INFO">
An error occurred (InvalidBucketName) when calling the CreateBucket operation: The specified bucket is not valid.</msg>
<status status="PASS" starttime="20231129 08:36:48.452" endtime="20231129 08:36:48.453"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:36:48.453" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:36:48.453" endtime="20231129 08:36:48.453"/>
</kw>
<msg timestamp="20231129 08:36:48.453" level="INFO">${output} = 
An error occurred (InvalidBucketName) when calling the CreateBucket operation: The specified bucket is not valid.</msg>
<status status="PASS" starttime="20231129 08:36:48.008" endtime="20231129 08:36:48.453"/>
</kw>
<msg timestamp="20231129 08:36:48.454" level="INFO">${result} = 
An error occurred (InvalidBucketName) when calling the CreateBucket operation: The specified bucket is not valid.</msg>
<status status="PASS" starttime="20231129 08:36:48.007" endtime="20231129 08:36:48.454"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidBucketName</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:36:48.454" endtime="20231129 08:36:48.454"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:36:48.005" endtime="20231129 08:36:48.454"/>
</test>
<test id="s1-s1-s3-t4" name="Create new bucket and check no group ACL" line="45">
<kw name="Create bucket" library="commonawslib">
<var>${bucket}</var>
<kw name="Generate Ozone String" library="commonawslib">
<var>${postfix}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231129 08:36:48.456" level="INFO">${randStr} = 6825585336</msg>
<status status="PASS" starttime="20231129 08:36:48.456" endtime="20231129 08:36:48.456"/>
</kw>
<msg timestamp="20231129 08:36:48.456" level="INFO">${postfix} = ozone-test-6825585336</msg>
<status status="PASS" starttime="20231129 08:36:48.456" endtime="20231129 08:36:48.457"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:36:48.457" level="INFO">${bucket} = bucket-ozone-test-6825585336</msg>
<status status="PASS" starttime="20231129 08:36:48.457" endtime="20231129 08:36:48.457"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:36:48.460" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-ozone-test-6825585336 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:36:48.909" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:36:48.909" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-6825585336"
}</msg>
<status status="PASS" starttime="20231129 08:36:48.459" endtime="20231129 08:36:48.909"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:36:48.910" level="INFO">{
    "Location": "http://s3g:9878/bucket-ozone-test-6825585336"
}</msg>
<status status="PASS" starttime="20231129 08:36:48.909" endtime="20231129 08:36:48.910"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:36:48.910" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:36:48.910" endtime="20231129 08:36:48.910"/>
</kw>
<status status="PASS" starttime="20231129 08:36:48.458" endtime="20231129 08:36:48.911"/>
</kw>
<msg timestamp="20231129 08:36:48.911" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:36:48.458" endtime="20231129 08:36:48.911"/>
</kw>
<msg timestamp="20231129 08:36:48.911" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-6825585336"
}</msg>
<status status="PASS" starttime="20231129 08:36:48.458" endtime="20231129 08:36:48.911"/>
</kw>
<msg timestamp="20231129 08:36:48.911" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-ozone-test-6825585336"
}</msg>
<status status="PASS" starttime="20231129 08:36:48.457" endtime="20231129 08:36:48.911"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:36:48.911" endtime="20231129 08:36:48.911"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:36:48.912" endtime="20231129 08:36:48.912"/>
</kw>
<status status="PASS" starttime="20231129 08:36:48.457" endtime="20231129 08:36:48.912"/>
</kw>
<msg timestamp="20231129 08:36:48.912" level="INFO">${bucket} = bucket-ozone-test-6825585336</msg>
<status status="PASS" starttime="20231129 08:36:48.455" endtime="20231129 08:36:48.912"/>
</kw>
<kw name="Execute" library="os">
<var>${acl}</var>
<arg>ozone sh bucket getacl s3v/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:36:48.915" level="INFO">Running command 'ozone sh bucket getacl s3v/bucket-ozone-test-6825585336 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:36:52.958" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:36:52.958" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20231129 08:36:48.913" endtime="20231129 08:36:52.958"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:36:52.959" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "NONE" ]
} ]</msg>
<status status="PASS" starttime="20231129 08:36:52.959" endtime="20231129 08:36:52.959"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:36:52.960" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:36:52.959" endtime="20231129 08:36:52.960"/>
</kw>
<status status="PASS" starttime="20231129 08:36:48.913" endtime="20231129 08:36:52.960"/>
</kw>
<msg timestamp="20231129 08:36:52.960" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:36:48.913" endtime="20231129 08:36:52.960"/>
</kw>
<msg timestamp="20231129 08:36:52.960" level="INFO">${acl} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ ...</msg>
<status status="PASS" starttime="20231129 08:36:48.912" endtime="20231129 08:36:52.960"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${group}</var>
<arg>${acl}</arg>
<arg>"GROUP"</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231129 08:36:52.961" level="INFO">${group} = ['"GROUP"']</msg>
<status status="PASS" starttime="20231129 08:36:52.961" endtime="20231129 08:36:52.961"/>
</kw>
<if>
<branch type="IF" condition="'${group}' is not '[]'">
<kw name="Evaluate" library="BuiltIn">
<var>${json}</var>
<arg>json.loads('''${acl}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20231129 08:36:52.962" level="INFO">${json} = [{'type': 'USER', 'name': 'testuser/scm@EXAMPLE.COM', 'aclScope': 'ACCESS', 'aclList': ['ALL']}, {'type': 'GROUP', 'name': 'testuser', 'aclScope': 'ACCESS', 'aclList': ['NONE']}]</msg>
<status status="PASS" starttime="20231129 08:36:52.962" endtime="20231129 08:36:52.962"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${json}[1][type]</arg>
<arg>GROUP</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:36:52.962" endtime="20231129 08:36:52.962"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${json}[1][aclList]</arg>
<arg>NONE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:36:52.963" endtime="20231129 08:36:52.963"/>
</kw>
<status status="PASS" starttime="20231129 08:36:52.961" endtime="20231129 08:36:52.963"/>
</branch>
<status status="PASS" starttime="20231129 08:36:52.961" endtime="20231129 08:36:52.963"/>
</if>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:36:48.455" endtime="20231129 08:36:52.963"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20231129 08:36:46.434" endtime="20231129 08:36:52.964"/>
</suite>
<suite id="s1-s1-s4" name="Bucketdelete" source="/opt/hadoop/smoketest/s3/bucketdelete.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20231129 08:36:52.973" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:36:52.973" endtime="20231129 08:36:52.974"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231129 08:36:52.974" endtime="20231129 08:36:52.974"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231129 08:36:52.974" endtime="20231129 08:36:52.974"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:36:52.974" endtime="20231129 08:36:52.974"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:36:52.974" endtime="20231129 08:36:52.974"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:36:52.974" endtime="20231129 08:36:52.974"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:36:52.974" endtime="20231129 08:36:52.974"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:36:52.975" endtime="20231129 08:36:52.975"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20231129 08:36:52.975" endtime="20231129 08:36:52.975"/>
</kw>
<status status="PASS" starttime="20231129 08:36:52.973" endtime="20231129 08:36:52.975"/>
</kw>
<test id="s1-s1-s4-t1" name="Delete existing bucket" line="37">
<kw name="Create bucket to be deleted">
<var>${bucket}</var>
<kw name="Run Keyword If" library="BuiltIn">
<var>${bucket}</var>
<arg>'${BUCKET}' == 'link'</arg>
<arg>Create link</arg>
<arg>to-be-deleted</arg>
<arg>ELSE</arg>
<arg>Run Keyword</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create bucket</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Ozone String" library="commonawslib">
<var>${postfix}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231129 08:36:52.978" level="INFO">${randStr} = 5626962752</msg>
<status status="PASS" starttime="20231129 08:36:52.978" endtime="20231129 08:36:52.978"/>
</kw>
<msg timestamp="20231129 08:36:52.978" level="INFO">${postfix} = ozone-test-5626962752</msg>
<status status="PASS" starttime="20231129 08:36:52.977" endtime="20231129 08:36:52.978"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:36:52.979" level="INFO">${bucket} = bucket-ozone-test-5626962752</msg>
<status status="PASS" starttime="20231129 08:36:52.978" endtime="20231129 08:36:52.979"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:36:52.982" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-ozone-test-5626962752 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:36:53.427" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:36:53.428" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-5626962752"
}</msg>
<status status="PASS" starttime="20231129 08:36:52.980" endtime="20231129 08:36:53.428"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:36:53.429" level="INFO">{
    "Location": "http://s3g:9878/bucket-ozone-test-5626962752"
}</msg>
<status status="PASS" starttime="20231129 08:36:53.428" endtime="20231129 08:36:53.429"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:36:53.429" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:36:53.429" endtime="20231129 08:36:53.429"/>
</kw>
<status status="PASS" starttime="20231129 08:36:52.980" endtime="20231129 08:36:53.430"/>
</kw>
<msg timestamp="20231129 08:36:53.430" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:36:52.980" endtime="20231129 08:36:53.430"/>
</kw>
<msg timestamp="20231129 08:36:53.430" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-5626962752"
}</msg>
<status status="PASS" starttime="20231129 08:36:52.979" endtime="20231129 08:36:53.430"/>
</kw>
<msg timestamp="20231129 08:36:53.430" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-ozone-test-5626962752"
}</msg>
<status status="PASS" starttime="20231129 08:36:52.979" endtime="20231129 08:36:53.430"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:36:53.430" endtime="20231129 08:36:53.430"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:36:53.431" endtime="20231129 08:36:53.431"/>
</kw>
<status status="PASS" starttime="20231129 08:36:52.979" endtime="20231129 08:36:53.431"/>
</kw>
<status status="PASS" starttime="20231129 08:36:52.977" endtime="20231129 08:36:53.431"/>
</kw>
<status status="PASS" starttime="20231129 08:36:52.976" endtime="20231129 08:36:53.431"/>
</kw>
<msg timestamp="20231129 08:36:53.431" level="INFO">${bucket} = bucket-ozone-test-5626962752</msg>
<status status="PASS" starttime="20231129 08:36:52.976" endtime="20231129 08:36:53.431"/>
</kw>
<msg timestamp="20231129 08:36:53.431" level="INFO">${bucket} = bucket-ozone-test-5626962752</msg>
<status status="PASS" starttime="20231129 08:36:52.975" endtime="20231129 08:36:53.431"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>delete-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:36:53.434" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket bucket-ozone-test-5626962752 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:36:53.882" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:36:53.882" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:36:53.433" endtime="20231129 08:36:53.882"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:36:53.883" level="INFO"/>
<status status="PASS" starttime="20231129 08:36:53.883" endtime="20231129 08:36:53.883"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:36:53.884" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:36:53.883" endtime="20231129 08:36:53.884"/>
</kw>
<status status="PASS" starttime="20231129 08:36:53.433" endtime="20231129 08:36:53.884"/>
</kw>
<msg timestamp="20231129 08:36:53.884" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:36:53.432" endtime="20231129 08:36:53.884"/>
</kw>
<msg timestamp="20231129 08:36:53.884" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:36:53.432" endtime="20231129 08:36:53.884"/>
</kw>
<status status="PASS" starttime="20231129 08:36:53.432" endtime="20231129 08:36:53.884"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:36:52.975" endtime="20231129 08:36:53.885"/>
</test>
<test id="s1-s1-s4-t2" name="Delete non-existent bucket" line="41">
<kw name="Generate Ozone String" library="commonawslib">
<var>${randStr}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231129 08:36:53.886" level="INFO">${randStr} = 4474062647</msg>
<status status="PASS" starttime="20231129 08:36:53.886" endtime="20231129 08:36:53.886"/>
</kw>
<msg timestamp="20231129 08:36:53.887" level="INFO">${randStr} = ozone-test-4474062647</msg>
<status status="PASS" starttime="20231129 08:36:53.886" endtime="20231129 08:36:53.887"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>delete-bucket --bucket nosuchbucket-${randStr}</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:36:53.889" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket nosuchbucket-ozone-test-4474062647 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:36:54.341" level="INFO">${rc} = 255</msg>
<msg timestamp="20231129 08:36:54.341" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the DeleteBucket operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20231129 08:36:53.888" endtime="20231129 08:36:54.342"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:36:54.342" level="INFO">
An error occurred (NoSuchBucket) when calling the DeleteBucket operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20231129 08:36:54.342" endtime="20231129 08:36:54.342"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:36:54.343" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:36:54.343" endtime="20231129 08:36:54.343"/>
</kw>
<msg timestamp="20231129 08:36:54.343" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the DeleteBucket operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20231129 08:36:53.887" endtime="20231129 08:36:54.343"/>
</kw>
<msg timestamp="20231129 08:36:54.343" level="INFO">${result} = 
An error occurred (NoSuchBucket) when calling the DeleteBucket operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20231129 08:36:53.887" endtime="20231129 08:36:54.343"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchBucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:36:54.344" endtime="20231129 08:36:54.344"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:36:53.885" endtime="20231129 08:36:54.344"/>
</test>
<test id="s1-s1-s4-t3" name="Delete bucket with incomplete multipart uploads" line="47">
<kw name="Create bucket" library="commonawslib">
<var>${bucket}</var>
<kw name="Generate Ozone String" library="commonawslib">
<var>${postfix}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231129 08:36:54.346" level="INFO">${randStr} = 2960989839</msg>
<status status="PASS" starttime="20231129 08:36:54.346" endtime="20231129 08:36:54.346"/>
</kw>
<msg timestamp="20231129 08:36:54.346" level="INFO">${postfix} = ozone-test-2960989839</msg>
<status status="PASS" starttime="20231129 08:36:54.346" endtime="20231129 08:36:54.346"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:36:54.347" level="INFO">${bucket} = bucket-ozone-test-2960989839</msg>
<status status="PASS" starttime="20231129 08:36:54.347" endtime="20231129 08:36:54.347"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:36:54.350" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-ozone-test-2960989839 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:36:54.794" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:36:54.794" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-2960989839"
}</msg>
<status status="PASS" starttime="20231129 08:36:54.349" endtime="20231129 08:36:54.794"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:36:54.795" level="INFO">{
    "Location": "http://s3g:9878/bucket-ozone-test-2960989839"
}</msg>
<status status="PASS" starttime="20231129 08:36:54.794" endtime="20231129 08:36:54.795"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:36:54.795" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:36:54.795" endtime="20231129 08:36:54.795"/>
</kw>
<status status="PASS" starttime="20231129 08:36:54.348" endtime="20231129 08:36:54.796"/>
</kw>
<msg timestamp="20231129 08:36:54.796" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:36:54.348" endtime="20231129 08:36:54.796"/>
</kw>
<msg timestamp="20231129 08:36:54.796" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-2960989839"
}</msg>
<status status="PASS" starttime="20231129 08:36:54.348" endtime="20231129 08:36:54.796"/>
</kw>
<msg timestamp="20231129 08:36:54.796" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-ozone-test-2960989839"
}</msg>
<status status="PASS" starttime="20231129 08:36:54.347" endtime="20231129 08:36:54.796"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:36:54.796" endtime="20231129 08:36:54.796"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:36:54.797" endtime="20231129 08:36:54.797"/>
</kw>
<status status="PASS" starttime="20231129 08:36:54.347" endtime="20231129 08:36:54.797"/>
</kw>
<msg timestamp="20231129 08:36:54.797" level="INFO">${bucket} = bucket-ozone-test-2960989839</msg>
<status status="PASS" starttime="20231129 08:36:54.345" endtime="20231129 08:36:54.797"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${initiate_result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key incomplete-multipartkey</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:36:54.800" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-ozone-test-2960989839 --key incomplete-multipartkey 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:36:55.262" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:36:55.262" level="INFO">${output} = {
    "Bucket": "bucket-ozone-test-2960989839",
    "Key": "incomplete-multipartkey",
    "UploadId": "319be906-0719-4b65-96e9-d94d287d5136-111492924388933648"
}</msg>
<status status="PASS" starttime="20231129 08:36:54.799" endtime="20231129 08:36:55.262"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:36:55.263" level="INFO">{
    "Bucket": "bucket-ozone-test-2960989839",
    "Key": "incomplete-multipartkey",
    "UploadId": "319be906-0719-4b65-96e9-d94d287d5136-111492924388933648"
}</msg>
<status status="PASS" starttime="20231129 08:36:55.262" endtime="20231129 08:36:55.263"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:36:55.263" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:36:55.263" endtime="20231129 08:36:55.263"/>
</kw>
<status status="PASS" starttime="20231129 08:36:54.798" endtime="20231129 08:36:55.263"/>
</kw>
<msg timestamp="20231129 08:36:55.264" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:36:54.798" endtime="20231129 08:36:55.264"/>
</kw>
<msg timestamp="20231129 08:36:55.264" level="INFO">${output} = {
    "Bucket": "bucket-ozone-test-2960989839",
    "Key": "incomplete-multipartkey",
    "UploadId": "319be906-0719-4b65-96e9-d94d287d5136-111492924388933648"
}</msg>
<status status="PASS" starttime="20231129 08:36:54.798" endtime="20231129 08:36:55.264"/>
</kw>
<msg timestamp="20231129 08:36:55.264" level="INFO">${initiate_result} = {
    "Bucket": "bucket-ozone-test-2960989839",
    "Key": "incomplete-multipartkey",
    "UploadId": "319be906-0719-4b65-96e9-d94d287d5136-111492924388933648"
}</msg>
<status status="PASS" starttime="20231129 08:36:54.797" endtime="20231129 08:36:55.264"/>
</kw>
<kw name="Execute" library="os">
<var>${uploadID}</var>
<arg>echo '${initiate_result}' | jq -r '.UploadId'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:36:55.267" level="INFO">Running command 'echo '{
    "Bucket": "bucket-ozone-test-2960989839",
    "Key": "incomplete-multipartkey",
    "UploadId": "319be906-0719-4b65-96e9-d94d287d5136-111492924388933648"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:36:55.293" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:36:55.293" level="INFO">${output} = 319be906-0719-4b65-96e9-d94d287d5136-111492924388933648</msg>
<status status="PASS" starttime="20231129 08:36:55.265" endtime="20231129 08:36:55.293"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:36:55.294" level="INFO">319be906-0719-4b65-96e9-d94d287d5136-111492924388933648</msg>
<status status="PASS" starttime="20231129 08:36:55.293" endtime="20231129 08:36:55.294"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:36:55.294" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:36:55.294" endtime="20231129 08:36:55.294"/>
</kw>
<status status="PASS" starttime="20231129 08:36:55.265" endtime="20231129 08:36:55.295"/>
</kw>
<msg timestamp="20231129 08:36:55.295" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:36:55.265" endtime="20231129 08:36:55.295"/>
</kw>
<msg timestamp="20231129 08:36:55.295" level="INFO">${uploadID} = 319be906-0719-4b65-96e9-d94d287d5136-111492924388933648</msg>
<status status="PASS" starttime="20231129 08:36:55.264" endtime="20231129 08:36:55.295"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${initiate_result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:36:55.295" endtime="20231129 08:36:55.295"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${initiate_result}</arg>
<arg>incomplete-multipartkey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:36:55.295" endtime="20231129 08:36:55.296"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${initiate_result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:36:55.296" endtime="20231129 08:36:55.296"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${delete_fail_result}</var>
<arg>delete-bucket --bucket ${bucket}</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:36:55.298" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket bucket-ozone-test-2960989839 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:36:55.748" level="INFO">${rc} = 255</msg>
<msg timestamp="20231129 08:36:55.748" level="INFO">${output} = 
An error occurred (BucketNotEmpty) when calling the DeleteBucket operation: The bucket you tried to delete is not empty. If you are using --force option to delete all objects in the bucket, please en...</msg>
<status status="PASS" starttime="20231129 08:36:55.297" endtime="20231129 08:36:55.748"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:36:55.749" level="INFO">
An error occurred (BucketNotEmpty) when calling the DeleteBucket operation: The bucket you tried to delete is not empty. If you are using --force option to delete all objects in the bucket, please ensure that the bucket layout is OBJECT_STORE or that the bucket is completely empty before delete.</msg>
<status status="PASS" starttime="20231129 08:36:55.749" endtime="20231129 08:36:55.749"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:36:55.750" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:36:55.750" endtime="20231129 08:36:55.750"/>
</kw>
<msg timestamp="20231129 08:36:55.750" level="INFO">${output} = 
An error occurred (BucketNotEmpty) when calling the DeleteBucket operation: The bucket you tried to delete is not empty. If you are using --force option to delete all objects in the bucket, please en...</msg>
<status status="PASS" starttime="20231129 08:36:55.297" endtime="20231129 08:36:55.750"/>
</kw>
<msg timestamp="20231129 08:36:55.751" level="INFO">${delete_fail_result} = 
An error occurred (BucketNotEmpty) when calling the DeleteBucket operation: The bucket you tried to delete is not empty. If you are using --force option to delete all objects in the bucket, please en...</msg>
<status status="PASS" starttime="20231129 08:36:55.296" endtime="20231129 08:36:55.751"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${delete_fail_result}</arg>
<arg>BucketNotEmpty</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:36:55.751" endtime="20231129 08:36:55.751"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${abort_result}</var>
<arg>abort-multipart-upload --bucket ${bucket} --key incomplete-multipartkey --upload-id ${uploadID}</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:36:55.754" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket bucket-ozone-test-2960989839 --key incomplete-multipartkey --upload-id 319be906-0719-4b65-96e9-d94d287d5136-111492924388933648 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:36:56.207" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:36:56.207" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:36:55.752" endtime="20231129 08:36:56.207"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:36:56.208" level="INFO"/>
<status status="PASS" starttime="20231129 08:36:56.207" endtime="20231129 08:36:56.208"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:36:56.209" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:36:56.208" endtime="20231129 08:36:56.209"/>
</kw>
<msg timestamp="20231129 08:36:56.209" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:36:55.752" endtime="20231129 08:36:56.209"/>
</kw>
<msg timestamp="20231129 08:36:56.209" level="INFO">${abort_result} = </msg>
<status status="PASS" starttime="20231129 08:36:55.751" endtime="20231129 08:36:56.209"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${delete_result}</var>
<arg>delete-bucket --bucket ${bucket}</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:36:56.212" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket bucket-ozone-test-2960989839 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:36:56.673" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:36:56.673" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:36:56.211" endtime="20231129 08:36:56.673"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:36:56.674" level="INFO"/>
<status status="PASS" starttime="20231129 08:36:56.674" endtime="20231129 08:36:56.674"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:36:56.675" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:36:56.674" endtime="20231129 08:36:56.675"/>
</kw>
<msg timestamp="20231129 08:36:56.675" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:36:56.210" endtime="20231129 08:36:56.675"/>
</kw>
<msg timestamp="20231129 08:36:56.675" level="INFO">${delete_result} = </msg>
<status status="PASS" starttime="20231129 08:36:56.210" endtime="20231129 08:36:56.675"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:36:54.345" endtime="20231129 08:36:56.675"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20231129 08:36:52.965" endtime="20231129 08:36:56.676"/>
</suite>
<suite id="s1-s1-s5" name="Buckethead" source="/opt/hadoop/smoketest/s3/buckethead.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20231129 08:36:56.686" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:36:56.686" endtime="20231129 08:36:56.686"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231129 08:36:56.686" endtime="20231129 08:36:56.686"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231129 08:36:56.687" endtime="20231129 08:36:56.687"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:36:56.687" endtime="20231129 08:36:56.687"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:36:56.687" endtime="20231129 08:36:56.687"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:36:56.687" endtime="20231129 08:36:56.687"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:36:56.687" endtime="20231129 08:36:56.687"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:36:56.687" endtime="20231129 08:36:56.687"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20231129 08:36:56.688" endtime="20231129 08:36:56.688"/>
</kw>
<status status="PASS" starttime="20231129 08:36:56.686" endtime="20231129 08:36:56.688"/>
</kw>
<test id="s1-s1-s5-t1" name="Head Bucket" line="31">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>head-bucket --bucket ${BUCKET}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:36:56.691" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-bucket --bucket erasure 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:36:57.136" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:36:57.136" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:36:56.690" endtime="20231129 08:36:57.136"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:36:57.137" level="INFO"/>
<status status="PASS" starttime="20231129 08:36:57.136" endtime="20231129 08:36:57.137"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:36:57.137" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:36:57.137" endtime="20231129 08:36:57.137"/>
</kw>
<status status="PASS" starttime="20231129 08:36:56.689" endtime="20231129 08:36:57.137"/>
</kw>
<msg timestamp="20231129 08:36:57.137" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:36:56.689" endtime="20231129 08:36:57.137"/>
</kw>
<msg timestamp="20231129 08:36:57.138" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:36:56.689" endtime="20231129 08:36:57.138"/>
</kw>
<msg timestamp="20231129 08:36:57.138" level="INFO">${result} = </msg>
<status status="PASS" starttime="20231129 08:36:56.688" endtime="20231129 08:36:57.138"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:36:56.688" endtime="20231129 08:36:57.138"/>
</test>
<test id="s1-s1-s5-t2" name="Head Bucket not existent" line="34">
<kw name="Generate Ozone String" library="commonawslib">
<var>${randStr}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231129 08:36:57.140" level="INFO">${randStr} = 0323484004</msg>
<status status="PASS" starttime="20231129 08:36:57.139" endtime="20231129 08:36:57.140"/>
</kw>
<msg timestamp="20231129 08:36:57.140" level="INFO">${randStr} = ozone-test-0323484004</msg>
<status status="PASS" starttime="20231129 08:36:57.139" endtime="20231129 08:36:57.140"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-bucket --bucket ozonenosuchbucketqqweqwe-${randStr}</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:36:57.143" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-bucket --bucket ozonenosuchbucketqqweqwe-ozone-test-0323484004 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:36:57.583" level="INFO">${rc} = 255</msg>
<msg timestamp="20231129 08:36:57.583" level="INFO">${output} = 
An error occurred (404) when calling the HeadBucket operation: Not Found</msg>
<status status="PASS" starttime="20231129 08:36:57.141" endtime="20231129 08:36:57.583"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:36:57.584" level="INFO">
An error occurred (404) when calling the HeadBucket operation: Not Found</msg>
<status status="PASS" starttime="20231129 08:36:57.583" endtime="20231129 08:36:57.584"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:36:57.584" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:36:57.584" endtime="20231129 08:36:57.584"/>
</kw>
<msg timestamp="20231129 08:36:57.585" level="INFO">${output} = 
An error occurred (404) when calling the HeadBucket operation: Not Found</msg>
<status status="PASS" starttime="20231129 08:36:57.141" endtime="20231129 08:36:57.585"/>
</kw>
<msg timestamp="20231129 08:36:57.585" level="INFO">${result} = 
An error occurred (404) when calling the HeadBucket operation: Not Found</msg>
<status status="PASS" starttime="20231129 08:36:57.140" endtime="20231129 08:36:57.585"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>404</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:36:57.585" endtime="20231129 08:36:57.585"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Not Found</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:36:57.585" endtime="20231129 08:36:57.586"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:36:57.138" endtime="20231129 08:36:57.586"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20231129 08:36:56.677" endtime="20231129 08:36:57.587"/>
</suite>
<suite id="s1-s1-s6" name="Bucketlist" source="/opt/hadoop/smoketest/s3/bucketlist.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20231129 08:36:57.597" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:36:57.597" endtime="20231129 08:36:57.597"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231129 08:36:57.597" endtime="20231129 08:36:57.597"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231129 08:36:57.597" endtime="20231129 08:36:57.598"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:36:57.598" endtime="20231129 08:36:57.598"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:36:57.598" endtime="20231129 08:36:57.598"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:36:57.598" endtime="20231129 08:36:57.598"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:36:57.598" endtime="20231129 08:36:57.598"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:36:57.598" endtime="20231129 08:36:57.598"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20231129 08:36:57.599" endtime="20231129 08:36:57.599"/>
</kw>
<status status="PASS" starttime="20231129 08:36:57.597" endtime="20231129 08:36:57.599"/>
</kw>
<test id="s1-s1-s6-t1" name="List buckets" line="31">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-buckets | jq -r '.Buckets[].Name'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:36:57.602" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-buckets | jq -r '.Buckets[].Name' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:36:58.048" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:36:58.048" level="INFO">${output} = bucket-ozone-test-2696797612
bucket-ozone-test-6825585336
bucket-ozone-test-6939900327
bucket-yxskgbpkvu
erasure</msg>
<status status="PASS" starttime="20231129 08:36:57.601" endtime="20231129 08:36:58.048"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:36:58.049" level="INFO">bucket-ozone-test-2696797612
bucket-ozone-test-6825585336
bucket-ozone-test-6939900327
bucket-yxskgbpkvu
erasure</msg>
<status status="PASS" starttime="20231129 08:36:58.049" endtime="20231129 08:36:58.049"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:36:58.050" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:36:58.049" endtime="20231129 08:36:58.050"/>
</kw>
<status status="PASS" starttime="20231129 08:36:57.600" endtime="20231129 08:36:58.050"/>
</kw>
<msg timestamp="20231129 08:36:58.050" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:36:57.600" endtime="20231129 08:36:58.050"/>
</kw>
<msg timestamp="20231129 08:36:58.050" level="INFO">${output} = bucket-ozone-test-2696797612
bucket-ozone-test-6825585336
bucket-ozone-test-6939900327
bucket-yxskgbpkvu
erasure</msg>
<status status="PASS" starttime="20231129 08:36:57.600" endtime="20231129 08:36:58.050"/>
</kw>
<msg timestamp="20231129 08:36:58.051" level="INFO">${result} = bucket-ozone-test-2696797612
bucket-ozone-test-6825585336
bucket-ozone-test-6939900327
bucket-yxskgbpkvu
erasure</msg>
<status status="PASS" starttime="20231129 08:36:57.599" endtime="20231129 08:36:58.051"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:36:58.051" endtime="20231129 08:36:58.051"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:36:57.599" endtime="20231129 08:36:58.051"/>
</test>
<test id="s1-s1-s6-t2" name="Get bucket info with Ozone Shell to check the owner field" line="35">
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skipping this check as security is not enabled</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20231129 08:36:58.052" endtime="20231129 08:36:58.053"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /s3v/${BUCKET} | jq -r '.owner'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:36:58.056" level="INFO">Running command 'ozone sh bucket info /s3v/erasure | jq -r '.owner' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:02.190" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:02.190" level="INFO">${output} = testuser</msg>
<status status="PASS" starttime="20231129 08:36:58.054" endtime="20231129 08:37:02.190"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:02.191" level="INFO">testuser</msg>
<status status="PASS" starttime="20231129 08:37:02.190" endtime="20231129 08:37:02.191"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:02.191" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:02.191" endtime="20231129 08:37:02.191"/>
</kw>
<status status="PASS" starttime="20231129 08:36:58.053" endtime="20231129 08:37:02.192"/>
</kw>
<msg timestamp="20231129 08:37:02.192" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:36:58.053" endtime="20231129 08:37:02.192"/>
</kw>
<msg timestamp="20231129 08:37:02.192" level="INFO">${result} = testuser</msg>
<status status="PASS" starttime="20231129 08:36:58.053" endtime="20231129 08:37:02.192"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>testuser</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231129 08:37:02.192" endtime="20231129 08:37:02.192"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:36:58.052" endtime="20231129 08:37:02.193"/>
</test>
<test id="s1-s1-s6-t3" name="List buckets with empty access id" line="43">
<kw name="Save AWS access key" library="commonawslib" type="SETUP">
<kw name="Execute" library="os">
<var>${OZONE_AWS_ACCESS_KEY_ID}</var>
<arg>aws configure get aws_access_key_id</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:02.196" level="INFO">Running command 'aws configure get aws_access_key_id 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:02.573" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:02.573" level="INFO">${output} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231129 08:37:02.195" endtime="20231129 08:37:02.574"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:02.574" level="INFO">testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231129 08:37:02.574" endtime="20231129 08:37:02.575"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:02.575" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:02.575" endtime="20231129 08:37:02.575"/>
</kw>
<status status="PASS" starttime="20231129 08:37:02.195" endtime="20231129 08:37:02.576"/>
</kw>
<msg timestamp="20231129 08:37:02.576" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:02.194" endtime="20231129 08:37:02.576"/>
</kw>
<msg timestamp="20231129 08:37:02.576" level="INFO">${OZONE_AWS_ACCESS_KEY_ID} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231129 08:37:02.194" endtime="20231129 08:37:02.576"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${OZONE_AWS_ACCESS_KEY_ID}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20231129 08:37:02.576" level="INFO">${OZONE_AWS_ACCESS_KEY_ID} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231129 08:37:02.576" endtime="20231129 08:37:02.577"/>
</kw>
<status status="PASS" starttime="20231129 08:37:02.194" endtime="20231129 08:37:02.577"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ''</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:02.580" level="INFO">Running command 'aws configure set aws_access_key_id '' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:02.952" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:02.952" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:37:02.578" endtime="20231129 08:37:02.952"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:02.953" level="INFO"/>
<status status="PASS" starttime="20231129 08:37:02.953" endtime="20231129 08:37:02.953"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:02.954" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:02.953" endtime="20231129 08:37:02.954"/>
</kw>
<status status="PASS" starttime="20231129 08:37:02.578" endtime="20231129 08:37:02.954"/>
</kw>
<msg timestamp="20231129 08:37:02.954" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:02.577" endtime="20231129 08:37:02.954"/>
</kw>
<status status="PASS" starttime="20231129 08:37:02.577" endtime="20231129 08:37:02.954"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>list-buckets</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:02.957" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-buckets 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:03.411" level="INFO">${rc} = 255</msg>
<msg timestamp="20231129 08:37:03.412" level="INFO">${output} = 
An error occurred (AuthorizationHeaderMalformed) when calling the ListBuckets operation: The authorization header you provided is invalid.</msg>
<status status="PASS" starttime="20231129 08:37:02.955" endtime="20231129 08:37:03.412"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:03.412" level="INFO">
An error occurred (AuthorizationHeaderMalformed) when calling the ListBuckets operation: The authorization header you provided is invalid.</msg>
<status status="PASS" starttime="20231129 08:37:03.412" endtime="20231129 08:37:03.413"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:03.413" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:03.413" endtime="20231129 08:37:03.413"/>
</kw>
<msg timestamp="20231129 08:37:03.413" level="INFO">${output} = 
An error occurred (AuthorizationHeaderMalformed) when calling the ListBuckets operation: The authorization header you provided is invalid.</msg>
<status status="PASS" starttime="20231129 08:37:02.955" endtime="20231129 08:37:03.413"/>
</kw>
<msg timestamp="20231129 08:37:03.413" level="INFO">${result} = 
An error occurred (AuthorizationHeaderMalformed) when calling the ListBuckets operation: The authorization header you provided is invalid.</msg>
<status status="PASS" starttime="20231129 08:37:02.954" endtime="20231129 08:37:03.413"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>The authorization header you provided is invalid</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:37:03.414" endtime="20231129 08:37:03.414"/>
</kw>
<kw name="Restore AWS access key" library="commonawslib" type="TEARDOWN">
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${OZONE_AWS_ACCESS_KEY_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:03.417" level="INFO">Running command 'aws configure set aws_access_key_id testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:03.800" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:03.800" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:37:03.416" endtime="20231129 08:37:03.800"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:03.801" level="INFO"/>
<status status="PASS" starttime="20231129 08:37:03.801" endtime="20231129 08:37:03.801"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:03.801" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:03.801" endtime="20231129 08:37:03.801"/>
</kw>
<status status="PASS" starttime="20231129 08:37:03.415" endtime="20231129 08:37:03.802"/>
</kw>
<msg timestamp="20231129 08:37:03.802" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:03.415" endtime="20231129 08:37:03.802"/>
</kw>
<status status="PASS" starttime="20231129 08:37:03.415" endtime="20231129 08:37:03.802"/>
</kw>
<status status="PASS" starttime="20231129 08:37:03.414" endtime="20231129 08:37:03.802"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:37:02.193" endtime="20231129 08:37:03.802"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20231129 08:36:57.588" endtime="20231129 08:37:03.803"/>
</suite>
<suite id="s1-s1-s7" name="Freon" source="/opt/hadoop/smoketest/s3/freon.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20231129 08:37:03.814" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:03.814" endtime="20231129 08:37:03.814"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231129 08:37:03.814" endtime="20231129 08:37:03.814"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231129 08:37:03.815" endtime="20231129 08:37:03.815"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:37:03.815" endtime="20231129 08:37:03.815"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:37:03.815" endtime="20231129 08:37:03.815"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:37:03.815" endtime="20231129 08:37:03.815"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:37:03.815" endtime="20231129 08:37:03.815"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:37:03.815" endtime="20231129 08:37:03.815"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20231129 08:37:03.816" endtime="20231129 08:37:03.816"/>
</kw>
<status status="PASS" starttime="20231129 08:37:03.814" endtime="20231129 08:37:03.816"/>
</kw>
<test id="s1-s1-s7-t1" name="Run Freon S3BG" line="43">
<kw name="Setup aws credentials" type="SETUP">
<kw name="Execute" library="os">
<var>${accessKey}</var>
<arg>aws configure get aws_access_key_id</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:03.819" level="INFO">Running command 'aws configure get aws_access_key_id 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:04.206" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:04.206" level="INFO">${output} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231129 08:37:03.817" endtime="20231129 08:37:04.206"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:04.207" level="INFO">testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231129 08:37:04.207" endtime="20231129 08:37:04.207"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:04.207" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:04.207" endtime="20231129 08:37:04.207"/>
</kw>
<status status="PASS" starttime="20231129 08:37:03.817" endtime="20231129 08:37:04.208"/>
</kw>
<msg timestamp="20231129 08:37:04.208" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:03.817" endtime="20231129 08:37:04.208"/>
</kw>
<msg timestamp="20231129 08:37:04.208" level="INFO">${accessKey} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231129 08:37:03.817" endtime="20231129 08:37:04.208"/>
</kw>
<kw name="Execute" library="os">
<var>${secret}</var>
<arg>aws configure get aws_secret_access_key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:04.211" level="INFO">Running command 'aws configure get aws_secret_access_key 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:04.589" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:04.589" level="INFO">${output} = 78682391034d661dcfcd9fe0cb590d8133f69aef07066eee36c5c4e0e09dcd54</msg>
<status status="PASS" starttime="20231129 08:37:04.209" endtime="20231129 08:37:04.589"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:04.590" level="INFO">78682391034d661dcfcd9fe0cb590d8133f69aef07066eee36c5c4e0e09dcd54</msg>
<status status="PASS" starttime="20231129 08:37:04.590" endtime="20231129 08:37:04.590"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:04.591" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:04.590" endtime="20231129 08:37:04.591"/>
</kw>
<status status="PASS" starttime="20231129 08:37:04.209" endtime="20231129 08:37:04.591"/>
</kw>
<msg timestamp="20231129 08:37:04.591" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:04.209" endtime="20231129 08:37:04.591"/>
</kw>
<msg timestamp="20231129 08:37:04.591" level="INFO">${secret} = 78682391034d661dcfcd9fe0cb590d8133f69aef07066eee36c5c4e0e09dcd54</msg>
<status status="PASS" starttime="20231129 08:37:04.208" endtime="20231129 08:37:04.591"/>
</kw>
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>AWS_SECRET_ACCESS_KEY</arg>
<arg>${secret}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20231129 08:37:04.592" level="INFO">Environment variable 'AWS_SECRET_ACCESS_KEY' set to value '78682391034d661dcfcd9fe0cb590d8133f69aef07066eee36c5c4e0e09dcd54'.</msg>
<status status="PASS" starttime="20231129 08:37:04.591" endtime="20231129 08:37:04.592"/>
</kw>
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>AWS_ACCESS_KEY_ID</arg>
<arg>${accessKey}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20231129 08:37:04.592" level="INFO">Environment variable 'AWS_ACCESS_KEY_ID' set to value 'testuser/scm@EXAMPLE.COM'.</msg>
<status status="PASS" starttime="20231129 08:37:04.592" endtime="20231129 08:37:04.592"/>
</kw>
<status status="PASS" starttime="20231129 08:37:03.816" endtime="20231129 08:37:04.592"/>
</kw>
<kw name="Freon S3BG">
<arg>s3bg-${BUCKET}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon s3bg -e ${ENDPOINT_URL} -t ${threads} -n ${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:04.596" level="INFO">Running command 'ozone freon s3bg -e http://s3g:9878 -t 10 -n 100 -p s3bg-erasure  2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:08.803" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:08.803" level="INFO">${output} = 2023-11-29 08:37:06,509 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-11-29 08:37:06,641 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231129 08:37:04.595" endtime="20231129 08:37:08.803"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:08.804" level="INFO">2023-11-29 08:37:06,509 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-11-29 08:37:06,641 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-11-29 08:37:06,641 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-11-29 08:37:06,706 [main] INFO freon.BaseFreonGenerator: Executing test with prefix s3bg-erasure and number-of-tests 100
2023-11-29 08:37:06,739 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-11-29 08:37:07,744 [Thread-5] INFO freon.ProgressBar: Progress: 34.00 % (34 out of 100)
2023-11-29 08:37:08,745 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2023-11-29 08:37:08,761 [shutdown-hook-0] INFO metrics: type=TIMER, name=bucket-create, count=100, min=23.639579, max=187.228141, mean=68.1581405706697, stddev=41.89813908017152, median=52.833669, p75=73.239509, p95=174.883341, p98=176.400721, p99=182.768942, p999=187.228141, mean_rate=69.90276053466965, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-11-29 08:37:08,762 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2023-11-29 08:37:08,763 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-11-29 08:37:08,763 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20231129 08:37:08.804" endtime="20231129 08:37:08.804"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:08.805" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:08.804" endtime="20231129 08:37:08.805"/>
</kw>
<status status="PASS" starttime="20231129 08:37:04.594" endtime="20231129 08:37:08.805"/>
</kw>
<msg timestamp="20231129 08:37:08.805" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:04.594" endtime="20231129 08:37:08.805"/>
</kw>
<msg timestamp="20231129 08:37:08.805" level="INFO">${result} = 2023-11-29 08:37:06,509 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-11-29 08:37:06,641 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231129 08:37:04.594" endtime="20231129 08:37:08.805"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:37:08.805" endtime="20231129 08:37:08.806"/>
</kw>
<status status="PASS" starttime="20231129 08:37:04.592" endtime="20231129 08:37:08.806"/>
</kw>
<tag>no-bucket-type</tag>
<status status="PASS" starttime="20231129 08:37:03.816" endtime="20231129 08:37:08.806"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20231129 08:37:03.804" endtime="20231129 08:37:08.806"/>
</suite>
<suite id="s1-s1-s8" name="MultipartUpload" source="/opt/hadoop/smoketest/s3/MultipartUpload.robot">
<kw name="Setup Multipart Tests" type="SETUP">
<kw name="Setup s3 tests" library="commonawslib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20231129 08:37:08.818" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:08.818" endtime="20231129 08:37:08.818"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231129 08:37:08.818" endtime="20231129 08:37:08.818"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231129 08:37:08.818" endtime="20231129 08:37:08.818"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:37:08.819" endtime="20231129 08:37:08.819"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:37:08.819" endtime="20231129 08:37:08.819"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:37:08.819" endtime="20231129 08:37:08.819"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:37:08.819" endtime="20231129 08:37:08.819"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:37:08.819" endtime="20231129 08:37:08.819"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20231129 08:37:08.819" endtime="20231129 08:37:08.819"/>
</kw>
<status status="PASS" starttime="20231129 08:37:08.818" endtime="20231129 08:37:08.820"/>
</kw>
<kw name="Create Random File KB">
<arg>/tmp/part1</arg>
<arg>5121</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=${file} bs=1024 count=${size_in_kilobytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:08.822" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1024 count=5121 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:08.847" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:08.847" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:37:08.821" endtime="20231129 08:37:08.847"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:08.848" level="INFO"/>
<status status="PASS" starttime="20231129 08:37:08.848" endtime="20231129 08:37:08.848"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:08.849" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:08.848" endtime="20231129 08:37:08.849"/>
</kw>
<status status="PASS" starttime="20231129 08:37:08.821" endtime="20231129 08:37:08.849"/>
</kw>
<msg timestamp="20231129 08:37:08.849" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:08.820" endtime="20231129 08:37:08.849"/>
</kw>
<status status="PASS" starttime="20231129 08:37:08.820" endtime="20231129 08:37:08.849"/>
</kw>
<status status="PASS" starttime="20231129 08:37:08.820" endtime="20231129 08:37:08.849"/>
</kw>
<kw name="Create Random File KB">
<arg>/tmp/part2</arg>
<arg>1023</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=${file} bs=1024 count=${size_in_kilobytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:08.852" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part2 bs=1024 count=1023 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:08.858" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:08.858" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:37:08.851" endtime="20231129 08:37:08.858"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:08.859" level="INFO"/>
<status status="PASS" starttime="20231129 08:37:08.858" endtime="20231129 08:37:08.859"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:08.859" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:08.859" endtime="20231129 08:37:08.859"/>
</kw>
<status status="PASS" starttime="20231129 08:37:08.850" endtime="20231129 08:37:08.859"/>
</kw>
<msg timestamp="20231129 08:37:08.859" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:08.850" endtime="20231129 08:37:08.860"/>
</kw>
<status status="PASS" starttime="20231129 08:37:08.850" endtime="20231129 08:37:08.860"/>
</kw>
<status status="PASS" starttime="20231129 08:37:08.849" endtime="20231129 08:37:08.860"/>
</kw>
<status status="PASS" starttime="20231129 08:37:08.817" endtime="20231129 08:37:08.860"/>
</kw>
<test id="s1-s1-s8-t1" name="Test Multipart Upload With Adjusted Length" line="57">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231129 08:37:08.862" level="INFO">${randStr} = 9963746319</msg>
<status status="PASS" starttime="20231129 08:37:08.861" endtime="20231129 08:37:08.862"/>
</kw>
<msg timestamp="20231129 08:37:08.862" level="INFO">${random} = ozone-test-9963746319</msg>
<status status="PASS" starttime="20231129 08:37:08.861" endtime="20231129 08:37:08.862"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231129 08:37:08.862" level="INFO">${PREFIX} = ozone-test-9963746319</msg>
<status status="PASS" starttime="20231129 08:37:08.862" endtime="20231129 08:37:08.862"/>
</kw>
<status status="PASS" starttime="20231129 08:37:08.861" endtime="20231129 08:37:08.862"/>
</kw>
<kw name="Perform Multipart Upload" library="commonawslib">
<arg>${BUCKET}</arg>
<arg>multipart/adjusted_length_${PREFIX}</arg>
<arg>/tmp/part1</arg>
<arg>/tmp/part2</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:08.866" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket erasure --key multipart/adjusted_length_ozone-test-9963746319 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:09.324" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:09.324" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "multipart/adjusted_length_ozone-test-9963746319",
    "UploadId": "fb100abb-7283-46fa-bf08-8958e9f13646-111492925310500881"
}</msg>
<status status="PASS" starttime="20231129 08:37:08.864" endtime="20231129 08:37:09.324"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:09.325" level="INFO">{
    "Bucket": "erasure",
    "Key": "multipart/adjusted_length_ozone-test-9963746319",
    "UploadId": "fb100abb-7283-46fa-bf08-8958e9f13646-111492925310500881"
}</msg>
<status status="PASS" starttime="20231129 08:37:09.324" endtime="20231129 08:37:09.325"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:09.325" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:09.325" endtime="20231129 08:37:09.325"/>
</kw>
<status status="PASS" starttime="20231129 08:37:08.864" endtime="20231129 08:37:09.326"/>
</kw>
<msg timestamp="20231129 08:37:09.326" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:08.864" endtime="20231129 08:37:09.326"/>
</kw>
<msg timestamp="20231129 08:37:09.326" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "multipart/adjusted_length_ozone-test-9963746319",
    "UploadId": "fb100abb-7283-46fa-bf08-8958e9f13646-111492925310500881"
}</msg>
<status status="PASS" starttime="20231129 08:37:08.863" endtime="20231129 08:37:09.326"/>
</kw>
<msg timestamp="20231129 08:37:09.326" level="INFO">${result} = {
    "Bucket": "erasure",
    "Key": "multipart/adjusted_length_ozone-test-9963746319",
    "UploadId": "fb100abb-7283-46fa-bf08-8958e9f13646-111492925310500881"
}</msg>
<status status="PASS" starttime="20231129 08:37:08.863" endtime="20231129 08:37:09.326"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:09.329" level="INFO">Running command 'echo '{
    "Bucket": "erasure",
    "Key": "multipart/adjusted_length_ozone-test-9963746319",
    "UploadId": "fb100abb-7283-46fa-bf08-8958e9f13646-111492925310500881"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:09.368" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:09.368" level="INFO">${output} = fb100abb-7283-46fa-bf08-8958e9f13646-111492925310500881</msg>
<status status="PASS" starttime="20231129 08:37:09.327" endtime="20231129 08:37:09.368"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:09.369" level="INFO">fb100abb-7283-46fa-bf08-8958e9f13646-111492925310500881</msg>
<status status="PASS" starttime="20231129 08:37:09.368" endtime="20231129 08:37:09.369"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:09.369" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:09.369" endtime="20231129 08:37:09.369"/>
</kw>
<msg timestamp="20231129 08:37:09.370" level="INFO">${upload_id} = fb100abb-7283-46fa-bf08-8958e9f13646-111492925310500881</msg>
<status status="PASS" starttime="20231129 08:37:09.326" endtime="20231129 08:37:09.370"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{etags}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20231129 08:37:09.370" level="INFO">@{etags} = [ ]</msg>
<status status="PASS" starttime="20231129 08:37:09.370" endtime="20231129 08:37:09.370"/>
</kw>
<for flavor="IN ENUMERATE">
<var>${i}</var>
<var>${file}</var>
<value>@{files}</value>
<iter>
<var name="${i}">0</var>
<var name="${file}">/tmp/part1</var>
<kw name="Evaluate" library="BuiltIn">
<var>${part}</var>
<arg>${i} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20231129 08:37:09.371" level="INFO">${part} = 1</msg>
<status status="PASS" starttime="20231129 08:37:09.371" endtime="20231129 08:37:09.371"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${bucket} --key ${key} --part-number ${part} --body ${file} --upload-id ${upload_id}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:09.375" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket erasure --key multipart/adjusted_length_ozone-test-9963746319 --part-number 1 --body /tmp/part1 --upload-id fb100abb-7283-46fa-bf08-8958e9f13646-111492925310500881 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:10.237" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:10.237" level="INFO">${output} = {
    "ETag": "/s3v/erasure/multipart/adjusted_length_ozone-test-9963746319-fb100abb-7283-46fa-bf08-8958e9f13646-111492925310500881-1"
}</msg>
<status status="PASS" starttime="20231129 08:37:09.373" endtime="20231129 08:37:10.237"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:10.238" level="INFO">{
    "ETag": "/s3v/erasure/multipart/adjusted_length_ozone-test-9963746319-fb100abb-7283-46fa-bf08-8958e9f13646-111492925310500881-1"
}</msg>
<status status="PASS" starttime="20231129 08:37:10.237" endtime="20231129 08:37:10.238"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:10.239" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:10.238" endtime="20231129 08:37:10.239"/>
</kw>
<status status="PASS" starttime="20231129 08:37:09.373" endtime="20231129 08:37:10.239"/>
</kw>
<msg timestamp="20231129 08:37:10.239" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:09.372" endtime="20231129 08:37:10.239"/>
</kw>
<msg timestamp="20231129 08:37:10.240" level="INFO">${output} = {
    "ETag": "/s3v/erasure/multipart/adjusted_length_ozone-test-9963746319-fb100abb-7283-46fa-bf08-8958e9f13646-111492925310500881-1"
}</msg>
<status status="PASS" starttime="20231129 08:37:09.372" endtime="20231129 08:37:10.240"/>
</kw>
<msg timestamp="20231129 08:37:10.240" level="INFO">${result} = {
    "ETag": "/s3v/erasure/multipart/adjusted_length_ozone-test-9963746319-fb100abb-7283-46fa-bf08-8958e9f13646-111492925310500881-1"
}</msg>
<status status="PASS" starttime="20231129 08:37:09.371" endtime="20231129 08:37:10.240"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:10.244" level="INFO">Running command 'echo '{
    "ETag": "/s3v/erasure/multipart/adjusted_length_ozone-test-9963746319-fb100abb-7283-46fa-bf08-8958e9f13646-111492925310500881-1"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:10.283" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:10.283" level="INFO">${output} = /s3v/erasure/multipart/adjusted_length_ozone-test-9963746319-fb100abb-7283-46fa-bf08-8958e9f13646-111492925310500881-1</msg>
<status status="PASS" starttime="20231129 08:37:10.242" endtime="20231129 08:37:10.283"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:10.284" level="INFO">/s3v/erasure/multipart/adjusted_length_ozone-test-9963746319-fb100abb-7283-46fa-bf08-8958e9f13646-111492925310500881-1</msg>
<status status="PASS" starttime="20231129 08:37:10.283" endtime="20231129 08:37:10.284"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:10.284" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:10.284" endtime="20231129 08:37:10.284"/>
</kw>
<status status="PASS" starttime="20231129 08:37:10.241" endtime="20231129 08:37:10.285"/>
</kw>
<msg timestamp="20231129 08:37:10.285" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:10.241" endtime="20231129 08:37:10.285"/>
</kw>
<msg timestamp="20231129 08:37:10.285" level="INFO">${etag} = /s3v/erasure/multipart/adjusted_length_ozone-test-9963746319-fb100abb-7283-46fa-bf08-8958e9f13646-111492925310500881-1</msg>
<status status="PASS" starttime="20231129 08:37:10.240" endtime="20231129 08:37:10.285"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${etags}</arg>
<arg>{ETag=${etag},PartNumber=${part}}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20231129 08:37:10.285" endtime="20231129 08:37:10.286"/>
</kw>
<status status="PASS" starttime="20231129 08:37:09.371" endtime="20231129 08:37:10.286"/>
</iter>
<iter>
<var name="${i}">1</var>
<var name="${file}">/tmp/part2</var>
<kw name="Evaluate" library="BuiltIn">
<var>${part}</var>
<arg>${i} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20231129 08:37:10.286" level="INFO">${part} = 2</msg>
<status status="PASS" starttime="20231129 08:37:10.286" endtime="20231129 08:37:10.286"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${bucket} --key ${key} --part-number ${part} --body ${file} --upload-id ${upload_id}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:10.290" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket erasure --key multipart/adjusted_length_ozone-test-9963746319 --part-number 2 --body /tmp/part2 --upload-id fb100abb-7283-46fa-bf08-8958e9f13646-111492925310500881 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:10.872" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:10.872" level="INFO">${output} = {
    "ETag": "/s3v/erasure/multipart/adjusted_length_ozone-test-9963746319-fb100abb-7283-46fa-bf08-8958e9f13646-111492925310500881-2"
}</msg>
<status status="PASS" starttime="20231129 08:37:10.288" endtime="20231129 08:37:10.872"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:10.873" level="INFO">{
    "ETag": "/s3v/erasure/multipart/adjusted_length_ozone-test-9963746319-fb100abb-7283-46fa-bf08-8958e9f13646-111492925310500881-2"
}</msg>
<status status="PASS" starttime="20231129 08:37:10.873" endtime="20231129 08:37:10.873"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:10.874" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:10.873" endtime="20231129 08:37:10.874"/>
</kw>
<status status="PASS" starttime="20231129 08:37:10.288" endtime="20231129 08:37:10.874"/>
</kw>
<msg timestamp="20231129 08:37:10.874" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:10.287" endtime="20231129 08:37:10.874"/>
</kw>
<msg timestamp="20231129 08:37:10.874" level="INFO">${output} = {
    "ETag": "/s3v/erasure/multipart/adjusted_length_ozone-test-9963746319-fb100abb-7283-46fa-bf08-8958e9f13646-111492925310500881-2"
}</msg>
<status status="PASS" starttime="20231129 08:37:10.287" endtime="20231129 08:37:10.874"/>
</kw>
<msg timestamp="20231129 08:37:10.874" level="INFO">${result} = {
    "ETag": "/s3v/erasure/multipart/adjusted_length_ozone-test-9963746319-fb100abb-7283-46fa-bf08-8958e9f13646-111492925310500881-2"
}</msg>
<status status="PASS" starttime="20231129 08:37:10.287" endtime="20231129 08:37:10.874"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:10.877" level="INFO">Running command 'echo '{
    "ETag": "/s3v/erasure/multipart/adjusted_length_ozone-test-9963746319-fb100abb-7283-46fa-bf08-8958e9f13646-111492925310500881-2"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:10.903" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:10.903" level="INFO">${output} = /s3v/erasure/multipart/adjusted_length_ozone-test-9963746319-fb100abb-7283-46fa-bf08-8958e9f13646-111492925310500881-2</msg>
<status status="PASS" starttime="20231129 08:37:10.876" endtime="20231129 08:37:10.903"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:10.904" level="INFO">/s3v/erasure/multipart/adjusted_length_ozone-test-9963746319-fb100abb-7283-46fa-bf08-8958e9f13646-111492925310500881-2</msg>
<status status="PASS" starttime="20231129 08:37:10.903" endtime="20231129 08:37:10.904"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:10.904" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:10.904" endtime="20231129 08:37:10.904"/>
</kw>
<status status="PASS" starttime="20231129 08:37:10.875" endtime="20231129 08:37:10.904"/>
</kw>
<msg timestamp="20231129 08:37:10.905" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:10.875" endtime="20231129 08:37:10.905"/>
</kw>
<msg timestamp="20231129 08:37:10.905" level="INFO">${etag} = /s3v/erasure/multipart/adjusted_length_ozone-test-9963746319-fb100abb-7283-46fa-bf08-8958e9f13646-111492925310500881-2</msg>
<status status="PASS" starttime="20231129 08:37:10.875" endtime="20231129 08:37:10.905"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${etags}</arg>
<arg>{ETag=${etag},PartNumber=${part}}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20231129 08:37:10.905" endtime="20231129 08:37:10.905"/>
</kw>
<status status="PASS" starttime="20231129 08:37:10.286" endtime="20231129 08:37:10.905"/>
</iter>
<status status="PASS" starttime="20231129 08:37:09.370" endtime="20231129 08:37:10.905"/>
</for>
<kw name="Catenate" library="BuiltIn">
<var>${parts}</var>
<arg>SEPARATOR=,</arg>
<arg>@{etags}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20231129 08:37:10.906" level="INFO">${parts} = {ETag=/s3v/erasure/multipart/adjusted_length_ozone-test-9963746319-fb100abb-7283-46fa-bf08-8958e9f13646-111492925310500881-1,PartNumber=1},{ETag=/s3v/erasure/multipart/adjusted_length_ozone-test-99637...</msg>
<status status="PASS" starttime="20231129 08:37:10.906" endtime="20231129 08:37:10.906"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>complete-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id} --multipart-upload 'Parts=[${parts}]'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:10.909" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --bucket erasure --key multipart/adjusted_length_ozone-test-9963746319 --upload-id fb100abb-7283-46fa-bf08-8958e9f13646-111492925310500881 --multipart-upload 'Parts=[{ETag=/s3v/erasure/multipart/adjusted_length_ozone-test-9963746319-fb100abb-7283-46fa-bf08-8958e9f13646-111492925310500881-1,PartNumber=1},{ETag=/s3v/erasure/multipart/adjusted_length_ozone-test-9963746319-fb100abb-7283-46fa-bf08-8958e9f13646-111492925310500881-2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:11.363" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:11.363" level="INFO">${output} = {
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "multipart/adjusted_length_ozone-test-9963746319",
    "ETag": "\"4c36672428d87e09edcdb1c246ac019f-2\""
}</msg>
<status status="PASS" starttime="20231129 08:37:10.908" endtime="20231129 08:37:11.363"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:11.364" level="INFO">{
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "multipart/adjusted_length_ozone-test-9963746319",
    "ETag": "\"4c36672428d87e09edcdb1c246ac019f-2\""
}</msg>
<status status="PASS" starttime="20231129 08:37:11.363" endtime="20231129 08:37:11.364"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:11.364" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:11.364" endtime="20231129 08:37:11.364"/>
</kw>
<status status="PASS" starttime="20231129 08:37:10.907" endtime="20231129 08:37:11.365"/>
</kw>
<msg timestamp="20231129 08:37:11.365" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:10.907" endtime="20231129 08:37:11.365"/>
</kw>
<msg timestamp="20231129 08:37:11.365" level="INFO">${output} = {
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "multipart/adjusted_length_ozone-test-9963746319",
    "ETag": "\"4c36672428d87e09edcdb1c246ac019f-2\""
}</msg>
<status status="PASS" starttime="20231129 08:37:10.907" endtime="20231129 08:37:11.365"/>
</kw>
<status status="PASS" starttime="20231129 08:37:10.906" endtime="20231129 08:37:11.365"/>
</kw>
<status status="PASS" starttime="20231129 08:37:08.862" endtime="20231129 08:37:11.365"/>
</kw>
<kw name="Verify Multipart Upload" library="commonawslib">
<arg>${BUCKET}</arg>
<arg>multipart/adjusted_length_${PREFIX}</arg>
<arg>/tmp/part1</arg>
<arg>/tmp/part2</arg>
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231129 08:37:11.366" level="INFO">${randStr} = 7163912808</msg>
<status status="PASS" starttime="20231129 08:37:11.366" endtime="20231129 08:37:11.367"/>
</kw>
<msg timestamp="20231129 08:37:11.367" level="INFO">${random} = ozone-test-7163912808</msg>
<status status="PASS" starttime="20231129 08:37:11.366" endtime="20231129 08:37:11.367"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${bucket} --key ${key} /tmp/verify${random}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:11.370" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key multipart/adjusted_length_ozone-test-9963746319 /tmp/verifyozone-test-7163912808 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:12.007" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:12.007" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:37:11 GMT",
    "ContentLength": 6291456,
    "ETag": "\"4c36672428d87e09edcdb1c246ac019f-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20231129 08:37:11.368" endtime="20231129 08:37:12.007"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:12.008" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:37:11 GMT",
    "ContentLength": 6291456,
    "ETag": "\"4c36672428d87e09edcdb1c246ac019f-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 29 Nov 2023 08:37:11 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231129 08:37:12.008" endtime="20231129 08:37:12.008"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:12.009" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:12.009" endtime="20231129 08:37:12.009"/>
</kw>
<status status="PASS" starttime="20231129 08:37:11.368" endtime="20231129 08:37:12.009"/>
</kw>
<msg timestamp="20231129 08:37:12.009" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:11.368" endtime="20231129 08:37:12.010"/>
</kw>
<msg timestamp="20231129 08:37:12.010" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:37:11 GMT",
    "ContentLength": 6291456,
    "ETag": "\"4c36672428d87e09edcdb1c246ac019f-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20231129 08:37:11.367" endtime="20231129 08:37:12.010"/>
</kw>
<status status="PASS" starttime="20231129 08:37:11.367" endtime="20231129 08:37:12.010"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${tmp}</var>
<arg>@{files}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20231129 08:37:12.011" level="INFO">${tmp} = /tmp/part1 /tmp/part2</msg>
<status status="PASS" starttime="20231129 08:37:12.010" endtime="20231129 08:37:12.011"/>
</kw>
<kw name="Execute" library="os">
<arg>cat ${tmp} &gt; /tmp/original${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:12.015" level="INFO">Running command 'cat /tmp/part1 /tmp/part2 &gt; /tmp/originalozone-test-7163912808'.</msg>
<msg timestamp="20231129 08:37:12.021" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:12.021" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:37:12.013" endtime="20231129 08:37:12.021"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:12.022" level="INFO"/>
<status status="PASS" starttime="20231129 08:37:12.021" endtime="20231129 08:37:12.022"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:12.023" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:12.022" endtime="20231129 08:37:12.023"/>
</kw>
<status status="PASS" starttime="20231129 08:37:12.012" endtime="20231129 08:37:12.023"/>
</kw>
<msg timestamp="20231129 08:37:12.023" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:12.012" endtime="20231129 08:37:12.023"/>
</kw>
<status status="PASS" starttime="20231129 08:37:12.011" endtime="20231129 08:37:12.023"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/original${random}</arg>
<arg>/tmp/verify${random}</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:12.027" level="INFO">Running command 'md5sum /tmp/originalozone-test-7163912808 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:12.040" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:12.040" level="INFO">${output} = e514d8c23501dde6250cc261172162a4</msg>
<status status="PASS" starttime="20231129 08:37:12.025" endtime="20231129 08:37:12.040"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:12.040" level="INFO">e514d8c23501dde6250cc261172162a4</msg>
<status status="PASS" starttime="20231129 08:37:12.040" endtime="20231129 08:37:12.041"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:12.041" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:12.041" endtime="20231129 08:37:12.041"/>
</kw>
<status status="PASS" starttime="20231129 08:37:12.025" endtime="20231129 08:37:12.041"/>
</kw>
<msg timestamp="20231129 08:37:12.041" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:12.024" endtime="20231129 08:37:12.041"/>
</kw>
<msg timestamp="20231129 08:37:12.042" level="INFO">${checksumbefore} = e514d8c23501dde6250cc261172162a4</msg>
<status status="PASS" starttime="20231129 08:37:12.024" endtime="20231129 08:37:12.042"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:12.044" level="INFO">Running command 'md5sum /tmp/verifyozone-test-7163912808 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:12.056" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:12.056" level="INFO">${output} = e514d8c23501dde6250cc261172162a4</msg>
<status status="PASS" starttime="20231129 08:37:12.043" endtime="20231129 08:37:12.056"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:12.057" level="INFO">e514d8c23501dde6250cc261172162a4</msg>
<status status="PASS" starttime="20231129 08:37:12.057" endtime="20231129 08:37:12.057"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:12.058" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:12.057" endtime="20231129 08:37:12.058"/>
</kw>
<status status="PASS" starttime="20231129 08:37:12.042" endtime="20231129 08:37:12.058"/>
</kw>
<msg timestamp="20231129 08:37:12.058" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:12.042" endtime="20231129 08:37:12.058"/>
</kw>
<msg timestamp="20231129 08:37:12.058" level="INFO">${checksumafter} = e514d8c23501dde6250cc261172162a4</msg>
<status status="PASS" starttime="20231129 08:37:12.042" endtime="20231129 08:37:12.058"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231129 08:37:12.058" endtime="20231129 08:37:12.059"/>
</kw>
<status status="PASS" starttime="20231129 08:37:12.023" endtime="20231129 08:37:12.059"/>
</kw>
<status status="PASS" starttime="20231129 08:37:11.365" endtime="20231129 08:37:12.059"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:37:08.860" endtime="20231129 08:37:12.059"/>
</test>
<test id="s1-s1-s8-t2" name="Test Multipart Upload" line="61">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231129 08:37:12.061" level="INFO">${randStr} = 1099910039</msg>
<status status="PASS" starttime="20231129 08:37:12.061" endtime="20231129 08:37:12.061"/>
</kw>
<msg timestamp="20231129 08:37:12.061" level="INFO">${random} = ozone-test-1099910039</msg>
<status status="PASS" starttime="20231129 08:37:12.060" endtime="20231129 08:37:12.061"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231129 08:37:12.062" level="INFO">${PREFIX} = ozone-test-1099910039</msg>
<status status="PASS" starttime="20231129 08:37:12.061" endtime="20231129 08:37:12.062"/>
</kw>
<status status="PASS" starttime="20231129 08:37:12.060" endtime="20231129 08:37:12.062"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:12.065" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket erasure --key ozone-test-1099910039/multipartKey 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:12.506" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:12.506" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-1099910039/multipartKey",
    "UploadId": "4eb8cb47-9046-490d-bc03-b0d3b2acf51f-111492925519429652"
}</msg>
<status status="PASS" starttime="20231129 08:37:12.063" endtime="20231129 08:37:12.506"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:12.507" level="INFO">{
    "Bucket": "erasure",
    "Key": "ozone-test-1099910039/multipartKey",
    "UploadId": "4eb8cb47-9046-490d-bc03-b0d3b2acf51f-111492925519429652"
}</msg>
<status status="PASS" starttime="20231129 08:37:12.506" endtime="20231129 08:37:12.507"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:12.507" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:12.507" endtime="20231129 08:37:12.507"/>
</kw>
<status status="PASS" starttime="20231129 08:37:12.063" endtime="20231129 08:37:12.507"/>
</kw>
<msg timestamp="20231129 08:37:12.507" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:12.063" endtime="20231129 08:37:12.508"/>
</kw>
<msg timestamp="20231129 08:37:12.508" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-1099910039/multipartKey",
    "UploadId": "4eb8cb47-9046-490d-bc03-b0d3b2acf51f-111492925519429652"
}</msg>
<status status="PASS" starttime="20231129 08:37:12.062" endtime="20231129 08:37:12.508"/>
</kw>
<msg timestamp="20231129 08:37:12.508" level="INFO">${result} = {
    "Bucket": "erasure",
    "Key": "ozone-test-1099910039/multipartKey",
    "UploadId": "4eb8cb47-9046-490d-bc03-b0d3b2acf51f-111492925519429652"
}</msg>
<status status="PASS" starttime="20231129 08:37:12.062" endtime="20231129 08:37:12.508"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:12.510" level="INFO">Running command 'echo '{
    "Bucket": "erasure",
    "Key": "ozone-test-1099910039/multipartKey",
    "UploadId": "4eb8cb47-9046-490d-bc03-b0d3b2acf51f-111492925519429652"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:12.537" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:12.537" level="INFO">${output} = 4eb8cb47-9046-490d-bc03-b0d3b2acf51f-111492925519429652</msg>
<status status="PASS" starttime="20231129 08:37:12.509" endtime="20231129 08:37:12.537"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:12.538" level="INFO">4eb8cb47-9046-490d-bc03-b0d3b2acf51f-111492925519429652</msg>
<status status="PASS" starttime="20231129 08:37:12.537" endtime="20231129 08:37:12.538"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:12.538" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:12.538" endtime="20231129 08:37:12.539"/>
</kw>
<msg timestamp="20231129 08:37:12.539" level="INFO">${uploadID} = 4eb8cb47-9046-490d-bc03-b0d3b2acf51f-111492925519429652</msg>
<status status="PASS" starttime="20231129 08:37:12.508" endtime="20231129 08:37:12.539"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:37:12.539" endtime="20231129 08:37:12.539"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:37:12.539" endtime="20231129 08:37:12.540"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:37:12.540" endtime="20231129 08:37:12.540"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:12.544" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket erasure --key ozone-test-1099910039/multipartKey 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:13.083" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:13.083" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-1099910039/multipartKey",
    "UploadId": "4598edbc-3998-49be-b2f8-996fee8a0362-111492925557047317"
}</msg>
<status status="PASS" starttime="20231129 08:37:12.542" endtime="20231129 08:37:13.083"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:13.084" level="INFO">{
    "Bucket": "erasure",
    "Key": "ozone-test-1099910039/multipartKey",
    "UploadId": "4598edbc-3998-49be-b2f8-996fee8a0362-111492925557047317"
}</msg>
<status status="PASS" starttime="20231129 08:37:13.083" endtime="20231129 08:37:13.084"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:13.084" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:13.084" endtime="20231129 08:37:13.084"/>
</kw>
<status status="PASS" starttime="20231129 08:37:12.542" endtime="20231129 08:37:13.084"/>
</kw>
<msg timestamp="20231129 08:37:13.084" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:12.541" endtime="20231129 08:37:13.085"/>
</kw>
<msg timestamp="20231129 08:37:13.085" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-1099910039/multipartKey",
    "UploadId": "4598edbc-3998-49be-b2f8-996fee8a0362-111492925557047317"
}</msg>
<status status="PASS" starttime="20231129 08:37:12.541" endtime="20231129 08:37:13.085"/>
</kw>
<msg timestamp="20231129 08:37:13.085" level="INFO">${result} = {
    "Bucket": "erasure",
    "Key": "ozone-test-1099910039/multipartKey",
    "UploadId": "4598edbc-3998-49be-b2f8-996fee8a0362-111492925557047317"
}</msg>
<status status="PASS" starttime="20231129 08:37:12.540" endtime="20231129 08:37:13.085"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${nextUploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:13.087" level="INFO">Running command 'echo '{
    "Bucket": "erasure",
    "Key": "ozone-test-1099910039/multipartKey",
    "UploadId": "4598edbc-3998-49be-b2f8-996fee8a0362-111492925557047317"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:13.113" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:13.113" level="INFO">${output} = 4598edbc-3998-49be-b2f8-996fee8a0362-111492925557047317</msg>
<status status="PASS" starttime="20231129 08:37:13.086" endtime="20231129 08:37:13.113"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:13.114" level="INFO">4598edbc-3998-49be-b2f8-996fee8a0362-111492925557047317</msg>
<status status="PASS" starttime="20231129 08:37:13.113" endtime="20231129 08:37:13.114"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:13.114" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:13.114" endtime="20231129 08:37:13.114"/>
</kw>
<msg timestamp="20231129 08:37:13.114" level="INFO">${nextUploadID} = 4598edbc-3998-49be-b2f8-996fee8a0362-111492925557047317</msg>
<status status="PASS" starttime="20231129 08:37:13.085" endtime="20231129 08:37:13.114"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:37:13.115" endtime="20231129 08:37:13.115"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:37:13.115" endtime="20231129 08:37:13.115"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:37:13.115" endtime="20231129 08:37:13.116"/>
</kw>
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${uploadID}</arg>
<arg>${nextUploadID}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="PASS" starttime="20231129 08:37:13.116" endtime="20231129 08:37:13.116"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>5</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>5</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:13.119" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:13.138" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:13.138" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:37:13.118" endtime="20231129 08:37:13.138"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:13.138" level="INFO"/>
<status status="PASS" starttime="20231129 08:37:13.138" endtime="20231129 08:37:13.138"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:13.139" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:13.139" endtime="20231129 08:37:13.139"/>
</kw>
<status status="PASS" starttime="20231129 08:37:13.118" endtime="20231129 08:37:13.139"/>
</kw>
<msg timestamp="20231129 08:37:13.139" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:13.117" endtime="20231129 08:37:13.139"/>
</kw>
<status status="PASS" starttime="20231129 08:37:13.117" endtime="20231129 08:37:13.139"/>
</kw>
<status status="PASS" starttime="20231129 08:37:13.117" endtime="20231129 08:37:13.139"/>
</kw>
<status status="PASS" starttime="20231129 08:37:13.116" endtime="20231129 08:37:13.139"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey --part-number 1 --body /tmp/part1 --upload-id ${nextUploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:13.143" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket erasure --key ozone-test-1099910039/multipartKey --part-number 1 --body /tmp/part1 --upload-id 4598edbc-3998-49be-b2f8-996fee8a0362-111492925557047317 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:13.841" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:13.841" level="INFO">${output} = {
    "ETag": "/s3v/erasure/ozone-test-1099910039/multipartKey-4598edbc-3998-49be-b2f8-996fee8a0362-111492925557047317-1"
}</msg>
<status status="PASS" starttime="20231129 08:37:13.141" endtime="20231129 08:37:13.841"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:13.842" level="INFO">{
    "ETag": "/s3v/erasure/ozone-test-1099910039/multipartKey-4598edbc-3998-49be-b2f8-996fee8a0362-111492925557047317-1"
}</msg>
<status status="PASS" starttime="20231129 08:37:13.841" endtime="20231129 08:37:13.842"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:13.842" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:13.842" endtime="20231129 08:37:13.842"/>
</kw>
<status status="PASS" starttime="20231129 08:37:13.141" endtime="20231129 08:37:13.843"/>
</kw>
<msg timestamp="20231129 08:37:13.843" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:13.141" endtime="20231129 08:37:13.843"/>
</kw>
<msg timestamp="20231129 08:37:13.843" level="INFO">${output} = {
    "ETag": "/s3v/erasure/ozone-test-1099910039/multipartKey-4598edbc-3998-49be-b2f8-996fee8a0362-111492925557047317-1"
}</msg>
<status status="PASS" starttime="20231129 08:37:13.140" endtime="20231129 08:37:13.843"/>
</kw>
<msg timestamp="20231129 08:37:13.843" level="INFO">${result} = {
    "ETag": "/s3v/erasure/ozone-test-1099910039/multipartKey-4598edbc-3998-49be-b2f8-996fee8a0362-111492925557047317-1"
}</msg>
<status status="PASS" starttime="20231129 08:37:13.140" endtime="20231129 08:37:13.843"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:37:13.843" endtime="20231129 08:37:13.844"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>5</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>5</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:13.847" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:13.865" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:13.865" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:37:13.846" endtime="20231129 08:37:13.865"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:13.866" level="INFO"/>
<status status="PASS" starttime="20231129 08:37:13.866" endtime="20231129 08:37:13.866"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:13.866" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:13.866" endtime="20231129 08:37:13.867"/>
</kw>
<status status="PASS" starttime="20231129 08:37:13.845" endtime="20231129 08:37:13.867"/>
</kw>
<msg timestamp="20231129 08:37:13.867" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:13.845" endtime="20231129 08:37:13.867"/>
</kw>
<status status="PASS" starttime="20231129 08:37:13.844" endtime="20231129 08:37:13.867"/>
</kw>
<status status="PASS" starttime="20231129 08:37:13.844" endtime="20231129 08:37:13.867"/>
</kw>
<status status="PASS" starttime="20231129 08:37:13.844" endtime="20231129 08:37:13.867"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey --part-number 1 --body /tmp/part1 --upload-id ${nextUploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:13.870" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket erasure --key ozone-test-1099910039/multipartKey --part-number 1 --body /tmp/part1 --upload-id 4598edbc-3998-49be-b2f8-996fee8a0362-111492925557047317 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:14.579" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:14.580" level="INFO">${output} = {
    "ETag": "/s3v/erasure/ozone-test-1099910039/multipartKey-4598edbc-3998-49be-b2f8-996fee8a0362-111492925557047317-1"
}</msg>
<status status="PASS" starttime="20231129 08:37:13.869" endtime="20231129 08:37:14.580"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:14.581" level="INFO">{
    "ETag": "/s3v/erasure/ozone-test-1099910039/multipartKey-4598edbc-3998-49be-b2f8-996fee8a0362-111492925557047317-1"
}</msg>
<status status="PASS" starttime="20231129 08:37:14.580" endtime="20231129 08:37:14.581"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:14.581" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:14.581" endtime="20231129 08:37:14.581"/>
</kw>
<status status="PASS" starttime="20231129 08:37:13.868" endtime="20231129 08:37:14.581"/>
</kw>
<msg timestamp="20231129 08:37:14.581" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:13.868" endtime="20231129 08:37:14.581"/>
</kw>
<msg timestamp="20231129 08:37:14.582" level="INFO">${output} = {
    "ETag": "/s3v/erasure/ozone-test-1099910039/multipartKey-4598edbc-3998-49be-b2f8-996fee8a0362-111492925557047317-1"
}</msg>
<status status="PASS" starttime="20231129 08:37:13.868" endtime="20231129 08:37:14.582"/>
</kw>
<msg timestamp="20231129 08:37:14.582" level="INFO">${result} = {
    "ETag": "/s3v/erasure/ozone-test-1099910039/multipartKey-4598edbc-3998-49be-b2f8-996fee8a0362-111492925557047317-1"
}</msg>
<status status="PASS" starttime="20231129 08:37:13.867" endtime="20231129 08:37:14.582"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:37:14.582" endtime="20231129 08:37:14.582"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:37:12.060" endtime="20231129 08:37:14.582"/>
</test>
<test id="s1-s1-s8-t3" name="Test Multipart Upload Complete" line="89">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231129 08:37:14.585" level="INFO">${randStr} = 7194517773</msg>
<status status="PASS" starttime="20231129 08:37:14.585" endtime="20231129 08:37:14.585"/>
</kw>
<msg timestamp="20231129 08:37:14.585" level="INFO">${random} = ozone-test-7194517773</msg>
<status status="PASS" starttime="20231129 08:37:14.584" endtime="20231129 08:37:14.585"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231129 08:37:14.586" level="INFO">${PREFIX} = ozone-test-7194517773</msg>
<status status="PASS" starttime="20231129 08:37:14.585" endtime="20231129 08:37:14.586"/>
</kw>
<status status="PASS" starttime="20231129 08:37:14.584" endtime="20231129 08:37:14.586"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:14.589" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket erasure --key ozone-test-7194517773/multipartKey1 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:15.043" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:15.043" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-7194517773/multipartKey1",
    "UploadId": "9af13da4-69ea-4d24-b5cd-9a85de62c31b-111492925685628952"
}</msg>
<status status="PASS" starttime="20231129 08:37:14.587" endtime="20231129 08:37:15.043"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:15.044" level="INFO">{
    "Bucket": "erasure",
    "Key": "ozone-test-7194517773/multipartKey1",
    "UploadId": "9af13da4-69ea-4d24-b5cd-9a85de62c31b-111492925685628952"
}</msg>
<status status="PASS" starttime="20231129 08:37:15.044" endtime="20231129 08:37:15.044"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:15.045" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:15.044" endtime="20231129 08:37:15.045"/>
</kw>
<status status="PASS" starttime="20231129 08:37:14.587" endtime="20231129 08:37:15.045"/>
</kw>
<msg timestamp="20231129 08:37:15.045" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:14.587" endtime="20231129 08:37:15.045"/>
</kw>
<msg timestamp="20231129 08:37:15.045" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-7194517773/multipartKey1",
    "UploadId": "9af13da4-69ea-4d24-b5cd-9a85de62c31b-111492925685628952"
}</msg>
<status status="PASS" starttime="20231129 08:37:14.586" endtime="20231129 08:37:15.045"/>
</kw>
<msg timestamp="20231129 08:37:15.045" level="INFO">${result} = {
    "Bucket": "erasure",
    "Key": "ozone-test-7194517773/multipartKey1",
    "UploadId": "9af13da4-69ea-4d24-b5cd-9a85de62c31b-111492925685628952"
}</msg>
<status status="PASS" starttime="20231129 08:37:14.586" endtime="20231129 08:37:15.045"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:15.048" level="INFO">Running command 'echo '{
    "Bucket": "erasure",
    "Key": "ozone-test-7194517773/multipartKey1",
    "UploadId": "9af13da4-69ea-4d24-b5cd-9a85de62c31b-111492925685628952"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:15.073" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:15.073" level="INFO">${output} = 9af13da4-69ea-4d24-b5cd-9a85de62c31b-111492925685628952</msg>
<status status="PASS" starttime="20231129 08:37:15.046" endtime="20231129 08:37:15.073"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:15.074" level="INFO">9af13da4-69ea-4d24-b5cd-9a85de62c31b-111492925685628952</msg>
<status status="PASS" starttime="20231129 08:37:15.073" endtime="20231129 08:37:15.074"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:15.074" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:15.074" endtime="20231129 08:37:15.074"/>
</kw>
<msg timestamp="20231129 08:37:15.075" level="INFO">${uploadID} = 9af13da4-69ea-4d24-b5cd-9a85de62c31b-111492925685628952</msg>
<status status="PASS" starttime="20231129 08:37:15.046" endtime="20231129 08:37:15.075"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:37:15.075" endtime="20231129 08:37:15.075"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:37:15.075" endtime="20231129 08:37:15.075"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:37:15.076" endtime="20231129 08:37:15.076"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>5</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>5</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:15.079" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:15.098" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:15.098" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:37:15.078" endtime="20231129 08:37:15.098"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:15.098" level="INFO"/>
<status status="PASS" starttime="20231129 08:37:15.098" endtime="20231129 08:37:15.098"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:15.099" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:15.099" endtime="20231129 08:37:15.099"/>
</kw>
<status status="PASS" starttime="20231129 08:37:15.077" endtime="20231129 08:37:15.099"/>
</kw>
<msg timestamp="20231129 08:37:15.099" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:15.077" endtime="20231129 08:37:15.099"/>
</kw>
<status status="PASS" starttime="20231129 08:37:15.077" endtime="20231129 08:37:15.099"/>
</kw>
<status status="PASS" starttime="20231129 08:37:15.076" endtime="20231129 08:37:15.099"/>
</kw>
<status status="PASS" starttime="20231129 08:37:15.076" endtime="20231129 08:37:15.099"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 --part-number 1 --body /tmp/part1 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:15.103" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket erasure --key ozone-test-7194517773/multipartKey1 --part-number 1 --body /tmp/part1 --upload-id 9af13da4-69ea-4d24-b5cd-9a85de62c31b-111492925685628952 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:15.761" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:15.761" level="INFO">${output} = {
    "ETag": "/s3v/erasure/ozone-test-7194517773/multipartKey1-9af13da4-69ea-4d24-b5cd-9a85de62c31b-111492925685628952-1"
}</msg>
<status status="PASS" starttime="20231129 08:37:15.102" endtime="20231129 08:37:15.761"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:15.762" level="INFO">{
    "ETag": "/s3v/erasure/ozone-test-7194517773/multipartKey1-9af13da4-69ea-4d24-b5cd-9a85de62c31b-111492925685628952-1"
}</msg>
<status status="PASS" starttime="20231129 08:37:15.762" endtime="20231129 08:37:15.762"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:15.763" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:15.762" endtime="20231129 08:37:15.763"/>
</kw>
<status status="PASS" starttime="20231129 08:37:15.101" endtime="20231129 08:37:15.763"/>
</kw>
<msg timestamp="20231129 08:37:15.763" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:15.101" endtime="20231129 08:37:15.763"/>
</kw>
<msg timestamp="20231129 08:37:15.763" level="INFO">${output} = {
    "ETag": "/s3v/erasure/ozone-test-7194517773/multipartKey1-9af13da4-69ea-4d24-b5cd-9a85de62c31b-111492925685628952-1"
}</msg>
<status status="PASS" starttime="20231129 08:37:15.100" endtime="20231129 08:37:15.763"/>
</kw>
<msg timestamp="20231129 08:37:15.764" level="INFO">${result} = {
    "ETag": "/s3v/erasure/ozone-test-7194517773/multipartKey1-9af13da4-69ea-4d24-b5cd-9a85de62c31b-111492925685628952-1"
}</msg>
<status status="PASS" starttime="20231129 08:37:15.100" endtime="20231129 08:37:15.764"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:15.766" level="INFO">Running command 'echo '{
    "ETag": "/s3v/erasure/ozone-test-7194517773/multipartKey1-9af13da4-69ea-4d24-b5cd-9a85de62c31b-111492925685628952-1"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:15.791" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:15.791" level="INFO">${output} = /s3v/erasure/ozone-test-7194517773/multipartKey1-9af13da4-69ea-4d24-b5cd-9a85de62c31b-111492925685628952-1</msg>
<status status="PASS" starttime="20231129 08:37:15.764" endtime="20231129 08:37:15.791"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:15.792" level="INFO">/s3v/erasure/ozone-test-7194517773/multipartKey1-9af13da4-69ea-4d24-b5cd-9a85de62c31b-111492925685628952-1</msg>
<status status="PASS" starttime="20231129 08:37:15.792" endtime="20231129 08:37:15.792"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:15.793" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:15.792" endtime="20231129 08:37:15.793"/>
</kw>
<msg timestamp="20231129 08:37:15.793" level="INFO">${eTag1} = /s3v/erasure/ozone-test-7194517773/multipartKey1-9af13da4-69ea-4d24-b5cd-9a85de62c31b-111492925685628952-1</msg>
<status status="PASS" starttime="20231129 08:37:15.764" endtime="20231129 08:37:15.793"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:37:15.793" endtime="20231129 08:37:15.793"/>
</kw>
<kw name="Execute" library="os">
<arg>echo "Part2" &gt; /tmp/part2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:15.796" level="INFO">Running command 'echo "Part2" &gt; /tmp/part2'.</msg>
<msg timestamp="20231129 08:37:15.797" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:15.797" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:37:15.794" endtime="20231129 08:37:15.797"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:15.798" level="INFO"/>
<status status="PASS" starttime="20231129 08:37:15.798" endtime="20231129 08:37:15.798"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:15.798" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:15.798" endtime="20231129 08:37:15.799"/>
</kw>
<status status="PASS" starttime="20231129 08:37:15.794" endtime="20231129 08:37:15.799"/>
</kw>
<msg timestamp="20231129 08:37:15.799" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:15.794" endtime="20231129 08:37:15.799"/>
</kw>
<status status="PASS" starttime="20231129 08:37:15.793" endtime="20231129 08:37:15.799"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 --part-number 2 --body /tmp/part2 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:15.802" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket erasure --key ozone-test-7194517773/multipartKey1 --part-number 2 --body /tmp/part2 --upload-id 9af13da4-69ea-4d24-b5cd-9a85de62c31b-111492925685628952 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:16.352" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:16.352" level="INFO">${output} = {
    "ETag": "/s3v/erasure/ozone-test-7194517773/multipartKey1-9af13da4-69ea-4d24-b5cd-9a85de62c31b-111492925685628952-2"
}</msg>
<status status="PASS" starttime="20231129 08:37:15.801" endtime="20231129 08:37:16.352"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:16.353" level="INFO">{
    "ETag": "/s3v/erasure/ozone-test-7194517773/multipartKey1-9af13da4-69ea-4d24-b5cd-9a85de62c31b-111492925685628952-2"
}</msg>
<status status="PASS" starttime="20231129 08:37:16.352" endtime="20231129 08:37:16.353"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:16.353" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:16.353" endtime="20231129 08:37:16.353"/>
</kw>
<status status="PASS" starttime="20231129 08:37:15.800" endtime="20231129 08:37:16.354"/>
</kw>
<msg timestamp="20231129 08:37:16.354" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:15.800" endtime="20231129 08:37:16.354"/>
</kw>
<msg timestamp="20231129 08:37:16.354" level="INFO">${output} = {
    "ETag": "/s3v/erasure/ozone-test-7194517773/multipartKey1-9af13da4-69ea-4d24-b5cd-9a85de62c31b-111492925685628952-2"
}</msg>
<status status="PASS" starttime="20231129 08:37:15.800" endtime="20231129 08:37:16.354"/>
</kw>
<msg timestamp="20231129 08:37:16.354" level="INFO">${result} = {
    "ETag": "/s3v/erasure/ozone-test-7194517773/multipartKey1-9af13da4-69ea-4d24-b5cd-9a85de62c31b-111492925685628952-2"
}</msg>
<status status="PASS" starttime="20231129 08:37:15.799" endtime="20231129 08:37:16.354"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:16.356" level="INFO">Running command 'echo '{
    "ETag": "/s3v/erasure/ozone-test-7194517773/multipartKey1-9af13da4-69ea-4d24-b5cd-9a85de62c31b-111492925685628952-2"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:16.382" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:16.382" level="INFO">${output} = /s3v/erasure/ozone-test-7194517773/multipartKey1-9af13da4-69ea-4d24-b5cd-9a85de62c31b-111492925685628952-2</msg>
<status status="PASS" starttime="20231129 08:37:16.355" endtime="20231129 08:37:16.382"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:16.383" level="INFO">/s3v/erasure/ozone-test-7194517773/multipartKey1-9af13da4-69ea-4d24-b5cd-9a85de62c31b-111492925685628952-2</msg>
<status status="PASS" starttime="20231129 08:37:16.383" endtime="20231129 08:37:16.383"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:16.383" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:16.383" endtime="20231129 08:37:16.384"/>
</kw>
<msg timestamp="20231129 08:37:16.384" level="INFO">${eTag2} = /s3v/erasure/ozone-test-7194517773/multipartKey1-9af13da4-69ea-4d24-b5cd-9a85de62c31b-111492925685628952-2</msg>
<status status="PASS" starttime="20231129 08:37:16.354" endtime="20231129 08:37:16.384"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:37:16.384" endtime="20231129 08:37:16.384"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=${eTag2},PartNumber=2}]'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:16.388" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 9af13da4-69ea-4d24-b5cd-9a85de62c31b-111492925685628952 --bucket erasure --key ozone-test-7194517773/multipartKey1 --multipart-upload 'Parts=[{ETag=/s3v/erasure/ozone-test-7194517773/multipartKey1-9af13da4-69ea-4d24-b5cd-9a85de62c31b-111492925685628952-1,PartNumber=1},{ETag=/s3v/erasure/ozone-test-7194517773/multipartKey1-9af13da4-69ea-4d24-b5cd-9a85de62c31b-111492925685628952-2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:16.846" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:16.846" level="INFO">${output} = {
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "ozone-test-7194517773/multipartKey1",
    "ETag": "\"cf4a0f76d4e7b3a93cf41845f2dbf5ed-2\""
}</msg>
<status status="PASS" starttime="20231129 08:37:16.387" endtime="20231129 08:37:16.846"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:16.847" level="INFO">{
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "ozone-test-7194517773/multipartKey1",
    "ETag": "\"cf4a0f76d4e7b3a93cf41845f2dbf5ed-2\""
}</msg>
<status status="PASS" starttime="20231129 08:37:16.847" endtime="20231129 08:37:16.847"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:16.848" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:16.848" endtime="20231129 08:37:16.848"/>
</kw>
<status status="PASS" starttime="20231129 08:37:16.386" endtime="20231129 08:37:16.848"/>
</kw>
<msg timestamp="20231129 08:37:16.848" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:16.386" endtime="20231129 08:37:16.848"/>
</kw>
<msg timestamp="20231129 08:37:16.848" level="INFO">${output} = {
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "ozone-test-7194517773/multipartKey1",
    "ETag": "\"cf4a0f76d4e7b3a93cf41845f2dbf5ed-2\""
}</msg>
<status status="PASS" starttime="20231129 08:37:16.385" endtime="20231129 08:37:16.848"/>
</kw>
<msg timestamp="20231129 08:37:16.849" level="INFO">${result} = {
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "ozone-test-7194517773/multipartKey1",
    "ETag": "\"cf4a0f76d4e7b3a93cf41845f2dbf5ed-2\""
}</msg>
<status status="PASS" starttime="20231129 08:37:16.384" endtime="20231129 08:37:16.849"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:37:16.849" endtime="20231129 08:37:16.849"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:37:16.849" endtime="20231129 08:37:16.850"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:37:16.850" endtime="20231129 08:37:16.850"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 /tmp/${PREFIX}-multipartKey1.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:16.853" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-7194517773/multipartKey1 /tmp/ozone-test-7194517773-multipartKey1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:17.421" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:17.421" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:37:16 GMT",
    "ContentLength": 5242886,
    "ETag": "\"cf4a0f76d4e7b3a93cf41845f2dbf5ed-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20231129 08:37:16.852" endtime="20231129 08:37:17.421"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:17.422" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:37:16 GMT",
    "ContentLength": 5242886,
    "ETag": "\"cf4a0f76d4e7b3a93cf41845f2dbf5ed-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 29 Nov 2023 08:37:17 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231129 08:37:17.422" endtime="20231129 08:37:17.422"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:17.423" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:17.422" endtime="20231129 08:37:17.423"/>
</kw>
<status status="PASS" starttime="20231129 08:37:16.851" endtime="20231129 08:37:17.423"/>
</kw>
<msg timestamp="20231129 08:37:17.423" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:16.851" endtime="20231129 08:37:17.423"/>
</kw>
<msg timestamp="20231129 08:37:17.423" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:37:16 GMT",
    "ContentLength": 5242886,
    "ETag": "\"cf4a0f76d4e7b3a93cf41845f2dbf5ed-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20231129 08:37:16.851" endtime="20231129 08:37:17.423"/>
</kw>
<msg timestamp="20231129 08:37:17.424" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:37:16 GMT",
    "ContentLength": 5242886,
    "ETag": "\"cf4a0f76d4e7b3a93cf41845f2dbf5ed-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20231129 08:37:16.850" endtime="20231129 08:37:17.424"/>
</kw>
<kw name="Execute" library="os">
<arg>cat /tmp/part1 /tmp/part2 &gt; /tmp/${PREFIX}-multipartKey1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:17.426" level="INFO">Running command 'cat /tmp/part1 /tmp/part2 &gt; /tmp/ozone-test-7194517773-multipartKey1'.</msg>
<msg timestamp="20231129 08:37:17.431" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:17.431" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:37:17.425" endtime="20231129 08:37:17.431"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:17.432" level="INFO"/>
<status status="PASS" starttime="20231129 08:37:17.432" endtime="20231129 08:37:17.432"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:17.433" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:17.432" endtime="20231129 08:37:17.433"/>
</kw>
<status status="PASS" starttime="20231129 08:37:17.424" endtime="20231129 08:37:17.433"/>
</kw>
<msg timestamp="20231129 08:37:17.433" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:17.424" endtime="20231129 08:37:17.433"/>
</kw>
<status status="PASS" starttime="20231129 08:37:17.424" endtime="20231129 08:37:17.433"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/${PREFIX}-multipartKey1</arg>
<arg>/tmp/${PREFIX}-multipartKey1.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:17.436" level="INFO">Running command 'md5sum /tmp/ozone-test-7194517773-multipartKey1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:17.447" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:17.447" level="INFO">${output} = 9159f0d0ce91dc09d10303fcc4bd5a86</msg>
<status status="PASS" starttime="20231129 08:37:17.435" endtime="20231129 08:37:17.447"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:17.447" level="INFO">9159f0d0ce91dc09d10303fcc4bd5a86</msg>
<status status="PASS" starttime="20231129 08:37:17.447" endtime="20231129 08:37:17.447"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:17.448" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:17.448" endtime="20231129 08:37:17.448"/>
</kw>
<status status="PASS" starttime="20231129 08:37:17.434" endtime="20231129 08:37:17.448"/>
</kw>
<msg timestamp="20231129 08:37:17.448" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:17.434" endtime="20231129 08:37:17.448"/>
</kw>
<msg timestamp="20231129 08:37:17.448" level="INFO">${checksumbefore} = 9159f0d0ce91dc09d10303fcc4bd5a86</msg>
<status status="PASS" starttime="20231129 08:37:17.434" endtime="20231129 08:37:17.448"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:17.452" level="INFO">Running command 'md5sum /tmp/ozone-test-7194517773-multipartKey1.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:17.463" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:17.463" level="INFO">${output} = 9159f0d0ce91dc09d10303fcc4bd5a86</msg>
<status status="PASS" starttime="20231129 08:37:17.451" endtime="20231129 08:37:17.463"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:17.463" level="INFO">9159f0d0ce91dc09d10303fcc4bd5a86</msg>
<status status="PASS" starttime="20231129 08:37:17.463" endtime="20231129 08:37:17.464"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:17.464" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:17.464" endtime="20231129 08:37:17.464"/>
</kw>
<status status="PASS" starttime="20231129 08:37:17.449" endtime="20231129 08:37:17.464"/>
</kw>
<msg timestamp="20231129 08:37:17.464" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:17.449" endtime="20231129 08:37:17.464"/>
</kw>
<msg timestamp="20231129 08:37:17.464" level="INFO">${checksumafter} = 9159f0d0ce91dc09d10303fcc4bd5a86</msg>
<status status="PASS" starttime="20231129 08:37:17.449" endtime="20231129 08:37:17.464"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231129 08:37:17.465" endtime="20231129 08:37:17.465"/>
</kw>
<status status="PASS" starttime="20231129 08:37:17.433" endtime="20231129 08:37:17.465"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 --part-number 1 /tmp/${PREFIX}-multipartKey1-part1.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:17.468" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-7194517773/multipartKey1 --part-number 1 /tmp/ozone-test-7194517773-multipartKey1-part1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:17.987" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:17.987" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:37:16 GMT",
    "ContentLength": 5242880,
    "ETag": "\"cf4a0f76d4e7b3a93cf41845f2dbf5ed-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20231129 08:37:17.467" endtime="20231129 08:37:17.987"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:17.988" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:37:16 GMT",
    "ContentLength": 5242880,
    "ETag": "\"cf4a0f76d4e7b3a93cf41845f2dbf5ed-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 29 Nov 2023 08:37:17 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231129 08:37:17.987" endtime="20231129 08:37:17.988"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:17.988" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:17.988" endtime="20231129 08:37:17.988"/>
</kw>
<status status="PASS" starttime="20231129 08:37:17.466" endtime="20231129 08:37:17.988"/>
</kw>
<msg timestamp="20231129 08:37:17.989" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:17.466" endtime="20231129 08:37:17.989"/>
</kw>
<msg timestamp="20231129 08:37:17.989" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:37:16 GMT",
    "ContentLength": 5242880,
    "ETag": "\"cf4a0f76d4e7b3a93cf41845f2dbf5ed-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20231129 08:37:17.466" endtime="20231129 08:37:17.989"/>
</kw>
<msg timestamp="20231129 08:37:17.989" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:37:16 GMT",
    "ContentLength": 5242880,
    "ETag": "\"cf4a0f76d4e7b3a93cf41845f2dbf5ed-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20231129 08:37:17.465" endtime="20231129 08:37:17.989"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part1</arg>
<arg>/tmp/${PREFIX}-multipartKey1-part1.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:17.992" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:18.003" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:18.003" level="INFO">${output} = 3baee1b17051ebdecc90a5c3e5a149b2</msg>
<status status="PASS" starttime="20231129 08:37:17.991" endtime="20231129 08:37:18.003"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:18.004" level="INFO">3baee1b17051ebdecc90a5c3e5a149b2</msg>
<status status="PASS" starttime="20231129 08:37:18.003" endtime="20231129 08:37:18.004"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:18.004" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:18.004" endtime="20231129 08:37:18.004"/>
</kw>
<status status="PASS" starttime="20231129 08:37:17.990" endtime="20231129 08:37:18.005"/>
</kw>
<msg timestamp="20231129 08:37:18.005" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:17.990" endtime="20231129 08:37:18.005"/>
</kw>
<msg timestamp="20231129 08:37:18.005" level="INFO">${checksumbefore} = 3baee1b17051ebdecc90a5c3e5a149b2</msg>
<status status="PASS" starttime="20231129 08:37:17.990" endtime="20231129 08:37:18.005"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:18.007" level="INFO">Running command 'md5sum /tmp/ozone-test-7194517773-multipartKey1-part1.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:18.018" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:18.018" level="INFO">${output} = 3baee1b17051ebdecc90a5c3e5a149b2</msg>
<status status="PASS" starttime="20231129 08:37:18.006" endtime="20231129 08:37:18.018"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:18.019" level="INFO">3baee1b17051ebdecc90a5c3e5a149b2</msg>
<status status="PASS" starttime="20231129 08:37:18.018" endtime="20231129 08:37:18.019"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:18.019" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:18.019" endtime="20231129 08:37:18.019"/>
</kw>
<status status="PASS" starttime="20231129 08:37:18.006" endtime="20231129 08:37:18.020"/>
</kw>
<msg timestamp="20231129 08:37:18.020" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:18.005" endtime="20231129 08:37:18.020"/>
</kw>
<msg timestamp="20231129 08:37:18.020" level="INFO">${checksumafter} = 3baee1b17051ebdecc90a5c3e5a149b2</msg>
<status status="PASS" starttime="20231129 08:37:18.005" endtime="20231129 08:37:18.020"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231129 08:37:18.020" endtime="20231129 08:37:18.020"/>
</kw>
<status status="PASS" starttime="20231129 08:37:17.989" endtime="20231129 08:37:18.021"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 --part-number 2 /tmp/${PREFIX}-multipartKey1-part2.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:18.024" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-7194517773/multipartKey1 --part-number 2 /tmp/ozone-test-7194517773-multipartKey1-part2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:18.474" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:18.474" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:37:16 GMT",
    "ContentLength": 6,
    "ETag": "\"cf4a0f76d4e7b3a93cf41845f2dbf5ed-2\"",
    "CacheControl": "no-cache",
    "C...</msg>
<status status="PASS" starttime="20231129 08:37:18.022" endtime="20231129 08:37:18.474"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:18.475" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:37:16 GMT",
    "ContentLength": 6,
    "ETag": "\"cf4a0f76d4e7b3a93cf41845f2dbf5ed-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 29 Nov 2023 08:37:18 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231129 08:37:18.475" endtime="20231129 08:37:18.475"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:18.476" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:18.475" endtime="20231129 08:37:18.476"/>
</kw>
<status status="PASS" starttime="20231129 08:37:18.022" endtime="20231129 08:37:18.476"/>
</kw>
<msg timestamp="20231129 08:37:18.476" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:18.022" endtime="20231129 08:37:18.476"/>
</kw>
<msg timestamp="20231129 08:37:18.476" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:37:16 GMT",
    "ContentLength": 6,
    "ETag": "\"cf4a0f76d4e7b3a93cf41845f2dbf5ed-2\"",
    "CacheControl": "no-cache",
    "C...</msg>
<status status="PASS" starttime="20231129 08:37:18.021" endtime="20231129 08:37:18.476"/>
</kw>
<msg timestamp="20231129 08:37:18.476" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:37:16 GMT",
    "ContentLength": 6,
    "ETag": "\"cf4a0f76d4e7b3a93cf41845f2dbf5ed-2\"",
    "CacheControl": "no-cache",
    "C...</msg>
<status status="PASS" starttime="20231129 08:37:18.021" endtime="20231129 08:37:18.476"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part2</arg>
<arg>/tmp/${PREFIX}-multipartKey1-part2.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:18.480" level="INFO">Running command 'md5sum /tmp/part2 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:18.482" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:18.482" level="INFO">${output} = 9e6cc3c0311e8eb9548e860d8caf6734</msg>
<status status="PASS" starttime="20231129 08:37:18.478" endtime="20231129 08:37:18.482"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:18.482" level="INFO">9e6cc3c0311e8eb9548e860d8caf6734</msg>
<status status="PASS" starttime="20231129 08:37:18.482" endtime="20231129 08:37:18.482"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:18.483" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:18.483" endtime="20231129 08:37:18.483"/>
</kw>
<status status="PASS" starttime="20231129 08:37:18.478" endtime="20231129 08:37:18.483"/>
</kw>
<msg timestamp="20231129 08:37:18.483" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:18.478" endtime="20231129 08:37:18.483"/>
</kw>
<msg timestamp="20231129 08:37:18.483" level="INFO">${checksumbefore} = 9e6cc3c0311e8eb9548e860d8caf6734</msg>
<status status="PASS" starttime="20231129 08:37:18.477" endtime="20231129 08:37:18.483"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:18.486" level="INFO">Running command 'md5sum /tmp/ozone-test-7194517773-multipartKey1-part2.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:18.488" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:18.488" level="INFO">${output} = 9e6cc3c0311e8eb9548e860d8caf6734</msg>
<status status="PASS" starttime="20231129 08:37:18.485" endtime="20231129 08:37:18.488"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:18.489" level="INFO">9e6cc3c0311e8eb9548e860d8caf6734</msg>
<status status="PASS" starttime="20231129 08:37:18.488" endtime="20231129 08:37:18.489"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:18.489" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:18.489" endtime="20231129 08:37:18.489"/>
</kw>
<status status="PASS" starttime="20231129 08:37:18.484" endtime="20231129 08:37:18.489"/>
</kw>
<msg timestamp="20231129 08:37:18.489" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:18.484" endtime="20231129 08:37:18.489"/>
</kw>
<msg timestamp="20231129 08:37:18.490" level="INFO">${checksumafter} = 9e6cc3c0311e8eb9548e860d8caf6734</msg>
<status status="PASS" starttime="20231129 08:37:18.484" endtime="20231129 08:37:18.490"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231129 08:37:18.490" endtime="20231129 08:37:18.490"/>
</kw>
<status status="PASS" starttime="20231129 08:37:18.477" endtime="20231129 08:37:18.490"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:37:14.583" endtime="20231129 08:37:18.490"/>
</test>
<test id="s1-s1-s8-t4" name="Test Multipart Upload Complete Entity too small" line="124">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231129 08:37:18.492" level="INFO">${randStr} = 6278244073</msg>
<status status="PASS" starttime="20231129 08:37:18.492" endtime="20231129 08:37:18.492"/>
</kw>
<msg timestamp="20231129 08:37:18.492" level="INFO">${random} = ozone-test-6278244073</msg>
<status status="PASS" starttime="20231129 08:37:18.492" endtime="20231129 08:37:18.493"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231129 08:37:18.493" level="INFO">${PREFIX} = ozone-test-6278244073</msg>
<status status="PASS" starttime="20231129 08:37:18.493" endtime="20231129 08:37:18.493"/>
</kw>
<status status="PASS" starttime="20231129 08:37:18.491" endtime="20231129 08:37:18.493"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey2</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:18.496" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket erasure --key ozone-test-6278244073/multipartKey2 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:18.947" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:18.947" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-6278244073/multipartKey2",
    "UploadId": "01f109ac-a41c-4183-9909-c6b74f170ad9-111492925941284891"
}</msg>
<status status="PASS" starttime="20231129 08:37:18.495" endtime="20231129 08:37:18.947"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:18.949" level="INFO">{
    "Bucket": "erasure",
    "Key": "ozone-test-6278244073/multipartKey2",
    "UploadId": "01f109ac-a41c-4183-9909-c6b74f170ad9-111492925941284891"
}</msg>
<status status="PASS" starttime="20231129 08:37:18.948" endtime="20231129 08:37:18.949"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:18.949" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:18.949" endtime="20231129 08:37:18.949"/>
</kw>
<status status="PASS" starttime="20231129 08:37:18.494" endtime="20231129 08:37:18.949"/>
</kw>
<msg timestamp="20231129 08:37:18.950" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:18.494" endtime="20231129 08:37:18.950"/>
</kw>
<msg timestamp="20231129 08:37:18.950" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-6278244073/multipartKey2",
    "UploadId": "01f109ac-a41c-4183-9909-c6b74f170ad9-111492925941284891"
}</msg>
<status status="PASS" starttime="20231129 08:37:18.494" endtime="20231129 08:37:18.950"/>
</kw>
<msg timestamp="20231129 08:37:18.950" level="INFO">${result} = {
    "Bucket": "erasure",
    "Key": "ozone-test-6278244073/multipartKey2",
    "UploadId": "01f109ac-a41c-4183-9909-c6b74f170ad9-111492925941284891"
}</msg>
<status status="PASS" starttime="20231129 08:37:18.493" endtime="20231129 08:37:18.950"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:18.952" level="INFO">Running command 'echo '{
    "Bucket": "erasure",
    "Key": "ozone-test-6278244073/multipartKey2",
    "UploadId": "01f109ac-a41c-4183-9909-c6b74f170ad9-111492925941284891"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:18.978" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:18.978" level="INFO">${output} = 01f109ac-a41c-4183-9909-c6b74f170ad9-111492925941284891</msg>
<status status="PASS" starttime="20231129 08:37:18.951" endtime="20231129 08:37:18.978"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:18.979" level="INFO">01f109ac-a41c-4183-9909-c6b74f170ad9-111492925941284891</msg>
<status status="PASS" starttime="20231129 08:37:18.979" endtime="20231129 08:37:18.979"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:18.980" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:18.979" endtime="20231129 08:37:18.980"/>
</kw>
<msg timestamp="20231129 08:37:18.980" level="INFO">${uploadID} = 01f109ac-a41c-4183-9909-c6b74f170ad9-111492925941284891</msg>
<status status="PASS" starttime="20231129 08:37:18.950" endtime="20231129 08:37:18.980"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:37:18.980" endtime="20231129 08:37:18.980"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:37:18.981" endtime="20231129 08:37:18.981"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:37:18.981" endtime="20231129 08:37:18.981"/>
</kw>
<kw name="Execute" library="os">
<arg>echo "Part1" &gt; /tmp/part1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:18.984" level="INFO">Running command 'echo "Part1" &gt; /tmp/part1'.</msg>
<msg timestamp="20231129 08:37:18.985" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:18.985" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:37:18.982" endtime="20231129 08:37:18.986"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:18.986" level="INFO"/>
<status status="PASS" starttime="20231129 08:37:18.986" endtime="20231129 08:37:18.986"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:18.987" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:18.986" endtime="20231129 08:37:18.987"/>
</kw>
<status status="PASS" starttime="20231129 08:37:18.982" endtime="20231129 08:37:18.987"/>
</kw>
<msg timestamp="20231129 08:37:18.987" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:18.982" endtime="20231129 08:37:18.987"/>
</kw>
<status status="PASS" starttime="20231129 08:37:18.981" endtime="20231129 08:37:18.987"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey2 --part-number 1 --body /tmp/part1 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:18.990" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket erasure --key ozone-test-6278244073/multipartKey2 --part-number 1 --body /tmp/part1 --upload-id 01f109ac-a41c-4183-9909-c6b74f170ad9-111492925941284891 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:19.497" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:19.498" level="INFO">${output} = {
    "ETag": "/s3v/erasure/ozone-test-6278244073/multipartKey2-01f109ac-a41c-4183-9909-c6b74f170ad9-111492925941284891-1"
}</msg>
<status status="PASS" starttime="20231129 08:37:18.989" endtime="20231129 08:37:19.498"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:19.499" level="INFO">{
    "ETag": "/s3v/erasure/ozone-test-6278244073/multipartKey2-01f109ac-a41c-4183-9909-c6b74f170ad9-111492925941284891-1"
}</msg>
<status status="PASS" starttime="20231129 08:37:19.498" endtime="20231129 08:37:19.499"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:19.499" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:19.499" endtime="20231129 08:37:19.499"/>
</kw>
<status status="PASS" starttime="20231129 08:37:18.988" endtime="20231129 08:37:19.500"/>
</kw>
<msg timestamp="20231129 08:37:19.500" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:18.988" endtime="20231129 08:37:19.500"/>
</kw>
<msg timestamp="20231129 08:37:19.500" level="INFO">${output} = {
    "ETag": "/s3v/erasure/ozone-test-6278244073/multipartKey2-01f109ac-a41c-4183-9909-c6b74f170ad9-111492925941284891-1"
}</msg>
<status status="PASS" starttime="20231129 08:37:18.988" endtime="20231129 08:37:19.500"/>
</kw>
<msg timestamp="20231129 08:37:19.500" level="INFO">${result} = {
    "ETag": "/s3v/erasure/ozone-test-6278244073/multipartKey2-01f109ac-a41c-4183-9909-c6b74f170ad9-111492925941284891-1"
}</msg>
<status status="PASS" starttime="20231129 08:37:18.987" endtime="20231129 08:37:19.500"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:19.503" level="INFO">Running command 'echo '{
    "ETag": "/s3v/erasure/ozone-test-6278244073/multipartKey2-01f109ac-a41c-4183-9909-c6b74f170ad9-111492925941284891-1"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:19.529" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:19.529" level="INFO">${output} = /s3v/erasure/ozone-test-6278244073/multipartKey2-01f109ac-a41c-4183-9909-c6b74f170ad9-111492925941284891-1</msg>
<status status="PASS" starttime="20231129 08:37:19.501" endtime="20231129 08:37:19.529"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:19.530" level="INFO">/s3v/erasure/ozone-test-6278244073/multipartKey2-01f109ac-a41c-4183-9909-c6b74f170ad9-111492925941284891-1</msg>
<status status="PASS" starttime="20231129 08:37:19.529" endtime="20231129 08:37:19.530"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:19.530" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:19.530" endtime="20231129 08:37:19.530"/>
</kw>
<msg timestamp="20231129 08:37:19.531" level="INFO">${eTag1} = /s3v/erasure/ozone-test-6278244073/multipartKey2-01f109ac-a41c-4183-9909-c6b74f170ad9-111492925941284891-1</msg>
<status status="PASS" starttime="20231129 08:37:19.501" endtime="20231129 08:37:19.531"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:37:19.531" endtime="20231129 08:37:19.531"/>
</kw>
<kw name="Execute" library="os">
<arg>echo "Part2" &gt; /tmp/part2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:19.534" level="INFO">Running command 'echo "Part2" &gt; /tmp/part2'.</msg>
<msg timestamp="20231129 08:37:19.535" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:19.535" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:37:19.532" endtime="20231129 08:37:19.535"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:19.536" level="INFO"/>
<status status="PASS" starttime="20231129 08:37:19.535" endtime="20231129 08:37:19.536"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:19.536" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:19.536" endtime="20231129 08:37:19.536"/>
</kw>
<status status="PASS" starttime="20231129 08:37:19.532" endtime="20231129 08:37:19.536"/>
</kw>
<msg timestamp="20231129 08:37:19.537" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:19.532" endtime="20231129 08:37:19.537"/>
</kw>
<status status="PASS" starttime="20231129 08:37:19.531" endtime="20231129 08:37:19.537"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey2 --part-number 2 --body /tmp/part2 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:19.539" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket erasure --key ozone-test-6278244073/multipartKey2 --part-number 2 --body /tmp/part2 --upload-id 01f109ac-a41c-4183-9909-c6b74f170ad9-111492925941284891 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:20.092" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:20.092" level="INFO">${output} = {
    "ETag": "/s3v/erasure/ozone-test-6278244073/multipartKey2-01f109ac-a41c-4183-9909-c6b74f170ad9-111492925941284891-2"
}</msg>
<status status="PASS" starttime="20231129 08:37:19.538" endtime="20231129 08:37:20.092"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:20.093" level="INFO">{
    "ETag": "/s3v/erasure/ozone-test-6278244073/multipartKey2-01f109ac-a41c-4183-9909-c6b74f170ad9-111492925941284891-2"
}</msg>
<status status="PASS" starttime="20231129 08:37:20.093" endtime="20231129 08:37:20.093"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:20.094" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:20.093" endtime="20231129 08:37:20.094"/>
</kw>
<status status="PASS" starttime="20231129 08:37:19.538" endtime="20231129 08:37:20.094"/>
</kw>
<msg timestamp="20231129 08:37:20.094" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:19.538" endtime="20231129 08:37:20.094"/>
</kw>
<msg timestamp="20231129 08:37:20.094" level="INFO">${output} = {
    "ETag": "/s3v/erasure/ozone-test-6278244073/multipartKey2-01f109ac-a41c-4183-9909-c6b74f170ad9-111492925941284891-2"
}</msg>
<status status="PASS" starttime="20231129 08:37:19.537" endtime="20231129 08:37:20.094"/>
</kw>
<msg timestamp="20231129 08:37:20.094" level="INFO">${result} = {
    "ETag": "/s3v/erasure/ozone-test-6278244073/multipartKey2-01f109ac-a41c-4183-9909-c6b74f170ad9-111492925941284891-2"
}</msg>
<status status="PASS" starttime="20231129 08:37:19.537" endtime="20231129 08:37:20.094"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:20.096" level="INFO">Running command 'echo '{
    "ETag": "/s3v/erasure/ozone-test-6278244073/multipartKey2-01f109ac-a41c-4183-9909-c6b74f170ad9-111492925941284891-2"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:20.122" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:20.122" level="INFO">${output} = /s3v/erasure/ozone-test-6278244073/multipartKey2-01f109ac-a41c-4183-9909-c6b74f170ad9-111492925941284891-2</msg>
<status status="PASS" starttime="20231129 08:37:20.095" endtime="20231129 08:37:20.122"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:20.123" level="INFO">/s3v/erasure/ozone-test-6278244073/multipartKey2-01f109ac-a41c-4183-9909-c6b74f170ad9-111492925941284891-2</msg>
<status status="PASS" starttime="20231129 08:37:20.122" endtime="20231129 08:37:20.123"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:20.123" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:20.123" endtime="20231129 08:37:20.123"/>
</kw>
<msg timestamp="20231129 08:37:20.123" level="INFO">${eTag2} = /s3v/erasure/ozone-test-6278244073/multipartKey2-01f109ac-a41c-4183-9909-c6b74f170ad9-111492925941284891-2</msg>
<status status="PASS" starttime="20231129 08:37:20.095" endtime="20231129 08:37:20.123"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:37:20.124" endtime="20231129 08:37:20.124"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey2 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=${eTag2},PartNumber=2}]'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:20.127" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 01f109ac-a41c-4183-9909-c6b74f170ad9-111492925941284891 --bucket erasure --key ozone-test-6278244073/multipartKey2 --multipart-upload 'Parts=[{ETag=/s3v/erasure/ozone-test-6278244073/multipartKey2-01f109ac-a41c-4183-9909-c6b74f170ad9-111492925941284891-1,PartNumber=1},{ETag=/s3v/erasure/ozone-test-6278244073/multipartKey2-01f109ac-a41c-4183-9909-c6b74f170ad9-111492925941284891-2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:20.589" level="INFO">${rc} = 255</msg>
<msg timestamp="20231129 08:37:20.589" level="INFO">${output} = 
An error occurred (EntityTooSmall) when calling the CompleteMultipartUpload operation: Your proposed upload is smaller than the minimum allowed object size. Each part must be at least 5 MB in size, e...</msg>
<status status="PASS" starttime="20231129 08:37:20.125" endtime="20231129 08:37:20.589"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:20.590" level="INFO">
An error occurred (EntityTooSmall) when calling the CompleteMultipartUpload operation: Your proposed upload is smaller than the minimum allowed object size. Each part must be at least 5 MB in size, except the last part.</msg>
<status status="PASS" starttime="20231129 08:37:20.589" endtime="20231129 08:37:20.590"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:20.590" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:20.590" endtime="20231129 08:37:20.591"/>
</kw>
<msg timestamp="20231129 08:37:20.591" level="INFO">${output} = 
An error occurred (EntityTooSmall) when calling the CompleteMultipartUpload operation: Your proposed upload is smaller than the minimum allowed object size. Each part must be at least 5 MB in size, e...</msg>
<status status="PASS" starttime="20231129 08:37:20.125" endtime="20231129 08:37:20.591"/>
</kw>
<msg timestamp="20231129 08:37:20.591" level="INFO">${result} = 
An error occurred (EntityTooSmall) when calling the CompleteMultipartUpload operation: Your proposed upload is smaller than the minimum allowed object size. Each part must be at least 5 MB in size, e...</msg>
<status status="PASS" starttime="20231129 08:37:20.124" endtime="20231129 08:37:20.591"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>EntityTooSmall</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:37:20.591" endtime="20231129 08:37:20.591"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:37:18.491" endtime="20231129 08:37:20.592"/>
</test>
<test id="s1-s1-s8-t5" name="Test Multipart Upload Complete Invalid part errors and complete mpu with few parts" line="147">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231129 08:37:20.594" level="INFO">${randStr} = 3460166828</msg>
<status status="PASS" starttime="20231129 08:37:20.593" endtime="20231129 08:37:20.594"/>
</kw>
<msg timestamp="20231129 08:37:20.594" level="INFO">${random} = ozone-test-3460166828</msg>
<status status="PASS" starttime="20231129 08:37:20.593" endtime="20231129 08:37:20.594"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231129 08:37:20.594" level="INFO">${PREFIX} = ozone-test-3460166828</msg>
<status status="PASS" starttime="20231129 08:37:20.594" endtime="20231129 08:37:20.595"/>
</kw>
<status status="PASS" starttime="20231129 08:37:20.593" endtime="20231129 08:37:20.595"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey3</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:20.598" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket erasure --key ozone-test-3460166828/multipartKey3 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:21.049" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:21.049" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-3460166828/multipartKey3",
    "UploadId": "238a0345-7e73-4a2b-bbc3-954e54b618ff-111492926079303710"
}</msg>
<status status="PASS" starttime="20231129 08:37:20.596" endtime="20231129 08:37:21.049"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:21.050" level="INFO">{
    "Bucket": "erasure",
    "Key": "ozone-test-3460166828/multipartKey3",
    "UploadId": "238a0345-7e73-4a2b-bbc3-954e54b618ff-111492926079303710"
}</msg>
<status status="PASS" starttime="20231129 08:37:21.049" endtime="20231129 08:37:21.050"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:21.050" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:21.050" endtime="20231129 08:37:21.050"/>
</kw>
<status status="PASS" starttime="20231129 08:37:20.596" endtime="20231129 08:37:21.050"/>
</kw>
<msg timestamp="20231129 08:37:21.051" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:20.596" endtime="20231129 08:37:21.051"/>
</kw>
<msg timestamp="20231129 08:37:21.051" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-3460166828/multipartKey3",
    "UploadId": "238a0345-7e73-4a2b-bbc3-954e54b618ff-111492926079303710"
}</msg>
<status status="PASS" starttime="20231129 08:37:20.595" endtime="20231129 08:37:21.051"/>
</kw>
<msg timestamp="20231129 08:37:21.051" level="INFO">${result} = {
    "Bucket": "erasure",
    "Key": "ozone-test-3460166828/multipartKey3",
    "UploadId": "238a0345-7e73-4a2b-bbc3-954e54b618ff-111492926079303710"
}</msg>
<status status="PASS" starttime="20231129 08:37:20.595" endtime="20231129 08:37:21.051"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:21.053" level="INFO">Running command 'echo '{
    "Bucket": "erasure",
    "Key": "ozone-test-3460166828/multipartKey3",
    "UploadId": "238a0345-7e73-4a2b-bbc3-954e54b618ff-111492926079303710"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:21.079" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:21.079" level="INFO">${output} = 238a0345-7e73-4a2b-bbc3-954e54b618ff-111492926079303710</msg>
<status status="PASS" starttime="20231129 08:37:21.052" endtime="20231129 08:37:21.079"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:21.080" level="INFO">238a0345-7e73-4a2b-bbc3-954e54b618ff-111492926079303710</msg>
<status status="PASS" starttime="20231129 08:37:21.079" endtime="20231129 08:37:21.080"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:21.080" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:21.080" endtime="20231129 08:37:21.080"/>
</kw>
<msg timestamp="20231129 08:37:21.080" level="INFO">${uploadID} = 238a0345-7e73-4a2b-bbc3-954e54b618ff-111492926079303710</msg>
<status status="PASS" starttime="20231129 08:37:21.051" endtime="20231129 08:37:21.080"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:37:21.081" endtime="20231129 08:37:21.081"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:37:21.081" endtime="20231129 08:37:21.081"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:37:21.081" endtime="20231129 08:37:21.082"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}]'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:21.084" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 238a0345-7e73-4a2b-bbc3-954e54b618ff-111492926079303710 --bucket erasure --key ozone-test-3460166828/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:21.537" level="INFO">${rc} = 255</msg>
<msg timestamp="20231129 08:37:21.537" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20231129 08:37:21.083" endtime="20231129 08:37:21.537"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:21.538" level="INFO">
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified entity tag might not have matched the part's entity tag.</msg>
<status status="PASS" starttime="20231129 08:37:21.538" endtime="20231129 08:37:21.538"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:21.539" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:21.539" endtime="20231129 08:37:21.539"/>
</kw>
<msg timestamp="20231129 08:37:21.539" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20231129 08:37:21.083" endtime="20231129 08:37:21.539"/>
</kw>
<msg timestamp="20231129 08:37:21.539" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20231129 08:37:21.082" endtime="20231129 08:37:21.539"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPart</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:37:21.540" endtime="20231129 08:37:21.540"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=2},{ETag=etag2,PartNumber=1}]'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:21.543" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 238a0345-7e73-4a2b-bbc3-954e54b618ff-111492926079303710 --bucket erasure --key ozone-test-3460166828/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=2},{ETag=etag2,PartNumber=1}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:22.008" level="INFO">${rc} = 255</msg>
<msg timestamp="20231129 08:37:22.008" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20231129 08:37:21.541" endtime="20231129 08:37:22.008"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:22.009" level="INFO">
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified entity tag might not have matched the part's entity tag.</msg>
<status status="PASS" starttime="20231129 08:37:22.009" endtime="20231129 08:37:22.009"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:22.010" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:22.009" endtime="20231129 08:37:22.010"/>
</kw>
<msg timestamp="20231129 08:37:22.010" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20231129 08:37:21.541" endtime="20231129 08:37:22.010"/>
</kw>
<msg timestamp="20231129 08:37:22.010" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20231129 08:37:21.540" endtime="20231129 08:37:22.010"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPart</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:37:22.011" endtime="20231129 08:37:22.011"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>5</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>5</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:22.014" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:22.033" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:22.033" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:37:22.013" endtime="20231129 08:37:22.033"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:22.034" level="INFO"/>
<status status="PASS" starttime="20231129 08:37:22.033" endtime="20231129 08:37:22.034"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:22.034" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:22.034" endtime="20231129 08:37:22.034"/>
</kw>
<status status="PASS" starttime="20231129 08:37:22.012" endtime="20231129 08:37:22.034"/>
</kw>
<msg timestamp="20231129 08:37:22.035" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:22.012" endtime="20231129 08:37:22.035"/>
</kw>
<status status="PASS" starttime="20231129 08:37:22.012" endtime="20231129 08:37:22.035"/>
</kw>
<status status="PASS" starttime="20231129 08:37:22.011" endtime="20231129 08:37:22.035"/>
</kw>
<status status="PASS" starttime="20231129 08:37:22.011" endtime="20231129 08:37:22.035"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --part-number 1 --body /tmp/part1 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:22.038" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket erasure --key ozone-test-3460166828/multipartKey3 --part-number 1 --body /tmp/part1 --upload-id 238a0345-7e73-4a2b-bbc3-954e54b618ff-111492926079303710 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:22.693" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:22.693" level="INFO">${output} = {
    "ETag": "/s3v/erasure/ozone-test-3460166828/multipartKey3-238a0345-7e73-4a2b-bbc3-954e54b618ff-111492926079303710-1"
}</msg>
<status status="PASS" starttime="20231129 08:37:22.037" endtime="20231129 08:37:22.693"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:22.694" level="INFO">{
    "ETag": "/s3v/erasure/ozone-test-3460166828/multipartKey3-238a0345-7e73-4a2b-bbc3-954e54b618ff-111492926079303710-1"
}</msg>
<status status="PASS" starttime="20231129 08:37:22.694" endtime="20231129 08:37:22.694"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:22.695" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:22.694" endtime="20231129 08:37:22.695"/>
</kw>
<status status="PASS" starttime="20231129 08:37:22.036" endtime="20231129 08:37:22.695"/>
</kw>
<msg timestamp="20231129 08:37:22.695" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:22.036" endtime="20231129 08:37:22.695"/>
</kw>
<msg timestamp="20231129 08:37:22.695" level="INFO">${output} = {
    "ETag": "/s3v/erasure/ozone-test-3460166828/multipartKey3-238a0345-7e73-4a2b-bbc3-954e54b618ff-111492926079303710-1"
}</msg>
<status status="PASS" starttime="20231129 08:37:22.035" endtime="20231129 08:37:22.695"/>
</kw>
<msg timestamp="20231129 08:37:22.696" level="INFO">${result} = {
    "ETag": "/s3v/erasure/ozone-test-3460166828/multipartKey3-238a0345-7e73-4a2b-bbc3-954e54b618ff-111492926079303710-1"
}</msg>
<status status="PASS" starttime="20231129 08:37:22.035" endtime="20231129 08:37:22.696"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:22.698" level="INFO">Running command 'echo '{
    "ETag": "/s3v/erasure/ozone-test-3460166828/multipartKey3-238a0345-7e73-4a2b-bbc3-954e54b618ff-111492926079303710-1"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:22.723" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:22.723" level="INFO">${output} = /s3v/erasure/ozone-test-3460166828/multipartKey3-238a0345-7e73-4a2b-bbc3-954e54b618ff-111492926079303710-1</msg>
<status status="PASS" starttime="20231129 08:37:22.696" endtime="20231129 08:37:22.723"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:22.723" level="INFO">/s3v/erasure/ozone-test-3460166828/multipartKey3-238a0345-7e73-4a2b-bbc3-954e54b618ff-111492926079303710-1</msg>
<status status="PASS" starttime="20231129 08:37:22.723" endtime="20231129 08:37:22.723"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:22.724" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:22.724" endtime="20231129 08:37:22.724"/>
</kw>
<msg timestamp="20231129 08:37:22.724" level="INFO">${eTag1} = /s3v/erasure/ozone-test-3460166828/multipartKey3-238a0345-7e73-4a2b-bbc3-954e54b618ff-111492926079303710-1</msg>
<status status="PASS" starttime="20231129 08:37:22.696" endtime="20231129 08:37:22.724"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:37:22.724" endtime="20231129 08:37:22.725"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --part-number 2 --body /tmp/part1 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:22.728" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket erasure --key ozone-test-3460166828/multipartKey3 --part-number 2 --body /tmp/part1 --upload-id 238a0345-7e73-4a2b-bbc3-954e54b618ff-111492926079303710 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:23.465" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:23.465" level="INFO">${output} = {
    "ETag": "/s3v/erasure/ozone-test-3460166828/multipartKey3-238a0345-7e73-4a2b-bbc3-954e54b618ff-111492926079303710-2"
}</msg>
<status status="PASS" starttime="20231129 08:37:22.726" endtime="20231129 08:37:23.465"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:23.466" level="INFO">{
    "ETag": "/s3v/erasure/ozone-test-3460166828/multipartKey3-238a0345-7e73-4a2b-bbc3-954e54b618ff-111492926079303710-2"
}</msg>
<status status="PASS" starttime="20231129 08:37:23.465" endtime="20231129 08:37:23.466"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:23.466" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:23.466" endtime="20231129 08:37:23.467"/>
</kw>
<status status="PASS" starttime="20231129 08:37:22.726" endtime="20231129 08:37:23.467"/>
</kw>
<msg timestamp="20231129 08:37:23.467" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:22.726" endtime="20231129 08:37:23.467"/>
</kw>
<msg timestamp="20231129 08:37:23.467" level="INFO">${output} = {
    "ETag": "/s3v/erasure/ozone-test-3460166828/multipartKey3-238a0345-7e73-4a2b-bbc3-954e54b618ff-111492926079303710-2"
}</msg>
<status status="PASS" starttime="20231129 08:37:22.725" endtime="20231129 08:37:23.467"/>
</kw>
<msg timestamp="20231129 08:37:23.467" level="INFO">${result} = {
    "ETag": "/s3v/erasure/ozone-test-3460166828/multipartKey3-238a0345-7e73-4a2b-bbc3-954e54b618ff-111492926079303710-2"
}</msg>
<status status="PASS" starttime="20231129 08:37:22.725" endtime="20231129 08:37:23.467"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:23.469" level="INFO">Running command 'echo '{
    "ETag": "/s3v/erasure/ozone-test-3460166828/multipartKey3-238a0345-7e73-4a2b-bbc3-954e54b618ff-111492926079303710-2"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:23.495" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:23.495" level="INFO">${output} = /s3v/erasure/ozone-test-3460166828/multipartKey3-238a0345-7e73-4a2b-bbc3-954e54b618ff-111492926079303710-2</msg>
<status status="PASS" starttime="20231129 08:37:23.468" endtime="20231129 08:37:23.495"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:23.496" level="INFO">/s3v/erasure/ozone-test-3460166828/multipartKey3-238a0345-7e73-4a2b-bbc3-954e54b618ff-111492926079303710-2</msg>
<status status="PASS" starttime="20231129 08:37:23.495" endtime="20231129 08:37:23.496"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:23.496" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:23.496" endtime="20231129 08:37:23.496"/>
</kw>
<msg timestamp="20231129 08:37:23.496" level="INFO">${eTag2} = /s3v/erasure/ozone-test-3460166828/multipartKey3-238a0345-7e73-4a2b-bbc3-954e54b618ff-111492926079303710-2</msg>
<status status="PASS" starttime="20231129 08:37:23.467" endtime="20231129 08:37:23.496"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:37:23.497" endtime="20231129 08:37:23.497"/>
</kw>
<kw name="Execute" library="os">
<arg>echo "Part3" &gt; /tmp/part3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:23.499" level="INFO">Running command 'echo "Part3" &gt; /tmp/part3'.</msg>
<msg timestamp="20231129 08:37:23.500" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:23.500" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:37:23.498" endtime="20231129 08:37:23.500"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:23.501" level="INFO"/>
<status status="PASS" starttime="20231129 08:37:23.501" endtime="20231129 08:37:23.501"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:23.501" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:23.501" endtime="20231129 08:37:23.502"/>
</kw>
<status status="PASS" starttime="20231129 08:37:23.498" endtime="20231129 08:37:23.502"/>
</kw>
<msg timestamp="20231129 08:37:23.502" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:23.497" endtime="20231129 08:37:23.502"/>
</kw>
<status status="PASS" starttime="20231129 08:37:23.497" endtime="20231129 08:37:23.502"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --part-number 3 --body /tmp/part3 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:23.505" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket erasure --key ozone-test-3460166828/multipartKey3 --part-number 3 --body /tmp/part3 --upload-id 238a0345-7e73-4a2b-bbc3-954e54b618ff-111492926079303710 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:24.046" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:24.047" level="INFO">${output} = {
    "ETag": "/s3v/erasure/ozone-test-3460166828/multipartKey3-238a0345-7e73-4a2b-bbc3-954e54b618ff-111492926079303710-3"
}</msg>
<status status="PASS" starttime="20231129 08:37:23.504" endtime="20231129 08:37:24.047"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:24.047" level="INFO">{
    "ETag": "/s3v/erasure/ozone-test-3460166828/multipartKey3-238a0345-7e73-4a2b-bbc3-954e54b618ff-111492926079303710-3"
}</msg>
<status status="PASS" starttime="20231129 08:37:24.047" endtime="20231129 08:37:24.048"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:24.048" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:24.048" endtime="20231129 08:37:24.048"/>
</kw>
<status status="PASS" starttime="20231129 08:37:23.503" endtime="20231129 08:37:24.048"/>
</kw>
<msg timestamp="20231129 08:37:24.048" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:23.503" endtime="20231129 08:37:24.048"/>
</kw>
<msg timestamp="20231129 08:37:24.049" level="INFO">${output} = {
    "ETag": "/s3v/erasure/ozone-test-3460166828/multipartKey3-238a0345-7e73-4a2b-bbc3-954e54b618ff-111492926079303710-3"
}</msg>
<status status="PASS" starttime="20231129 08:37:23.503" endtime="20231129 08:37:24.049"/>
</kw>
<msg timestamp="20231129 08:37:24.049" level="INFO">${result} = {
    "ETag": "/s3v/erasure/ozone-test-3460166828/multipartKey3-238a0345-7e73-4a2b-bbc3-954e54b618ff-111492926079303710-3"
}</msg>
<status status="PASS" starttime="20231129 08:37:23.502" endtime="20231129 08:37:24.049"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag3}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:24.051" level="INFO">Running command 'echo '{
    "ETag": "/s3v/erasure/ozone-test-3460166828/multipartKey3-238a0345-7e73-4a2b-bbc3-954e54b618ff-111492926079303710-3"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:24.078" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:24.078" level="INFO">${output} = /s3v/erasure/ozone-test-3460166828/multipartKey3-238a0345-7e73-4a2b-bbc3-954e54b618ff-111492926079303710-3</msg>
<status status="PASS" starttime="20231129 08:37:24.050" endtime="20231129 08:37:24.078"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:24.079" level="INFO">/s3v/erasure/ozone-test-3460166828/multipartKey3-238a0345-7e73-4a2b-bbc3-954e54b618ff-111492926079303710-3</msg>
<status status="PASS" starttime="20231129 08:37:24.078" endtime="20231129 08:37:24.079"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:24.079" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:24.079" endtime="20231129 08:37:24.079"/>
</kw>
<msg timestamp="20231129 08:37:24.080" level="INFO">${eTag3} = /s3v/erasure/ozone-test-3460166828/multipartKey3-238a0345-7e73-4a2b-bbc3-954e54b618ff-111492926079303710-3</msg>
<status status="PASS" starttime="20231129 08:37:24.049" endtime="20231129 08:37:24.080"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:37:24.080" endtime="20231129 08:37:24.080"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}]'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:24.083" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 238a0345-7e73-4a2b-bbc3-954e54b618ff-111492926079303710 --bucket erasure --key ozone-test-3460166828/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:24.529" level="INFO">${rc} = 255</msg>
<msg timestamp="20231129 08:37:24.529" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20231129 08:37:24.081" endtime="20231129 08:37:24.530"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:24.530" level="INFO">
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified entity tag might not have matched the part's entity tag.</msg>
<status status="PASS" starttime="20231129 08:37:24.530" endtime="20231129 08:37:24.531"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:24.531" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:24.531" endtime="20231129 08:37:24.531"/>
</kw>
<msg timestamp="20231129 08:37:24.531" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20231129 08:37:24.081" endtime="20231129 08:37:24.531"/>
</kw>
<msg timestamp="20231129 08:37:24.531" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20231129 08:37:24.080" endtime="20231129 08:37:24.532"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPart</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:37:24.532" endtime="20231129 08:37:24.532"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=etag2,PartNumber=2}]'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:24.535" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 238a0345-7e73-4a2b-bbc3-954e54b618ff-111492926079303710 --bucket erasure --key ozone-test-3460166828/multipartKey3 --multipart-upload 'Parts=[{ETag=/s3v/erasure/ozone-test-3460166828/multipartKey3-238a0345-7e73-4a2b-bbc3-954e54b618ff-111492926079303710-1,PartNumber=1},{ETag=etag2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:24.975" level="INFO">${rc} = 255</msg>
<msg timestamp="20231129 08:37:24.975" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20231129 08:37:24.533" endtime="20231129 08:37:24.975"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:24.976" level="INFO">
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified entity tag might not have matched the part's entity tag.</msg>
<status status="PASS" starttime="20231129 08:37:24.976" endtime="20231129 08:37:24.977"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:24.977" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:24.977" endtime="20231129 08:37:24.977"/>
</kw>
<msg timestamp="20231129 08:37:24.977" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20231129 08:37:24.533" endtime="20231129 08:37:24.977"/>
</kw>
<msg timestamp="20231129 08:37:24.978" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20231129 08:37:24.532" endtime="20231129 08:37:24.978"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPart</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:37:24.978" endtime="20231129 08:37:24.978"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=4},{ETag=etag2,PartNumber=2}]'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:24.981" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 238a0345-7e73-4a2b-bbc3-954e54b618ff-111492926079303710 --bucket erasure --key ozone-test-3460166828/multipartKey3 --multipart-upload 'Parts=[{ETag=/s3v/erasure/ozone-test-3460166828/multipartKey3-238a0345-7e73-4a2b-bbc3-954e54b618ff-111492926079303710-1,PartNumber=4},{ETag=etag2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:25.423" level="INFO">${rc} = 255</msg>
<msg timestamp="20231129 08:37:25.423" level="INFO">${output} = 
An error occurred (InvalidPartOrder) when calling the CompleteMultipartUpload operation: The list of parts was not in ascending order. The parts list must be specified in order by part number.</msg>
<status status="PASS" starttime="20231129 08:37:24.979" endtime="20231129 08:37:25.423"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:25.424" level="INFO">
An error occurred (InvalidPartOrder) when calling the CompleteMultipartUpload operation: The list of parts was not in ascending order. The parts list must be specified in order by part number.</msg>
<status status="PASS" starttime="20231129 08:37:25.424" endtime="20231129 08:37:25.424"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:25.425" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:25.424" endtime="20231129 08:37:25.425"/>
</kw>
<msg timestamp="20231129 08:37:25.425" level="INFO">${output} = 
An error occurred (InvalidPartOrder) when calling the CompleteMultipartUpload operation: The list of parts was not in ascending order. The parts list must be specified in order by part number.</msg>
<status status="PASS" starttime="20231129 08:37:24.979" endtime="20231129 08:37:25.425"/>
</kw>
<msg timestamp="20231129 08:37:25.425" level="INFO">${result} = 
An error occurred (InvalidPartOrder) when calling the CompleteMultipartUpload operation: The list of parts was not in ascending order. The parts list must be specified in order by part number.</msg>
<status status="PASS" starttime="20231129 08:37:24.978" endtime="20231129 08:37:25.425"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPartOrder</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:37:25.425" endtime="20231129 08:37:25.426"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=${eTag3},PartNumber=3}]'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:25.429" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 238a0345-7e73-4a2b-bbc3-954e54b618ff-111492926079303710 --bucket erasure --key ozone-test-3460166828/multipartKey3 --multipart-upload 'Parts=[{ETag=/s3v/erasure/ozone-test-3460166828/multipartKey3-238a0345-7e73-4a2b-bbc3-954e54b618ff-111492926079303710-1,PartNumber=1},{ETag=/s3v/erasure/ozone-test-3460166828/multipartKey3-238a0345-7e73-4a2b-bbc3-954e54b618ff-111492926079303710-3,PartNumber=3}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:25.885" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:25.885" level="INFO">${output} = {
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "ozone-test-3460166828/multipartKey3",
    "ETag": "\"643497f3692a95dc29f8a703095793c2-3\""
}</msg>
<status status="PASS" starttime="20231129 08:37:25.427" endtime="20231129 08:37:25.885"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:25.886" level="INFO">{
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "ozone-test-3460166828/multipartKey3",
    "ETag": "\"643497f3692a95dc29f8a703095793c2-3\""
}</msg>
<status status="PASS" starttime="20231129 08:37:25.886" endtime="20231129 08:37:25.886"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:25.887" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:25.887" endtime="20231129 08:37:25.887"/>
</kw>
<status status="PASS" starttime="20231129 08:37:25.427" endtime="20231129 08:37:25.887"/>
</kw>
<msg timestamp="20231129 08:37:25.887" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:25.427" endtime="20231129 08:37:25.887"/>
</kw>
<msg timestamp="20231129 08:37:25.887" level="INFO">${output} = {
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "ozone-test-3460166828/multipartKey3",
    "ETag": "\"643497f3692a95dc29f8a703095793c2-3\""
}</msg>
<status status="PASS" starttime="20231129 08:37:25.426" endtime="20231129 08:37:25.887"/>
</kw>
<msg timestamp="20231129 08:37:25.888" level="INFO">${result} = {
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "ozone-test-3460166828/multipartKey3",
    "ETag": "\"643497f3692a95dc29f8a703095793c2-3\""
}</msg>
<status status="PASS" starttime="20231129 08:37:25.426" endtime="20231129 08:37:25.888"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:37:25.888" endtime="20231129 08:37:25.888"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:37:25.888" endtime="20231129 08:37:25.889"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:37:25.889" endtime="20231129 08:37:25.889"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 /tmp/${PREFIX}-multipartKey3.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:25.892" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-3460166828/multipartKey3 /tmp/ozone-test-3460166828-multipartKey3.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:26.432" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:26.432" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:37:25 GMT",
    "ContentLength": 5242886,
    "ETag": "\"643497f3692a95dc29f8a703095793c2-3\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20231129 08:37:25.891" endtime="20231129 08:37:26.432"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:26.433" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:37:25 GMT",
    "ContentLength": 5242886,
    "ETag": "\"643497f3692a95dc29f8a703095793c2-3\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 29 Nov 2023 08:37:26 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231129 08:37:26.432" endtime="20231129 08:37:26.433"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:26.434" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:26.433" endtime="20231129 08:37:26.434"/>
</kw>
<status status="PASS" starttime="20231129 08:37:25.891" endtime="20231129 08:37:26.434"/>
</kw>
<msg timestamp="20231129 08:37:26.434" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:25.890" endtime="20231129 08:37:26.434"/>
</kw>
<msg timestamp="20231129 08:37:26.434" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:37:25 GMT",
    "ContentLength": 5242886,
    "ETag": "\"643497f3692a95dc29f8a703095793c2-3\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20231129 08:37:25.890" endtime="20231129 08:37:26.434"/>
</kw>
<msg timestamp="20231129 08:37:26.434" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:37:25 GMT",
    "ContentLength": 5242886,
    "ETag": "\"643497f3692a95dc29f8a703095793c2-3\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20231129 08:37:25.889" endtime="20231129 08:37:26.434"/>
</kw>
<kw name="Execute" library="os">
<arg>cat /tmp/part1 /tmp/part3 &gt; /tmp/${PREFIX}-multipartKey3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:26.437" level="INFO">Running command 'cat /tmp/part1 /tmp/part3 &gt; /tmp/ozone-test-3460166828-multipartKey3'.</msg>
<msg timestamp="20231129 08:37:26.442" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:26.442" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:37:26.436" endtime="20231129 08:37:26.442"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:26.443" level="INFO"/>
<status status="PASS" starttime="20231129 08:37:26.442" endtime="20231129 08:37:26.443"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:26.443" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:26.443" endtime="20231129 08:37:26.444"/>
</kw>
<status status="PASS" starttime="20231129 08:37:26.435" endtime="20231129 08:37:26.444"/>
</kw>
<msg timestamp="20231129 08:37:26.444" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:26.435" endtime="20231129 08:37:26.444"/>
</kw>
<status status="PASS" starttime="20231129 08:37:26.434" endtime="20231129 08:37:26.444"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/${PREFIX}-multipartKey3</arg>
<arg>/tmp/${PREFIX}-multipartKey3.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:26.448" level="INFO">Running command 'md5sum /tmp/ozone-test-3460166828-multipartKey3 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:26.458" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:26.458" level="INFO">${output} = 8cb03c2c80d6b032d09f3b64a678161e</msg>
<status status="PASS" starttime="20231129 08:37:26.446" endtime="20231129 08:37:26.458"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:26.459" level="INFO">8cb03c2c80d6b032d09f3b64a678161e</msg>
<status status="PASS" starttime="20231129 08:37:26.458" endtime="20231129 08:37:26.459"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:26.459" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:26.459" endtime="20231129 08:37:26.459"/>
</kw>
<status status="PASS" starttime="20231129 08:37:26.445" endtime="20231129 08:37:26.459"/>
</kw>
<msg timestamp="20231129 08:37:26.460" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:26.445" endtime="20231129 08:37:26.460"/>
</kw>
<msg timestamp="20231129 08:37:26.460" level="INFO">${checksumbefore} = 8cb03c2c80d6b032d09f3b64a678161e</msg>
<status status="PASS" starttime="20231129 08:37:26.445" endtime="20231129 08:37:26.460"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:26.462" level="INFO">Running command 'md5sum /tmp/ozone-test-3460166828-multipartKey3.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:26.473" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:26.473" level="INFO">${output} = 8cb03c2c80d6b032d09f3b64a678161e</msg>
<status status="PASS" starttime="20231129 08:37:26.461" endtime="20231129 08:37:26.473"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:26.473" level="INFO">8cb03c2c80d6b032d09f3b64a678161e</msg>
<status status="PASS" starttime="20231129 08:37:26.473" endtime="20231129 08:37:26.474"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:26.474" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:26.474" endtime="20231129 08:37:26.474"/>
</kw>
<status status="PASS" starttime="20231129 08:37:26.461" endtime="20231129 08:37:26.474"/>
</kw>
<msg timestamp="20231129 08:37:26.474" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:26.460" endtime="20231129 08:37:26.474"/>
</kw>
<msg timestamp="20231129 08:37:26.474" level="INFO">${checksumafter} = 8cb03c2c80d6b032d09f3b64a678161e</msg>
<status status="PASS" starttime="20231129 08:37:26.460" endtime="20231129 08:37:26.475"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231129 08:37:26.475" endtime="20231129 08:37:26.475"/>
</kw>
<status status="PASS" starttime="20231129 08:37:26.444" endtime="20231129 08:37:26.475"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --part-number 1 /tmp/${PREFIX}-multipartKey3-part1.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:26.478" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-3460166828/multipartKey3 --part-number 1 /tmp/ozone-test-3460166828-multipartKey3-part1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:27.010" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:27.010" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:37:25 GMT",
    "ContentLength": 5242880,
    "ETag": "\"643497f3692a95dc29f8a703095793c2-3\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20231129 08:37:26.477" endtime="20231129 08:37:27.010"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:27.011" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:37:25 GMT",
    "ContentLength": 5242880,
    "ETag": "\"643497f3692a95dc29f8a703095793c2-3\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 29 Nov 2023 08:37:26 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231129 08:37:27.010" endtime="20231129 08:37:27.011"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:27.011" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:27.011" endtime="20231129 08:37:27.011"/>
</kw>
<status status="PASS" starttime="20231129 08:37:26.477" endtime="20231129 08:37:27.011"/>
</kw>
<msg timestamp="20231129 08:37:27.012" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:26.476" endtime="20231129 08:37:27.012"/>
</kw>
<msg timestamp="20231129 08:37:27.012" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:37:25 GMT",
    "ContentLength": 5242880,
    "ETag": "\"643497f3692a95dc29f8a703095793c2-3\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20231129 08:37:26.476" endtime="20231129 08:37:27.012"/>
</kw>
<msg timestamp="20231129 08:37:27.012" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:37:25 GMT",
    "ContentLength": 5242880,
    "ETag": "\"643497f3692a95dc29f8a703095793c2-3\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20231129 08:37:26.475" endtime="20231129 08:37:27.012"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part1</arg>
<arg>/tmp/${PREFIX}-multipartKey3-part1.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:27.015" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:27.026" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:27.026" level="INFO">${output} = 193d1bd507af86b52cac311f04f1e400</msg>
<status status="PASS" starttime="20231129 08:37:27.014" endtime="20231129 08:37:27.026"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:27.027" level="INFO">193d1bd507af86b52cac311f04f1e400</msg>
<status status="PASS" starttime="20231129 08:37:27.027" endtime="20231129 08:37:27.027"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:27.027" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:27.027" endtime="20231129 08:37:27.027"/>
</kw>
<status status="PASS" starttime="20231129 08:37:27.013" endtime="20231129 08:37:27.028"/>
</kw>
<msg timestamp="20231129 08:37:27.028" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:27.013" endtime="20231129 08:37:27.028"/>
</kw>
<msg timestamp="20231129 08:37:27.028" level="INFO">${checksumbefore} = 193d1bd507af86b52cac311f04f1e400</msg>
<status status="PASS" starttime="20231129 08:37:27.013" endtime="20231129 08:37:27.028"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:27.030" level="INFO">Running command 'md5sum /tmp/ozone-test-3460166828-multipartKey3-part1.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:27.041" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:27.041" level="INFO">${output} = 193d1bd507af86b52cac311f04f1e400</msg>
<status status="PASS" starttime="20231129 08:37:27.029" endtime="20231129 08:37:27.041"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:27.042" level="INFO">193d1bd507af86b52cac311f04f1e400</msg>
<status status="PASS" starttime="20231129 08:37:27.041" endtime="20231129 08:37:27.042"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:27.042" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:27.042" endtime="20231129 08:37:27.042"/>
</kw>
<status status="PASS" starttime="20231129 08:37:27.029" endtime="20231129 08:37:27.042"/>
</kw>
<msg timestamp="20231129 08:37:27.043" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:27.029" endtime="20231129 08:37:27.043"/>
</kw>
<msg timestamp="20231129 08:37:27.043" level="INFO">${checksumafter} = 193d1bd507af86b52cac311f04f1e400</msg>
<status status="PASS" starttime="20231129 08:37:27.028" endtime="20231129 08:37:27.043"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231129 08:37:27.043" endtime="20231129 08:37:27.043"/>
</kw>
<status status="PASS" starttime="20231129 08:37:27.012" endtime="20231129 08:37:27.043"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --part-number 3 /tmp/${PREFIX}-multipartKey3-part3.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:27.046" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-3460166828/multipartKey3 --part-number 3 /tmp/ozone-test-3460166828-multipartKey3-part3.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:27.496" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:27.496" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:37:25 GMT",
    "ContentLength": 6,
    "ETag": "\"643497f3692a95dc29f8a703095793c2-3\"",
    "CacheControl": "no-cache",
    "C...</msg>
<status status="PASS" starttime="20231129 08:37:27.045" endtime="20231129 08:37:27.497"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:27.497" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:37:25 GMT",
    "ContentLength": 6,
    "ETag": "\"643497f3692a95dc29f8a703095793c2-3\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 29 Nov 2023 08:37:27 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231129 08:37:27.497" endtime="20231129 08:37:27.498"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:27.498" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:27.498" endtime="20231129 08:37:27.498"/>
</kw>
<status status="PASS" starttime="20231129 08:37:27.045" endtime="20231129 08:37:27.498"/>
</kw>
<msg timestamp="20231129 08:37:27.498" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:27.045" endtime="20231129 08:37:27.498"/>
</kw>
<msg timestamp="20231129 08:37:27.499" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:37:25 GMT",
    "ContentLength": 6,
    "ETag": "\"643497f3692a95dc29f8a703095793c2-3\"",
    "CacheControl": "no-cache",
    "C...</msg>
<status status="PASS" starttime="20231129 08:37:27.044" endtime="20231129 08:37:27.499"/>
</kw>
<msg timestamp="20231129 08:37:27.499" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:37:25 GMT",
    "ContentLength": 6,
    "ETag": "\"643497f3692a95dc29f8a703095793c2-3\"",
    "CacheControl": "no-cache",
    "C...</msg>
<status status="PASS" starttime="20231129 08:37:27.044" endtime="20231129 08:37:27.499"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part3</arg>
<arg>/tmp/${PREFIX}-multipartKey3-part3.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:27.502" level="INFO">Running command 'md5sum /tmp/part3 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:27.504" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:27.504" level="INFO">${output} = 804f368834f04e8d39a8a7c76ba870e3</msg>
<status status="PASS" starttime="20231129 08:37:27.501" endtime="20231129 08:37:27.504"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:27.505" level="INFO">804f368834f04e8d39a8a7c76ba870e3</msg>
<status status="PASS" starttime="20231129 08:37:27.505" endtime="20231129 08:37:27.505"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:27.506" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:27.505" endtime="20231129 08:37:27.506"/>
</kw>
<status status="PASS" starttime="20231129 08:37:27.500" endtime="20231129 08:37:27.506"/>
</kw>
<msg timestamp="20231129 08:37:27.506" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:27.500" endtime="20231129 08:37:27.506"/>
</kw>
<msg timestamp="20231129 08:37:27.506" level="INFO">${checksumbefore} = 804f368834f04e8d39a8a7c76ba870e3</msg>
<status status="PASS" starttime="20231129 08:37:27.499" endtime="20231129 08:37:27.506"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:27.509" level="INFO">Running command 'md5sum /tmp/ozone-test-3460166828-multipartKey3-part3.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:27.510" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:27.511" level="INFO">${output} = 804f368834f04e8d39a8a7c76ba870e3</msg>
<status status="PASS" starttime="20231129 08:37:27.507" endtime="20231129 08:37:27.511"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:27.511" level="INFO">804f368834f04e8d39a8a7c76ba870e3</msg>
<status status="PASS" starttime="20231129 08:37:27.511" endtime="20231129 08:37:27.511"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:27.512" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:27.511" endtime="20231129 08:37:27.512"/>
</kw>
<status status="PASS" starttime="20231129 08:37:27.507" endtime="20231129 08:37:27.512"/>
</kw>
<msg timestamp="20231129 08:37:27.512" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:27.507" endtime="20231129 08:37:27.512"/>
</kw>
<msg timestamp="20231129 08:37:27.512" level="INFO">${checksumafter} = 804f368834f04e8d39a8a7c76ba870e3</msg>
<status status="PASS" starttime="20231129 08:37:27.506" endtime="20231129 08:37:27.512"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231129 08:37:27.513" endtime="20231129 08:37:27.513"/>
</kw>
<status status="PASS" starttime="20231129 08:37:27.499" endtime="20231129 08:37:27.513"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:37:20.592" endtime="20231129 08:37:27.513"/>
</test>
<test id="s1-s1-s8-t6" name="Test abort Multipart upload" line="198">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231129 08:37:27.515" level="INFO">${randStr} = 8654674577</msg>
<status status="PASS" starttime="20231129 08:37:27.515" endtime="20231129 08:37:27.515"/>
</kw>
<msg timestamp="20231129 08:37:27.515" level="INFO">${random} = ozone-test-8654674577</msg>
<status status="PASS" starttime="20231129 08:37:27.515" endtime="20231129 08:37:27.515"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231129 08:37:27.516" level="INFO">${PREFIX} = ozone-test-8654674577</msg>
<status status="PASS" starttime="20231129 08:37:27.516" endtime="20231129 08:37:27.516"/>
</kw>
<status status="PASS" starttime="20231129 08:37:27.514" endtime="20231129 08:37:27.516"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey4 --storage-class REDUCED_REDUNDANCY</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:27.519" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket erasure --key ozone-test-8654674577/multipartKey4 --storage-class REDUCED_REDUNDANCY 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:27.984" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:27.984" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-8654674577/multipartKey4",
    "UploadId": "43cf1be5-9c05-47c6-8e14-394b8a56906e-111492926533206050"
}</msg>
<status status="PASS" starttime="20231129 08:37:27.518" endtime="20231129 08:37:27.984"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:27.985" level="INFO">{
    "Bucket": "erasure",
    "Key": "ozone-test-8654674577/multipartKey4",
    "UploadId": "43cf1be5-9c05-47c6-8e14-394b8a56906e-111492926533206050"
}</msg>
<status status="PASS" starttime="20231129 08:37:27.984" endtime="20231129 08:37:27.985"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:27.986" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:27.985" endtime="20231129 08:37:27.986"/>
</kw>
<status status="PASS" starttime="20231129 08:37:27.517" endtime="20231129 08:37:27.986"/>
</kw>
<msg timestamp="20231129 08:37:27.986" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:27.517" endtime="20231129 08:37:27.986"/>
</kw>
<msg timestamp="20231129 08:37:27.986" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-8654674577/multipartKey4",
    "UploadId": "43cf1be5-9c05-47c6-8e14-394b8a56906e-111492926533206050"
}</msg>
<status status="PASS" starttime="20231129 08:37:27.517" endtime="20231129 08:37:27.986"/>
</kw>
<msg timestamp="20231129 08:37:27.986" level="INFO">${result} = {
    "Bucket": "erasure",
    "Key": "ozone-test-8654674577/multipartKey4",
    "UploadId": "43cf1be5-9c05-47c6-8e14-394b8a56906e-111492926533206050"
}</msg>
<status status="PASS" starttime="20231129 08:37:27.516" endtime="20231129 08:37:27.986"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:27.988" level="INFO">Running command 'echo '{
    "Bucket": "erasure",
    "Key": "ozone-test-8654674577/multipartKey4",
    "UploadId": "43cf1be5-9c05-47c6-8e14-394b8a56906e-111492926533206050"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:28.014" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:28.014" level="INFO">${output} = 43cf1be5-9c05-47c6-8e14-394b8a56906e-111492926533206050</msg>
<status status="PASS" starttime="20231129 08:37:27.987" endtime="20231129 08:37:28.014"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:28.015" level="INFO">43cf1be5-9c05-47c6-8e14-394b8a56906e-111492926533206050</msg>
<status status="PASS" starttime="20231129 08:37:28.014" endtime="20231129 08:37:28.015"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:28.015" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:28.015" endtime="20231129 08:37:28.015"/>
</kw>
<msg timestamp="20231129 08:37:28.016" level="INFO">${uploadID} = 43cf1be5-9c05-47c6-8e14-394b8a56906e-111492926533206050</msg>
<status status="PASS" starttime="20231129 08:37:27.986" endtime="20231129 08:37:28.016"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:37:28.016" endtime="20231129 08:37:28.016"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:37:28.016" endtime="20231129 08:37:28.017"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:37:28.017" endtime="20231129 08:37:28.017"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey4 --upload-id ${uploadID}</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:28.020" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket erasure --key ozone-test-8654674577/multipartKey4 --upload-id 43cf1be5-9c05-47c6-8e14-394b8a56906e-111492926533206050 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:28.459" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:28.459" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:37:28.018" endtime="20231129 08:37:28.459"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:28.460" level="INFO"/>
<status status="PASS" starttime="20231129 08:37:28.459" endtime="20231129 08:37:28.460"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:28.460" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:28.460" endtime="20231129 08:37:28.460"/>
</kw>
<msg timestamp="20231129 08:37:28.461" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:37:28.018" endtime="20231129 08:37:28.461"/>
</kw>
<msg timestamp="20231129 08:37:28.461" level="INFO">${result} = </msg>
<status status="PASS" starttime="20231129 08:37:28.017" endtime="20231129 08:37:28.461"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:37:27.514" endtime="20231129 08:37:28.461"/>
</test>
<test id="s1-s1-s8-t7" name="Test abort Multipart upload with invalid uploadId" line="207">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231129 08:37:28.463" level="INFO">${randStr} = 9347409294</msg>
<status status="PASS" starttime="20231129 08:37:28.463" endtime="20231129 08:37:28.463"/>
</kw>
<msg timestamp="20231129 08:37:28.463" level="INFO">${random} = ozone-test-9347409294</msg>
<status status="PASS" starttime="20231129 08:37:28.463" endtime="20231129 08:37:28.463"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231129 08:37:28.464" level="INFO">${PREFIX} = ozone-test-9347409294</msg>
<status status="PASS" starttime="20231129 08:37:28.464" endtime="20231129 08:37:28.464"/>
</kw>
<status status="PASS" starttime="20231129 08:37:28.462" endtime="20231129 08:37:28.464"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id "random"</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:28.467" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket erasure --key ozone-test-9347409294/multipartKey5 --upload-id "random" 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:28.908" level="INFO">${rc} = 255</msg>
<msg timestamp="20231129 08:37:28.908" level="INFO">${output} = 
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have bee...</msg>
<status status="PASS" starttime="20231129 08:37:28.465" endtime="20231129 08:37:28.908"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:28.909" level="INFO">
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted or completed.</msg>
<status status="PASS" starttime="20231129 08:37:28.908" endtime="20231129 08:37:28.909"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:28.909" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:28.909" endtime="20231129 08:37:28.909"/>
</kw>
<msg timestamp="20231129 08:37:28.909" level="INFO">${output} = 
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have bee...</msg>
<status status="PASS" starttime="20231129 08:37:28.465" endtime="20231129 08:37:28.909"/>
</kw>
<msg timestamp="20231129 08:37:28.910" level="INFO">${result} = 
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have bee...</msg>
<status status="PASS" starttime="20231129 08:37:28.464" endtime="20231129 08:37:28.910"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:37:28.462" endtime="20231129 08:37:28.910"/>
</test>
<test id="s1-s1-s8-t8" name="Upload part with Incorrect uploadID" line="210">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231129 08:37:28.912" level="INFO">${randStr} = 2254751542</msg>
<status status="PASS" starttime="20231129 08:37:28.912" endtime="20231129 08:37:28.912"/>
</kw>
<msg timestamp="20231129 08:37:28.912" level="INFO">${random} = ozone-test-2254751542</msg>
<status status="PASS" starttime="20231129 08:37:28.911" endtime="20231129 08:37:28.912"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231129 08:37:28.913" level="INFO">${PREFIX} = ozone-test-2254751542</msg>
<status status="PASS" starttime="20231129 08:37:28.912" endtime="20231129 08:37:28.913"/>
</kw>
<status status="PASS" starttime="20231129 08:37:28.911" endtime="20231129 08:37:28.913"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:28.916" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket erasure --key ozone-test-2254751542/multipartKey 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:29.498" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:29.498" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-2254751542/multipartKey",
    "UploadId": "72d06021-c5dd-4a59-8b89-57a5ba9026dc-111492926633148451"
}</msg>
<status status="PASS" starttime="20231129 08:37:28.914" endtime="20231129 08:37:29.498"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:29.499" level="INFO">{
    "Bucket": "erasure",
    "Key": "ozone-test-2254751542/multipartKey",
    "UploadId": "72d06021-c5dd-4a59-8b89-57a5ba9026dc-111492926633148451"
}</msg>
<status status="PASS" starttime="20231129 08:37:29.498" endtime="20231129 08:37:29.499"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:29.499" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:29.499" endtime="20231129 08:37:29.500"/>
</kw>
<status status="PASS" starttime="20231129 08:37:28.914" endtime="20231129 08:37:29.500"/>
</kw>
<msg timestamp="20231129 08:37:29.500" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:28.914" endtime="20231129 08:37:29.500"/>
</kw>
<msg timestamp="20231129 08:37:29.500" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-2254751542/multipartKey",
    "UploadId": "72d06021-c5dd-4a59-8b89-57a5ba9026dc-111492926633148451"
}</msg>
<status status="PASS" starttime="20231129 08:37:28.913" endtime="20231129 08:37:29.500"/>
</kw>
<msg timestamp="20231129 08:37:29.500" level="INFO">${result} = {
    "Bucket": "erasure",
    "Key": "ozone-test-2254751542/multipartKey",
    "UploadId": "72d06021-c5dd-4a59-8b89-57a5ba9026dc-111492926633148451"
}</msg>
<status status="PASS" starttime="20231129 08:37:28.913" endtime="20231129 08:37:29.500"/>
</kw>
<kw name="Execute" library="os">
<arg>echo "Multipart upload" &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:29.503" level="INFO">Running command 'echo "Multipart upload" &gt; /tmp/testfile'.</msg>
<msg timestamp="20231129 08:37:29.504" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:29.505" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:37:29.502" endtime="20231129 08:37:29.505"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:29.505" level="INFO"/>
<status status="PASS" starttime="20231129 08:37:29.505" endtime="20231129 08:37:29.505"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:29.506" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:29.505" endtime="20231129 08:37:29.506"/>
</kw>
<status status="PASS" starttime="20231129 08:37:29.501" endtime="20231129 08:37:29.506"/>
</kw>
<msg timestamp="20231129 08:37:29.506" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:29.501" endtime="20231129 08:37:29.506"/>
</kw>
<status status="PASS" starttime="20231129 08:37:29.501" endtime="20231129 08:37:29.507"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey --part-number 1 --body /tmp/testfile --upload-id "random"</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:29.509" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket erasure --key ozone-test-2254751542/multipartKey --part-number 1 --body /tmp/testfile --upload-id "random" 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:29.959" level="INFO">${rc} = 255</msg>
<msg timestamp="20231129 08:37:29.959" level="INFO">${output} = 
An error occurred (NoSuchUpload) when calling the UploadPart operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted ...</msg>
<status status="PASS" starttime="20231129 08:37:29.508" endtime="20231129 08:37:29.959"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:29.960" level="INFO">
An error occurred (NoSuchUpload) when calling the UploadPart operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted or completed.</msg>
<status status="PASS" starttime="20231129 08:37:29.959" endtime="20231129 08:37:29.960"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:29.960" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:29.960" endtime="20231129 08:37:29.960"/>
</kw>
<msg timestamp="20231129 08:37:29.961" level="INFO">${output} = 
An error occurred (NoSuchUpload) when calling the UploadPart operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted ...</msg>
<status status="PASS" starttime="20231129 08:37:29.507" endtime="20231129 08:37:29.961"/>
</kw>
<msg timestamp="20231129 08:37:29.961" level="INFO">${result} = 
An error occurred (NoSuchUpload) when calling the UploadPart operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted ...</msg>
<status status="PASS" starttime="20231129 08:37:29.507" endtime="20231129 08:37:29.961"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchUpload</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:37:29.961" endtime="20231129 08:37:29.961"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:37:28.910" endtime="20231129 08:37:29.961"/>
</test>
<test id="s1-s1-s8-t9" name="Test list parts" line="216">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231129 08:37:29.963" level="INFO">${randStr} = 8189562815</msg>
<status status="PASS" starttime="20231129 08:37:29.963" endtime="20231129 08:37:29.963"/>
</kw>
<msg timestamp="20231129 08:37:29.964" level="INFO">${random} = ozone-test-8189562815</msg>
<status status="PASS" starttime="20231129 08:37:29.963" endtime="20231129 08:37:29.964"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231129 08:37:29.964" level="INFO">${PREFIX} = ozone-test-8189562815</msg>
<status status="PASS" starttime="20231129 08:37:29.964" endtime="20231129 08:37:29.964"/>
</kw>
<status status="PASS" starttime="20231129 08:37:29.962" endtime="20231129 08:37:29.964"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey5</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:29.980" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket erasure --key ozone-test-8189562815/multipartKey5 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:30.433" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:30.433" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-8189562815/multipartKey5",
    "UploadId": "2cb37948-5cbc-4fab-92e0-bcbbef921368-111492926693834789"
}</msg>
<status status="PASS" starttime="20231129 08:37:29.966" endtime="20231129 08:37:30.433"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:30.434" level="INFO">{
    "Bucket": "erasure",
    "Key": "ozone-test-8189562815/multipartKey5",
    "UploadId": "2cb37948-5cbc-4fab-92e0-bcbbef921368-111492926693834789"
}</msg>
<status status="PASS" starttime="20231129 08:37:30.433" endtime="20231129 08:37:30.434"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:30.434" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:30.434" endtime="20231129 08:37:30.435"/>
</kw>
<status status="PASS" starttime="20231129 08:37:29.966" endtime="20231129 08:37:30.435"/>
</kw>
<msg timestamp="20231129 08:37:30.435" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:29.965" endtime="20231129 08:37:30.435"/>
</kw>
<msg timestamp="20231129 08:37:30.435" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-8189562815/multipartKey5",
    "UploadId": "2cb37948-5cbc-4fab-92e0-bcbbef921368-111492926693834789"
}</msg>
<status status="PASS" starttime="20231129 08:37:29.965" endtime="20231129 08:37:30.435"/>
</kw>
<msg timestamp="20231129 08:37:30.435" level="INFO">${result} = {
    "Bucket": "erasure",
    "Key": "ozone-test-8189562815/multipartKey5",
    "UploadId": "2cb37948-5cbc-4fab-92e0-bcbbef921368-111492926693834789"
}</msg>
<status status="PASS" starttime="20231129 08:37:29.964" endtime="20231129 08:37:30.435"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:30.437" level="INFO">Running command 'echo '{
    "Bucket": "erasure",
    "Key": "ozone-test-8189562815/multipartKey5",
    "UploadId": "2cb37948-5cbc-4fab-92e0-bcbbef921368-111492926693834789"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:30.464" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:30.464" level="INFO">${output} = 2cb37948-5cbc-4fab-92e0-bcbbef921368-111492926693834789</msg>
<status status="PASS" starttime="20231129 08:37:30.436" endtime="20231129 08:37:30.464"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:30.465" level="INFO">2cb37948-5cbc-4fab-92e0-bcbbef921368-111492926693834789</msg>
<status status="PASS" starttime="20231129 08:37:30.464" endtime="20231129 08:37:30.465"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:30.465" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:30.465" endtime="20231129 08:37:30.465"/>
</kw>
<msg timestamp="20231129 08:37:30.465" level="INFO">${uploadID} = 2cb37948-5cbc-4fab-92e0-bcbbef921368-111492926693834789</msg>
<status status="PASS" starttime="20231129 08:37:30.435" endtime="20231129 08:37:30.465"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:37:30.466" endtime="20231129 08:37:30.466"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:37:30.466" endtime="20231129 08:37:30.466"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:37:30.467" endtime="20231129 08:37:30.467"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>5</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>5</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:30.471" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:30.489" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:30.489" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:37:30.469" endtime="20231129 08:37:30.489"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:30.490" level="INFO"/>
<status status="PASS" starttime="20231129 08:37:30.490" endtime="20231129 08:37:30.490"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:30.490" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:30.490" endtime="20231129 08:37:30.491"/>
</kw>
<status status="PASS" starttime="20231129 08:37:30.468" endtime="20231129 08:37:30.491"/>
</kw>
<msg timestamp="20231129 08:37:30.491" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:30.468" endtime="20231129 08:37:30.491"/>
</kw>
<status status="PASS" starttime="20231129 08:37:30.468" endtime="20231129 08:37:30.491"/>
</kw>
<status status="PASS" starttime="20231129 08:37:30.467" endtime="20231129 08:37:30.491"/>
</kw>
<status status="PASS" starttime="20231129 08:37:30.467" endtime="20231129 08:37:30.491"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --part-number 1 --body /tmp/part1 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:30.494" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket erasure --key ozone-test-8189562815/multipartKey5 --part-number 1 --body /tmp/part1 --upload-id 2cb37948-5cbc-4fab-92e0-bcbbef921368-111492926693834789 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:31.175" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:31.175" level="INFO">${output} = {
    "ETag": "/s3v/erasure/ozone-test-8189562815/multipartKey5-2cb37948-5cbc-4fab-92e0-bcbbef921368-111492926693834789-1"
}</msg>
<status status="PASS" starttime="20231129 08:37:30.493" endtime="20231129 08:37:31.175"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:31.176" level="INFO">{
    "ETag": "/s3v/erasure/ozone-test-8189562815/multipartKey5-2cb37948-5cbc-4fab-92e0-bcbbef921368-111492926693834789-1"
}</msg>
<status status="PASS" starttime="20231129 08:37:31.176" endtime="20231129 08:37:31.176"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:31.177" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:31.176" endtime="20231129 08:37:31.177"/>
</kw>
<status status="PASS" starttime="20231129 08:37:30.492" endtime="20231129 08:37:31.177"/>
</kw>
<msg timestamp="20231129 08:37:31.177" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:30.492" endtime="20231129 08:37:31.177"/>
</kw>
<msg timestamp="20231129 08:37:31.177" level="INFO">${output} = {
    "ETag": "/s3v/erasure/ozone-test-8189562815/multipartKey5-2cb37948-5cbc-4fab-92e0-bcbbef921368-111492926693834789-1"
}</msg>
<status status="PASS" starttime="20231129 08:37:30.492" endtime="20231129 08:37:31.177"/>
</kw>
<msg timestamp="20231129 08:37:31.178" level="INFO">${result} = {
    "ETag": "/s3v/erasure/ozone-test-8189562815/multipartKey5-2cb37948-5cbc-4fab-92e0-bcbbef921368-111492926693834789-1"
}</msg>
<status status="PASS" starttime="20231129 08:37:30.491" endtime="20231129 08:37:31.178"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:31.180" level="INFO">Running command 'echo '{
    "ETag": "/s3v/erasure/ozone-test-8189562815/multipartKey5-2cb37948-5cbc-4fab-92e0-bcbbef921368-111492926693834789-1"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:31.206" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:31.206" level="INFO">${output} = /s3v/erasure/ozone-test-8189562815/multipartKey5-2cb37948-5cbc-4fab-92e0-bcbbef921368-111492926693834789-1</msg>
<status status="PASS" starttime="20231129 08:37:31.178" endtime="20231129 08:37:31.206"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:31.207" level="INFO">/s3v/erasure/ozone-test-8189562815/multipartKey5-2cb37948-5cbc-4fab-92e0-bcbbef921368-111492926693834789-1</msg>
<status status="PASS" starttime="20231129 08:37:31.206" endtime="20231129 08:37:31.207"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:31.207" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:31.207" endtime="20231129 08:37:31.207"/>
</kw>
<msg timestamp="20231129 08:37:31.207" level="INFO">${eTag1} = /s3v/erasure/ozone-test-8189562815/multipartKey5-2cb37948-5cbc-4fab-92e0-bcbbef921368-111492926693834789-1</msg>
<status status="PASS" starttime="20231129 08:37:31.178" endtime="20231129 08:37:31.207"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:37:31.208" endtime="20231129 08:37:31.208"/>
</kw>
<kw name="Execute" library="os">
<arg>echo "Part2" &gt; /tmp/part2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:31.210" level="INFO">Running command 'echo "Part2" &gt; /tmp/part2'.</msg>
<msg timestamp="20231129 08:37:31.211" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:31.212" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:37:31.209" endtime="20231129 08:37:31.212"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:31.212" level="INFO"/>
<status status="PASS" starttime="20231129 08:37:31.212" endtime="20231129 08:37:31.212"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:31.213" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:31.212" endtime="20231129 08:37:31.213"/>
</kw>
<status status="PASS" starttime="20231129 08:37:31.209" endtime="20231129 08:37:31.213"/>
</kw>
<msg timestamp="20231129 08:37:31.213" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:31.208" endtime="20231129 08:37:31.213"/>
</kw>
<status status="PASS" starttime="20231129 08:37:31.208" endtime="20231129 08:37:31.213"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --part-number 2 --body /tmp/part2 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:31.216" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket erasure --key ozone-test-8189562815/multipartKey5 --part-number 2 --body /tmp/part2 --upload-id 2cb37948-5cbc-4fab-92e0-bcbbef921368-111492926693834789 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:31.710" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:31.710" level="INFO">${output} = {
    "ETag": "/s3v/erasure/ozone-test-8189562815/multipartKey5-2cb37948-5cbc-4fab-92e0-bcbbef921368-111492926693834789-2"
}</msg>
<status status="PASS" starttime="20231129 08:37:31.215" endtime="20231129 08:37:31.710"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:31.711" level="INFO">{
    "ETag": "/s3v/erasure/ozone-test-8189562815/multipartKey5-2cb37948-5cbc-4fab-92e0-bcbbef921368-111492926693834789-2"
}</msg>
<status status="PASS" starttime="20231129 08:37:31.710" endtime="20231129 08:37:31.711"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:31.711" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:31.711" endtime="20231129 08:37:31.712"/>
</kw>
<status status="PASS" starttime="20231129 08:37:31.215" endtime="20231129 08:37:31.712"/>
</kw>
<msg timestamp="20231129 08:37:31.712" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:31.214" endtime="20231129 08:37:31.712"/>
</kw>
<msg timestamp="20231129 08:37:31.712" level="INFO">${output} = {
    "ETag": "/s3v/erasure/ozone-test-8189562815/multipartKey5-2cb37948-5cbc-4fab-92e0-bcbbef921368-111492926693834789-2"
}</msg>
<status status="PASS" starttime="20231129 08:37:31.214" endtime="20231129 08:37:31.712"/>
</kw>
<msg timestamp="20231129 08:37:31.712" level="INFO">${result} = {
    "ETag": "/s3v/erasure/ozone-test-8189562815/multipartKey5-2cb37948-5cbc-4fab-92e0-bcbbef921368-111492926693834789-2"
}</msg>
<status status="PASS" starttime="20231129 08:37:31.213" endtime="20231129 08:37:31.712"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:31.715" level="INFO">Running command 'echo '{
    "ETag": "/s3v/erasure/ozone-test-8189562815/multipartKey5-2cb37948-5cbc-4fab-92e0-bcbbef921368-111492926693834789-2"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:31.740" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:31.741" level="INFO">${output} = /s3v/erasure/ozone-test-8189562815/multipartKey5-2cb37948-5cbc-4fab-92e0-bcbbef921368-111492926693834789-2</msg>
<status status="PASS" starttime="20231129 08:37:31.713" endtime="20231129 08:37:31.741"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:31.741" level="INFO">/s3v/erasure/ozone-test-8189562815/multipartKey5-2cb37948-5cbc-4fab-92e0-bcbbef921368-111492926693834789-2</msg>
<status status="PASS" starttime="20231129 08:37:31.741" endtime="20231129 08:37:31.741"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:31.742" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:31.742" endtime="20231129 08:37:31.742"/>
</kw>
<msg timestamp="20231129 08:37:31.742" level="INFO">${eTag2} = /s3v/erasure/ozone-test-8189562815/multipartKey5-2cb37948-5cbc-4fab-92e0-bcbbef921368-111492926693834789-2</msg>
<status status="PASS" starttime="20231129 08:37:31.712" endtime="20231129 08:37:31.742"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:37:31.742" endtime="20231129 08:37:31.743"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-parts --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:31.746" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-parts --bucket erasure --key ozone-test-8189562815/multipartKey5 --upload-id 2cb37948-5cbc-4fab-92e0-bcbbef921368-111492926693834789 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:32.221" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:32.221" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2023-11-29T08:37:31.133Z",
            "ETag": "/s3v/erasure/ozone-test-8189562815/multipartKey5-2cb37948-5cbc-4fab...</msg>
<status status="PASS" starttime="20231129 08:37:31.744" endtime="20231129 08:37:32.221"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:32.222" level="INFO">{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2023-11-29T08:37:31.133Z",
            "ETag": "/s3v/erasure/ozone-test-8189562815/multipartKey5-2cb37948-5cbc-4fab-92e0-bcbbef921368-111492926693834789-1",
            "Size": 5242880
        },
        {
            "PartNumber": 2,
            "LastModified": "2023-11-29T08:37:31.666Z",
            "ETag": "/s3v/erasure/ozone-test-8189562815/multipartKey5-2cb37948-5cbc-4fab-92e0-bcbbef921368-111492926693834789-2",
            "Size": 6
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD"
}</msg>
<status status="PASS" starttime="20231129 08:37:32.221" endtime="20231129 08:37:32.222"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:32.223" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:32.222" endtime="20231129 08:37:32.223"/>
</kw>
<status status="PASS" starttime="20231129 08:37:31.744" endtime="20231129 08:37:32.223"/>
</kw>
<msg timestamp="20231129 08:37:32.223" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:31.744" endtime="20231129 08:37:32.223"/>
</kw>
<msg timestamp="20231129 08:37:32.223" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2023-11-29T08:37:31.133Z",
            "ETag": "/s3v/erasure/ozone-test-8189562815/multipartKey5-2cb37948-5cbc-4fab...</msg>
<status status="PASS" starttime="20231129 08:37:31.743" endtime="20231129 08:37:32.223"/>
</kw>
<msg timestamp="20231129 08:37:32.223" level="INFO">${result} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2023-11-29T08:37:31.133Z",
            "ETag": "/s3v/erasure/ozone-test-8189562815/multipartKey5-2cb37948-5cbc-4fab...</msg>
<status status="PASS" starttime="20231129 08:37:31.743" endtime="20231129 08:37:32.223"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${part1}</var>
<arg>echo '${result}' | jq -r '.Parts[0].ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:32.226" level="INFO">Running command 'echo '{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2023-11-29T08:37:31.133Z",
            "ETag": "/s3v/erasure/ozone-test-8189562815/multipartKey5-2cb37948-5cbc-4fab-92e0-bcbbef921368-111492926693834789-1",
            "Size": 5242880
        },
        {
            "PartNumber": 2,
            "LastModified": "2023-11-29T08:37:31.666Z",
            "ETag": "/s3v/erasure/ozone-test-8189562815/multipartKey5-2cb37948-5cbc-4fab-92e0-bcbbef921368-111492926693834789-2",
            "Size": 6
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD"
}' | jq -r '.Parts[0].ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:32.252" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:32.252" level="INFO">${output} = /s3v/erasure/ozone-test-8189562815/multipartKey5-2cb37948-5cbc-4fab-92e0-bcbbef921368-111492926693834789-1</msg>
<status status="PASS" starttime="20231129 08:37:32.224" endtime="20231129 08:37:32.252"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:32.253" level="INFO">/s3v/erasure/ozone-test-8189562815/multipartKey5-2cb37948-5cbc-4fab-92e0-bcbbef921368-111492926693834789-1</msg>
<status status="PASS" starttime="20231129 08:37:32.252" endtime="20231129 08:37:32.253"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:32.253" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:32.253" endtime="20231129 08:37:32.254"/>
</kw>
<msg timestamp="20231129 08:37:32.254" level="INFO">${part1} = /s3v/erasure/ozone-test-8189562815/multipartKey5-2cb37948-5cbc-4fab-92e0-bcbbef921368-111492926693834789-1</msg>
<status status="PASS" starttime="20231129 08:37:32.223" endtime="20231129 08:37:32.254"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${part2}</var>
<arg>echo '${result}' | jq -r '.Parts[1].ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:32.256" level="INFO">Running command 'echo '{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2023-11-29T08:37:31.133Z",
            "ETag": "/s3v/erasure/ozone-test-8189562815/multipartKey5-2cb37948-5cbc-4fab-92e0-bcbbef921368-111492926693834789-1",
            "Size": 5242880
        },
        {
            "PartNumber": 2,
            "LastModified": "2023-11-29T08:37:31.666Z",
            "ETag": "/s3v/erasure/ozone-test-8189562815/multipartKey5-2cb37948-5cbc-4fab-92e0-bcbbef921368-111492926693834789-2",
            "Size": 6
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD"
}' | jq -r '.Parts[1].ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:32.282" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:32.282" level="INFO">${output} = /s3v/erasure/ozone-test-8189562815/multipartKey5-2cb37948-5cbc-4fab-92e0-bcbbef921368-111492926693834789-2</msg>
<status status="PASS" starttime="20231129 08:37:32.254" endtime="20231129 08:37:32.282"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:32.282" level="INFO">/s3v/erasure/ozone-test-8189562815/multipartKey5-2cb37948-5cbc-4fab-92e0-bcbbef921368-111492926693834789-2</msg>
<status status="PASS" starttime="20231129 08:37:32.282" endtime="20231129 08:37:32.282"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:32.283" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:32.283" endtime="20231129 08:37:32.283"/>
</kw>
<msg timestamp="20231129 08:37:32.283" level="INFO">${part2} = /s3v/erasure/ozone-test-8189562815/multipartKey5-2cb37948-5cbc-4fab-92e0-bcbbef921368-111492926693834789-2</msg>
<status status="PASS" starttime="20231129 08:37:32.254" endtime="20231129 08:37:32.283"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${part1}</arg>
<arg>${eTag1}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231129 08:37:32.283" endtime="20231129 08:37:32.284"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${part2}</arg>
<arg>${eTag2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:37:32.284" endtime="20231129 08:37:32.284"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:37:32.284" endtime="20231129 08:37:32.285"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-parts --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id ${uploadID} --max-items 1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:32.288" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-parts --bucket erasure --key ozone-test-8189562815/multipartKey5 --upload-id 2cb37948-5cbc-4fab-92e0-bcbbef921368-111492926693834789 --max-items 1 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:32.738" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:32.738" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2023-11-29T08:37:31.133Z",
            "ETag": "/s3v/erasure/ozone-test-8189562815/multipartKey5-2cb37948-5cbc-4fab...</msg>
<status status="PASS" starttime="20231129 08:37:32.286" endtime="20231129 08:37:32.738"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:32.739" level="INFO">{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2023-11-29T08:37:31.133Z",
            "ETag": "/s3v/erasure/ozone-test-8189562815/multipartKey5-2cb37948-5cbc-4fab-92e0-bcbbef921368-111492926693834789-1",
            "Size": 5242880
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD",
    "NextToken": "eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0="
}</msg>
<status status="PASS" starttime="20231129 08:37:32.738" endtime="20231129 08:37:32.739"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:32.739" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:32.739" endtime="20231129 08:37:32.740"/>
</kw>
<status status="PASS" starttime="20231129 08:37:32.286" endtime="20231129 08:37:32.740"/>
</kw>
<msg timestamp="20231129 08:37:32.740" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:32.286" endtime="20231129 08:37:32.740"/>
</kw>
<msg timestamp="20231129 08:37:32.740" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2023-11-29T08:37:31.133Z",
            "ETag": "/s3v/erasure/ozone-test-8189562815/multipartKey5-2cb37948-5cbc-4fab...</msg>
<status status="PASS" starttime="20231129 08:37:32.285" endtime="20231129 08:37:32.740"/>
</kw>
<msg timestamp="20231129 08:37:32.740" level="INFO">${result} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2023-11-29T08:37:31.133Z",
            "ETag": "/s3v/erasure/ozone-test-8189562815/multipartKey5-2cb37948-5cbc-4fab...</msg>
<status status="PASS" starttime="20231129 08:37:32.285" endtime="20231129 08:37:32.740"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${part1}</var>
<arg>echo '${result}' | jq -r '.Parts[0].ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:32.742" level="INFO">Running command 'echo '{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2023-11-29T08:37:31.133Z",
            "ETag": "/s3v/erasure/ozone-test-8189562815/multipartKey5-2cb37948-5cbc-4fab-92e0-bcbbef921368-111492926693834789-1",
            "Size": 5242880
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD",
    "NextToken": "eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0="
}' | jq -r '.Parts[0].ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:32.768" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:32.768" level="INFO">${output} = /s3v/erasure/ozone-test-8189562815/multipartKey5-2cb37948-5cbc-4fab-92e0-bcbbef921368-111492926693834789-1</msg>
<status status="PASS" starttime="20231129 08:37:32.741" endtime="20231129 08:37:32.768"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:32.769" level="INFO">/s3v/erasure/ozone-test-8189562815/multipartKey5-2cb37948-5cbc-4fab-92e0-bcbbef921368-111492926693834789-1</msg>
<status status="PASS" starttime="20231129 08:37:32.769" endtime="20231129 08:37:32.769"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:32.770" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:32.769" endtime="20231129 08:37:32.770"/>
</kw>
<msg timestamp="20231129 08:37:32.770" level="INFO">${part1} = /s3v/erasure/ozone-test-8189562815/multipartKey5-2cb37948-5cbc-4fab-92e0-bcbbef921368-111492926693834789-1</msg>
<status status="PASS" starttime="20231129 08:37:32.740" endtime="20231129 08:37:32.770"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${token}</var>
<arg>echo '${result}' | jq -r '.NextToken'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:32.772" level="INFO">Running command 'echo '{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2023-11-29T08:37:31.133Z",
            "ETag": "/s3v/erasure/ozone-test-8189562815/multipartKey5-2cb37948-5cbc-4fab-92e0-bcbbef921368-111492926693834789-1",
            "Size": 5242880
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD",
    "NextToken": "eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0="
}' | jq -r '.NextToken' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:32.798" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:32.798" level="INFO">${output} = eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0=</msg>
<status status="PASS" starttime="20231129 08:37:32.771" endtime="20231129 08:37:32.798"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:32.799" level="INFO">eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0=</msg>
<status status="PASS" starttime="20231129 08:37:32.799" endtime="20231129 08:37:32.799"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:32.800" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:32.799" endtime="20231129 08:37:32.800"/>
</kw>
<msg timestamp="20231129 08:37:32.800" level="INFO">${token} = eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0=</msg>
<status status="PASS" starttime="20231129 08:37:32.770" endtime="20231129 08:37:32.800"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${part1}</arg>
<arg>${eTag1}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231129 08:37:32.800" endtime="20231129 08:37:32.800"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:37:32.801" endtime="20231129 08:37:32.801"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-parts --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id ${uploadID} --max-items 1 --starting-token ${token}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:32.804" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-parts --bucket erasure --key ozone-test-8189562815/multipartKey5 --upload-id 2cb37948-5cbc-4fab-92e0-bcbbef921368-111492926693834789 --max-items 1 --starting-token eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0= 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:33.252" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:33.252" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 2,
            "LastModified": "2023-11-29T08:37:31.666Z",
            "ETag": "/s3v/erasure/ozone-test-8189562815/multipartKey5-2cb37948-5cbc-4fab...</msg>
<status status="PASS" starttime="20231129 08:37:32.803" endtime="20231129 08:37:33.252"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:33.253" level="INFO">{
    "Parts": [
        {
            "PartNumber": 2,
            "LastModified": "2023-11-29T08:37:31.666Z",
            "ETag": "/s3v/erasure/ozone-test-8189562815/multipartKey5-2cb37948-5cbc-4fab-92e0-bcbbef921368-111492926693834789-2",
            "Size": 6
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD"
}</msg>
<status status="PASS" starttime="20231129 08:37:33.253" endtime="20231129 08:37:33.253"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:33.254" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:33.254" endtime="20231129 08:37:33.254"/>
</kw>
<status status="PASS" starttime="20231129 08:37:32.802" endtime="20231129 08:37:33.254"/>
</kw>
<msg timestamp="20231129 08:37:33.254" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:32.802" endtime="20231129 08:37:33.254"/>
</kw>
<msg timestamp="20231129 08:37:33.254" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 2,
            "LastModified": "2023-11-29T08:37:31.666Z",
            "ETag": "/s3v/erasure/ozone-test-8189562815/multipartKey5-2cb37948-5cbc-4fab...</msg>
<status status="PASS" starttime="20231129 08:37:32.801" endtime="20231129 08:37:33.254"/>
</kw>
<msg timestamp="20231129 08:37:33.255" level="INFO">${result} = {
    "Parts": [
        {
            "PartNumber": 2,
            "LastModified": "2023-11-29T08:37:31.666Z",
            "ETag": "/s3v/erasure/ozone-test-8189562815/multipartKey5-2cb37948-5cbc-4fab...</msg>
<status status="PASS" starttime="20231129 08:37:32.801" endtime="20231129 08:37:33.255"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${part2}</var>
<arg>echo '${result}' | jq -r '.Parts[0].ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:33.257" level="INFO">Running command 'echo '{
    "Parts": [
        {
            "PartNumber": 2,
            "LastModified": "2023-11-29T08:37:31.666Z",
            "ETag": "/s3v/erasure/ozone-test-8189562815/multipartKey5-2cb37948-5cbc-4fab-92e0-bcbbef921368-111492926693834789-2",
            "Size": 6
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD"
}' | jq -r '.Parts[0].ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:33.283" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:33.283" level="INFO">${output} = /s3v/erasure/ozone-test-8189562815/multipartKey5-2cb37948-5cbc-4fab-92e0-bcbbef921368-111492926693834789-2</msg>
<status status="PASS" starttime="20231129 08:37:33.255" endtime="20231129 08:37:33.283"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:33.283" level="INFO">/s3v/erasure/ozone-test-8189562815/multipartKey5-2cb37948-5cbc-4fab-92e0-bcbbef921368-111492926693834789-2</msg>
<status status="PASS" starttime="20231129 08:37:33.283" endtime="20231129 08:37:33.283"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:33.284" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:33.283" endtime="20231129 08:37:33.284"/>
</kw>
<msg timestamp="20231129 08:37:33.284" level="INFO">${part2} = /s3v/erasure/ozone-test-8189562815/multipartKey5-2cb37948-5cbc-4fab-92e0-bcbbef921368-111492926693834789-2</msg>
<status status="PASS" starttime="20231129 08:37:33.255" endtime="20231129 08:37:33.284"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${part2}</arg>
<arg>${eTag2}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231129 08:37:33.284" endtime="20231129 08:37:33.289"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:37:33.289" endtime="20231129 08:37:33.290"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id ${uploadID}</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:33.298" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket erasure --key ozone-test-8189562815/multipartKey5 --upload-id 2cb37948-5cbc-4fab-92e0-bcbbef921368-111492926693834789 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:33.769" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:33.769" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:37:33.293" endtime="20231129 08:37:33.769"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:33.770" level="INFO"/>
<status status="PASS" starttime="20231129 08:37:33.770" endtime="20231129 08:37:33.770"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:33.771" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:33.770" endtime="20231129 08:37:33.771"/>
</kw>
<msg timestamp="20231129 08:37:33.771" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:37:33.292" endtime="20231129 08:37:33.771"/>
</kw>
<msg timestamp="20231129 08:37:33.771" level="INFO">${result} = </msg>
<status status="PASS" starttime="20231129 08:37:33.290" endtime="20231129 08:37:33.771"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:37:29.962" endtime="20231129 08:37:33.771"/>
</test>
<test id="s1-s1-s8-t10" name="Test Multipart Upload with the simplified aws s3 cp API" line="258">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231129 08:37:33.774" level="INFO">${randStr} = 3508783823</msg>
<status status="PASS" starttime="20231129 08:37:33.773" endtime="20231129 08:37:33.774"/>
</kw>
<msg timestamp="20231129 08:37:33.774" level="INFO">${random} = ozone-test-3508783823</msg>
<status status="PASS" starttime="20231129 08:37:33.773" endtime="20231129 08:37:33.774"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231129 08:37:33.774" level="INFO">${PREFIX} = ozone-test-3508783823</msg>
<status status="PASS" starttime="20231129 08:37:33.774" endtime="20231129 08:37:33.774"/>
</kw>
<status status="PASS" starttime="20231129 08:37:33.773" endtime="20231129 08:37:33.774"/>
</kw>
<kw name="Create Random file">
<arg>22</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:33.777" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=22 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:33.849" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:33.849" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:37:33.776" endtime="20231129 08:37:33.849"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:33.850" level="INFO"/>
<status status="PASS" starttime="20231129 08:37:33.849" endtime="20231129 08:37:33.850"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:33.850" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:33.850" endtime="20231129 08:37:33.850"/>
</kw>
<status status="PASS" starttime="20231129 08:37:33.775" endtime="20231129 08:37:33.850"/>
</kw>
<msg timestamp="20231129 08:37:33.850" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:33.775" endtime="20231129 08:37:33.850"/>
</kw>
<status status="PASS" starttime="20231129 08:37:33.775" endtime="20231129 08:37:33.851"/>
</kw>
<status status="PASS" starttime="20231129 08:37:33.775" endtime="20231129 08:37:33.851"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>cp /tmp/part1 s3://${BUCKET}/mpyawscli</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:33.854" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/part1 s3://erasure/mpyawscli 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:34.992" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:34.992" level="INFO">${output} = Completed 256.0 KiB/22.0 MiB (2.8 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (5.5 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (8.2 MiB/s) with 1 file(s) remaining
Co...</msg>
<status status="PASS" starttime="20231129 08:37:33.852" endtime="20231129 08:37:34.992"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:34.994" level="INFO">Completed 256.0 KiB/22.0 MiB (2.8 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (5.5 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (8.2 MiB/s) with 1 file(s) remaining
Completed 1.0 MiB/22.0 MiB (10.6 MiB/s) with 1 file(s) remaining 
Completed 1.2 MiB/22.0 MiB (13.1 MiB/s) with 1 file(s) remaining 
Completed 1.5 MiB/22.0 MiB (15.6 MiB/s) with 1 file(s) remaining 
Completed 1.8 MiB/22.0 MiB (18.0 MiB/s) with 1 file(s) remaining 
Completed 2.0 MiB/22.0 MiB (20.4 MiB/s) with 1 file(s) remaining 
Completed 2.2 MiB/22.0 MiB (22.7 MiB/s) with 1 file(s) remaining 
Completed 2.5 MiB/22.0 MiB (25.0 MiB/s) with 1 file(s) remaining 
Completed 2.8 MiB/22.0 MiB (27.2 MiB/s) with 1 file(s) remaining 
Completed 3.0 MiB/22.0 MiB (29.4 MiB/s) with 1 file(s) remaining 
Completed 3.2 MiB/22.0 MiB (31.6 MiB/s) with 1 file(s) remaining 
Completed 3.5 MiB/22.0 MiB (33.7 MiB/s) with 1 file(s) remaining 
Completed 3.8 MiB/22.0 MiB (35.3 MiB/s) with 1 file(s) remaining 
Completed 4.0 MiB/22.0 MiB (37.3 MiB/s) with 1 file(s) remaining 
Completed 4.2 MiB/22.0 MiB (39.3 MiB/s) with 1 file(s) remaining 
Completed 4.5 MiB/22.0 MiB (41.4 MiB/s) with 1 file(s) remaining 
Completed 4.8 MiB/22.0 MiB (43.3 MiB/s) with 1 file(s) remaining 
Completed 5.0 MiB/22.0 MiB (45.0 MiB/s) with 1 file(s) remaining 
Completed 5.2 MiB/22.0 MiB (47.0 MiB/s) with 1 file(s) remaining 
Completed 5.5 MiB/22.0 MiB (48.9 MiB/s) with 1 file(s) remaining 
Completed 5.8 MiB/22.0 MiB (50.7 MiB/s) with 1 file(s) remaining 
Completed 6.0 MiB/22.0 MiB (52.4 MiB/s) with 1 file(s) remaining 
Completed 6.2 MiB/22.0 MiB (54.2 MiB/s) with 1 file(s) remaining 
Completed 6.5 MiB/22.0 MiB (56.1 MiB/s) with 1 file(s) remaining 
Completed 6.8 MiB/22.0 MiB (57.8 MiB/s) with 1 file(s) remaining 
Completed 7.0 MiB/22.0 MiB (59.6 MiB/s) with 1 file(s) remaining 
Completed 7.2 MiB/22.0 MiB (61.5 MiB/s) with 1 file(s) remaining 
Completed 7.5 MiB/22.0 MiB (63.0 MiB/s) with 1 file(s) remaining 
Completed 7.8 MiB/22.0 MiB (64.8 MiB/s) with 1 file(s) remaining 
Completed 8.0 MiB/22.0 MiB (66.6 MiB/s) with 1 file(s) remaining 
Completed 8.2 MiB/22.0 MiB (68.1 MiB/s) with 1 file(s) remaining 
Completed 8.5 MiB/22.0 MiB (69.9 MiB/s) with 1 file(s) remaining 
Completed 8.8 MiB/22.0 MiB (71.7 MiB/s) with 1 file(s) remaining 
Completed 9.0 MiB/22.0 MiB (73.1 MiB/s) with 1 file(s) remaining 
Completed 9.2 MiB/22.0 MiB (74.9 MiB/s) with 1 file(s) remaining 
Completed 9.5 MiB/22.0 MiB (76.6 MiB/s) with 1 file(s) remaining 
Completed 9.8 MiB/22.0 MiB (78.0 MiB/s) with 1 file(s) remaining 
Completed 10.0 MiB/22.0 MiB (79.6 MiB/s) with 1 file(s) remaining
Completed 10.2 MiB/22.0 MiB (81.0 MiB/s) with 1 file(s) remaining
Completed 10.5 MiB/22.0 MiB (82.7 MiB/s) with 1 file(s) remaining
Completed 10.8 MiB/22.0 MiB (84.3 MiB/s) with 1 file(s) remaining
Completed 11.0 MiB/22.0 MiB (85.8 MiB/s) with 1 file(s) remaining
Completed 11.2 MiB/22.0 MiB (87.4 MiB/s) with 1 file(s) remaining
Completed 11.5 MiB/22.0 MiB (88.8 MiB/s) with 1 file(s) remaining
Completed 11.8 MiB/22.0 MiB (90.1 MiB/s) with 1 file(s) remaining
Completed 12.0 MiB/22.0 MiB (91.7 MiB/s) with 1 file(s) remaining
Completed 12.2 MiB/22.0 MiB (93.3 MiB/s) with 1 file(s) remaining
Completed 12.5 MiB/22.0 MiB (94.3 MiB/s) with 1 file(s) remaining
Completed 12.8 MiB/22.0 MiB (96.0 MiB/s) with 1 file(s) remaining
Completed 13.0 MiB/22.0 MiB (97.5 MiB/s) with 1 file(s) remaining
Completed 13.2 MiB/22.0 MiB (98.9 MiB/s) with 1 file(s) remaining
Completed 13.5 MiB/22.0 MiB (98.0 MiB/s) with 1 file(s) remaining
Completed 13.8 MiB/22.0 MiB (99.4 MiB/s) with 1 file(s) remaining
Completed 14.0 MiB/22.0 MiB (100.0 MiB/s) with 1 file(s) remaining
Completed 14.2 MiB/22.0 MiB (97.5 MiB/s) with 1 file(s) remaining 
Completed 14.5 MiB/22.0 MiB (98.8 MiB/s) with 1 file(s) remaining 
Completed 14.8 MiB/22.0 MiB (95.2 MiB/s) with 1 file(s) remaining 
Completed 15.0 MiB/22.0 MiB (96.3 MiB/s) with 1 file(s) remaining 
Completed 15.2 MiB/22.0 MiB (97.4 MiB/s) with 1 file(s) remaining 
Completed 15.5 MiB/22.0 MiB (98.0 MiB/s) with 1 file(s) remaining 
Completed 15.8 MiB/22.0 MiB (99.1 MiB/s) with 1 file(s) remaining 
Completed 16.0 MiB/22.0 MiB (100.2 MiB/s) with 1 file(s) remaining
Completed 16.2 MiB/22.0 MiB (101.3 MiB/s) with 1 file(s) remaining
Completed 16.5 MiB/22.0 MiB (102.4 MiB/s) with 1 file(s) remaining
Completed 16.8 MiB/22.0 MiB (103.3 MiB/s) with 1 file(s) remaining
Completed 17.0 MiB/22.0 MiB (104.4 MiB/s) with 1 file(s) remaining
Completed 17.2 MiB/22.0 MiB (105.6 MiB/s) with 1 file(s) remaining
Completed 17.5 MiB/22.0 MiB (106.1 MiB/s) with 1 file(s) remaining
Completed 17.8 MiB/22.0 MiB (107.1 MiB/s) with 1 file(s) remaining
Completed 18.0 MiB/22.0 MiB (108.2 MiB/s) with 1 file(s) remaining
Completed 18.2 MiB/22.0 MiB (108.5 MiB/s) with 1 file(s) remaining
Completed 18.5 MiB/22.0 MiB (108.6 MiB/s) with 1 file(s) remaining
Completed 18.8 MiB/22.0 MiB (109.4 MiB/s) with 1 file(s) remaining
Completed 19.0 MiB/22.0 MiB (110.5 MiB/s) with 1 file(s) remaining
Completed 19.2 MiB/22.0 MiB (109.4 MiB/s) with 1 file(s) remaining
Completed 19.5 MiB/22.0 MiB (106.8 MiB/s) with 1 file(s) remaining
Completed 19.8 MiB/22.0 MiB (107.7 MiB/s) with 1 file(s) remaining
Completed 20.0 MiB/22.0 MiB (108.1 MiB/s) with 1 file(s) remaining
Completed 20.2 MiB/22.0 MiB (108.2 MiB/s) with 1 file(s) remaining
Completed 20.5 MiB/22.0 MiB (106.2 MiB/s) with 1 file(s) remaining
Completed 20.8 MiB/22.0 MiB (105.9 MiB/s) with 1 file(s) remaining
Completed 21.0 MiB/22.0 MiB (106.0 MiB/s) with 1 file(s) remaining
Completed 21.2 MiB/22.0 MiB (106.1 MiB/s) with 1 file(s) remaining
Completed 21.5 MiB/22.0 MiB (106.8 MiB/s) with 1 file(s) remaining
Completed 21.8 MiB/22.0 MiB (107.1 MiB/s) with 1 file(s) remaining
Completed 22.0 MiB/22.0 MiB (107.2 MiB/s) with 1 file(s) remaining
upload: ../../tmp/part1 to s3://erasure/mpyawscli                 </msg>
<status status="PASS" starttime="20231129 08:37:34.993" endtime="20231129 08:37:34.994"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:34.994" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:34.994" endtime="20231129 08:37:34.995"/>
</kw>
<status status="PASS" starttime="20231129 08:37:33.852" endtime="20231129 08:37:34.995"/>
</kw>
<msg timestamp="20231129 08:37:34.995" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:33.852" endtime="20231129 08:37:34.995"/>
</kw>
<msg timestamp="20231129 08:37:34.995" level="INFO">${output} = Completed 256.0 KiB/22.0 MiB (2.8 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (5.5 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (8.2 MiB/s) with 1 file(s) remaining
Co...</msg>
<status status="PASS" starttime="20231129 08:37:33.851" endtime="20231129 08:37:34.995"/>
</kw>
<status status="PASS" starttime="20231129 08:37:33.851" endtime="20231129 08:37:34.995"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>cp s3://${BUCKET}/mpyawscli /tmp/part1.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:35.000" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp s3://erasure/mpyawscli /tmp/part1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:35.805" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:35.805" level="INFO">${output} = Completed 256.0 KiB/22.0 MiB (4.8 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (9.2 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (13.7 MiB/s) with 1 file(s) remaining
C...</msg>
<status status="PASS" starttime="20231129 08:37:34.998" endtime="20231129 08:37:35.805"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:35.806" level="INFO">Completed 256.0 KiB/22.0 MiB (4.8 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (9.2 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (13.7 MiB/s) with 1 file(s) remaining
Completed 1.0 MiB/22.0 MiB (17.9 MiB/s) with 1 file(s) remaining  
Completed 1.2 MiB/22.0 MiB (22.2 MiB/s) with 1 file(s) remaining  
Completed 1.5 MiB/22.0 MiB (25.4 MiB/s) with 1 file(s) remaining  
Completed 1.8 MiB/22.0 MiB (29.4 MiB/s) with 1 file(s) remaining  
Completed 2.0 MiB/22.0 MiB (31.3 MiB/s) with 1 file(s) remaining  
Completed 2.2 MiB/22.0 MiB (35.0 MiB/s) with 1 file(s) remaining  
Completed 2.5 MiB/22.0 MiB (38.8 MiB/s) with 1 file(s) remaining  
Completed 2.8 MiB/22.0 MiB (42.3 MiB/s) with 1 file(s) remaining  
Completed 3.0 MiB/22.0 MiB (45.8 MiB/s) with 1 file(s) remaining  
Completed 3.2 MiB/22.0 MiB (42.4 MiB/s) with 1 file(s) remaining  
Completed 3.5 MiB/22.0 MiB (45.2 MiB/s) with 1 file(s) remaining  
Completed 3.8 MiB/22.0 MiB (47.9 MiB/s) with 1 file(s) remaining  
Completed 4.0 MiB/22.0 MiB (50.8 MiB/s) with 1 file(s) remaining  
Completed 4.2 MiB/22.0 MiB (50.4 MiB/s) with 1 file(s) remaining  
Completed 4.5 MiB/22.0 MiB (53.2 MiB/s) with 1 file(s) remaining  
Completed 4.8 MiB/22.0 MiB (55.3 MiB/s) with 1 file(s) remaining  
Completed 5.0 MiB/22.0 MiB (57.1 MiB/s) with 1 file(s) remaining  
Completed 5.2 MiB/22.0 MiB (59.1 MiB/s) with 1 file(s) remaining  
Completed 5.5 MiB/22.0 MiB (61.1 MiB/s) with 1 file(s) remaining  
Completed 5.8 MiB/22.0 MiB (62.9 MiB/s) with 1 file(s) remaining  
Completed 6.0 MiB/22.0 MiB (64.1 MiB/s) with 1 file(s) remaining  
Completed 6.2 MiB/22.0 MiB (51.5 MiB/s) with 1 file(s) remaining  
Completed 6.5 MiB/22.0 MiB (53.3 MiB/s) with 1 file(s) remaining  
Completed 6.8 MiB/22.0 MiB (55.1 MiB/s) with 1 file(s) remaining  
Completed 7.0 MiB/22.0 MiB (56.8 MiB/s) with 1 file(s) remaining  
Completed 7.2 MiB/22.0 MiB (56.0 MiB/s) with 1 file(s) remaining  
Completed 7.5 MiB/22.0 MiB (57.9 MiB/s) with 1 file(s) remaining  
Completed 7.8 MiB/22.0 MiB (59.6 MiB/s) with 1 file(s) remaining  
Completed 8.0 MiB/22.0 MiB (61.3 MiB/s) with 1 file(s) remaining  
Completed 8.2 MiB/22.0 MiB (63.1 MiB/s) with 1 file(s) remaining  
Completed 8.5 MiB/22.0 MiB (58.3 MiB/s) with 1 file(s) remaining  
Completed 8.8 MiB/22.0 MiB (58.9 MiB/s) with 1 file(s) remaining  
Completed 9.0 MiB/22.0 MiB (58.5 MiB/s) with 1 file(s) remaining  
Completed 9.2 MiB/22.0 MiB (60.0 MiB/s) with 1 file(s) remaining  
Completed 9.5 MiB/22.0 MiB (60.5 MiB/s) with 1 file(s) remaining  
Completed 9.8 MiB/22.0 MiB (61.9 MiB/s) with 1 file(s) remaining  
Completed 10.0 MiB/22.0 MiB (59.0 MiB/s) with 1 file(s) remaining 
Completed 10.2 MiB/22.0 MiB (60.1 MiB/s) with 1 file(s) remaining 
Completed 10.5 MiB/22.0 MiB (61.5 MiB/s) with 1 file(s) remaining 
Completed 10.8 MiB/22.0 MiB (62.8 MiB/s) with 1 file(s) remaining 
Completed 11.0 MiB/22.0 MiB (60.7 MiB/s) with 1 file(s) remaining 
Completed 11.2 MiB/22.0 MiB (57.4 MiB/s) with 1 file(s) remaining 
Completed 11.5 MiB/22.0 MiB (58.5 MiB/s) with 1 file(s) remaining 
Completed 11.8 MiB/22.0 MiB (59.7 MiB/s) with 1 file(s) remaining 
Completed 12.0 MiB/22.0 MiB (59.9 MiB/s) with 1 file(s) remaining 
Completed 12.2 MiB/22.0 MiB (59.2 MiB/s) with 1 file(s) remaining 
Completed 12.5 MiB/22.0 MiB (59.7 MiB/s) with 1 file(s) remaining 
Completed 12.8 MiB/22.0 MiB (60.9 MiB/s) with 1 file(s) remaining 
Completed 13.0 MiB/22.0 MiB (62.0 MiB/s) with 1 file(s) remaining 
Completed 13.2 MiB/22.0 MiB (59.6 MiB/s) with 1 file(s) remaining 
Completed 13.5 MiB/22.0 MiB (60.5 MiB/s) with 1 file(s) remaining 
Completed 13.8 MiB/22.0 MiB (61.3 MiB/s) with 1 file(s) remaining 
Completed 14.0 MiB/22.0 MiB (62.2 MiB/s) with 1 file(s) remaining 
Completed 14.2 MiB/22.0 MiB (61.1 MiB/s) with 1 file(s) remaining 
Completed 14.5 MiB/22.0 MiB (61.8 MiB/s) with 1 file(s) remaining 
Completed 14.8 MiB/22.0 MiB (62.5 MiB/s) with 1 file(s) remaining 
Completed 15.0 MiB/22.0 MiB (63.5 MiB/s) with 1 file(s) remaining 
Completed 15.2 MiB/22.0 MiB (62.0 MiB/s) with 1 file(s) remaining 
Completed 15.5 MiB/22.0 MiB (62.9 MiB/s) with 1 file(s) remaining 
Completed 15.8 MiB/22.0 MiB (63.9 MiB/s) with 1 file(s) remaining 
Completed 16.0 MiB/22.0 MiB (64.8 MiB/s) with 1 file(s) remaining 
Completed 16.2 MiB/22.0 MiB (64.2 MiB/s) with 1 file(s) remaining 
Completed 16.5 MiB/22.0 MiB (62.9 MiB/s) with 1 file(s) remaining 
Completed 16.8 MiB/22.0 MiB (63.1 MiB/s) with 1 file(s) remaining 
Completed 17.0 MiB/22.0 MiB (63.8 MiB/s) with 1 file(s) remaining 
Completed 17.2 MiB/22.0 MiB (64.6 MiB/s) with 1 file(s) remaining 
Completed 17.5 MiB/22.0 MiB (65.3 MiB/s) with 1 file(s) remaining 
Completed 17.8 MiB/22.0 MiB (66.1 MiB/s) with 1 file(s) remaining 
Completed 18.0 MiB/22.0 MiB (66.9 MiB/s) with 1 file(s) remaining 
Completed 18.2 MiB/22.0 MiB (66.0 MiB/s) with 1 file(s) remaining 
Completed 18.5 MiB/22.0 MiB (66.6 MiB/s) with 1 file(s) remaining 
Completed 18.8 MiB/22.0 MiB (67.2 MiB/s) with 1 file(s) remaining 
Completed 19.0 MiB/22.0 MiB (67.8 MiB/s) with 1 file(s) remaining 
Completed 19.2 MiB/22.0 MiB (65.8 MiB/s) with 1 file(s) remaining 
Completed 19.5 MiB/22.0 MiB (66.3 MiB/s) with 1 file(s) remaining 
Completed 19.8 MiB/22.0 MiB (67.1 MiB/s) with 1 file(s) remaining 
Completed 20.0 MiB/22.0 MiB (67.5 MiB/s) with 1 file(s) remaining 
Completed 20.2 MiB/22.0 MiB (68.1 MiB/s) with 1 file(s) remaining 
Completed 20.5 MiB/22.0 MiB (68.9 MiB/s) with 1 file(s) remaining 
Completed 20.8 MiB/22.0 MiB (69.1 MiB/s) with 1 file(s) remaining 
Completed 21.0 MiB/22.0 MiB (69.8 MiB/s) with 1 file(s) remaining 
Completed 21.2 MiB/22.0 MiB (66.7 MiB/s) with 1 file(s) remaining 
Completed 21.5 MiB/22.0 MiB (67.2 MiB/s) with 1 file(s) remaining 
Completed 21.8 MiB/22.0 MiB (67.7 MiB/s) with 1 file(s) remaining 
Completed 22.0 MiB/22.0 MiB (68.3 MiB/s) with 1 file(s) remaining 
download: s3://erasure/mpyawscli to ../../tmp/part1.result        </msg>
<status status="PASS" starttime="20231129 08:37:35.805" endtime="20231129 08:37:35.806"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:35.806" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:35.806" endtime="20231129 08:37:35.806"/>
</kw>
<status status="PASS" starttime="20231129 08:37:34.997" endtime="20231129 08:37:35.806"/>
</kw>
<msg timestamp="20231129 08:37:35.806" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:34.997" endtime="20231129 08:37:35.807"/>
</kw>
<msg timestamp="20231129 08:37:35.807" level="INFO">${output} = Completed 256.0 KiB/22.0 MiB (4.8 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (9.2 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (13.7 MiB/s) with 1 file(s) remaining
C...</msg>
<status status="PASS" starttime="20231129 08:37:34.996" endtime="20231129 08:37:35.807"/>
</kw>
<status status="PASS" starttime="20231129 08:37:34.996" endtime="20231129 08:37:35.807"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>rm s3://${BUCKET}/mpyawscli</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:35.810" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 rm s3://erasure/mpyawscli 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:36.277" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:36.277" level="INFO">${output} = delete: s3://erasure/mpyawscli</msg>
<status status="PASS" starttime="20231129 08:37:35.809" endtime="20231129 08:37:36.277"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:36.278" level="INFO">delete: s3://erasure/mpyawscli</msg>
<status status="PASS" starttime="20231129 08:37:36.277" endtime="20231129 08:37:36.278"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:36.279" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:36.278" endtime="20231129 08:37:36.279"/>
</kw>
<status status="PASS" starttime="20231129 08:37:35.808" endtime="20231129 08:37:36.279"/>
</kw>
<msg timestamp="20231129 08:37:36.279" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:35.808" endtime="20231129 08:37:36.279"/>
</kw>
<msg timestamp="20231129 08:37:36.279" level="INFO">${output} = delete: s3://erasure/mpyawscli</msg>
<status status="PASS" starttime="20231129 08:37:35.808" endtime="20231129 08:37:36.279"/>
</kw>
<status status="PASS" starttime="20231129 08:37:35.807" endtime="20231129 08:37:36.279"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part1</arg>
<arg>/tmp/part1.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:36.283" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:36.324" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:36.324" level="INFO">${output} = 9ff1ba0df44d33a5a7e07e8d98ddeb6a</msg>
<status status="PASS" starttime="20231129 08:37:36.281" endtime="20231129 08:37:36.324"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:36.325" level="INFO">9ff1ba0df44d33a5a7e07e8d98ddeb6a</msg>
<status status="PASS" starttime="20231129 08:37:36.324" endtime="20231129 08:37:36.325"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:36.325" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:36.325" endtime="20231129 08:37:36.325"/>
</kw>
<status status="PASS" starttime="20231129 08:37:36.281" endtime="20231129 08:37:36.326"/>
</kw>
<msg timestamp="20231129 08:37:36.326" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:36.280" endtime="20231129 08:37:36.326"/>
</kw>
<msg timestamp="20231129 08:37:36.326" level="INFO">${checksumbefore} = 9ff1ba0df44d33a5a7e07e8d98ddeb6a</msg>
<status status="PASS" starttime="20231129 08:37:36.280" endtime="20231129 08:37:36.326"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:36.328" level="INFO">Running command 'md5sum /tmp/part1.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:36.369" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:36.369" level="INFO">${output} = 9ff1ba0df44d33a5a7e07e8d98ddeb6a</msg>
<status status="PASS" starttime="20231129 08:37:36.327" endtime="20231129 08:37:36.369"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:36.370" level="INFO">9ff1ba0df44d33a5a7e07e8d98ddeb6a</msg>
<status status="PASS" starttime="20231129 08:37:36.369" endtime="20231129 08:37:36.370"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:36.370" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:36.370" endtime="20231129 08:37:36.370"/>
</kw>
<status status="PASS" starttime="20231129 08:37:36.327" endtime="20231129 08:37:36.370"/>
</kw>
<msg timestamp="20231129 08:37:36.370" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:36.326" endtime="20231129 08:37:36.370"/>
</kw>
<msg timestamp="20231129 08:37:36.371" level="INFO">${checksumafter} = 9ff1ba0df44d33a5a7e07e8d98ddeb6a</msg>
<status status="PASS" starttime="20231129 08:37:36.326" endtime="20231129 08:37:36.371"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231129 08:37:36.371" endtime="20231129 08:37:36.371"/>
</kw>
<status status="PASS" starttime="20231129 08:37:36.279" endtime="20231129 08:37:36.371"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:37:33.772" endtime="20231129 08:37:36.371"/>
</test>
<test id="s1-s1-s8-t11" name="Test Multipart Upload Put With Copy" line="265">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231129 08:37:36.374" level="INFO">${randStr} = 2764160290</msg>
<status status="PASS" starttime="20231129 08:37:36.373" endtime="20231129 08:37:36.374"/>
</kw>
<msg timestamp="20231129 08:37:36.374" level="INFO">${random} = ozone-test-2764160290</msg>
<status status="PASS" starttime="20231129 08:37:36.373" endtime="20231129 08:37:36.374"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231129 08:37:36.374" level="INFO">${PREFIX} = ozone-test-2764160290</msg>
<status status="PASS" starttime="20231129 08:37:36.374" endtime="20231129 08:37:36.374"/>
</kw>
<status status="PASS" starttime="20231129 08:37:36.373" endtime="20231129 08:37:36.374"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>5</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>5</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:36.377" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:36.397" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:36.397" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:37:36.376" endtime="20231129 08:37:36.397"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:36.398" level="INFO"/>
<status status="PASS" starttime="20231129 08:37:36.397" endtime="20231129 08:37:36.398"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:36.398" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:36.398" endtime="20231129 08:37:36.398"/>
</kw>
<status status="PASS" starttime="20231129 08:37:36.376" endtime="20231129 08:37:36.399"/>
</kw>
<msg timestamp="20231129 08:37:36.399" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:36.375" endtime="20231129 08:37:36.399"/>
</kw>
<status status="PASS" starttime="20231129 08:37:36.375" endtime="20231129 08:37:36.399"/>
</kw>
<status status="PASS" starttime="20231129 08:37:36.375" endtime="20231129 08:37:36.399"/>
</kw>
<status status="PASS" starttime="20231129 08:37:36.375" endtime="20231129 08:37:36.399"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/copytest/source --body /tmp/part1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:36.402" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket erasure --key ozone-test-2764160290/copytest/source --body /tmp/part1 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:37.071" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:37.071" level="INFO">${output} = {
    "ETag": "\"2bf8bf37bd491195fc6949ab4ee92de1\""
}</msg>
<status status="PASS" starttime="20231129 08:37:36.401" endtime="20231129 08:37:37.071"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:37.072" level="INFO">{
    "ETag": "\"2bf8bf37bd491195fc6949ab4ee92de1\""
}</msg>
<status status="PASS" starttime="20231129 08:37:37.071" endtime="20231129 08:37:37.072"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:37.073" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:37.073" endtime="20231129 08:37:37.073"/>
</kw>
<status status="PASS" starttime="20231129 08:37:36.400" endtime="20231129 08:37:37.073"/>
</kw>
<msg timestamp="20231129 08:37:37.073" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:36.400" endtime="20231129 08:37:37.073"/>
</kw>
<msg timestamp="20231129 08:37:37.073" level="INFO">${output} = {
    "ETag": "\"2bf8bf37bd491195fc6949ab4ee92de1\""
}</msg>
<status status="PASS" starttime="20231129 08:37:36.400" endtime="20231129 08:37:37.073"/>
</kw>
<msg timestamp="20231129 08:37:37.074" level="INFO">${result} = {
    "ETag": "\"2bf8bf37bd491195fc6949ab4ee92de1\""
}</msg>
<status status="PASS" starttime="20231129 08:37:36.399" endtime="20231129 08:37:37.074"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/copytest/destination</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:37.077" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket erasure --key ozone-test-2764160290/copytest/destination 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:37.522" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:37.522" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-2764160290/copytest/destination",
    "UploadId": "86e5e2b5-49d9-434b-b3ba-8359d1f606c2-111492927158878253"
}</msg>
<status status="PASS" starttime="20231129 08:37:37.075" endtime="20231129 08:37:37.522"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:37.523" level="INFO">{
    "Bucket": "erasure",
    "Key": "ozone-test-2764160290/copytest/destination",
    "UploadId": "86e5e2b5-49d9-434b-b3ba-8359d1f606c2-111492927158878253"
}</msg>
<status status="PASS" starttime="20231129 08:37:37.523" endtime="20231129 08:37:37.523"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:37.524" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:37.523" endtime="20231129 08:37:37.524"/>
</kw>
<status status="PASS" starttime="20231129 08:37:37.075" endtime="20231129 08:37:37.524"/>
</kw>
<msg timestamp="20231129 08:37:37.524" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:37.075" endtime="20231129 08:37:37.524"/>
</kw>
<msg timestamp="20231129 08:37:37.524" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-2764160290/copytest/destination",
    "UploadId": "86e5e2b5-49d9-434b-b3ba-8359d1f606c2-111492927158878253"
}</msg>
<status status="PASS" starttime="20231129 08:37:37.074" endtime="20231129 08:37:37.524"/>
</kw>
<msg timestamp="20231129 08:37:37.525" level="INFO">${result} = {
    "Bucket": "erasure",
    "Key": "ozone-test-2764160290/copytest/destination",
    "UploadId": "86e5e2b5-49d9-434b-b3ba-8359d1f606c2-111492927158878253"
}</msg>
<status status="PASS" starttime="20231129 08:37:37.074" endtime="20231129 08:37:37.525"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:37.527" level="INFO">Running command 'echo '{
    "Bucket": "erasure",
    "Key": "ozone-test-2764160290/copytest/destination",
    "UploadId": "86e5e2b5-49d9-434b-b3ba-8359d1f606c2-111492927158878253"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:37.552" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:37.552" level="INFO">${output} = 86e5e2b5-49d9-434b-b3ba-8359d1f606c2-111492927158878253</msg>
<status status="PASS" starttime="20231129 08:37:37.525" endtime="20231129 08:37:37.552"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:37.553" level="INFO">86e5e2b5-49d9-434b-b3ba-8359d1f606c2-111492927158878253</msg>
<status status="PASS" starttime="20231129 08:37:37.552" endtime="20231129 08:37:37.553"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:37.553" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:37.553" endtime="20231129 08:37:37.553"/>
</kw>
<msg timestamp="20231129 08:37:37.554" level="INFO">${uploadID} = 86e5e2b5-49d9-434b-b3ba-8359d1f606c2-111492927158878253</msg>
<status status="PASS" starttime="20231129 08:37:37.525" endtime="20231129 08:37:37.554"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:37:37.554" endtime="20231129 08:37:37.554"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:37:37.554" endtime="20231129 08:37:37.554"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copytest/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copytest/source</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:37.558" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket erasure --key ozone-test-2764160290/copytest/destination --upload-id 86e5e2b5-49d9-434b-b3ba-8359d1f606c2-111492927158878253 --part-number 1 --copy-source erasure/ozone-test-2764160290/copytest/source 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:38.255" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:38.255" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/s3v/erasure/ozone-test-2764160290/copytest/destination-86e5e2b5-49d9-434b-b3ba-8359d1f606c2-111492927158878253-1",
        "LastModified": "2023-11-29T08:37...</msg>
<status status="PASS" starttime="20231129 08:37:37.556" endtime="20231129 08:37:38.255"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:38.256" level="INFO">{
    "CopyPartResult": {
        "ETag": "/s3v/erasure/ozone-test-2764160290/copytest/destination-86e5e2b5-49d9-434b-b3ba-8359d1f606c2-111492927158878253-1",
        "LastModified": "2023-11-29T08:37:38.193Z"
    }
}</msg>
<status status="PASS" starttime="20231129 08:37:38.255" endtime="20231129 08:37:38.256"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:38.256" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:38.256" endtime="20231129 08:37:38.256"/>
</kw>
<status status="PASS" starttime="20231129 08:37:37.556" endtime="20231129 08:37:38.256"/>
</kw>
<msg timestamp="20231129 08:37:38.257" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:37.556" endtime="20231129 08:37:38.257"/>
</kw>
<msg timestamp="20231129 08:37:38.257" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/s3v/erasure/ozone-test-2764160290/copytest/destination-86e5e2b5-49d9-434b-b3ba-8359d1f606c2-111492927158878253-1",
        "LastModified": "2023-11-29T08:37...</msg>
<status status="PASS" starttime="20231129 08:37:37.555" endtime="20231129 08:37:38.257"/>
</kw>
<msg timestamp="20231129 08:37:38.257" level="INFO">${result} = {
    "CopyPartResult": {
        "ETag": "/s3v/erasure/ozone-test-2764160290/copytest/destination-86e5e2b5-49d9-434b-b3ba-8359d1f606c2-111492927158878253-1",
        "LastModified": "2023-11-29T08:37...</msg>
<status status="PASS" starttime="20231129 08:37:37.555" endtime="20231129 08:37:38.257"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:37:38.257" endtime="20231129 08:37:38.257"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:37:38.258" endtime="20231129 08:37:38.258"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:38.260" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "ETag": "/s3v/erasure/ozone-test-2764160290/copytest/destination-86e5e2b5-49d9-434b-b3ba-8359d1f606c2-111492927158878253-1",
        "LastModified": "2023-11-29T08:37:38.193Z"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:38.285" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:38.285" level="INFO">${output} = /s3v/erasure/ozone-test-2764160290/copytest/destination-86e5e2b5-49d9-434b-b3ba-8359d1f606c2-111492927158878253-1</msg>
<status status="PASS" starttime="20231129 08:37:38.259" endtime="20231129 08:37:38.285"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:38.286" level="INFO">/s3v/erasure/ozone-test-2764160290/copytest/destination-86e5e2b5-49d9-434b-b3ba-8359d1f606c2-111492927158878253-1</msg>
<status status="PASS" starttime="20231129 08:37:38.286" endtime="20231129 08:37:38.286"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:38.287" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:38.286" endtime="20231129 08:37:38.287"/>
</kw>
<msg timestamp="20231129 08:37:38.287" level="INFO">${eTag1} = /s3v/erasure/ozone-test-2764160290/copytest/destination-86e5e2b5-49d9-434b-b3ba-8359d1f606c2-111492927158878253-1</msg>
<status status="PASS" starttime="20231129 08:37:38.258" endtime="20231129 08:37:38.287"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/copytest/destination --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1}]'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:38.291" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 86e5e2b5-49d9-434b-b3ba-8359d1f606c2-111492927158878253 --bucket erasure --key ozone-test-2764160290/copytest/destination --multipart-upload 'Parts=[{ETag=/s3v/erasure/ozone-test-2764160290/copytest/destination-86e5e2b5-49d9-434b-b3ba-8359d1f606c2-111492927158878253-1,PartNumber=1}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:38.741" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:38.742" level="INFO">${output} = {
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "ozone-test-2764160290/copytest/destination",
    "ETag": "\"37a6259cc0c1dae299a7866489dff0bd-1\""
}</msg>
<status status="PASS" starttime="20231129 08:37:38.289" endtime="20231129 08:37:38.742"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:38.742" level="INFO">{
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "ozone-test-2764160290/copytest/destination",
    "ETag": "\"37a6259cc0c1dae299a7866489dff0bd-1\""
}</msg>
<status status="PASS" starttime="20231129 08:37:38.742" endtime="20231129 08:37:38.743"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:38.743" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:38.743" endtime="20231129 08:37:38.743"/>
</kw>
<status status="PASS" starttime="20231129 08:37:38.289" endtime="20231129 08:37:38.743"/>
</kw>
<msg timestamp="20231129 08:37:38.743" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:38.288" endtime="20231129 08:37:38.743"/>
</kw>
<msg timestamp="20231129 08:37:38.744" level="INFO">${output} = {
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "ozone-test-2764160290/copytest/destination",
    "ETag": "\"37a6259cc0c1dae299a7866489dff0bd-1\""
}</msg>
<status status="PASS" starttime="20231129 08:37:38.288" endtime="20231129 08:37:38.744"/>
</kw>
<status status="PASS" starttime="20231129 08:37:38.287" endtime="20231129 08:37:38.744"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/copytest/destination /tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:38.747" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-2764160290/copytest/destination /tmp/part-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:39.309" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:39.309" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:37:38 GMT",
    "ContentLength": 5242880,
    "ETag": "\"37a6259cc0c1dae299a7866489dff0bd-1\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20231129 08:37:38.745" endtime="20231129 08:37:39.309"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:39.310" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:37:38 GMT",
    "ContentLength": 5242880,
    "ETag": "\"37a6259cc0c1dae299a7866489dff0bd-1\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 29 Nov 2023 08:37:39 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231129 08:37:39.309" endtime="20231129 08:37:39.310"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:39.311" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:39.310" endtime="20231129 08:37:39.311"/>
</kw>
<status status="PASS" starttime="20231129 08:37:38.745" endtime="20231129 08:37:39.311"/>
</kw>
<msg timestamp="20231129 08:37:39.311" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:38.745" endtime="20231129 08:37:39.311"/>
</kw>
<msg timestamp="20231129 08:37:39.312" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:37:38 GMT",
    "ContentLength": 5242880,
    "ETag": "\"37a6259cc0c1dae299a7866489dff0bd-1\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20231129 08:37:38.744" endtime="20231129 08:37:39.312"/>
</kw>
<status status="PASS" starttime="20231129 08:37:38.744" endtime="20231129 08:37:39.312"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part1</arg>
<arg>/tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:39.316" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:39.328" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:39.328" level="INFO">${output} = 2bf8bf37bd491195fc6949ab4ee92de1</msg>
<status status="PASS" starttime="20231129 08:37:39.314" endtime="20231129 08:37:39.328"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:39.329" level="INFO">2bf8bf37bd491195fc6949ab4ee92de1</msg>
<status status="PASS" starttime="20231129 08:37:39.328" endtime="20231129 08:37:39.329"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:39.330" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:39.329" endtime="20231129 08:37:39.330"/>
</kw>
<status status="PASS" starttime="20231129 08:37:39.314" endtime="20231129 08:37:39.330"/>
</kw>
<msg timestamp="20231129 08:37:39.330" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:39.313" endtime="20231129 08:37:39.330"/>
</kw>
<msg timestamp="20231129 08:37:39.330" level="INFO">${checksumbefore} = 2bf8bf37bd491195fc6949ab4ee92de1</msg>
<status status="PASS" starttime="20231129 08:37:39.313" endtime="20231129 08:37:39.330"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:39.334" level="INFO">Running command 'md5sum /tmp/part-result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:39.345" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:39.345" level="INFO">${output} = 2bf8bf37bd491195fc6949ab4ee92de1</msg>
<status status="PASS" starttime="20231129 08:37:39.332" endtime="20231129 08:37:39.345"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:39.347" level="INFO">2bf8bf37bd491195fc6949ab4ee92de1</msg>
<status status="PASS" starttime="20231129 08:37:39.346" endtime="20231129 08:37:39.347"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:39.347" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:39.347" endtime="20231129 08:37:39.348"/>
</kw>
<status status="PASS" starttime="20231129 08:37:39.331" endtime="20231129 08:37:39.348"/>
</kw>
<msg timestamp="20231129 08:37:39.348" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:39.331" endtime="20231129 08:37:39.348"/>
</kw>
<msg timestamp="20231129 08:37:39.348" level="INFO">${checksumafter} = 2bf8bf37bd491195fc6949ab4ee92de1</msg>
<status status="PASS" starttime="20231129 08:37:39.330" endtime="20231129 08:37:39.348"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231129 08:37:39.349" endtime="20231129 08:37:39.349"/>
</kw>
<status status="PASS" starttime="20231129 08:37:39.312" endtime="20231129 08:37:39.349"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:37:36.372" endtime="20231129 08:37:39.350"/>
</test>
<test id="s1-s1-s8-t12" name="Test Multipart Upload Put With Copy and range" line="287">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231129 08:37:39.353" level="INFO">${randStr} = 5750821793</msg>
<status status="PASS" starttime="20231129 08:37:39.352" endtime="20231129 08:37:39.353"/>
</kw>
<msg timestamp="20231129 08:37:39.353" level="INFO">${random} = ozone-test-5750821793</msg>
<status status="PASS" starttime="20231129 08:37:39.351" endtime="20231129 08:37:39.353"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231129 08:37:39.354" level="INFO">${PREFIX} = ozone-test-5750821793</msg>
<status status="PASS" starttime="20231129 08:37:39.353" endtime="20231129 08:37:39.354"/>
</kw>
<status status="PASS" starttime="20231129 08:37:39.351" endtime="20231129 08:37:39.354"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>10</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>10</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:39.358" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=10 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:39.394" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:39.394" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:37:39.356" endtime="20231129 08:37:39.394"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:39.395" level="INFO"/>
<status status="PASS" starttime="20231129 08:37:39.394" endtime="20231129 08:37:39.395"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:39.395" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:39.395" endtime="20231129 08:37:39.395"/>
</kw>
<status status="PASS" starttime="20231129 08:37:39.355" endtime="20231129 08:37:39.396"/>
</kw>
<msg timestamp="20231129 08:37:39.396" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:39.355" endtime="20231129 08:37:39.396"/>
</kw>
<status status="PASS" starttime="20231129 08:37:39.355" endtime="20231129 08:37:39.396"/>
</kw>
<status status="PASS" starttime="20231129 08:37:39.354" endtime="20231129 08:37:39.396"/>
</kw>
<status status="PASS" starttime="20231129 08:37:39.354" endtime="20231129 08:37:39.396"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/source --body /tmp/part1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:39.399" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket erasure --key ozone-test-5750821793/copyrange/source --body /tmp/part1 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:40.176" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:40.176" level="INFO">${output} = {
    "ETag": "\"fc82b54a384c1583a5efb482bd457aa0\""
}</msg>
<status status="PASS" starttime="20231129 08:37:39.398" endtime="20231129 08:37:40.176"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:40.177" level="INFO">{
    "ETag": "\"fc82b54a384c1583a5efb482bd457aa0\""
}</msg>
<status status="PASS" starttime="20231129 08:37:40.177" endtime="20231129 08:37:40.177"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:40.178" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:40.177" endtime="20231129 08:37:40.178"/>
</kw>
<status status="PASS" starttime="20231129 08:37:39.397" endtime="20231129 08:37:40.178"/>
</kw>
<msg timestamp="20231129 08:37:40.178" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:39.397" endtime="20231129 08:37:40.178"/>
</kw>
<msg timestamp="20231129 08:37:40.178" level="INFO">${output} = {
    "ETag": "\"fc82b54a384c1583a5efb482bd457aa0\""
}</msg>
<status status="PASS" starttime="20231129 08:37:39.397" endtime="20231129 08:37:40.178"/>
</kw>
<msg timestamp="20231129 08:37:40.179" level="INFO">${result} = {
    "ETag": "\"fc82b54a384c1583a5efb482bd457aa0\""
}</msg>
<status status="PASS" starttime="20231129 08:37:39.396" endtime="20231129 08:37:40.179"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:40.182" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket erasure --key ozone-test-5750821793/copyrange/destination 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:40.666" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:40.666" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-5750821793/copyrange/destination",
    "UploadId": "b6b2d247-61b7-4146-ae83-fa11d52ee870-111492927364071472"
}</msg>
<status status="PASS" starttime="20231129 08:37:40.180" endtime="20231129 08:37:40.666"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:40.667" level="INFO">{
    "Bucket": "erasure",
    "Key": "ozone-test-5750821793/copyrange/destination",
    "UploadId": "b6b2d247-61b7-4146-ae83-fa11d52ee870-111492927364071472"
}</msg>
<status status="PASS" starttime="20231129 08:37:40.666" endtime="20231129 08:37:40.667"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:40.667" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:40.667" endtime="20231129 08:37:40.668"/>
</kw>
<status status="PASS" starttime="20231129 08:37:40.180" endtime="20231129 08:37:40.668"/>
</kw>
<msg timestamp="20231129 08:37:40.668" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:40.180" endtime="20231129 08:37:40.668"/>
</kw>
<msg timestamp="20231129 08:37:40.668" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-5750821793/copyrange/destination",
    "UploadId": "b6b2d247-61b7-4146-ae83-fa11d52ee870-111492927364071472"
}</msg>
<status status="PASS" starttime="20231129 08:37:40.179" endtime="20231129 08:37:40.668"/>
</kw>
<msg timestamp="20231129 08:37:40.668" level="INFO">${result} = {
    "Bucket": "erasure",
    "Key": "ozone-test-5750821793/copyrange/destination",
    "UploadId": "b6b2d247-61b7-4146-ae83-fa11d52ee870-111492927364071472"
}</msg>
<status status="PASS" starttime="20231129 08:37:40.179" endtime="20231129 08:37:40.669"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:40.671" level="INFO">Running command 'echo '{
    "Bucket": "erasure",
    "Key": "ozone-test-5750821793/copyrange/destination",
    "UploadId": "b6b2d247-61b7-4146-ae83-fa11d52ee870-111492927364071472"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:40.697" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:40.697" level="INFO">${output} = b6b2d247-61b7-4146-ae83-fa11d52ee870-111492927364071472</msg>
<status status="PASS" starttime="20231129 08:37:40.669" endtime="20231129 08:37:40.697"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:40.698" level="INFO">b6b2d247-61b7-4146-ae83-fa11d52ee870-111492927364071472</msg>
<status status="PASS" starttime="20231129 08:37:40.698" endtime="20231129 08:37:40.698"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:40.698" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:40.698" endtime="20231129 08:37:40.699"/>
</kw>
<msg timestamp="20231129 08:37:40.699" level="INFO">${uploadID} = b6b2d247-61b7-4146-ae83-fa11d52ee870-111492927364071472</msg>
<status status="PASS" starttime="20231129 08:37:40.669" endtime="20231129 08:37:40.699"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:37:40.699" endtime="20231129 08:37:40.699"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:37:40.699" endtime="20231129 08:37:40.700"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=0-10485757</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:40.703" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket erasure --key ozone-test-5750821793/copyrange/destination --upload-id b6b2d247-61b7-4146-ae83-fa11d52ee870-111492927364071472 --part-number 1 --copy-source erasure/ozone-test-5750821793/copyrange/source --copy-source-range bytes=0-10485757 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:41.579" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:41.579" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/s3v/erasure/ozone-test-5750821793/copyrange/destination-b6b2d247-61b7-4146-ae83-fa11d52ee870-111492927364071472-1",
        "LastModified": "2023-11-29T08:3...</msg>
<status status="PASS" starttime="20231129 08:37:40.702" endtime="20231129 08:37:41.579"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:41.580" level="INFO">{
    "CopyPartResult": {
        "ETag": "/s3v/erasure/ozone-test-5750821793/copyrange/destination-b6b2d247-61b7-4146-ae83-fa11d52ee870-111492927364071472-1",
        "LastModified": "2023-11-29T08:37:41.528Z"
    }
}</msg>
<status status="PASS" starttime="20231129 08:37:41.579" endtime="20231129 08:37:41.580"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:41.580" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:41.580" endtime="20231129 08:37:41.580"/>
</kw>
<status status="PASS" starttime="20231129 08:37:40.702" endtime="20231129 08:37:41.580"/>
</kw>
<msg timestamp="20231129 08:37:41.580" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:40.701" endtime="20231129 08:37:41.581"/>
</kw>
<msg timestamp="20231129 08:37:41.581" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/s3v/erasure/ozone-test-5750821793/copyrange/destination-b6b2d247-61b7-4146-ae83-fa11d52ee870-111492927364071472-1",
        "LastModified": "2023-11-29T08:3...</msg>
<status status="PASS" starttime="20231129 08:37:40.701" endtime="20231129 08:37:41.581"/>
</kw>
<msg timestamp="20231129 08:37:41.581" level="INFO">${result} = {
    "CopyPartResult": {
        "ETag": "/s3v/erasure/ozone-test-5750821793/copyrange/destination-b6b2d247-61b7-4146-ae83-fa11d52ee870-111492927364071472-1",
        "LastModified": "2023-11-29T08:3...</msg>
<status status="PASS" starttime="20231129 08:37:40.700" endtime="20231129 08:37:41.581"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:37:41.581" endtime="20231129 08:37:41.581"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:37:41.581" endtime="20231129 08:37:41.582"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:41.584" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "ETag": "/s3v/erasure/ozone-test-5750821793/copyrange/destination-b6b2d247-61b7-4146-ae83-fa11d52ee870-111492927364071472-1",
        "LastModified": "2023-11-29T08:37:41.528Z"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:41.611" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:41.611" level="INFO">${output} = /s3v/erasure/ozone-test-5750821793/copyrange/destination-b6b2d247-61b7-4146-ae83-fa11d52ee870-111492927364071472-1</msg>
<status status="PASS" starttime="20231129 08:37:41.582" endtime="20231129 08:37:41.611"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:41.612" level="INFO">/s3v/erasure/ozone-test-5750821793/copyrange/destination-b6b2d247-61b7-4146-ae83-fa11d52ee870-111492927364071472-1</msg>
<status status="PASS" starttime="20231129 08:37:41.611" endtime="20231129 08:37:41.612"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:41.612" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:41.612" endtime="20231129 08:37:41.612"/>
</kw>
<msg timestamp="20231129 08:37:41.613" level="INFO">${eTag1} = /s3v/erasure/ozone-test-5750821793/copyrange/destination-b6b2d247-61b7-4146-ae83-fa11d52ee870-111492927364071472-1</msg>
<status status="PASS" starttime="20231129 08:37:41.582" endtime="20231129 08:37:41.613"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 2 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=10485758-10485759</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:41.616" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket erasure --key ozone-test-5750821793/copyrange/destination --upload-id b6b2d247-61b7-4146-ae83-fa11d52ee870-111492927364071472 --part-number 2 --copy-source erasure/ozone-test-5750821793/copyrange/source --copy-source-range bytes=10485758-10485759 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:42.189" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:42.189" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/s3v/erasure/ozone-test-5750821793/copyrange/destination-b6b2d247-61b7-4146-ae83-fa11d52ee870-111492927364071472-2",
        "LastModified": "2023-11-29T08:3...</msg>
<status status="PASS" starttime="20231129 08:37:41.615" endtime="20231129 08:37:42.189"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:42.190" level="INFO">{
    "CopyPartResult": {
        "ETag": "/s3v/erasure/ozone-test-5750821793/copyrange/destination-b6b2d247-61b7-4146-ae83-fa11d52ee870-111492927364071472-2",
        "LastModified": "2023-11-29T08:37:42.148Z"
    }
}</msg>
<status status="PASS" starttime="20231129 08:37:42.189" endtime="20231129 08:37:42.190"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:42.190" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:42.190" endtime="20231129 08:37:42.191"/>
</kw>
<status status="PASS" starttime="20231129 08:37:41.614" endtime="20231129 08:37:42.191"/>
</kw>
<msg timestamp="20231129 08:37:42.191" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:41.614" endtime="20231129 08:37:42.191"/>
</kw>
<msg timestamp="20231129 08:37:42.191" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/s3v/erasure/ozone-test-5750821793/copyrange/destination-b6b2d247-61b7-4146-ae83-fa11d52ee870-111492927364071472-2",
        "LastModified": "2023-11-29T08:3...</msg>
<status status="PASS" starttime="20231129 08:37:41.614" endtime="20231129 08:37:42.191"/>
</kw>
<msg timestamp="20231129 08:37:42.191" level="INFO">${result} = {
    "CopyPartResult": {
        "ETag": "/s3v/erasure/ozone-test-5750821793/copyrange/destination-b6b2d247-61b7-4146-ae83-fa11d52ee870-111492927364071472-2",
        "LastModified": "2023-11-29T08:3...</msg>
<status status="PASS" starttime="20231129 08:37:41.613" endtime="20231129 08:37:42.191"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:37:42.191" endtime="20231129 08:37:42.192"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:37:42.192" endtime="20231129 08:37:42.192"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:42.194" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "ETag": "/s3v/erasure/ozone-test-5750821793/copyrange/destination-b6b2d247-61b7-4146-ae83-fa11d52ee870-111492927364071472-2",
        "LastModified": "2023-11-29T08:37:42.148Z"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:42.220" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:42.220" level="INFO">${output} = /s3v/erasure/ozone-test-5750821793/copyrange/destination-b6b2d247-61b7-4146-ae83-fa11d52ee870-111492927364071472-2</msg>
<status status="PASS" starttime="20231129 08:37:42.193" endtime="20231129 08:37:42.220"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:42.221" level="INFO">/s3v/erasure/ozone-test-5750821793/copyrange/destination-b6b2d247-61b7-4146-ae83-fa11d52ee870-111492927364071472-2</msg>
<status status="PASS" starttime="20231129 08:37:42.221" endtime="20231129 08:37:42.221"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:42.222" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:42.221" endtime="20231129 08:37:42.222"/>
</kw>
<msg timestamp="20231129 08:37:42.222" level="INFO">${eTag2} = /s3v/erasure/ozone-test-5750821793/copyrange/destination-b6b2d247-61b7-4146-ae83-fa11d52ee870-111492927364071472-2</msg>
<status status="PASS" starttime="20231129 08:37:42.192" endtime="20231129 08:37:42.222"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=${eTag2},PartNumber=2}]'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:42.226" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id b6b2d247-61b7-4146-ae83-fa11d52ee870-111492927364071472 --bucket erasure --key ozone-test-5750821793/copyrange/destination --multipart-upload 'Parts=[{ETag=/s3v/erasure/ozone-test-5750821793/copyrange/destination-b6b2d247-61b7-4146-ae83-fa11d52ee870-111492927364071472-1,PartNumber=1},{ETag=/s3v/erasure/ozone-test-5750821793/copyrange/destination-b6b2d247-61b7-4146-ae83-fa11d52ee870-111492927364071472-2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:42.686" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:42.686" level="INFO">${output} = {
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "ozone-test-5750821793/copyrange/destination",
    "ETag": "\"24d794dfc756320ffadb905d526299bc-2\""
}</msg>
<status status="PASS" starttime="20231129 08:37:42.224" endtime="20231129 08:37:42.686"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:42.687" level="INFO">{
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "ozone-test-5750821793/copyrange/destination",
    "ETag": "\"24d794dfc756320ffadb905d526299bc-2\""
}</msg>
<status status="PASS" starttime="20231129 08:37:42.687" endtime="20231129 08:37:42.687"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:42.688" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:42.687" endtime="20231129 08:37:42.688"/>
</kw>
<status status="PASS" starttime="20231129 08:37:42.224" endtime="20231129 08:37:42.688"/>
</kw>
<msg timestamp="20231129 08:37:42.688" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:42.223" endtime="20231129 08:37:42.688"/>
</kw>
<msg timestamp="20231129 08:37:42.688" level="INFO">${output} = {
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "ozone-test-5750821793/copyrange/destination",
    "ETag": "\"24d794dfc756320ffadb905d526299bc-2\""
}</msg>
<status status="PASS" starttime="20231129 08:37:42.223" endtime="20231129 08:37:42.688"/>
</kw>
<status status="PASS" starttime="20231129 08:37:42.222" endtime="20231129 08:37:42.689"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination /tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:42.692" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-5750821793/copyrange/destination /tmp/part-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:43.375" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:43.375" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:37:42 GMT",
    "ContentLength": 10485760,
    "ETag": "\"24d794dfc756320ffadb905d526299bc-2\"",
    "CacheControl": "no-cache",...</msg>
<status status="PASS" starttime="20231129 08:37:42.690" endtime="20231129 08:37:43.375"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:43.376" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:37:42 GMT",
    "ContentLength": 10485760,
    "ETag": "\"24d794dfc756320ffadb905d526299bc-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 29 Nov 2023 08:37:43 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231129 08:37:43.376" endtime="20231129 08:37:43.376"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:43.377" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:43.377" endtime="20231129 08:37:43.377"/>
</kw>
<status status="PASS" starttime="20231129 08:37:42.690" endtime="20231129 08:37:43.377"/>
</kw>
<msg timestamp="20231129 08:37:43.377" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:42.690" endtime="20231129 08:37:43.377"/>
</kw>
<msg timestamp="20231129 08:37:43.377" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:37:42 GMT",
    "ContentLength": 10485760,
    "ETag": "\"24d794dfc756320ffadb905d526299bc-2\"",
    "CacheControl": "no-cache",...</msg>
<status status="PASS" starttime="20231129 08:37:42.689" endtime="20231129 08:37:43.377"/>
</kw>
<status status="PASS" starttime="20231129 08:37:42.689" endtime="20231129 08:37:43.378"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part1</arg>
<arg>/tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:43.381" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:43.400" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:43.401" level="INFO">${output} = fc82b54a384c1583a5efb482bd457aa0</msg>
<status status="PASS" starttime="20231129 08:37:43.379" endtime="20231129 08:37:43.401"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:43.401" level="INFO">fc82b54a384c1583a5efb482bd457aa0</msg>
<status status="PASS" starttime="20231129 08:37:43.401" endtime="20231129 08:37:43.401"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:43.402" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:43.402" endtime="20231129 08:37:43.402"/>
</kw>
<status status="PASS" starttime="20231129 08:37:43.379" endtime="20231129 08:37:43.402"/>
</kw>
<msg timestamp="20231129 08:37:43.402" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:43.379" endtime="20231129 08:37:43.402"/>
</kw>
<msg timestamp="20231129 08:37:43.402" level="INFO">${checksumbefore} = fc82b54a384c1583a5efb482bd457aa0</msg>
<status status="PASS" starttime="20231129 08:37:43.378" endtime="20231129 08:37:43.402"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:43.405" level="INFO">Running command 'md5sum /tmp/part-result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:43.424" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:43.424" level="INFO">${output} = fc82b54a384c1583a5efb482bd457aa0</msg>
<status status="PASS" starttime="20231129 08:37:43.404" endtime="20231129 08:37:43.424"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:43.425" level="INFO">fc82b54a384c1583a5efb482bd457aa0</msg>
<status status="PASS" starttime="20231129 08:37:43.425" endtime="20231129 08:37:43.425"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:43.426" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:43.425" endtime="20231129 08:37:43.426"/>
</kw>
<status status="PASS" starttime="20231129 08:37:43.403" endtime="20231129 08:37:43.426"/>
</kw>
<msg timestamp="20231129 08:37:43.426" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:43.403" endtime="20231129 08:37:43.426"/>
</kw>
<msg timestamp="20231129 08:37:43.426" level="INFO">${checksumafter} = fc82b54a384c1583a5efb482bd457aa0</msg>
<status status="PASS" starttime="20231129 08:37:43.403" endtime="20231129 08:37:43.426"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231129 08:37:43.426" endtime="20231129 08:37:43.427"/>
</kw>
<status status="PASS" starttime="20231129 08:37:43.378" endtime="20231129 08:37:43.427"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:37:39.350" endtime="20231129 08:37:43.427"/>
</test>
<test id="s1-s1-s8-t13" name="Test Multipart Upload Put With Copy and range with IfModifiedSince" line="314">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231129 08:37:43.429" level="INFO">${randStr} = 4275367560</msg>
<status status="PASS" starttime="20231129 08:37:43.429" endtime="20231129 08:37:43.429"/>
</kw>
<msg timestamp="20231129 08:37:43.429" level="INFO">${random} = ozone-test-4275367560</msg>
<status status="PASS" starttime="20231129 08:37:43.428" endtime="20231129 08:37:43.429"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231129 08:37:43.430" level="INFO">${PREFIX} = ozone-test-4275367560</msg>
<status status="PASS" starttime="20231129 08:37:43.429" endtime="20231129 08:37:43.430"/>
</kw>
<status status="PASS" starttime="20231129 08:37:43.428" endtime="20231129 08:37:43.430"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>10</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>10</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:43.433" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=10 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:43.467" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:43.467" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:37:43.432" endtime="20231129 08:37:43.467"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:43.468" level="INFO"/>
<status status="PASS" starttime="20231129 08:37:43.467" endtime="20231129 08:37:43.468"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:43.468" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:43.468" endtime="20231129 08:37:43.469"/>
</kw>
<status status="PASS" starttime="20231129 08:37:43.431" endtime="20231129 08:37:43.469"/>
</kw>
<msg timestamp="20231129 08:37:43.469" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:43.431" endtime="20231129 08:37:43.469"/>
</kw>
<status status="PASS" starttime="20231129 08:37:43.430" endtime="20231129 08:37:43.469"/>
</kw>
<status status="PASS" starttime="20231129 08:37:43.430" endtime="20231129 08:37:43.469"/>
</kw>
<status status="PASS" starttime="20231129 08:37:43.430" endtime="20231129 08:37:43.469"/>
</kw>
<kw name="Get Current Date" library="DateTime">
<var>${curDate}</var>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20231129 08:37:43.470" level="INFO">${curDate} = 2023-11-29 08:37:43.469</msg>
<status status="PASS" starttime="20231129 08:37:43.469" endtime="20231129 08:37:43.470"/>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<var>${beforeCreate}</var>
<arg>${curDate}</arg>
<arg>1 day</arg>
<doc>Subtracts time from date and returns the resulting date.</doc>
<msg timestamp="20231129 08:37:43.473" level="INFO">${beforeCreate} = 2023-11-28 08:37:43.469</msg>
<status status="PASS" starttime="20231129 08:37:43.470" endtime="20231129 08:37:43.473"/>
</kw>
<kw name="Add Time To Date" library="DateTime">
<var>${tomorrow}</var>
<arg>${curDate}</arg>
<arg>1 day</arg>
<doc>Adds time to date and returns the resulting date.</doc>
<msg timestamp="20231129 08:37:43.473" level="INFO">${tomorrow} = 2023-11-30 08:37:43.469</msg>
<status status="PASS" starttime="20231129 08:37:43.473" endtime="20231129 08:37:43.473"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/source --body /tmp/part1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:43.476" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket erasure --key ozone-test-4275367560/copyrange/source --body /tmp/part1 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:44.317" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:44.317" level="INFO">${output} = {
    "ETag": "\"39baf6bd71a4d5ca9f7e79fcd8d85e0f\""
}</msg>
<status status="PASS" starttime="20231129 08:37:43.475" endtime="20231129 08:37:44.318"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:44.318" level="INFO">{
    "ETag": "\"39baf6bd71a4d5ca9f7e79fcd8d85e0f\""
}</msg>
<status status="PASS" starttime="20231129 08:37:44.318" endtime="20231129 08:37:44.319"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:44.319" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:44.319" endtime="20231129 08:37:44.319"/>
</kw>
<status status="PASS" starttime="20231129 08:37:43.475" endtime="20231129 08:37:44.319"/>
</kw>
<msg timestamp="20231129 08:37:44.319" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:43.474" endtime="20231129 08:37:44.319"/>
</kw>
<msg timestamp="20231129 08:37:44.320" level="INFO">${output} = {
    "ETag": "\"39baf6bd71a4d5ca9f7e79fcd8d85e0f\""
}</msg>
<status status="PASS" starttime="20231129 08:37:43.474" endtime="20231129 08:37:44.320"/>
</kw>
<msg timestamp="20231129 08:37:44.320" level="INFO">${result} = {
    "ETag": "\"39baf6bd71a4d5ca9f7e79fcd8d85e0f\""
}</msg>
<status status="PASS" starttime="20231129 08:37:43.473" endtime="20231129 08:37:44.320"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:44.323" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket erasure --key ozone-test-4275367560/copyrange/destination 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:44.770" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:44.770" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-4275367560/copyrange/destination",
    "UploadId": "ba566ecd-e45d-4c4b-860e-7450ec4cc335-111492927633752116"
}</msg>
<status status="PASS" starttime="20231129 08:37:44.322" endtime="20231129 08:37:44.770"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:44.771" level="INFO">{
    "Bucket": "erasure",
    "Key": "ozone-test-4275367560/copyrange/destination",
    "UploadId": "ba566ecd-e45d-4c4b-860e-7450ec4cc335-111492927633752116"
}</msg>
<status status="PASS" starttime="20231129 08:37:44.771" endtime="20231129 08:37:44.771"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:44.772" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:44.772" endtime="20231129 08:37:44.772"/>
</kw>
<status status="PASS" starttime="20231129 08:37:44.321" endtime="20231129 08:37:44.772"/>
</kw>
<msg timestamp="20231129 08:37:44.772" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:44.321" endtime="20231129 08:37:44.772"/>
</kw>
<msg timestamp="20231129 08:37:44.773" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-4275367560/copyrange/destination",
    "UploadId": "ba566ecd-e45d-4c4b-860e-7450ec4cc335-111492927633752116"
}</msg>
<status status="PASS" starttime="20231129 08:37:44.320" endtime="20231129 08:37:44.773"/>
</kw>
<msg timestamp="20231129 08:37:44.773" level="INFO">${result} = {
    "Bucket": "erasure",
    "Key": "ozone-test-4275367560/copyrange/destination",
    "UploadId": "ba566ecd-e45d-4c4b-860e-7450ec4cc335-111492927633752116"
}</msg>
<status status="PASS" starttime="20231129 08:37:44.320" endtime="20231129 08:37:44.773"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:44.775" level="INFO">Running command 'echo '{
    "Bucket": "erasure",
    "Key": "ozone-test-4275367560/copyrange/destination",
    "UploadId": "ba566ecd-e45d-4c4b-860e-7450ec4cc335-111492927633752116"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:44.801" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:44.801" level="INFO">${output} = ba566ecd-e45d-4c4b-860e-7450ec4cc335-111492927633752116</msg>
<status status="PASS" starttime="20231129 08:37:44.773" endtime="20231129 08:37:44.801"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:44.802" level="INFO">ba566ecd-e45d-4c4b-860e-7450ec4cc335-111492927633752116</msg>
<status status="PASS" starttime="20231129 08:37:44.801" endtime="20231129 08:37:44.802"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:44.802" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:44.802" endtime="20231129 08:37:44.802"/>
</kw>
<msg timestamp="20231129 08:37:44.802" level="INFO">${uploadID} = ba566ecd-e45d-4c4b-860e-7450ec4cc335-111492927633752116</msg>
<status status="PASS" starttime="20231129 08:37:44.773" endtime="20231129 08:37:44.802"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:37:44.803" endtime="20231129 08:37:44.803"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:37:44.803" endtime="20231129 08:37:44.803"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/source</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:44.806" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket erasure --key ozone-test-4275367560/copyrange/source 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:45.247" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:45.247" level="INFO">${output} = {
    "LastModified": "Wed, 29 Nov 2023 08:37:44 GMT",
    "ContentLength": 10485760,
    "ETag": "\"39baf6bd71a4d5ca9f7e79fcd8d85e0f\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/oct...</msg>
<status status="PASS" starttime="20231129 08:37:44.805" endtime="20231129 08:37:45.247"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:45.248" level="INFO">{
    "LastModified": "Wed, 29 Nov 2023 08:37:44 GMT",
    "ContentLength": 10485760,
    "ETag": "\"39baf6bd71a4d5ca9f7e79fcd8d85e0f\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Wed, 29 Nov 2023 08:37:45 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231129 08:37:45.247" endtime="20231129 08:37:45.248"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:45.248" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:45.248" endtime="20231129 08:37:45.248"/>
</kw>
<status status="PASS" starttime="20231129 08:37:44.805" endtime="20231129 08:37:45.249"/>
</kw>
<msg timestamp="20231129 08:37:45.249" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:44.804" endtime="20231129 08:37:45.249"/>
</kw>
<msg timestamp="20231129 08:37:45.249" level="INFO">${output} = {
    "LastModified": "Wed, 29 Nov 2023 08:37:44 GMT",
    "ContentLength": 10485760,
    "ETag": "\"39baf6bd71a4d5ca9f7e79fcd8d85e0f\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/oct...</msg>
<status status="PASS" starttime="20231129 08:37:44.804" endtime="20231129 08:37:45.249"/>
</kw>
<msg timestamp="20231129 08:37:45.249" level="INFO">${result} = {
    "LastModified": "Wed, 29 Nov 2023 08:37:44 GMT",
    "ContentLength": 10485760,
    "ETag": "\"39baf6bd71a4d5ca9f7e79fcd8d85e0f\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/oct...</msg>
<status status="PASS" starttime="20231129 08:37:44.803" endtime="20231129 08:37:45.249"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${lastModified}</var>
<arg>echo '${result}' | jq -r '.LastModified'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:45.251" level="INFO">Running command 'echo '{
    "LastModified": "Wed, 29 Nov 2023 08:37:44 GMT",
    "ContentLength": 10485760,
    "ETag": "\"39baf6bd71a4d5ca9f7e79fcd8d85e0f\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Wed, 29 Nov 2023 08:37:45 GMT",
    "Metadata": {}
}' | jq -r '.LastModified' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:45.277" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:45.277" level="INFO">${output} = Wed, 29 Nov 2023 08:37:44 GMT</msg>
<status status="PASS" starttime="20231129 08:37:45.250" endtime="20231129 08:37:45.277"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:45.278" level="INFO">Wed, 29 Nov 2023 08:37:44 GMT</msg>
<status status="PASS" starttime="20231129 08:37:45.277" endtime="20231129 08:37:45.278"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:45.278" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:45.278" endtime="20231129 08:37:45.278"/>
</kw>
<msg timestamp="20231129 08:37:45.279" level="INFO">${lastModified} = Wed, 29 Nov 2023 08:37:44 GMT</msg>
<status status="PASS" starttime="20231129 08:37:45.249" endtime="20231129 08:37:45.279"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${LastModified}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:37:45.279" endtime="20231129 08:37:45.279"/>
</kw>
<kw name="Convert Date" library="DateTime">
<var>${lmDate}</var>
<arg>${lastModified}</arg>
<arg>date_format=%a, %d %b %Y %H:%M:%S %Z</arg>
<doc>Converts between supported `date formats`.</doc>
<msg timestamp="20231129 08:37:45.281" level="INFO">${lmDate} = 2023-11-29 08:37:44.000</msg>
<status status="PASS" starttime="20231129 08:37:45.279" endtime="20231129 08:37:45.281"/>
</kw>
<kw name="Add Time To Date" library="DateTime">
<var>${afterCreate}</var>
<arg>${lmDate}</arg>
<arg>3 seconds</arg>
<doc>Adds time to date and returns the resulting date.</doc>
<msg timestamp="20231129 08:37:45.282" level="INFO">${afterCreate} = 2023-11-29 08:37:47.000</msg>
<status status="PASS" starttime="20231129 08:37:45.282" endtime="20231129 08:37:45.282"/>
</kw>
<kw name="Wait Til Date Past">
<arg>${afterCreate}</arg>
<kw name="Get Current Date" library="DateTime">
<var>${latestDate}</var>
<arg>UTC</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20231129 08:37:45.283" level="INFO">${latestDate} = 2023-11-29 08:37:45.283</msg>
<status status="PASS" starttime="20231129 08:37:45.283" endtime="20231129 08:37:45.283"/>
</kw>
<kw name="Subtract Date From Date" library="DateTime">
<var>${sleepSeconds}</var>
<arg>${date}</arg>
<arg>${latestDate}</arg>
<doc>Subtracts date from another date and returns time between.</doc>
<msg timestamp="20231129 08:37:45.283" level="INFO">${sleepSeconds} = 1.717</msg>
<status status="PASS" starttime="20231129 08:37:45.283" endtime="20231129 08:37:45.283"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${sleepSeconds} &gt; 0</arg>
<arg>Sleep</arg>
<arg>${sleepSeconds}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Sleep" library="BuiltIn">
<arg>${sleepSeconds}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231129 08:37:47.001" level="INFO">Slept 1 second 717 milliseconds</msg>
<status status="PASS" starttime="20231129 08:37:45.284" endtime="20231129 08:37:47.002"/>
</kw>
<status status="PASS" starttime="20231129 08:37:45.284" endtime="20231129 08:37:47.002"/>
</kw>
<status status="PASS" starttime="20231129 08:37:45.282" endtime="20231129 08:37:47.002"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '${afterCreate}'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:47.006" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket erasure --key ozone-test-4275367560/copyrange/destination --upload-id ba566ecd-e45d-4c4b-860e-7450ec4cc335-111492927633752116 --part-number 1 --copy-source erasure/ozone-test-4275367560/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '2023-11-29 08:37:47.000' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:47.445" level="INFO">${rc} = 255</msg>
<msg timestamp="20231129 08:37:47.445" level="INFO">${output} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20231129 08:37:47.003" endtime="20231129 08:37:47.445"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:47.446" level="INFO">
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20231129 08:37:47.445" endtime="20231129 08:37:47.446"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:47.447" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:47.446" endtime="20231129 08:37:47.447"/>
</kw>
<msg timestamp="20231129 08:37:47.447" level="INFO">${output} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20231129 08:37:47.003" endtime="20231129 08:37:47.447"/>
</kw>
<msg timestamp="20231129 08:37:47.447" level="INFO">${result} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20231129 08:37:47.002" endtime="20231129 08:37:47.447"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PreconditionFailed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:37:47.447" endtime="20231129 08:37:47.447"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 2 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=10485758-10485759 --copy-source-if-unmodified-since '${beforeCreate}'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:47.451" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket erasure --key ozone-test-4275367560/copyrange/destination --upload-id ba566ecd-e45d-4c4b-860e-7450ec4cc335-111492927633752116 --part-number 2 --copy-source erasure/ozone-test-4275367560/copyrange/source --copy-source-range bytes=10485758-10485759 --copy-source-if-unmodified-since '2023-11-28 08:37:43.469' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:47.903" level="INFO">${rc} = 255</msg>
<msg timestamp="20231129 08:37:47.903" level="INFO">${output} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20231129 08:37:47.449" endtime="20231129 08:37:47.903"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:47.904" level="INFO">
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20231129 08:37:47.904" endtime="20231129 08:37:47.904"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:47.905" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:47.904" endtime="20231129 08:37:47.905"/>
</kw>
<msg timestamp="20231129 08:37:47.905" level="INFO">${output} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20231129 08:37:47.449" endtime="20231129 08:37:47.905"/>
</kw>
<msg timestamp="20231129 08:37:47.905" level="INFO">${result} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20231129 08:37:47.448" endtime="20231129 08:37:47.905"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PreconditionFailed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:37:47.905" endtime="20231129 08:37:47.906"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '${beforeCreate}'</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:47.909" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket erasure --key ozone-test-4275367560/copyrange/destination --upload-id ba566ecd-e45d-4c4b-860e-7450ec4cc335-111492927633752116 --part-number 1 --copy-source erasure/ozone-test-4275367560/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '2023-11-28 08:37:43.469' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:48.725" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:48.725" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/s3v/erasure/ozone-test-4275367560/copyrange/destination-ba566ecd-e45d-4c4b-860e-7450ec4cc335-111492927633752116-1",
        "LastModified": "2023-11-29T08:3...</msg>
<status status="PASS" starttime="20231129 08:37:47.907" endtime="20231129 08:37:48.725"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:48.726" level="INFO">{
    "CopyPartResult": {
        "ETag": "/s3v/erasure/ozone-test-4275367560/copyrange/destination-ba566ecd-e45d-4c4b-860e-7450ec4cc335-111492927633752116-1",
        "LastModified": "2023-11-29T08:37:48.670Z"
    }
}</msg>
<status status="PASS" starttime="20231129 08:37:48.725" endtime="20231129 08:37:48.726"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:48.726" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:48.726" endtime="20231129 08:37:48.726"/>
</kw>
<msg timestamp="20231129 08:37:48.726" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/s3v/erasure/ozone-test-4275367560/copyrange/destination-ba566ecd-e45d-4c4b-860e-7450ec4cc335-111492927633752116-1",
        "LastModified": "2023-11-29T08:3...</msg>
<status status="PASS" starttime="20231129 08:37:47.907" endtime="20231129 08:37:48.726"/>
</kw>
<msg timestamp="20231129 08:37:48.727" level="INFO">${result} = {
    "CopyPartResult": {
        "ETag": "/s3v/erasure/ozone-test-4275367560/copyrange/destination-ba566ecd-e45d-4c4b-860e-7450ec4cc335-111492927633752116-1",
        "LastModified": "2023-11-29T08:3...</msg>
<status status="PASS" starttime="20231129 08:37:47.906" endtime="20231129 08:37:48.727"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:37:48.727" endtime="20231129 08:37:48.727"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:37:48.727" endtime="20231129 08:37:48.727"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:48.730" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "ETag": "/s3v/erasure/ozone-test-4275367560/copyrange/destination-ba566ecd-e45d-4c4b-860e-7450ec4cc335-111492927633752116-1",
        "LastModified": "2023-11-29T08:37:48.670Z"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:48.757" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:48.757" level="INFO">${output} = /s3v/erasure/ozone-test-4275367560/copyrange/destination-ba566ecd-e45d-4c4b-860e-7450ec4cc335-111492927633752116-1</msg>
<status status="PASS" starttime="20231129 08:37:48.728" endtime="20231129 08:37:48.757"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:48.758" level="INFO">/s3v/erasure/ozone-test-4275367560/copyrange/destination-ba566ecd-e45d-4c4b-860e-7450ec4cc335-111492927633752116-1</msg>
<status status="PASS" starttime="20231129 08:37:48.758" endtime="20231129 08:37:48.758"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:48.759" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:48.758" endtime="20231129 08:37:48.759"/>
</kw>
<msg timestamp="20231129 08:37:48.759" level="INFO">${eTag1} = /s3v/erasure/ozone-test-4275367560/copyrange/destination-ba566ecd-e45d-4c4b-860e-7450ec4cc335-111492927633752116-1</msg>
<status status="PASS" starttime="20231129 08:37:48.728" endtime="20231129 08:37:48.759"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 2 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=10485758-10485759 --copy-source-if-unmodified-since '${afterCreate}'</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:48.762" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket erasure --key ozone-test-4275367560/copyrange/destination --upload-id ba566ecd-e45d-4c4b-860e-7450ec4cc335-111492927633752116 --part-number 2 --copy-source erasure/ozone-test-4275367560/copyrange/source --copy-source-range bytes=10485758-10485759 --copy-source-if-unmodified-since '2023-11-29 08:37:47.000' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:49.283" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:49.283" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/s3v/erasure/ozone-test-4275367560/copyrange/destination-ba566ecd-e45d-4c4b-860e-7450ec4cc335-111492927633752116-2",
        "LastModified": "2023-11-29T08:3...</msg>
<status status="PASS" starttime="20231129 08:37:48.761" endtime="20231129 08:37:49.283"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:49.284" level="INFO">{
    "CopyPartResult": {
        "ETag": "/s3v/erasure/ozone-test-4275367560/copyrange/destination-ba566ecd-e45d-4c4b-860e-7450ec4cc335-111492927633752116-2",
        "LastModified": "2023-11-29T08:37:49.242Z"
    }
}</msg>
<status status="PASS" starttime="20231129 08:37:49.283" endtime="20231129 08:37:49.284"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:49.284" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:49.284" endtime="20231129 08:37:49.284"/>
</kw>
<msg timestamp="20231129 08:37:49.285" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/s3v/erasure/ozone-test-4275367560/copyrange/destination-ba566ecd-e45d-4c4b-860e-7450ec4cc335-111492927633752116-2",
        "LastModified": "2023-11-29T08:3...</msg>
<status status="PASS" starttime="20231129 08:37:48.760" endtime="20231129 08:37:49.285"/>
</kw>
<msg timestamp="20231129 08:37:49.285" level="INFO">${result} = {
    "CopyPartResult": {
        "ETag": "/s3v/erasure/ozone-test-4275367560/copyrange/destination-ba566ecd-e45d-4c4b-860e-7450ec4cc335-111492927633752116-2",
        "LastModified": "2023-11-29T08:3...</msg>
<status status="PASS" starttime="20231129 08:37:48.759" endtime="20231129 08:37:49.285"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:37:49.285" endtime="20231129 08:37:49.285"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:37:49.285" endtime="20231129 08:37:49.286"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:49.288" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "ETag": "/s3v/erasure/ozone-test-4275367560/copyrange/destination-ba566ecd-e45d-4c4b-860e-7450ec4cc335-111492927633752116-2",
        "LastModified": "2023-11-29T08:37:49.242Z"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:49.314" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:49.314" level="INFO">${output} = /s3v/erasure/ozone-test-4275367560/copyrange/destination-ba566ecd-e45d-4c4b-860e-7450ec4cc335-111492927633752116-2</msg>
<status status="PASS" starttime="20231129 08:37:49.286" endtime="20231129 08:37:49.314"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:49.314" level="INFO">/s3v/erasure/ozone-test-4275367560/copyrange/destination-ba566ecd-e45d-4c4b-860e-7450ec4cc335-111492927633752116-2</msg>
<status status="PASS" starttime="20231129 08:37:49.314" endtime="20231129 08:37:49.314"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:49.315" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:49.315" endtime="20231129 08:37:49.315"/>
</kw>
<msg timestamp="20231129 08:37:49.315" level="INFO">${eTag2} = /s3v/erasure/ozone-test-4275367560/copyrange/destination-ba566ecd-e45d-4c4b-860e-7450ec4cc335-111492927633752116-2</msg>
<status status="PASS" starttime="20231129 08:37:49.286" endtime="20231129 08:37:49.315"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '${tomorrow}'</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:49.318" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket erasure --key ozone-test-4275367560/copyrange/destination --upload-id ba566ecd-e45d-4c4b-860e-7450ec4cc335-111492927633752116 --part-number 1 --copy-source erasure/ozone-test-4275367560/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '2023-11-30 08:37:43.469' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:50.196" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:50.196" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/s3v/erasure/ozone-test-4275367560/copyrange/destination-ba566ecd-e45d-4c4b-860e-7450ec4cc335-111492927633752116-1",
        "LastModified": "2023-11-29T08:3...</msg>
<status status="PASS" starttime="20231129 08:37:49.317" endtime="20231129 08:37:50.196"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:50.197" level="INFO">{
    "CopyPartResult": {
        "ETag": "/s3v/erasure/ozone-test-4275367560/copyrange/destination-ba566ecd-e45d-4c4b-860e-7450ec4cc335-111492927633752116-1",
        "LastModified": "2023-11-29T08:37:50.150Z"
    }
}</msg>
<status status="PASS" starttime="20231129 08:37:50.197" endtime="20231129 08:37:50.197"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:50.198" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:50.197" endtime="20231129 08:37:50.198"/>
</kw>
<msg timestamp="20231129 08:37:50.198" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/s3v/erasure/ozone-test-4275367560/copyrange/destination-ba566ecd-e45d-4c4b-860e-7450ec4cc335-111492927633752116-1",
        "LastModified": "2023-11-29T08:3...</msg>
<status status="PASS" starttime="20231129 08:37:49.316" endtime="20231129 08:37:50.198"/>
</kw>
<msg timestamp="20231129 08:37:50.198" level="INFO">${result} = {
    "CopyPartResult": {
        "ETag": "/s3v/erasure/ozone-test-4275367560/copyrange/destination-ba566ecd-e45d-4c4b-860e-7450ec4cc335-111492927633752116-1",
        "LastModified": "2023-11-29T08:3...</msg>
<status status="PASS" starttime="20231129 08:37:49.315" endtime="20231129 08:37:50.198"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:37:50.199" endtime="20231129 08:37:50.199"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:37:50.199" endtime="20231129 08:37:50.199"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:50.202" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "ETag": "/s3v/erasure/ozone-test-4275367560/copyrange/destination-ba566ecd-e45d-4c4b-860e-7450ec4cc335-111492927633752116-1",
        "LastModified": "2023-11-29T08:37:50.150Z"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:50.230" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:50.230" level="INFO">${output} = /s3v/erasure/ozone-test-4275367560/copyrange/destination-ba566ecd-e45d-4c4b-860e-7450ec4cc335-111492927633752116-1</msg>
<status status="PASS" starttime="20231129 08:37:50.200" endtime="20231129 08:37:50.230"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:50.231" level="INFO">/s3v/erasure/ozone-test-4275367560/copyrange/destination-ba566ecd-e45d-4c4b-860e-7450ec4cc335-111492927633752116-1</msg>
<status status="PASS" starttime="20231129 08:37:50.230" endtime="20231129 08:37:50.231"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:50.231" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:50.231" endtime="20231129 08:37:50.232"/>
</kw>
<msg timestamp="20231129 08:37:50.232" level="INFO">${eTag1} = /s3v/erasure/ozone-test-4275367560/copyrange/destination-ba566ecd-e45d-4c4b-860e-7450ec4cc335-111492927633752116-1</msg>
<status status="PASS" starttime="20231129 08:37:50.199" endtime="20231129 08:37:50.232"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=${eTag2},PartNumber=2}]'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:50.237" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id ba566ecd-e45d-4c4b-860e-7450ec4cc335-111492927633752116 --bucket erasure --key ozone-test-4275367560/copyrange/destination --multipart-upload 'Parts=[{ETag=/s3v/erasure/ozone-test-4275367560/copyrange/destination-ba566ecd-e45d-4c4b-860e-7450ec4cc335-111492927633752116-1,PartNumber=1},{ETag=/s3v/erasure/ozone-test-4275367560/copyrange/destination-ba566ecd-e45d-4c4b-860e-7450ec4cc335-111492927633752116-2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:50.680" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:50.680" level="INFO">${output} = {
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "ozone-test-4275367560/copyrange/destination",
    "ETag": "\"24d794dfc756320ffadb905d526299bc-2\""
}</msg>
<status status="PASS" starttime="20231129 08:37:50.235" endtime="20231129 08:37:50.680"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:50.681" level="INFO">{
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "ozone-test-4275367560/copyrange/destination",
    "ETag": "\"24d794dfc756320ffadb905d526299bc-2\""
}</msg>
<status status="PASS" starttime="20231129 08:37:50.680" endtime="20231129 08:37:50.681"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:50.681" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:50.681" endtime="20231129 08:37:50.681"/>
</kw>
<status status="PASS" starttime="20231129 08:37:50.234" endtime="20231129 08:37:50.682"/>
</kw>
<msg timestamp="20231129 08:37:50.682" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:50.234" endtime="20231129 08:37:50.682"/>
</kw>
<msg timestamp="20231129 08:37:50.682" level="INFO">${output} = {
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "ozone-test-4275367560/copyrange/destination",
    "ETag": "\"24d794dfc756320ffadb905d526299bc-2\""
}</msg>
<status status="PASS" starttime="20231129 08:37:50.233" endtime="20231129 08:37:50.682"/>
</kw>
<status status="PASS" starttime="20231129 08:37:50.232" endtime="20231129 08:37:50.682"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination /tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:50.685" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-4275367560/copyrange/destination /tmp/part-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:51.381" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:51.381" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:37:50 GMT",
    "ContentLength": 10485760,
    "ETag": "\"24d794dfc756320ffadb905d526299bc-2\"",
    "CacheControl": "no-cache",...</msg>
<status status="PASS" starttime="20231129 08:37:50.684" endtime="20231129 08:37:51.381"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:51.382" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:37:50 GMT",
    "ContentLength": 10485760,
    "ETag": "\"24d794dfc756320ffadb905d526299bc-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 29 Nov 2023 08:37:51 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231129 08:37:51.382" endtime="20231129 08:37:51.382"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:51.383" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:51.382" endtime="20231129 08:37:51.383"/>
</kw>
<status status="PASS" starttime="20231129 08:37:50.683" endtime="20231129 08:37:51.383"/>
</kw>
<msg timestamp="20231129 08:37:51.383" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:50.683" endtime="20231129 08:37:51.383"/>
</kw>
<msg timestamp="20231129 08:37:51.384" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:37:50 GMT",
    "ContentLength": 10485760,
    "ETag": "\"24d794dfc756320ffadb905d526299bc-2\"",
    "CacheControl": "no-cache",...</msg>
<status status="PASS" starttime="20231129 08:37:50.683" endtime="20231129 08:37:51.384"/>
</kw>
<status status="PASS" starttime="20231129 08:37:50.682" endtime="20231129 08:37:51.384"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part1</arg>
<arg>/tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:51.399" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:51.429" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:51.429" level="INFO">${output} = 39baf6bd71a4d5ca9f7e79fcd8d85e0f</msg>
<status status="PASS" starttime="20231129 08:37:51.390" endtime="20231129 08:37:51.429"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:51.430" level="INFO">39baf6bd71a4d5ca9f7e79fcd8d85e0f</msg>
<status status="PASS" starttime="20231129 08:37:51.429" endtime="20231129 08:37:51.430"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:51.431" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:51.430" endtime="20231129 08:37:51.431"/>
</kw>
<status status="PASS" starttime="20231129 08:37:51.389" endtime="20231129 08:37:51.431"/>
</kw>
<msg timestamp="20231129 08:37:51.431" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:51.387" endtime="20231129 08:37:51.431"/>
</kw>
<msg timestamp="20231129 08:37:51.432" level="INFO">${checksumbefore} = 39baf6bd71a4d5ca9f7e79fcd8d85e0f</msg>
<status status="PASS" starttime="20231129 08:37:51.385" endtime="20231129 08:37:51.432"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:51.436" level="INFO">Running command 'md5sum /tmp/part-result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:51.461" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:51.461" level="INFO">${output} = 39baf6bd71a4d5ca9f7e79fcd8d85e0f</msg>
<status status="PASS" starttime="20231129 08:37:51.434" endtime="20231129 08:37:51.461"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:51.462" level="INFO">39baf6bd71a4d5ca9f7e79fcd8d85e0f</msg>
<status status="PASS" starttime="20231129 08:37:51.462" endtime="20231129 08:37:51.462"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:51.463" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:51.463" endtime="20231129 08:37:51.463"/>
</kw>
<status status="PASS" starttime="20231129 08:37:51.433" endtime="20231129 08:37:51.463"/>
</kw>
<msg timestamp="20231129 08:37:51.464" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:51.433" endtime="20231129 08:37:51.464"/>
</kw>
<msg timestamp="20231129 08:37:51.464" level="INFO">${checksumafter} = 39baf6bd71a4d5ca9f7e79fcd8d85e0f</msg>
<status status="PASS" starttime="20231129 08:37:51.432" endtime="20231129 08:37:51.464"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231129 08:37:51.464" endtime="20231129 08:37:51.465"/>
</kw>
<status status="PASS" starttime="20231129 08:37:51.384" endtime="20231129 08:37:51.465"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:37:43.427" endtime="20231129 08:37:51.465"/>
</test>
<test id="s1-s1-s8-t14" name="Test Multipart Upload list" line="367">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231129 08:37:51.469" level="INFO">${randStr} = 9245817576</msg>
<status status="PASS" starttime="20231129 08:37:51.469" endtime="20231129 08:37:51.469"/>
</kw>
<msg timestamp="20231129 08:37:51.470" level="INFO">${random} = ozone-test-9245817576</msg>
<status status="PASS" starttime="20231129 08:37:51.468" endtime="20231129 08:37:51.470"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231129 08:37:51.470" level="INFO">${PREFIX} = ozone-test-9245817576</msg>
<status status="PASS" starttime="20231129 08:37:51.470" endtime="20231129 08:37:51.470"/>
</kw>
<status status="PASS" starttime="20231129 08:37:51.468" endtime="20231129 08:37:51.470"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/listtest/key1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:51.475" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket erasure --key ozone-test-9245817576/listtest/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:51.959" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:51.959" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-9245817576/listtest/key1",
    "UploadId": "f5b38f11-dfbd-4e8d-bd0e-1d7690d60863-111492928104693816"
}</msg>
<status status="PASS" starttime="20231129 08:37:51.473" endtime="20231129 08:37:51.959"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:51.960" level="INFO">{
    "Bucket": "erasure",
    "Key": "ozone-test-9245817576/listtest/key1",
    "UploadId": "f5b38f11-dfbd-4e8d-bd0e-1d7690d60863-111492928104693816"
}</msg>
<status status="PASS" starttime="20231129 08:37:51.960" endtime="20231129 08:37:51.960"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:51.961" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:51.960" endtime="20231129 08:37:51.961"/>
</kw>
<status status="PASS" starttime="20231129 08:37:51.472" endtime="20231129 08:37:51.961"/>
</kw>
<msg timestamp="20231129 08:37:51.961" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:51.472" endtime="20231129 08:37:51.961"/>
</kw>
<msg timestamp="20231129 08:37:51.961" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-9245817576/listtest/key1",
    "UploadId": "f5b38f11-dfbd-4e8d-bd0e-1d7690d60863-111492928104693816"
}</msg>
<status status="PASS" starttime="20231129 08:37:51.471" endtime="20231129 08:37:51.961"/>
</kw>
<msg timestamp="20231129 08:37:51.961" level="INFO">${result} = {
    "Bucket": "erasure",
    "Key": "ozone-test-9245817576/listtest/key1",
    "UploadId": "f5b38f11-dfbd-4e8d-bd0e-1d7690d60863-111492928104693816"
}</msg>
<status status="PASS" starttime="20231129 08:37:51.471" endtime="20231129 08:37:51.962"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID1}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:51.964" level="INFO">Running command 'echo '{
    "Bucket": "erasure",
    "Key": "ozone-test-9245817576/listtest/key1",
    "UploadId": "f5b38f11-dfbd-4e8d-bd0e-1d7690d60863-111492928104693816"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:51.990" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:51.990" level="INFO">${output} = f5b38f11-dfbd-4e8d-bd0e-1d7690d60863-111492928104693816</msg>
<status status="PASS" starttime="20231129 08:37:51.962" endtime="20231129 08:37:51.990"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:51.991" level="INFO">f5b38f11-dfbd-4e8d-bd0e-1d7690d60863-111492928104693816</msg>
<status status="PASS" starttime="20231129 08:37:51.990" endtime="20231129 08:37:51.991"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:51.991" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:51.991" endtime="20231129 08:37:51.991"/>
</kw>
<msg timestamp="20231129 08:37:51.992" level="INFO">${uploadID1} = f5b38f11-dfbd-4e8d-bd0e-1d7690d60863-111492928104693816</msg>
<status status="PASS" starttime="20231129 08:37:51.962" endtime="20231129 08:37:51.992"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:37:51.992" endtime="20231129 08:37:51.992"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/listtest/key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:37:51.992" endtime="20231129 08:37:51.992"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:37:51.993" endtime="20231129 08:37:51.993"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/listtest/key2</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:51.996" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket erasure --key ozone-test-9245817576/listtest/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:52.475" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:52.475" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-9245817576/listtest/key2",
    "UploadId": "426c274c-35c1-4861-95ac-064ceefdde06-111492928138969145"
}</msg>
<status status="PASS" starttime="20231129 08:37:51.995" endtime="20231129 08:37:52.475"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:52.476" level="INFO">{
    "Bucket": "erasure",
    "Key": "ozone-test-9245817576/listtest/key2",
    "UploadId": "426c274c-35c1-4861-95ac-064ceefdde06-111492928138969145"
}</msg>
<status status="PASS" starttime="20231129 08:37:52.476" endtime="20231129 08:37:52.476"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:52.477" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:52.477" endtime="20231129 08:37:52.477"/>
</kw>
<status status="PASS" starttime="20231129 08:37:51.994" endtime="20231129 08:37:52.477"/>
</kw>
<msg timestamp="20231129 08:37:52.477" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:51.994" endtime="20231129 08:37:52.477"/>
</kw>
<msg timestamp="20231129 08:37:52.477" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-9245817576/listtest/key2",
    "UploadId": "426c274c-35c1-4861-95ac-064ceefdde06-111492928138969145"
}</msg>
<status status="PASS" starttime="20231129 08:37:51.994" endtime="20231129 08:37:52.477"/>
</kw>
<msg timestamp="20231129 08:37:52.478" level="INFO">${result} = {
    "Bucket": "erasure",
    "Key": "ozone-test-9245817576/listtest/key2",
    "UploadId": "426c274c-35c1-4861-95ac-064ceefdde06-111492928138969145"
}</msg>
<status status="PASS" starttime="20231129 08:37:51.993" endtime="20231129 08:37:52.478"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID2}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:52.480" level="INFO">Running command 'echo '{
    "Bucket": "erasure",
    "Key": "ozone-test-9245817576/listtest/key2",
    "UploadId": "426c274c-35c1-4861-95ac-064ceefdde06-111492928138969145"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:52.506" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:52.506" level="INFO">${output} = 426c274c-35c1-4861-95ac-064ceefdde06-111492928138969145</msg>
<status status="PASS" starttime="20231129 08:37:52.478" endtime="20231129 08:37:52.506"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:52.507" level="INFO">426c274c-35c1-4861-95ac-064ceefdde06-111492928138969145</msg>
<status status="PASS" starttime="20231129 08:37:52.507" endtime="20231129 08:37:52.507"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:52.508" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:52.507" endtime="20231129 08:37:52.508"/>
</kw>
<msg timestamp="20231129 08:37:52.508" level="INFO">${uploadID2} = 426c274c-35c1-4861-95ac-064ceefdde06-111492928138969145</msg>
<status status="PASS" starttime="20231129 08:37:52.478" endtime="20231129 08:37:52.508"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:37:52.508" endtime="20231129 08:37:52.509"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/listtest/key2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:37:52.509" endtime="20231129 08:37:52.509"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:37:52.509" endtime="20231129 08:37:52.510"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-multipart-uploads --bucket ${BUCKET} --prefix ${PREFIX}/listtest</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:52.512" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-multipart-uploads --bucket erasure --prefix ozone-test-9245817576/listtest 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:52.969" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:52.969" level="INFO">${output} = {
    "Uploads": [
        {
            "UploadId": "f5b38f11-dfbd-4e8d-bd0e-1d7690d60863-111492928104693816",
            "Key": "ozone-test-9245817576/listtest/key1",
            "Initiated": "2023...</msg>
<status status="PASS" starttime="20231129 08:37:52.511" endtime="20231129 08:37:52.969"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:52.970" level="INFO">{
    "Uploads": [
        {
            "UploadId": "f5b38f11-dfbd-4e8d-bd0e-1d7690d60863-111492928104693816",
            "Key": "ozone-test-9245817576/listtest/key1",
            "Initiated": "2023-11-29T08:37:51.910Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "426c274c-35c1-4861-95ac-064ceefdde06-111492928138969145",
            "Key": "ozone-test-9245817576/listtest/key2",
            "Initiated": "2023-11-29T08:37:52.433Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        }
    ]
}</msg>
<status status="PASS" starttime="20231129 08:37:52.970" endtime="20231129 08:37:52.970"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:52.971" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:52.970" endtime="20231129 08:37:52.971"/>
</kw>
<status status="PASS" starttime="20231129 08:37:52.511" endtime="20231129 08:37:52.971"/>
</kw>
<msg timestamp="20231129 08:37:52.971" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:52.511" endtime="20231129 08:37:52.971"/>
</kw>
<msg timestamp="20231129 08:37:52.971" level="INFO">${output} = {
    "Uploads": [
        {
            "UploadId": "f5b38f11-dfbd-4e8d-bd0e-1d7690d60863-111492928104693816",
            "Key": "ozone-test-9245817576/listtest/key1",
            "Initiated": "2023...</msg>
<status status="PASS" starttime="20231129 08:37:52.510" endtime="20231129 08:37:52.971"/>
</kw>
<msg timestamp="20231129 08:37:52.971" level="INFO">${result} = {
    "Uploads": [
        {
            "UploadId": "f5b38f11-dfbd-4e8d-bd0e-1d7690d60863-111492928104693816",
            "Key": "ozone-test-9245817576/listtest/key1",
            "Initiated": "2023...</msg>
<status status="PASS" starttime="20231129 08:37:52.510" endtime="20231129 08:37:52.971"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${uploadID1}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:37:52.972" endtime="20231129 08:37:52.972"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${uploadID2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:37:52.972" endtime="20231129 08:37:52.972"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${count}</var>
<arg>echo '${result}' | jq -r '.Uploads | length'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:52.975" level="INFO">Running command 'echo '{
    "Uploads": [
        {
            "UploadId": "f5b38f11-dfbd-4e8d-bd0e-1d7690d60863-111492928104693816",
            "Key": "ozone-test-9245817576/listtest/key1",
            "Initiated": "2023-11-29T08:37:51.910Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "426c274c-35c1-4861-95ac-064ceefdde06-111492928138969145",
            "Key": "ozone-test-9245817576/listtest/key2",
            "Initiated": "2023-11-29T08:37:52.433Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        }
    ]
}' | jq -r '.Uploads | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:53.001" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:53.001" level="INFO">${output} = 2</msg>
<status status="PASS" starttime="20231129 08:37:52.973" endtime="20231129 08:37:53.001"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:53.002" level="INFO">2</msg>
<status status="PASS" starttime="20231129 08:37:53.001" endtime="20231129 08:37:53.002"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:53.002" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:53.002" endtime="20231129 08:37:53.002"/>
</kw>
<msg timestamp="20231129 08:37:53.002" level="INFO">${count} = 2</msg>
<status status="PASS" starttime="20231129 08:37:52.973" endtime="20231129 08:37:53.002"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${count}</arg>
<arg>2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231129 08:37:53.003" endtime="20231129 08:37:53.003"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:37:51.467" endtime="20231129 08:37:53.003"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20231129 08:37:08.807" endtime="20231129 08:37:53.004"/>
</suite>
<suite id="s1-s1-s9" name="Objectcopy" source="/opt/hadoop/smoketest/s3/objectcopy.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20231129 08:37:53.016" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:53.015" endtime="20231129 08:37:53.016"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231129 08:37:53.016" endtime="20231129 08:37:53.016"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231129 08:37:53.016" endtime="20231129 08:37:53.016"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:37:53.016" endtime="20231129 08:37:53.016"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:37:53.016" endtime="20231129 08:37:53.016"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:37:53.016" endtime="20231129 08:37:53.016"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:37:53.016" endtime="20231129 08:37:53.017"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:37:53.017" endtime="20231129 08:37:53.017"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20231129 08:37:53.017" endtime="20231129 08:37:53.017"/>
</kw>
<status status="PASS" starttime="20231129 08:37:53.015" endtime="20231129 08:37:53.017"/>
</kw>
<test id="s1-s1-s9-t1" name="Copy Object Happy Scenario" line="37">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${DESTBUCKET}' == 'generated1'</arg>
<arg>Create Dest Bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create Dest Bucket">
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231129 08:37:53.019" level="INFO">${postfix} = 37940</msg>
<status status="PASS" starttime="20231129 08:37:53.018" endtime="20231129 08:37:53.019"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${DESTBUCKET}</arg>
<arg>destbucket-${postfix}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231129 08:37:53.019" level="INFO">${DESTBUCKET} = destbucket-37940</msg>
<status status="PASS" starttime="20231129 08:37:53.019" endtime="20231129 08:37:53.019"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>create-bucket --bucket ${DESTBUCKET}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:53.022" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket destbucket-37940 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:53.462" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:53.462" level="INFO">${output} = {
    "Location": "http://s3g:9878/destbucket-37940"
}</msg>
<status status="PASS" starttime="20231129 08:37:53.021" endtime="20231129 08:37:53.462"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:53.463" level="INFO">{
    "Location": "http://s3g:9878/destbucket-37940"
}</msg>
<status status="PASS" starttime="20231129 08:37:53.462" endtime="20231129 08:37:53.463"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:53.464" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:53.463" endtime="20231129 08:37:53.464"/>
</kw>
<status status="PASS" starttime="20231129 08:37:53.020" endtime="20231129 08:37:53.464"/>
</kw>
<msg timestamp="20231129 08:37:53.464" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:53.020" endtime="20231129 08:37:53.464"/>
</kw>
<msg timestamp="20231129 08:37:53.464" level="INFO">${output} = {
    "Location": "http://s3g:9878/destbucket-37940"
}</msg>
<status status="PASS" starttime="20231129 08:37:53.020" endtime="20231129 08:37:53.464"/>
</kw>
<status status="PASS" starttime="20231129 08:37:53.019" endtime="20231129 08:37:53.464"/>
</kw>
<status status="PASS" starttime="20231129 08:37:53.018" endtime="20231129 08:37:53.465"/>
</kw>
<status status="PASS" starttime="20231129 08:37:53.017" endtime="20231129 08:37:53.465"/>
</kw>
<kw name="Execute" library="os">
<arg>date &gt; /tmp/copyfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:53.467" level="INFO">Running command 'date &gt; /tmp/copyfile'.</msg>
<msg timestamp="20231129 08:37:53.469" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:53.469" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:37:53.466" endtime="20231129 08:37:53.469"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:53.470" level="INFO"/>
<status status="PASS" starttime="20231129 08:37:53.469" endtime="20231129 08:37:53.470"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:53.470" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:53.470" endtime="20231129 08:37:53.471"/>
</kw>
<status status="PASS" starttime="20231129 08:37:53.465" endtime="20231129 08:37:53.471"/>
</kw>
<msg timestamp="20231129 08:37:53.471" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:53.465" endtime="20231129 08:37:53.471"/>
</kw>
<status status="PASS" starttime="20231129 08:37:53.465" endtime="20231129 08:37:53.471"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/copyobject/key=value/f1 --body /tmp/copyfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:53.474" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket erasure --key ozone-test-9245817576/copyobject/key=value/f1 --body /tmp/copyfile 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:54.019" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:54.019" level="INFO">${output} = {
    "ETag": "\"91c3754d530aa061c5853d67831868a2\""
}</msg>
<status status="PASS" starttime="20231129 08:37:53.473" endtime="20231129 08:37:54.019"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:54.020" level="INFO">{
    "ETag": "\"91c3754d530aa061c5853d67831868a2\""
}</msg>
<status status="PASS" starttime="20231129 08:37:54.020" endtime="20231129 08:37:54.020"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:54.021" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:54.021" endtime="20231129 08:37:54.021"/>
</kw>
<status status="PASS" starttime="20231129 08:37:53.472" endtime="20231129 08:37:54.021"/>
</kw>
<msg timestamp="20231129 08:37:54.021" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:53.472" endtime="20231129 08:37:54.021"/>
</kw>
<msg timestamp="20231129 08:37:54.022" level="INFO">${output} = {
    "ETag": "\"91c3754d530aa061c5853d67831868a2\""
}</msg>
<status status="PASS" starttime="20231129 08:37:53.472" endtime="20231129 08:37:54.022"/>
</kw>
<msg timestamp="20231129 08:37:54.022" level="INFO">${result} = {
    "ETag": "\"91c3754d530aa061c5853d67831868a2\""
}</msg>
<status status="PASS" starttime="20231129 08:37:53.471" endtime="20231129 08:37:54.022"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/copyobject/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:54.025" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket erasure --prefix ozone-test-9245817576/copyobject/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:54.474" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:54.475" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-9245817576/copyobject/key=value/",
            "LastModified": "2023-11-29T08:37:53.896Z",
            "ETag": "2023-11-29T08:37:53.896Z",
...</msg>
<status status="PASS" starttime="20231129 08:37:54.024" endtime="20231129 08:37:54.475"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:54.475" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-9245817576/copyobject/key=value/",
            "LastModified": "2023-11-29T08:37:53.896Z",
            "ETag": "2023-11-29T08:37:53.896Z",
            "Size": 0,
            "StorageClass": "STANDARD"
        },
        {
            "Key": "ozone-test-9245817576/copyobject/key=value/f1",
            "LastModified": "2023-11-29T08:37:53.969Z",
            "ETag": "2023-11-29T08:37:53.969Z",
            "Size": 29,
            "StorageClass": "STANDARD"
        }
    ]
}</msg>
<status status="PASS" starttime="20231129 08:37:54.475" endtime="20231129 08:37:54.476"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:54.476" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:54.476" endtime="20231129 08:37:54.476"/>
</kw>
<status status="PASS" starttime="20231129 08:37:54.023" endtime="20231129 08:37:54.476"/>
</kw>
<msg timestamp="20231129 08:37:54.476" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:54.023" endtime="20231129 08:37:54.477"/>
</kw>
<msg timestamp="20231129 08:37:54.477" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-9245817576/copyobject/key=value/",
            "LastModified": "2023-11-29T08:37:53.896Z",
            "ETag": "2023-11-29T08:37:53.896Z",
...</msg>
<status status="PASS" starttime="20231129 08:37:54.022" endtime="20231129 08:37:54.477"/>
</kw>
<msg timestamp="20231129 08:37:54.477" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-9245817576/copyobject/key=value/",
            "LastModified": "2023-11-29T08:37:53.896Z",
            "ETag": "2023-11-29T08:37:53.896Z",
...</msg>
<status status="PASS" starttime="20231129 08:37:54.022" endtime="20231129 08:37:54.477"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:37:54.477" endtime="20231129 08:37:54.477"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${BUCKET}/${PREFIX}/copyobject/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:54.481" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-37940 --key ozone-test-9245817576/copyobject/key=value/f1 --copy-source erasure/ozone-test-9245817576/copyobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:55.356" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:55.356" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "3b77c4a9-213f-48f0-b62c-ffb8256a4a49",
        "LastModified": "2023-11-29T08:37:55.242Z"
    }
}</msg>
<status status="PASS" starttime="20231129 08:37:54.479" endtime="20231129 08:37:55.356"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:55.357" level="INFO">{
    "CopyObjectResult": {
        "ETag": "3b77c4a9-213f-48f0-b62c-ffb8256a4a49",
        "LastModified": "2023-11-29T08:37:55.242Z"
    }
}</msg>
<status status="PASS" starttime="20231129 08:37:55.357" endtime="20231129 08:37:55.357"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:55.358" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:55.357" endtime="20231129 08:37:55.358"/>
</kw>
<status status="PASS" starttime="20231129 08:37:54.479" endtime="20231129 08:37:55.358"/>
</kw>
<msg timestamp="20231129 08:37:55.358" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:54.479" endtime="20231129 08:37:55.358"/>
</kw>
<msg timestamp="20231129 08:37:55.358" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "3b77c4a9-213f-48f0-b62c-ffb8256a4a49",
        "LastModified": "2023-11-29T08:37:55.242Z"
    }
}</msg>
<status status="PASS" starttime="20231129 08:37:54.478" endtime="20231129 08:37:55.358"/>
</kw>
<msg timestamp="20231129 08:37:55.358" level="INFO">${result} = {
    "CopyObjectResult": {
        "ETag": "3b77c4a9-213f-48f0-b62c-ffb8256a4a49",
        "LastModified": "2023-11-29T08:37:55.242Z"
    }
}</msg>
<status status="PASS" starttime="20231129 08:37:54.478" endtime="20231129 08:37:55.359"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${DESTBUCKET} --prefix ${PREFIX}/copyobject/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:55.362" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket destbucket-37940 --prefix ozone-test-9245817576/copyobject/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:55.812" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:55.812" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-9245817576/copyobject/key=value/f1",
            "LastModified": "2023-11-29T08:37:55.242Z",
            "ETag": "2023-11-29T08:37:55.242Z"...</msg>
<status status="PASS" starttime="20231129 08:37:55.360" endtime="20231129 08:37:55.812"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:55.813" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-9245817576/copyobject/key=value/f1",
            "LastModified": "2023-11-29T08:37:55.242Z",
            "ETag": "2023-11-29T08:37:55.242Z",
            "Size": 29,
            "StorageClass": "STANDARD"
        }
    ]
}</msg>
<status status="PASS" starttime="20231129 08:37:55.812" endtime="20231129 08:37:55.813"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:55.813" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:55.813" endtime="20231129 08:37:55.813"/>
</kw>
<status status="PASS" starttime="20231129 08:37:55.360" endtime="20231129 08:37:55.813"/>
</kw>
<msg timestamp="20231129 08:37:55.813" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:55.360" endtime="20231129 08:37:55.813"/>
</kw>
<msg timestamp="20231129 08:37:55.814" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-9245817576/copyobject/key=value/f1",
            "LastModified": "2023-11-29T08:37:55.242Z",
            "ETag": "2023-11-29T08:37:55.242Z"...</msg>
<status status="PASS" starttime="20231129 08:37:55.359" endtime="20231129 08:37:55.814"/>
</kw>
<msg timestamp="20231129 08:37:55.814" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-9245817576/copyobject/key=value/f1",
            "LastModified": "2023-11-29T08:37:55.242Z",
            "ETag": "2023-11-29T08:37:55.242Z"...</msg>
<status status="PASS" starttime="20231129 08:37:55.359" endtime="20231129 08:37:55.814"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:37:55.814" endtime="20231129 08:37:55.814"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${BUCKET}/${PREFIX}/copyobject/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:55.818" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-37940 --key ozone-test-9245817576/copyobject/key=value/f1 --copy-source erasure/ozone-test-9245817576/copyobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:56.343" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:56.343" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "86eab277-ee35-4b0f-8348-652d3140d3c0",
        "LastModified": "2023-11-29T08:37:56.293Z"
    }
}</msg>
<status status="PASS" starttime="20231129 08:37:55.816" endtime="20231129 08:37:56.343"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:56.344" level="INFO">{
    "CopyObjectResult": {
        "ETag": "86eab277-ee35-4b0f-8348-652d3140d3c0",
        "LastModified": "2023-11-29T08:37:56.293Z"
    }
}</msg>
<status status="PASS" starttime="20231129 08:37:56.343" endtime="20231129 08:37:56.344"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:56.344" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:56.344" endtime="20231129 08:37:56.344"/>
</kw>
<status status="PASS" starttime="20231129 08:37:55.816" endtime="20231129 08:37:56.345"/>
</kw>
<msg timestamp="20231129 08:37:56.345" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:55.816" endtime="20231129 08:37:56.345"/>
</kw>
<msg timestamp="20231129 08:37:56.345" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "86eab277-ee35-4b0f-8348-652d3140d3c0",
        "LastModified": "2023-11-29T08:37:56.293Z"
    }
}</msg>
<status status="PASS" starttime="20231129 08:37:55.815" endtime="20231129 08:37:56.345"/>
</kw>
<msg timestamp="20231129 08:37:56.345" level="INFO">${result} = {
    "CopyObjectResult": {
        "ETag": "86eab277-ee35-4b0f-8348-652d3140d3c0",
        "LastModified": "2023-11-29T08:37:56.293Z"
    }
}</msg>
<status status="PASS" starttime="20231129 08:37:55.814" endtime="20231129 08:37:56.345"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${DESTBUCKET} --prefix ${PREFIX}/copyobject/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:56.349" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket destbucket-37940 --prefix ozone-test-9245817576/copyobject/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:56.798" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:56.798" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-9245817576/copyobject/key=value/f1",
            "LastModified": "2023-11-29T08:37:56.293Z",
            "ETag": "2023-11-29T08:37:56.293Z"...</msg>
<status status="PASS" starttime="20231129 08:37:56.347" endtime="20231129 08:37:56.798"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:56.799" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-9245817576/copyobject/key=value/f1",
            "LastModified": "2023-11-29T08:37:56.293Z",
            "ETag": "2023-11-29T08:37:56.293Z",
            "Size": 29,
            "StorageClass": "STANDARD"
        }
    ]
}</msg>
<status status="PASS" starttime="20231129 08:37:56.798" endtime="20231129 08:37:56.799"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:56.799" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:56.799" endtime="20231129 08:37:56.799"/>
</kw>
<status status="PASS" starttime="20231129 08:37:56.347" endtime="20231129 08:37:56.799"/>
</kw>
<msg timestamp="20231129 08:37:56.800" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:56.346" endtime="20231129 08:37:56.800"/>
</kw>
<msg timestamp="20231129 08:37:56.800" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-9245817576/copyobject/key=value/f1",
            "LastModified": "2023-11-29T08:37:56.293Z",
            "ETag": "2023-11-29T08:37:56.293Z"...</msg>
<status status="PASS" starttime="20231129 08:37:56.346" endtime="20231129 08:37:56.800"/>
</kw>
<msg timestamp="20231129 08:37:56.800" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-9245817576/copyobject/key=value/f1",
            "LastModified": "2023-11-29T08:37:56.293Z",
            "ETag": "2023-11-29T08:37:56.293Z"...</msg>
<status status="PASS" starttime="20231129 08:37:56.345" endtime="20231129 08:37:56.800"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:37:56.800" endtime="20231129 08:37:56.801"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:37:53.017" endtime="20231129 08:37:56.801"/>
</test>
<test id="s1-s1-s9-t2" name="Copy Object Where Bucket is not available" line="52">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket dfdfdfdfdfnonexistent --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${BUCKET}/${PREFIX}/copyobject/key=value/f1</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:56.804" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket dfdfdfdfdfnonexistent --key ozone-test-9245817576/copyobject/key=value/f1 --copy-source erasure/ozone-test-9245817576/copyobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:57.253" level="INFO">${rc} = 255</msg>
<msg timestamp="20231129 08:37:57.253" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20231129 08:37:56.803" endtime="20231129 08:37:57.253"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:57.254" level="INFO">
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20231129 08:37:57.253" endtime="20231129 08:37:57.254"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:57.254" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:57.254" endtime="20231129 08:37:57.254"/>
</kw>
<msg timestamp="20231129 08:37:57.254" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20231129 08:37:56.802" endtime="20231129 08:37:57.254"/>
</kw>
<msg timestamp="20231129 08:37:57.255" level="INFO">${result} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20231129 08:37:56.802" endtime="20231129 08:37:57.255"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchBucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:37:57.255" endtime="20231129 08:37:57.255"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source dfdfdfdfdfnonexistent/${PREFIX}/copyobject/key=value/f1</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:57.258" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-37940 --key ozone-test-9245817576/copyobject/key=value/f1 --copy-source dfdfdfdfdfnonexistent/ozone-test-9245817576/copyobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:57.705" level="INFO">${rc} = 255</msg>
<msg timestamp="20231129 08:37:57.705" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20231129 08:37:57.257" endtime="20231129 08:37:57.705"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:57.706" level="INFO">
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20231129 08:37:57.705" endtime="20231129 08:37:57.706"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:57.707" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:57.706" endtime="20231129 08:37:57.707"/>
</kw>
<msg timestamp="20231129 08:37:57.707" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20231129 08:37:57.256" endtime="20231129 08:37:57.707"/>
</kw>
<msg timestamp="20231129 08:37:57.707" level="INFO">${result} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20231129 08:37:57.255" endtime="20231129 08:37:57.707"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchBucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:37:57.707" endtime="20231129 08:37:57.707"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:37:56.801" endtime="20231129 08:37:57.708"/>
</test>
<test id="s1-s1-s9-t3" name="Copy Object Where both source and dest are same with change to storageclass" line="58">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>copy-object --storage-class REDUCED_REDUNDANCY --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${DESTBUCKET}/${PREFIX}/copyobject/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:57.712" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --storage-class REDUCED_REDUNDANCY --bucket destbucket-37940 --key ozone-test-9245817576/copyobject/key=value/f1 --copy-source destbucket-37940/ozone-test-9245817576/copyobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:58.148" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:58.148" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "a3de3310-4ea7-41e4-a893-f73453887d25",
        "LastModified": "2023-11-29T08:37:58.104Z"
    }
}</msg>
<status status="PASS" starttime="20231129 08:37:57.711" endtime="20231129 08:37:58.148"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:58.149" level="INFO">{
    "CopyObjectResult": {
        "ETag": "a3de3310-4ea7-41e4-a893-f73453887d25",
        "LastModified": "2023-11-29T08:37:58.104Z"
    }
}</msg>
<status status="PASS" starttime="20231129 08:37:58.148" endtime="20231129 08:37:58.149"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:58.149" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:58.149" endtime="20231129 08:37:58.150"/>
</kw>
<status status="PASS" starttime="20231129 08:37:57.710" endtime="20231129 08:37:58.150"/>
</kw>
<msg timestamp="20231129 08:37:58.150" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:57.710" endtime="20231129 08:37:58.150"/>
</kw>
<msg timestamp="20231129 08:37:58.150" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "a3de3310-4ea7-41e4-a893-f73453887d25",
        "LastModified": "2023-11-29T08:37:58.104Z"
    }
}</msg>
<status status="PASS" starttime="20231129 08:37:57.709" endtime="20231129 08:37:58.150"/>
</kw>
<msg timestamp="20231129 08:37:58.150" level="INFO">${result} = {
    "CopyObjectResult": {
        "ETag": "a3de3310-4ea7-41e4-a893-f73453887d25",
        "LastModified": "2023-11-29T08:37:58.104Z"
    }
}</msg>
<status status="PASS" starttime="20231129 08:37:57.709" endtime="20231129 08:37:58.150"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:37:58.151" endtime="20231129 08:37:58.151"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:37:57.708" endtime="20231129 08:37:58.151"/>
</test>
<test id="s1-s1-s9-t4" name="Copy Object Where Key not available" line="62">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${BUCKET}/nonnonexistentkey</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:58.155" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-37940 --key ozone-test-9245817576/copyobject/key=value/f1 --copy-source erasure/nonnonexistentkey 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:58.623" level="INFO">${rc} = 255</msg>
<msg timestamp="20231129 08:37:58.623" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20231129 08:37:58.153" endtime="20231129 08:37:58.623"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:58.624" level="INFO">
An error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20231129 08:37:58.623" endtime="20231129 08:37:58.624"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:58.625" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:58.624" endtime="20231129 08:37:58.625"/>
</kw>
<msg timestamp="20231129 08:37:58.625" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20231129 08:37:58.153" endtime="20231129 08:37:58.625"/>
</kw>
<msg timestamp="20231129 08:37:58.625" level="INFO">${result} = 
An error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20231129 08:37:58.152" endtime="20231129 08:37:58.625"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:37:58.625" endtime="20231129 08:37:58.626"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:37:58.152" endtime="20231129 08:37:58.626"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20231129 08:37:53.006" endtime="20231129 08:37:58.627"/>
</suite>
<suite id="s1-s1-s10" name="Objectcopys3A" source="/opt/hadoop/smoketest/s3/objectcopys3a.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20231129 08:37:58.637" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:58.637" endtime="20231129 08:37:58.637"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231129 08:37:58.637" endtime="20231129 08:37:58.637"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231129 08:37:58.637" endtime="20231129 08:37:58.637"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:37:58.637" endtime="20231129 08:37:58.637"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:37:58.637" endtime="20231129 08:37:58.638"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:37:58.638" endtime="20231129 08:37:58.638"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:37:58.638" endtime="20231129 08:37:58.638"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:37:58.638" endtime="20231129 08:37:58.638"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20231129 08:37:58.638" endtime="20231129 08:37:58.638"/>
</kw>
<status status="PASS" starttime="20231129 08:37:58.636" endtime="20231129 08:37:58.638"/>
</kw>
<test id="s1-s1-s10-t1" name="Put object s3a simulation" line="30">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:58.641" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile'.</msg>
<msg timestamp="20231129 08:37:58.643" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:58.643" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:37:58.640" endtime="20231129 08:37:58.643"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:58.643" level="INFO"/>
<status status="PASS" starttime="20231129 08:37:58.643" endtime="20231129 08:37:58.643"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:58.644" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:58.643" endtime="20231129 08:37:58.644"/>
</kw>
<status status="PASS" starttime="20231129 08:37:58.639" endtime="20231129 08:37:58.644"/>
</kw>
<msg timestamp="20231129 08:37:58.644" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:58.639" endtime="20231129 08:37:58.644"/>
</kw>
<status status="PASS" starttime="20231129 08:37:58.639" endtime="20231129 08:37:58.644"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/word.txt</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:58.647" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket erasure --key ozone-test-9245817576/word.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:59.099" level="INFO">${rc} = 255</msg>
<msg timestamp="20231129 08:37:59.099" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231129 08:37:58.645" endtime="20231129 08:37:59.099"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:59.100" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231129 08:37:59.099" endtime="20231129 08:37:59.100"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:59.100" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:59.100" endtime="20231129 08:37:59.100"/>
</kw>
<msg timestamp="20231129 08:37:59.100" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231129 08:37:58.645" endtime="20231129 08:37:59.100"/>
</kw>
<msg timestamp="20231129 08:37:59.101" level="INFO">${result} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231129 08:37:58.644" endtime="20231129 08:37:59.101"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/word.txt/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:59.105" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket erasure --prefix ozone-test-9245817576/word.txt/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:37:59.560" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:37:59.560" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:37:59.103" endtime="20231129 08:37:59.561"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:37:59.561" level="INFO"/>
<status status="PASS" starttime="20231129 08:37:59.561" endtime="20231129 08:37:59.562"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:37:59.562" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:37:59.562" endtime="20231129 08:37:59.562"/>
</kw>
<status status="PASS" starttime="20231129 08:37:59.103" endtime="20231129 08:37:59.562"/>
</kw>
<msg timestamp="20231129 08:37:59.562" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:37:59.102" endtime="20231129 08:37:59.562"/>
</kw>
<msg timestamp="20231129 08:37:59.563" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:37:59.101" endtime="20231129 08:37:59.563"/>
</kw>
<msg timestamp="20231129 08:37:59.563" level="INFO">${result} = </msg>
<status status="PASS" starttime="20231129 08:37:59.101" endtime="20231129 08:37:59.563"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>word.txt</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:37:59.563" endtime="20231129 08:37:59.563"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/word.txt._COPYING_</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:37:59.566" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket erasure --key ozone-test-9245817576/word.txt._COPYING_ 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:00.033" level="INFO">${rc} = 255</msg>
<msg timestamp="20231129 08:38:00.033" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231129 08:37:59.564" endtime="20231129 08:38:00.033"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:00.034" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231129 08:38:00.034" endtime="20231129 08:38:00.034"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:00.035" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:00.034" endtime="20231129 08:38:00.035"/>
</kw>
<msg timestamp="20231129 08:38:00.035" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231129 08:37:59.564" endtime="20231129 08:38:00.035"/>
</kw>
<msg timestamp="20231129 08:38:00.036" level="INFO">${result} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231129 08:37:59.563" endtime="20231129 08:38:00.036"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/word.txt._COPYING_/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:00.041" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket erasure --prefix ozone-test-9245817576/word.txt._COPYING_/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:00.525" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:00.525" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:38:00.038" endtime="20231129 08:38:00.525"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:00.526" level="INFO"/>
<status status="PASS" starttime="20231129 08:38:00.525" endtime="20231129 08:38:00.526"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:00.526" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:00.526" endtime="20231129 08:38:00.526"/>
</kw>
<status status="PASS" starttime="20231129 08:38:00.038" endtime="20231129 08:38:00.527"/>
</kw>
<msg timestamp="20231129 08:38:00.527" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:00.037" endtime="20231129 08:38:00.527"/>
</kw>
<msg timestamp="20231129 08:38:00.527" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:38:00.037" endtime="20231129 08:38:00.527"/>
</kw>
<msg timestamp="20231129 08:38:00.527" level="INFO">${result} = </msg>
<status status="PASS" starttime="20231129 08:38:00.036" endtime="20231129 08:38:00.527"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>word.txt._COPYING_</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:38:00.527" endtime="20231129 08:38:00.527"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/word.txt._COPYING_ --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:00.531" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket erasure --key ozone-test-9245817576/word.txt._COPYING_ --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:01.011" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:01.012" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231129 08:38:00.529" endtime="20231129 08:38:01.012"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:01.013" level="INFO">{
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231129 08:38:01.012" endtime="20231129 08:38:01.013"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:01.013" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:01.013" endtime="20231129 08:38:01.013"/>
</kw>
<status status="PASS" starttime="20231129 08:38:00.529" endtime="20231129 08:38:01.013"/>
</kw>
<msg timestamp="20231129 08:38:01.013" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:00.529" endtime="20231129 08:38:01.014"/>
</kw>
<msg timestamp="20231129 08:38:01.014" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231129 08:38:00.528" endtime="20231129 08:38:01.014"/>
</kw>
<msg timestamp="20231129 08:38:01.014" level="INFO">${result} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231129 08:38:00.528" endtime="20231129 08:38:01.014"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/word.txt._COPYING_</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:01.017" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket erasure --key ozone-test-9245817576/word.txt._COPYING_ 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:01.464" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:01.464" level="INFO">${output} = {
    "LastModified": "Wed, 29 Nov 2023 08:38:00 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20231129 08:38:01.015" endtime="20231129 08:38:01.464"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:01.465" level="INFO">{
    "LastModified": "Wed, 29 Nov 2023 08:38:00 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Wed, 29 Nov 2023 08:38:01 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231129 08:38:01.464" endtime="20231129 08:38:01.465"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:01.466" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:01.465" endtime="20231129 08:38:01.466"/>
</kw>
<msg timestamp="20231129 08:38:01.466" level="INFO">${output} = {
    "LastModified": "Wed, 29 Nov 2023 08:38:00 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20231129 08:38:01.015" endtime="20231129 08:38:01.466"/>
</kw>
<status status="PASS" starttime="20231129 08:38:01.014" endtime="20231129 08:38:01.466"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/word.txt</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:01.469" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket erasure --key ozone-test-9245817576/word.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:01.928" level="INFO">${rc} = 255</msg>
<msg timestamp="20231129 08:38:01.928" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231129 08:38:01.467" endtime="20231129 08:38:01.928"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:01.929" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231129 08:38:01.928" endtime="20231129 08:38:01.929"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:01.929" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:01.929" endtime="20231129 08:38:01.929"/>
</kw>
<msg timestamp="20231129 08:38:01.930" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231129 08:38:01.467" endtime="20231129 08:38:01.930"/>
</kw>
<status status="PASS" starttime="20231129 08:38:01.466" endtime="20231129 08:38:01.930"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/word.txt/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:01.933" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket erasure --prefix ozone-test-9245817576/word.txt/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:02.376" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:02.376" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:38:01.932" endtime="20231129 08:38:02.376"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:02.377" level="INFO"/>
<status status="PASS" starttime="20231129 08:38:02.377" endtime="20231129 08:38:02.377"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:02.378" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:02.377" endtime="20231129 08:38:02.378"/>
</kw>
<status status="PASS" starttime="20231129 08:38:01.931" endtime="20231129 08:38:02.378"/>
</kw>
<msg timestamp="20231129 08:38:02.378" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:01.931" endtime="20231129 08:38:02.378"/>
</kw>
<msg timestamp="20231129 08:38:02.378" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:38:01.930" endtime="20231129 08:38:02.378"/>
</kw>
<msg timestamp="20231129 08:38:02.378" level="INFO">${result} = </msg>
<status status="PASS" starttime="20231129 08:38:01.930" endtime="20231129 08:38:02.378"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>word.txt._COPYING_</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:38:02.378" endtime="20231129 08:38:02.379"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${BUCKET} --key ${PREFIX}/word.txt --copy-source ${BUCKET}/${PREFIX}/word.txt._COPYING_</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:02.382" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket erasure --key ozone-test-9245817576/word.txt --copy-source erasure/ozone-test-9245817576/word.txt._COPYING_ 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:02.950" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:02.950" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "d5dda203-ff82-4777-a272-5fa8bb8cceab",
        "LastModified": "2023-11-29T08:38:02.901Z"
    }
}</msg>
<status status="PASS" starttime="20231129 08:38:02.381" endtime="20231129 08:38:02.950"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:02.951" level="INFO">{
    "CopyObjectResult": {
        "ETag": "d5dda203-ff82-4777-a272-5fa8bb8cceab",
        "LastModified": "2023-11-29T08:38:02.901Z"
    }
}</msg>
<status status="PASS" starttime="20231129 08:38:02.951" endtime="20231129 08:38:02.951"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:02.952" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:02.951" endtime="20231129 08:38:02.952"/>
</kw>
<status status="PASS" starttime="20231129 08:38:02.380" endtime="20231129 08:38:02.952"/>
</kw>
<msg timestamp="20231129 08:38:02.952" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:02.380" endtime="20231129 08:38:02.952"/>
</kw>
<msg timestamp="20231129 08:38:02.952" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "d5dda203-ff82-4777-a272-5fa8bb8cceab",
        "LastModified": "2023-11-29T08:38:02.901Z"
    }
}</msg>
<status status="PASS" starttime="20231129 08:38:02.379" endtime="20231129 08:38:02.952"/>
</kw>
<msg timestamp="20231129 08:38:02.952" level="INFO">${result} = {
    "CopyObjectResult": {
        "ETag": "d5dda203-ff82-4777-a272-5fa8bb8cceab",
        "LastModified": "2023-11-29T08:38:02.901Z"
    }
}</msg>
<status status="PASS" starttime="20231129 08:38:02.379" endtime="20231129 08:38:02.952"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/word.txt</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:02.955" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket erasure --key ozone-test-9245817576/word.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:03.393" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:03.393" level="INFO">${output} = {
    "LastModified": "Wed, 29 Nov 2023 08:38:02 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20231129 08:38:02.954" endtime="20231129 08:38:03.393"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:03.394" level="INFO">{
    "LastModified": "Wed, 29 Nov 2023 08:38:02 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Wed, 29 Nov 2023 08:38:03 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231129 08:38:03.393" endtime="20231129 08:38:03.394"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:03.394" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:03.394" endtime="20231129 08:38:03.394"/>
</kw>
<msg timestamp="20231129 08:38:03.395" level="INFO">${output} = {
    "LastModified": "Wed, 29 Nov 2023 08:38:02 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20231129 08:38:02.953" endtime="20231129 08:38:03.395"/>
</kw>
<status status="PASS" starttime="20231129 08:38:02.953" endtime="20231129 08:38:03.395"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/word.txt._COPYING_</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:03.399" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket erasure --key ozone-test-9245817576/word.txt._COPYING_ 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:03.830" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:03.830" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:38:03.397" endtime="20231129 08:38:03.830"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:03.831" level="INFO"/>
<status status="PASS" starttime="20231129 08:38:03.831" endtime="20231129 08:38:03.831"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:03.832" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:03.831" endtime="20231129 08:38:03.832"/>
</kw>
<status status="PASS" starttime="20231129 08:38:03.396" endtime="20231129 08:38:03.832"/>
</kw>
<msg timestamp="20231129 08:38:03.832" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:03.396" endtime="20231129 08:38:03.832"/>
</kw>
<msg timestamp="20231129 08:38:03.832" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:38:03.395" endtime="20231129 08:38:03.832"/>
</kw>
<status status="PASS" starttime="20231129 08:38:03.395" endtime="20231129 08:38:03.833"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/word.txt._COPYING_</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:03.835" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket erasure --key ozone-test-9245817576/word.txt._COPYING_ 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:04.273" level="INFO">${rc} = 255</msg>
<msg timestamp="20231129 08:38:04.274" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231129 08:38:03.834" endtime="20231129 08:38:04.274"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:04.275" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231129 08:38:04.274" endtime="20231129 08:38:04.275"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:04.275" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:04.275" endtime="20231129 08:38:04.276"/>
</kw>
<msg timestamp="20231129 08:38:04.276" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231129 08:38:03.833" endtime="20231129 08:38:04.276"/>
</kw>
<status status="PASS" starttime="20231129 08:38:03.833" endtime="20231129 08:38:04.276"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:37:58.638" endtime="20231129 08:38:04.276"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20231129 08:37:58.628" endtime="20231129 08:38:04.277"/>
</suite>
<suite id="s1-s1-s11" name="Objectdelete" source="/opt/hadoop/smoketest/s3/objectdelete.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20231129 08:38:04.291" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:04.291" endtime="20231129 08:38:04.291"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231129 08:38:04.291" endtime="20231129 08:38:04.291"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231129 08:38:04.291" endtime="20231129 08:38:04.291"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:38:04.292" endtime="20231129 08:38:04.292"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:38:04.292" endtime="20231129 08:38:04.292"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:38:04.292" endtime="20231129 08:38:04.292"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:38:04.292" endtime="20231129 08:38:04.292"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:38:04.293" endtime="20231129 08:38:04.293"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20231129 08:38:04.293" endtime="20231129 08:38:04.293"/>
</kw>
<status status="PASS" starttime="20231129 08:38:04.290" endtime="20231129 08:38:04.293"/>
</kw>
<test id="s1-s1-s11-t1" name="Delete file with s3api" line="30">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:04.297" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20231129 08:38:04.299" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:04.299" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:38:04.295" endtime="20231129 08:38:04.299"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:04.300" level="INFO"/>
<status status="PASS" starttime="20231129 08:38:04.299" endtime="20231129 08:38:04.300"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:04.300" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:04.300" endtime="20231129 08:38:04.301"/>
</kw>
<status status="PASS" starttime="20231129 08:38:04.294" endtime="20231129 08:38:04.301"/>
</kw>
<msg timestamp="20231129 08:38:04.301" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:04.294" endtime="20231129 08:38:04.301"/>
</kw>
<status status="PASS" starttime="20231129 08:38:04.294" endtime="20231129 08:38:04.301"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapi/key=value/f1 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:04.305" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket erasure --key ozone-test-9245817576/deletetestapi/key=value/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:04.846" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:04.846" level="INFO">${output} = {
    "ETag": "\"6d65476e4a9ee46fe826e6da83580a55\""
}</msg>
<status status="PASS" starttime="20231129 08:38:04.304" endtime="20231129 08:38:04.846"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:04.847" level="INFO">{
    "ETag": "\"6d65476e4a9ee46fe826e6da83580a55\""
}</msg>
<status status="PASS" starttime="20231129 08:38:04.846" endtime="20231129 08:38:04.847"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:04.848" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:04.847" endtime="20231129 08:38:04.848"/>
</kw>
<status status="PASS" starttime="20231129 08:38:04.303" endtime="20231129 08:38:04.848"/>
</kw>
<msg timestamp="20231129 08:38:04.848" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:04.303" endtime="20231129 08:38:04.848"/>
</kw>
<msg timestamp="20231129 08:38:04.848" level="INFO">${output} = {
    "ETag": "\"6d65476e4a9ee46fe826e6da83580a55\""
}</msg>
<status status="PASS" starttime="20231129 08:38:04.302" endtime="20231129 08:38:04.848"/>
</kw>
<msg timestamp="20231129 08:38:04.849" level="INFO">${result} = {
    "ETag": "\"6d65476e4a9ee46fe826e6da83580a55\""
}</msg>
<status status="PASS" starttime="20231129 08:38:04.301" endtime="20231129 08:38:04.849"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/deletetestapi/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:04.853" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket erasure --prefix ozone-test-9245817576/deletetestapi/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:05.298" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:05.298" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-9245817576/deletetestapi/key=value/",
            "LastModified": "2023-11-29T08:38:04.715Z",
            "ETag": "2023-11-29T08:38:04.715Z...</msg>
<status status="PASS" starttime="20231129 08:38:04.851" endtime="20231129 08:38:05.298"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:05.299" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-9245817576/deletetestapi/key=value/",
            "LastModified": "2023-11-29T08:38:04.715Z",
            "ETag": "2023-11-29T08:38:04.715Z",
            "Size": 0,
            "StorageClass": "STANDARD"
        },
        {
            "Key": "ozone-test-9245817576/deletetestapi/key=value/f1",
            "LastModified": "2023-11-29T08:38:04.788Z",
            "ETag": "2023-11-29T08:38:04.788Z",
            "Size": 29,
            "StorageClass": "STANDARD"
        }
    ]
}</msg>
<status status="PASS" starttime="20231129 08:38:05.298" endtime="20231129 08:38:05.299"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:05.299" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:05.299" endtime="20231129 08:38:05.299"/>
</kw>
<status status="PASS" starttime="20231129 08:38:04.850" endtime="20231129 08:38:05.300"/>
</kw>
<msg timestamp="20231129 08:38:05.300" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:04.850" endtime="20231129 08:38:05.300"/>
</kw>
<msg timestamp="20231129 08:38:05.300" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-9245817576/deletetestapi/key=value/",
            "LastModified": "2023-11-29T08:38:04.715Z",
            "ETag": "2023-11-29T08:38:04.715Z...</msg>
<status status="PASS" starttime="20231129 08:38:04.850" endtime="20231129 08:38:05.300"/>
</kw>
<msg timestamp="20231129 08:38:05.300" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-9245817576/deletetestapi/key=value/",
            "LastModified": "2023-11-29T08:38:04.715Z",
            "ETag": "2023-11-29T08:38:04.715Z...</msg>
<status status="PASS" starttime="20231129 08:38:04.849" endtime="20231129 08:38:05.300"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>"${PREFIX}/deletetestapi/key=value/f1"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:38:05.300" endtime="20231129 08:38:05.301"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapi/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:05.304" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket erasure --key ozone-test-9245817576/deletetestapi/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:05.750" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:05.750" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:38:05.303" endtime="20231129 08:38:05.750"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:05.751" level="INFO"/>
<status status="PASS" starttime="20231129 08:38:05.751" endtime="20231129 08:38:05.751"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:05.752" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:05.751" endtime="20231129 08:38:05.752"/>
</kw>
<status status="PASS" starttime="20231129 08:38:05.302" endtime="20231129 08:38:05.752"/>
</kw>
<msg timestamp="20231129 08:38:05.752" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:05.302" endtime="20231129 08:38:05.752"/>
</kw>
<msg timestamp="20231129 08:38:05.752" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:38:05.302" endtime="20231129 08:38:05.752"/>
</kw>
<msg timestamp="20231129 08:38:05.753" level="INFO">${result} = </msg>
<status status="PASS" starttime="20231129 08:38:05.301" endtime="20231129 08:38:05.753"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/deletetestapi/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:05.756" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket erasure --prefix ozone-test-9245817576/deletetestapi/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:06.205" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:06.205" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-9245817576/deletetestapi/key=value/",
            "LastModified": "2023-11-29T08:38:04.715Z",
            "ETag": "2023-11-29T08:38:04.715Z...</msg>
<status status="PASS" starttime="20231129 08:38:05.755" endtime="20231129 08:38:06.205"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:06.206" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-9245817576/deletetestapi/key=value/",
            "LastModified": "2023-11-29T08:38:04.715Z",
            "ETag": "2023-11-29T08:38:04.715Z",
            "Size": 0,
            "StorageClass": "STANDARD"
        }
    ]
}</msg>
<status status="PASS" starttime="20231129 08:38:06.205" endtime="20231129 08:38:06.206"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:06.206" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:06.206" endtime="20231129 08:38:06.207"/>
</kw>
<status status="PASS" starttime="20231129 08:38:05.754" endtime="20231129 08:38:06.207"/>
</kw>
<msg timestamp="20231129 08:38:06.207" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:05.754" endtime="20231129 08:38:06.207"/>
</kw>
<msg timestamp="20231129 08:38:06.207" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-9245817576/deletetestapi/key=value/",
            "LastModified": "2023-11-29T08:38:04.715Z",
            "ETag": "2023-11-29T08:38:04.715Z...</msg>
<status status="PASS" starttime="20231129 08:38:05.753" endtime="20231129 08:38:06.207"/>
</kw>
<msg timestamp="20231129 08:38:06.207" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-9245817576/deletetestapi/key=value/",
            "LastModified": "2023-11-29T08:38:04.715Z",
            "ETag": "2023-11-29T08:38:04.715Z...</msg>
<status status="PASS" starttime="20231129 08:38:05.753" endtime="20231129 08:38:06.207"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>"${PREFIX}/deletetestapi/key=value/f1"</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:38:06.207" endtime="20231129 08:38:06.208"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:38:04.293" endtime="20231129 08:38:06.208"/>
</test>
<test id="s1-s1-s11-t2" name="Delete file with s3api, file doesn't exist" line="39">
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:06.213" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://erasure/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:06.654" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:06.654" level="INFO">${output} =                            PRE dir1/
                           PRE multipart/
                           PRE ozone-test-1099910039/
                           PRE ozone-test-2254751542/
             ...</msg>
<status status="PASS" starttime="20231129 08:38:06.211" endtime="20231129 08:38:06.655"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:06.655" level="INFO">                           PRE dir1/
                           PRE multipart/
                           PRE ozone-test-1099910039/
                           PRE ozone-test-2254751542/
                           PRE ozone-test-2764160290/
                           PRE ozone-test-3460166828/
                           PRE ozone-test-4275367560/
                           PRE ozone-test-5750821793/
                           PRE ozone-test-6278244073/
                           PRE ozone-test-7194517773/
                           PRE ozone-test-8189562815/
                           PRE ozone-test-8654674577/
                           PRE ozone-test-9245817576/
                           PRE specialchars/
2023-11-29 08:36:44       4068 README1.md
2023-11-29 08:36:43       4068 README10.md
2023-11-29 08:36:46   20971522 hetyqpsskn
2023-11-29 08:36:43   10485761 multiUpload.1.gz
2023-11-29 08:36:44   10485761 multiUpload.2.gz
2023-11-29 08:36:38         29 testfile</msg>
<status status="PASS" starttime="20231129 08:38:06.655" endtime="20231129 08:38:06.656"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:06.656" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:06.656" endtime="20231129 08:38:06.656"/>
</kw>
<status status="PASS" starttime="20231129 08:38:06.211" endtime="20231129 08:38:06.656"/>
</kw>
<msg timestamp="20231129 08:38:06.656" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:06.210" endtime="20231129 08:38:06.657"/>
</kw>
<msg timestamp="20231129 08:38:06.657" level="INFO">${output} =                            PRE dir1/
                           PRE multipart/
                           PRE ozone-test-1099910039/
                           PRE ozone-test-2254751542/
             ...</msg>
<status status="PASS" starttime="20231129 08:38:06.210" endtime="20231129 08:38:06.657"/>
</kw>
<msg timestamp="20231129 08:38:06.657" level="INFO">${result} =                            PRE dir1/
                           PRE multipart/
                           PRE ozone-test-1099910039/
                           PRE ozone-test-2254751542/
             ...</msg>
<status status="PASS" starttime="20231129 08:38:06.209" endtime="20231129 08:38:06.657"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>thereisnosuchfile</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:38:06.657" endtime="20231129 08:38:06.657"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key thereisnosuchfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:06.661" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket erasure --key thereisnosuchfile 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:07.110" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:07.110" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:38:06.659" endtime="20231129 08:38:07.110"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:07.111" level="INFO"/>
<status status="PASS" starttime="20231129 08:38:07.110" endtime="20231129 08:38:07.111"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:07.111" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:07.111" endtime="20231129 08:38:07.112"/>
</kw>
<status status="PASS" starttime="20231129 08:38:06.659" endtime="20231129 08:38:07.112"/>
</kw>
<msg timestamp="20231129 08:38:07.112" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:06.658" endtime="20231129 08:38:07.112"/>
</kw>
<msg timestamp="20231129 08:38:07.112" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:38:06.658" endtime="20231129 08:38:07.112"/>
</kw>
<msg timestamp="20231129 08:38:07.112" level="INFO">${result} = </msg>
<status status="PASS" starttime="20231129 08:38:06.658" endtime="20231129 08:38:07.112"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:07.115" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://erasure/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:07.556" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:07.556" level="INFO">${output} =                            PRE dir1/
                           PRE multipart/
                           PRE ozone-test-1099910039/
                           PRE ozone-test-2254751542/
             ...</msg>
<status status="PASS" starttime="20231129 08:38:07.114" endtime="20231129 08:38:07.556"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:07.557" level="INFO">                           PRE dir1/
                           PRE multipart/
                           PRE ozone-test-1099910039/
                           PRE ozone-test-2254751542/
                           PRE ozone-test-2764160290/
                           PRE ozone-test-3460166828/
                           PRE ozone-test-4275367560/
                           PRE ozone-test-5750821793/
                           PRE ozone-test-6278244073/
                           PRE ozone-test-7194517773/
                           PRE ozone-test-8189562815/
                           PRE ozone-test-8654674577/
                           PRE ozone-test-9245817576/
                           PRE specialchars/
2023-11-29 08:36:44       4068 README1.md
2023-11-29 08:36:43       4068 README10.md
2023-11-29 08:36:46   20971522 hetyqpsskn
2023-11-29 08:36:43   10485761 multiUpload.1.gz
2023-11-29 08:36:44   10485761 multiUpload.2.gz
2023-11-29 08:36:38         29 testfile</msg>
<status status="PASS" starttime="20231129 08:38:07.557" endtime="20231129 08:38:07.557"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:07.558" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:07.558" endtime="20231129 08:38:07.558"/>
</kw>
<status status="PASS" starttime="20231129 08:38:07.114" endtime="20231129 08:38:07.558"/>
</kw>
<msg timestamp="20231129 08:38:07.558" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:07.113" endtime="20231129 08:38:07.558"/>
</kw>
<msg timestamp="20231129 08:38:07.558" level="INFO">${output} =                            PRE dir1/
                           PRE multipart/
                           PRE ozone-test-1099910039/
                           PRE ozone-test-2254751542/
             ...</msg>
<status status="PASS" starttime="20231129 08:38:07.113" endtime="20231129 08:38:07.558"/>
</kw>
<msg timestamp="20231129 08:38:07.559" level="INFO">${result} =                            PRE dir1/
                           PRE multipart/
                           PRE ozone-test-1099910039/
                           PRE ozone-test-2254751542/
             ...</msg>
<status status="PASS" starttime="20231129 08:38:07.112" endtime="20231129 08:38:07.559"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>thereisnosuchfile</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:38:07.559" endtime="20231129 08:38:07.559"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:38:06.209" endtime="20231129 08:38:07.559"/>
</test>
<test id="s1-s1-s11-t3" name="Delete dir with s3api" line="46">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:07.563" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20231129 08:38:07.565" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:07.565" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:38:07.561" endtime="20231129 08:38:07.565"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:07.566" level="INFO"/>
<status status="PASS" starttime="20231129 08:38:07.565" endtime="20231129 08:38:07.566"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:07.566" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:07.566" endtime="20231129 08:38:07.566"/>
</kw>
<status status="PASS" starttime="20231129 08:38:07.561" endtime="20231129 08:38:07.567"/>
</kw>
<msg timestamp="20231129 08:38:07.567" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:07.561" endtime="20231129 08:38:07.567"/>
</kw>
<status status="PASS" starttime="20231129 08:38:07.560" endtime="20231129 08:38:07.567"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}/${PREFIX}/deletetestapidir/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:07.570" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://erasure/ozone-test-9245817576/deletetestapidir/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:08.050" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:08.050" level="INFO">${output} = Completed 29 Bytes/29 Bytes (548 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://erasure/ozone-test-9245817576/deletetestapidir/key=value/f1</msg>
<status status="PASS" starttime="20231129 08:38:07.569" endtime="20231129 08:38:08.050"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:08.051" level="INFO">Completed 29 Bytes/29 Bytes (548 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://erasure/ozone-test-9245817576/deletetestapidir/key=value/f1</msg>
<status status="PASS" starttime="20231129 08:38:08.051" endtime="20231129 08:38:08.051"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:08.052" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:08.051" endtime="20231129 08:38:08.052"/>
</kw>
<status status="PASS" starttime="20231129 08:38:07.568" endtime="20231129 08:38:08.052"/>
</kw>
<msg timestamp="20231129 08:38:08.052" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:07.568" endtime="20231129 08:38:08.052"/>
</kw>
<msg timestamp="20231129 08:38:08.052" level="INFO">${output} = Completed 29 Bytes/29 Bytes (548 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://erasure/ozone-test-9245817576/deletetestapidir/key=value/f1</msg>
<status status="PASS" starttime="20231129 08:38:07.568" endtime="20231129 08:38:08.052"/>
</kw>
<msg timestamp="20231129 08:38:08.053" level="INFO">${result} = Completed 29 Bytes/29 Bytes (548 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://erasure/ozone-test-9245817576/deletetestapidir/key=value/f1</msg>
<status status="PASS" starttime="20231129 08:38:07.567" endtime="20231129 08:38:08.053"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/${PREFIX}/deletetestapidir/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:08.056" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://erasure/ozone-test-9245817576/deletetestapidir/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:08.485" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:08.485" level="INFO">${output} = 2023-11-29 08:38:07          0 
2023-11-29 08:38:08         29 f1</msg>
<status status="PASS" starttime="20231129 08:38:08.055" endtime="20231129 08:38:08.486"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:08.486" level="INFO">2023-11-29 08:38:07          0 
2023-11-29 08:38:08         29 f1</msg>
<status status="PASS" starttime="20231129 08:38:08.486" endtime="20231129 08:38:08.487"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:08.487" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:08.487" endtime="20231129 08:38:08.487"/>
</kw>
<status status="PASS" starttime="20231129 08:38:08.054" endtime="20231129 08:38:08.487"/>
</kw>
<msg timestamp="20231129 08:38:08.487" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:08.054" endtime="20231129 08:38:08.487"/>
</kw>
<msg timestamp="20231129 08:38:08.487" level="INFO">${output} = 2023-11-29 08:38:07          0 
2023-11-29 08:38:08         29 f1</msg>
<status status="PASS" starttime="20231129 08:38:08.053" endtime="20231129 08:38:08.488"/>
</kw>
<msg timestamp="20231129 08:38:08.488" level="INFO">${result} = 2023-11-29 08:38:07          0 
2023-11-29 08:38:08         29 f1</msg>
<status status="PASS" starttime="20231129 08:38:08.053" endtime="20231129 08:38:08.488"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:38:08.488" endtime="20231129 08:38:08.488"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapidir/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:08.491" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket erasure --key ozone-test-9245817576/deletetestapidir/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:08.932" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:08.932" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:38:08.490" endtime="20231129 08:38:08.932"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:08.933" level="INFO"/>
<status status="PASS" starttime="20231129 08:38:08.933" endtime="20231129 08:38:08.933"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:08.934" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:08.933" endtime="20231129 08:38:08.934"/>
</kw>
<status status="PASS" starttime="20231129 08:38:08.489" endtime="20231129 08:38:08.934"/>
</kw>
<msg timestamp="20231129 08:38:08.934" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:08.489" endtime="20231129 08:38:08.934"/>
</kw>
<msg timestamp="20231129 08:38:08.934" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:38:08.489" endtime="20231129 08:38:08.934"/>
</kw>
<msg timestamp="20231129 08:38:08.935" level="INFO">${result} = </msg>
<status status="PASS" starttime="20231129 08:38:08.488" endtime="20231129 08:38:08.935"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/${PREFIX}/deletetestapidir/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:08.938" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://erasure/ozone-test-9245817576/deletetestapidir/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:09.377" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:09.378" level="INFO">${output} = 2023-11-29 08:38:07          0 
2023-11-29 08:38:08         29 f1</msg>
<status status="PASS" starttime="20231129 08:38:08.937" endtime="20231129 08:38:09.378"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:09.378" level="INFO">2023-11-29 08:38:07          0 
2023-11-29 08:38:08         29 f1</msg>
<status status="PASS" starttime="20231129 08:38:09.378" endtime="20231129 08:38:09.379"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:09.379" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:09.379" endtime="20231129 08:38:09.379"/>
</kw>
<status status="PASS" starttime="20231129 08:38:08.936" endtime="20231129 08:38:09.379"/>
</kw>
<msg timestamp="20231129 08:38:09.379" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:08.936" endtime="20231129 08:38:09.379"/>
</kw>
<msg timestamp="20231129 08:38:09.380" level="INFO">${output} = 2023-11-29 08:38:07          0 
2023-11-29 08:38:08         29 f1</msg>
<status status="PASS" starttime="20231129 08:38:08.935" endtime="20231129 08:38:09.380"/>
</kw>
<msg timestamp="20231129 08:38:09.380" level="INFO">${result} = 2023-11-29 08:38:07          0 
2023-11-29 08:38:08         29 f1</msg>
<status status="PASS" starttime="20231129 08:38:08.935" endtime="20231129 08:38:09.380"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:38:09.380" endtime="20231129 08:38:09.380"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapidir/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:09.384" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket erasure --key ozone-test-9245817576/deletetestapidir/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:09.823" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:09.823" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:38:09.382" endtime="20231129 08:38:09.823"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:09.824" level="INFO"/>
<status status="PASS" starttime="20231129 08:38:09.824" endtime="20231129 08:38:09.824"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:09.825" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:09.825" endtime="20231129 08:38:09.825"/>
</kw>
<status status="PASS" starttime="20231129 08:38:09.382" endtime="20231129 08:38:09.825"/>
</kw>
<msg timestamp="20231129 08:38:09.825" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:09.381" endtime="20231129 08:38:09.825"/>
</kw>
<msg timestamp="20231129 08:38:09.825" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:38:09.381" endtime="20231129 08:38:09.826"/>
</kw>
<msg timestamp="20231129 08:38:09.826" level="INFO">${result} = </msg>
<status status="PASS" starttime="20231129 08:38:09.380" endtime="20231129 08:38:09.826"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:38:07.560" endtime="20231129 08:38:09.826"/>
</test>
<test id="s1-s1-s11-t4" name="Delete file with s3api, file doesn't exist, prefix of a real file" line="57">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:09.830" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20231129 08:38:09.831" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:09.831" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:38:09.828" endtime="20231129 08:38:09.831"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:09.832" level="INFO"/>
<status status="PASS" starttime="20231129 08:38:09.832" endtime="20231129 08:38:09.832"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:09.833" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:09.832" endtime="20231129 08:38:09.833"/>
</kw>
<status status="PASS" starttime="20231129 08:38:09.828" endtime="20231129 08:38:09.833"/>
</kw>
<msg timestamp="20231129 08:38:09.833" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:09.827" endtime="20231129 08:38:09.833"/>
</kw>
<status status="PASS" starttime="20231129 08:38:09.827" endtime="20231129 08:38:09.833"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}/${PREFIX}/deletetestapiprefix/key=value/filefile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:09.836" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://erasure/ozone-test-9245817576/deletetestapiprefix/key=value/filefile 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:10.319" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:10.319" level="INFO">${output} = Completed 29 Bytes/29 Bytes (474 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://erasure/ozone-test-9245817576/deletetestapiprefix/key=value/filefile</msg>
<status status="PASS" starttime="20231129 08:38:09.835" endtime="20231129 08:38:10.319"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:10.320" level="INFO">Completed 29 Bytes/29 Bytes (474 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://erasure/ozone-test-9245817576/deletetestapiprefix/key=value/filefile</msg>
<status status="PASS" starttime="20231129 08:38:10.319" endtime="20231129 08:38:10.320"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:10.320" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:10.320" endtime="20231129 08:38:10.320"/>
</kw>
<status status="PASS" starttime="20231129 08:38:09.834" endtime="20231129 08:38:10.321"/>
</kw>
<msg timestamp="20231129 08:38:10.321" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:09.834" endtime="20231129 08:38:10.321"/>
</kw>
<msg timestamp="20231129 08:38:10.321" level="INFO">${output} = Completed 29 Bytes/29 Bytes (474 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://erasure/ozone-test-9245817576/deletetestapiprefix/key=value/filefile</msg>
<status status="PASS" starttime="20231129 08:38:09.834" endtime="20231129 08:38:10.321"/>
</kw>
<msg timestamp="20231129 08:38:10.321" level="INFO">${result} = Completed 29 Bytes/29 Bytes (474 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://erasure/ozone-test-9245817576/deletetestapiprefix/key=value/filefile</msg>
<status status="PASS" starttime="20231129 08:38:09.833" endtime="20231129 08:38:10.321"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/${PREFIX}/deletetestapiprefix/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:10.325" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://erasure/ozone-test-9245817576/deletetestapiprefix/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:10.768" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:10.768" level="INFO">${output} = 2023-11-29 08:38:10          0 
2023-11-29 08:38:10         29 filefile</msg>
<status status="PASS" starttime="20231129 08:38:10.323" endtime="20231129 08:38:10.768"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:10.769" level="INFO">2023-11-29 08:38:10          0 
2023-11-29 08:38:10         29 filefile</msg>
<status status="PASS" starttime="20231129 08:38:10.769" endtime="20231129 08:38:10.770"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:10.770" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:10.770" endtime="20231129 08:38:10.770"/>
</kw>
<status status="PASS" starttime="20231129 08:38:10.323" endtime="20231129 08:38:10.770"/>
</kw>
<msg timestamp="20231129 08:38:10.770" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:10.322" endtime="20231129 08:38:10.770"/>
</kw>
<msg timestamp="20231129 08:38:10.771" level="INFO">${output} = 2023-11-29 08:38:10          0 
2023-11-29 08:38:10         29 filefile</msg>
<status status="PASS" starttime="20231129 08:38:10.322" endtime="20231129 08:38:10.771"/>
</kw>
<msg timestamp="20231129 08:38:10.771" level="INFO">${result} = 2023-11-29 08:38:10          0 
2023-11-29 08:38:10         29 filefile</msg>
<status status="PASS" starttime="20231129 08:38:10.321" endtime="20231129 08:38:10.771"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>filefile</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:38:10.771" endtime="20231129 08:38:10.771"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapiprefix/key=value/file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:10.774" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket erasure --key ozone-test-9245817576/deletetestapiprefix/key=value/file 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:11.211" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:11.211" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:38:10.773" endtime="20231129 08:38:11.211"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:11.212" level="INFO"/>
<status status="PASS" starttime="20231129 08:38:11.212" endtime="20231129 08:38:11.212"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:11.213" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:11.213" endtime="20231129 08:38:11.213"/>
</kw>
<status status="PASS" starttime="20231129 08:38:10.773" endtime="20231129 08:38:11.213"/>
</kw>
<msg timestamp="20231129 08:38:11.213" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:10.772" endtime="20231129 08:38:11.213"/>
</kw>
<msg timestamp="20231129 08:38:11.213" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:38:10.772" endtime="20231129 08:38:11.213"/>
</kw>
<msg timestamp="20231129 08:38:11.214" level="INFO">${result} = </msg>
<status status="PASS" starttime="20231129 08:38:10.771" endtime="20231129 08:38:11.214"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/${PREFIX}/deletetestapiprefix/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:11.217" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://erasure/ozone-test-9245817576/deletetestapiprefix/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:11.665" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:11.665" level="INFO">${output} = 2023-11-29 08:38:10          0 
2023-11-29 08:38:10         29 filefile</msg>
<status status="PASS" starttime="20231129 08:38:11.215" endtime="20231129 08:38:11.665"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:11.666" level="INFO">2023-11-29 08:38:10          0 
2023-11-29 08:38:10         29 filefile</msg>
<status status="PASS" starttime="20231129 08:38:11.665" endtime="20231129 08:38:11.666"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:11.666" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:11.666" endtime="20231129 08:38:11.666"/>
</kw>
<status status="PASS" starttime="20231129 08:38:11.215" endtime="20231129 08:38:11.667"/>
</kw>
<msg timestamp="20231129 08:38:11.667" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:11.215" endtime="20231129 08:38:11.667"/>
</kw>
<msg timestamp="20231129 08:38:11.667" level="INFO">${output} = 2023-11-29 08:38:10          0 
2023-11-29 08:38:10         29 filefile</msg>
<status status="PASS" starttime="20231129 08:38:11.214" endtime="20231129 08:38:11.667"/>
</kw>
<msg timestamp="20231129 08:38:11.667" level="INFO">${result} = 2023-11-29 08:38:10          0 
2023-11-29 08:38:10         29 filefile</msg>
<status status="PASS" starttime="20231129 08:38:11.214" endtime="20231129 08:38:11.667"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>filefile</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:38:11.667" endtime="20231129 08:38:11.668"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapiprefix/key=value/filefile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:11.671" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket erasure --key ozone-test-9245817576/deletetestapiprefix/key=value/filefile 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:12.109" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:12.109" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:38:11.669" endtime="20231129 08:38:12.109"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:12.110" level="INFO"/>
<status status="PASS" starttime="20231129 08:38:12.109" endtime="20231129 08:38:12.110"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:12.110" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:12.110" endtime="20231129 08:38:12.111"/>
</kw>
<status status="PASS" starttime="20231129 08:38:11.669" endtime="20231129 08:38:12.111"/>
</kw>
<msg timestamp="20231129 08:38:12.111" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:11.669" endtime="20231129 08:38:12.111"/>
</kw>
<msg timestamp="20231129 08:38:12.111" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:38:11.668" endtime="20231129 08:38:12.111"/>
</kw>
<msg timestamp="20231129 08:38:12.111" level="INFO">${result} = </msg>
<status status="PASS" starttime="20231129 08:38:11.668" endtime="20231129 08:38:12.111"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:38:09.826" endtime="20231129 08:38:12.111"/>
</test>
<test id="s1-s1-s11-t5" name="Delete file with s3api, bucket doesn't exist" line="69">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET}-nosuchbucket --key f1</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:12.115" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket erasure-nosuchbucket --key f1 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:12.557" level="INFO">${rc} = 255</msg>
<msg timestamp="20231129 08:38:12.557" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20231129 08:38:12.113" endtime="20231129 08:38:12.557"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:12.558" level="INFO">
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20231129 08:38:12.558" endtime="20231129 08:38:12.558"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:12.559" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:12.558" endtime="20231129 08:38:12.559"/>
</kw>
<msg timestamp="20231129 08:38:12.559" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20231129 08:38:12.113" endtime="20231129 08:38:12.559"/>
</kw>
<msg timestamp="20231129 08:38:12.559" level="INFO">${result} = 
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20231129 08:38:12.113" endtime="20231129 08:38:12.559"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchBucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:38:12.559" endtime="20231129 08:38:12.560"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:38:12.112" endtime="20231129 08:38:12.560"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20231129 08:38:04.278" endtime="20231129 08:38:12.561"/>
</suite>
<suite id="s1-s1-s12" name="Objecthead" source="/opt/hadoop/smoketest/s3/objecthead.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20231129 08:38:12.571" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:12.571" endtime="20231129 08:38:12.571"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231129 08:38:12.572" endtime="20231129 08:38:12.572"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231129 08:38:12.572" endtime="20231129 08:38:12.572"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:38:12.572" endtime="20231129 08:38:12.572"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:38:12.572" endtime="20231129 08:38:12.572"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:38:12.572" endtime="20231129 08:38:12.572"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:38:12.572" endtime="20231129 08:38:12.572"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:38:12.573" endtime="20231129 08:38:12.573"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20231129 08:38:12.573" endtime="20231129 08:38:12.573"/>
</kw>
<status status="PASS" starttime="20231129 08:38:12.571" endtime="20231129 08:38:12.573"/>
</kw>
<test id="s1-s1-s12-t1" name="Head existing object" line="32">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:12.576" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile'.</msg>
<msg timestamp="20231129 08:38:12.577" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:12.577" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:38:12.574" endtime="20231129 08:38:12.577"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:12.578" level="INFO"/>
<status status="PASS" starttime="20231129 08:38:12.578" endtime="20231129 08:38:12.578"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:12.578" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:12.578" endtime="20231129 08:38:12.579"/>
</kw>
<status status="PASS" starttime="20231129 08:38:12.574" endtime="20231129 08:38:12.579"/>
</kw>
<msg timestamp="20231129 08:38:12.579" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:12.574" endtime="20231129 08:38:12.579"/>
</kw>
<status status="PASS" starttime="20231129 08:38:12.573" endtime="20231129 08:38:12.579"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/headobject/key=value/f1 --body /tmp/testfile</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:12.581" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket erasure --key ozone-test-9245817576/headobject/key=value/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:13.129" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:13.129" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231129 08:38:12.580" endtime="20231129 08:38:13.129"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:13.130" level="INFO">{
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231129 08:38:13.129" endtime="20231129 08:38:13.130"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:13.130" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:13.130" endtime="20231129 08:38:13.130"/>
</kw>
<msg timestamp="20231129 08:38:13.131" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231129 08:38:12.580" endtime="20231129 08:38:13.131"/>
</kw>
<msg timestamp="20231129 08:38:13.131" level="INFO">${result} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231129 08:38:12.579" endtime="20231129 08:38:13.131"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/headobject/key=value/f1</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:13.134" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket erasure --key ozone-test-9245817576/headobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:13.575" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:13.575" level="INFO">${output} = {
    "LastModified": "Wed, 29 Nov 2023 08:38:13 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20231129 08:38:13.132" endtime="20231129 08:38:13.575"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:13.576" level="INFO">{
    "LastModified": "Wed, 29 Nov 2023 08:38:13 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Wed, 29 Nov 2023 08:38:13 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231129 08:38:13.576" endtime="20231129 08:38:13.576"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:13.577" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:13.577" endtime="20231129 08:38:13.577"/>
</kw>
<msg timestamp="20231129 08:38:13.577" level="INFO">${output} = {
    "LastModified": "Wed, 29 Nov 2023 08:38:13 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20231129 08:38:13.132" endtime="20231129 08:38:13.577"/>
</kw>
<msg timestamp="20231129 08:38:13.577" level="INFO">${result} = {
    "LastModified": "Wed, 29 Nov 2023 08:38:13 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20231129 08:38:13.131" endtime="20231129 08:38:13.577"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/headobject/key=value/f1</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:13.580" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket erasure --key ozone-test-9245817576/headobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:14.026" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:14.026" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:38:13.579" endtime="20231129 08:38:14.026"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:14.027" level="INFO"/>
<status status="PASS" starttime="20231129 08:38:14.027" endtime="20231129 08:38:14.027"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:14.028" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:14.028" endtime="20231129 08:38:14.028"/>
</kw>
<msg timestamp="20231129 08:38:14.028" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:38:13.578" endtime="20231129 08:38:14.028"/>
</kw>
<msg timestamp="20231129 08:38:14.029" level="INFO">${result} = </msg>
<status status="PASS" starttime="20231129 08:38:13.577" endtime="20231129 08:38:14.029"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:38:12.573" endtime="20231129 08:38:14.029"/>
</test>
<test id="s1-s1-s12-t2" name="Head object in non existing bucket" line="39">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET}-non-existent --key ${PREFIX}/headobject/key=value/f1</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:14.033" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket erasure-non-existent --key ozone-test-9245817576/headobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:14.483" level="INFO">${rc} = 255</msg>
<msg timestamp="20231129 08:38:14.483" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231129 08:38:14.031" endtime="20231129 08:38:14.483"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:14.484" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231129 08:38:14.484" endtime="20231129 08:38:14.484"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:14.485" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:14.484" endtime="20231129 08:38:14.485"/>
</kw>
<msg timestamp="20231129 08:38:14.485" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231129 08:38:14.031" endtime="20231129 08:38:14.485"/>
</kw>
<msg timestamp="20231129 08:38:14.485" level="INFO">${result} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231129 08:38:14.030" endtime="20231129 08:38:14.485"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>404</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:38:14.485" endtime="20231129 08:38:14.486"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Not Found</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:38:14.486" endtime="20231129 08:38:14.486"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:38:14.029" endtime="20231129 08:38:14.486"/>
</test>
<test id="s1-s1-s12-t3" name="Head object where path is a directory" line="43">
<kw name="Create legacy bucket" library="commonawslib">
<var>${legacy-bucket}</var>
<kw name="Generate Ozone String" library="commonawslib">
<var>${postfix}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231129 08:38:14.488" level="INFO">${randStr} = 7176902140</msg>
<status status="PASS" starttime="20231129 08:38:14.488" endtime="20231129 08:38:14.488"/>
</kw>
<msg timestamp="20231129 08:38:14.489" level="INFO">${postfix} = ozone-test-7176902140</msg>
<status status="PASS" starttime="20231129 08:38:14.488" endtime="20231129 08:38:14.489"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${legacy_bucket}</var>
<arg>legacy-bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:38:14.489" level="INFO">${legacy_bucket} = legacy-bucket-ozone-test-7176902140</msg>
<status status="PASS" starttime="20231129 08:38:14.489" endtime="20231129 08:38:14.489"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh bucket create -l LEGACY s3v/${legacy_bucket}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:14.491" level="INFO">Running command 'ozone sh bucket create -l LEGACY s3v/legacy-bucket-ozone-test-7176902140 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:17.951" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:17.951" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:38:14.490" endtime="20231129 08:38:17.952"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:17.952" level="INFO"/>
<status status="PASS" starttime="20231129 08:38:17.952" endtime="20231129 08:38:17.953"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:17.953" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:17.953" endtime="20231129 08:38:17.953"/>
</kw>
<msg timestamp="20231129 08:38:17.953" level="INFO">${result} = </msg>
<status status="PASS" starttime="20231129 08:38:14.489" endtime="20231129 08:38:17.953"/>
</kw>
<msg timestamp="20231129 08:38:17.953" level="INFO">${legacy-bucket} = legacy-bucket-ozone-test-7176902140</msg>
<status status="PASS" starttime="20231129 08:38:14.487" endtime="20231129 08:38:17.953"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${legacy-bucket} --key ${PREFIX}/headobject/keyvalue/f1 --body /tmp/testfile</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:17.956" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket legacy-bucket-ozone-test-7176902140 --key ozone-test-9245817576/headobject/keyvalue/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:18.477" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:18.477" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231129 08:38:17.955" endtime="20231129 08:38:18.477"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:18.478" level="INFO">{
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231129 08:38:18.478" endtime="20231129 08:38:18.478"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:18.479" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:18.479" endtime="20231129 08:38:18.479"/>
</kw>
<msg timestamp="20231129 08:38:18.480" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231129 08:38:17.954" endtime="20231129 08:38:18.480"/>
</kw>
<msg timestamp="20231129 08:38:18.480" level="INFO">${result} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231129 08:38:17.954" endtime="20231129 08:38:18.480"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${legacy-bucket} --key ${PREFIX}/headobject/keyvalue/</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:18.482" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket legacy-bucket-ozone-test-7176902140 --key ozone-test-9245817576/headobject/keyvalue/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:18.927" level="INFO">${rc} = 255</msg>
<msg timestamp="20231129 08:38:18.927" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231129 08:38:18.481" endtime="20231129 08:38:18.927"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:18.928" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231129 08:38:18.927" endtime="20231129 08:38:18.928"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:18.928" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:18.928" endtime="20231129 08:38:18.928"/>
</kw>
<msg timestamp="20231129 08:38:18.928" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231129 08:38:18.480" endtime="20231129 08:38:18.928"/>
</kw>
<msg timestamp="20231129 08:38:18.929" level="INFO">${result} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231129 08:38:18.480" endtime="20231129 08:38:18.929"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>404</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:38:18.929" endtime="20231129 08:38:18.929"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Not Found</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:38:18.929" endtime="20231129 08:38:18.929"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:38:14.487" endtime="20231129 08:38:18.930"/>
</test>
<test id="s1-s1-s12-t4" name="Head directory objects" line="50">
<kw name="Create obs bucket" library="commonawslib">
<var>${obs-bucket}</var>
<kw name="Generate Ozone String" library="commonawslib">
<var>${postfix}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231129 08:38:18.932" level="INFO">${randStr} = 0853203621</msg>
<status status="PASS" starttime="20231129 08:38:18.931" endtime="20231129 08:38:18.932"/>
</kw>
<msg timestamp="20231129 08:38:18.932" level="INFO">${postfix} = ozone-test-0853203621</msg>
<status status="PASS" starttime="20231129 08:38:18.931" endtime="20231129 08:38:18.932"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>obs-bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:38:18.932" level="INFO">${bucket} = obs-bucket-ozone-test-0853203621</msg>
<status status="PASS" starttime="20231129 08:38:18.932" endtime="20231129 08:38:18.932"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh bucket create -l OBJECT_STORE s3v/${bucket}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:18.934" level="INFO">Running command 'ozone sh bucket create -l OBJECT_STORE s3v/obs-bucket-ozone-test-0853203621 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:22.638" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:22.639" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:38:18.933" endtime="20231129 08:38:22.639"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:22.639" level="INFO"/>
<status status="PASS" starttime="20231129 08:38:22.639" endtime="20231129 08:38:22.640"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:22.640" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:22.640" endtime="20231129 08:38:22.640"/>
</kw>
<msg timestamp="20231129 08:38:22.640" level="INFO">${result} = </msg>
<status status="PASS" starttime="20231129 08:38:18.933" endtime="20231129 08:38:22.640"/>
</kw>
<msg timestamp="20231129 08:38:22.641" level="INFO">${obs-bucket} = obs-bucket-ozone-test-0853203621</msg>
<status status="PASS" starttime="20231129 08:38:18.931" endtime="20231129 08:38:22.641"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${obs-bucket} --key ${PREFIX}/mydir/ --body /tmp/testfile</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:22.643" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket obs-bucket-ozone-test-0853203621 --key ozone-test-9245817576/mydir/ --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:23.131" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:23.131" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231129 08:38:22.642" endtime="20231129 08:38:23.131"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:23.132" level="INFO">{
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231129 08:38:23.132" endtime="20231129 08:38:23.132"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:23.133" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:23.132" endtime="20231129 08:38:23.133"/>
</kw>
<msg timestamp="20231129 08:38:23.133" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231129 08:38:22.641" endtime="20231129 08:38:23.133"/>
</kw>
<msg timestamp="20231129 08:38:23.133" level="INFO">${result} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231129 08:38:22.641" endtime="20231129 08:38:23.133"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${obs-bucket} --key ${PREFIX}/mydir</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:23.136" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket obs-bucket-ozone-test-0853203621 --key ozone-test-9245817576/mydir 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:23.571" level="INFO">${rc} = 255</msg>
<msg timestamp="20231129 08:38:23.571" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231129 08:38:23.135" endtime="20231129 08:38:23.571"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:23.572" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231129 08:38:23.571" endtime="20231129 08:38:23.572"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:23.572" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:23.572" endtime="20231129 08:38:23.572"/>
</kw>
<msg timestamp="20231129 08:38:23.572" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231129 08:38:23.134" endtime="20231129 08:38:23.572"/>
</kw>
<msg timestamp="20231129 08:38:23.573" level="INFO">${result} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231129 08:38:23.134" endtime="20231129 08:38:23.573"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>404</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:38:23.573" endtime="20231129 08:38:23.573"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Not Found</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:38:23.573" endtime="20231129 08:38:23.573"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${obs-bucket} --key ${PREFIX}/mydir/</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:23.576" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket obs-bucket-ozone-test-0853203621 --key ozone-test-9245817576/mydir/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:24.011" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:24.011" level="INFO">${output} = {
    "LastModified": "Wed, 29 Nov 2023 08:38:23 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20231129 08:38:23.575" endtime="20231129 08:38:24.011"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:24.012" level="INFO">{
    "LastModified": "Wed, 29 Nov 2023 08:38:23 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Wed, 29 Nov 2023 08:38:23 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231129 08:38:24.012" endtime="20231129 08:38:24.012"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:24.013" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:24.013" endtime="20231129 08:38:24.013"/>
</kw>
<msg timestamp="20231129 08:38:24.013" level="INFO">${output} = {
    "LastModified": "Wed, 29 Nov 2023 08:38:23 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20231129 08:38:23.574" endtime="20231129 08:38:24.013"/>
</kw>
<msg timestamp="20231129 08:38:24.013" level="INFO">${result} = {
    "LastModified": "Wed, 29 Nov 2023 08:38:23 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20231129 08:38:23.574" endtime="20231129 08:38:24.013"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:38:18.930" endtime="20231129 08:38:24.014"/>
</test>
<test id="s1-s1-s12-t5" name="Head non existing key" line="58">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/non-existent</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:24.018" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket erasure --key ozone-test-9245817576/non-existent 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:24.463" level="INFO">${rc} = 255</msg>
<msg timestamp="20231129 08:38:24.463" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231129 08:38:24.016" endtime="20231129 08:38:24.463"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:24.464" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231129 08:38:24.463" endtime="20231129 08:38:24.464"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:24.464" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:24.464" endtime="20231129 08:38:24.464"/>
</kw>
<msg timestamp="20231129 08:38:24.464" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231129 08:38:24.015" endtime="20231129 08:38:24.464"/>
</kw>
<msg timestamp="20231129 08:38:24.465" level="INFO">${result} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231129 08:38:24.015" endtime="20231129 08:38:24.465"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>404</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:38:24.465" endtime="20231129 08:38:24.465"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Not Found</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:38:24.465" endtime="20231129 08:38:24.466"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:38:24.014" endtime="20231129 08:38:24.466"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20231129 08:38:12.562" endtime="20231129 08:38:24.467"/>
</suite>
<suite id="s1-s1-s13" name="Objectmultidelete" source="/opt/hadoop/smoketest/s3/objectmultidelete.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20231129 08:38:24.477" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:24.477" endtime="20231129 08:38:24.478"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231129 08:38:24.478" endtime="20231129 08:38:24.478"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231129 08:38:24.478" endtime="20231129 08:38:24.478"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:38:24.478" endtime="20231129 08:38:24.478"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:38:24.478" endtime="20231129 08:38:24.478"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:38:24.478" endtime="20231129 08:38:24.478"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:38:24.478" endtime="20231129 08:38:24.478"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:38:24.479" endtime="20231129 08:38:24.479"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20231129 08:38:24.479" endtime="20231129 08:38:24.479"/>
</kw>
<status status="PASS" starttime="20231129 08:38:24.477" endtime="20231129 08:38:24.479"/>
</kw>
<test id="s1-s1-s13-t1" name="Delete file with multi delete" line="31">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:24.482" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20231129 08:38:24.484" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:24.484" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:38:24.480" endtime="20231129 08:38:24.484"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:24.485" level="INFO"/>
<status status="PASS" starttime="20231129 08:38:24.484" endtime="20231129 08:38:24.485"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:24.485" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:24.485" endtime="20231129 08:38:24.485"/>
</kw>
<status status="PASS" starttime="20231129 08:38:24.480" endtime="20231129 08:38:24.485"/>
</kw>
<msg timestamp="20231129 08:38:24.485" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:24.480" endtime="20231129 08:38:24.486"/>
</kw>
<status status="PASS" starttime="20231129 08:38:24.479" endtime="20231129 08:38:24.486"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/multidelete/key=value/f1 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:24.489" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket erasure --key ozone-test-9245817576/multidelete/key=value/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:25.051" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:25.051" level="INFO">${output} = {
    "ETag": "\"ccd9ca971f22838d34ff2bb11c7c2375\""
}</msg>
<status status="PASS" starttime="20231129 08:38:24.487" endtime="20231129 08:38:25.051"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:25.052" level="INFO">{
    "ETag": "\"ccd9ca971f22838d34ff2bb11c7c2375\""
}</msg>
<status status="PASS" starttime="20231129 08:38:25.051" endtime="20231129 08:38:25.052"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:25.053" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:25.052" endtime="20231129 08:38:25.053"/>
</kw>
<status status="PASS" starttime="20231129 08:38:24.487" endtime="20231129 08:38:25.053"/>
</kw>
<msg timestamp="20231129 08:38:25.053" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:24.487" endtime="20231129 08:38:25.053"/>
</kw>
<msg timestamp="20231129 08:38:25.054" level="INFO">${output} = {
    "ETag": "\"ccd9ca971f22838d34ff2bb11c7c2375\""
}</msg>
<status status="PASS" starttime="20231129 08:38:24.486" endtime="20231129 08:38:25.054"/>
</kw>
<msg timestamp="20231129 08:38:25.054" level="INFO">${result} = {
    "ETag": "\"ccd9ca971f22838d34ff2bb11c7c2375\""
}</msg>
<status status="PASS" starttime="20231129 08:38:24.486" endtime="20231129 08:38:25.054"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/multidelete/key=value/f2 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:25.058" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket erasure --key ozone-test-9245817576/multidelete/key=value/f2 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:25.643" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:25.643" level="INFO">${output} = {
    "ETag": "\"ccd9ca971f22838d34ff2bb11c7c2375\""
}</msg>
<status status="PASS" starttime="20231129 08:38:25.056" endtime="20231129 08:38:25.643"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:25.644" level="INFO">{
    "ETag": "\"ccd9ca971f22838d34ff2bb11c7c2375\""
}</msg>
<status status="PASS" starttime="20231129 08:38:25.644" endtime="20231129 08:38:25.644"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:25.645" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:25.644" endtime="20231129 08:38:25.645"/>
</kw>
<status status="PASS" starttime="20231129 08:38:25.056" endtime="20231129 08:38:25.645"/>
</kw>
<msg timestamp="20231129 08:38:25.645" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:25.055" endtime="20231129 08:38:25.645"/>
</kw>
<msg timestamp="20231129 08:38:25.645" level="INFO">${output} = {
    "ETag": "\"ccd9ca971f22838d34ff2bb11c7c2375\""
}</msg>
<status status="PASS" starttime="20231129 08:38:25.055" endtime="20231129 08:38:25.645"/>
</kw>
<msg timestamp="20231129 08:38:25.645" level="INFO">${result} = {
    "ETag": "\"ccd9ca971f22838d34ff2bb11c7c2375\""
}</msg>
<status status="PASS" starttime="20231129 08:38:25.054" endtime="20231129 08:38:25.645"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/multidelete/key=value/f3 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:25.649" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket erasure --key ozone-test-9245817576/multidelete/key=value/f3 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:26.151" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:26.151" level="INFO">${output} = {
    "ETag": "\"ccd9ca971f22838d34ff2bb11c7c2375\""
}</msg>
<status status="PASS" starttime="20231129 08:38:25.647" endtime="20231129 08:38:26.151"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:26.152" level="INFO">{
    "ETag": "\"ccd9ca971f22838d34ff2bb11c7c2375\""
}</msg>
<status status="PASS" starttime="20231129 08:38:26.152" endtime="20231129 08:38:26.152"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:26.153" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:26.152" endtime="20231129 08:38:26.153"/>
</kw>
<status status="PASS" starttime="20231129 08:38:25.647" endtime="20231129 08:38:26.153"/>
</kw>
<msg timestamp="20231129 08:38:26.153" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:25.646" endtime="20231129 08:38:26.153"/>
</kw>
<msg timestamp="20231129 08:38:26.153" level="INFO">${output} = {
    "ETag": "\"ccd9ca971f22838d34ff2bb11c7c2375\""
}</msg>
<status status="PASS" starttime="20231129 08:38:25.646" endtime="20231129 08:38:26.153"/>
</kw>
<msg timestamp="20231129 08:38:26.153" level="INFO">${result} = {
    "ETag": "\"ccd9ca971f22838d34ff2bb11c7c2375\""
}</msg>
<status status="PASS" starttime="20231129 08:38:25.645" endtime="20231129 08:38:26.154"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/multidelete/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:26.157" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket erasure --prefix ozone-test-9245817576/multidelete/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:26.605" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:26.605" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-9245817576/multidelete/key=value/",
            "LastModified": "2023-11-29T08:38:24.887Z",
            "ETag": "2023-11-29T08:38:24.887Z",...</msg>
<status status="PASS" starttime="20231129 08:38:26.155" endtime="20231129 08:38:26.605"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:26.606" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-9245817576/multidelete/key=value/",
            "LastModified": "2023-11-29T08:38:24.887Z",
            "ETag": "2023-11-29T08:38:24.887Z",
            "Size": 0,
            "StorageClass": "STANDARD"
        },
        {
            "Key": "ozone-test-9245817576/multidelete/key=value/f1",
            "LastModified": "2023-11-29T08:38:24.981Z",
            "ETag": "2023-11-29T08:38:24.981Z",
            "Size": 29,
            "StorageClass": "STANDARD"
        },
        {
            "Key": "ozone-test-9245817576/multidelete/key=value/f2",
            "LastModified": "2023-11-29T08:38:25.599Z",
            "ETag": "2023-11-29T08:38:25.599Z",
            "Size": 29,
            "StorageClass": "STANDARD"
        },
        {
            "Key": "ozone-test-9245817576/multidelete/key=value/f3",
            "LastModified": "2023-11-29T08:38:26.108Z",
            "ETag": "2023-11-29T08:38:26.108Z",
            "Size": 29,
            "StorageClass": "STANDARD"
        }
    ]
}</msg>
<status status="PASS" starttime="20231129 08:38:26.605" endtime="20231129 08:38:26.606"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:26.606" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:26.606" endtime="20231129 08:38:26.606"/>
</kw>
<status status="PASS" starttime="20231129 08:38:26.155" endtime="20231129 08:38:26.607"/>
</kw>
<msg timestamp="20231129 08:38:26.607" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:26.155" endtime="20231129 08:38:26.607"/>
</kw>
<msg timestamp="20231129 08:38:26.607" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-9245817576/multidelete/key=value/",
            "LastModified": "2023-11-29T08:38:24.887Z",
            "ETag": "2023-11-29T08:38:24.887Z",...</msg>
<status status="PASS" starttime="20231129 08:38:26.154" endtime="20231129 08:38:26.607"/>
</kw>
<msg timestamp="20231129 08:38:26.607" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-9245817576/multidelete/key=value/",
            "LastModified": "2023-11-29T08:38:24.887Z",
            "ETag": "2023-11-29T08:38:24.887Z",...</msg>
<status status="PASS" starttime="20231129 08:38:26.154" endtime="20231129 08:38:26.607"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/key=value/f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:38:26.607" endtime="20231129 08:38:26.608"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/key=value/f2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:38:26.608" endtime="20231129 08:38:26.608"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/key=value/f3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:38:26.608" endtime="20231129 08:38:26.609"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:38:26.609" endtime="20231129 08:38:26.609"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>REDUCED_REDUNDANCY</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:38:26.609" endtime="20231129 08:38:26.610"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-objects --bucket ${BUCKET} --delete 'Objects=[{Key=${PREFIX}/multidelete/key=value/f1},{Key=${PREFIX}/multidelete/key=value/f2},{Key=${PREFIX}/multidelete/key=value/f4}]'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:26.613" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-objects --bucket erasure --delete 'Objects=[{Key=ozone-test-9245817576/multidelete/key=value/f1},{Key=ozone-test-9245817576/multidelete/key=value/f2},{Key=ozone-test-9245817576/multidelete/key=value/f4}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:27.070" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:27.070" level="INFO">${output} = {
    "Deleted": [
        {
            "Key": "ozone-test-9245817576/multidelete/key=value/f1"
        },
        {
            "Key": "ozone-test-9245817576/multidelete/key=value/f2"
        },
   ...</msg>
<status status="PASS" starttime="20231129 08:38:26.612" endtime="20231129 08:38:27.070"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:27.071" level="INFO">{
    "Deleted": [
        {
            "Key": "ozone-test-9245817576/multidelete/key=value/f1"
        },
        {
            "Key": "ozone-test-9245817576/multidelete/key=value/f2"
        },
        {
            "Key": "ozone-test-9245817576/multidelete/key=value/f4"
        }
    ]
}</msg>
<status status="PASS" starttime="20231129 08:38:27.071" endtime="20231129 08:38:27.071"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:27.072" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:27.071" endtime="20231129 08:38:27.072"/>
</kw>
<status status="PASS" starttime="20231129 08:38:26.611" endtime="20231129 08:38:27.072"/>
</kw>
<msg timestamp="20231129 08:38:27.072" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:26.611" endtime="20231129 08:38:27.072"/>
</kw>
<msg timestamp="20231129 08:38:27.072" level="INFO">${output} = {
    "Deleted": [
        {
            "Key": "ozone-test-9245817576/multidelete/key=value/f1"
        },
        {
            "Key": "ozone-test-9245817576/multidelete/key=value/f2"
        },
   ...</msg>
<status status="PASS" starttime="20231129 08:38:26.610" endtime="20231129 08:38:27.072"/>
</kw>
<msg timestamp="20231129 08:38:27.072" level="INFO">${result} = {
    "Deleted": [
        {
            "Key": "ozone-test-9245817576/multidelete/key=value/f1"
        },
        {
            "Key": "ozone-test-9245817576/multidelete/key=value/f2"
        },
   ...</msg>
<status status="PASS" starttime="20231129 08:38:26.610" endtime="20231129 08:38:27.072"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:38:27.073" endtime="20231129 08:38:27.073"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/multidelete/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:27.076" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket erasure --prefix ozone-test-9245817576/multidelete/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:27.519" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:27.519" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-9245817576/multidelete/key=value/",
            "LastModified": "2023-11-29T08:38:24.887Z",
            "ETag": "2023-11-29T08:38:24.887Z",...</msg>
<status status="PASS" starttime="20231129 08:38:27.075" endtime="20231129 08:38:27.519"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:27.520" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-9245817576/multidelete/key=value/",
            "LastModified": "2023-11-29T08:38:24.887Z",
            "ETag": "2023-11-29T08:38:24.887Z",
            "Size": 0,
            "StorageClass": "STANDARD"
        },
        {
            "Key": "ozone-test-9245817576/multidelete/key=value/f3",
            "LastModified": "2023-11-29T08:38:26.108Z",
            "ETag": "2023-11-29T08:38:26.108Z",
            "Size": 29,
            "StorageClass": "STANDARD"
        }
    ]
}</msg>
<status status="PASS" starttime="20231129 08:38:27.520" endtime="20231129 08:38:27.520"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:27.521" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:27.520" endtime="20231129 08:38:27.521"/>
</kw>
<status status="PASS" starttime="20231129 08:38:27.074" endtime="20231129 08:38:27.521"/>
</kw>
<msg timestamp="20231129 08:38:27.521" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:27.074" endtime="20231129 08:38:27.521"/>
</kw>
<msg timestamp="20231129 08:38:27.521" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-9245817576/multidelete/key=value/",
            "LastModified": "2023-11-29T08:38:24.887Z",
            "ETag": "2023-11-29T08:38:24.887Z",...</msg>
<status status="PASS" starttime="20231129 08:38:27.074" endtime="20231129 08:38:27.521"/>
</kw>
<msg timestamp="20231129 08:38:27.522" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-9245817576/multidelete/key=value/",
            "LastModified": "2023-11-29T08:38:24.887Z",
            "ETag": "2023-11-29T08:38:24.887Z",...</msg>
<status status="PASS" starttime="20231129 08:38:27.073" endtime="20231129 08:38:27.522"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/key=value/f1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:38:27.522" endtime="20231129 08:38:27.522"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/key=value/f2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:38:27.522" endtime="20231129 08:38:27.523"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/key=value/f3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:38:27.523" endtime="20231129 08:38:27.523"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:38:27.523" endtime="20231129 08:38:27.524"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>REDUCED_REDUNDANCY</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:38:27.524" endtime="20231129 08:38:27.524"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:38:24.479" endtime="20231129 08:38:27.524"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20231129 08:38:24.468" endtime="20231129 08:38:27.525"/>
</suite>
<suite id="s1-s1-s14" name="Objectputget" source="/opt/hadoop/smoketest/s3/objectputget.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20231129 08:38:27.535" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:27.535" endtime="20231129 08:38:27.535"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231129 08:38:27.535" endtime="20231129 08:38:27.535"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231129 08:38:27.535" endtime="20231129 08:38:27.535"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:38:27.535" endtime="20231129 08:38:27.535"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:38:27.536" endtime="20231129 08:38:27.536"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:38:27.536" endtime="20231129 08:38:27.536"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:38:27.536" endtime="20231129 08:38:27.536"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:38:27.536" endtime="20231129 08:38:27.536"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20231129 08:38:27.536" endtime="20231129 08:38:27.536"/>
</kw>
<status status="PASS" starttime="20231129 08:38:27.534" endtime="20231129 08:38:27.536"/>
</kw>
<test id="s1-s1-s14-t1" name="Put object to s3" line="32">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:27.539" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile'.</msg>
<msg timestamp="20231129 08:38:27.541" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:27.541" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:38:27.538" endtime="20231129 08:38:27.541"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:27.542" level="INFO"/>
<status status="PASS" starttime="20231129 08:38:27.541" endtime="20231129 08:38:27.542"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:27.542" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:27.542" endtime="20231129 08:38:27.542"/>
</kw>
<status status="PASS" starttime="20231129 08:38:27.538" endtime="20231129 08:38:27.542"/>
</kw>
<msg timestamp="20231129 08:38:27.542" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:27.537" endtime="20231129 08:38:27.543"/>
</kw>
<status status="PASS" starttime="20231129 08:38:27.537" endtime="20231129 08:38:27.543"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:27.546" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket erasure --key ozone-test-9245817576/putobject/key=value/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:28.030" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:28.030" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231129 08:38:27.544" endtime="20231129 08:38:28.030"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:28.031" level="INFO">{
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231129 08:38:28.030" endtime="20231129 08:38:28.031"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:28.031" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:28.031" endtime="20231129 08:38:28.032"/>
</kw>
<status status="PASS" starttime="20231129 08:38:27.544" endtime="20231129 08:38:28.032"/>
</kw>
<msg timestamp="20231129 08:38:28.032" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:27.544" endtime="20231129 08:38:28.032"/>
</kw>
<msg timestamp="20231129 08:38:28.032" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231129 08:38:27.543" endtime="20231129 08:38:28.032"/>
</kw>
<msg timestamp="20231129 08:38:28.032" level="INFO">${result} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231129 08:38:27.543" endtime="20231129 08:38:28.032"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/putobject/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:28.036" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket erasure --prefix ozone-test-9245817576/putobject/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:28.486" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:28.486" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-9245817576/putobject/key=value/",
            "LastModified": "2023-11-29T08:38:27.943Z",
            "ETag": "2023-11-29T08:38:27.943Z",
 ...</msg>
<status status="PASS" starttime="20231129 08:38:28.034" endtime="20231129 08:38:28.486"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:28.487" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-9245817576/putobject/key=value/",
            "LastModified": "2023-11-29T08:38:27.943Z",
            "ETag": "2023-11-29T08:38:27.943Z",
            "Size": 0,
            "StorageClass": "STANDARD"
        },
        {
            "Key": "ozone-test-9245817576/putobject/key=value/f1",
            "LastModified": "2023-11-29T08:38:27.981Z",
            "ETag": "2023-11-29T08:38:27.981Z",
            "Size": 11,
            "StorageClass": "STANDARD"
        }
    ]
}</msg>
<status status="PASS" starttime="20231129 08:38:28.487" endtime="20231129 08:38:28.487"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:28.488" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:28.488" endtime="20231129 08:38:28.488"/>
</kw>
<status status="PASS" starttime="20231129 08:38:28.034" endtime="20231129 08:38:28.488"/>
</kw>
<msg timestamp="20231129 08:38:28.488" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:28.034" endtime="20231129 08:38:28.488"/>
</kw>
<msg timestamp="20231129 08:38:28.488" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-9245817576/putobject/key=value/",
            "LastModified": "2023-11-29T08:38:27.943Z",
            "ETag": "2023-11-29T08:38:27.943Z",
 ...</msg>
<status status="PASS" starttime="20231129 08:38:28.033" endtime="20231129 08:38:28.488"/>
</kw>
<msg timestamp="20231129 08:38:28.489" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-9245817576/putobject/key=value/",
            "LastModified": "2023-11-29T08:38:27.943Z",
            "ETag": "2023-11-29T08:38:27.943Z",
 ...</msg>
<status status="PASS" starttime="20231129 08:38:28.033" endtime="20231129 08:38:28.489"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:38:28.489" endtime="20231129 08:38:28.489"/>
</kw>
<kw name="Execute" library="os">
<arg>touch -f /tmp/zerobyte</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:28.492" level="INFO">Running command 'touch -f /tmp/zerobyte 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:28.493" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:28.494" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:38:28.490" endtime="20231129 08:38:28.494"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:28.494" level="INFO"/>
<status status="PASS" starttime="20231129 08:38:28.494" endtime="20231129 08:38:28.494"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:28.495" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:28.494" endtime="20231129 08:38:28.495"/>
</kw>
<status status="PASS" starttime="20231129 08:38:28.490" endtime="20231129 08:38:28.495"/>
</kw>
<msg timestamp="20231129 08:38:28.495" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:28.490" endtime="20231129 08:38:28.495"/>
</kw>
<status status="PASS" starttime="20231129 08:38:28.489" endtime="20231129 08:38:28.495"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/zerobyte --body /tmp/zerobyte</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:28.499" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket erasure --key ozone-test-9245817576/putobject/key=value/zerobyte --body /tmp/zerobyte 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:28.943" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:28.943" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:38:28.497" endtime="20231129 08:38:28.943"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:28.944" level="INFO"/>
<status status="PASS" starttime="20231129 08:38:28.943" endtime="20231129 08:38:28.944"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:28.944" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:28.944" endtime="20231129 08:38:28.944"/>
</kw>
<status status="PASS" starttime="20231129 08:38:28.497" endtime="20231129 08:38:28.945"/>
</kw>
<msg timestamp="20231129 08:38:28.945" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:28.497" endtime="20231129 08:38:28.945"/>
</kw>
<msg timestamp="20231129 08:38:28.945" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:38:28.496" endtime="20231129 08:38:28.945"/>
</kw>
<msg timestamp="20231129 08:38:28.945" level="INFO">${result} = </msg>
<status status="PASS" starttime="20231129 08:38:28.495" endtime="20231129 08:38:28.945"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/putobject/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:28.949" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket erasure --prefix ozone-test-9245817576/putobject/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:29.406" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:29.406" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-9245817576/putobject/key=value/",
            "LastModified": "2023-11-29T08:38:27.943Z",
            "ETag": "2023-11-29T08:38:27.943Z",
 ...</msg>
<status status="PASS" starttime="20231129 08:38:28.947" endtime="20231129 08:38:29.406"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:29.407" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-9245817576/putobject/key=value/",
            "LastModified": "2023-11-29T08:38:27.943Z",
            "ETag": "2023-11-29T08:38:27.943Z",
            "Size": 0,
            "StorageClass": "STANDARD"
        },
        {
            "Key": "ozone-test-9245817576/putobject/key=value/f1",
            "LastModified": "2023-11-29T08:38:27.981Z",
            "ETag": "2023-11-29T08:38:27.981Z",
            "Size": 11,
            "StorageClass": "STANDARD"
        },
        {
            "Key": "ozone-test-9245817576/putobject/key=value/zerobyte/",
            "LastModified": "2023-11-29T08:38:28.898Z",
            "ETag": "2023-11-29T08:38:28.898Z",
            "Size": 0,
            "StorageClass": "STANDARD"
        }
    ]
}</msg>
<status status="PASS" starttime="20231129 08:38:29.407" endtime="20231129 08:38:29.407"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:29.408" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:29.407" endtime="20231129 08:38:29.408"/>
</kw>
<status status="PASS" starttime="20231129 08:38:28.947" endtime="20231129 08:38:29.408"/>
</kw>
<msg timestamp="20231129 08:38:29.408" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:28.946" endtime="20231129 08:38:29.408"/>
</kw>
<msg timestamp="20231129 08:38:29.408" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-9245817576/putobject/key=value/",
            "LastModified": "2023-11-29T08:38:27.943Z",
            "ETag": "2023-11-29T08:38:27.943Z",
 ...</msg>
<status status="PASS" starttime="20231129 08:38:28.946" endtime="20231129 08:38:29.408"/>
</kw>
<msg timestamp="20231129 08:38:29.408" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-9245817576/putobject/key=value/",
            "LastModified": "2023-11-29T08:38:27.943Z",
            "ETag": "2023-11-29T08:38:27.943Z",
 ...</msg>
<status status="PASS" starttime="20231129 08:38:28.945" endtime="20231129 08:38:29.408"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>zerobyte</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:38:29.409" endtime="20231129 08:38:29.409"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:38:27.536" endtime="20231129 08:38:29.409"/>
</test>
<test id="s1-s1-s14-t2" name="Get object from s3" line="44">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 /tmp/testfile.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:29.413" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-9245817576/putobject/key=value/f1 /tmp/testfile.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:29.941" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:29.941" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:38:27 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20231129 08:38:29.412" endtime="20231129 08:38:29.941"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:29.942" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:38:27 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 29 Nov 2023 08:38:29 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231129 08:38:29.941" endtime="20231129 08:38:29.942"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:29.942" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:29.942" endtime="20231129 08:38:29.942"/>
</kw>
<status status="PASS" starttime="20231129 08:38:29.411" endtime="20231129 08:38:29.943"/>
</kw>
<msg timestamp="20231129 08:38:29.943" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:29.411" endtime="20231129 08:38:29.943"/>
</kw>
<msg timestamp="20231129 08:38:29.943" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:38:27 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20231129 08:38:29.411" endtime="20231129 08:38:29.943"/>
</kw>
<msg timestamp="20231129 08:38:29.943" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:38:27 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20231129 08:38:29.410" endtime="20231129 08:38:29.943"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/testfile</arg>
<arg>/tmp/testfile.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:29.947" level="INFO">Running command 'md5sum /tmp/testfile | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:29.949" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:29.949" level="INFO">${output} = 09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20231129 08:38:29.945" endtime="20231129 08:38:29.949"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:29.949" level="INFO">09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20231129 08:38:29.949" endtime="20231129 08:38:29.949"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:29.950" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:29.950" endtime="20231129 08:38:29.950"/>
</kw>
<status status="PASS" starttime="20231129 08:38:29.945" endtime="20231129 08:38:29.950"/>
</kw>
<msg timestamp="20231129 08:38:29.950" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:29.944" endtime="20231129 08:38:29.950"/>
</kw>
<msg timestamp="20231129 08:38:29.950" level="INFO">${checksumbefore} = 09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20231129 08:38:29.944" endtime="20231129 08:38:29.950"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:29.953" level="INFO">Running command 'md5sum /tmp/testfile.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:29.955" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:29.955" level="INFO">${output} = 09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20231129 08:38:29.952" endtime="20231129 08:38:29.955"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:29.955" level="INFO">09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20231129 08:38:29.955" endtime="20231129 08:38:29.955"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:29.956" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:29.956" endtime="20231129 08:38:29.956"/>
</kw>
<status status="PASS" starttime="20231129 08:38:29.951" endtime="20231129 08:38:29.956"/>
</kw>
<msg timestamp="20231129 08:38:29.956" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:29.951" endtime="20231129 08:38:29.956"/>
</kw>
<msg timestamp="20231129 08:38:29.956" level="INFO">${checksumafter} = 09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20231129 08:38:29.951" endtime="20231129 08:38:29.956"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231129 08:38:29.956" endtime="20231129 08:38:29.957"/>
</kw>
<status status="PASS" starttime="20231129 08:38:29.943" endtime="20231129 08:38:29.957"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:38:29.410" endtime="20231129 08:38:29.957"/>
</test>
<test id="s1-s1-s14-t3" name="Get object with wrong signature" line="49">
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20231129 08:38:29.958" endtime="20231129 08:38:29.958"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>curl -i -H 'Authorization: AWS scm/scm@EXAMPLE.COM:asdfqwerty' ${ENDPOINT_URL}/${BUCKET}/${PREFIX}/putobject/key=value/f1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:29.960" level="INFO">Running command 'curl -i -H 'Authorization: AWS scm/scm@EXAMPLE.COM:asdfqwerty' http://s3g:9878/erasure/ozone-test-9245817576/putobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:29.974" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:29.974" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20231129 08:38:29.959" endtime="20231129 08:38:29.974"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:29.975" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
100   247  100   247    0     0  28838      0 --:--:-- --:--:-- --:--:-- 30875
HTTP/1.1 403 Forbidden
Date: Wed, 29 Nov 2023 08:38:29 GMT
Cache-Control: no-cache
Expires: Wed, 29 Nov 2023 08:38:29 GMT
Pragma: no-cache
Content-Type: text/plain;charset=utf-8
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
X-FRAME-OPTIONS: SAMEORIGIN
Server: Ozone
x-amz-id-2: ASd1R2GtTvB2J41
x-amz-request-id: 0c7d0a31-d3a7-4579-b3b7-d57cbd362ac8
Content-Length: 247

&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;Error&gt;
  &lt;Code&gt;InvalidRequest&lt;/Code&gt;
  &lt;Message&gt;Error creating s3 auth info. The request may not be signed using AWS V4 signing algorithm, or might be invalid&lt;/Message&gt;
  &lt;Resource/&gt;
  &lt;RequestId/&gt;
&lt;/Error&gt;</msg>
<status status="PASS" starttime="20231129 08:38:29.974" endtime="20231129 08:38:29.975"/>
</kw>
<msg timestamp="20231129 08:38:29.975" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20231129 08:38:29.959" endtime="20231129 08:38:29.975"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>403 Forbidden</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:38:29.975" endtime="20231129 08:38:29.976"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:38:29.958" endtime="20231129 08:38:29.976"/>
</test>
<test id="s1-s1-s14-t4" name="Get Partial object from s3 with both start and endoffset" line="54">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=0-4 /tmp/testfile1.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:29.980" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-9245817576/putobject/key=value/f1 --range bytes=0-4 /tmp/testfile1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:30.430" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:30.430" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:38:27 GMT",
    "ContentLength": 5,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20231129 08:38:29.979" endtime="20231129 08:38:30.430"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:30.431" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:38:27 GMT",
    "ContentLength": 5,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-4/11",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 29 Nov 2023 08:38:30 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231129 08:38:30.431" endtime="20231129 08:38:30.431"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:30.432" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:30.431" endtime="20231129 08:38:30.432"/>
</kw>
<status status="PASS" starttime="20231129 08:38:29.978" endtime="20231129 08:38:30.432"/>
</kw>
<msg timestamp="20231129 08:38:30.432" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:29.978" endtime="20231129 08:38:30.432"/>
</kw>
<msg timestamp="20231129 08:38:30.432" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:38:27 GMT",
    "ContentLength": 5,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20231129 08:38:29.978" endtime="20231129 08:38:30.432"/>
</kw>
<msg timestamp="20231129 08:38:30.432" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:38:27 GMT",
    "ContentLength": 5,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20231129 08:38:29.977" endtime="20231129 08:38:30.433"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:38:30.433" endtime="20231129 08:38:30.433"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-4/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:38:30.433" endtime="20231129 08:38:30.433"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:38:30.433" endtime="20231129 08:38:30.434"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=0 bs=1 count=5 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:30.436" level="INFO">Running command 'dd if=/tmp/testfile skip=0 bs=1 count=5 2&gt;/dev/null'.</msg>
<msg timestamp="20231129 08:38:30.438" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:30.438" level="INFO">${output} = Rando</msg>
<status status="PASS" starttime="20231129 08:38:30.435" endtime="20231129 08:38:30.438"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:30.439" level="INFO">Rando</msg>
<status status="PASS" starttime="20231129 08:38:30.439" endtime="20231129 08:38:30.439"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:30.440" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:30.439" endtime="20231129 08:38:30.440"/>
</kw>
<status status="PASS" starttime="20231129 08:38:30.435" endtime="20231129 08:38:30.440"/>
</kw>
<msg timestamp="20231129 08:38:30.440" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:30.434" endtime="20231129 08:38:30.440"/>
</kw>
<msg timestamp="20231129 08:38:30.440" level="INFO">${expectedData} = Rando</msg>
<status status="PASS" starttime="20231129 08:38:30.434" endtime="20231129 08:38:30.440"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile1.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:30.443" level="INFO">Running command 'cat /tmp/testfile1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:30.444" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:30.444" level="INFO">${output} = Rando</msg>
<status status="PASS" starttime="20231129 08:38:30.442" endtime="20231129 08:38:30.444"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:30.445" level="INFO">Rando</msg>
<status status="PASS" starttime="20231129 08:38:30.445" endtime="20231129 08:38:30.445"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:30.446" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:30.445" endtime="20231129 08:38:30.446"/>
</kw>
<status status="PASS" starttime="20231129 08:38:30.441" endtime="20231129 08:38:30.446"/>
</kw>
<msg timestamp="20231129 08:38:30.446" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:30.441" endtime="20231129 08:38:30.446"/>
</kw>
<msg timestamp="20231129 08:38:30.446" level="INFO">${actualData} = Rando</msg>
<status status="PASS" starttime="20231129 08:38:30.441" endtime="20231129 08:38:30.446"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231129 08:38:30.446" endtime="20231129 08:38:30.447"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=2-4 /tmp/testfile1.result1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:30.450" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-9245817576/putobject/key=value/f1 --range bytes=2-4 /tmp/testfile1.result1 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:30.901" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:30.901" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:38:27 GMT",
    "ContentLength": 3,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20231129 08:38:30.448" endtime="20231129 08:38:30.901"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:30.902" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:38:27 GMT",
    "ContentLength": 3,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 2-4/11",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 29 Nov 2023 08:38:30 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231129 08:38:30.901" endtime="20231129 08:38:30.902"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:30.902" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:30.902" endtime="20231129 08:38:30.902"/>
</kw>
<status status="PASS" starttime="20231129 08:38:30.448" endtime="20231129 08:38:30.903"/>
</kw>
<msg timestamp="20231129 08:38:30.903" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:30.448" endtime="20231129 08:38:30.903"/>
</kw>
<msg timestamp="20231129 08:38:30.903" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:38:27 GMT",
    "ContentLength": 3,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20231129 08:38:30.447" endtime="20231129 08:38:30.903"/>
</kw>
<msg timestamp="20231129 08:38:30.903" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:38:27 GMT",
    "ContentLength": 3,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20231129 08:38:30.447" endtime="20231129 08:38:30.903"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:38:30.903" endtime="20231129 08:38:30.904"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 2-4/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:38:30.904" endtime="20231129 08:38:30.904"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:38:30.904" endtime="20231129 08:38:30.905"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=2 bs=1 count=3 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:30.907" level="INFO">Running command 'dd if=/tmp/testfile skip=2 bs=1 count=3 2&gt;/dev/null'.</msg>
<msg timestamp="20231129 08:38:30.909" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:30.909" level="INFO">${output} = ndo</msg>
<status status="PASS" starttime="20231129 08:38:30.906" endtime="20231129 08:38:30.909"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:30.910" level="INFO">ndo</msg>
<status status="PASS" starttime="20231129 08:38:30.909" endtime="20231129 08:38:30.910"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:30.910" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:30.910" endtime="20231129 08:38:30.910"/>
</kw>
<status status="PASS" starttime="20231129 08:38:30.905" endtime="20231129 08:38:30.911"/>
</kw>
<msg timestamp="20231129 08:38:30.911" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:30.905" endtime="20231129 08:38:30.911"/>
</kw>
<msg timestamp="20231129 08:38:30.911" level="INFO">${expectedData} = ndo</msg>
<status status="PASS" starttime="20231129 08:38:30.905" endtime="20231129 08:38:30.911"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile1.result1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:30.913" level="INFO">Running command 'cat /tmp/testfile1.result1 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:30.915" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:30.915" level="INFO">${output} = ndo</msg>
<status status="PASS" starttime="20231129 08:38:30.912" endtime="20231129 08:38:30.915"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:30.916" level="INFO">ndo</msg>
<status status="PASS" starttime="20231129 08:38:30.915" endtime="20231129 08:38:30.916"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:30.916" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:30.916" endtime="20231129 08:38:30.916"/>
</kw>
<status status="PASS" starttime="20231129 08:38:30.912" endtime="20231129 08:38:30.917"/>
</kw>
<msg timestamp="20231129 08:38:30.917" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:30.911" endtime="20231129 08:38:30.917"/>
</kw>
<msg timestamp="20231129 08:38:30.917" level="INFO">${actualData} = ndo</msg>
<status status="PASS" starttime="20231129 08:38:30.911" endtime="20231129 08:38:30.917"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231129 08:38:30.917" endtime="20231129 08:38:30.917"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=2-1000 /tmp/testfile1.result2</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:30.921" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-9245817576/putobject/key=value/f1 --range bytes=2-1000 /tmp/testfile1.result2 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:31.365" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:31.365" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:38:27 GMT",
    "ContentLength": 9,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20231129 08:38:30.919" endtime="20231129 08:38:31.365"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:31.366" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:38:27 GMT",
    "ContentLength": 9,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 2-10/11",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 29 Nov 2023 08:38:31 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231129 08:38:31.365" endtime="20231129 08:38:31.366"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:31.367" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:31.366" endtime="20231129 08:38:31.367"/>
</kw>
<status status="PASS" starttime="20231129 08:38:30.919" endtime="20231129 08:38:31.367"/>
</kw>
<msg timestamp="20231129 08:38:31.367" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:30.919" endtime="20231129 08:38:31.367"/>
</kw>
<msg timestamp="20231129 08:38:31.367" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:38:27 GMT",
    "ContentLength": 9,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20231129 08:38:30.918" endtime="20231129 08:38:31.367"/>
</kw>
<msg timestamp="20231129 08:38:31.367" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:38:27 GMT",
    "ContentLength": 9,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20231129 08:38:30.918" endtime="20231129 08:38:31.367"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:38:31.367" endtime="20231129 08:38:31.368"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 2-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:38:31.368" endtime="20231129 08:38:31.368"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:38:31.368" endtime="20231129 08:38:31.369"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=2 bs=1 count=9 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:31.371" level="INFO">Running command 'dd if=/tmp/testfile skip=2 bs=1 count=9 2&gt;/dev/null'.</msg>
<msg timestamp="20231129 08:38:31.373" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:31.373" level="INFO">${output} = ndomtext</msg>
<status status="PASS" starttime="20231129 08:38:31.370" endtime="20231129 08:38:31.373"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:31.374" level="INFO">ndomtext</msg>
<status status="PASS" starttime="20231129 08:38:31.374" endtime="20231129 08:38:31.374"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:31.375" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:31.374" endtime="20231129 08:38:31.375"/>
</kw>
<status status="PASS" starttime="20231129 08:38:31.370" endtime="20231129 08:38:31.375"/>
</kw>
<msg timestamp="20231129 08:38:31.375" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:31.369" endtime="20231129 08:38:31.375"/>
</kw>
<msg timestamp="20231129 08:38:31.375" level="INFO">${expectedData} = ndomtext</msg>
<status status="PASS" starttime="20231129 08:38:31.369" endtime="20231129 08:38:31.375"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile1.result2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:31.378" level="INFO">Running command 'cat /tmp/testfile1.result2 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:31.379" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:31.379" level="INFO">${output} = ndomtext</msg>
<status status="PASS" starttime="20231129 08:38:31.376" endtime="20231129 08:38:31.379"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:31.380" level="INFO">ndomtext</msg>
<status status="PASS" starttime="20231129 08:38:31.379" endtime="20231129 08:38:31.380"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:31.380" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:31.380" endtime="20231129 08:38:31.380"/>
</kw>
<status status="PASS" starttime="20231129 08:38:31.376" endtime="20231129 08:38:31.381"/>
</kw>
<msg timestamp="20231129 08:38:31.381" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:31.376" endtime="20231129 08:38:31.381"/>
</kw>
<msg timestamp="20231129 08:38:31.381" level="INFO">${actualData} = ndomtext</msg>
<status status="PASS" starttime="20231129 08:38:31.375" endtime="20231129 08:38:31.381"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231129 08:38:31.381" endtime="20231129 08:38:31.381"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:38:29.976" endtime="20231129 08:38:31.382"/>
</test>
<test id="s1-s1-s14-t5" name="Get Partial object from s3 with both start and endoffset(start offset and endoffset is greater than file size)" line="80">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=10000-10000 /tmp/testfile2.result</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:31.385" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-9245817576/putobject/key=value/f1 --range bytes=10000-10000 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:31.826" level="INFO">${rc} = 255</msg>
<msg timestamp="20231129 08:38:31.826" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20231129 08:38:31.384" endtime="20231129 08:38:31.826"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:31.827" level="INFO">
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20231129 08:38:31.827" endtime="20231129 08:38:31.827"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:31.828" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:31.827" endtime="20231129 08:38:31.828"/>
</kw>
<msg timestamp="20231129 08:38:31.828" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20231129 08:38:31.383" endtime="20231129 08:38:31.828"/>
</kw>
<msg timestamp="20231129 08:38:31.828" level="INFO">${result} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20231129 08:38:31.383" endtime="20231129 08:38:31.828"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:38:31.828" endtime="20231129 08:38:31.829"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:38:31.382" endtime="20231129 08:38:31.829"/>
</test>
<test id="s1-s1-s14-t6" name="Get Partial object from s3 with both start and endoffset(end offset is greater than file size)" line="85">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=0-10000 /tmp/testfile2.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:31.833" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-9245817576/putobject/key=value/f1 --range bytes=0-10000 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:32.272" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:32.272" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:38:27 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20231129 08:38:31.832" endtime="20231129 08:38:32.272"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:32.273" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:38:27 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-10/11",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 29 Nov 2023 08:38:32 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231129 08:38:32.272" endtime="20231129 08:38:32.273"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:32.273" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:32.273" endtime="20231129 08:38:32.274"/>
</kw>
<status status="PASS" starttime="20231129 08:38:31.831" endtime="20231129 08:38:32.274"/>
</kw>
<msg timestamp="20231129 08:38:32.274" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:31.831" endtime="20231129 08:38:32.274"/>
</kw>
<msg timestamp="20231129 08:38:32.274" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:38:27 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20231129 08:38:31.831" endtime="20231129 08:38:32.274"/>
</kw>
<msg timestamp="20231129 08:38:32.274" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:38:27 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20231129 08:38:31.830" endtime="20231129 08:38:32.274"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:38:32.274" endtime="20231129 08:38:32.275"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:38:32.275" endtime="20231129 08:38:32.275"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:38:32.275" endtime="20231129 08:38:32.276"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:32.278" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:32.280" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:32.280" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20231129 08:38:32.277" endtime="20231129 08:38:32.280"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:32.281" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20231129 08:38:32.280" endtime="20231129 08:38:32.281"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:32.281" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:32.281" endtime="20231129 08:38:32.281"/>
</kw>
<status status="PASS" starttime="20231129 08:38:32.276" endtime="20231129 08:38:32.281"/>
</kw>
<msg timestamp="20231129 08:38:32.281" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:32.276" endtime="20231129 08:38:32.282"/>
</kw>
<msg timestamp="20231129 08:38:32.282" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20231129 08:38:32.276" endtime="20231129 08:38:32.282"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile2.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:32.284" level="INFO">Running command 'cat /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:32.285" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:32.286" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20231129 08:38:32.283" endtime="20231129 08:38:32.286"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:32.286" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20231129 08:38:32.286" endtime="20231129 08:38:32.286"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:32.287" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:32.286" endtime="20231129 08:38:32.287"/>
</kw>
<status status="PASS" starttime="20231129 08:38:32.282" endtime="20231129 08:38:32.287"/>
</kw>
<msg timestamp="20231129 08:38:32.287" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:32.282" endtime="20231129 08:38:32.287"/>
</kw>
<msg timestamp="20231129 08:38:32.287" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20231129 08:38:32.282" endtime="20231129 08:38:32.287"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231129 08:38:32.287" endtime="20231129 08:38:32.288"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:38:31.829" endtime="20231129 08:38:32.288"/>
</test>
<test id="s1-s1-s14-t7" name="Get Partial object from s3 with only start offset" line="94">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=0- /tmp/testfile3.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:32.292" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-9245817576/putobject/key=value/f1 --range bytes=0- /tmp/testfile3.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:32.741" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:32.741" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:38:27 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20231129 08:38:32.291" endtime="20231129 08:38:32.741"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:32.742" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:38:27 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-10/11",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 29 Nov 2023 08:38:32 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231129 08:38:32.741" endtime="20231129 08:38:32.742"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:32.742" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:32.742" endtime="20231129 08:38:32.742"/>
</kw>
<status status="PASS" starttime="20231129 08:38:32.290" endtime="20231129 08:38:32.742"/>
</kw>
<msg timestamp="20231129 08:38:32.743" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:32.290" endtime="20231129 08:38:32.743"/>
</kw>
<msg timestamp="20231129 08:38:32.743" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:38:27 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20231129 08:38:32.290" endtime="20231129 08:38:32.743"/>
</kw>
<msg timestamp="20231129 08:38:32.743" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:38:27 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20231129 08:38:32.289" endtime="20231129 08:38:32.743"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:38:32.743" endtime="20231129 08:38:32.743"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:38:32.744" endtime="20231129 08:38:32.744"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:38:32.744" endtime="20231129 08:38:32.744"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:32.747" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:32.749" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:32.749" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20231129 08:38:32.745" endtime="20231129 08:38:32.749"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:32.749" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20231129 08:38:32.749" endtime="20231129 08:38:32.749"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:32.750" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:32.750" endtime="20231129 08:38:32.750"/>
</kw>
<status status="PASS" starttime="20231129 08:38:32.745" endtime="20231129 08:38:32.750"/>
</kw>
<msg timestamp="20231129 08:38:32.750" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:32.745" endtime="20231129 08:38:32.750"/>
</kw>
<msg timestamp="20231129 08:38:32.750" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20231129 08:38:32.744" endtime="20231129 08:38:32.750"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile3.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:32.753" level="INFO">Running command 'cat /tmp/testfile3.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:32.755" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:32.755" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20231129 08:38:32.752" endtime="20231129 08:38:32.755"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:32.755" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20231129 08:38:32.755" endtime="20231129 08:38:32.755"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:32.756" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:32.756" endtime="20231129 08:38:32.756"/>
</kw>
<status status="PASS" starttime="20231129 08:38:32.751" endtime="20231129 08:38:32.756"/>
</kw>
<msg timestamp="20231129 08:38:32.756" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:32.751" endtime="20231129 08:38:32.756"/>
</kw>
<msg timestamp="20231129 08:38:32.756" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20231129 08:38:32.751" endtime="20231129 08:38:32.756"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231129 08:38:32.757" endtime="20231129 08:38:32.757"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:38:32.288" endtime="20231129 08:38:32.757"/>
</test>
<test id="s1-s1-s14-t8" name="Get Partial object from s3 with both start and endoffset which are equal" line="103">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=0-0 /tmp/testfile4.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:32.761" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-9245817576/putobject/key=value/f1 --range bytes=0-0 /tmp/testfile4.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:33.207" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:33.207" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:38:27 GMT",
    "ContentLength": 1,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20231129 08:38:32.760" endtime="20231129 08:38:33.207"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:33.209" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:38:27 GMT",
    "ContentLength": 1,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-0/11",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 29 Nov 2023 08:38:33 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231129 08:38:33.208" endtime="20231129 08:38:33.209"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:33.209" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:33.209" endtime="20231129 08:38:33.209"/>
</kw>
<status status="PASS" starttime="20231129 08:38:32.759" endtime="20231129 08:38:33.210"/>
</kw>
<msg timestamp="20231129 08:38:33.210" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:32.759" endtime="20231129 08:38:33.210"/>
</kw>
<msg timestamp="20231129 08:38:33.210" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:38:27 GMT",
    "ContentLength": 1,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20231129 08:38:32.759" endtime="20231129 08:38:33.210"/>
</kw>
<msg timestamp="20231129 08:38:33.210" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:38:27 GMT",
    "ContentLength": 1,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20231129 08:38:32.758" endtime="20231129 08:38:33.210"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:38:33.210" endtime="20231129 08:38:33.211"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-0/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:38:33.211" endtime="20231129 08:38:33.211"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:38:33.211" endtime="20231129 08:38:33.211"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=0 bs=1 count=1 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:33.214" level="INFO">Running command 'dd if=/tmp/testfile skip=0 bs=1 count=1 2&gt;/dev/null'.</msg>
<msg timestamp="20231129 08:38:33.216" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:33.216" level="INFO">${output} = R</msg>
<status status="PASS" starttime="20231129 08:38:33.212" endtime="20231129 08:38:33.216"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:33.216" level="INFO">R</msg>
<status status="PASS" starttime="20231129 08:38:33.216" endtime="20231129 08:38:33.216"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:33.217" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:33.217" endtime="20231129 08:38:33.217"/>
</kw>
<status status="PASS" starttime="20231129 08:38:33.212" endtime="20231129 08:38:33.217"/>
</kw>
<msg timestamp="20231129 08:38:33.217" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:33.212" endtime="20231129 08:38:33.217"/>
</kw>
<msg timestamp="20231129 08:38:33.217" level="INFO">${expectedData} = R</msg>
<status status="PASS" starttime="20231129 08:38:33.211" endtime="20231129 08:38:33.217"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile4.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:33.220" level="INFO">Running command 'cat /tmp/testfile4.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:33.221" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:33.221" level="INFO">${output} = R</msg>
<status status="PASS" starttime="20231129 08:38:33.219" endtime="20231129 08:38:33.221"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:33.222" level="INFO">R</msg>
<status status="PASS" starttime="20231129 08:38:33.222" endtime="20231129 08:38:33.222"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:33.223" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:33.222" endtime="20231129 08:38:33.223"/>
</kw>
<status status="PASS" starttime="20231129 08:38:33.218" endtime="20231129 08:38:33.223"/>
</kw>
<msg timestamp="20231129 08:38:33.223" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:33.218" endtime="20231129 08:38:33.223"/>
</kw>
<msg timestamp="20231129 08:38:33.223" level="INFO">${actualData} = R</msg>
<status status="PASS" starttime="20231129 08:38:33.217" endtime="20231129 08:38:33.223"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231129 08:38:33.223" endtime="20231129 08:38:33.223"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=4-4 /tmp/testfile5.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:33.226" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-9245817576/putobject/key=value/f1 --range bytes=4-4 /tmp/testfile5.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:33.677" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:33.677" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:38:27 GMT",
    "ContentLength": 1,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20231129 08:38:33.225" endtime="20231129 08:38:33.677"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:33.678" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:38:27 GMT",
    "ContentLength": 1,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 4-4/11",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 29 Nov 2023 08:38:33 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231129 08:38:33.677" endtime="20231129 08:38:33.678"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:33.678" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:33.678" endtime="20231129 08:38:33.679"/>
</kw>
<status status="PASS" starttime="20231129 08:38:33.225" endtime="20231129 08:38:33.679"/>
</kw>
<msg timestamp="20231129 08:38:33.679" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:33.225" endtime="20231129 08:38:33.679"/>
</kw>
<msg timestamp="20231129 08:38:33.679" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:38:27 GMT",
    "ContentLength": 1,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20231129 08:38:33.224" endtime="20231129 08:38:33.679"/>
</kw>
<msg timestamp="20231129 08:38:33.679" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:38:27 GMT",
    "ContentLength": 1,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20231129 08:38:33.224" endtime="20231129 08:38:33.679"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:38:33.679" endtime="20231129 08:38:33.680"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 4-4/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:38:33.680" endtime="20231129 08:38:33.680"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:38:33.680" endtime="20231129 08:38:33.681"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=4 bs=1 count=1 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:33.684" level="INFO">Running command 'dd if=/tmp/testfile skip=4 bs=1 count=1 2&gt;/dev/null'.</msg>
<msg timestamp="20231129 08:38:33.686" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:33.686" level="INFO">${output} = o</msg>
<status status="PASS" starttime="20231129 08:38:33.683" endtime="20231129 08:38:33.686"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:33.687" level="INFO">o</msg>
<status status="PASS" starttime="20231129 08:38:33.687" endtime="20231129 08:38:33.687"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:33.687" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:33.687" endtime="20231129 08:38:33.688"/>
</kw>
<status status="PASS" starttime="20231129 08:38:33.681" endtime="20231129 08:38:33.688"/>
</kw>
<msg timestamp="20231129 08:38:33.688" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:33.681" endtime="20231129 08:38:33.688"/>
</kw>
<msg timestamp="20231129 08:38:33.688" level="INFO">${expectedData} = o</msg>
<status status="PASS" starttime="20231129 08:38:33.681" endtime="20231129 08:38:33.688"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile5.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:33.691" level="INFO">Running command 'cat /tmp/testfile5.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:33.692" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:33.692" level="INFO">${output} = o</msg>
<status status="PASS" starttime="20231129 08:38:33.689" endtime="20231129 08:38:33.692"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:33.693" level="INFO">o</msg>
<status status="PASS" starttime="20231129 08:38:33.693" endtime="20231129 08:38:33.693"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:33.693" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:33.693" endtime="20231129 08:38:33.694"/>
</kw>
<status status="PASS" starttime="20231129 08:38:33.689" endtime="20231129 08:38:33.694"/>
</kw>
<msg timestamp="20231129 08:38:33.694" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:33.689" endtime="20231129 08:38:33.694"/>
</kw>
<msg timestamp="20231129 08:38:33.694" level="INFO">${actualData} = o</msg>
<status status="PASS" starttime="20231129 08:38:33.688" endtime="20231129 08:38:33.694"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231129 08:38:33.694" endtime="20231129 08:38:33.694"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:38:32.758" endtime="20231129 08:38:33.695"/>
</test>
<test id="s1-s1-s14-t9" name="Get Partial object from s3 to get last n bytes" line="120">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=-4 /tmp/testfile6.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:33.698" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-9245817576/putobject/key=value/f1 --range bytes=-4 /tmp/testfile6.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:34.139" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:34.139" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:38:27 GMT",
    "ContentLength": 4,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20231129 08:38:33.697" endtime="20231129 08:38:34.139"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:34.140" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:38:27 GMT",
    "ContentLength": 4,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 7-10/11",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 29 Nov 2023 08:38:34 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231129 08:38:34.140" endtime="20231129 08:38:34.140"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:34.141" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:34.141" endtime="20231129 08:38:34.141"/>
</kw>
<status status="PASS" starttime="20231129 08:38:33.697" endtime="20231129 08:38:34.141"/>
</kw>
<msg timestamp="20231129 08:38:34.141" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:33.697" endtime="20231129 08:38:34.141"/>
</kw>
<msg timestamp="20231129 08:38:34.141" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:38:27 GMT",
    "ContentLength": 4,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20231129 08:38:33.696" endtime="20231129 08:38:34.141"/>
</kw>
<msg timestamp="20231129 08:38:34.142" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:38:27 GMT",
    "ContentLength": 4,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20231129 08:38:33.696" endtime="20231129 08:38:34.142"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:38:34.142" endtime="20231129 08:38:34.142"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 7-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:38:34.142" endtime="20231129 08:38:34.142"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:38:34.143" endtime="20231129 08:38:34.143"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=7 bs=1 count=4 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:34.146" level="INFO">Running command 'dd if=/tmp/testfile skip=7 bs=1 count=4 2&gt;/dev/null'.</msg>
<msg timestamp="20231129 08:38:34.147" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:34.147" level="INFO">${output} = ext</msg>
<status status="PASS" starttime="20231129 08:38:34.144" endtime="20231129 08:38:34.147"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:34.148" level="INFO">ext</msg>
<status status="PASS" starttime="20231129 08:38:34.148" endtime="20231129 08:38:34.148"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:34.149" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:34.148" endtime="20231129 08:38:34.149"/>
</kw>
<status status="PASS" starttime="20231129 08:38:34.144" endtime="20231129 08:38:34.149"/>
</kw>
<msg timestamp="20231129 08:38:34.149" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:34.143" endtime="20231129 08:38:34.149"/>
</kw>
<msg timestamp="20231129 08:38:34.149" level="INFO">${expectedData} = ext</msg>
<status status="PASS" starttime="20231129 08:38:34.143" endtime="20231129 08:38:34.149"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile6.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:34.152" level="INFO">Running command 'cat /tmp/testfile6.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:34.153" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:34.154" level="INFO">${output} = ext</msg>
<status status="PASS" starttime="20231129 08:38:34.151" endtime="20231129 08:38:34.154"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:34.154" level="INFO">ext</msg>
<status status="PASS" starttime="20231129 08:38:34.154" endtime="20231129 08:38:34.154"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:34.155" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:34.154" endtime="20231129 08:38:34.155"/>
</kw>
<status status="PASS" starttime="20231129 08:38:34.150" endtime="20231129 08:38:34.155"/>
</kw>
<msg timestamp="20231129 08:38:34.155" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:34.150" endtime="20231129 08:38:34.155"/>
</kw>
<msg timestamp="20231129 08:38:34.155" level="INFO">${actualData} = ext</msg>
<status status="PASS" starttime="20231129 08:38:34.149" endtime="20231129 08:38:34.155"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231129 08:38:34.155" endtime="20231129 08:38:34.156"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=-10000 /tmp/testfile7.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:34.159" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-9245817576/putobject/key=value/f1 --range bytes=-10000 /tmp/testfile7.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:34.615" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:34.616" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:38:27 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20231129 08:38:34.157" endtime="20231129 08:38:34.616"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:34.617" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:38:27 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-10/11",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 29 Nov 2023 08:38:34 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231129 08:38:34.616" endtime="20231129 08:38:34.617"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:34.617" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:34.617" endtime="20231129 08:38:34.617"/>
</kw>
<status status="PASS" starttime="20231129 08:38:34.157" endtime="20231129 08:38:34.617"/>
</kw>
<msg timestamp="20231129 08:38:34.617" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:34.157" endtime="20231129 08:38:34.617"/>
</kw>
<msg timestamp="20231129 08:38:34.618" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:38:27 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20231129 08:38:34.156" endtime="20231129 08:38:34.618"/>
</kw>
<msg timestamp="20231129 08:38:34.618" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:38:27 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20231129 08:38:34.156" endtime="20231129 08:38:34.618"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:38:34.618" endtime="20231129 08:38:34.618"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:38:34.618" endtime="20231129 08:38:34.619"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:38:34.619" endtime="20231129 08:38:34.619"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:34.622" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:34.624" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:34.624" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20231129 08:38:34.620" endtime="20231129 08:38:34.624"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:34.624" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20231129 08:38:34.624" endtime="20231129 08:38:34.624"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:34.625" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:34.625" endtime="20231129 08:38:34.625"/>
</kw>
<status status="PASS" starttime="20231129 08:38:34.620" endtime="20231129 08:38:34.625"/>
</kw>
<msg timestamp="20231129 08:38:34.625" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:34.620" endtime="20231129 08:38:34.625"/>
</kw>
<msg timestamp="20231129 08:38:34.625" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20231129 08:38:34.619" endtime="20231129 08:38:34.625"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile7.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:34.628" level="INFO">Running command 'cat /tmp/testfile7.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:34.630" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:34.630" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20231129 08:38:34.627" endtime="20231129 08:38:34.630"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:34.631" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20231129 08:38:34.630" endtime="20231129 08:38:34.631"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:34.631" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:34.631" endtime="20231129 08:38:34.631"/>
</kw>
<status status="PASS" starttime="20231129 08:38:34.626" endtime="20231129 08:38:34.631"/>
</kw>
<msg timestamp="20231129 08:38:34.631" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:34.626" endtime="20231129 08:38:34.631"/>
</kw>
<msg timestamp="20231129 08:38:34.632" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20231129 08:38:34.626" endtime="20231129 08:38:34.632"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231129 08:38:34.632" endtime="20231129 08:38:34.632"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:38:33.695" endtime="20231129 08:38:34.632"/>
</test>
<test id="s1-s1-s14-t10" name="Incorrect values for end and start offset" line="138">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=-11-10000 /tmp/testfile8.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:34.636" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-9245817576/putobject/key=value/f1 --range bytes=-11-10000 /tmp/testfile8.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:35.077" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:35.077" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:38:27 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20231129 08:38:34.635" endtime="20231129 08:38:35.077"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:35.078" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:38:27 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 29 Nov 2023 08:38:35 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231129 08:38:35.077" endtime="20231129 08:38:35.078"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:35.078" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:35.078" endtime="20231129 08:38:35.078"/>
</kw>
<status status="PASS" starttime="20231129 08:38:34.635" endtime="20231129 08:38:35.078"/>
</kw>
<msg timestamp="20231129 08:38:35.079" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:34.635" endtime="20231129 08:38:35.079"/>
</kw>
<msg timestamp="20231129 08:38:35.079" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:38:27 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20231129 08:38:34.634" endtime="20231129 08:38:35.079"/>
</kw>
<msg timestamp="20231129 08:38:35.079" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:38:27 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20231129 08:38:34.633" endtime="20231129 08:38:35.079"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:38:35.079" endtime="20231129 08:38:35.079"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:38:35.080" endtime="20231129 08:38:35.080"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:35.083" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:35.084" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:35.085" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20231129 08:38:35.081" endtime="20231129 08:38:35.085"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:35.085" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20231129 08:38:35.085" endtime="20231129 08:38:35.085"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:35.086" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:35.085" endtime="20231129 08:38:35.086"/>
</kw>
<status status="PASS" starttime="20231129 08:38:35.081" endtime="20231129 08:38:35.086"/>
</kw>
<msg timestamp="20231129 08:38:35.086" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:35.081" endtime="20231129 08:38:35.086"/>
</kw>
<msg timestamp="20231129 08:38:35.086" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20231129 08:38:35.080" endtime="20231129 08:38:35.086"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile8.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:35.089" level="INFO">Running command 'cat /tmp/testfile8.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:35.090" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:35.090" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20231129 08:38:35.087" endtime="20231129 08:38:35.090"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:35.091" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20231129 08:38:35.091" endtime="20231129 08:38:35.091"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:35.092" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:35.091" endtime="20231129 08:38:35.092"/>
</kw>
<status status="PASS" starttime="20231129 08:38:35.087" endtime="20231129 08:38:35.092"/>
</kw>
<msg timestamp="20231129 08:38:35.092" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:35.087" endtime="20231129 08:38:35.092"/>
</kw>
<msg timestamp="20231129 08:38:35.092" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20231129 08:38:35.086" endtime="20231129 08:38:35.092"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231129 08:38:35.092" endtime="20231129 08:38:35.093"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=11-8 /tmp/testfile9.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:35.096" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-9245817576/putobject/key=value/f1 --range bytes=11-8 /tmp/testfile9.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:35.545" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:35.545" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:38:27 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20231129 08:38:35.094" endtime="20231129 08:38:35.546"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:35.546" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:38:27 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 29 Nov 2023 08:38:35 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231129 08:38:35.546" endtime="20231129 08:38:35.547"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:35.547" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:35.547" endtime="20231129 08:38:35.547"/>
</kw>
<status status="PASS" starttime="20231129 08:38:35.094" endtime="20231129 08:38:35.547"/>
</kw>
<msg timestamp="20231129 08:38:35.547" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:35.094" endtime="20231129 08:38:35.547"/>
</kw>
<msg timestamp="20231129 08:38:35.548" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:38:27 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20231129 08:38:35.093" endtime="20231129 08:38:35.548"/>
</kw>
<msg timestamp="20231129 08:38:35.548" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:38:27 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20231129 08:38:35.093" endtime="20231129 08:38:35.548"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:38:35.548" endtime="20231129 08:38:35.548"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:38:35.548" endtime="20231129 08:38:35.549"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:35.552" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:35.553" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:35.554" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20231129 08:38:35.550" endtime="20231129 08:38:35.554"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:35.554" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20231129 08:38:35.554" endtime="20231129 08:38:35.554"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:35.555" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:35.554" endtime="20231129 08:38:35.555"/>
</kw>
<status status="PASS" starttime="20231129 08:38:35.550" endtime="20231129 08:38:35.555"/>
</kw>
<msg timestamp="20231129 08:38:35.555" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:35.549" endtime="20231129 08:38:35.555"/>
</kw>
<msg timestamp="20231129 08:38:35.555" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20231129 08:38:35.549" endtime="20231129 08:38:35.555"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile8.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:35.558" level="INFO">Running command 'cat /tmp/testfile8.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:35.559" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:35.559" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20231129 08:38:35.556" endtime="20231129 08:38:35.559"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:35.560" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20231129 08:38:35.560" endtime="20231129 08:38:35.560"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:35.561" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:35.560" endtime="20231129 08:38:35.561"/>
</kw>
<status status="PASS" starttime="20231129 08:38:35.556" endtime="20231129 08:38:35.561"/>
</kw>
<msg timestamp="20231129 08:38:35.561" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:35.556" endtime="20231129 08:38:35.561"/>
</kw>
<msg timestamp="20231129 08:38:35.561" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20231129 08:38:35.555" endtime="20231129 08:38:35.561"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231129 08:38:35.561" endtime="20231129 08:38:35.562"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:38:34.633" endtime="20231129 08:38:35.562"/>
</test>
<test id="s1-s1-s14-t11" name="Zero byte file" line="153">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /s3v/${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:35.565" level="INFO">Running command 'ozone sh bucket info /s3v/erasure 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:39.042" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:39.043" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "s3v",
  "name" : "erasure",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 210786713,
  "usedNamespace" : 55,
  "creationTime" : "2023-11-29T...</msg>
<status status="PASS" starttime="20231129 08:38:35.564" endtime="20231129 08:38:39.043"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:39.044" level="INFO">{
  "metadata" : { },
  "volumeName" : "s3v",
  "name" : "erasure",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 210786713,
  "usedNamespace" : 55,
  "creationTime" : "2023-11-29T08:36:33.249Z",
  "modificationTime" : "2023-11-29T08:36:33.249Z",
  "sourcePathExist" : true,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "FILE_SYSTEM_OPTIMIZED",
  "owner" : "testuser",
  "replicationConfig" : {
    "data" : 3,
    "parity" : 2,
    "ecChunkSize" : 1048576,
    "codec" : "RS",
    "replicationType" : "EC",
    "requiredNodes" : 5
  },
  "link" : false
}</msg>
<status status="PASS" starttime="20231129 08:38:39.043" endtime="20231129 08:38:39.044"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:39.044" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:39.044" endtime="20231129 08:38:39.044"/>
</kw>
<status status="PASS" starttime="20231129 08:38:35.563" endtime="20231129 08:38:39.044"/>
</kw>
<msg timestamp="20231129 08:38:39.044" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:35.563" endtime="20231129 08:38:39.044"/>
</kw>
<msg timestamp="20231129 08:38:39.045" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "s3v",
  "name" : "erasure",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 210786713,
  "usedNamespace" : 55,
  "creationTime" : "2023-11-29T...</msg>
<status status="PASS" starttime="20231129 08:38:35.563" endtime="20231129 08:38:39.045"/>
</kw>
<kw name="Execute" library="os">
<var>${linked}</var>
<arg>echo '${result}' | jq -j '.sourceVolume,"/",.sourceBucket'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:39.047" level="INFO">Running command 'echo '{
  "metadata" : { },
  "volumeName" : "s3v",
  "name" : "erasure",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 210786713,
  "usedNamespace" : 55,
  "creationTime" : "2023-11-29T08:36:33.249Z",
  "modificationTime" : "2023-11-29T08:36:33.249Z",
  "sourcePathExist" : true,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "FILE_SYSTEM_OPTIMIZED",
  "owner" : "testuser",
  "replicationConfig" : {
    "data" : 3,
    "parity" : 2,
    "ecChunkSize" : 1048576,
    "codec" : "RS",
    "replicationType" : "EC",
    "requiredNodes" : 5
  },
  "link" : false
}' | jq -j '.sourceVolume,"/",.sourceBucket' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:39.073" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:39.073" level="INFO">${output} = null/null</msg>
<status status="PASS" starttime="20231129 08:38:39.046" endtime="20231129 08:38:39.073"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:39.074" level="INFO">null/null</msg>
<status status="PASS" starttime="20231129 08:38:39.073" endtime="20231129 08:38:39.074"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:39.074" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:39.074" endtime="20231129 08:38:39.074"/>
</kw>
<status status="PASS" starttime="20231129 08:38:39.046" endtime="20231129 08:38:39.074"/>
</kw>
<msg timestamp="20231129 08:38:39.074" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:39.045" endtime="20231129 08:38:39.075"/>
</kw>
<msg timestamp="20231129 08:38:39.075" level="INFO">${linked} = null/null</msg>
<status status="PASS" starttime="20231129 08:38:39.045" endtime="20231129 08:38:39.075"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${eval}</var>
<arg>"source" in """${linked}"""</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20231129 08:38:39.075" level="INFO">${eval} = False</msg>
<status status="PASS" starttime="20231129 08:38:39.075" endtime="20231129 08:38:39.075"/>
</kw>
<if>
<branch type="IF" condition="${eval} == ${True}">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${linked}</arg>
<status status="NOT RUN" starttime="20231129 08:38:39.076" endtime="20231129 08:38:39.076"/>
</kw>
<status status="NOT RUN" starttime="20231129 08:38:39.075" endtime="20231129 08:38:39.076"/>
</branch>
<status status="PASS" starttime="20231129 08:38:39.075" endtime="20231129 08:38:39.076"/>
</if>
<kw name="Evaluate" library="BuiltIn">
<var>${fsolayout}</var>
<arg>"OPTIMIZED" in """${result}"""</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20231129 08:38:39.076" level="INFO">${fsolayout} = True</msg>
<status status="PASS" starttime="20231129 08:38:39.076" endtime="20231129 08:38:39.076"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/zerobyte --range bytes=0-0 /tmp/testfile2.result</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:39.079" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-9245817576/putobject/key=value/zerobyte --range bytes=0-0 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:39.516" level="INFO">${rc} = 255</msg>
<msg timestamp="20231129 08:38:39.516" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20231129 08:38:39.078" endtime="20231129 08:38:39.516"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:39.517" level="INFO">
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20231129 08:38:39.516" endtime="20231129 08:38:39.517"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:39.518" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:39.517" endtime="20231129 08:38:39.518"/>
</kw>
<msg timestamp="20231129 08:38:39.518" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20231129 08:38:39.077" endtime="20231129 08:38:39.518"/>
</kw>
<msg timestamp="20231129 08:38:39.518" level="INFO">${result} = 
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20231129 08:38:39.077" endtime="20231129 08:38:39.518"/>
</kw>
<if>
<branch type="IF" condition="${fsolayout} == ${True}">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:38:39.519" endtime="20231129 08:38:39.519"/>
</kw>
<status status="PASS" starttime="20231129 08:38:39.518" endtime="20231129 08:38:39.519"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231129 08:38:39.519" endtime="20231129 08:38:39.519"/>
</kw>
<status status="NOT RUN" starttime="20231129 08:38:39.519" endtime="20231129 08:38:39.519"/>
</branch>
<status status="PASS" starttime="20231129 08:38:39.518" endtime="20231129 08:38:39.519"/>
</if>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/zerobyte --range bytes=0-1 /tmp/testfile2.result</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:39.522" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-9245817576/putobject/key=value/zerobyte --range bytes=0-1 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:39.958" level="INFO">${rc} = 255</msg>
<msg timestamp="20231129 08:38:39.958" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20231129 08:38:39.521" endtime="20231129 08:38:39.958"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:39.959" level="INFO">
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20231129 08:38:39.959" endtime="20231129 08:38:39.959"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:39.960" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:39.959" endtime="20231129 08:38:39.960"/>
</kw>
<msg timestamp="20231129 08:38:39.960" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20231129 08:38:39.520" endtime="20231129 08:38:39.960"/>
</kw>
<msg timestamp="20231129 08:38:39.960" level="INFO">${result} = 
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20231129 08:38:39.519" endtime="20231129 08:38:39.960"/>
</kw>
<if>
<branch type="IF" condition="${fsolayout} == ${True}">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:38:39.961" endtime="20231129 08:38:39.961"/>
</kw>
<status status="PASS" starttime="20231129 08:38:39.960" endtime="20231129 08:38:39.961"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231129 08:38:39.961" endtime="20231129 08:38:39.961"/>
</kw>
<status status="NOT RUN" starttime="20231129 08:38:39.961" endtime="20231129 08:38:39.961"/>
</branch>
<status status="PASS" starttime="20231129 08:38:39.960" endtime="20231129 08:38:39.961"/>
</if>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/zerobyte --range bytes=0-10000 /tmp/testfile2.result</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:39.964" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-9245817576/putobject/key=value/zerobyte --range bytes=0-10000 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:40.420" level="INFO">${rc} = 255</msg>
<msg timestamp="20231129 08:38:40.420" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20231129 08:38:39.963" endtime="20231129 08:38:40.420"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:40.422" level="INFO">
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20231129 08:38:40.421" endtime="20231129 08:38:40.422"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:40.422" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:40.422" endtime="20231129 08:38:40.422"/>
</kw>
<msg timestamp="20231129 08:38:40.423" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20231129 08:38:39.962" endtime="20231129 08:38:40.423"/>
</kw>
<msg timestamp="20231129 08:38:40.423" level="INFO">${result} = 
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20231129 08:38:39.961" endtime="20231129 08:38:40.423"/>
</kw>
<if>
<branch type="IF" condition="${fsolayout} == ${True}">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:38:40.424" endtime="20231129 08:38:40.424"/>
</kw>
<status status="PASS" starttime="20231129 08:38:40.423" endtime="20231129 08:38:40.424"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231129 08:38:40.425" endtime="20231129 08:38:40.425"/>
</kw>
<status status="NOT RUN" starttime="20231129 08:38:40.424" endtime="20231129 08:38:40.425"/>
</branch>
<status status="PASS" starttime="20231129 08:38:40.423" endtime="20231129 08:38:40.425"/>
</if>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:38:35.562" endtime="20231129 08:38:40.425"/>
</test>
<test id="s1-s1-s14-t12" name="Create file with user defined metadata" line="183">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:40.429" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile2'.</msg>
<msg timestamp="20231129 08:38:40.431" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:40.431" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:38:40.428" endtime="20231129 08:38:40.431"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:40.432" level="INFO"/>
<status status="PASS" starttime="20231129 08:38:40.431" endtime="20231129 08:38:40.432"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:40.432" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:40.432" endtime="20231129 08:38:40.432"/>
</kw>
<status status="PASS" starttime="20231129 08:38:40.427" endtime="20231129 08:38:40.432"/>
</kw>
<msg timestamp="20231129 08:38:40.432" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:40.427" endtime="20231129 08:38:40.433"/>
</kw>
<status status="PASS" starttime="20231129 08:38:40.426" endtime="20231129 08:38:40.433"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key1 --body /tmp/testfile2 --metadata="custom-key1=custom-value1,custom-key2=custom-value2"</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:40.436" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket erasure --key ozone-test-9245817576/putobject/custom-metadata/key1 --body /tmp/testfile2 --metadata="custom-key1=custom-value1,custom-key2=custom-value2" 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:40.977" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:40.977" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231129 08:38:40.435" endtime="20231129 08:38:40.977"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:40.978" level="INFO">{
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231129 08:38:40.978" endtime="20231129 08:38:40.978"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:40.979" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:40.979" endtime="20231129 08:38:40.980"/>
</kw>
<status status="PASS" starttime="20231129 08:38:40.434" endtime="20231129 08:38:40.980"/>
</kw>
<msg timestamp="20231129 08:38:40.980" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:40.434" endtime="20231129 08:38:40.980"/>
</kw>
<msg timestamp="20231129 08:38:40.980" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231129 08:38:40.433" endtime="20231129 08:38:40.980"/>
</kw>
<status status="PASS" starttime="20231129 08:38:40.433" endtime="20231129 08:38:40.980"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:40.984" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket erasure --key ozone-test-9245817576/putobject/custom-metadata/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:41.420" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:41.420" level="INFO">${output} = {
    "LastModified": "Wed, 29 Nov 2023 08:38:40 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20231129 08:38:40.983" endtime="20231129 08:38:41.421"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:41.422" level="INFO">{
    "LastModified": "Wed, 29 Nov 2023 08:38:40 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Wed, 29 Nov 2023 08:38:41 GMT",
    "Metadata": {
        "custom-key1": "custom-value1",
        "custom-key2": "custom-value2"
    }
}</msg>
<status status="PASS" starttime="20231129 08:38:41.421" endtime="20231129 08:38:41.422"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:41.422" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:41.422" endtime="20231129 08:38:41.422"/>
</kw>
<status status="PASS" starttime="20231129 08:38:40.982" endtime="20231129 08:38:41.423"/>
</kw>
<msg timestamp="20231129 08:38:41.423" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:40.982" endtime="20231129 08:38:41.423"/>
</kw>
<msg timestamp="20231129 08:38:41.423" level="INFO">${output} = {
    "LastModified": "Wed, 29 Nov 2023 08:38:40 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20231129 08:38:40.981" endtime="20231129 08:38:41.423"/>
</kw>
<msg timestamp="20231129 08:38:41.423" level="INFO">${result} = {
    "LastModified": "Wed, 29 Nov 2023 08:38:40 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20231129 08:38:40.981" endtime="20231129 08:38:41.423"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key1\": \"custom-value1\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:38:41.424" endtime="20231129 08:38:41.424"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key2\": \"custom-value2\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:38:41.424" endtime="20231129 08:38:41.424"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /s3v/${BUCKET}/${PREFIX}/putobject/custom-metadata/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:41.427" level="INFO">Running command 'ozone sh key info /s3v/erasure/ozone-test-9245817576/putobject/custom-metadata/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:45.439" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:45.439" level="INFO">${output} = {
  "volumeName" : "s3v",
  "bucketName" : "erasure",
  "name" : "ozone-test-9245817576/putobject/custom-metadata/key1",
  "dataSize" : 11,
  "creationTime" : "2023-11-29T08:38:40.843Z",
  "modificati...</msg>
<status status="PASS" starttime="20231129 08:38:41.426" endtime="20231129 08:38:45.439"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:45.440" level="INFO">{
  "volumeName" : "s3v",
  "bucketName" : "erasure",
  "name" : "ozone-test-9245817576/putobject/custom-metadata/key1",
  "dataSize" : 11,
  "creationTime" : "2023-11-29T08:38:40.843Z",
  "modificationTime" : "2023-11-29T08:38:40.928Z",
  "replicationConfig" : {
    "data" : 3,
    "parity" : 2,
    "ecChunkSize" : 1048576,
    "codec" : "RS",
    "requiredNodes" : 5,
    "replicationType" : "EC"
  },
  "metadata" : {
    "ETag" : "09ad6a6e23191dd19110d0251c4c3186",
    "custom-key1" : "custom-value1",
    "custom-key2" : "custom-value2"
  },
  "ozoneKeyLocations" : [ {
    "containerID" : 5,
    "localID" : 111677748019200054,
    "length" : 11,
    "offset" : 0,
    "keyOffset" : 0
  } ],
  "file" : true
}</msg>
<status status="PASS" starttime="20231129 08:38:45.440" endtime="20231129 08:38:45.440"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:45.441" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:45.440" endtime="20231129 08:38:45.441"/>
</kw>
<status status="PASS" starttime="20231129 08:38:41.425" endtime="20231129 08:38:45.441"/>
</kw>
<msg timestamp="20231129 08:38:45.441" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:41.425" endtime="20231129 08:38:45.441"/>
</kw>
<msg timestamp="20231129 08:38:45.441" level="INFO">${result} = {
  "volumeName" : "s3v",
  "bucketName" : "erasure",
  "name" : "ozone-test-9245817576/putobject/custom-metadata/key1",
  "dataSize" : 11,
  "creationTime" : "2023-11-29T08:38:40.843Z",
  "modificati...</msg>
<status status="PASS" starttime="20231129 08:38:41.425" endtime="20231129 08:38:45.441"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key1\" : \"custom-value1\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:38:45.441" endtime="20231129 08:38:45.442"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key2\" : \"custom-value2\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:38:45.442" endtime="20231129 08:38:45.442"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:38:40.426" endtime="20231129 08:38:45.442"/>
</test>
<test id="s1-s1-s14-t13" name="Create file with user defined metadata with gdpr enabled value in request" line="195">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:45.446" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile2'.</msg>
<msg timestamp="20231129 08:38:45.447" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:45.447" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:38:45.444" endtime="20231129 08:38:45.447"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:45.448" level="INFO"/>
<status status="PASS" starttime="20231129 08:38:45.448" endtime="20231129 08:38:45.448"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:45.449" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:45.448" endtime="20231129 08:38:45.449"/>
</kw>
<status status="PASS" starttime="20231129 08:38:45.444" endtime="20231129 08:38:45.449"/>
</kw>
<msg timestamp="20231129 08:38:45.449" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:45.444" endtime="20231129 08:38:45.449"/>
</kw>
<status status="PASS" starttime="20231129 08:38:45.443" endtime="20231129 08:38:45.449"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key2 --body /tmp/testfile2 --metadata="gdprEnabled=true,custom-key2=custom-value2"</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:45.452" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket erasure --key ozone-test-9245817576/putobject/custom-metadata/key2 --body /tmp/testfile2 --metadata="gdprEnabled=true,custom-key2=custom-value2" 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:45.997" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:45.997" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231129 08:38:45.451" endtime="20231129 08:38:45.997"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:45.998" level="INFO">{
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231129 08:38:45.997" endtime="20231129 08:38:45.998"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:45.998" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:45.998" endtime="20231129 08:38:45.999"/>
</kw>
<status status="PASS" starttime="20231129 08:38:45.450" endtime="20231129 08:38:45.999"/>
</kw>
<msg timestamp="20231129 08:38:45.999" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:45.450" endtime="20231129 08:38:45.999"/>
</kw>
<msg timestamp="20231129 08:38:45.999" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231129 08:38:45.450" endtime="20231129 08:38:45.999"/>
</kw>
<status status="PASS" starttime="20231129 08:38:45.449" endtime="20231129 08:38:45.999"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key2</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:46.002" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket erasure --key ozone-test-9245817576/putobject/custom-metadata/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:46.441" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:46.441" level="INFO">${output} = {
    "LastModified": "Wed, 29 Nov 2023 08:38:45 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20231129 08:38:46.001" endtime="20231129 08:38:46.441"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:46.442" level="INFO">{
    "LastModified": "Wed, 29 Nov 2023 08:38:45 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Wed, 29 Nov 2023 08:38:46 GMT",
    "Metadata": {
        "custom-key2": "custom-value2"
    }
}</msg>
<status status="PASS" starttime="20231129 08:38:46.441" endtime="20231129 08:38:46.442"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:46.443" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:46.442" endtime="20231129 08:38:46.443"/>
</kw>
<status status="PASS" starttime="20231129 08:38:46.001" endtime="20231129 08:38:46.443"/>
</kw>
<msg timestamp="20231129 08:38:46.443" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:46.000" endtime="20231129 08:38:46.443"/>
</kw>
<msg timestamp="20231129 08:38:46.443" level="INFO">${output} = {
    "LastModified": "Wed, 29 Nov 2023 08:38:45 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20231129 08:38:46.000" endtime="20231129 08:38:46.443"/>
</kw>
<msg timestamp="20231129 08:38:46.443" level="INFO">${result} = {
    "LastModified": "Wed, 29 Nov 2023 08:38:45 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20231129 08:38:45.999" endtime="20231129 08:38:46.443"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key2\": \"custom-value2\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:38:46.443" endtime="20231129 08:38:46.444"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"gdprEnabled\": \"true\"</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:38:46.444" endtime="20231129 08:38:46.444"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:38:45.443" endtime="20231129 08:38:46.444"/>
</test>
<test id="s1-s1-s14-t14" name="Create file with user defined metadata size larger than 2 KB" line="203">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:46.448" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile2'.</msg>
<msg timestamp="20231129 08:38:46.449" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:46.449" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:38:46.447" endtime="20231129 08:38:46.449"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:46.450" level="INFO"/>
<status status="PASS" starttime="20231129 08:38:46.450" endtime="20231129 08:38:46.450"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:46.451" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:46.450" endtime="20231129 08:38:46.451"/>
</kw>
<status status="PASS" starttime="20231129 08:38:46.446" endtime="20231129 08:38:46.451"/>
</kw>
<msg timestamp="20231129 08:38:46.451" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:46.446" endtime="20231129 08:38:46.451"/>
</kw>
<status status="PASS" starttime="20231129 08:38:46.446" endtime="20231129 08:38:46.451"/>
</kw>
<kw name="Execute" library="os">
<var>${custom_metadata_value}</var>
<arg>printf 'v%.0s' {1..3000}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:46.453" level="INFO">Running command 'printf 'v%.0s' {1..3000} 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:46.456" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:46.456" level="INFO">${output} = vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv...</msg>
<status status="PASS" starttime="20231129 08:38:46.452" endtime="20231129 08:38:46.456"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:46.457" level="INFO">vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv</msg>
<status status="PASS" starttime="20231129 08:38:46.456" endtime="20231129 08:38:46.457"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:46.457" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:46.457" endtime="20231129 08:38:46.457"/>
</kw>
<status status="PASS" starttime="20231129 08:38:46.452" endtime="20231129 08:38:46.458"/>
</kw>
<msg timestamp="20231129 08:38:46.458" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:46.452" endtime="20231129 08:38:46.458"/>
</kw>
<msg timestamp="20231129 08:38:46.458" level="INFO">${custom_metadata_value} = vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv...</msg>
<status status="PASS" starttime="20231129 08:38:46.451" endtime="20231129 08:38:46.458"/>
</kw>
<kw name="Execute AWSS3APICli and ignore error" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key2 --body /tmp/testfile2 --metadata="custom-key1=${custom_metadata_value}"</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:46.461" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket erasure --key ozone-test-9245817576/putobject/custom-metadata/key2 --body /tmp/testfile2 --metadata="custom-key1=vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv" 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:46.917" level="INFO">${rc} = 255</msg>
<msg timestamp="20231129 08:38:46.917" level="INFO">${output} = 
An error occurred (MetadataTooLarge) when calling the PutObject operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20231129 08:38:46.459" endtime="20231129 08:38:46.917"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:46.918" level="INFO">
An error occurred (MetadataTooLarge) when calling the PutObject operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20231129 08:38:46.918" endtime="20231129 08:38:46.918"/>
</kw>
<msg timestamp="20231129 08:38:46.918" level="INFO">${output} = 
An error occurred (MetadataTooLarge) when calling the PutObject operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20231129 08:38:46.459" endtime="20231129 08:38:46.918"/>
</kw>
<msg timestamp="20231129 08:38:46.919" level="INFO">${result} = 
An error occurred (MetadataTooLarge) when calling the PutObject operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20231129 08:38:46.458" endtime="20231129 08:38:46.919"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>custom-key1: ${custom_metadata_value}</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:38:46.919" endtime="20231129 08:38:46.919"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:38:46.445" endtime="20231129 08:38:46.919"/>
</test>
<test id="s1-s1-s14-t15" name="Create small file and expect ETag (MD5) in a reponse header" line="209">
<kw name="Execute" library="os">
<arg>head -c 1MB &lt;/dev/urandom &gt; /tmp/small_file</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:46.923" level="INFO">Running command 'head -c 1MB &lt;/dev/urandom &gt; /tmp/small_file'.</msg>
<msg timestamp="20231129 08:38:46.928" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:46.928" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:38:46.922" endtime="20231129 08:38:46.928"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:46.929" level="INFO"/>
<status status="PASS" starttime="20231129 08:38:46.928" endtime="20231129 08:38:46.929"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:46.929" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:46.929" endtime="20231129 08:38:46.929"/>
</kw>
<status status="PASS" starttime="20231129 08:38:46.921" endtime="20231129 08:38:46.930"/>
</kw>
<msg timestamp="20231129 08:38:46.930" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:46.921" endtime="20231129 08:38:46.930"/>
</kw>
<status status="PASS" starttime="20231129 08:38:46.920" endtime="20231129 08:38:46.930"/>
</kw>
<kw name="Execute" library="os">
<var>${file_md5_checksum}</var>
<arg>md5sum /tmp/small_file | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:46.932" level="INFO">Running command 'md5sum /tmp/small_file | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:46.936" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:46.936" level="INFO">${output} = aa2716e64c37079219027b187fd5f6f1</msg>
<status status="PASS" starttime="20231129 08:38:46.931" endtime="20231129 08:38:46.936"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:46.936" level="INFO">aa2716e64c37079219027b187fd5f6f1</msg>
<status status="PASS" starttime="20231129 08:38:46.936" endtime="20231129 08:38:46.936"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:46.937" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:46.937" endtime="20231129 08:38:46.937"/>
</kw>
<status status="PASS" starttime="20231129 08:38:46.930" endtime="20231129 08:38:46.937"/>
</kw>
<msg timestamp="20231129 08:38:46.937" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:46.930" endtime="20231129 08:38:46.937"/>
</kw>
<msg timestamp="20231129 08:38:46.937" level="INFO">${file_md5_checksum} = aa2716e64c37079219027b187fd5f6f1</msg>
<status status="PASS" starttime="20231129 08:38:46.930" endtime="20231129 08:38:46.937"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/small_file s3://${BUCKET}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:46.940" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp /tmp/small_file s3://erasure 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:47.478" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:47.478" level="INFO">${output} = 2023-11-29 08:38:47,274 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10
2023-11-29 08:38:47,274 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20231129 08:38:46.939" endtime="20231129 08:38:47.478"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:47.479" level="INFO">2023-11-29 08:38:47,274 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10
2023-11-29 08:38:47,274 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', '/tmp/small_file', 's3://erasure']
2023-11-29 08:38:47,274 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7f89d669d9d8&gt;
2023-11-29 08:38:47,275 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7f89d7492730&gt;
2023-11-29 08:38:47,275 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7f89d74c0ae8&gt;
2023-11-29 08:38:47,275 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2023-11-29 08:38:47,279 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7f89d67c9400&gt;
2023-11-29 08:38:47,279 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7f89d66ab048&gt;
2023-11-29 08:38:47,280 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f89de3aba90&gt;
2023-11-29 08:38:47,280 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7f89d66ab048&gt;
2023-11-29 08:38:47,281 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f89de3aba90&gt;
2023-11-29 08:38:47,282 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f89de3aba90&gt;
2023-11-29 08:38:47,282 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f89d74906a0&gt;
2023-11-29 08:38:47,282 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f89de3aba90&gt;
2023-11-29 08:38:47,282 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f89d74906a0&gt;
2023-11-29 08:38:47,282 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f89de3aba90&gt;
2023-11-29 08:38:47,282 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f89de3aba90&gt;
2023-11-29 08:38:47,282 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f89de3aba90&gt;
2023-11-29 08:38:47,282 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f89d74906a0&gt;
2023-11-29 08:38:47,282 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f89de3aba90&gt;
2023-11-29 08:38:47,283 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f89de3aba90&gt;
2023-11-29 08:38:47,283 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f89de3aba90&gt;
2023-11-29 08:38:47,283 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f89de3aba90&gt;
2023-11-29 08:38:47,283 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f89de3aba90&gt;
2023-11-29 08:38:47,283 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f89de3aba90&gt;
2023-11-29 08:38:47,283 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f89de3aba90&gt;
2023-11-29 08:38:47,283 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f89de3aba90&gt;
2023-11-29 08:38:47,284 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f89de3aba90&gt;
2023-11-29 08:38:47,284 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f89de3aba90&gt;
2023-11-29 08:38:47,284 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f89de3aba90&gt;
2023-11-29 08:38:47,284 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f89de3aba90&gt;
2023-11-29 08:38:47,284 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f89de3aba90&gt;
2023-11-29 08:38:47,284 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f89de3aba90&gt;
2023-11-29 08:38:47,284 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f89de3aba90&gt;
2023-11-29 08:38:47,284 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f89de3aba90&gt;
2023-11-29 08:38:47,285 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f89de3aba90&gt;
2023-11-29 08:38:47,285 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f89de3aba90&gt;
2023-11-29 08:38:47,285 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f89d74906a0&gt;
2023-11-29 08:38:47,285 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f89de3aba90&gt;
2023-11-29 08:38:47,285 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f89de3aba90&gt;
2023-11-29 08:38:47,285 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f89de3aba90&gt;
2023-11-29 08:38:47,285 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f89d74906a0&gt;
2023-11-29 08:38:47,285 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f89de3aba90&gt;
2023-11-29 08:38:47,285 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f89d74906a0&gt;
2023-11-29 08:38:47,285 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f89de3aba90&gt;
2023-11-29 08:38:47,285 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f89de3aba90&gt;
2023-11-29 08:38:47,286 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f89de3aba90&gt;
2023-11-29 08:38:47,286 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f89de3aba90&gt;
2023-11-29 08:38:47,286 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f89de3aba90&gt;
2023-11-29 08:38:47,286 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2023-11-29 08:38:47,286 - MainThread - botocore.credentials - INFO - Found credentials in environment variables.
2023-11-29 08:38:47,287 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/endpoints.json
2023-11-29 08:38:47,300 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/sdk-default-configuration.json
2023-11-29 08:38:47,300 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f89d8157378&gt;
2023-11-29 08:38:47,301 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/s3/2006-03-01/service-2.json
2023-11-29 08:38:47,311 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f89d842c2f0&gt;
2023-11-29 08:38:47,311 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f89d842c0d0&gt;
2023-11-29 08:38:47,311 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-11-29 08:38:47,314 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2023-11-29 08:38:47,314 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/_retry.json
2023-11-29 08:38:47,315 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2023-11-29 08:38:47,316 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-11-29 08:38:47,316 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f89d8157378&gt;
2023-11-29 08:38:47,317 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f89d842c2f0&gt;
2023-11-29 08:38:47,317 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f89d842c0d0&gt;
2023-11-29 08:38:47,317 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-11-29 08:38:47,319 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2023-11-29 08:38:47,320 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2023-11-29 08:38:47,321 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-11-29 08:38:47,321 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f89d8157378&gt;
2023-11-29 08:38:47,322 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f89d842c2f0&gt;
2023-11-29 08:38:47,322 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f89d842c0d0&gt;
2023-11-29 08:38:47,322 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-11-29 08:38:47,325 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2023-11-29 08:38:47,325 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2023-11-29 08:38:47,326 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-11-29 08:38:47,327 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2023-11-29 08:38:47,327 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2023-11-29 08:38:47,328 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f89d5f4ada0&gt;}) about to wait for the following futures []
2023-11-29 08:38:47,328 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f89d5f4ada0&gt;}) done waiting for dependent futures
2023-11-29 08:38:47,329 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f89d5f4ada0&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f89d6008c50&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7f89d5f7ada0&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7f89d5f7ae10&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7f89d5f7af98&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f89d5f4ada0&gt;}
2023-11-29 08:38:47,329 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task PutObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'small_file', 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f89d5f7af98&gt; for transfer request: 0.
2023-11-29 08:38:47,329 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2023-11-29 08:38:47,329 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - PutObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'small_file', 'extra_args': {}}) about to wait for the following futures []
2023-11-29 08:38:47,330 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - PutObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'small_file', 'extra_args': {}}) done waiting for dependent futures
2023-11-29 08:38:47,330 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task PutObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'small_file', 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f89d6008c50&gt;, 'fileobj': &lt;s3transfer.utils.ReadFileChunk object at 0x7f89d5f5b278&gt;, 'bucket': 'erasure', 'key': 'small_file', 'extra_args': {}}
2023-11-29 08:38:47,330 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function validate_ascii_metadata at 0x7f89d81706a8&gt;
2023-11-29 08:38:47,330 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function sse_md5 at 0x7f89d816dae8&gt;
2023-11-29 08:38:47,331 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function convert_body_to_file_like_object at 0x7f89d8170f28&gt;
2023-11-29 08:38:47,331 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function validate_bucket_name at 0x7f89d816da60&gt;
2023-11-29 08:38:47,331 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7f89d5fd91d0&gt;&gt;
2023-11-29 08:38:47,331 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-11-29 08:38:47,331 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7f89d5fd9588&gt;&gt;
2023-11-29 08:38:47,331 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function generate_idempotent_uuid at 0x7f89d816d8c8&gt;
2023-11-29 08:38:47,331 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function conditionally_calculate_md5 at 0x7f89d8b130d0&gt;
2023-11-29 08:38:47,333 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_expect_header at 0x7f89d816dd90&gt;
2023-11-29 08:38:47,333 - ThreadPoolExecutor-0_0 - botocore.handlers - DEBUG - Adding expect 100 continue header to request.
2023-11-29 08:38:47,334 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7f89d5fd91d0&gt;&gt;
2023-11-29 08:38:47,334 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_recursion_detection_header at 0x7f89d816d598&gt;
2023-11-29 08:38:47,334 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7f89d80f40d0&gt;
2023-11-29 08:38:47,334 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=PutObject) with params: {'url_path': '/erasure/small_file', 'query_string': {}, 'method': 'PUT', 'headers': {'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10', 'Content-MD5': 'qicW5kw3B5IZAnsYf9X28Q==', 'Expect': '100-continue'}, 'body': &lt;s3transfer.utils.ReadFileChunk object at 0x7f89d5f5b278&gt;, 'url': 'http://s3g:9878/erasure/small_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f89d6008e48&gt;, 'has_streaming_input': True, 'auth_type': None, 'signing': {'bucket': 'erasure'}}}
2023-11-29 08:38:47,334 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function signal_not_transferring at 0x7f89da695158&gt;
2023-11-29 08:38:47,334 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f89d6008e10&gt;&gt;
2023-11-29 08:38:47,334 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.PutObject: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7f89d5fd95f8&gt;&gt;
2023-11-29 08:38:47,334 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.PutObject: calling handler &lt;function set_operation_specific_signer at 0x7f89d816d7b8&gt;
2023-11-29 08:38:47,335 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.PutObject: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7f89d5fd95f8&gt;&gt;
2023-11-29 08:38:47,335 - ThreadPoolExecutor-0_0 - botocore.utils - DEBUG - Using S3 path style addressing.
2023-11-29 08:38:47,336 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2023-11-29 08:38:47,336 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
PUT
/erasure/small_file

content-md5:qicW5kw3B5IZAnsYf9X28Q==
host:s3g:9878
x-amz-content-sha256:1ded8847c077aaee1354e21a394a7fa68c5a0cad1a5e65810fb48c1d801dd545
x-amz-date:20231129T083847Z

content-md5;host;x-amz-content-sha256;x-amz-date
1ded8847c077aaee1354e21a394a7fa68c5a0cad1a5e65810fb48c1d801dd545
2023-11-29 08:38:47,336 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20231129T083847Z
20231129/us-west-1/s3/aws4_request
725705f6ecac5fb023fd82d0f3998c96a385eb48f0a951fca25ba2bf8cf72d72
2023-11-29 08:38:47,336 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
72d9db485ba4258f0f111e6a14db484d69015df4a55705eddce3f8ee04197d44
2023-11-29 08:38:47,336 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function signal_transferring at 0x7f89da6951e0&gt;
2023-11-29 08:38:47,336 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function add_retry_headers at 0x7f89d80f4730&gt;
2023-11-29 08:38:47,336 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=PUT, url=http://s3g:9878/erasure/small_file, headers={'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10', 'Content-MD5': b'qicW5kw3B5IZAnsYf9X28Q==', 'Expect': b'100-continue', 'X-Amz-Date': b'20231129T083847Z', 'X-Amz-Content-SHA256': b'1ded8847c077aaee1354e21a394a7fa68c5a0cad1a5e65810fb48c1d801dd545', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/scm@EXAMPLE.COM/20231129/us-west-1/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date, Signature=72d9db485ba4258f0f111e6a14db484d69015df4a55705eddce3f8ee04197d44', 'amz-sdk-invocation-id': b'3ca87e79-68bf-49bf-bc79-5c33dfad4927', 'amz-sdk-request': b'attempt=1', 'Content-Length': '1000000'}&gt;
2023-11-29 08:38:47,337 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2023-11-29 08:38:47,338 - ThreadPoolExecutor-0_0 - botocore.awsrequest - DEBUG - Waiting for 100 Continue response.
2023-11-29 08:38:47,339 - ThreadPoolExecutor-0_0 - botocore.awsrequest - DEBUG - 100 Continue response seen, now sending request body.
Completed 256.0 KiB/976.6 KiB (8.6 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/976.6 KiB (16.6 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/976.6 KiB (24.3 MiB/s) with 1 file(s) remaining
2023-11-29 08:38:47,436 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "PUT /erasure/small_file HTTP/1.1" 200 0
2023-11-29 08:38:47,436 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Wed, 29 Nov 2023 08:38:47 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Wed, 29 Nov 2023 08:38:47 GMT', 'Pragma': 'no-cache', 'Content-Type': 'text/plain;charset=utf-8', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': '"aa2716e64c37079219027b187fd5f6f1"', 'Server': 'Ozone', 'x-amz-id-2': 'A6CmLcHYxlsTnq8', 'x-amz-request-id': 'ce2d2ed9-9ca2-431c-b876-735d0081bc25', 'Content-Length': '0'}
2023-11-29 08:38:47,436 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
b''
2023-11-29 08:38:47,437 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f89d5fd9208&gt;
2023-11-29 08:38:47,437 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2023-11-29 08:38:47,437 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7f89d5fd91d0&gt;&gt;
2023-11-29 08:38:47,437 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.PutObject: calling handler &lt;function enhance_error_msg at 0x7f89d669d598&gt;
Completed 976.6 KiB/976.6 KiB (8.8 MiB/s) with 1 file(s) remaining 
2023-11-29 08:38:47,437 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
upload: ../../tmp/small_file to s3://erasure/small_file            
2023-11-29 08:38:47,438 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20231129 08:38:47.478" endtime="20231129 08:38:47.479"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:47.480" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:47.479" endtime="20231129 08:38:47.480"/>
</kw>
<status status="PASS" starttime="20231129 08:38:46.939" endtime="20231129 08:38:47.480"/>
</kw>
<msg timestamp="20231129 08:38:47.480" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:46.938" endtime="20231129 08:38:47.480"/>
</kw>
<msg timestamp="20231129 08:38:47.481" level="INFO">${output} = 2023-11-29 08:38:47,274 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10
2023-11-29 08:38:47,274 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20231129 08:38:46.938" endtime="20231129 08:38:47.481"/>
</kw>
<msg timestamp="20231129 08:38:47.481" level="INFO">${result} = 2023-11-29 08:38:47,274 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10
2023-11-29 08:38:47,274 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20231129 08:38:46.938" endtime="20231129 08:38:47.481"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>(?i)Response header.*ETag':\ '"${file_md5_checksum}"'</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:38:47.481" endtime="20231129 08:38:47.482"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:38:46.920" endtime="20231129 08:38:47.482"/>
</test>
<test id="s1-s1-s14-t16" name="Download small file end expect ETag (MD5) in a response header" line="216">
<kw name="Execute" library="os">
<var>${file_md5_checksum}</var>
<arg>md5sum /tmp/small_file | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:47.486" level="INFO">Running command 'md5sum /tmp/small_file | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:47.489" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:47.490" level="INFO">${output} = aa2716e64c37079219027b187fd5f6f1</msg>
<status status="PASS" starttime="20231129 08:38:47.484" endtime="20231129 08:38:47.490"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:47.490" level="INFO">aa2716e64c37079219027b187fd5f6f1</msg>
<status status="PASS" starttime="20231129 08:38:47.490" endtime="20231129 08:38:47.490"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:47.491" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:47.490" endtime="20231129 08:38:47.491"/>
</kw>
<status status="PASS" starttime="20231129 08:38:47.484" endtime="20231129 08:38:47.491"/>
</kw>
<msg timestamp="20231129 08:38:47.491" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:47.484" endtime="20231129 08:38:47.491"/>
</kw>
<msg timestamp="20231129 08:38:47.491" level="INFO">${file_md5_checksum} = aa2716e64c37079219027b187fd5f6f1</msg>
<status status="PASS" starttime="20231129 08:38:47.483" endtime="20231129 08:38:47.491"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<var>${result}</var>
<arg>cp s3://${BUCKET}/small_file /tmp/small_file_downloaded</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:47.494" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp s3://erasure/small_file /tmp/small_file_downloaded 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:47.967" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:47.968" level="INFO">${output} = 2023-11-29 08:38:47,827 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10
2023-11-29 08:38:47,827 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20231129 08:38:47.493" endtime="20231129 08:38:47.968"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:47.969" level="INFO">2023-11-29 08:38:47,827 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10
2023-11-29 08:38:47,827 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', 's3://erasure/small_file', '/tmp/small_file_downloaded']
2023-11-29 08:38:47,828 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7fdef48cd9d8&gt;
2023-11-29 08:38:47,828 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7fdef56c1730&gt;
2023-11-29 08:38:47,828 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7fdef56efae8&gt;
2023-11-29 08:38:47,828 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2023-11-29 08:38:47,832 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7fdef49f9400&gt;
2023-11-29 08:38:47,832 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7fdef48db048&gt;
2023-11-29 08:38:47,833 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdefc5dba90&gt;
2023-11-29 08:38:47,833 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7fdef48db048&gt;
2023-11-29 08:38:47,835 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdefc5dba90&gt;
2023-11-29 08:38:47,835 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdefc5dba90&gt;
2023-11-29 08:38:47,835 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fdef56bf6a0&gt;
2023-11-29 08:38:47,835 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdefc5dba90&gt;
2023-11-29 08:38:47,835 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fdef56bf6a0&gt;
2023-11-29 08:38:47,835 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdefc5dba90&gt;
2023-11-29 08:38:47,835 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdefc5dba90&gt;
2023-11-29 08:38:47,836 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdefc5dba90&gt;
2023-11-29 08:38:47,836 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fdef56bf6a0&gt;
2023-11-29 08:38:47,836 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdefc5dba90&gt;
2023-11-29 08:38:47,836 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdefc5dba90&gt;
2023-11-29 08:38:47,836 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdefc5dba90&gt;
2023-11-29 08:38:47,836 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdefc5dba90&gt;
2023-11-29 08:38:47,836 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdefc5dba90&gt;
2023-11-29 08:38:47,836 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdefc5dba90&gt;
2023-11-29 08:38:47,836 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdefc5dba90&gt;
2023-11-29 08:38:47,837 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdefc5dba90&gt;
2023-11-29 08:38:47,837 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdefc5dba90&gt;
2023-11-29 08:38:47,837 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdefc5dba90&gt;
2023-11-29 08:38:47,837 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdefc5dba90&gt;
2023-11-29 08:38:47,837 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdefc5dba90&gt;
2023-11-29 08:38:47,837 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdefc5dba90&gt;
2023-11-29 08:38:47,837 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdefc5dba90&gt;
2023-11-29 08:38:47,838 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdefc5dba90&gt;
2023-11-29 08:38:47,838 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdefc5dba90&gt;
2023-11-29 08:38:47,838 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdefc5dba90&gt;
2023-11-29 08:38:47,838 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdefc5dba90&gt;
2023-11-29 08:38:47,838 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fdef56bf6a0&gt;
2023-11-29 08:38:47,838 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdefc5dba90&gt;
2023-11-29 08:38:47,838 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdefc5dba90&gt;
2023-11-29 08:38:47,838 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdefc5dba90&gt;
2023-11-29 08:38:47,838 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fdef56bf6a0&gt;
2023-11-29 08:38:47,839 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdefc5dba90&gt;
2023-11-29 08:38:47,839 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fdef56bf6a0&gt;
2023-11-29 08:38:47,839 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdefc5dba90&gt;
2023-11-29 08:38:47,839 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdefc5dba90&gt;
2023-11-29 08:38:47,839 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdefc5dba90&gt;
2023-11-29 08:38:47,839 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdefc5dba90&gt;
2023-11-29 08:38:47,839 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fdefc5dba90&gt;
2023-11-29 08:38:47,840 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2023-11-29 08:38:47,840 - MainThread - botocore.credentials - INFO - Found credentials in environment variables.
2023-11-29 08:38:47,840 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/endpoints.json
2023-11-29 08:38:47,853 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/sdk-default-configuration.json
2023-11-29 08:38:47,853 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7fdef6387378&gt;
2023-11-29 08:38:47,854 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/s3/2006-03-01/service-2.json
2023-11-29 08:38:47,864 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7fdef665c2f0&gt;
2023-11-29 08:38:47,864 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7fdef665c0d0&gt;
2023-11-29 08:38:47,864 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-11-29 08:38:47,866 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2023-11-29 08:38:47,867 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/_retry.json
2023-11-29 08:38:47,867 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2023-11-29 08:38:47,868 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-11-29 08:38:47,869 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7fdef6387378&gt;
2023-11-29 08:38:47,869 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7fdef665c2f0&gt;
2023-11-29 08:38:47,869 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7fdef665c0d0&gt;
2023-11-29 08:38:47,870 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-11-29 08:38:47,872 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2023-11-29 08:38:47,873 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2023-11-29 08:38:47,873 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-11-29 08:38:47,873 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7fdef6387378&gt;
2023-11-29 08:38:47,875 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7fdef665c2f0&gt;
2023-11-29 08:38:47,875 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7fdef665c0d0&gt;
2023-11-29 08:38:47,875 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-11-29 08:38:47,877 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2023-11-29 08:38:47,878 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2023-11-29 08:38:47,879 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-11-29 08:38:47,879 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2023-11-29 08:38:47,880 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function sse_md5 at 0x7fdef639dae8&gt;
2023-11-29 08:38:47,880 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function validate_bucket_name at 0x7fdef639da60&gt;
2023-11-29 08:38:47,880 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7fdef41aa748&gt;&gt;
2023-11-29 08:38:47,880 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7fdef41aab00&gt;&gt;
2023-11-29 08:38:47,880 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function generate_idempotent_uuid at 0x7fdef639d8c8&gt;
2023-11-29 08:38:47,880 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function add_expect_header at 0x7fdef639dd90&gt;
2023-11-29 08:38:47,880 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7fdef41aa748&gt;&gt;
2023-11-29 08:38:47,880 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function add_recursion_detection_header at 0x7fdef639d598&gt;
2023-11-29 08:38:47,881 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7fdef63240d0&gt;
2023-11-29 08:38:47,881 - MainThread - botocore.endpoint - DEBUG - Making request for OperationModel(name=HeadObject) with params: {'url_path': '/erasure/small_file', 'query_string': {}, 'method': 'HEAD', 'headers': {'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10'}, 'body': b'', 'url': 'http://s3g:9878/erasure/small_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7fdef41aa400&gt;, 'has_streaming_input': False, 'auth_type': None, 'signing': {'bucket': 'erasure'}}}
2023-11-29 08:38:47,881 - MainThread - botocore.hooks - DEBUG - Event request-created.s3.HeadObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7fdef41aa3c8&gt;&gt;
2023-11-29 08:38:47,881 - MainThread - botocore.hooks - DEBUG - Event choose-signer.s3.HeadObject: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7fdef41aab70&gt;&gt;
2023-11-29 08:38:47,881 - MainThread - botocore.hooks - DEBUG - Event choose-signer.s3.HeadObject: calling handler &lt;function set_operation_specific_signer at 0x7fdef639d7b8&gt;
2023-11-29 08:38:47,881 - MainThread - botocore.hooks - DEBUG - Event before-sign.s3.HeadObject: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7fdef41aab70&gt;&gt;
2023-11-29 08:38:47,881 - MainThread - botocore.utils - DEBUG - Using S3 path style addressing.
2023-11-29 08:38:47,882 - MainThread - botocore.auth - DEBUG - Calculating signature using v4 auth.
2023-11-29 08:38:47,882 - MainThread - botocore.auth - DEBUG - CanonicalRequest:
HEAD
/erasure/small_file

host:s3g:9878
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20231129T083847Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2023-11-29 08:38:47,882 - MainThread - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20231129T083847Z
20231129/us-west-1/s3/aws4_request
f230ffb44719b946bd88140630eaf95b43e696dd35ecf22185899ca8652c1582
2023-11-29 08:38:47,882 - MainThread - botocore.auth - DEBUG - Signature:
81eae6c2173f15271855438cc51f3fe41a1c922e629ecd7a0bad016ab0d72c78
2023-11-29 08:38:47,882 - MainThread - botocore.hooks - DEBUG - Event request-created.s3.HeadObject: calling handler &lt;function add_retry_headers at 0x7fdef6324730&gt;
2023-11-29 08:38:47,882 - MainThread - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=HEAD, url=http://s3g:9878/erasure/small_file, headers={'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10', 'X-Amz-Date': b'20231129T083847Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/scm@EXAMPLE.COM/20231129/us-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=81eae6c2173f15271855438cc51f3fe41a1c922e629ecd7a0bad016ab0d72c78', 'amz-sdk-invocation-id': b'ad1744a5-b9d9-4c8e-aea7-5e0a8a8908b5', 'amz-sdk-request': b'attempt=1'}&gt;
2023-11-29 08:38:47,883 - MainThread - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2023-11-29 08:38:47,889 - MainThread - urllib3.connectionpool - DEBUG - http://s3g:9878 "HEAD /erasure/small_file HTTP/1.1" 200 0
2023-11-29 08:38:47,890 - MainThread - botocore.parsers - DEBUG - Response headers: {'Date': 'Wed, 29 Nov 2023 08:38:47 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Wed, 29 Nov 2023 08:38:47 GMT', 'Pragma': 'no-cache', 'Content-Type': 'binary/octet-stream', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': '"aa2716e64c37079219027b187fd5f6f1"', 'Last-Modified': 'Wed, 29 Nov 2023 08:38:47 GMT', 'Server': 'Ozone', 'x-amz-id-2': '4WpdlRCfOX', 'x-amz-request-id': '5f5d1912-ff70-465c-a795-26694e19578f', 'Content-Length': '1000000'}
2023-11-29 08:38:47,890 - MainThread - botocore.parsers - DEBUG - Response body:
b''
2023-11-29 08:38:47,890 - MainThread - botocore.hooks - DEBUG - Event needs-retry.s3.HeadObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7fdef41aa780&gt;
2023-11-29 08:38:47,890 - MainThread - botocore.retryhandler - DEBUG - No retry needed.
2023-11-29 08:38:47,890 - MainThread - botocore.hooks - DEBUG - Event needs-retry.s3.HeadObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7fdef41aa748&gt;&gt;
2023-11-29 08:38:47,891 - MainThread - botocore.hooks - DEBUG - Event after-call.s3.HeadObject: calling handler &lt;function enhance_error_msg at 0x7fdef48cd598&gt;
2023-11-29 08:38:47,892 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2023-11-29 08:38:47,892 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fdef4194780&gt;}) about to wait for the following futures []
2023-11-29 08:38:47,892 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fdef4194780&gt;}) done waiting for dependent futures
2023-11-29 08:38:47,892 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fdef4194780&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7fdef4238c50&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7fdef41aada0&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7fdef41aae10&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7fdef41aaf98&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fdef4194780&gt;, 'io_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7fdef417a3c8&gt;}
2023-11-29 08:38:47,893 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task ImmediatelyWriteIOGetObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'small_file', 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fdef41aaf98&gt; for transfer request: 0.
2023-11-29 08:38:47,893 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2023-11-29 08:38:47,893 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - ImmediatelyWriteIOGetObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'small_file', 'extra_args': {}}) about to wait for the following futures []
2023-11-29 08:38:47,893 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-11-29 08:38:47,893 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - ImmediatelyWriteIOGetObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'small_file', 'extra_args': {}}) done waiting for dependent futures
2023-11-29 08:38:47,894 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task ImmediatelyWriteIOGetObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'small_file', 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7fdef4238c50&gt;, 'bucket': 'erasure', 'key': 'small_file', 'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fdef4194e80&gt;, 'extra_args': {}, 'callbacks': [functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.ProvideSizeSubscriber object at 0x7fdef4194eb8&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7fdef4194780&gt;), functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.DirectoryCreatorSubscriber object at 0x7fdef4194940&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7fdef4194780&gt;), functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.ProvideLastModifiedTimeSubscriber object at 0x7fdef4194ef0&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7fdef4194780&gt;), functools.partial(&lt;bound method BaseResultSubscriber.on_progress of &lt;awscli.customizations.s3.results.DownloadResultSubscriber object at 0x7fdef4194d68&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7fdef4194780&gt;)], 'max_attempts': 5, 'download_output_manager': &lt;s3transfer.download.DownloadFilenameOutputManager object at 0x7fdef417a9b0&gt;, 'io_chunksize': 262144, 'bandwidth_limiter': None}
2023-11-29 08:38:47,894 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function sse_md5 at 0x7fdef639dae8&gt;
2023-11-29 08:38:47,894 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function validate_bucket_name at 0x7fdef639da60&gt;
2023-11-29 08:38:47,894 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7fdef420a1d0&gt;&gt;
2023-11-29 08:38:47,894 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7fdef420a588&gt;&gt;
2023-11-29 08:38:47,894 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function generate_idempotent_uuid at 0x7fdef639d8c8&gt;
2023-11-29 08:38:47,895 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_expect_header at 0x7fdef639dd90&gt;
2023-11-29 08:38:47,895 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7fdef420a1d0&gt;&gt;
2023-11-29 08:38:47,895 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_recursion_detection_header at 0x7fdef639d598&gt;
2023-11-29 08:38:47,895 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7fdef63240d0&gt;
2023-11-29 08:38:47,895 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=GetObject) with params: {'url_path': '/erasure/small_file', 'query_string': {}, 'method': 'GET', 'headers': {'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10'}, 'body': b'', 'url': 'http://s3g:9878/erasure/small_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7fdef4238e48&gt;, 'has_streaming_input': False, 'auth_type': None, 'signing': {'bucket': 'erasure'}}}
2023-11-29 08:38:47,895 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function signal_not_transferring at 0x7fdef88c5158&gt;
2023-11-29 08:38:47,895 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7fdef4238e10&gt;&gt;
2023-11-29 08:38:47,896 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.GetObject: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7fdef420a5f8&gt;&gt;
2023-11-29 08:38:47,896 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.GetObject: calling handler &lt;function set_operation_specific_signer at 0x7fdef639d7b8&gt;
2023-11-29 08:38:47,896 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.GetObject: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7fdef420a5f8&gt;&gt;
2023-11-29 08:38:47,896 - ThreadPoolExecutor-0_0 - botocore.utils - DEBUG - Using S3 path style addressing.
2023-11-29 08:38:47,896 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2023-11-29 08:38:47,896 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
GET
/erasure/small_file

host:s3g:9878
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20231129T083847Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2023-11-29 08:38:47,896 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20231129T083847Z
20231129/us-west-1/s3/aws4_request
ae752cca9c2e51e8d27711009481c5a8d544b915b60f72504da177d235ebfa73
2023-11-29 08:38:47,896 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
c69405d5100aa2f063e739b7d1a61b923e33310abb75e03366a93cd0d6ecdf60
2023-11-29 08:38:47,896 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function signal_transferring at 0x7fdef88c51e0&gt;
2023-11-29 08:38:47,896 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function add_retry_headers at 0x7fdef6324730&gt;
2023-11-29 08:38:47,896 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=True, method=GET, url=http://s3g:9878/erasure/small_file, headers={'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10', 'X-Amz-Date': b'20231129T083847Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/scm@EXAMPLE.COM/20231129/us-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=c69405d5100aa2f063e739b7d1a61b923e33310abb75e03366a93cd0d6ecdf60', 'amz-sdk-invocation-id': b'1e79a211-cca5-48ac-9ae6-6cd0de3ea9de', 'amz-sdk-request': b'attempt=1'}&gt;
2023-11-29 08:38:47,897 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2023-11-29 08:38:47,922 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "GET /erasure/small_file HTTP/1.1" 200 1000000
2023-11-29 08:38:47,922 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Wed, 29 Nov 2023 08:38:47 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Wed, 29 Nov 2023 08:38:47 GMT', 'Pragma': 'no-cache', 'Content-Type': 'application/octet-stream', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': '"aa2716e64c37079219027b187fd5f6f1"', 'Accept-Ranges': 'bytes', 'Last-Modified': 'Wed, 29 Nov 2023 08:38:47 GMT', 'Server': 'Ozone', 'x-amz-id-2': 'dQl3kDI0iHTSMke', 'x-amz-request-id': '13ac0680-f2a0-49ea-9548-26e7f8f11b06', 'Content-Length': '1000000'}
2023-11-29 08:38:47,922 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
&lt;botocore.response.StreamingBody object at 0x7fdef0bb8358&gt;
2023-11-29 08:38:47,923 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7fdef420a208&gt;
2023-11-29 08:38:47,923 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2023-11-29 08:38:47,923 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7fdef420a1d0&gt;&gt;
2023-11-29 08:38:47,924 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.GetObject: calling handler &lt;function enhance_error_msg at 0x7fdef48cd598&gt;
2023-11-29 08:38:47,924 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 0}) about to wait for the following futures []
2023-11-29 08:38:47,924 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 0}) done waiting for dependent futures
2023-11-29 08:38:47,925 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 0}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fdef4194e80&gt;, 'offset': 0}
Completed 256.0 KiB/976.6 KiB (8.0 MiB/s) with 1 file(s) remaining
2023-11-29 08:38:47,926 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 262144}) about to wait for the following futures []
Completed 512.0 KiB/976.6 KiB (15.4 MiB/s) with 1 file(s) remaining
2023-11-29 08:38:47,926 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 262144}) done waiting for dependent futures
2023-11-29 08:38:47,926 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 262144}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fdef4194e80&gt;, 'offset': 262144}
2023-11-29 08:38:47,926 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 524288}) about to wait for the following futures []
Completed 768.0 KiB/976.6 KiB (22.7 MiB/s) with 1 file(s) remaining
2023-11-29 08:38:47,926 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 524288}) done waiting for dependent futures
2023-11-29 08:38:47,926 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 524288}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fdef4194e80&gt;, 'offset': 524288}
2023-11-29 08:38:47,927 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 786432}) about to wait for the following futures []
2023-11-29 08:38:47,927 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 786432}) done waiting for dependent futures
2023-11-29 08:38:47,927 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 786432}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fdef4194e80&gt;, 'offset': 786432}
Completed 976.6 KiB/976.6 KiB (28.3 MiB/s) with 1 file(s) remaining
2023-11-29 08:38:47,927 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/small_file_downloaded'}) about to wait for the following futures []
2023-11-29 08:38:47,927 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/small_file_downloaded'}) done waiting for dependent futures
2023-11-29 08:38:47,928 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/small_file_downloaded'}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fdef4194e80&gt;, 'final_filename': '/tmp/small_file_downloaded', 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7fdef41aae10&gt;}
2023-11-29 08:38:47,928 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
download: s3://erasure/small_file to ../../tmp/small_file_downloaded
2023-11-29 08:38:47,928 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20231129 08:38:47.968" endtime="20231129 08:38:47.969"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:47.969" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:47.969" endtime="20231129 08:38:47.969"/>
</kw>
<status status="PASS" starttime="20231129 08:38:47.492" endtime="20231129 08:38:47.970"/>
</kw>
<msg timestamp="20231129 08:38:47.970" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:47.492" endtime="20231129 08:38:47.970"/>
</kw>
<msg timestamp="20231129 08:38:47.971" level="INFO">${output} = 2023-11-29 08:38:47,827 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10
2023-11-29 08:38:47,827 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20231129 08:38:47.492" endtime="20231129 08:38:47.971"/>
</kw>
<msg timestamp="20231129 08:38:47.971" level="INFO">${result} = 2023-11-29 08:38:47,827 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10
2023-11-29 08:38:47,827 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20231129 08:38:47.491" endtime="20231129 08:38:47.971"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>(?is)HEAD /${BUCKET}/small_file.*?Response headers.*?ETag': '"${file_md5_checksum}"'</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:38:47.971" endtime="20231129 08:38:47.972"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>(?is)GET /${BUCKET}/small_file.*?Response headers.*?ETag':\ '"${file_md5_checksum}"'</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:38:47.972" endtime="20231129 08:38:47.973"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>rm s3://${BUCKET}/small_file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:47.976" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 rm s3://erasure/small_file 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:48.406" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:48.406" level="INFO">${output} = delete: s3://erasure/small_file</msg>
<status status="PASS" starttime="20231129 08:38:47.974" endtime="20231129 08:38:48.406"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:48.407" level="INFO">delete: s3://erasure/small_file</msg>
<status status="PASS" starttime="20231129 08:38:48.407" endtime="20231129 08:38:48.407"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:48.408" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:48.408" endtime="20231129 08:38:48.408"/>
</kw>
<status status="PASS" starttime="20231129 08:38:47.974" endtime="20231129 08:38:48.408"/>
</kw>
<msg timestamp="20231129 08:38:48.408" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:47.974" endtime="20231129 08:38:48.408"/>
</kw>
<msg timestamp="20231129 08:38:48.409" level="INFO">${output} = delete: s3://erasure/small_file</msg>
<status status="PASS" starttime="20231129 08:38:47.973" endtime="20231129 08:38:48.409"/>
</kw>
<status status="PASS" starttime="20231129 08:38:47.973" endtime="20231129 08:38:48.409"/>
</kw>
<kw name="Execute" library="os">
<arg>rm /tmp/small_file_downloaded</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:48.411" level="INFO">Running command 'rm /tmp/small_file_downloaded 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:48.413" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:48.413" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:38:48.410" endtime="20231129 08:38:48.413"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:48.414" level="INFO"/>
<status status="PASS" starttime="20231129 08:38:48.414" endtime="20231129 08:38:48.414"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:48.415" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:48.414" endtime="20231129 08:38:48.415"/>
</kw>
<status status="PASS" starttime="20231129 08:38:48.409" endtime="20231129 08:38:48.415"/>
</kw>
<msg timestamp="20231129 08:38:48.415" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:48.409" endtime="20231129 08:38:48.415"/>
</kw>
<status status="PASS" starttime="20231129 08:38:48.409" endtime="20231129 08:38:48.415"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:38:47.483" endtime="20231129 08:38:48.415"/>
</test>
<test id="s1-s1-s14-t17" name="Create key with custom etag metadata and expect it won't conflict with ETag response header of HEAD request" line="225">
<kw name="Execute" library="os">
<var>${file_md5_checksum}</var>
<arg>md5sum /tmp/small_file | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:48.419" level="INFO">Running command 'md5sum /tmp/small_file | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:48.423" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:48.423" level="INFO">${output} = aa2716e64c37079219027b187fd5f6f1</msg>
<status status="PASS" starttime="20231129 08:38:48.418" endtime="20231129 08:38:48.423"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:48.423" level="INFO">aa2716e64c37079219027b187fd5f6f1</msg>
<status status="PASS" starttime="20231129 08:38:48.423" endtime="20231129 08:38:48.423"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:48.424" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:48.424" endtime="20231129 08:38:48.424"/>
</kw>
<status status="PASS" starttime="20231129 08:38:48.417" endtime="20231129 08:38:48.424"/>
</kw>
<msg timestamp="20231129 08:38:48.424" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:48.417" endtime="20231129 08:38:48.424"/>
</kw>
<msg timestamp="20231129 08:38:48.424" level="INFO">${file_md5_checksum} = aa2716e64c37079219027b187fd5f6f1</msg>
<status status="PASS" starttime="20231129 08:38:48.416" endtime="20231129 08:38:48.424"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<arg>cp --metadata "ETag=custom-etag-value" /tmp/small_file s3://${BUCKET}/test_file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:48.427" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp --metadata "ETag=custom-etag-value" /tmp/small_file s3://erasure/test_file 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:48.937" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:48.937" level="INFO">${output} = 2023-11-29 08:38:48,761 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10
2023-11-29 08:38:48,762 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20231129 08:38:48.426" endtime="20231129 08:38:48.937"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:48.938" level="INFO">2023-11-29 08:38:48,761 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10
2023-11-29 08:38:48,762 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', '--metadata', 'ETag=custom-etag-value', '/tmp/small_file', 's3://erasure/test_file']
2023-11-29 08:38:48,762 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7f24ef91e9d8&gt;
2023-11-29 08:38:48,762 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7f24f0712730&gt;
2023-11-29 08:38:48,762 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7f24f0740ae8&gt;
2023-11-29 08:38:48,763 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2023-11-29 08:38:48,766 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7f24efa4b400&gt;
2023-11-29 08:38:48,767 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7f24ef92c048&gt;
2023-11-29 08:38:48,767 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f24f762ca90&gt;
2023-11-29 08:38:48,767 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7f24ef92c048&gt;
2023-11-29 08:38:48,769 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f24f762ca90&gt;
2023-11-29 08:38:48,769 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f24f762ca90&gt;
2023-11-29 08:38:48,769 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f24f07106a0&gt;
2023-11-29 08:38:48,769 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f24f762ca90&gt;
2023-11-29 08:38:48,769 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f24f07106a0&gt;
2023-11-29 08:38:48,770 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f24f762ca90&gt;
2023-11-29 08:38:48,770 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f24f762ca90&gt;
2023-11-29 08:38:48,770 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f24f762ca90&gt;
2023-11-29 08:38:48,770 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f24f07106a0&gt;
2023-11-29 08:38:48,770 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f24f762ca90&gt;
2023-11-29 08:38:48,770 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f24f762ca90&gt;
2023-11-29 08:38:48,770 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f24f762ca90&gt;
2023-11-29 08:38:48,770 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f24f762ca90&gt;
2023-11-29 08:38:48,770 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f24f762ca90&gt;
2023-11-29 08:38:48,771 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f24f762ca90&gt;
2023-11-29 08:38:48,771 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f24f762ca90&gt;
2023-11-29 08:38:48,771 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f24f762ca90&gt;
2023-11-29 08:38:48,771 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f24f762ca90&gt;
2023-11-29 08:38:48,771 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f24f762ca90&gt;
2023-11-29 08:38:48,771 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f24f762ca90&gt;
2023-11-29 08:38:48,771 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f24f762ca90&gt;
2023-11-29 08:38:48,771 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f24f762ca90&gt;
2023-11-29 08:38:48,772 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f24f762ca90&gt;
2023-11-29 08:38:48,772 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f24f762ca90&gt;
2023-11-29 08:38:48,772 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f24f762ca90&gt;
2023-11-29 08:38:48,772 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f24f762ca90&gt;
2023-11-29 08:38:48,772 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f24f762ca90&gt;
2023-11-29 08:38:48,772 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f24f07106a0&gt;
2023-11-29 08:38:48,772 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f24f762ca90&gt;
2023-11-29 08:38:48,772 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f24f762ca90&gt;
2023-11-29 08:38:48,772 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f24f762ca90&gt;
2023-11-29 08:38:48,772 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f24f07106a0&gt;
2023-11-29 08:38:48,773 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f24f762ca90&gt;
2023-11-29 08:38:48,773 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f24f07106a0&gt;
2023-11-29 08:38:48,773 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f24f762ca90&gt;
2023-11-29 08:38:48,773 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f24f762ca90&gt;
2023-11-29 08:38:48,773 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f24f07106a0&gt;
2023-11-29 08:38:48,773 - MainThread - awscli.argprocess - DEBUG - Parsing param --metadata as shorthand
2023-11-29 08:38:48,773 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f24f762ca90&gt;
2023-11-29 08:38:48,773 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f24f762ca90&gt;
2023-11-29 08:38:48,774 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f24f762ca90&gt;
2023-11-29 08:38:48,774 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2023-11-29 08:38:48,774 - MainThread - botocore.credentials - INFO - Found credentials in environment variables.
2023-11-29 08:38:48,774 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/endpoints.json
2023-11-29 08:38:48,787 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/sdk-default-configuration.json
2023-11-29 08:38:48,787 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f24f13d8378&gt;
2023-11-29 08:38:48,788 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/s3/2006-03-01/service-2.json
2023-11-29 08:38:48,798 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f24f16ad2f0&gt;
2023-11-29 08:38:48,798 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f24f16ad0d0&gt;
2023-11-29 08:38:48,798 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-11-29 08:38:48,801 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2023-11-29 08:38:48,801 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/_retry.json
2023-11-29 08:38:48,802 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2023-11-29 08:38:48,803 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-11-29 08:38:48,803 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f24f13d8378&gt;
2023-11-29 08:38:48,804 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f24f16ad2f0&gt;
2023-11-29 08:38:48,804 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f24f16ad0d0&gt;
2023-11-29 08:38:48,804 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-11-29 08:38:48,806 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2023-11-29 08:38:48,807 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2023-11-29 08:38:48,808 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-11-29 08:38:48,808 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f24f13d8378&gt;
2023-11-29 08:38:48,809 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f24f16ad2f0&gt;
2023-11-29 08:38:48,809 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f24f16ad0d0&gt;
2023-11-29 08:38:48,809 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-11-29 08:38:48,812 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2023-11-29 08:38:48,812 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2023-11-29 08:38:48,813 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-11-29 08:38:48,813 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2023-11-29 08:38:48,814 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2023-11-29 08:38:48,815 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f24ef1cde10&gt;}) about to wait for the following futures []
2023-11-29 08:38:48,815 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f24ef1cde10&gt;}) done waiting for dependent futures
2023-11-29 08:38:48,815 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f24ef1cde10&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f24ef28bcc0&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7f24ef1fee10&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7f24ef1fee80&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7f24ef1cd048&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f24ef1cde10&gt;}
2023-11-29 08:38:48,816 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task PutObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'test_file', 'extra_args': {'Metadata': {'ETag': 'custom-etag-value'}}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f24ef1cd048&gt; for transfer request: 0.
2023-11-29 08:38:48,816 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2023-11-29 08:38:48,816 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - PutObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'test_file', 'extra_args': {'Metadata': {'ETag': 'custom-etag-value'}}}) about to wait for the following futures []
2023-11-29 08:38:48,816 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - PutObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'test_file', 'extra_args': {'Metadata': {'ETag': 'custom-etag-value'}}}) done waiting for dependent futures
2023-11-29 08:38:48,816 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task PutObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'test_file', 'extra_args': {'Metadata': {'ETag': 'custom-etag-value'}}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f24ef28bcc0&gt;, 'fileobj': &lt;s3transfer.utils.ReadFileChunk object at 0x7f24ef1df278&gt;, 'bucket': 'erasure', 'key': 'test_file', 'extra_args': {'Metadata': {'ETag': 'custom-etag-value'}}}
2023-11-29 08:38:48,817 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function validate_ascii_metadata at 0x7f24f13f16a8&gt;
2023-11-29 08:38:48,817 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-11-29 08:38:48,817 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function sse_md5 at 0x7f24f13eeae8&gt;
2023-11-29 08:38:48,817 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function convert_body_to_file_like_object at 0x7f24f13f1f28&gt;
2023-11-29 08:38:48,817 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function validate_bucket_name at 0x7f24f13eea60&gt;
2023-11-29 08:38:48,817 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7f24ef25c240&gt;&gt;
2023-11-29 08:38:48,817 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7f24ef25c5f8&gt;&gt;
2023-11-29 08:38:48,817 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function generate_idempotent_uuid at 0x7f24f13ee8c8&gt;
2023-11-29 08:38:48,818 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function conditionally_calculate_md5 at 0x7f24f1d950d0&gt;
2023-11-29 08:38:48,820 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_expect_header at 0x7f24f13eed90&gt;
2023-11-29 08:38:48,820 - ThreadPoolExecutor-0_0 - botocore.handlers - DEBUG - Adding expect 100 continue header to request.
2023-11-29 08:38:48,820 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7f24ef25c240&gt;&gt;
2023-11-29 08:38:48,820 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_recursion_detection_header at 0x7f24f13ee598&gt;
2023-11-29 08:38:48,820 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7f24f13750d0&gt;
2023-11-29 08:38:48,820 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=PutObject) with params: {'url_path': '/erasure/test_file', 'query_string': {}, 'method': 'PUT', 'headers': {'x-amz-meta-ETag': 'custom-etag-value', 'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10', 'Content-MD5': 'qicW5kw3B5IZAnsYf9X28Q==', 'Expect': '100-continue'}, 'body': &lt;s3transfer.utils.ReadFileChunk object at 0x7f24ef1df278&gt;, 'url': 'http://s3g:9878/erasure/test_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f24ef28beb8&gt;, 'has_streaming_input': True, 'auth_type': None, 'signing': {'bucket': 'erasure'}}}
2023-11-29 08:38:48,820 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function signal_not_transferring at 0x7f24f3916158&gt;
2023-11-29 08:38:48,821 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f24ef28be80&gt;&gt;
2023-11-29 08:38:48,821 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.PutObject: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7f24ef25c668&gt;&gt;
2023-11-29 08:38:48,821 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.PutObject: calling handler &lt;function set_operation_specific_signer at 0x7f24f13ee7b8&gt;
2023-11-29 08:38:48,821 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.PutObject: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7f24ef25c668&gt;&gt;
2023-11-29 08:38:48,821 - ThreadPoolExecutor-0_0 - botocore.utils - DEBUG - Using S3 path style addressing.
2023-11-29 08:38:48,822 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2023-11-29 08:38:48,822 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
PUT
/erasure/test_file

content-md5:qicW5kw3B5IZAnsYf9X28Q==
host:s3g:9878
x-amz-content-sha256:1ded8847c077aaee1354e21a394a7fa68c5a0cad1a5e65810fb48c1d801dd545
x-amz-date:20231129T083848Z
x-amz-meta-etag:custom-etag-value

content-md5;host;x-amz-content-sha256;x-amz-date;x-amz-meta-etag
1ded8847c077aaee1354e21a394a7fa68c5a0cad1a5e65810fb48c1d801dd545
2023-11-29 08:38:48,822 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20231129T083848Z
20231129/us-west-1/s3/aws4_request
6e7525dc2a1fd5feef6dddaf4b29c0e24cbc270b9e6550786c25a4728aca2a01
2023-11-29 08:38:48,822 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
3362fe2c215f61bd24a159317582851ba122659d3ba021db6e2ae15be5cd0066
2023-11-29 08:38:48,823 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function signal_transferring at 0x7f24f39161e0&gt;
2023-11-29 08:38:48,823 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function add_retry_headers at 0x7f24f1375730&gt;
2023-11-29 08:38:48,823 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=PUT, url=http://s3g:9878/erasure/test_file, headers={'x-amz-meta-ETag': b'custom-etag-value', 'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10', 'Content-MD5': b'qicW5kw3B5IZAnsYf9X28Q==', 'Expect': b'100-continue', 'X-Amz-Date': b'20231129T083848Z', 'X-Amz-Content-SHA256': b'1ded8847c077aaee1354e21a394a7fa68c5a0cad1a5e65810fb48c1d801dd545', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/scm@EXAMPLE.COM/20231129/us-west-1/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date;x-amz-meta-etag, Signature=3362fe2c215f61bd24a159317582851ba122659d3ba021db6e2ae15be5cd0066', 'amz-sdk-invocation-id': b'3963415e-b9c3-4165-b8fe-a6d5a30f7d78', 'amz-sdk-request': b'attempt=1', 'Content-Length': '1000000'}&gt;
2023-11-29 08:38:48,824 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2023-11-29 08:38:48,825 - ThreadPoolExecutor-0_0 - botocore.awsrequest - DEBUG - Waiting for 100 Continue response.
2023-11-29 08:38:48,826 - ThreadPoolExecutor-0_0 - botocore.awsrequest - DEBUG - 100 Continue response seen, now sending request body.
Completed 256.0 KiB/976.6 KiB (8.3 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/976.6 KiB (16.1 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/976.6 KiB (23.4 MiB/s) with 1 file(s) remaining
2023-11-29 08:38:48,893 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "PUT /erasure/test_file HTTP/1.1" 200 0
2023-11-29 08:38:48,893 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Wed, 29 Nov 2023 08:38:48 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Wed, 29 Nov 2023 08:38:48 GMT', 'Pragma': 'no-cache', 'Content-Type': 'text/plain;charset=utf-8', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': '"aa2716e64c37079219027b187fd5f6f1"', 'Server': 'Ozone', 'x-amz-id-2': 'RdZ7PKDFemZgMSb', 'x-amz-request-id': '2f00f74b-8b4b-497a-a0d4-92a00ec76953', 'Content-Length': '0'}
2023-11-29 08:38:48,893 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
b''
2023-11-29 08:38:48,894 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f24ef25c278&gt;
2023-11-29 08:38:48,894 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2023-11-29 08:38:48,894 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7f24ef25c240&gt;&gt;
2023-11-29 08:38:48,894 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.PutObject: calling handler &lt;function enhance_error_msg at 0x7f24ef91e598&gt;
Completed 976.6 KiB/976.6 KiB (12.1 MiB/s) with 1 file(s) remaining
2023-11-29 08:38:48,895 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
upload: ../../tmp/small_file to s3://erasure/test_file             
2023-11-29 08:38:48,895 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20231129 08:38:48.937" endtime="20231129 08:38:48.938"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:48.938" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:48.938" endtime="20231129 08:38:48.939"/>
</kw>
<status status="PASS" starttime="20231129 08:38:48.426" endtime="20231129 08:38:48.939"/>
</kw>
<msg timestamp="20231129 08:38:48.939" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:48.425" endtime="20231129 08:38:48.939"/>
</kw>
<msg timestamp="20231129 08:38:48.939" level="INFO">${output} = 2023-11-29 08:38:48,761 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10
2023-11-29 08:38:48,762 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20231129 08:38:48.425" endtime="20231129 08:38:48.939"/>
</kw>
<status status="PASS" starttime="20231129 08:38:48.425" endtime="20231129 08:38:48.940"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<var>${result}</var>
<arg>cp s3://${BUCKET}/test_file /tmp/test_file_downloaded</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:48.943" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp s3://erasure/test_file /tmp/test_file_downloaded 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:49.421" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:49.421" level="INFO">${output} = 2023-11-29 08:38:49,282 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10
2023-11-29 08:38:49,283 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20231129 08:38:48.941" endtime="20231129 08:38:49.421"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:49.422" level="INFO">2023-11-29 08:38:49,282 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10
2023-11-29 08:38:49,283 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', 's3://erasure/test_file', '/tmp/test_file_downloaded']
2023-11-29 08:38:49,283 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7fb806d899d8&gt;
2023-11-29 08:38:49,283 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7fb807b7d730&gt;
2023-11-29 08:38:49,283 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7fb807babae8&gt;
2023-11-29 08:38:49,284 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2023-11-29 08:38:49,288 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7fb806eb7400&gt;
2023-11-29 08:38:49,288 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7fb806d97048&gt;
2023-11-29 08:38:49,289 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb80ea97a90&gt;
2023-11-29 08:38:49,289 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7fb806d97048&gt;
2023-11-29 08:38:49,290 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb80ea97a90&gt;
2023-11-29 08:38:49,290 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb80ea97a90&gt;
2023-11-29 08:38:49,291 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fb807b7b6a0&gt;
2023-11-29 08:38:49,291 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb80ea97a90&gt;
2023-11-29 08:38:49,291 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fb807b7b6a0&gt;
2023-11-29 08:38:49,291 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb80ea97a90&gt;
2023-11-29 08:38:49,291 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb80ea97a90&gt;
2023-11-29 08:38:49,291 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb80ea97a90&gt;
2023-11-29 08:38:49,291 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fb807b7b6a0&gt;
2023-11-29 08:38:49,292 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb80ea97a90&gt;
2023-11-29 08:38:49,292 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb80ea97a90&gt;
2023-11-29 08:38:49,292 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb80ea97a90&gt;
2023-11-29 08:38:49,292 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb80ea97a90&gt;
2023-11-29 08:38:49,292 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb80ea97a90&gt;
2023-11-29 08:38:49,292 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb80ea97a90&gt;
2023-11-29 08:38:49,292 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb80ea97a90&gt;
2023-11-29 08:38:49,292 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb80ea97a90&gt;
2023-11-29 08:38:49,293 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb80ea97a90&gt;
2023-11-29 08:38:49,293 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb80ea97a90&gt;
2023-11-29 08:38:49,293 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb80ea97a90&gt;
2023-11-29 08:38:49,293 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb80ea97a90&gt;
2023-11-29 08:38:49,293 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb80ea97a90&gt;
2023-11-29 08:38:49,293 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb80ea97a90&gt;
2023-11-29 08:38:49,293 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb80ea97a90&gt;
2023-11-29 08:38:49,293 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb80ea97a90&gt;
2023-11-29 08:38:49,294 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb80ea97a90&gt;
2023-11-29 08:38:49,294 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb80ea97a90&gt;
2023-11-29 08:38:49,294 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fb807b7b6a0&gt;
2023-11-29 08:38:49,294 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb80ea97a90&gt;
2023-11-29 08:38:49,294 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb80ea97a90&gt;
2023-11-29 08:38:49,294 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb80ea97a90&gt;
2023-11-29 08:38:49,294 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fb807b7b6a0&gt;
2023-11-29 08:38:49,294 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb80ea97a90&gt;
2023-11-29 08:38:49,294 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fb807b7b6a0&gt;
2023-11-29 08:38:49,294 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb80ea97a90&gt;
2023-11-29 08:38:49,295 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb80ea97a90&gt;
2023-11-29 08:38:49,295 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb80ea97a90&gt;
2023-11-29 08:38:49,295 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb80ea97a90&gt;
2023-11-29 08:38:49,295 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb80ea97a90&gt;
2023-11-29 08:38:49,295 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2023-11-29 08:38:49,295 - MainThread - botocore.credentials - INFO - Found credentials in environment variables.
2023-11-29 08:38:49,296 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/endpoints.json
2023-11-29 08:38:49,309 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/sdk-default-configuration.json
2023-11-29 08:38:49,309 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7fb808843378&gt;
2023-11-29 08:38:49,310 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/s3/2006-03-01/service-2.json
2023-11-29 08:38:49,319 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7fb808b182f0&gt;
2023-11-29 08:38:49,319 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7fb808b180d0&gt;
2023-11-29 08:38:49,319 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-11-29 08:38:49,322 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2023-11-29 08:38:49,322 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/_retry.json
2023-11-29 08:38:49,323 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2023-11-29 08:38:49,323 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-11-29 08:38:49,324 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7fb808843378&gt;
2023-11-29 08:38:49,324 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7fb808b182f0&gt;
2023-11-29 08:38:49,324 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7fb808b180d0&gt;
2023-11-29 08:38:49,325 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-11-29 08:38:49,327 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2023-11-29 08:38:49,328 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2023-11-29 08:38:49,329 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-11-29 08:38:49,329 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7fb808843378&gt;
2023-11-29 08:38:49,330 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7fb808b182f0&gt;
2023-11-29 08:38:49,330 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7fb808b180d0&gt;
2023-11-29 08:38:49,330 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-11-29 08:38:49,333 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2023-11-29 08:38:49,333 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2023-11-29 08:38:49,334 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-11-29 08:38:49,335 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2023-11-29 08:38:49,335 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function sse_md5 at 0x7fb808859ae8&gt;
2023-11-29 08:38:49,335 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function validate_bucket_name at 0x7fb808859a60&gt;
2023-11-29 08:38:49,335 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7fb806665748&gt;&gt;
2023-11-29 08:38:49,335 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7fb806665b00&gt;&gt;
2023-11-29 08:38:49,336 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function generate_idempotent_uuid at 0x7fb8088598c8&gt;
2023-11-29 08:38:49,336 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function add_expect_header at 0x7fb808859d90&gt;
2023-11-29 08:38:49,336 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7fb806665748&gt;&gt;
2023-11-29 08:38:49,336 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function add_recursion_detection_header at 0x7fb808859598&gt;
2023-11-29 08:38:49,336 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7fb8087e00d0&gt;
2023-11-29 08:38:49,336 - MainThread - botocore.endpoint - DEBUG - Making request for OperationModel(name=HeadObject) with params: {'url_path': '/erasure/test_file', 'query_string': {}, 'method': 'HEAD', 'headers': {'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10'}, 'body': b'', 'url': 'http://s3g:9878/erasure/test_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7fb806665400&gt;, 'has_streaming_input': False, 'auth_type': None, 'signing': {'bucket': 'erasure'}}}
2023-11-29 08:38:49,337 - MainThread - botocore.hooks - DEBUG - Event request-created.s3.HeadObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7fb8066653c8&gt;&gt;
2023-11-29 08:38:49,337 - MainThread - botocore.hooks - DEBUG - Event choose-signer.s3.HeadObject: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7fb806665b70&gt;&gt;
2023-11-29 08:38:49,337 - MainThread - botocore.hooks - DEBUG - Event choose-signer.s3.HeadObject: calling handler &lt;function set_operation_specific_signer at 0x7fb8088597b8&gt;
2023-11-29 08:38:49,337 - MainThread - botocore.hooks - DEBUG - Event before-sign.s3.HeadObject: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7fb806665b70&gt;&gt;
2023-11-29 08:38:49,337 - MainThread - botocore.utils - DEBUG - Using S3 path style addressing.
2023-11-29 08:38:49,337 - MainThread - botocore.auth - DEBUG - Calculating signature using v4 auth.
2023-11-29 08:38:49,338 - MainThread - botocore.auth - DEBUG - CanonicalRequest:
HEAD
/erasure/test_file

host:s3g:9878
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20231129T083849Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2023-11-29 08:38:49,338 - MainThread - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20231129T083849Z
20231129/us-west-1/s3/aws4_request
df4ebe1b5e6cf0e2804e7129bb308a222f6a413b4c497f089a6b22014d393fb5
2023-11-29 08:38:49,338 - MainThread - botocore.auth - DEBUG - Signature:
442e774e67bfd0c541e6d09f4824aaf8d0a1b502cab74b9d704c2804579a3fea
2023-11-29 08:38:49,338 - MainThread - botocore.hooks - DEBUG - Event request-created.s3.HeadObject: calling handler &lt;function add_retry_headers at 0x7fb8087e0730&gt;
2023-11-29 08:38:49,338 - MainThread - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=HEAD, url=http://s3g:9878/erasure/test_file, headers={'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10', 'X-Amz-Date': b'20231129T083849Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/scm@EXAMPLE.COM/20231129/us-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=442e774e67bfd0c541e6d09f4824aaf8d0a1b502cab74b9d704c2804579a3fea', 'amz-sdk-invocation-id': b'601d4163-f8d8-483b-b523-309f28e17928', 'amz-sdk-request': b'attempt=1'}&gt;
2023-11-29 08:38:49,339 - MainThread - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2023-11-29 08:38:49,345 - MainThread - urllib3.connectionpool - DEBUG - http://s3g:9878 "HEAD /erasure/test_file HTTP/1.1" 200 0
2023-11-29 08:38:49,346 - MainThread - botocore.parsers - DEBUG - Response headers: {'Date': 'Wed, 29 Nov 2023 08:38:49 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Wed, 29 Nov 2023 08:38:49 GMT', 'Pragma': 'no-cache', 'Content-Type': 'binary/octet-stream', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': '"aa2716e64c37079219027b187fd5f6f1"', 'Last-Modified': 'Wed, 29 Nov 2023 08:38:48 GMT', 'x-amz-meta-etag': 'custom-etag-value', 'Server': 'Ozone', 'x-amz-id-2': 'dz6YwiFSb7RrTj', 'x-amz-request-id': 'a27df0c3-dfdc-47af-ab79-86013f6f34fb', 'Content-Length': '1000000'}
2023-11-29 08:38:49,346 - MainThread - botocore.parsers - DEBUG - Response body:
b''
2023-11-29 08:38:49,346 - MainThread - botocore.hooks - DEBUG - Event needs-retry.s3.HeadObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7fb806665780&gt;
2023-11-29 08:38:49,347 - MainThread - botocore.retryhandler - DEBUG - No retry needed.
2023-11-29 08:38:49,347 - MainThread - botocore.hooks - DEBUG - Event needs-retry.s3.HeadObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7fb806665748&gt;&gt;
2023-11-29 08:38:49,347 - MainThread - botocore.hooks - DEBUG - Event after-call.s3.HeadObject: calling handler &lt;function enhance_error_msg at 0x7fb806d89598&gt;
2023-11-29 08:38:49,348 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2023-11-29 08:38:49,348 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fb80664f780&gt;}) about to wait for the following futures []
2023-11-29 08:38:49,348 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fb80664f780&gt;}) done waiting for dependent futures
2023-11-29 08:38:49,349 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fb80664f780&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7fb8066f4c50&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7fb806665da0&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7fb806665e10&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7fb806665f98&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fb80664f780&gt;, 'io_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7fb8066363c8&gt;}
2023-11-29 08:38:49,349 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task ImmediatelyWriteIOGetObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'test_file', 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fb806665f98&gt; for transfer request: 0.
2023-11-29 08:38:49,349 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2023-11-29 08:38:49,349 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - ImmediatelyWriteIOGetObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'test_file', 'extra_args': {}}) about to wait for the following futures []
2023-11-29 08:38:49,349 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-11-29 08:38:49,350 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - ImmediatelyWriteIOGetObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'test_file', 'extra_args': {}}) done waiting for dependent futures
2023-11-29 08:38:49,350 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task ImmediatelyWriteIOGetObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'test_file', 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7fb8066f4c50&gt;, 'bucket': 'erasure', 'key': 'test_file', 'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fb80664fe10&gt;, 'extra_args': {}, 'callbacks': [functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.ProvideSizeSubscriber object at 0x7fb80664feb8&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7fb80664f780&gt;), functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.DirectoryCreatorSubscriber object at 0x7fb80664f940&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7fb80664f780&gt;), functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.ProvideLastModifiedTimeSubscriber object at 0x7fb80664fef0&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7fb80664f780&gt;), functools.partial(&lt;bound method BaseResultSubscriber.on_progress of &lt;awscli.customizations.s3.results.DownloadResultSubscriber object at 0x7fb80664fd68&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7fb80664f780&gt;)], 'max_attempts': 5, 'download_output_manager': &lt;s3transfer.download.DownloadFilenameOutputManager object at 0x7fb8066369b0&gt;, 'io_chunksize': 262144, 'bandwidth_limiter': None}
2023-11-29 08:38:49,350 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function sse_md5 at 0x7fb808859ae8&gt;
2023-11-29 08:38:49,350 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function validate_bucket_name at 0x7fb808859a60&gt;
2023-11-29 08:38:49,350 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7fb8066c51d0&gt;&gt;
2023-11-29 08:38:49,350 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7fb8066c5588&gt;&gt;
2023-11-29 08:38:49,350 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function generate_idempotent_uuid at 0x7fb8088598c8&gt;
2023-11-29 08:38:49,351 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_expect_header at 0x7fb808859d90&gt;
2023-11-29 08:38:49,351 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7fb8066c51d0&gt;&gt;
2023-11-29 08:38:49,351 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_recursion_detection_header at 0x7fb808859598&gt;
2023-11-29 08:38:49,351 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7fb8087e00d0&gt;
2023-11-29 08:38:49,351 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=GetObject) with params: {'url_path': '/erasure/test_file', 'query_string': {}, 'method': 'GET', 'headers': {'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10'}, 'body': b'', 'url': 'http://s3g:9878/erasure/test_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7fb8066f4e48&gt;, 'has_streaming_input': False, 'auth_type': None, 'signing': {'bucket': 'erasure'}}}
2023-11-29 08:38:49,352 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function signal_not_transferring at 0x7fb80ad81158&gt;
2023-11-29 08:38:49,352 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7fb8066f4e10&gt;&gt;
2023-11-29 08:38:49,352 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.GetObject: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7fb8066c55f8&gt;&gt;
2023-11-29 08:38:49,352 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.GetObject: calling handler &lt;function set_operation_specific_signer at 0x7fb8088597b8&gt;
2023-11-29 08:38:49,352 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.GetObject: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7fb8066c55f8&gt;&gt;
2023-11-29 08:38:49,352 - ThreadPoolExecutor-0_0 - botocore.utils - DEBUG - Using S3 path style addressing.
2023-11-29 08:38:49,352 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2023-11-29 08:38:49,352 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
GET
/erasure/test_file

host:s3g:9878
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20231129T083849Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2023-11-29 08:38:49,352 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20231129T083849Z
20231129/us-west-1/s3/aws4_request
606f359c0da8c12b2c9de9fe53a5addb0463d137adb00db3959aaf0a25e4ae09
2023-11-29 08:38:49,352 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
554883eb2853c9ecf8aad3b7a58cfc2defa38e03ff8aabaa95f141e4ac56fdbc
2023-11-29 08:38:49,353 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function signal_transferring at 0x7fb80ad811e0&gt;
2023-11-29 08:38:49,353 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function add_retry_headers at 0x7fb8087e0730&gt;
2023-11-29 08:38:49,353 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=True, method=GET, url=http://s3g:9878/erasure/test_file, headers={'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10', 'X-Amz-Date': b'20231129T083849Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/scm@EXAMPLE.COM/20231129/us-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=554883eb2853c9ecf8aad3b7a58cfc2defa38e03ff8aabaa95f141e4ac56fdbc', 'amz-sdk-invocation-id': b'bdc1bd9a-0b7b-4c21-bad6-eed6942aff43', 'amz-sdk-request': b'attempt=1'}&gt;
2023-11-29 08:38:49,353 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2023-11-29 08:38:49,371 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "GET /erasure/test_file HTTP/1.1" 200 1000000
2023-11-29 08:38:49,372 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Wed, 29 Nov 2023 08:38:49 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Wed, 29 Nov 2023 08:38:49 GMT', 'Pragma': 'no-cache', 'Content-Type': 'application/octet-stream', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': '"aa2716e64c37079219027b187fd5f6f1"', 'Accept-Ranges': 'bytes', 'Last-Modified': 'Wed, 29 Nov 2023 08:38:48 GMT', 'Server': 'Ozone', 'x-amz-id-2': 'zgofdm81s0D', 'x-amz-request-id': '1707d8a5-82ac-4af8-aa05-d12dfa81f4be', 'Content-Length': '1000000'}
2023-11-29 08:38:49,372 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
&lt;botocore.response.StreamingBody object at 0x7fb804075320&gt;
2023-11-29 08:38:49,373 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7fb8066c5208&gt;
2023-11-29 08:38:49,373 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2023-11-29 08:38:49,373 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7fb8066c51d0&gt;&gt;
2023-11-29 08:38:49,373 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.GetObject: calling handler &lt;function enhance_error_msg at 0x7fb806d89598&gt;
2023-11-29 08:38:49,376 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 0}) about to wait for the following futures []
2023-11-29 08:38:49,376 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 0}) done waiting for dependent futures
2023-11-29 08:38:49,377 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 0}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fb80664fe10&gt;, 'offset': 0}
Completed 256.0 KiB/976.6 KiB (9.3 MiB/s) with 1 file(s) remaining
2023-11-29 08:38:49,377 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 262144}) about to wait for the following futures []
2023-11-29 08:38:49,377 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 262144}) done waiting for dependent futures
2023-11-29 08:38:49,378 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 262144}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fb80664fe10&gt;, 'offset': 262144}
Completed 512.0 KiB/976.6 KiB (17.6 MiB/s) with 1 file(s) remaining
2023-11-29 08:38:49,378 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 524288}) about to wait for the following futures []
2023-11-29 08:38:49,378 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 524288}) done waiting for dependent futures
2023-11-29 08:38:49,378 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 524288}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fb80664fe10&gt;, 'offset': 524288}
Completed 768.0 KiB/976.6 KiB (25.9 MiB/s) with 1 file(s) remaining
2023-11-29 08:38:49,379 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 786432}) about to wait for the following futures []
Completed 976.6 KiB/976.6 KiB (32.3 MiB/s) with 1 file(s) remaining
2023-11-29 08:38:49,379 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 786432}) done waiting for dependent futures
2023-11-29 08:38:49,379 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 786432}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fb80664fe10&gt;, 'offset': 786432}
2023-11-29 08:38:49,379 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/test_file_downloaded'}) about to wait for the following futures []
2023-11-29 08:38:49,379 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/test_file_downloaded'}) done waiting for dependent futures
2023-11-29 08:38:49,380 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/test_file_downloaded'}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fb80664fe10&gt;, 'final_filename': '/tmp/test_file_downloaded', 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7fb806665e10&gt;}
2023-11-29 08:38:49,380 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
download: s3://erasure/test_file to ../../tmp/test_file_downloaded 
2023-11-29 08:38:49,380 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20231129 08:38:49.421" endtime="20231129 08:38:49.422"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:49.423" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:49.422" endtime="20231129 08:38:49.423"/>
</kw>
<status status="PASS" starttime="20231129 08:38:48.941" endtime="20231129 08:38:49.423"/>
</kw>
<msg timestamp="20231129 08:38:49.423" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:48.941" endtime="20231129 08:38:49.423"/>
</kw>
<msg timestamp="20231129 08:38:49.424" level="INFO">${output} = 2023-11-29 08:38:49,282 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10
2023-11-29 08:38:49,283 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20231129 08:38:48.940" endtime="20231129 08:38:49.424"/>
</kw>
<msg timestamp="20231129 08:38:49.424" level="INFO">${result} = 2023-11-29 08:38:49,282 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10
2023-11-29 08:38:49,283 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20231129 08:38:48.940" endtime="20231129 08:38:49.424"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<var>${match}</var>
<var>${ETag}</var>
<var>${etagCustom}</var>
<arg>${result}</arg>
<arg>HEAD /${BUCKET}/test_file\ .*?Response headers.*?ETag':\ '"(.*?)"'.*?x-amz-meta-etag':\ '(.*?)'</arg>
<arg>flags=DOTALL</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20231129 08:38:49.425" level="INFO">${match} = HEAD /erasure/test_file HTTP/1.1" 200 0
2023-11-29 08:38:49,346 - MainThread - botocore.parsers - DEBUG - Response headers: {'Date': 'Wed, 29 Nov 2023 08:38:49 GMT', 'Cache-Control': 'no-cache', 'Expi...</msg>
<msg timestamp="20231129 08:38:49.426" level="INFO">${ETag} = aa2716e64c37079219027b187fd5f6f1</msg>
<msg timestamp="20231129 08:38:49.426" level="INFO">${etagCustom} = custom-etag-value</msg>
<status status="PASS" starttime="20231129 08:38:49.424" endtime="20231129 08:38:49.426"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${ETag}</arg>
<arg>${file_md5_checksum}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20231129 08:38:49.426" endtime="20231129 08:38:49.426"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etagCustom}</arg>
<arg>custom-etag-value</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20231129 08:38:49.426" endtime="20231129 08:38:49.427"/>
</kw>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<arg>${ETag}</arg>
<arg>${etagCustom}</arg>
<doc>Fails if objects are equal after converting them to strings.</doc>
<status status="PASS" starttime="20231129 08:38:49.427" endtime="20231129 08:38:49.427"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>rm s3://${BUCKET}/test_file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:49.430" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 rm s3://erasure/test_file 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:49.888" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:49.888" level="INFO">${output} = delete: s3://erasure/test_file</msg>
<status status="PASS" starttime="20231129 08:38:49.429" endtime="20231129 08:38:49.888"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:49.889" level="INFO">delete: s3://erasure/test_file</msg>
<status status="PASS" starttime="20231129 08:38:49.888" endtime="20231129 08:38:49.889"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:49.890" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:49.889" endtime="20231129 08:38:49.890"/>
</kw>
<status status="PASS" starttime="20231129 08:38:49.428" endtime="20231129 08:38:49.890"/>
</kw>
<msg timestamp="20231129 08:38:49.890" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:49.428" endtime="20231129 08:38:49.890"/>
</kw>
<msg timestamp="20231129 08:38:49.890" level="INFO">${output} = delete: s3://erasure/test_file</msg>
<status status="PASS" starttime="20231129 08:38:49.428" endtime="20231129 08:38:49.890"/>
</kw>
<status status="PASS" starttime="20231129 08:38:49.427" endtime="20231129 08:38:49.890"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -rf /tmp/small_file</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:49.894" level="INFO">Running command 'rm -rf /tmp/small_file 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:49.896" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:49.896" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:38:49.892" endtime="20231129 08:38:49.896"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:49.897" level="INFO"/>
<status status="PASS" starttime="20231129 08:38:49.896" endtime="20231129 08:38:49.897"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:49.897" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:49.897" endtime="20231129 08:38:49.897"/>
</kw>
<status status="PASS" starttime="20231129 08:38:49.892" endtime="20231129 08:38:49.898"/>
</kw>
<msg timestamp="20231129 08:38:49.898" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:49.891" endtime="20231129 08:38:49.898"/>
</kw>
<status status="PASS" starttime="20231129 08:38:49.891" endtime="20231129 08:38:49.898"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -rf /tmp/test_file_downloaded</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:49.900" level="INFO">Running command 'rm -rf /tmp/test_file_downloaded 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:49.902" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:49.902" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:38:49.899" endtime="20231129 08:38:49.903"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:49.903" level="INFO"/>
<status status="PASS" starttime="20231129 08:38:49.903" endtime="20231129 08:38:49.903"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:49.904" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:49.903" endtime="20231129 08:38:49.904"/>
</kw>
<status status="PASS" starttime="20231129 08:38:49.899" endtime="20231129 08:38:49.904"/>
</kw>
<msg timestamp="20231129 08:38:49.904" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:49.898" endtime="20231129 08:38:49.904"/>
</kw>
<status status="PASS" starttime="20231129 08:38:49.898" endtime="20231129 08:38:49.904"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:38:48.416" endtime="20231129 08:38:49.904"/>
</test>
<test id="s1-s1-s14-t18" name="Create&amp;Download big file by multipart upload and expect ETag in a file download response" line="238">
<kw name="Execute" library="os">
<arg>head -c 10MB &lt;/dev/urandom &gt; /tmp/big_file</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:49.908" level="INFO">Running command 'head -c 10MB &lt;/dev/urandom &gt; /tmp/big_file'.</msg>
<msg timestamp="20231129 08:38:49.943" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:49.943" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:38:49.907" endtime="20231129 08:38:49.943"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:49.944" level="INFO"/>
<status status="PASS" starttime="20231129 08:38:49.943" endtime="20231129 08:38:49.944"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:49.944" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:49.944" endtime="20231129 08:38:49.945"/>
</kw>
<status status="PASS" starttime="20231129 08:38:49.907" endtime="20231129 08:38:49.945"/>
</kw>
<msg timestamp="20231129 08:38:49.945" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:49.906" endtime="20231129 08:38:49.945"/>
</kw>
<status status="PASS" starttime="20231129 08:38:49.906" endtime="20231129 08:38:49.945"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/big_file s3://${BUCKET}/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:49.948" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp /tmp/big_file s3://erasure/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:50.738" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:50.738" level="INFO">${output} = 2023-11-29 08:38:50,285 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10
2023-11-29 08:38:50,286 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20231129 08:38:49.947" endtime="20231129 08:38:50.738"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:50.739" level="INFO">2023-11-29 08:38:50,285 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10
2023-11-29 08:38:50,286 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', '/tmp/big_file', 's3://erasure/']
2023-11-29 08:38:50,286 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7fe5ae4ce9d8&gt;
2023-11-29 08:38:50,286 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7fe5af2c3730&gt;
2023-11-29 08:38:50,286 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7fe5af2f0ae8&gt;
2023-11-29 08:38:50,287 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2023-11-29 08:38:50,291 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7fe5ae5fb400&gt;
2023-11-29 08:38:50,291 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7fe5ae4dc048&gt;
2023-11-29 08:38:50,291 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe5b61dca90&gt;
2023-11-29 08:38:50,291 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7fe5ae4dc048&gt;
2023-11-29 08:38:50,293 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe5b61dca90&gt;
2023-11-29 08:38:50,293 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe5b61dca90&gt;
2023-11-29 08:38:50,293 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fe5af2c16a0&gt;
2023-11-29 08:38:50,293 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe5b61dca90&gt;
2023-11-29 08:38:50,293 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fe5af2c16a0&gt;
2023-11-29 08:38:50,294 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe5b61dca90&gt;
2023-11-29 08:38:50,294 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe5b61dca90&gt;
2023-11-29 08:38:50,294 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe5b61dca90&gt;
2023-11-29 08:38:50,294 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fe5af2c16a0&gt;
2023-11-29 08:38:50,294 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe5b61dca90&gt;
2023-11-29 08:38:50,294 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe5b61dca90&gt;
2023-11-29 08:38:50,294 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe5b61dca90&gt;
2023-11-29 08:38:50,294 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe5b61dca90&gt;
2023-11-29 08:38:50,294 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe5b61dca90&gt;
2023-11-29 08:38:50,295 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe5b61dca90&gt;
2023-11-29 08:38:50,295 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe5b61dca90&gt;
2023-11-29 08:38:50,295 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe5b61dca90&gt;
2023-11-29 08:38:50,295 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe5b61dca90&gt;
2023-11-29 08:38:50,295 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe5b61dca90&gt;
2023-11-29 08:38:50,295 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe5b61dca90&gt;
2023-11-29 08:38:50,295 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe5b61dca90&gt;
2023-11-29 08:38:50,295 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe5b61dca90&gt;
2023-11-29 08:38:50,296 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe5b61dca90&gt;
2023-11-29 08:38:50,296 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe5b61dca90&gt;
2023-11-29 08:38:50,296 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe5b61dca90&gt;
2023-11-29 08:38:50,296 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe5b61dca90&gt;
2023-11-29 08:38:50,296 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe5b61dca90&gt;
2023-11-29 08:38:50,296 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fe5af2c16a0&gt;
2023-11-29 08:38:50,296 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe5b61dca90&gt;
2023-11-29 08:38:50,296 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe5b61dca90&gt;
2023-11-29 08:38:50,296 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe5b61dca90&gt;
2023-11-29 08:38:50,296 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fe5af2c16a0&gt;
2023-11-29 08:38:50,297 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe5b61dca90&gt;
2023-11-29 08:38:50,297 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fe5af2c16a0&gt;
2023-11-29 08:38:50,297 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe5b61dca90&gt;
2023-11-29 08:38:50,297 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe5b61dca90&gt;
2023-11-29 08:38:50,297 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe5b61dca90&gt;
2023-11-29 08:38:50,297 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe5b61dca90&gt;
2023-11-29 08:38:50,297 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fe5b61dca90&gt;
2023-11-29 08:38:50,297 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2023-11-29 08:38:50,298 - MainThread - botocore.credentials - INFO - Found credentials in environment variables.
2023-11-29 08:38:50,298 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/endpoints.json
2023-11-29 08:38:50,311 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/sdk-default-configuration.json
2023-11-29 08:38:50,312 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7fe5aff88378&gt;
2023-11-29 08:38:50,312 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/s3/2006-03-01/service-2.json
2023-11-29 08:38:50,322 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7fe5b025d2f0&gt;
2023-11-29 08:38:50,322 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7fe5b025d0d0&gt;
2023-11-29 08:38:50,322 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-11-29 08:38:50,325 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2023-11-29 08:38:50,325 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/_retry.json
2023-11-29 08:38:50,326 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2023-11-29 08:38:50,327 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-11-29 08:38:50,327 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7fe5aff88378&gt;
2023-11-29 08:38:50,328 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7fe5b025d2f0&gt;
2023-11-29 08:38:50,328 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7fe5b025d0d0&gt;
2023-11-29 08:38:50,328 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-11-29 08:38:50,330 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2023-11-29 08:38:50,331 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2023-11-29 08:38:50,332 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-11-29 08:38:50,332 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7fe5aff88378&gt;
2023-11-29 08:38:50,333 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7fe5b025d2f0&gt;
2023-11-29 08:38:50,333 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7fe5b025d0d0&gt;
2023-11-29 08:38:50,334 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-11-29 08:38:50,336 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2023-11-29 08:38:50,336 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2023-11-29 08:38:50,337 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-11-29 08:38:50,338 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2023-11-29 08:38:50,339 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2023-11-29 08:38:50,339 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fe5add7bda0&gt;}) about to wait for the following futures []
2023-11-29 08:38:50,339 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fe5add7bda0&gt;}) done waiting for dependent futures
2023-11-29 08:38:50,340 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fe5add7bda0&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7fe5ade39c50&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7fe5addabda0&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7fe5addabe10&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7fe5addabf98&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fe5add7bda0&gt;}
2023-11-29 08:38:50,340 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task CreateMultipartUploadTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fe5addabf98&gt; for transfer request: 0.
2023-11-29 08:38:50,340 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2023-11-29 08:38:50,341 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - CreateMultipartUploadTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}) about to wait for the following futures []
2023-11-29 08:38:50,341 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - CreateMultipartUploadTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}) done waiting for dependent futures
2023-11-29 08:38:50,341 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task UploadPartTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'part_number': 1, 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fe5addabf98&gt; for transfer request: 0.
2023-11-29 08:38:50,341 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task CreateMultipartUploadTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7fe5ade39c50&gt;, 'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}
2023-11-29 08:38:50,342 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;function validate_ascii_metadata at 0x7fe5affa16a8&gt;
2023-11-29 08:38:50,341 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2023-11-29 08:38:50,342 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;function sse_md5 at 0x7fe5aff9eae8&gt;
2023-11-29 08:38:50,342 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;function validate_bucket_name at 0x7fe5aff9ea60&gt;
2023-11-29 08:38:50,342 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7fe5ade0a1d0&gt;&gt;
2023-11-29 08:38:50,342 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7fe5ade0a588&gt;&gt;
2023-11-29 08:38:50,342 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;function generate_idempotent_uuid at 0x7fe5aff9e8c8&gt;
2023-11-29 08:38:50,343 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.CreateMultipartUpload: calling handler &lt;function add_expect_header at 0x7fe5aff9ed90&gt;
2023-11-29 08:38:50,343 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.CreateMultipartUpload: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7fe5ade0a1d0&gt;&gt;
2023-11-29 08:38:50,343 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.CreateMultipartUpload: calling handler &lt;function add_recursion_detection_header at 0x7fe5aff9e598&gt;
2023-11-29 08:38:50,343 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.CreateMultipartUpload: calling handler &lt;function inject_api_version_header_if_needed at 0x7fe5aff250d0&gt;
2023-11-29 08:38:50,343 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=CreateMultipartUpload) with params: {'url_path': '/erasure/big_file?uploads', 'query_string': {}, 'method': 'POST', 'headers': {'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10'}, 'body': b'', 'url': 'http://s3g:9878/erasure/big_file?uploads', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7fe5ade39e48&gt;, 'has_streaming_input': False, 'auth_type': None, 'signing': {'bucket': 'erasure'}}}
2023-11-29 08:38:50,343 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.CreateMultipartUpload: calling handler &lt;function signal_not_transferring at 0x7fe5b24c6158&gt;
2023-11-29 08:38:50,343 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.CreateMultipartUpload: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7fe5ade39e10&gt;&gt;
2023-11-29 08:38:50,344 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.CreateMultipartUpload: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7fe5ade0a5f8&gt;&gt;
2023-11-29 08:38:50,344 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.CreateMultipartUpload: calling handler &lt;function set_operation_specific_signer at 0x7fe5aff9e7b8&gt;
2023-11-29 08:38:50,344 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.CreateMultipartUpload: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7fe5ade0a5f8&gt;&gt;
2023-11-29 08:38:50,344 - ThreadPoolExecutor-0_0 - botocore.utils - DEBUG - Using S3 path style addressing.
2023-11-29 08:38:50,344 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2023-11-29 08:38:50,344 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
POST
/erasure/big_file
uploads=
host:s3g:9878
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20231129T083850Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2023-11-29 08:38:50,344 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20231129T083850Z
20231129/us-west-1/s3/aws4_request
29f5af557e1f67fae7d60fc687b0dab4aea7bd076ed5e43320a675a11e64978b
2023-11-29 08:38:50,344 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
94ed2877c8da41da45728f6b64c51c4bd5db823b5a396cea0d23940f1d18d401
2023-11-29 08:38:50,344 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.CreateMultipartUpload: calling handler &lt;function signal_transferring at 0x7fe5b24c61e0&gt;
2023-11-29 08:38:50,345 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.CreateMultipartUpload: calling handler &lt;function add_retry_headers at 0x7fe5aff25730&gt;
2023-11-29 08:38:50,345 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=POST, url=http://s3g:9878/erasure/big_file?uploads, headers={'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10', 'X-Amz-Date': b'20231129T083850Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/scm@EXAMPLE.COM/20231129/us-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=94ed2877c8da41da45728f6b64c51c4bd5db823b5a396cea0d23940f1d18d401', 'amz-sdk-invocation-id': b'04bf289f-20a4-4635-ad59-4b0c8628aa04', 'amz-sdk-request': b'attempt=1', 'Content-Length': '0'}&gt;
2023-11-29 08:38:50,346 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2023-11-29 08:38:50,346 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'part_number': 1, 'extra_args': {}}) about to wait for the following futures [&lt;s3transfer.futures.ExecutorFuture object at 0x7fe5add8c400&gt;]
2023-11-29 08:38:50,346 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'part_number': 1, 'extra_args': {}}) about to wait for &lt;s3transfer.futures.ExecutorFuture object at 0x7fe5add8c400&gt;
2023-11-29 08:38:50,346 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task UploadPartTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'part_number': 2, 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fe5addabf98&gt; for transfer request: 0.
2023-11-29 08:38:50,347 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2023-11-29 08:38:50,347 - ThreadPoolExecutor-0_2 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'part_number': 2, 'extra_args': {}}) about to wait for the following futures [&lt;s3transfer.futures.ExecutorFuture object at 0x7fe5add8c400&gt;]
2023-11-29 08:38:50,347 - ThreadPoolExecutor-0_2 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'part_number': 2, 'extra_args': {}}) about to wait for &lt;s3transfer.futures.ExecutorFuture object at 0x7fe5add8c400&gt;
2023-11-29 08:38:50,347 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fe5addabf98&gt; for transfer request: 0.
2023-11-29 08:38:50,347 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2023-11-29 08:38:50,348 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}) about to wait for the following futures [&lt;s3transfer.futures.ExecutorFuture object at 0x7fe5add8c400&gt;, &lt;s3transfer.futures.ExecutorFuture object at 0x7fe5acc1cc88&gt;, &lt;s3transfer.futures.ExecutorFuture object at 0x7fe5acc36048&gt;]
2023-11-29 08:38:50,348 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}) about to wait for &lt;s3transfer.futures.ExecutorFuture object at 0x7fe5add8c400&gt;
2023-11-29 08:38:50,348 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-11-29 08:38:50,357 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "POST /erasure/big_file?uploads HTTP/1.1" 200 285
2023-11-29 08:38:50,358 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Wed, 29 Nov 2023 08:38:50 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Wed, 29 Nov 2023 08:38:50 GMT', 'Pragma': 'no-cache', 'Content-Type': 'application/xml', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'Server': 'Ozone', 'x-amz-id-2': '1qOU051spm', 'x-amz-request-id': 'bac138df-fc11-406c-b940-b7da688c2993', 'Content-Length': '285'}
2023-11-29 08:38:50,358 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
b'&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;&lt;InitiateMultipartUploadResult xmlns="http://s3.amazonaws.com/doc/2006-03-01/"&gt;&lt;Bucket&gt;erasure&lt;/Bucket&gt;&lt;Key&gt;big_file&lt;/Key&gt;&lt;UploadId&gt;1383649b-561b-4f3d-a1c0-22058ce4d888-111492931934748749&lt;/UploadId&gt;&lt;/InitiateMultipartUploadResult&gt;'
2023-11-29 08:38:50,359 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.CreateMultipartUpload: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7fe5ade0a208&gt;
2023-11-29 08:38:50,359 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2023-11-29 08:38:50,359 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.CreateMultipartUpload: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7fe5ade0a1d0&gt;&gt;
2023-11-29 08:38:50,359 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.CreateMultipartUpload: calling handler &lt;function enhance_error_msg at 0x7fe5ae4ce598&gt;
2023-11-29 08:38:50,359 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-11-29 08:38:50,359 - ThreadPoolExecutor-0_2 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'part_number': 2, 'extra_args': {}}) done waiting for dependent futures
2023-11-29 08:38:50,360 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}) about to wait for &lt;s3transfer.futures.ExecutorFuture object at 0x7fe5acc1cc88&gt;
2023-11-29 08:38:50,360 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'part_number': 1, 'extra_args': {}}) done waiting for dependent futures
2023-11-29 08:38:50,360 - ThreadPoolExecutor-0_2 - s3transfer.tasks - DEBUG - Executing task UploadPartTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'part_number': 2, 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7fe5ade39c50&gt;, 'fileobj': &lt;s3transfer.utils.ReadFileChunk object at 0x7fe5acc1cdd8&gt;, 'bucket': 'erasure', 'key': 'big_file', 'part_number': 2, 'extra_args': {}, 'upload_id': '1383649b-561b-4f3d-a1c0-22058ce4d888-111492931934748749'}
2023-11-29 08:38:50,360 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function sse_md5 at 0x7fe5aff9eae8&gt;
2023-11-29 08:38:50,360 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function convert_body_to_file_like_object at 0x7fe5affa1f28&gt;
2023-11-29 08:38:50,360 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function validate_bucket_name at 0x7fe5aff9ea60&gt;
2023-11-29 08:38:50,361 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7fe5ade0a1d0&gt;&gt;
2023-11-29 08:38:50,361 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7fe5ade0a588&gt;&gt;
2023-11-29 08:38:50,360 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - Executing task UploadPartTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'part_number': 1, 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7fe5ade39c50&gt;, 'fileobj': &lt;s3transfer.utils.ReadFileChunk object at 0x7fe5add8c588&gt;, 'bucket': 'erasure', 'key': 'big_file', 'part_number': 1, 'extra_args': {}, 'upload_id': '1383649b-561b-4f3d-a1c0-22058ce4d888-111492931934748749'}
2023-11-29 08:38:50,361 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function generate_idempotent_uuid at 0x7fe5aff9e8c8&gt;
2023-11-29 08:38:50,361 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function sse_md5 at 0x7fe5aff9eae8&gt;
2023-11-29 08:38:50,361 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function conditionally_calculate_md5 at 0x7fe5b09440d0&gt;
2023-11-29 08:38:50,361 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function convert_body_to_file_like_object at 0x7fe5affa1f28&gt;
2023-11-29 08:38:50,361 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function validate_bucket_name at 0x7fe5aff9ea60&gt;
2023-11-29 08:38:50,361 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7fe5ade0a1d0&gt;&gt;
2023-11-29 08:38:50,362 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7fe5ade0a588&gt;&gt;
2023-11-29 08:38:50,362 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function generate_idempotent_uuid at 0x7fe5aff9e8c8&gt;
2023-11-29 08:38:50,362 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function conditionally_calculate_md5 at 0x7fe5b09440d0&gt;
2023-11-29 08:38:50,365 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_expect_header at 0x7fe5aff9ed90&gt;
2023-11-29 08:38:50,365 - ThreadPoolExecutor-0_2 - botocore.handlers - DEBUG - Adding expect 100 continue header to request.
2023-11-29 08:38:50,365 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7fe5ade0a1d0&gt;&gt;
2023-11-29 08:38:50,365 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_recursion_detection_header at 0x7fe5aff9e598&gt;
2023-11-29 08:38:50,365 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function inject_api_version_header_if_needed at 0x7fe5aff250d0&gt;
2023-11-29 08:38:50,365 - ThreadPoolExecutor-0_2 - botocore.endpoint - DEBUG - Making request for OperationModel(name=UploadPart) with params: {'url_path': '/erasure/big_file', 'query_string': {'uploadId': '1383649b-561b-4f3d-a1c0-22058ce4d888-111492931934748749', 'partNumber': 2}, 'method': 'PUT', 'headers': {'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10', 'Content-MD5': '0OYudFCyG4qm0wDAVZLRcg==', 'Expect': '100-continue'}, 'body': &lt;s3transfer.utils.ReadFileChunk object at 0x7fe5acc1cdd8&gt;, 'url': 'http://s3g:9878/erasure/big_file?uploadId=1383649b-561b-4f3d-a1c0-22058ce4d888-111492931934748749&amp;partNumber=2', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7fe5ade39e48&gt;, 'has_streaming_input': True, 'auth_type': None, 'signing': {'bucket': 'erasure'}}}
2023-11-29 08:38:50,366 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function signal_not_transferring at 0x7fe5b24c6158&gt;
2023-11-29 08:38:50,366 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7fe5ade39e10&gt;&gt;
2023-11-29 08:38:50,366 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event choose-signer.s3.UploadPart: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7fe5ade0a5f8&gt;&gt;
2023-11-29 08:38:50,366 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event choose-signer.s3.UploadPart: calling handler &lt;function set_operation_specific_signer at 0x7fe5aff9e7b8&gt;
2023-11-29 08:38:50,366 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-sign.s3.UploadPart: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7fe5ade0a5f8&gt;&gt;
2023-11-29 08:38:50,368 - ThreadPoolExecutor-0_2 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2023-11-29 08:38:50,368 - ThreadPoolExecutor-0_2 - botocore.auth - DEBUG - CanonicalRequest:
PUT
/erasure/big_file
partNumber=2&amp;uploadId=1383649b-561b-4f3d-a1c0-22058ce4d888-111492931934748749
content-md5:0OYudFCyG4qm0wDAVZLRcg==
host:s3g:9878
x-amz-content-sha256:78a3dbeccbbca0df082a9e0d1b2f87dd5c612a2b9bdb24bcaa3bc0475efaeb59
x-amz-date:20231129T083850Z

content-md5;host;x-amz-content-sha256;x-amz-date
78a3dbeccbbca0df082a9e0d1b2f87dd5c612a2b9bdb24bcaa3bc0475efaeb59
2023-11-29 08:38:50,368 - ThreadPoolExecutor-0_2 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20231129T083850Z
20231129/us-west-1/s3/aws4_request
d9a8b4fab91b87819da2a68550a0a1aca6954de8258577b0b1d8c6753b048365
2023-11-29 08:38:50,368 - ThreadPoolExecutor-0_2 - botocore.auth - DEBUG - Signature:
98b45ff973c4b76b721a6e239a2417a3b4644d8643a27140474ff3848e72f4c6
2023-11-29 08:38:50,368 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function signal_transferring at 0x7fe5b24c61e0&gt;
2023-11-29 08:38:50,368 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function add_retry_headers at 0x7fe5aff25730&gt;
2023-11-29 08:38:50,368 - ThreadPoolExecutor-0_2 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=PUT, url=http://s3g:9878/erasure/big_file?uploadId=1383649b-561b-4f3d-a1c0-22058ce4d888-111492931934748749&amp;partNumber=2, headers={'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10', 'Content-MD5': b'0OYudFCyG4qm0wDAVZLRcg==', 'Expect': b'100-continue', 'X-Amz-Date': b'20231129T083850Z', 'X-Amz-Content-SHA256': b'78a3dbeccbbca0df082a9e0d1b2f87dd5c612a2b9bdb24bcaa3bc0475efaeb59', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/scm@EXAMPLE.COM/20231129/us-west-1/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date, Signature=98b45ff973c4b76b721a6e239a2417a3b4644d8643a27140474ff3848e72f4c6', 'amz-sdk-invocation-id': b'4ed23758-f12c-469e-8cc8-1ba3d76e0265', 'amz-sdk-request': b'attempt=1', 'Content-Length': '1611392'}&gt;
2023-11-29 08:38:50,369 - ThreadPoolExecutor-0_2 - botocore.awsrequest - DEBUG - Waiting for 100 Continue response.
2023-11-29 08:38:50,370 - ThreadPoolExecutor-0_2 - botocore.awsrequest - DEBUG - 100 Continue response seen, now sending request body.
2023-11-29 08:38:50,378 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_expect_header at 0x7fe5aff9ed90&gt;
2023-11-29 08:38:50,378 - ThreadPoolExecutor-0_1 - botocore.handlers - DEBUG - Adding expect 100 continue header to request.
2023-11-29 08:38:50,378 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7fe5ade0a1d0&gt;&gt;
2023-11-29 08:38:50,378 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_recursion_detection_header at 0x7fe5aff9e598&gt;
2023-11-29 08:38:50,378 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function inject_api_version_header_if_needed at 0x7fe5aff250d0&gt;
2023-11-29 08:38:50,378 - ThreadPoolExecutor-0_1 - botocore.endpoint - DEBUG - Making request for OperationModel(name=UploadPart) with params: {'url_path': '/erasure/big_file', 'query_string': {'uploadId': '1383649b-561b-4f3d-a1c0-22058ce4d888-111492931934748749', 'partNumber': 1}, 'method': 'PUT', 'headers': {'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10', 'Content-MD5': 'vp5yTWeu81Cu/jxqkgNlnQ==', 'Expect': '100-continue'}, 'body': &lt;s3transfer.utils.ReadFileChunk object at 0x7fe5add8c588&gt;, 'url': 'http://s3g:9878/erasure/big_file?uploadId=1383649b-561b-4f3d-a1c0-22058ce4d888-111492931934748749&amp;partNumber=1', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7fe5ade39e48&gt;, 'has_streaming_input': True, 'auth_type': None, 'signing': {'bucket': 'erasure'}}}
2023-11-29 08:38:50,379 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function signal_not_transferring at 0x7fe5b24c6158&gt;
2023-11-29 08:38:50,379 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7fe5ade39e10&gt;&gt;
2023-11-29 08:38:50,379 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event choose-signer.s3.UploadPart: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7fe5ade0a5f8&gt;&gt;
2023-11-29 08:38:50,379 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event choose-signer.s3.UploadPart: calling handler &lt;function set_operation_specific_signer at 0x7fe5aff9e7b8&gt;
2023-11-29 08:38:50,379 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-sign.s3.UploadPart: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7fe5ade0a5f8&gt;&gt;
2023-11-29 08:38:50,386 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2023-11-29 08:38:50,386 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - CanonicalRequest:
PUT
/erasure/big_file
partNumber=1&amp;uploadId=1383649b-561b-4f3d-a1c0-22058ce4d888-111492931934748749
content-md5:vp5yTWeu81Cu/jxqkgNlnQ==
host:s3g:9878
x-amz-content-sha256:ba096300ce47bc53bb17520d3c9298343e9763efae16cc8e34cd6a8ed42795f2
x-amz-date:20231129T083850Z

content-md5;host;x-amz-content-sha256;x-amz-date
ba096300ce47bc53bb17520d3c9298343e9763efae16cc8e34cd6a8ed42795f2
2023-11-29 08:38:50,386 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20231129T083850Z
20231129/us-west-1/s3/aws4_request
c7939f64632b6c065d7f6c16c21dc05e1cdc46868c4d2e02218039ecedf51e27
2023-11-29 08:38:50,386 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - Signature:
dbfb8fb3a77cc7a5d7257f39aa1cda9abcf5d7ce476fc16e5e2a2bc5ac28216b
2023-11-29 08:38:50,386 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function signal_transferring at 0x7fe5b24c61e0&gt;
2023-11-29 08:38:50,387 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function add_retry_headers at 0x7fe5aff25730&gt;
2023-11-29 08:38:50,387 - ThreadPoolExecutor-0_1 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=PUT, url=http://s3g:9878/erasure/big_file?uploadId=1383649b-561b-4f3d-a1c0-22058ce4d888-111492931934748749&amp;partNumber=1, headers={'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10', 'Content-MD5': b'vp5yTWeu81Cu/jxqkgNlnQ==', 'Expect': b'100-continue', 'X-Amz-Date': b'20231129T083850Z', 'X-Amz-Content-SHA256': b'ba096300ce47bc53bb17520d3c9298343e9763efae16cc8e34cd6a8ed42795f2', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/scm@EXAMPLE.COM/20231129/us-west-1/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date, Signature=dbfb8fb3a77cc7a5d7257f39aa1cda9abcf5d7ce476fc16e5e2a2bc5ac28216b', 'amz-sdk-invocation-id': b'f2160af2-c40a-423d-b1b3-68def7d4f09d', 'amz-sdk-request': b'attempt=1', 'Content-Length': '8388608'}&gt;
2023-11-29 08:38:50,387 - ThreadPoolExecutor-0_1 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (2): s3g:9878
2023-11-29 08:38:50,388 - ThreadPoolExecutor-0_1 - botocore.awsrequest - DEBUG - Waiting for 100 Continue response.
2023-11-29 08:38:50,390 - ThreadPoolExecutor-0_1 - botocore.awsrequest - DEBUG - 100 Continue response seen, now sending request body.
Completed 256.0 KiB/9.5 MiB (5.0 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/9.5 MiB (9.9 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/9.5 MiB (14.3 MiB/s) with 1 file(s) remaining
Completed 1.0 MiB/9.5 MiB (18.7 MiB/s) with 1 file(s) remaining  
Completed 1.2 MiB/9.5 MiB (22.8 MiB/s) with 1 file(s) remaining  
Completed 1.5 MiB/9.5 MiB (26.8 MiB/s) with 1 file(s) remaining  
Completed 1.8 MiB/9.5 MiB (23.9 MiB/s) with 1 file(s) remaining  
Completed 2.0 MiB/9.5 MiB (26.0 MiB/s) with 1 file(s) remaining  
Completed 2.2 MiB/9.5 MiB (29.0 MiB/s) with 1 file(s) remaining  
Completed 2.5 MiB/9.5 MiB (30.0 MiB/s) with 1 file(s) remaining  
Completed 2.8 MiB/9.5 MiB (32.1 MiB/s) with 1 file(s) remaining  
Completed 3.0 MiB/9.5 MiB (34.7 MiB/s) with 1 file(s) remaining  
Completed 3.2 MiB/9.5 MiB (37.3 MiB/s) with 1 file(s) remaining  
Completed 3.5 MiB/9.5 MiB (39.9 MiB/s) with 1 file(s) remaining  
Completed 3.8 MiB/9.5 MiB (40.4 MiB/s) with 1 file(s) remaining  
Completed 4.0 MiB/9.5 MiB (41.5 MiB/s) with 1 file(s) remaining  
Completed 4.2 MiB/9.5 MiB (43.7 MiB/s) with 1 file(s) remaining  
Completed 4.5 MiB/9.5 MiB (45.9 MiB/s) with 1 file(s) remaining  
Completed 4.8 MiB/9.5 MiB (47.9 MiB/s) with 1 file(s) remaining  
Completed 5.0 MiB/9.5 MiB (50.0 MiB/s) with 1 file(s) remaining  
Completed 5.2 MiB/9.5 MiB (51.3 MiB/s) with 1 file(s) remaining  
Completed 5.5 MiB/9.5 MiB (53.1 MiB/s) with 1 file(s) remaining  
Completed 5.8 MiB/9.5 MiB (55.2 MiB/s) with 1 file(s) remaining  
Completed 6.0 MiB/9.5 MiB (57.4 MiB/s) with 1 file(s) remaining  
Completed 6.2 MiB/9.5 MiB (55.7 MiB/s) with 1 file(s) remaining  
Completed 6.5 MiB/9.5 MiB (57.6 MiB/s) with 1 file(s) remaining  
Completed 6.8 MiB/9.5 MiB (59.6 MiB/s) with 1 file(s) remaining  
Completed 7.0 MiB/9.5 MiB (61.6 MiB/s) with 1 file(s) remaining  
Completed 7.2 MiB/9.5 MiB (63.6 MiB/s) with 1 file(s) remaining  
Completed 7.5 MiB/9.5 MiB (65.4 MiB/s) with 1 file(s) remaining  
Completed 7.8 MiB/9.5 MiB (67.3 MiB/s) with 1 file(s) remaining  
Completed 8.0 MiB/9.5 MiB (69.1 MiB/s) with 1 file(s) remaining  
Completed 8.2 MiB/9.5 MiB (71.0 MiB/s) with 1 file(s) remaining  
Completed 8.5 MiB/9.5 MiB (72.9 MiB/s) with 1 file(s) remaining  
Completed 8.8 MiB/9.5 MiB (74.7 MiB/s) with 1 file(s) remaining  
2023-11-29 08:38:50,461 - ThreadPoolExecutor-0_2 - urllib3.connectionpool - DEBUG - http://s3g:9878 "PUT /erasure/big_file?uploadId=1383649b-561b-4f3d-a1c0-22058ce4d888-111492931934748749&amp;partNumber=2 HTTP/1.1" 200 0
2023-11-29 08:38:50,461 - ThreadPoolExecutor-0_2 - botocore.parsers - DEBUG - Response headers: {'Date': 'Wed, 29 Nov 2023 08:38:50 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Wed, 29 Nov 2023 08:38:50 GMT', 'Pragma': 'no-cache', 'Content-Type': 'text/plain;charset=utf-8', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': '/s3v/erasure/big_file-1383649b-561b-4f3d-a1c0-22058ce4d888-111492931934748749-2', 'Server': 'Ozone', 'x-amz-id-2': 'K8FL1Dj7', 'x-amz-request-id': '3c5afef2-c304-4f42-b90d-5756f88bff6b', 'Content-Length': '0'}
2023-11-29 08:38:50,461 - ThreadPoolExecutor-0_2 - botocore.parsers - DEBUG - Response body:
b''
2023-11-29 08:38:50,462 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7fe5ade0a208&gt;
2023-11-29 08:38:50,462 - ThreadPoolExecutor-0_2 - botocore.retryhandler - DEBUG - No retry needed.
2023-11-29 08:38:50,462 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7fe5ade0a1d0&gt;&gt;
2023-11-29 08:38:50,462 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event after-call.s3.UploadPart: calling handler &lt;function enhance_error_msg at 0x7fe5ae4ce598&gt;
Completed 8.8 MiB/9.5 MiB (72.5 MiB/s) with 1 file(s) remaining  
2023-11-29 08:38:50,462 - ThreadPoolExecutor-0_2 - s3transfer.utils - DEBUG - Releasing acquire 0/None
Completed 9.0 MiB/9.5 MiB (73.6 MiB/s) with 1 file(s) remaining  
Completed 9.3 MiB/9.5 MiB (74.7 MiB/s) with 1 file(s) remaining  
Completed 9.5 MiB/9.5 MiB (75.7 MiB/s) with 1 file(s) remaining  
2023-11-29 08:38:50,677 - ThreadPoolExecutor-0_1 - urllib3.connectionpool - DEBUG - http://s3g:9878 "PUT /erasure/big_file?uploadId=1383649b-561b-4f3d-a1c0-22058ce4d888-111492931934748749&amp;partNumber=1 HTTP/1.1" 200 0
2023-11-29 08:38:50,678 - ThreadPoolExecutor-0_1 - botocore.parsers - DEBUG - Response headers: {'Date': 'Wed, 29 Nov 2023 08:38:50 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Wed, 29 Nov 2023 08:38:50 GMT', 'Pragma': 'no-cache', 'Content-Type': 'text/plain;charset=utf-8', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': '/s3v/erasure/big_file-1383649b-561b-4f3d-a1c0-22058ce4d888-111492931934748749-1', 'Server': 'Ozone', 'x-amz-id-2': 'LLyWjjyYBmlH', 'x-amz-request-id': '1566b874-01a9-4183-93d5-1c082048aaae', 'Content-Length': '0'}
2023-11-29 08:38:50,678 - ThreadPoolExecutor-0_1 - botocore.parsers - DEBUG - Response body:
b''
2023-11-29 08:38:50,678 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7fe5ade0a208&gt;
2023-11-29 08:38:50,678 - ThreadPoolExecutor-0_1 - botocore.retryhandler - DEBUG - No retry needed.
2023-11-29 08:38:50,678 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7fe5ade0a1d0&gt;&gt;
2023-11-29 08:38:50,678 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event after-call.s3.UploadPart: calling handler &lt;function enhance_error_msg at 0x7fe5ae4ce598&gt;
2023-11-29 08:38:50,678 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-11-29 08:38:50,678 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}) about to wait for &lt;s3transfer.futures.ExecutorFuture object at 0x7fe5acc36048&gt;
2023-11-29 08:38:50,679 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}) done waiting for dependent futures
2023-11-29 08:38:50,679 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - Executing task CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7fe5ade39c50&gt;, 'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}, 'upload_id': '1383649b-561b-4f3d-a1c0-22058ce4d888-111492931934748749', 'parts': [{'ETag': '/s3v/erasure/big_file-1383649b-561b-4f3d-a1c0-22058ce4d888-111492931934748749-1', 'PartNumber': 1}, {'ETag': '/s3v/erasure/big_file-1383649b-561b-4f3d-a1c0-22058ce4d888-111492931934748749-2', 'PartNumber': 2}]}
2023-11-29 08:38:50,679 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;function validate_bucket_name at 0x7fe5aff9ea60&gt;
2023-11-29 08:38:50,680 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7fe5ade0a1d0&gt;&gt;
2023-11-29 08:38:50,680 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7fe5ade0a588&gt;&gt;
2023-11-29 08:38:50,680 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;function generate_idempotent_uuid at 0x7fe5aff9e8c8&gt;
2023-11-29 08:38:50,680 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-call.s3.CompleteMultipartUpload: calling handler &lt;function add_expect_header at 0x7fe5aff9ed90&gt;
2023-11-29 08:38:50,680 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-call.s3.CompleteMultipartUpload: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7fe5ade0a1d0&gt;&gt;
2023-11-29 08:38:50,680 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-call.s3.CompleteMultipartUpload: calling handler &lt;function add_recursion_detection_header at 0x7fe5aff9e598&gt;
2023-11-29 08:38:50,680 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-call.s3.CompleteMultipartUpload: calling handler &lt;function inject_api_version_header_if_needed at 0x7fe5aff250d0&gt;
2023-11-29 08:38:50,680 - ThreadPoolExecutor-0_3 - botocore.endpoint - DEBUG - Making request for OperationModel(name=CompleteMultipartUpload) with params: {'url_path': '/erasure/big_file', 'query_string': {'uploadId': '1383649b-561b-4f3d-a1c0-22058ce4d888-111492931934748749'}, 'method': 'POST', 'headers': {'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10'}, 'body': b'&lt;CompleteMultipartUpload xmlns="http://s3.amazonaws.com/doc/2006-03-01/"&gt;&lt;Part&gt;&lt;ETag&gt;/s3v/erasure/big_file-1383649b-561b-4f3d-a1c0-22058ce4d888-111492931934748749-1&lt;/ETag&gt;&lt;PartNumber&gt;1&lt;/PartNumber&gt;&lt;/Part&gt;&lt;Part&gt;&lt;ETag&gt;/s3v/erasure/big_file-1383649b-561b-4f3d-a1c0-22058ce4d888-111492931934748749-2&lt;/ETag&gt;&lt;PartNumber&gt;2&lt;/PartNumber&gt;&lt;/Part&gt;&lt;/CompleteMultipartUpload&gt;', 'url': 'http://s3g:9878/erasure/big_file?uploadId=1383649b-561b-4f3d-a1c0-22058ce4d888-111492931934748749', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7fe5ade39e48&gt;, 'has_streaming_input': False, 'auth_type': None, 'signing': {'bucket': 'erasure'}}}
2023-11-29 08:38:50,681 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event request-created.s3.CompleteMultipartUpload: calling handler &lt;function signal_not_transferring at 0x7fe5b24c6158&gt;
2023-11-29 08:38:50,681 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event request-created.s3.CompleteMultipartUpload: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7fe5ade39e10&gt;&gt;
2023-11-29 08:38:50,681 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event choose-signer.s3.CompleteMultipartUpload: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7fe5ade0a5f8&gt;&gt;
2023-11-29 08:38:50,681 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event choose-signer.s3.CompleteMultipartUpload: calling handler &lt;function set_operation_specific_signer at 0x7fe5aff9e7b8&gt;
2023-11-29 08:38:50,681 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-sign.s3.CompleteMultipartUpload: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7fe5ade0a5f8&gt;&gt;
2023-11-29 08:38:50,681 - ThreadPoolExecutor-0_3 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2023-11-29 08:38:50,681 - ThreadPoolExecutor-0_3 - botocore.auth - DEBUG - CanonicalRequest:
POST
/erasure/big_file
uploadId=1383649b-561b-4f3d-a1c0-22058ce4d888-111492931934748749
host:s3g:9878
x-amz-content-sha256:02644bc778afe8d2fb440e995d3bcccbc9ae4d43729b4f6020477775810ac823
x-amz-date:20231129T083850Z

host;x-amz-content-sha256;x-amz-date
02644bc778afe8d2fb440e995d3bcccbc9ae4d43729b4f6020477775810ac823
2023-11-29 08:38:50,682 - ThreadPoolExecutor-0_3 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20231129T083850Z
20231129/us-west-1/s3/aws4_request
9e1c21583c7695b463884c6abb5d393e842e9bed00800738e35d3bba95f9e0e1
2023-11-29 08:38:50,682 - ThreadPoolExecutor-0_3 - botocore.auth - DEBUG - Signature:
8b393c4fb1e57b2cb7cf13ee8bc1cca41a4a214a1e7deb672d3799fd2e622051
2023-11-29 08:38:50,682 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event request-created.s3.CompleteMultipartUpload: calling handler &lt;function signal_transferring at 0x7fe5b24c61e0&gt;
2023-11-29 08:38:50,682 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event request-created.s3.CompleteMultipartUpload: calling handler &lt;function add_retry_headers at 0x7fe5aff25730&gt;
2023-11-29 08:38:50,682 - ThreadPoolExecutor-0_3 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=POST, url=http://s3g:9878/erasure/big_file?uploadId=1383649b-561b-4f3d-a1c0-22058ce4d888-111492931934748749, headers={'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10', 'X-Amz-Date': b'20231129T083850Z', 'X-Amz-Content-SHA256': b'02644bc778afe8d2fb440e995d3bcccbc9ae4d43729b4f6020477775810ac823', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/scm@EXAMPLE.COM/20231129/us-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=8b393c4fb1e57b2cb7cf13ee8bc1cca41a4a214a1e7deb672d3799fd2e622051', 'amz-sdk-invocation-id': b'1bd0cc4f-c44f-4f9a-b310-ffde5b933652', 'amz-sdk-request': b'attempt=1', 'Content-Length': '361'}&gt;
2023-11-29 08:38:50,694 - ThreadPoolExecutor-0_3 - urllib3.connectionpool - DEBUG - http://s3g:9878 "POST /erasure/big_file?uploadId=1383649b-561b-4f3d-a1c0-22058ce4d888-111492931934748749 HTTP/1.1" 200 286
2023-11-29 08:38:50,694 - ThreadPoolExecutor-0_3 - botocore.parsers - DEBUG - Response headers: {'Date': 'Wed, 29 Nov 2023 08:38:50 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Wed, 29 Nov 2023 08:38:50 GMT', 'Pragma': 'no-cache', 'Content-Type': 'application/xml', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'Server': 'Ozone', 'x-amz-id-2': 'o7gytnKhB2dZ', 'x-amz-request-id': 'a88a77c4-40f5-482d-b9d2-e33e34f4e2ac', 'Content-Length': '286'}
2023-11-29 08:38:50,694 - ThreadPoolExecutor-0_3 - botocore.parsers - DEBUG - Response body:
b'&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;&lt;CompleteMultipartUploadResult xmlns="http://s3.amazonaws.com/doc/2006-03-01/"&gt;&lt;Location&gt;erasure&lt;/Location&gt;&lt;Bucket&gt;erasure&lt;/Bucket&gt;&lt;Key&gt;big_file&lt;/Key&gt;&lt;ETag&gt;"d2c89de71fbb4dd8c1c801b93533c25a-2"&lt;/ETag&gt;&lt;/CompleteMultipartUploadResult&gt;'
2023-11-29 08:38:50,695 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event needs-retry.s3.CompleteMultipartUpload: calling handler &lt;function check_for_200_error at 0x7fe5aff9e6a8&gt;
2023-11-29 08:38:50,695 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event needs-retry.s3.CompleteMultipartUpload: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7fe5ade0a208&gt;
2023-11-29 08:38:50,695 - ThreadPoolExecutor-0_3 - botocore.retryhandler - DEBUG - No retry needed.
2023-11-29 08:38:50,695 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event needs-retry.s3.CompleteMultipartUpload: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7fe5ade0a1d0&gt;&gt;
2023-11-29 08:38:50,695 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event after-call.s3.CompleteMultipartUpload: calling handler &lt;function enhance_error_msg at 0x7fe5ae4ce598&gt;
2023-11-29 08:38:50,695 - ThreadPoolExecutor-0_3 - s3transfer.utils - DEBUG - Releasing acquire 0/None
upload: ../../tmp/big_file to s3://erasure/big_file              
2023-11-29 08:38:50,696 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20231129 08:38:50.739" endtime="20231129 08:38:50.740"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:50.740" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:50.740" endtime="20231129 08:38:50.740"/>
</kw>
<status status="PASS" starttime="20231129 08:38:49.946" endtime="20231129 08:38:50.740"/>
</kw>
<msg timestamp="20231129 08:38:50.741" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:49.946" endtime="20231129 08:38:50.741"/>
</kw>
<msg timestamp="20231129 08:38:50.742" level="INFO">${output} = 2023-11-29 08:38:50,285 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10
2023-11-29 08:38:50,286 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20231129 08:38:49.946" endtime="20231129 08:38:50.742"/>
</kw>
<msg timestamp="20231129 08:38:50.742" level="INFO">${result} = 2023-11-29 08:38:50,285 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10
2023-11-29 08:38:50,286 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20231129 08:38:49.945" endtime="20231129 08:38:50.742"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<var>${match}</var>
<var>${etag1}</var>
<arg>${result}</arg>
<arg>(?is)POST /${BUCKET}/big_file\\?uploadId=.*?Response body.*?ETag&gt;"(.*?-2)"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20231129 08:38:50.743" level="INFO">${match} = POST /erasure/big_file?uploadId=1383649b-561b-4f3d-a1c0-22058ce4d888-111492931934748749 HTTP/1.1" 200 286
2023-11-29 08:38:50,694 - ThreadPoolExecutor-0_3 - botocore.parsers - DEBUG - Response headers...</msg>
<msg timestamp="20231129 08:38:50.744" level="INFO">${etag1} = d2c89de71fbb4dd8c1c801b93533c25a-2</msg>
<status status="PASS" starttime="20231129 08:38:50.742" endtime="20231129 08:38:50.744"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<var>${file_download_result}</var>
<arg>cp s3://${BUCKET}/big_file /tmp/big_file_downloaded</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:50.747" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp s3://erasure/big_file /tmp/big_file_downloaded 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:51.351" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:51.351" level="INFO">${output} = 2023-11-29 08:38:51,072 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10
2023-11-29 08:38:51,072 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20231129 08:38:50.745" endtime="20231129 08:38:51.351"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:51.353" level="INFO">2023-11-29 08:38:51,072 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10
2023-11-29 08:38:51,072 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', 's3://erasure/big_file', '/tmp/big_file_downloaded']
2023-11-29 08:38:51,072 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7f6e9e7cc9d8&gt;
2023-11-29 08:38:51,072 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7f6e9f5c0730&gt;
2023-11-29 08:38:51,073 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7f6e9f5eeae8&gt;
2023-11-29 08:38:51,073 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2023-11-29 08:38:51,077 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7f6e9e8f9400&gt;
2023-11-29 08:38:51,077 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7f6e9e7da048&gt;
2023-11-29 08:38:51,077 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6ea64daa90&gt;
2023-11-29 08:38:51,078 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7f6e9e7da048&gt;
2023-11-29 08:38:51,079 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6ea64daa90&gt;
2023-11-29 08:38:51,079 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6ea64daa90&gt;
2023-11-29 08:38:51,079 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f6e9f5be6a0&gt;
2023-11-29 08:38:51,080 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6ea64daa90&gt;
2023-11-29 08:38:51,080 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f6e9f5be6a0&gt;
2023-11-29 08:38:51,080 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6ea64daa90&gt;
2023-11-29 08:38:51,080 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6ea64daa90&gt;
2023-11-29 08:38:51,080 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6ea64daa90&gt;
2023-11-29 08:38:51,080 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f6e9f5be6a0&gt;
2023-11-29 08:38:51,080 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6ea64daa90&gt;
2023-11-29 08:38:51,080 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6ea64daa90&gt;
2023-11-29 08:38:51,080 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6ea64daa90&gt;
2023-11-29 08:38:51,080 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6ea64daa90&gt;
2023-11-29 08:38:51,081 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6ea64daa90&gt;
2023-11-29 08:38:51,081 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6ea64daa90&gt;
2023-11-29 08:38:51,081 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6ea64daa90&gt;
2023-11-29 08:38:51,081 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6ea64daa90&gt;
2023-11-29 08:38:51,081 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6ea64daa90&gt;
2023-11-29 08:38:51,081 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6ea64daa90&gt;
2023-11-29 08:38:51,081 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6ea64daa90&gt;
2023-11-29 08:38:51,081 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6ea64daa90&gt;
2023-11-29 08:38:51,082 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6ea64daa90&gt;
2023-11-29 08:38:51,082 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6ea64daa90&gt;
2023-11-29 08:38:51,082 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6ea64daa90&gt;
2023-11-29 08:38:51,082 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6ea64daa90&gt;
2023-11-29 08:38:51,082 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6ea64daa90&gt;
2023-11-29 08:38:51,082 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6ea64daa90&gt;
2023-11-29 08:38:51,082 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f6e9f5be6a0&gt;
2023-11-29 08:38:51,082 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6ea64daa90&gt;
2023-11-29 08:38:51,082 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6ea64daa90&gt;
2023-11-29 08:38:51,083 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6ea64daa90&gt;
2023-11-29 08:38:51,083 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f6e9f5be6a0&gt;
2023-11-29 08:38:51,083 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6ea64daa90&gt;
2023-11-29 08:38:51,083 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f6e9f5be6a0&gt;
2023-11-29 08:38:51,083 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6ea64daa90&gt;
2023-11-29 08:38:51,083 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6ea64daa90&gt;
2023-11-29 08:38:51,083 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6ea64daa90&gt;
2023-11-29 08:38:51,083 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6ea64daa90&gt;
2023-11-29 08:38:51,083 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f6ea64daa90&gt;
2023-11-29 08:38:51,084 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2023-11-29 08:38:51,084 - MainThread - botocore.credentials - INFO - Found credentials in environment variables.
2023-11-29 08:38:51,084 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/endpoints.json
2023-11-29 08:38:51,097 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/sdk-default-configuration.json
2023-11-29 08:38:51,097 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f6ea0286378&gt;
2023-11-29 08:38:51,098 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/s3/2006-03-01/service-2.json
2023-11-29 08:38:51,107 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f6ea055b2f0&gt;
2023-11-29 08:38:51,107 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f6ea055b0d0&gt;
2023-11-29 08:38:51,108 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-11-29 08:38:51,110 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2023-11-29 08:38:51,111 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/_retry.json
2023-11-29 08:38:51,111 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2023-11-29 08:38:51,112 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-11-29 08:38:51,112 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f6ea0286378&gt;
2023-11-29 08:38:51,113 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f6ea055b2f0&gt;
2023-11-29 08:38:51,113 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f6ea055b0d0&gt;
2023-11-29 08:38:51,113 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-11-29 08:38:51,115 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2023-11-29 08:38:51,116 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2023-11-29 08:38:51,117 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-11-29 08:38:51,117 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f6ea0286378&gt;
2023-11-29 08:38:51,118 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f6ea055b2f0&gt;
2023-11-29 08:38:51,118 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f6ea055b0d0&gt;
2023-11-29 08:38:51,118 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-11-29 08:38:51,121 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2023-11-29 08:38:51,121 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2023-11-29 08:38:51,122 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-11-29 08:38:51,122 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2023-11-29 08:38:51,123 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function sse_md5 at 0x7f6ea029cae8&gt;
2023-11-29 08:38:51,123 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function validate_bucket_name at 0x7f6ea029ca60&gt;
2023-11-29 08:38:51,123 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7f6e9e0a9748&gt;&gt;
2023-11-29 08:38:51,123 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7f6e9e0a9b00&gt;&gt;
2023-11-29 08:38:51,123 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function generate_idempotent_uuid at 0x7f6ea029c8c8&gt;
2023-11-29 08:38:51,123 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function add_expect_header at 0x7f6ea029cd90&gt;
2023-11-29 08:38:51,123 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7f6e9e0a9748&gt;&gt;
2023-11-29 08:38:51,123 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function add_recursion_detection_header at 0x7f6ea029c598&gt;
2023-11-29 08:38:51,123 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7f6ea02230d0&gt;
2023-11-29 08:38:51,124 - MainThread - botocore.endpoint - DEBUG - Making request for OperationModel(name=HeadObject) with params: {'url_path': '/erasure/big_file', 'query_string': {}, 'method': 'HEAD', 'headers': {'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10'}, 'body': b'', 'url': 'http://s3g:9878/erasure/big_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f6e9e0a9400&gt;, 'has_streaming_input': False, 'auth_type': None, 'signing': {'bucket': 'erasure'}}}
2023-11-29 08:38:51,124 - MainThread - botocore.hooks - DEBUG - Event request-created.s3.HeadObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f6e9e0a93c8&gt;&gt;
2023-11-29 08:38:51,124 - MainThread - botocore.hooks - DEBUG - Event choose-signer.s3.HeadObject: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7f6e9e0a9b70&gt;&gt;
2023-11-29 08:38:51,124 - MainThread - botocore.hooks - DEBUG - Event choose-signer.s3.HeadObject: calling handler &lt;function set_operation_specific_signer at 0x7f6ea029c7b8&gt;
2023-11-29 08:38:51,124 - MainThread - botocore.hooks - DEBUG - Event before-sign.s3.HeadObject: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7f6e9e0a9b70&gt;&gt;
2023-11-29 08:38:51,124 - MainThread - botocore.utils - DEBUG - Using S3 path style addressing.
2023-11-29 08:38:51,124 - MainThread - botocore.auth - DEBUG - Calculating signature using v4 auth.
2023-11-29 08:38:51,125 - MainThread - botocore.auth - DEBUG - CanonicalRequest:
HEAD
/erasure/big_file

host:s3g:9878
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20231129T083851Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2023-11-29 08:38:51,125 - MainThread - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20231129T083851Z
20231129/us-west-1/s3/aws4_request
929f64b5925e5afb0a9f841f40063a941a915a7dabe0b5179172fc80058ef709
2023-11-29 08:38:51,125 - MainThread - botocore.auth - DEBUG - Signature:
e76aa4bd771d74aedb136ed9e0813ed1a776881ce32173e07500d1862b766e44
2023-11-29 08:38:51,125 - MainThread - botocore.hooks - DEBUG - Event request-created.s3.HeadObject: calling handler &lt;function add_retry_headers at 0x7f6ea0223730&gt;
2023-11-29 08:38:51,125 - MainThread - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=HEAD, url=http://s3g:9878/erasure/big_file, headers={'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10', 'X-Amz-Date': b'20231129T083851Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/scm@EXAMPLE.COM/20231129/us-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=e76aa4bd771d74aedb136ed9e0813ed1a776881ce32173e07500d1862b766e44', 'amz-sdk-invocation-id': b'1b359d5c-fa7e-482c-b248-aa1993b0c34a', 'amz-sdk-request': b'attempt=1'}&gt;
2023-11-29 08:38:51,126 - MainThread - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2023-11-29 08:38:51,132 - MainThread - urllib3.connectionpool - DEBUG - http://s3g:9878 "HEAD /erasure/big_file HTTP/1.1" 200 0
2023-11-29 08:38:51,132 - MainThread - botocore.parsers - DEBUG - Response headers: {'Date': 'Wed, 29 Nov 2023 08:38:51 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Wed, 29 Nov 2023 08:38:51 GMT', 'Pragma': 'no-cache', 'Content-Type': 'binary/octet-stream', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': '"d2c89de71fbb4dd8c1c801b93533c25a-2"', 'Last-Modified': 'Wed, 29 Nov 2023 08:38:50 GMT', 'Server': 'Ozone', 'x-amz-id-2': 'hGor1TjMPV', 'x-amz-request-id': '9bbf7dc5-b262-4e23-a8ae-fe08e8f8f764', 'Content-Length': '10000000'}
2023-11-29 08:38:51,133 - MainThread - botocore.parsers - DEBUG - Response body:
b''
2023-11-29 08:38:51,133 - MainThread - botocore.hooks - DEBUG - Event needs-retry.s3.HeadObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f6e9e0a9780&gt;
2023-11-29 08:38:51,133 - MainThread - botocore.retryhandler - DEBUG - No retry needed.
2023-11-29 08:38:51,133 - MainThread - botocore.hooks - DEBUG - Event needs-retry.s3.HeadObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7f6e9e0a9748&gt;&gt;
2023-11-29 08:38:51,134 - MainThread - botocore.hooks - DEBUG - Event after-call.s3.HeadObject: calling handler &lt;function enhance_error_msg at 0x7f6e9e7cc598&gt;
2023-11-29 08:38:51,134 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2023-11-29 08:38:51,135 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f6e9e093780&gt;}) about to wait for the following futures []
2023-11-29 08:38:51,135 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f6e9e093780&gt;}) done waiting for dependent futures
2023-11-29 08:38:51,136 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f6e9e093780&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f6e9e137c50&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7f6e9e0a9da0&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7f6e9e0a9e10&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7f6e9e0a9f98&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f6e9e093780&gt;, 'io_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7f6e9e0793c8&gt;}
2023-11-29 08:38:51,136 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task GetObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {'Range': 'bytes=0-8388607'}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f6e9e0a9f98&gt; for transfer request: 0.
2023-11-29 08:38:51,136 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2023-11-29 08:38:51,136 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - GetObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {'Range': 'bytes=0-8388607'}}) about to wait for the following futures []
2023-11-29 08:38:51,136 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - GetObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {'Range': 'bytes=0-8388607'}}) done waiting for dependent futures
2023-11-29 08:38:51,137 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task GetObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {'Range': 'bytes=8388608-'}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f6e9e0a9f98&gt; for transfer request: 0.
2023-11-29 08:38:51,137 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task GetObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {'Range': 'bytes=0-8388607'}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f6e9e137c50&gt;, 'bucket': 'erasure', 'key': 'big_file', 'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f6e9e093e80&gt;, 'extra_args': {'Range': 'bytes=0-8388607'}, 'callbacks': [functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.ProvideSizeSubscriber object at 0x7f6e9e093eb8&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f6e9e093780&gt;), functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.DirectoryCreatorSubscriber object at 0x7f6e9e093940&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f6e9e093780&gt;), functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.ProvideLastModifiedTimeSubscriber object at 0x7f6e9e093ef0&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f6e9e093780&gt;), functools.partial(&lt;bound method BaseResultSubscriber.on_progress of &lt;awscli.customizations.s3.results.DownloadResultSubscriber object at 0x7f6e9e093d68&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f6e9e093780&gt;)], 'max_attempts': 5, 'start_index': 0, 'download_output_manager': &lt;s3transfer.download.DownloadFilenameOutputManager object at 0x7f6e9e0799b0&gt;, 'io_chunksize': 262144, 'bandwidth_limiter': None}
2023-11-29 08:38:51,137 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function sse_md5 at 0x7f6ea029cae8&gt;
2023-11-29 08:38:51,137 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2023-11-29 08:38:51,137 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function validate_bucket_name at 0x7f6ea029ca60&gt;
2023-11-29 08:38:51,137 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - GetObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {'Range': 'bytes=8388608-'}}) about to wait for the following futures []
2023-11-29 08:38:51,138 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7f6e9e1091d0&gt;&gt;
2023-11-29 08:38:51,138 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - GetObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {'Range': 'bytes=8388608-'}}) done waiting for dependent futures
2023-11-29 08:38:51,138 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7f6e9e109588&gt;&gt;
2023-11-29 08:38:51,138 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - Executing task GetObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {'Range': 'bytes=8388608-'}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f6e9e137c50&gt;, 'bucket': 'erasure', 'key': 'big_file', 'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f6e9e093e80&gt;, 'extra_args': {'Range': 'bytes=8388608-'}, 'callbacks': [functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.ProvideSizeSubscriber object at 0x7f6e9e093eb8&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f6e9e093780&gt;), functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.DirectoryCreatorSubscriber object at 0x7f6e9e093940&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f6e9e093780&gt;), functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.ProvideLastModifiedTimeSubscriber object at 0x7f6e9e093ef0&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f6e9e093780&gt;), functools.partial(&lt;bound method BaseResultSubscriber.on_progress of &lt;awscli.customizations.s3.results.DownloadResultSubscriber object at 0x7f6e9e093d68&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f6e9e093780&gt;)], 'max_attempts': 5, 'start_index': 8388608, 'download_output_manager': &lt;s3transfer.download.DownloadFilenameOutputManager object at 0x7f6e9e0799b0&gt;, 'io_chunksize': 262144, 'bandwidth_limiter': None}
2023-11-29 08:38:51,138 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function generate_idempotent_uuid at 0x7f6ea029c8c8&gt;
2023-11-29 08:38:51,138 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-11-29 08:38:51,138 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function sse_md5 at 0x7f6ea029cae8&gt;
2023-11-29 08:38:51,139 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_expect_header at 0x7f6ea029cd90&gt;
2023-11-29 08:38:51,139 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function validate_bucket_name at 0x7f6ea029ca60&gt;
2023-11-29 08:38:51,139 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7f6e9e1091d0&gt;&gt;
2023-11-29 08:38:51,139 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7f6e9e1091d0&gt;&gt;
2023-11-29 08:38:51,139 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_recursion_detection_header at 0x7f6ea029c598&gt;
2023-11-29 08:38:51,139 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7f6e9e109588&gt;&gt;
2023-11-29 08:38:51,139 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7f6ea02230d0&gt;
2023-11-29 08:38:51,139 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function generate_idempotent_uuid at 0x7f6ea029c8c8&gt;
2023-11-29 08:38:51,139 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=GetObject) with params: {'url_path': '/erasure/big_file', 'query_string': {}, 'method': 'GET', 'headers': {'Range': 'bytes=0-8388607', 'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10'}, 'body': b'', 'url': 'http://s3g:9878/erasure/big_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f6e9e137e48&gt;, 'has_streaming_input': False, 'auth_type': None, 'signing': {'bucket': 'erasure'}}}
2023-11-29 08:38:51,139 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_expect_header at 0x7f6ea029cd90&gt;
2023-11-29 08:38:51,140 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function signal_not_transferring at 0x7f6ea27c4158&gt;
2023-11-29 08:38:51,140 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7f6e9e1091d0&gt;&gt;
2023-11-29 08:38:51,140 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f6e9e137e10&gt;&gt;
2023-11-29 08:38:51,140 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_recursion_detection_header at 0x7f6ea029c598&gt;
2023-11-29 08:38:51,140 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.GetObject: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7f6e9e1095f8&gt;&gt;
2023-11-29 08:38:51,140 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7f6ea02230d0&gt;
2023-11-29 08:38:51,141 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.GetObject: calling handler &lt;function set_operation_specific_signer at 0x7f6ea029c7b8&gt;
2023-11-29 08:38:51,141 - ThreadPoolExecutor-0_1 - botocore.endpoint - DEBUG - Making request for OperationModel(name=GetObject) with params: {'url_path': '/erasure/big_file', 'query_string': {}, 'method': 'GET', 'headers': {'Range': 'bytes=8388608-', 'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10'}, 'body': b'', 'url': 'http://s3g:9878/erasure/big_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f6e9e137e48&gt;, 'has_streaming_input': False, 'auth_type': None, 'signing': {'bucket': 'erasure'}}}
2023-11-29 08:38:51,141 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.GetObject: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7f6e9e1095f8&gt;&gt;
2023-11-29 08:38:51,141 - ThreadPoolExecutor-0_0 - botocore.utils - DEBUG - Using S3 path style addressing.
2023-11-29 08:38:51,141 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2023-11-29 08:38:51,141 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
GET
/erasure/big_file

host:s3g:9878
range:bytes=0-8388607
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20231129T083851Z

host;range;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2023-11-29 08:38:51,141 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20231129T083851Z
20231129/us-west-1/s3/aws4_request
ca5571cad7ab4df0b10dec1c8dadc8a1a10965dba6a3a7ad8ddc04d716c94a1f
2023-11-29 08:38:51,141 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
33ff86979bfe050c3488526bc7a13f7a8923d23609a787cbb8156680e040c884
2023-11-29 08:38:51,142 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function signal_transferring at 0x7f6ea27c41e0&gt;
2023-11-29 08:38:51,142 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function add_retry_headers at 0x7f6ea0223730&gt;
2023-11-29 08:38:51,142 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=True, method=GET, url=http://s3g:9878/erasure/big_file, headers={'Range': b'bytes=0-8388607', 'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10', 'X-Amz-Date': b'20231129T083851Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/scm@EXAMPLE.COM/20231129/us-west-1/s3/aws4_request, SignedHeaders=host;range;x-amz-content-sha256;x-amz-date, Signature=33ff86979bfe050c3488526bc7a13f7a8923d23609a787cbb8156680e040c884', 'amz-sdk-invocation-id': b'228e45ea-fac0-4ff6-ace9-5eb1defe3f01', 'amz-sdk-request': b'attempt=1'}&gt;
2023-11-29 08:38:51,142 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2023-11-29 08:38:51,143 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function signal_not_transferring at 0x7f6ea27c4158&gt;
2023-11-29 08:38:51,143 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f6e9e137e10&gt;&gt;
2023-11-29 08:38:51,143 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event choose-signer.s3.GetObject: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7f6e9e1095f8&gt;&gt;
2023-11-29 08:38:51,143 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event choose-signer.s3.GetObject: calling handler &lt;function set_operation_specific_signer at 0x7f6ea029c7b8&gt;
2023-11-29 08:38:51,143 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-sign.s3.GetObject: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7f6e9e1095f8&gt;&gt;
2023-11-29 08:38:51,143 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2023-11-29 08:38:51,143 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - CanonicalRequest:
GET
/erasure/big_file

host:s3g:9878
range:bytes=8388608-
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20231129T083851Z

host;range;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2023-11-29 08:38:51,143 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20231129T083851Z
20231129/us-west-1/s3/aws4_request
3cde5f061df092c79887042a76a4b2e92656f70066fffba7f1de6b7381f25bba
2023-11-29 08:38:51,143 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - Signature:
f8b8701260f81c1795d30d3391ae141d56dbb8a911814256aa1cc599fac9a761
2023-11-29 08:38:51,144 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function signal_transferring at 0x7f6ea27c41e0&gt;
2023-11-29 08:38:51,144 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function add_retry_headers at 0x7f6ea0223730&gt;
2023-11-29 08:38:51,144 - ThreadPoolExecutor-0_1 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=True, method=GET, url=http://s3g:9878/erasure/big_file, headers={'Range': b'bytes=8388608-', 'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10', 'X-Amz-Date': b'20231129T083851Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/scm@EXAMPLE.COM/20231129/us-west-1/s3/aws4_request, SignedHeaders=host;range;x-amz-content-sha256;x-amz-date, Signature=f8b8701260f81c1795d30d3391ae141d56dbb8a911814256aa1cc599fac9a761', 'amz-sdk-invocation-id': b'19d2c101-6ad4-4928-a6e9-1885a9fe2f52', 'amz-sdk-request': b'attempt=1'}&gt;
2023-11-29 08:38:51,144 - ThreadPoolExecutor-0_1 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (2): s3g:9878
2023-11-29 08:38:51,167 - ThreadPoolExecutor-0_1 - urllib3.connectionpool - DEBUG - http://s3g:9878 "GET /erasure/big_file HTTP/1.1" 206 1611392
2023-11-29 08:38:51,167 - ThreadPoolExecutor-0_1 - botocore.parsers - DEBUG - Response headers: {'Date': 'Wed, 29 Nov 2023 08:38:51 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Wed, 29 Nov 2023 08:38:51 GMT', 'Pragma': 'no-cache', 'Content-Type': 'application/octet-stream', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'Content-Range': 'bytes 8388608-9999999/10000000', 'ETag': '"d2c89de71fbb4dd8c1c801b93533c25a-2"', 'Accept-Ranges': 'bytes', 'Last-Modified': 'Wed, 29 Nov 2023 08:38:50 GMT', 'Server': 'Ozone', 'x-amz-id-2': 'B0KvPji0A', 'x-amz-request-id': '17c1f243-0333-4517-a302-3ef819e852d0', 'Content-Length': '1611392'}
2023-11-29 08:38:51,167 - ThreadPoolExecutor-0_1 - botocore.parsers - DEBUG - Response body:
&lt;botocore.response.StreamingBody object at 0x7f6e9cabeda0&gt;
2023-11-29 08:38:51,168 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f6e9e109208&gt;
2023-11-29 08:38:51,169 - ThreadPoolExecutor-0_1 - botocore.retryhandler - DEBUG - No retry needed.
2023-11-29 08:38:51,169 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7f6e9e1091d0&gt;&gt;
2023-11-29 08:38:51,169 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event after-call.s3.GetObject: calling handler &lt;function enhance_error_msg at 0x7f6e9e7cc598&gt;
2023-11-29 08:38:51,171 - ThreadPoolExecutor-0_1 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 8388608}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f6e9e0793c8&gt; for transfer request: 0.
2023-11-29 08:38:51,171 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Acquiring 0
2023-11-29 08:38:51,172 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 8388608}) about to wait for the following futures []
2023-11-29 08:38:51,172 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 8388608}) done waiting for dependent futures
2023-11-29 08:38:51,173 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 8388608}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f6e9e093e80&gt;, 'offset': 8388608}
2023-11-29 08:38:51,173 - ThreadPoolExecutor-0_1 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 8650752}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f6e9e0793c8&gt; for transfer request: 0.
2023-11-29 08:38:51,173 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Acquiring 0
2023-11-29 08:38:51,174 - ThreadPoolExecutor-0_1 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 8912896}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f6e9e0793c8&gt; for transfer request: 0.
2023-11-29 08:38:51,174 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Acquiring 0
Completed 256.0 KiB/9.5 MiB (7.2 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/9.5 MiB (13.7 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/9.5 MiB (20.2 MiB/s) with 1 file(s) remaining
2023-11-29 08:38:51,174 - ThreadPoolExecutor-0_1 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 9175040}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f6e9e0793c8&gt; for transfer request: 0.
2023-11-29 08:38:51,174 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Acquiring 0
Completed 1.0 MiB/9.5 MiB (26.5 MiB/s) with 1 file(s) remaining  
2023-11-29 08:38:51,187 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "GET /erasure/big_file HTTP/1.1" 206 8388608
2023-11-29 08:38:51,188 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Wed, 29 Nov 2023 08:38:51 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Wed, 29 Nov 2023 08:38:51 GMT', 'Pragma': 'no-cache', 'Content-Type': 'application/octet-stream', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'Content-Range': 'bytes 0-8388607/10000000', 'ETag': '"d2c89de71fbb4dd8c1c801b93533c25a-2"', 'Accept-Ranges': 'bytes', 'Last-Modified': 'Wed, 29 Nov 2023 08:38:50 GMT', 'Server': 'Ozone', 'x-amz-id-2': 'v49YwQ8HKQ', 'x-amz-request-id': 'eed135dd-ff58-4094-87cc-ed570cdfe3d5', 'Content-Length': '8388608'}
2023-11-29 08:38:51,188 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
&lt;botocore.response.StreamingBody object at 0x7f6e9cac8828&gt;
2023-11-29 08:38:51,189 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f6e9e109208&gt;
2023-11-29 08:38:51,189 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2023-11-29 08:38:51,189 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7f6e9e1091d0&gt;&gt;
2023-11-29 08:38:51,189 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.GetObject: calling handler &lt;function enhance_error_msg at 0x7f6e9e7cc598&gt;
2023-11-29 08:38:51,189 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-11-29 08:38:51,190 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 8650752}) about to wait for the following futures []
2023-11-29 08:38:51,190 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 8650752}) done waiting for dependent futures
2023-11-29 08:38:51,191 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 8650752}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f6e9e093e80&gt;, 'offset': 8650752}
2023-11-29 08:38:51,191 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-11-29 08:38:51,191 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 8912896}) about to wait for the following futures []
2023-11-29 08:38:51,191 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 8912896}) done waiting for dependent futures
2023-11-29 08:38:51,191 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 8912896}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f6e9e093e80&gt;, 'offset': 8912896}
2023-11-29 08:38:51,193 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 0}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f6e9e0793c8&gt; for transfer request: 0.
2023-11-29 08:38:51,193 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 1.2 MiB/9.5 MiB (22.0 MiB/s) with 1 file(s) remaining  
2023-11-29 08:38:51,194 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-11-29 08:38:51,194 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 9175040}) about to wait for the following futures []
2023-11-29 08:38:51,194 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 9175040}) done waiting for dependent futures
2023-11-29 08:38:51,194 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 9175040}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f6e9e093e80&gt;, 'offset': 9175040}
2023-11-29 08:38:51,194 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 262144}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f6e9e0793c8&gt; for transfer request: 0.
2023-11-29 08:38:51,194 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 1.5 MiB/9.5 MiB (26.0 MiB/s) with 1 file(s) remaining  
2023-11-29 08:38:51,195 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 524288}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f6e9e0793c8&gt; for transfer request: 0.
2023-11-29 08:38:51,195 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 1.8 MiB/9.5 MiB (30.1 MiB/s) with 1 file(s) remaining  
2023-11-29 08:38:51,195 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-11-29 08:38:51,195 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 0}) about to wait for the following futures []
2023-11-29 08:38:51,195 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 0}) done waiting for dependent futures
2023-11-29 08:38:51,195 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 0}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f6e9e093e80&gt;, 'offset': 0}
Completed 2.0 MiB/9.5 MiB (33.8 MiB/s) with 1 file(s) remaining  
2023-11-29 08:38:51,196 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 786432}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f6e9e0793c8&gt; for transfer request: 0.
2023-11-29 08:38:51,196 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2023-11-29 08:38:51,196 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-11-29 08:38:51,196 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 262144}) about to wait for the following futures []
2023-11-29 08:38:51,197 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 262144}) done waiting for dependent futures
2023-11-29 08:38:51,197 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 262144}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f6e9e093e80&gt;, 'offset': 262144}
Completed 2.2 MiB/9.5 MiB (36.8 MiB/s) with 1 file(s) remaining  
2023-11-29 08:38:51,198 - ThreadPoolExecutor-0_1 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 9437184}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f6e9e0793c8&gt; for transfer request: 0.
2023-11-29 08:38:51,198 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Acquiring 0
Completed 2.5 MiB/9.5 MiB (40.5 MiB/s) with 1 file(s) remaining  
2023-11-29 08:38:51,198 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-11-29 08:38:51,199 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 524288}) about to wait for the following futures []
2023-11-29 08:38:51,199 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 524288}) done waiting for dependent futures
2023-11-29 08:38:51,199 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 524288}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f6e9e093e80&gt;, 'offset': 524288}
2023-11-29 08:38:51,198 - ThreadPoolExecutor-0_1 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 9699328}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f6e9e0793c8&gt; for transfer request: 0.
2023-11-29 08:38:51,199 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Acquiring 0
Completed 2.5 MiB/9.5 MiB (40.4 MiB/s) with 1 file(s) remaining  
2023-11-29 08:38:51,199 - ThreadPoolExecutor-0_1 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 9961472}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f6e9e0793c8&gt; for transfer request: 0.
2023-11-29 08:38:51,200 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Acquiring 0
2023-11-29 08:38:51,200 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-11-29 08:38:51,200 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-11-29 08:38:51,200 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 786432}) about to wait for the following futures []
2023-11-29 08:38:51,200 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 786432}) done waiting for dependent futures
2023-11-29 08:38:51,200 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 786432}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f6e9e093e80&gt;, 'offset': 786432}
2023-11-29 08:38:51,201 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-11-29 08:38:51,201 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 9437184}) about to wait for the following futures []
2023-11-29 08:38:51,201 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 9437184}) done waiting for dependent futures
2023-11-29 08:38:51,202 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 9437184}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f6e9e093e80&gt;, 'offset': 9437184}
2023-11-29 08:38:51,202 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-11-29 08:38:51,202 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 9699328}) about to wait for the following futures []
2023-11-29 08:38:51,202 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 9699328}) done waiting for dependent futures
2023-11-29 08:38:51,202 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 9699328}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f6e9e093e80&gt;, 'offset': 9699328}
2023-11-29 08:38:51,202 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-11-29 08:38:51,202 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 9961472}) about to wait for the following futures []
2023-11-29 08:38:51,203 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 9961472}) done waiting for dependent futures
2023-11-29 08:38:51,203 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 9961472}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f6e9e093e80&gt;, 'offset': 9961472}
2023-11-29 08:38:51,203 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
Completed 2.8 MiB/9.5 MiB (36.7 MiB/s) with 1 file(s) remaining  
2023-11-29 08:38:51,213 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 1048576}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f6e9e0793c8&gt; for transfer request: 0.
2023-11-29 08:38:51,213 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 3.0 MiB/9.5 MiB (39.2 MiB/s) with 1 file(s) remaining  
2023-11-29 08:38:51,214 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 1310720}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f6e9e0793c8&gt; for transfer request: 0.
2023-11-29 08:38:51,214 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 3.3 MiB/9.5 MiB (42.2 MiB/s) with 1 file(s) remaining  
2023-11-29 08:38:51,214 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 1572864}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f6e9e0793c8&gt; for transfer request: 0.
2023-11-29 08:38:51,215 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 3.5 MiB/9.5 MiB (45.1 MiB/s) with 1 file(s) remaining  
2023-11-29 08:38:51,215 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 1835008}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f6e9e0793c8&gt; for transfer request: 0.
2023-11-29 08:38:51,215 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2023-11-29 08:38:51,215 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 1048576}) about to wait for the following futures []
2023-11-29 08:38:51,215 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 1048576}) done waiting for dependent futures
2023-11-29 08:38:51,215 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 1048576}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f6e9e093e80&gt;, 'offset': 1048576}
2023-11-29 08:38:51,216 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-11-29 08:38:51,216 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 1310720}) about to wait for the following futures []
2023-11-29 08:38:51,216 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 1310720}) done waiting for dependent futures
2023-11-29 08:38:51,216 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 1310720}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f6e9e093e80&gt;, 'offset': 1310720}
2023-11-29 08:38:51,216 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-11-29 08:38:51,216 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 1572864}) about to wait for the following futures []
2023-11-29 08:38:51,216 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 1572864}) done waiting for dependent futures
2023-11-29 08:38:51,217 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 1572864}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f6e9e093e80&gt;, 'offset': 1572864}
2023-11-29 08:38:51,217 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-11-29 08:38:51,217 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 1835008}) about to wait for the following futures []
2023-11-29 08:38:51,217 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 1835008}) done waiting for dependent futures
2023-11-29 08:38:51,217 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 1835008}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f6e9e093e80&gt;, 'offset': 1835008}
2023-11-29 08:38:51,218 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
Completed 3.8 MiB/9.5 MiB (39.9 MiB/s) with 1 file(s) remaining  
2023-11-29 08:38:51,232 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 2097152}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f6e9e0793c8&gt; for transfer request: 0.
2023-11-29 08:38:51,232 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 4.0 MiB/9.5 MiB (42.0 MiB/s) with 1 file(s) remaining  
2023-11-29 08:38:51,233 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 2359296}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f6e9e0793c8&gt; for transfer request: 0.
2023-11-29 08:38:51,233 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 4.3 MiB/9.5 MiB (44.4 MiB/s) with 1 file(s) remaining  
2023-11-29 08:38:51,233 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 2621440}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f6e9e0793c8&gt; for transfer request: 0.
2023-11-29 08:38:51,233 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 4.5 MiB/9.5 MiB (46.7 MiB/s) with 1 file(s) remaining  
2023-11-29 08:38:51,234 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 2883584}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f6e9e0793c8&gt; for transfer request: 0.
2023-11-29 08:38:51,234 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2023-11-29 08:38:51,234 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 2097152}) about to wait for the following futures []
2023-11-29 08:38:51,234 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 2097152}) done waiting for dependent futures
2023-11-29 08:38:51,234 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 2097152}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f6e9e093e80&gt;, 'offset': 2097152}
2023-11-29 08:38:51,235 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-11-29 08:38:51,235 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 2359296}) about to wait for the following futures []
2023-11-29 08:38:51,235 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 2359296}) done waiting for dependent futures
2023-11-29 08:38:51,235 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 2359296}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f6e9e093e80&gt;, 'offset': 2359296}
2023-11-29 08:38:51,235 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-11-29 08:38:51,235 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 2621440}) about to wait for the following futures []
2023-11-29 08:38:51,235 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 2621440}) done waiting for dependent futures
2023-11-29 08:38:51,235 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 2621440}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f6e9e093e80&gt;, 'offset': 2621440}
2023-11-29 08:38:51,236 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-11-29 08:38:51,236 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 2883584}) about to wait for the following futures []
2023-11-29 08:38:51,236 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 2883584}) done waiting for dependent futures
2023-11-29 08:38:51,236 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 2883584}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f6e9e093e80&gt;, 'offset': 2883584}
2023-11-29 08:38:51,236 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
Completed 4.8 MiB/9.5 MiB (45.7 MiB/s) with 1 file(s) remaining  
2023-11-29 08:38:51,241 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 3145728}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f6e9e0793c8&gt; for transfer request: 0.
2023-11-29 08:38:51,242 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 5.0 MiB/9.5 MiB (47.8 MiB/s) with 1 file(s) remaining  
2023-11-29 08:38:51,242 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 3407872}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f6e9e0793c8&gt; for transfer request: 0.
2023-11-29 08:38:51,242 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 5.3 MiB/9.5 MiB (49.9 MiB/s) with 1 file(s) remaining  
2023-11-29 08:38:51,243 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 3670016}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f6e9e0793c8&gt; for transfer request: 0.
2023-11-29 08:38:51,243 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 5.5 MiB/9.5 MiB (52.1 MiB/s) with 1 file(s) remaining  
2023-11-29 08:38:51,243 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 3932160}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f6e9e0793c8&gt; for transfer request: 0.
2023-11-29 08:38:51,243 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2023-11-29 08:38:51,243 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 3145728}) about to wait for the following futures []
2023-11-29 08:38:51,243 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 3145728}) done waiting for dependent futures
2023-11-29 08:38:51,243 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 3145728}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f6e9e093e80&gt;, 'offset': 3145728}
2023-11-29 08:38:51,244 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-11-29 08:38:51,244 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 3407872}) about to wait for the following futures []
2023-11-29 08:38:51,244 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 3407872}) done waiting for dependent futures
2023-11-29 08:38:51,244 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 3407872}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f6e9e093e80&gt;, 'offset': 3407872}
2023-11-29 08:38:51,244 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-11-29 08:38:51,244 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 3670016}) about to wait for the following futures []
2023-11-29 08:38:51,244 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 3670016}) done waiting for dependent futures
2023-11-29 08:38:51,245 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 3670016}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f6e9e093e80&gt;, 'offset': 3670016}
2023-11-29 08:38:51,245 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-11-29 08:38:51,245 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 3932160}) about to wait for the following futures []
2023-11-29 08:38:51,245 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 3932160}) done waiting for dependent futures
2023-11-29 08:38:51,245 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 3932160}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f6e9e093e80&gt;, 'offset': 3932160}
2023-11-29 08:38:51,245 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-11-29 08:38:51,251 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 4194304}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f6e9e0793c8&gt; for transfer request: 0.
2023-11-29 08:38:51,251 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 5.8 MiB/9.5 MiB (50.5 MiB/s) with 1 file(s) remaining  
2023-11-29 08:38:51,252 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 4456448}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f6e9e0793c8&gt; for transfer request: 0.
2023-11-29 08:38:51,252 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 6.0 MiB/9.5 MiB (52.4 MiB/s) with 1 file(s) remaining  
Completed 6.3 MiB/9.5 MiB (54.3 MiB/s) with 1 file(s) remaining  
2023-11-29 08:38:51,252 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 4194304}) about to wait for the following futures []
2023-11-29 08:38:51,252 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 4718592}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f6e9e0793c8&gt; for transfer request: 0.
2023-11-29 08:38:51,253 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 6.5 MiB/9.5 MiB (56.2 MiB/s) with 1 file(s) remaining  
2023-11-29 08:38:51,253 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 4980736}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f6e9e0793c8&gt; for transfer request: 0.
2023-11-29 08:38:51,255 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2023-11-29 08:38:51,252 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 4194304}) done waiting for dependent futures
2023-11-29 08:38:51,255 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 4194304}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f6e9e093e80&gt;, 'offset': 4194304}
2023-11-29 08:38:51,255 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-11-29 08:38:51,255 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 4456448}) about to wait for the following futures []
2023-11-29 08:38:51,256 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 4456448}) done waiting for dependent futures
2023-11-29 08:38:51,256 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 4456448}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f6e9e093e80&gt;, 'offset': 4456448}
2023-11-29 08:38:51,256 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-11-29 08:38:51,257 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 4718592}) about to wait for the following futures []
2023-11-29 08:38:51,257 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 4718592}) done waiting for dependent futures
2023-11-29 08:38:51,257 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 4718592}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f6e9e093e80&gt;, 'offset': 4718592}
2023-11-29 08:38:51,258 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-11-29 08:38:51,258 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 4980736}) about to wait for the following futures []
2023-11-29 08:38:51,258 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 4980736}) done waiting for dependent futures
2023-11-29 08:38:51,258 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 4980736}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f6e9e093e80&gt;, 'offset': 4980736}
Completed 6.8 MiB/9.5 MiB (55.0 MiB/s) with 1 file(s) remaining  
2023-11-29 08:38:51,260 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 5242880}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f6e9e0793c8&gt; for transfer request: 0.
2023-11-29 08:38:51,260 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 7.0 MiB/9.5 MiB (56.9 MiB/s) with 1 file(s) remaining  
2023-11-29 08:38:51,260 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 5505024}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f6e9e0793c8&gt; for transfer request: 0.
2023-11-29 08:38:51,261 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 7.3 MiB/9.5 MiB (58.7 MiB/s) with 1 file(s) remaining  
2023-11-29 08:38:51,261 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 5767168}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f6e9e0793c8&gt; for transfer request: 0.
2023-11-29 08:38:51,261 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 7.5 MiB/9.5 MiB (60.6 MiB/s) with 1 file(s) remaining  
2023-11-29 08:38:51,261 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 6029312}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f6e9e0793c8&gt; for transfer request: 0.
2023-11-29 08:38:51,261 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2023-11-29 08:38:51,261 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-11-29 08:38:51,261 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 5242880}) about to wait for the following futures []
2023-11-29 08:38:51,262 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 5242880}) done waiting for dependent futures
2023-11-29 08:38:51,262 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 5242880}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f6e9e093e80&gt;, 'offset': 5242880}
2023-11-29 08:38:51,262 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-11-29 08:38:51,262 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 5505024}) about to wait for the following futures []
2023-11-29 08:38:51,262 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 5505024}) done waiting for dependent futures
2023-11-29 08:38:51,262 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 5505024}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f6e9e093e80&gt;, 'offset': 5505024}
2023-11-29 08:38:51,263 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-11-29 08:38:51,263 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 5767168}) about to wait for the following futures []
2023-11-29 08:38:51,263 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 5767168}) done waiting for dependent futures
2023-11-29 08:38:51,263 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 5767168}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f6e9e093e80&gt;, 'offset': 5767168}
2023-11-29 08:38:51,264 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-11-29 08:38:51,264 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 6029312}) about to wait for the following futures []
2023-11-29 08:38:51,264 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 6029312}) done waiting for dependent futures
2023-11-29 08:38:51,264 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 6029312}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f6e9e093e80&gt;, 'offset': 6029312}
2023-11-29 08:38:51,264 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
Completed 7.8 MiB/9.5 MiB (60.1 MiB/s) with 1 file(s) remaining  
2023-11-29 08:38:51,266 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 6291456}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f6e9e0793c8&gt; for transfer request: 0.
2023-11-29 08:38:51,266 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2023-11-29 08:38:51,267 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 6291456}) about to wait for the following futures []
2023-11-29 08:38:51,267 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 6291456}) done waiting for dependent futures
2023-11-29 08:38:51,267 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 6291456}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f6e9e093e80&gt;, 'offset': 6291456}
2023-11-29 08:38:51,267 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
Completed 8.0 MiB/9.5 MiB (59.2 MiB/s) with 1 file(s) remaining  
2023-11-29 08:38:51,272 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 6553600}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f6e9e0793c8&gt; for transfer request: 0.
2023-11-29 08:38:51,273 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 8.3 MiB/9.5 MiB (60.8 MiB/s) with 1 file(s) remaining  
2023-11-29 08:38:51,273 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 6815744}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f6e9e0793c8&gt; for transfer request: 0.
2023-11-29 08:38:51,273 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 8.5 MiB/9.5 MiB (62.4 MiB/s) with 1 file(s) remaining  
2023-11-29 08:38:51,273 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 7077888}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f6e9e0793c8&gt; for transfer request: 0.
2023-11-29 08:38:51,274 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2023-11-29 08:38:51,274 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 6553600}) about to wait for the following futures []
2023-11-29 08:38:51,274 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 6553600}) done waiting for dependent futures
2023-11-29 08:38:51,274 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 6553600}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f6e9e093e80&gt;, 'offset': 6553600}
2023-11-29 08:38:51,274 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-11-29 08:38:51,274 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 6815744}) about to wait for the following futures []
2023-11-29 08:38:51,274 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 6815744}) done waiting for dependent futures
2023-11-29 08:38:51,274 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 6815744}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f6e9e093e80&gt;, 'offset': 6815744}
2023-11-29 08:38:51,277 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-11-29 08:38:51,277 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 7077888}) about to wait for the following futures []
2023-11-29 08:38:51,277 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 7077888}) done waiting for dependent futures
2023-11-29 08:38:51,277 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 7077888}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f6e9e093e80&gt;, 'offset': 7077888}
2023-11-29 08:38:51,277 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
Completed 8.8 MiB/9.5 MiB (58.9 MiB/s) with 1 file(s) remaining  
2023-11-29 08:38:51,286 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 7340032}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f6e9e0793c8&gt; for transfer request: 0.
2023-11-29 08:38:51,286 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2023-11-29 08:38:51,287 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 7602176}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f6e9e0793c8&gt; for transfer request: 0.
Completed 9.0 MiB/9.5 MiB (60.3 MiB/s) with 1 file(s) remaining  
2023-11-29 08:38:51,287 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 9.3 MiB/9.5 MiB (61.7 MiB/s) with 1 file(s) remaining  
2023-11-29 08:38:51,287 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 7864320}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f6e9e0793c8&gt; for transfer request: 0.
2023-11-29 08:38:51,287 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 7340032}) about to wait for the following futures []
2023-11-29 08:38:51,287 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2023-11-29 08:38:51,288 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 7340032}) done waiting for dependent futures
2023-11-29 08:38:51,288 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 7340032}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f6e9e093e80&gt;, 'offset': 7340032}
Completed 9.5 MiB/9.5 MiB (63.0 MiB/s) with 1 file(s) remaining  
2023-11-29 08:38:51,288 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 8126464}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f6e9e0793c8&gt; for transfer request: 0.
2023-11-29 08:38:51,288 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2023-11-29 08:38:51,288 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-11-29 08:38:51,288 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/big_file_downloaded'}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f6e9e0793c8&gt; for transfer request: 0.
2023-11-29 08:38:51,289 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 7602176}) about to wait for the following futures []
2023-11-29 08:38:51,289 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 7602176}) done waiting for dependent futures
2023-11-29 08:38:51,289 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 7602176}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f6e9e093e80&gt;, 'offset': 7602176}
2023-11-29 08:38:51,289 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-11-29 08:38:51,289 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 7864320}) about to wait for the following futures []
2023-11-29 08:38:51,289 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 7864320}) done waiting for dependent futures
2023-11-29 08:38:51,289 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 7864320}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f6e9e093e80&gt;, 'offset': 7864320}
2023-11-29 08:38:51,290 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-11-29 08:38:51,289 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2023-11-29 08:38:51,290 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 8126464}) about to wait for the following futures []
2023-11-29 08:38:51,290 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-11-29 08:38:51,290 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 8126464}) done waiting for dependent futures
2023-11-29 08:38:51,290 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 8126464}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f6e9e093e80&gt;, 'offset': 8126464}
2023-11-29 08:38:51,290 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-11-29 08:38:51,290 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/big_file_downloaded'}) about to wait for the following futures []
2023-11-29 08:38:51,290 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/big_file_downloaded'}) done waiting for dependent futures
2023-11-29 08:38:51,291 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/big_file_downloaded'}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f6e9e093e80&gt;, 'final_filename': '/tmp/big_file_downloaded', 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7f6e9e0a9e10&gt;}
2023-11-29 08:38:51,291 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
download: s3://erasure/big_file to ../../tmp/big_file_downloaded 
2023-11-29 08:38:51,292 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20231129 08:38:51.352" endtime="20231129 08:38:51.354"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:51.354" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:51.354" endtime="20231129 08:38:51.354"/>
</kw>
<status status="PASS" starttime="20231129 08:38:50.745" endtime="20231129 08:38:51.355"/>
</kw>
<msg timestamp="20231129 08:38:51.355" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:50.745" endtime="20231129 08:38:51.355"/>
</kw>
<msg timestamp="20231129 08:38:51.358" level="INFO">${output} = 2023-11-29 08:38:51,072 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10
2023-11-29 08:38:51,072 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20231129 08:38:50.744" endtime="20231129 08:38:51.358"/>
</kw>
<msg timestamp="20231129 08:38:51.359" level="INFO">${file_download_result} = 2023-11-29 08:38:51,072 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10
2023-11-29 08:38:51,072 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20231129 08:38:50.744" endtime="20231129 08:38:51.359"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<var>${match}</var>
<var>${etag2}</var>
<arg>${file_download_result}</arg>
<arg>(?is)GET /${BUCKET}/big_file.*?Response headers.*?ETag':\ '"(.*?-2)"'</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20231129 08:38:51.361" level="INFO">${match} = GET /erasure/big_file HTTP/1.1" 206 1611392
2023-11-29 08:38:51,167 - ThreadPoolExecutor-0_1 - botocore.parsers - DEBUG - Response headers: {'Date': 'Wed, 29 Nov 2023 08:38:51 GMT', 'Cache-Control': '...</msg>
<msg timestamp="20231129 08:38:51.361" level="INFO">${etag2} = d2c89de71fbb4dd8c1c801b93533c25a-2</msg>
<status status="PASS" starttime="20231129 08:38:51.359" endtime="20231129 08:38:51.361"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etag1}</arg>
<arg>${etag2}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20231129 08:38:51.361" endtime="20231129 08:38:51.362"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>rm s3://${BUCKET}/big_file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:51.366" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 rm s3://erasure/big_file 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:51.802" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:51.802" level="INFO">${output} = delete: s3://erasure/big_file</msg>
<status status="PASS" starttime="20231129 08:38:51.364" endtime="20231129 08:38:51.802"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:51.803" level="INFO">delete: s3://erasure/big_file</msg>
<status status="PASS" starttime="20231129 08:38:51.803" endtime="20231129 08:38:51.803"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:51.804" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:51.803" endtime="20231129 08:38:51.804"/>
</kw>
<status status="PASS" starttime="20231129 08:38:51.364" endtime="20231129 08:38:51.804"/>
</kw>
<msg timestamp="20231129 08:38:51.804" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:51.363" endtime="20231129 08:38:51.804"/>
</kw>
<msg timestamp="20231129 08:38:51.804" level="INFO">${output} = delete: s3://erasure/big_file</msg>
<status status="PASS" starttime="20231129 08:38:51.363" endtime="20231129 08:38:51.804"/>
</kw>
<status status="PASS" starttime="20231129 08:38:51.362" endtime="20231129 08:38:51.804"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -rf /tmp/big_file</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:51.807" level="INFO">Running command 'rm -rf /tmp/big_file 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:51.810" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:51.810" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:38:51.806" endtime="20231129 08:38:51.810"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:51.811" level="INFO"/>
<status status="PASS" starttime="20231129 08:38:51.810" endtime="20231129 08:38:51.811"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:51.811" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:51.811" endtime="20231129 08:38:51.811"/>
</kw>
<status status="PASS" starttime="20231129 08:38:51.805" endtime="20231129 08:38:51.811"/>
</kw>
<msg timestamp="20231129 08:38:51.811" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:51.805" endtime="20231129 08:38:51.811"/>
</kw>
<status status="PASS" starttime="20231129 08:38:51.805" endtime="20231129 08:38:51.812"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:38:49.905" endtime="20231129 08:38:51.812"/>
</test>
<test id="s1-s1-s14-t19" name="Create key twice with different content and expect different ETags" line="249">
<kw name="Execute" library="os">
<arg>head -c 1MiB &lt;/dev/urandom &gt; /tmp/file1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:51.815" level="INFO">Running command 'head -c 1MiB &lt;/dev/urandom &gt; /tmp/file1'.</msg>
<msg timestamp="20231129 08:38:51.820" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:51.820" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:38:51.814" endtime="20231129 08:38:51.820"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:51.821" level="INFO"/>
<status status="PASS" starttime="20231129 08:38:51.820" endtime="20231129 08:38:51.821"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:51.821" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:51.821" endtime="20231129 08:38:51.821"/>
</kw>
<status status="PASS" starttime="20231129 08:38:51.813" endtime="20231129 08:38:51.822"/>
</kw>
<msg timestamp="20231129 08:38:51.822" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:51.813" endtime="20231129 08:38:51.822"/>
</kw>
<status status="PASS" starttime="20231129 08:38:51.813" endtime="20231129 08:38:51.822"/>
</kw>
<kw name="Execute" library="os">
<arg>head -c 1MiB &lt;/dev/urandom &gt; /tmp/file2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:51.825" level="INFO">Running command 'head -c 1MiB &lt;/dev/urandom &gt; /tmp/file2'.</msg>
<msg timestamp="20231129 08:38:51.830" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:51.830" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:38:51.824" endtime="20231129 08:38:51.830"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:51.831" level="INFO"/>
<status status="PASS" starttime="20231129 08:38:51.831" endtime="20231129 08:38:51.831"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:51.831" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:51.831" endtime="20231129 08:38:51.832"/>
</kw>
<status status="PASS" starttime="20231129 08:38:51.823" endtime="20231129 08:38:51.832"/>
</kw>
<msg timestamp="20231129 08:38:51.832" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:51.822" endtime="20231129 08:38:51.832"/>
</kw>
<status status="PASS" starttime="20231129 08:38:51.822" endtime="20231129 08:38:51.832"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<var>${file1UploadResult}</var>
<arg>cp /tmp/file1 s3://${BUCKET}/test_key_to_check_etag_differences</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:51.835" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp /tmp/file1 s3://erasure/test_key_to_check_etag_differences 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:52.390" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:52.391" level="INFO">${output} = 2023-11-29 08:38:52,163 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10
2023-11-29 08:38:52,163 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20231129 08:38:51.834" endtime="20231129 08:38:52.391"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:52.392" level="INFO">2023-11-29 08:38:52,163 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10
2023-11-29 08:38:52,163 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', '/tmp/file1', 's3://erasure/test_key_to_check_etag_differences']
2023-11-29 08:38:52,164 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7f101dcc89d8&gt;
2023-11-29 08:38:52,164 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7f101eabc730&gt;
2023-11-29 08:38:52,164 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7f101eaeaae8&gt;
2023-11-29 08:38:52,164 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2023-11-29 08:38:52,168 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7f101ddf5400&gt;
2023-11-29 08:38:52,168 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7f101dcd6048&gt;
2023-11-29 08:38:52,169 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10259d6a90&gt;
2023-11-29 08:38:52,169 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7f101dcd6048&gt;
2023-11-29 08:38:52,170 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10259d6a90&gt;
2023-11-29 08:38:52,170 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10259d6a90&gt;
2023-11-29 08:38:52,171 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f101eaba6a0&gt;
2023-11-29 08:38:52,171 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10259d6a90&gt;
2023-11-29 08:38:52,171 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f101eaba6a0&gt;
2023-11-29 08:38:52,171 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10259d6a90&gt;
2023-11-29 08:38:52,171 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10259d6a90&gt;
2023-11-29 08:38:52,171 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10259d6a90&gt;
2023-11-29 08:38:52,171 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f101eaba6a0&gt;
2023-11-29 08:38:52,171 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10259d6a90&gt;
2023-11-29 08:38:52,172 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10259d6a90&gt;
2023-11-29 08:38:52,172 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10259d6a90&gt;
2023-11-29 08:38:52,172 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10259d6a90&gt;
2023-11-29 08:38:52,172 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10259d6a90&gt;
2023-11-29 08:38:52,172 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10259d6a90&gt;
2023-11-29 08:38:52,172 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10259d6a90&gt;
2023-11-29 08:38:52,172 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10259d6a90&gt;
2023-11-29 08:38:52,172 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10259d6a90&gt;
2023-11-29 08:38:52,173 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10259d6a90&gt;
2023-11-29 08:38:52,173 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10259d6a90&gt;
2023-11-29 08:38:52,173 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10259d6a90&gt;
2023-11-29 08:38:52,173 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10259d6a90&gt;
2023-11-29 08:38:52,173 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10259d6a90&gt;
2023-11-29 08:38:52,173 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10259d6a90&gt;
2023-11-29 08:38:52,173 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10259d6a90&gt;
2023-11-29 08:38:52,173 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10259d6a90&gt;
2023-11-29 08:38:52,173 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10259d6a90&gt;
2023-11-29 08:38:52,174 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f101eaba6a0&gt;
2023-11-29 08:38:52,174 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10259d6a90&gt;
2023-11-29 08:38:52,174 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10259d6a90&gt;
2023-11-29 08:38:52,174 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10259d6a90&gt;
2023-11-29 08:38:52,174 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f101eaba6a0&gt;
2023-11-29 08:38:52,174 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10259d6a90&gt;
2023-11-29 08:38:52,174 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f101eaba6a0&gt;
2023-11-29 08:38:52,174 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10259d6a90&gt;
2023-11-29 08:38:52,174 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10259d6a90&gt;
2023-11-29 08:38:52,174 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10259d6a90&gt;
2023-11-29 08:38:52,175 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10259d6a90&gt;
2023-11-29 08:38:52,175 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f10259d6a90&gt;
2023-11-29 08:38:52,175 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2023-11-29 08:38:52,175 - MainThread - botocore.credentials - INFO - Found credentials in environment variables.
2023-11-29 08:38:52,176 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/endpoints.json
2023-11-29 08:38:52,188 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/sdk-default-configuration.json
2023-11-29 08:38:52,189 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f101f782378&gt;
2023-11-29 08:38:52,189 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/s3/2006-03-01/service-2.json
2023-11-29 08:38:52,198 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f101fa572f0&gt;
2023-11-29 08:38:52,198 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f101fa570d0&gt;
2023-11-29 08:38:52,199 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-11-29 08:38:52,201 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2023-11-29 08:38:52,202 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/_retry.json
2023-11-29 08:38:52,202 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2023-11-29 08:38:52,203 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-11-29 08:38:52,203 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f101f782378&gt;
2023-11-29 08:38:52,204 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f101fa572f0&gt;
2023-11-29 08:38:52,204 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f101fa570d0&gt;
2023-11-29 08:38:52,204 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-11-29 08:38:52,207 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2023-11-29 08:38:52,207 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2023-11-29 08:38:52,208 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-11-29 08:38:52,208 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f101f782378&gt;
2023-11-29 08:38:52,209 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f101fa572f0&gt;
2023-11-29 08:38:52,209 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f101fa570d0&gt;
2023-11-29 08:38:52,209 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-11-29 08:38:52,212 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2023-11-29 08:38:52,212 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2023-11-29 08:38:52,213 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-11-29 08:38:52,213 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2023-11-29 08:38:52,214 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2023-11-29 08:38:52,215 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f101d575e10&gt;}) about to wait for the following futures []
2023-11-29 08:38:52,215 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f101d575e10&gt;}) done waiting for dependent futures
2023-11-29 08:38:52,215 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f101d575e10&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f101d633c50&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7f101d5a5dd8&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7f101d5a5e48&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7f101d5a5fd0&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f101d575e10&gt;}
2023-11-29 08:38:52,216 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task PutObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f101d5a5fd0&gt; for transfer request: 0.
2023-11-29 08:38:52,216 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2023-11-29 08:38:52,216 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - PutObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}) about to wait for the following futures []
2023-11-29 08:38:52,216 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-11-29 08:38:52,216 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - PutObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}) done waiting for dependent futures
2023-11-29 08:38:52,217 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task PutObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f101d633c50&gt;, 'fileobj': &lt;s3transfer.utils.ReadFileChunk object at 0x7f101d5853c8&gt;, 'bucket': 'erasure', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}
2023-11-29 08:38:52,217 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function validate_ascii_metadata at 0x7f101f79b6a8&gt;
2023-11-29 08:38:52,217 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function sse_md5 at 0x7f101f798ae8&gt;
2023-11-29 08:38:52,217 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function convert_body_to_file_like_object at 0x7f101f79bf28&gt;
2023-11-29 08:38:52,217 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function validate_bucket_name at 0x7f101f798a60&gt;
2023-11-29 08:38:52,217 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7f101d6041d0&gt;&gt;
2023-11-29 08:38:52,217 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7f101d604588&gt;&gt;
2023-11-29 08:38:52,218 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function generate_idempotent_uuid at 0x7f101f7988c8&gt;
2023-11-29 08:38:52,218 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function conditionally_calculate_md5 at 0x7f102013e0d0&gt;
2023-11-29 08:38:52,220 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_expect_header at 0x7f101f798d90&gt;
2023-11-29 08:38:52,220 - ThreadPoolExecutor-0_0 - botocore.handlers - DEBUG - Adding expect 100 continue header to request.
2023-11-29 08:38:52,220 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7f101d6041d0&gt;&gt;
2023-11-29 08:38:52,220 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_recursion_detection_header at 0x7f101f798598&gt;
2023-11-29 08:38:52,220 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7f101f71f0d0&gt;
2023-11-29 08:38:52,220 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=PutObject) with params: {'url_path': '/erasure/test_key_to_check_etag_differences', 'query_string': {}, 'method': 'PUT', 'headers': {'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10', 'Content-MD5': 'KYmkAteRqFz96m7mI2ZNtw==', 'Expect': '100-continue'}, 'body': &lt;s3transfer.utils.ReadFileChunk object at 0x7f101d5853c8&gt;, 'url': 'http://s3g:9878/erasure/test_key_to_check_etag_differences', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f101d633e48&gt;, 'has_streaming_input': True, 'auth_type': None, 'signing': {'bucket': 'erasure'}}}
2023-11-29 08:38:52,221 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function signal_not_transferring at 0x7f1021cc0158&gt;
2023-11-29 08:38:52,221 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f101d633e10&gt;&gt;
2023-11-29 08:38:52,221 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.PutObject: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7f101d6045f8&gt;&gt;
2023-11-29 08:38:52,221 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.PutObject: calling handler &lt;function set_operation_specific_signer at 0x7f101f7987b8&gt;
2023-11-29 08:38:52,221 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.PutObject: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7f101d6045f8&gt;&gt;
2023-11-29 08:38:52,221 - ThreadPoolExecutor-0_0 - botocore.utils - DEBUG - Using S3 path style addressing.
2023-11-29 08:38:52,222 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2023-11-29 08:38:52,222 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
PUT
/erasure/test_key_to_check_etag_differences

content-md5:KYmkAteRqFz96m7mI2ZNtw==
host:s3g:9878
x-amz-content-sha256:fb691ff0c1a1a270aebd262a55f88a425177a4698cd7bddad310d34d51daafca
x-amz-date:20231129T083852Z

content-md5;host;x-amz-content-sha256;x-amz-date
fb691ff0c1a1a270aebd262a55f88a425177a4698cd7bddad310d34d51daafca
2023-11-29 08:38:52,222 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20231129T083852Z
20231129/us-west-1/s3/aws4_request
2ef216c267f23192f720222e891646d7dd1dfd6d2e4fea0d6bbbe37ee4343fa1
2023-11-29 08:38:52,222 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
380d51b6a6a5b3496e52e1b931859fba2f3436540edb3ff2193d7a4beec85407
2023-11-29 08:38:52,222 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function signal_transferring at 0x7f1021cc01e0&gt;
2023-11-29 08:38:52,223 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function add_retry_headers at 0x7f101f71f730&gt;
2023-11-29 08:38:52,223 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=PUT, url=http://s3g:9878/erasure/test_key_to_check_etag_differences, headers={'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10', 'Content-MD5': b'KYmkAteRqFz96m7mI2ZNtw==', 'Expect': b'100-continue', 'X-Amz-Date': b'20231129T083852Z', 'X-Amz-Content-SHA256': b'fb691ff0c1a1a270aebd262a55f88a425177a4698cd7bddad310d34d51daafca', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/scm@EXAMPLE.COM/20231129/us-west-1/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date, Signature=380d51b6a6a5b3496e52e1b931859fba2f3436540edb3ff2193d7a4beec85407', 'amz-sdk-invocation-id': b'62b160da-9195-4b4d-8990-300d447e9921', 'amz-sdk-request': b'attempt=1', 'Content-Length': '1048576'}&gt;
2023-11-29 08:38:52,224 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2023-11-29 08:38:52,225 - ThreadPoolExecutor-0_0 - botocore.awsrequest - DEBUG - Waiting for 100 Continue response.
2023-11-29 08:38:52,226 - ThreadPoolExecutor-0_0 - botocore.awsrequest - DEBUG - 100 Continue response seen, now sending request body.
Completed 256.0 KiB/1.0 MiB (8.8 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/1.0 MiB (17.0 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/1.0 MiB (24.8 MiB/s) with 1 file(s) remaining
Completed 1.0 MiB/1.0 MiB (32.1 MiB/s) with 1 file(s) remaining  
2023-11-29 08:38:52,318 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "PUT /erasure/test_key_to_check_etag_differences HTTP/1.1" 200 0
2023-11-29 08:38:52,319 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Wed, 29 Nov 2023 08:38:52 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Wed, 29 Nov 2023 08:38:52 GMT', 'Pragma': 'no-cache', 'Content-Type': 'text/plain;charset=utf-8', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': '"2989a402d791a85cfdea6ee623664db7"', 'Server': 'Ozone', 'x-amz-id-2': 'MuB6cqMfDGUA', 'x-amz-request-id': '6fd40fb8-2990-42e8-b22f-20e24395424c', 'Content-Length': '0'}
2023-11-29 08:38:52,319 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
b''
2023-11-29 08:38:52,320 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f101d604208&gt;
2023-11-29 08:38:52,320 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2023-11-29 08:38:52,320 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7f101d6041d0&gt;&gt;
2023-11-29 08:38:52,320 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.PutObject: calling handler &lt;function enhance_error_msg at 0x7f101dcc8598&gt;
2023-11-29 08:38:52,320 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
upload: ../../tmp/file1 to s3://erasure/test_key_to_check_etag_differences
2023-11-29 08:38:52,325 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20231129 08:38:52.391" endtime="20231129 08:38:52.392"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:52.393" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:52.393" endtime="20231129 08:38:52.393"/>
</kw>
<status status="PASS" starttime="20231129 08:38:51.833" endtime="20231129 08:38:52.393"/>
</kw>
<msg timestamp="20231129 08:38:52.394" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:51.833" endtime="20231129 08:38:52.394"/>
</kw>
<msg timestamp="20231129 08:38:52.394" level="INFO">${output} = 2023-11-29 08:38:52,163 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10
2023-11-29 08:38:52,163 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20231129 08:38:51.833" endtime="20231129 08:38:52.395"/>
</kw>
<msg timestamp="20231129 08:38:52.395" level="INFO">${file1UploadResult} = 2023-11-29 08:38:52,163 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10
2023-11-29 08:38:52,163 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20231129 08:38:51.832" endtime="20231129 08:38:52.395"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<var>${match}</var>
<var>${etag1}</var>
<arg>${file1UploadResult}</arg>
<arg>PUT /${BUCKET}/test_key_to_check_etag_differences\ .*?Response headers.*?ETag':\ '"(.*?)"'</arg>
<arg>flags=DOTALL</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20231129 08:38:52.397" level="INFO">${match} = PUT /erasure/test_key_to_check_etag_differences HTTP/1.1" 200 0
2023-11-29 08:38:52,319 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Wed, 29 Nov 2023 08:38:52 GMT'...</msg>
<msg timestamp="20231129 08:38:52.397" level="INFO">${etag1} = 2989a402d791a85cfdea6ee623664db7</msg>
<status status="PASS" starttime="20231129 08:38:52.395" endtime="20231129 08:38:52.397"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<var>${file2UploadResult}</var>
<arg>cp /tmp/file2 s3://${BUCKET}/test_key_to_check_etag_differences</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:52.401" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp /tmp/file2 s3://erasure/test_key_to_check_etag_differences 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:52.981" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:52.981" level="INFO">${output} = 2023-11-29 08:38:52,743 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10
2023-11-29 08:38:52,744 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20231129 08:38:52.399" endtime="20231129 08:38:52.981"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:52.982" level="INFO">2023-11-29 08:38:52,743 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10
2023-11-29 08:38:52,744 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', '/tmp/file2', 's3://erasure/test_key_to_check_etag_differences']
2023-11-29 08:38:52,744 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7fb30e1839d8&gt;
2023-11-29 08:38:52,744 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7fb30ef77730&gt;
2023-11-29 08:38:52,744 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7fb30efa5ae8&gt;
2023-11-29 08:38:52,745 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2023-11-29 08:38:52,749 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7fb30e2b0400&gt;
2023-11-29 08:38:52,749 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7fb30e191048&gt;
2023-11-29 08:38:52,749 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb315e91a90&gt;
2023-11-29 08:38:52,750 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7fb30e191048&gt;
2023-11-29 08:38:52,751 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb315e91a90&gt;
2023-11-29 08:38:52,751 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb315e91a90&gt;
2023-11-29 08:38:52,751 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fb30ef756a0&gt;
2023-11-29 08:38:52,751 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb315e91a90&gt;
2023-11-29 08:38:52,752 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fb30ef756a0&gt;
2023-11-29 08:38:52,752 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb315e91a90&gt;
2023-11-29 08:38:52,752 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb315e91a90&gt;
2023-11-29 08:38:52,752 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb315e91a90&gt;
2023-11-29 08:38:52,752 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fb30ef756a0&gt;
2023-11-29 08:38:52,752 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb315e91a90&gt;
2023-11-29 08:38:52,752 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb315e91a90&gt;
2023-11-29 08:38:52,752 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb315e91a90&gt;
2023-11-29 08:38:52,753 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb315e91a90&gt;
2023-11-29 08:38:52,753 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb315e91a90&gt;
2023-11-29 08:38:52,753 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb315e91a90&gt;
2023-11-29 08:38:52,753 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb315e91a90&gt;
2023-11-29 08:38:52,753 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb315e91a90&gt;
2023-11-29 08:38:52,753 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb315e91a90&gt;
2023-11-29 08:38:52,753 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb315e91a90&gt;
2023-11-29 08:38:52,753 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb315e91a90&gt;
2023-11-29 08:38:52,754 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb315e91a90&gt;
2023-11-29 08:38:52,754 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb315e91a90&gt;
2023-11-29 08:38:52,754 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb315e91a90&gt;
2023-11-29 08:38:52,754 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb315e91a90&gt;
2023-11-29 08:38:52,754 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb315e91a90&gt;
2023-11-29 08:38:52,754 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb315e91a90&gt;
2023-11-29 08:38:52,754 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb315e91a90&gt;
2023-11-29 08:38:52,754 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fb30ef756a0&gt;
2023-11-29 08:38:52,754 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb315e91a90&gt;
2023-11-29 08:38:52,755 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb315e91a90&gt;
2023-11-29 08:38:52,755 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb315e91a90&gt;
2023-11-29 08:38:52,755 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fb30ef756a0&gt;
2023-11-29 08:38:52,755 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb315e91a90&gt;
2023-11-29 08:38:52,755 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fb30ef756a0&gt;
2023-11-29 08:38:52,755 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb315e91a90&gt;
2023-11-29 08:38:52,755 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb315e91a90&gt;
2023-11-29 08:38:52,755 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb315e91a90&gt;
2023-11-29 08:38:52,756 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb315e91a90&gt;
2023-11-29 08:38:52,756 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fb315e91a90&gt;
2023-11-29 08:38:52,756 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2023-11-29 08:38:52,756 - MainThread - botocore.credentials - INFO - Found credentials in environment variables.
2023-11-29 08:38:52,757 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/endpoints.json
2023-11-29 08:38:52,769 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/sdk-default-configuration.json
2023-11-29 08:38:52,770 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7fb30fc3d378&gt;
2023-11-29 08:38:52,770 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/s3/2006-03-01/service-2.json
2023-11-29 08:38:52,780 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7fb30ff122f0&gt;
2023-11-29 08:38:52,780 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7fb30ff120d0&gt;
2023-11-29 08:38:52,780 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-11-29 08:38:52,783 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2023-11-29 08:38:52,783 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/_retry.json
2023-11-29 08:38:52,784 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2023-11-29 08:38:52,784 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-11-29 08:38:52,785 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7fb30fc3d378&gt;
2023-11-29 08:38:52,785 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7fb30ff122f0&gt;
2023-11-29 08:38:52,786 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7fb30ff120d0&gt;
2023-11-29 08:38:52,786 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-11-29 08:38:52,788 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2023-11-29 08:38:52,789 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2023-11-29 08:38:52,789 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-11-29 08:38:52,789 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7fb30fc3d378&gt;
2023-11-29 08:38:52,791 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7fb30ff122f0&gt;
2023-11-29 08:38:52,791 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7fb30ff120d0&gt;
2023-11-29 08:38:52,791 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-11-29 08:38:52,793 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2023-11-29 08:38:52,794 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2023-11-29 08:38:52,795 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-11-29 08:38:52,795 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2023-11-29 08:38:52,796 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2023-11-29 08:38:52,796 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fb30da30e10&gt;}) about to wait for the following futures []
2023-11-29 08:38:52,797 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fb30da30e10&gt;}) done waiting for dependent futures
2023-11-29 08:38:52,797 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fb30da30e10&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7fb30daeec50&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7fb30da60dd8&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7fb30da60e48&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7fb30da60fd0&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fb30da30e10&gt;}
2023-11-29 08:38:52,798 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task PutObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fb30da60fd0&gt; for transfer request: 0.
2023-11-29 08:38:52,798 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2023-11-29 08:38:52,798 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - PutObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}) about to wait for the following futures []
2023-11-29 08:38:52,798 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - PutObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}) done waiting for dependent futures
2023-11-29 08:38:52,798 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task PutObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7fb30daeec50&gt;, 'fileobj': &lt;s3transfer.utils.ReadFileChunk object at 0x7fb30da402e8&gt;, 'bucket': 'erasure', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}
2023-11-29 08:38:52,799 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function validate_ascii_metadata at 0x7fb30fc566a8&gt;
2023-11-29 08:38:52,799 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function sse_md5 at 0x7fb30fc53ae8&gt;
2023-11-29 08:38:52,799 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function convert_body_to_file_like_object at 0x7fb30fc56f28&gt;
2023-11-29 08:38:52,799 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function validate_bucket_name at 0x7fb30fc53a60&gt;
2023-11-29 08:38:52,799 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7fb30dac01d0&gt;&gt;
2023-11-29 08:38:52,799 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7fb30dac0588&gt;&gt;
2023-11-29 08:38:52,799 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function generate_idempotent_uuid at 0x7fb30fc538c8&gt;
2023-11-29 08:38:52,799 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function conditionally_calculate_md5 at 0x7fb3105f90d0&gt;
2023-11-29 08:38:52,800 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-11-29 08:38:52,802 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_expect_header at 0x7fb30fc53d90&gt;
2023-11-29 08:38:52,802 - ThreadPoolExecutor-0_0 - botocore.handlers - DEBUG - Adding expect 100 continue header to request.
2023-11-29 08:38:52,802 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7fb30dac01d0&gt;&gt;
2023-11-29 08:38:52,802 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_recursion_detection_header at 0x7fb30fc53598&gt;
2023-11-29 08:38:52,802 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7fb30fbda0d0&gt;
2023-11-29 08:38:52,802 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=PutObject) with params: {'url_path': '/erasure/test_key_to_check_etag_differences', 'query_string': {}, 'method': 'PUT', 'headers': {'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10', 'Content-MD5': 'ak80ajxzQS2RMN8032i7xA==', 'Expect': '100-continue'}, 'body': &lt;s3transfer.utils.ReadFileChunk object at 0x7fb30da402e8&gt;, 'url': 'http://s3g:9878/erasure/test_key_to_check_etag_differences', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7fb30daeee48&gt;, 'has_streaming_input': True, 'auth_type': None, 'signing': {'bucket': 'erasure'}}}
2023-11-29 08:38:52,802 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function signal_not_transferring at 0x7fb31217b158&gt;
2023-11-29 08:38:52,802 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7fb30daeee10&gt;&gt;
2023-11-29 08:38:52,802 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.PutObject: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7fb30dac05f8&gt;&gt;
2023-11-29 08:38:52,803 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.PutObject: calling handler &lt;function set_operation_specific_signer at 0x7fb30fc537b8&gt;
2023-11-29 08:38:52,803 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.PutObject: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7fb30dac05f8&gt;&gt;
2023-11-29 08:38:52,803 - ThreadPoolExecutor-0_0 - botocore.utils - DEBUG - Using S3 path style addressing.
2023-11-29 08:38:52,804 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2023-11-29 08:38:52,804 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
PUT
/erasure/test_key_to_check_etag_differences

content-md5:ak80ajxzQS2RMN8032i7xA==
host:s3g:9878
x-amz-content-sha256:c12e5f17e2fcb77f9f11d32fef909b6703c5825f2ae6d70e1c444eea6088379c
x-amz-date:20231129T083852Z

content-md5;host;x-amz-content-sha256;x-amz-date
c12e5f17e2fcb77f9f11d32fef909b6703c5825f2ae6d70e1c444eea6088379c
2023-11-29 08:38:52,804 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20231129T083852Z
20231129/us-west-1/s3/aws4_request
418f043bcf84a8c18f6dfaf1e9a39c908e1199f18f68183f1b9df783cac3c04f
2023-11-29 08:38:52,804 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
b1f4cc012ad0a812da55fbe73b2b4b5fa864b088fe858e1bbd5763c2d7175e3d
2023-11-29 08:38:52,804 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function signal_transferring at 0x7fb31217b1e0&gt;
2023-11-29 08:38:52,804 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function add_retry_headers at 0x7fb30fbda730&gt;
2023-11-29 08:38:52,804 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=PUT, url=http://s3g:9878/erasure/test_key_to_check_etag_differences, headers={'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10', 'Content-MD5': b'ak80ajxzQS2RMN8032i7xA==', 'Expect': b'100-continue', 'X-Amz-Date': b'20231129T083852Z', 'X-Amz-Content-SHA256': b'c12e5f17e2fcb77f9f11d32fef909b6703c5825f2ae6d70e1c444eea6088379c', 'Authorization': b'AWS4-HMAC-SHA256 Credential=testuser/scm@EXAMPLE.COM/20231129/us-west-1/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date, Signature=b1f4cc012ad0a812da55fbe73b2b4b5fa864b088fe858e1bbd5763c2d7175e3d', 'amz-sdk-invocation-id': b'573097b5-4597-43d1-9470-a2bca01d1fce', 'amz-sdk-request': b'attempt=1', 'Content-Length': '1048576'}&gt;
2023-11-29 08:38:52,805 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2023-11-29 08:38:52,806 - ThreadPoolExecutor-0_0 - botocore.awsrequest - DEBUG - Waiting for 100 Continue response.
2023-11-29 08:38:52,807 - ThreadPoolExecutor-0_0 - botocore.awsrequest - DEBUG - 100 Continue response seen, now sending request body.
Completed 256.0 KiB/1.0 MiB (7.8 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/1.0 MiB (15.0 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/1.0 MiB (21.9 MiB/s) with 1 file(s) remaining
Completed 1.0 MiB/1.0 MiB (28.5 MiB/s) with 1 file(s) remaining  
2023-11-29 08:38:52,931 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "PUT /erasure/test_key_to_check_etag_differences HTTP/1.1" 200 0
2023-11-29 08:38:52,931 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Wed, 29 Nov 2023 08:38:52 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Wed, 29 Nov 2023 08:38:52 GMT', 'Pragma': 'no-cache', 'Content-Type': 'text/plain;charset=utf-8', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': '"6a4f346a3c73412d9130df34df68bbc4"', 'Server': 'Ozone', 'x-amz-id-2': 'kWrPQaVq32KvEhC', 'x-amz-request-id': '7f8e8778-0b56-409a-bb3c-8c77fc1e5c8c', 'Content-Length': '0'}
2023-11-29 08:38:52,931 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
b''
2023-11-29 08:38:52,932 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7fb30dac0208&gt;
2023-11-29 08:38:52,932 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2023-11-29 08:38:52,933 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7fb30dac01d0&gt;&gt;
2023-11-29 08:38:52,933 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.PutObject: calling handler &lt;function enhance_error_msg at 0x7fb30e183598&gt;
2023-11-29 08:38:52,933 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
upload: ../../tmp/file2 to s3://erasure/test_key_to_check_etag_differences
2023-11-29 08:38:52,934 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20231129 08:38:52.982" endtime="20231129 08:38:52.983"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:52.983" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:52.983" endtime="20231129 08:38:52.983"/>
</kw>
<status status="PASS" starttime="20231129 08:38:52.398" endtime="20231129 08:38:52.983"/>
</kw>
<msg timestamp="20231129 08:38:52.984" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:52.398" endtime="20231129 08:38:52.984"/>
</kw>
<msg timestamp="20231129 08:38:52.984" level="INFO">${output} = 2023-11-29 08:38:52,743 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10
2023-11-29 08:38:52,744 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20231129 08:38:52.397" endtime="20231129 08:38:52.984"/>
</kw>
<msg timestamp="20231129 08:38:52.984" level="INFO">${file2UploadResult} = 2023-11-29 08:38:52,743 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10
2023-11-29 08:38:52,744 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20231129 08:38:52.397" endtime="20231129 08:38:52.984"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<var>${match}</var>
<var>${etag2}</var>
<arg>${file2UploadResult}</arg>
<arg>PUT /${BUCKET}/test_key_to_check_etag_differences\ .*?Response headers.*?ETag':\ '"(.*?)"'</arg>
<arg>flags=DOTALL</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20231129 08:38:52.985" level="INFO">${match} = PUT /erasure/test_key_to_check_etag_differences HTTP/1.1" 200 0
2023-11-29 08:38:52,931 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Wed, 29 Nov 2023 08:38:52 GMT'...</msg>
<msg timestamp="20231129 08:38:52.985" level="INFO">${etag2} = 6a4f346a3c73412d9130df34df68bbc4</msg>
<status status="PASS" starttime="20231129 08:38:52.985" endtime="20231129 08:38:52.985"/>
</kw>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<arg>${etag1}</arg>
<arg>${etag2}</arg>
<doc>Fails if objects are equal after converting them to strings.</doc>
<status status="PASS" starttime="20231129 08:38:52.985" endtime="20231129 08:38:52.986"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>rm s3://${BUCKET}/test_key_to_check_etag_differences</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:52.989" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 rm s3://erasure/test_key_to_check_etag_differences 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:53.432" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:53.432" level="INFO">${output} = delete: s3://erasure/test_key_to_check_etag_differences</msg>
<status status="PASS" starttime="20231129 08:38:52.987" endtime="20231129 08:38:53.432"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:53.433" level="INFO">delete: s3://erasure/test_key_to_check_etag_differences</msg>
<status status="PASS" starttime="20231129 08:38:53.432" endtime="20231129 08:38:53.433"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:53.434" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:53.433" endtime="20231129 08:38:53.434"/>
</kw>
<status status="PASS" starttime="20231129 08:38:52.987" endtime="20231129 08:38:53.434"/>
</kw>
<msg timestamp="20231129 08:38:53.434" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:52.987" endtime="20231129 08:38:53.434"/>
</kw>
<msg timestamp="20231129 08:38:53.434" level="INFO">${output} = delete: s3://erasure/test_key_to_check_etag_differences</msg>
<status status="PASS" starttime="20231129 08:38:52.986" endtime="20231129 08:38:53.434"/>
</kw>
<status status="PASS" starttime="20231129 08:38:52.986" endtime="20231129 08:38:53.434"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -rf /tmp/file1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:53.437" level="INFO">Running command 'rm -rf /tmp/file1 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:53.439" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:53.439" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:38:53.436" endtime="20231129 08:38:53.439"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:53.440" level="INFO"/>
<status status="PASS" starttime="20231129 08:38:53.439" endtime="20231129 08:38:53.440"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:53.440" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:53.440" endtime="20231129 08:38:53.440"/>
</kw>
<status status="PASS" starttime="20231129 08:38:53.435" endtime="20231129 08:38:53.440"/>
</kw>
<msg timestamp="20231129 08:38:53.440" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:53.435" endtime="20231129 08:38:53.441"/>
</kw>
<status status="PASS" starttime="20231129 08:38:53.435" endtime="20231129 08:38:53.441"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -rf /tmp/file2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:53.443" level="INFO">Running command 'rm -rf /tmp/file2 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:53.445" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:53.445" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:38:53.442" endtime="20231129 08:38:53.445"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:53.445" level="INFO"/>
<status status="PASS" starttime="20231129 08:38:53.445" endtime="20231129 08:38:53.445"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:53.446" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:53.446" endtime="20231129 08:38:53.446"/>
</kw>
<status status="PASS" starttime="20231129 08:38:53.441" endtime="20231129 08:38:53.446"/>
</kw>
<msg timestamp="20231129 08:38:53.446" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:53.441" endtime="20231129 08:38:53.446"/>
</kw>
<status status="PASS" starttime="20231129 08:38:53.441" endtime="20231129 08:38:53.446"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:38:51.812" endtime="20231129 08:38:53.447"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20231129 08:38:27.526" endtime="20231129 08:38:53.448"/>
</suite>
<suite id="s1-s1-s15" name="S3 Getsecret" source="/opt/hadoop/smoketest/s3/s3_getsecret.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:53.458" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:53.460" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:53.460" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231129 08:38:53.456" endtime="20231129 08:38:53.460"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:53.460" level="INFO">scm</msg>
<status status="PASS" starttime="20231129 08:38:53.460" endtime="20231129 08:38:53.460"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:53.461" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:53.460" endtime="20231129 08:38:53.461"/>
</kw>
<status status="PASS" starttime="20231129 08:38:53.456" endtime="20231129 08:38:53.461"/>
</kw>
<msg timestamp="20231129 08:38:53.461" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:53.456" endtime="20231129 08:38:53.461"/>
</kw>
<msg timestamp="20231129 08:38:53.461" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231129 08:38:53.456" endtime="20231129 08:38:53.461"/>
</kw>
<msg timestamp="20231129 08:38:53.461" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231129 08:38:53.455" endtime="20231129 08:38:53.461"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231129 08:38:53.462" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231129 08:38:53.462" endtime="20231129 08:38:53.462"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:53.464" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:53.512" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:53.512" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:38:53.463" endtime="20231129 08:38:53.512"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:53.512" level="INFO"/>
<status status="PASS" starttime="20231129 08:38:53.512" endtime="20231129 08:38:53.513"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:53.513" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:53.513" endtime="20231129 08:38:53.513"/>
</kw>
<status status="PASS" starttime="20231129 08:38:53.463" endtime="20231129 08:38:53.513"/>
</kw>
<msg timestamp="20231129 08:38:53.513" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:53.463" endtime="20231129 08:38:53.513"/>
</kw>
<status status="PASS" starttime="20231129 08:38:53.462" endtime="20231129 08:38:53.513"/>
</kw>
<status status="PASS" starttime="20231129 08:38:53.462" endtime="20231129 08:38:53.513"/>
</kw>
<status status="PASS" starttime="20231129 08:38:53.455" endtime="20231129 08:38:53.514"/>
</kw>
<status status="PASS" starttime="20231129 08:38:53.454" endtime="20231129 08:38:53.514"/>
</kw>
<test id="s1-s1-s15-t1" name="Without OM service ID" line="32">
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>N/A</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20231129 08:38:53.514" endtime="20231129 08:38:53.515"/>
</kw>
<kw name="Revoke secrets">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:53.517" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:56.616" level="INFO">${rc} = 255</msg>
<msg timestamp="20231129 08:38:56.616" level="INFO">${output} = S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20231129 08:38:53.515" endtime="20231129 08:38:56.616"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:56.617" level="INFO">S3_SECRET_NOT_FOUND </msg>
<status status="PASS" starttime="20231129 08:38:56.616" endtime="20231129 08:38:56.617"/>
</kw>
<status status="PASS" starttime="20231129 08:38:53.515" endtime="20231129 08:38:56.617"/>
</kw>
<status status="PASS" starttime="20231129 08:38:53.515" endtime="20231129 08:38:56.617"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone s3 getsecret -u testuser2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:56.620" level="INFO">Running command 'ozone s3 getsecret -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:38:59.869" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:38:59.869" level="INFO">${output} = awsAccessKey=testuser2
awsSecret=038fd00ca565917f3f03458f2fcdc30756d4306abebfd6380c4f992eadd81ab3
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231129 08:38:56.618" endtime="20231129 08:38:59.869"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:38:59.870" level="INFO">awsAccessKey=testuser2
awsSecret=038fd00ca565917f3f03458f2fcdc30756d4306abebfd6380c4f992eadd81ab3
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231129 08:38:59.869" endtime="20231129 08:38:59.870"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:38:59.871" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:38:59.871" endtime="20231129 08:38:59.871"/>
</kw>
<status status="PASS" starttime="20231129 08:38:56.618" endtime="20231129 08:38:59.871"/>
</kw>
<msg timestamp="20231129 08:38:59.871" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:38:56.618" endtime="20231129 08:38:59.871"/>
</kw>
<msg timestamp="20231129 08:38:59.871" level="INFO">${output} = awsAccessKey=testuser2
awsSecret=038fd00ca565917f3f03458f2fcdc30756d4306abebfd6380c4f992eadd81ab3
isDeleted=false
transactionLogIndex=0</msg>
<status status="PASS" starttime="20231129 08:38:56.617" endtime="20231129 08:38:59.872"/>
</kw>
<kw name="Verify output">
<arg>${output}</arg>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>awsAccessKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:38:59.872" endtime="20231129 08:38:59.872"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>awsSecret</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:38:59.873" endtime="20231129 08:38:59.873"/>
</kw>
<status status="PASS" starttime="20231129 08:38:59.872" endtime="20231129 08:38:59.873"/>
</kw>
<kw name="Revoke secrets">
<kw name="Execute And Ignore Error" library="os">
<arg>ozone s3 revokesecret -y -u testuser2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:38:59.875" level="INFO">Running command 'ozone s3 revokesecret -y -u testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:39:03.004" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:39:03.004" level="INFO">${output} = S3 secret revoked.</msg>
<status status="PASS" starttime="20231129 08:38:59.874" endtime="20231129 08:39:03.004"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:39:03.005" level="INFO">S3 secret revoked.</msg>
<status status="PASS" starttime="20231129 08:39:03.004" endtime="20231129 08:39:03.005"/>
</kw>
<status status="PASS" starttime="20231129 08:38:59.873" endtime="20231129 08:39:03.005"/>
</kw>
<status status="PASS" starttime="20231129 08:38:59.873" endtime="20231129 08:39:03.005"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20231129 08:38:53.514" endtime="20231129 08:39:03.005"/>
</test>
<test id="s1-s1-s15-t2" name="With OM service ID" line="39">
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${OM_HA_PARAM}' == '${EMPTY}'</arg>
<arg>duplicate test in non-HA env.</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<msg timestamp="20231129 08:39:03.007" level="INFO">Execution passed with message:
duplicate test in non-HA env.</msg>
<status status="PASS" starttime="20231129 08:39:03.006" endtime="20231129 08:39:03.007"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>N/A</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="NOT RUN" starttime="20231129 08:39:03.007" endtime="20231129 08:39:03.007"/>
</kw>
<kw name="Revoke secrets">
<status status="NOT RUN" starttime="20231129 08:39:03.007" endtime="20231129 08:39:03.007"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone s3 getsecret -u testuser2 ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231129 08:39:03.008" endtime="20231129 08:39:03.008"/>
</kw>
<kw name="Verify output">
<arg>${output}</arg>
<status status="NOT RUN" starttime="20231129 08:39:03.008" endtime="20231129 08:39:03.008"/>
</kw>
<kw name="Revoke secrets">
<status status="NOT RUN" starttime="20231129 08:39:03.008" endtime="20231129 08:39:03.008"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20231129 08:39:03.006" endtime="20231129 08:39:03.008">duplicate test in non-HA env.</status>
</test>
<doc>Test ozone s3 getsecret command</doc>
<status status="PASS" starttime="20231129 08:38:53.450" endtime="20231129 08:39:03.009"/>
</suite>
<suite id="s1-s1-s16" name="Secretgenerate" source="/opt/hadoop/smoketest/s3/secretgenerate.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20231129 08:39:03.019" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:39:03.018" endtime="20231129 08:39:03.019"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231129 08:39:03.019" endtime="20231129 08:39:03.019"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231129 08:39:03.019" endtime="20231129 08:39:03.019"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:39:03.019" endtime="20231129 08:39:03.019"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:39:03.019" endtime="20231129 08:39:03.019"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:39:03.019" endtime="20231129 08:39:03.019"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:39:03.020" endtime="20231129 08:39:03.020"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:39:03.020" endtime="20231129 08:39:03.020"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20231129 08:39:03.020" endtime="20231129 08:39:03.020"/>
</kw>
<status status="PASS" starttime="20231129 08:39:03.018" endtime="20231129 08:39:03.020"/>
</kw>
<test id="s1-s1-s16-t1" name="S3 Gateway Generate Secret" line="32">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Get test user principal" library="commonlib">
<var>${principal}</var>
<arg>HTTP</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:39:03.024" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:39:03.026" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:39:03.026" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231129 08:39:03.023" endtime="20231129 08:39:03.026"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:39:03.027" level="INFO">scm</msg>
<status status="PASS" starttime="20231129 08:39:03.027" endtime="20231129 08:39:03.027"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:39:03.027" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:39:03.027" endtime="20231129 08:39:03.028"/>
</kw>
<status status="PASS" starttime="20231129 08:39:03.022" endtime="20231129 08:39:03.028"/>
</kw>
<msg timestamp="20231129 08:39:03.028" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:39:03.022" endtime="20231129 08:39:03.028"/>
</kw>
<msg timestamp="20231129 08:39:03.028" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231129 08:39:03.022" endtime="20231129 08:39:03.028"/>
</kw>
<msg timestamp="20231129 08:39:03.028" level="INFO">${principal} = HTTP/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231129 08:39:03.021" endtime="20231129 08:39:03.028"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/HTTP.keytab ${principal}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/HTTP.keytab ${principal}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:39:03.031" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/HTTP.keytab HTTP/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:39:03.067" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:39:03.067" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:39:03.030" endtime="20231129 08:39:03.067"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:39:03.068" level="INFO"/>
<status status="PASS" starttime="20231129 08:39:03.067" endtime="20231129 08:39:03.068"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:39:03.068" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:39:03.068" endtime="20231129 08:39:03.068"/>
</kw>
<status status="PASS" starttime="20231129 08:39:03.029" endtime="20231129 08:39:03.069"/>
</kw>
<msg timestamp="20231129 08:39:03.069" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:39:03.029" endtime="20231129 08:39:03.069"/>
</kw>
<status status="PASS" starttime="20231129 08:39:03.029" endtime="20231129 08:39:03.069"/>
</kw>
<status status="PASS" starttime="20231129 08:39:03.028" endtime="20231129 08:39:03.069"/>
</kw>
<status status="PASS" starttime="20231129 08:39:03.021" endtime="20231129 08:39:03.069"/>
</kw>
<status status="PASS" starttime="20231129 08:39:03.021" endtime="20231129 08:39:03.069"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl -X PUT --negotiate -u : -v ${ENDPOINT_URL}/secret</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:39:03.072" level="INFO">Running command 'curl -X PUT --negotiate -u : -v http://s3g:9878/secret 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:39:03.140" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:39:03.140" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20231129 08:39:03.070" endtime="20231129 08:39:03.140"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:39:03.141" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to s3g port 9878 (#0)
*   Trying 172.19.0.11...
* Connected to s3g (172.19.0.11) port 9878 (#0)
&gt; PUT /secret HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: s3g:9878
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Authentication required
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-XSS-Protection: 1; mode=block
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; HttpOnly
&lt; Content-Length: 0
&lt; 

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
* Connection #0 to host s3g left intact
* Issue another request to this URL: 'http://s3g:9878/secret'
* Found bundle for host s3g: 0x11a2f90
* Re-using existing connection! (#0) with host s3g
* Connected to s3g (172.19.0.11) port 9878 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; PUT /secret HTTP/1.1
&gt; Authorization: Negotiate YIICUQYJKoZIhvcSAQICAQBuggJAMIICPKADAgEFoQMCAQ6iBwMFACAAAACjggFQYYIBTDCCAUigAwIBBaENGwtFWEFNUExFLkNPTaIWMBSgAwIBA6ENMAsbBEhUVFAbA3MzZ6OCARgwggEUoAMCARKhAwIBAaKCAQYEggECPlwBYBQFJX01rNECGbtAK4wJqW5g/UrUECA/lrk4E+2MEorIj9IlnexDEvbPCbPI/ZtAI/Bj/eutpLWMloVGKhFnclDxbODlxhlb8fHS4tgHZsHSijUFFoVqNyafEDBVcW0GLuanaHIgqU90fQ9exakk6jKIjv3aMZH1cuT2QpJT30JxHMW3b3L8B8A6B7HthcVNRY8ZUy+DHjXGOaiTMDdq8fDFKHBorX3zicIT194ii22Vxw0ojnUp/Cm7gQsh5uYGEE5vdLcqC8rQVT9h3dr5FX9zFV7NCGLyAJvUWoidHIx0OVWmPQJLRvO5F1BxugpTEFxcL/RxuTDFUD1KnjXFpIHSMIHPoAMCARKigccEgcQLFQ0pfQVSB6XA43rVGku0oHcK/dg1bzbqKaCjDhn9PHkrYV6ZNSKr9uXQSjUM1IPMWj/byF8UDYd5ZD+jtlmYz6TkB493cqxPZkav3Z70UMkFGftfgKB6EvffsFYdd1xAGwNTkZxGZ6uOfffk2lfp0vKPr5YcCJDUQUI7oaS8I+EZXJmL62WcSUkHqj90WvkGNJe2pzaoNOwSsWZ9NJzYqLG3atja5GxU9piSEXndQjjLGOqHlqwAiK6swF4yPEftYJIT
&gt; User-Agent: curl/7.29.0
&gt; Host: s3g:9878
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Wed, 29 Nov 2023 08:39:03 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Wed, 29 Nov 2023 08:39:03 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/xml
&lt; X-Content-Type-Options: nosniff
&lt; X-XSS-Protection: 1; mode=block
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCZyxlV3siP7n1J4gbiymd3Td0L55E6KREkf7ND1Hpir1s3COm727C56RLohMjFP7GYWE2FObxrVerJoNNvs5BtblK
&lt; Set-Cookie: hadoop.auth="u=HTTP&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1701283143117&amp;s=QisreOWKvopGcYpL3P3Q56+OYVxldZB34NyM1oRODeY="; HttpOnly
&lt; Server: Ozone
&lt; x-amz-id-2: NSuZ2PQwardBq
&lt; x-amz-request-id: e0ccb539-dda2-4ff9-9985-dc93d5867897
&lt; Content-Length: 212
&lt; 
{ [data not shown]

100   212  100   212    0     0   3347      0 --:--:-- --:--:-- --:--:--  3347
* Closing connection 0
&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;&lt;S3Secret&gt;&lt;awsAccessKey&gt;HTTP/scm@EXAMPLE.COM&lt;/awsAccessKey&gt;&lt;awsSecret&gt;31920ad1436f28e2f58d896789cab636015c3df161d9abe0730b8b03e7b1dbcd&lt;/awsSecret&gt;&lt;/S3Secret&gt;</msg>
<status status="PASS" starttime="20231129 08:39:03.140" endtime="20231129 08:39:03.141"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:39:03.141" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:39:03.141" endtime="20231129 08:39:03.141"/>
</kw>
<status status="PASS" starttime="20231129 08:39:03.070" endtime="20231129 08:39:03.142"/>
</kw>
<msg timestamp="20231129 08:39:03.142" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:39:03.070" endtime="20231129 08:39:03.142"/>
</kw>
<msg timestamp="20231129 08:39:03.142" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20231129 08:39:03.069" endtime="20231129 08:39:03.142"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>HTTP/1.1 200 OK</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:39:03.143" endtime="20231129 08:39:03.143"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>&lt;awsAccessKey&gt;.*&lt;/awsAccessKey&gt;&lt;awsSecret&gt;.*&lt;/awsSecret&gt;</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:39:03.143" endtime="20231129 08:39:03.144"/>
</kw>
<status status="PASS" starttime="20231129 08:39:03.142" endtime="20231129 08:39:03.144"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3 Secret endpoint is disabled.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231129 08:39:03.144" endtime="20231129 08:39:03.144"/>
</kw>
<status status="NOT RUN" starttime="20231129 08:39:03.144" endtime="20231129 08:39:03.144"/>
</branch>
<status status="PASS" starttime="20231129 08:39:03.142" endtime="20231129 08:39:03.144"/>
</if>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:39:03.020" endtime="20231129 08:39:03.144"/>
</test>
<test id="s1-s1-s16-t2" name="S3 Gateway Generate Secret By Username" line="42">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:39:03.150" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:39:03.152" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:39:03.152" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231129 08:39:03.148" endtime="20231129 08:39:03.152"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:39:03.153" level="INFO">scm</msg>
<status status="PASS" starttime="20231129 08:39:03.153" endtime="20231129 08:39:03.153"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:39:03.153" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:39:03.153" endtime="20231129 08:39:03.154"/>
</kw>
<status status="PASS" starttime="20231129 08:39:03.147" endtime="20231129 08:39:03.154"/>
</kw>
<msg timestamp="20231129 08:39:03.154" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:39:03.147" endtime="20231129 08:39:03.154"/>
</kw>
<msg timestamp="20231129 08:39:03.154" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231129 08:39:03.147" endtime="20231129 08:39:03.154"/>
</kw>
<msg timestamp="20231129 08:39:03.154" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231129 08:39:03.146" endtime="20231129 08:39:03.154"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231129 08:39:03.155" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231129 08:39:03.154" endtime="20231129 08:39:03.155"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:39:03.158" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:39:03.263" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:39:03.263" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:39:03.156" endtime="20231129 08:39:03.263"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:39:03.263" level="INFO"/>
<status status="PASS" starttime="20231129 08:39:03.263" endtime="20231129 08:39:03.264"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:39:03.264" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:39:03.264" endtime="20231129 08:39:03.264"/>
</kw>
<status status="PASS" starttime="20231129 08:39:03.156" endtime="20231129 08:39:03.264"/>
</kw>
<msg timestamp="20231129 08:39:03.264" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:39:03.156" endtime="20231129 08:39:03.264"/>
</kw>
<status status="PASS" starttime="20231129 08:39:03.155" endtime="20231129 08:39:03.265"/>
</kw>
<status status="PASS" starttime="20231129 08:39:03.155" endtime="20231129 08:39:03.265"/>
</kw>
<status status="PASS" starttime="20231129 08:39:03.146" endtime="20231129 08:39:03.265"/>
</kw>
<status status="PASS" starttime="20231129 08:39:03.146" endtime="20231129 08:39:03.265"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl -X PUT --negotiate -u : -v ${ENDPOINT_URL}/secret/testuser2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:39:03.267" level="INFO">Running command 'curl -X PUT --negotiate -u : -v http://s3g:9878/secret/testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:39:03.306" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:39:03.306" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20231129 08:39:03.266" endtime="20231129 08:39:03.306"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:39:03.307" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to s3g port 9878 (#0)
*   Trying 172.19.0.11...
* Connected to s3g (172.19.0.11) port 9878 (#0)
&gt; PUT /secret/testuser2 HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: s3g:9878
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Authentication required
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-XSS-Protection: 1; mode=block
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; HttpOnly
&lt; Content-Length: 0
&lt; 

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
* Connection #0 to host s3g left intact
* Issue another request to this URL: 'http://s3g:9878/secret/testuser2'
* Found bundle for host s3g: 0x20defe0
* Re-using existing connection! (#0) with host s3g
* Connected to s3g (172.19.0.11) port 9878 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; PUT /secret/testuser2 HTTP/1.1
&gt; Authorization: Negotiate YIICWQYJKoZIhvcSAQICAQBuggJIMIICRKADAgEFoQMCAQ6iBwMFACAAAACjggFUYYIBUDCCAUygAwIBBaENGwtFWEFNUExFLkNPTaIWMBSgAwIBA6ENMAsbBEhUVFAbA3MzZ6OCARwwggEYoAMCARKhAwIBAaKCAQoEggEGuYBKBq0SlBXQZpmbxw77c9RJJ1bT+YSNAR5sT2FkzALRAPfFApBh4jhu2mNhldpbkRoWy9wE3Xl4eh1/lrfNKw4IyS0/ykaGWwDyLW9ZCNT7VAdobLfh6Kuid+5B2KjzCQU1L0A5WrpURJPCrG1BXCT1TmYuSovPjfbszn1bkNJKl+Hiz3XhdOaF28oquwfDHs5PqWfA6ehUD5Uk5h3oafzJObvGN9u/UjFjEnPB/j32D85LHTnbmu5IW9D3VLvMvdBgbC87mm9e4SHKF+n6NE4NITB1+JSLP18O0xaS8EbQHu8x6WRmsAF2uLwLWh1Nnin4HbJFmdQLx0LV6KkaOr+9NRMRWKSB1jCB06ADAgESooHLBIHIf69Z4TzaEqAlaBPIX3MsVh7xBfJnpphMLgXLZVDKHrmKUZhD6JLlY9H8SfbwGKP4Q93QquzS4CpEyQoLGfmq+YmNjsGxi9DarQ7Nu60Zx4svTwiWRn9aeDlv2Ht1eEtuVPbcgRExe69v17FZAkFNg4fz8dGG3EsEb9T2+1CbBJdrM9S9tqUHMONHxSM2sooQo47eVjJtYFkphxKLLLUeOHZM+JBRDQkVqVvRUXnbF8kWPG+2jRwD66pxGwZXZlqznM8rY/EHsqk=
&gt; User-Agent: curl/7.29.0
&gt; Host: s3g:9878
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Wed, 29 Nov 2023 08:39:03 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Wed, 29 Nov 2023 08:39:03 GMT
&lt; Pragma: no-cache
&lt; Content-Type: application/xml
&lt; X-Content-Type-Options: nosniff
&lt; X-XSS-Protection: 1; mode=block
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCQpJp4UEPtHarrmfKQNhF7TnFv5285NDA6KNXJBKAzXFH1P9qy/mR4gaRFrgI5Ztr3e4EbTV9jn9Lih+z8A+1fNRb
&lt; Set-Cookie: hadoop.auth="u=testuser&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1701283143300&amp;s=K08esAIdRvqAwFdK0+GQ8Q+26Q+zNgBdOdlVVZ0mKoA="; HttpOnly
&lt; Server: Ozone
&lt; x-amz-id-2: 6RslsFhveK
&lt; x-amz-request-id: e2587198-2679-4c7a-9004-43c69e5096d8
&lt; Content-Length: 201
&lt; 
{ [data not shown]

100   201  100   201    0     0   5867      0 --:--:-- --:--:-- --:--:--  5867
* Closing connection 0
&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;&lt;S3Secret&gt;&lt;awsAccessKey&gt;testuser2&lt;/awsAccessKey&gt;&lt;awsSecret&gt;a2a6d00e5cc90f153d0480816338562e71bfa26b477a6ba155c4d616b345d960&lt;/awsSecret&gt;&lt;/S3Secret&gt;</msg>
<status status="PASS" starttime="20231129 08:39:03.307" endtime="20231129 08:39:03.307"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:39:03.308" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:39:03.308" endtime="20231129 08:39:03.308"/>
</kw>
<status status="PASS" starttime="20231129 08:39:03.266" endtime="20231129 08:39:03.308"/>
</kw>
<msg timestamp="20231129 08:39:03.308" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:39:03.265" endtime="20231129 08:39:03.308"/>
</kw>
<msg timestamp="20231129 08:39:03.309" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20231129 08:39:03.265" endtime="20231129 08:39:03.309"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>HTTP/1.1 200 OK</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:39:03.309" endtime="20231129 08:39:03.309"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>&lt;awsAccessKey&gt;.*&lt;/awsAccessKey&gt;&lt;awsSecret&gt;.*&lt;/awsSecret&gt;</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:39:03.310" endtime="20231129 08:39:03.310"/>
</kw>
<status status="PASS" starttime="20231129 08:39:03.309" endtime="20231129 08:39:03.310"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3 Secret endpoint is disabled.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231129 08:39:03.310" endtime="20231129 08:39:03.310"/>
</kw>
<status status="NOT RUN" starttime="20231129 08:39:03.310" endtime="20231129 08:39:03.310"/>
</branch>
<status status="PASS" starttime="20231129 08:39:03.309" endtime="20231129 08:39:03.310"/>
</if>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:39:03.145" endtime="20231129 08:39:03.310"/>
</test>
<doc>S3 Secret Generate test</doc>
<status status="PASS" starttime="20231129 08:39:03.010" endtime="20231129 08:39:03.311"/>
</suite>
<suite id="s1-s1-s17" name="Secretrevoke" source="/opt/hadoop/smoketest/s3/secretrevoke.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20231129 08:39:03.321" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:39:03.321" endtime="20231129 08:39:03.321"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231129 08:39:03.321" endtime="20231129 08:39:03.321"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231129 08:39:03.321" endtime="20231129 08:39:03.321"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:39:03.322" endtime="20231129 08:39:03.322"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:39:03.322" endtime="20231129 08:39:03.322"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:39:03.322" endtime="20231129 08:39:03.322"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:39:03.322" endtime="20231129 08:39:03.322"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:39:03.322" endtime="20231129 08:39:03.322"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20231129 08:39:03.322" endtime="20231129 08:39:03.322"/>
</kw>
<status status="PASS" starttime="20231129 08:39:03.320" endtime="20231129 08:39:03.323"/>
</kw>
<test id="s1-s1-s17-t1" name="S3 Gateway Revoke Secret" line="33">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Get test user principal" library="commonlib">
<var>${principal}</var>
<arg>HTTP</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:39:03.327" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:39:03.329" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:39:03.329" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231129 08:39:03.325" endtime="20231129 08:39:03.329"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:39:03.330" level="INFO">scm</msg>
<status status="PASS" starttime="20231129 08:39:03.329" endtime="20231129 08:39:03.330"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:39:03.330" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:39:03.330" endtime="20231129 08:39:03.330"/>
</kw>
<status status="PASS" starttime="20231129 08:39:03.325" endtime="20231129 08:39:03.330"/>
</kw>
<msg timestamp="20231129 08:39:03.330" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:39:03.324" endtime="20231129 08:39:03.330"/>
</kw>
<msg timestamp="20231129 08:39:03.331" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231129 08:39:03.324" endtime="20231129 08:39:03.331"/>
</kw>
<msg timestamp="20231129 08:39:03.331" level="INFO">${principal} = HTTP/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231129 08:39:03.324" endtime="20231129 08:39:03.331"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/HTTP.keytab ${principal}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/HTTP.keytab ${principal}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:39:03.334" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/HTTP.keytab HTTP/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:39:03.377" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:39:03.377" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:39:03.332" endtime="20231129 08:39:03.377"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:39:03.378" level="INFO"/>
<status status="PASS" starttime="20231129 08:39:03.377" endtime="20231129 08:39:03.378"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:39:03.378" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:39:03.378" endtime="20231129 08:39:03.379"/>
</kw>
<status status="PASS" starttime="20231129 08:39:03.332" endtime="20231129 08:39:03.379"/>
</kw>
<msg timestamp="20231129 08:39:03.379" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:39:03.332" endtime="20231129 08:39:03.379"/>
</kw>
<status status="PASS" starttime="20231129 08:39:03.331" endtime="20231129 08:39:03.379"/>
</kw>
<status status="PASS" starttime="20231129 08:39:03.331" endtime="20231129 08:39:03.379"/>
</kw>
<status status="PASS" starttime="20231129 08:39:03.323" endtime="20231129 08:39:03.379"/>
</kw>
<status status="PASS" starttime="20231129 08:39:03.323" endtime="20231129 08:39:03.379"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl -X DELETE --negotiate -u : -v ${ENDPOINT_URL}/secret</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:39:03.382" level="INFO">Running command 'curl -X DELETE --negotiate -u : -v http://s3g:9878/secret 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:39:03.432" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:39:03.432" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20231129 08:39:03.380" endtime="20231129 08:39:03.432"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:39:03.433" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to s3g port 9878 (#0)
*   Trying 172.19.0.11...
* Connected to s3g (172.19.0.11) port 9878 (#0)
&gt; DELETE /secret HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: s3g:9878
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Authentication required
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-XSS-Protection: 1; mode=block
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; HttpOnly
&lt; Content-Length: 0
&lt; 

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
* Connection #0 to host s3g left intact
* Issue another request to this URL: 'http://s3g:9878/secret'
* Found bundle for host s3g: 0x2230f90
* Re-using existing connection! (#0) with host s3g
* Connected to s3g (172.19.0.11) port 9878 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; DELETE /secret HTTP/1.1
&gt; Authorization: Negotiate YIICUQYJKoZIhvcSAQICAQBuggJAMIICPKADAgEFoQMCAQ6iBwMFACAAAACjggFQYYIBTDCCAUigAwIBBaENGwtFWEFNUExFLkNPTaIWMBSgAwIBA6ENMAsbBEhUVFAbA3MzZ6OCARgwggEUoAMCARKhAwIBAaKCAQYEggECXDQY9hclZoIWSJhOTKDxfSbygVJallRvwkLgotAUYs7HM4zp93tebFD+oi8cKlnBTmPpCc2dX1ksoVkgKR/BvsUDaz1+lcaVV3i4Nkmh/zh7u3IfvJ1csJpKXOQmD4kLn/eOZfS+XjKcPfS6e3OwyRxFGKZzjcsJl1p99MrKe8x4ISDWIVXfDFiFcFTEnHFfRhLeKJKO8719DztqiPwSi2irwV4DAQgnk39F7nDsCg+hI3bxJjYjuByo4PJQenPjkCCcClOxabCC3nHfFWaeiEnLTSsBe/3fP8WyAFg4vu1R1C/1tSDXXAvBy2FEYuFvpTk6XUCo1RSP5GGCcTgFNq5ipIHSMIHPoAMCARKigccEgcQbpnGiiUKU/GDPMfC3mkj0xjE14kmb58pdlkcVX4NWc6c9yzCCxzycv6Olxym7JwPUYYFVcQXT/cj4NAvkYYknmTuxpZeEvyx1dM6iOmJwTd4NYeiqfhXX5GDyxiy4AyMbybO2B1mQVT8vIHPamAR+q10QPKuG1/sQmtm5Erda/XqDJdtk5N3gc22f3J8TvK/IUF0QgKhq4mNd+9WCIcAom0vd+2bWNhp1XkZ/2MgZ26QOFyFrXyvxmo1LWPFAwwK95yZs
&gt; User-Agent: curl/7.29.0
&gt; Host: s3g:9878
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Wed, 29 Nov 2023 08:39:03 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Wed, 29 Nov 2023 08:39:03 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/plain;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-XSS-Protection: 1; mode=block
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCiYUjhkuVEak0XQ1q1vhgK+1j3gtkCeAiH6p6HwRxObyEUqsMdNMfC2Yxuo0M15ilWTNpFraAASVOWbrUOFdGamA9
&lt; Set-Cookie: hadoop.auth="u=HTTP&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1701283143424&amp;s=MNecbi1Lf5EDhckrvRYyAZeOD++RoSHzpzU/PzRs2QE="; HttpOnly
&lt; Server: Ozone
&lt; x-amz-id-2: 9wKQyjC8K
&lt; x-amz-request-id: ceea42ae-af88-40e3-902e-01d7fa03243b
&lt; Content-Length: 0
&lt; 

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
* Closing connection 0</msg>
<status status="PASS" starttime="20231129 08:39:03.433" endtime="20231129 08:39:03.433"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:39:03.434" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:39:03.433" endtime="20231129 08:39:03.434"/>
</kw>
<status status="PASS" starttime="20231129 08:39:03.380" endtime="20231129 08:39:03.434"/>
</kw>
<msg timestamp="20231129 08:39:03.434" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:39:03.380" endtime="20231129 08:39:03.434"/>
</kw>
<msg timestamp="20231129 08:39:03.434" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20231129 08:39:03.379" endtime="20231129 08:39:03.434"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>HTTP/1.1 200 OK</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:39:03.435" endtime="20231129 08:39:03.435"/>
</kw>
<status status="PASS" starttime="20231129 08:39:03.435" endtime="20231129 08:39:03.435"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3 Secret endpoint is disabled.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231129 08:39:03.436" endtime="20231129 08:39:03.436"/>
</kw>
<status status="NOT RUN" starttime="20231129 08:39:03.435" endtime="20231129 08:39:03.436"/>
</branch>
<status status="PASS" starttime="20231129 08:39:03.435" endtime="20231129 08:39:03.436"/>
</if>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:39:03.323" endtime="20231129 08:39:03.436"/>
</test>
<test id="s1-s1-s17-t2" name="S3 Gateway Revoke Secret By Username" line="42">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:39:03.441" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:39:03.443" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:39:03.443" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231129 08:39:03.439" endtime="20231129 08:39:03.443"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:39:03.444" level="INFO">scm</msg>
<status status="PASS" starttime="20231129 08:39:03.443" endtime="20231129 08:39:03.444"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:39:03.444" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:39:03.444" endtime="20231129 08:39:03.444"/>
</kw>
<status status="PASS" starttime="20231129 08:39:03.439" endtime="20231129 08:39:03.445"/>
</kw>
<msg timestamp="20231129 08:39:03.445" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:39:03.439" endtime="20231129 08:39:03.445"/>
</kw>
<msg timestamp="20231129 08:39:03.445" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231129 08:39:03.438" endtime="20231129 08:39:03.445"/>
</kw>
<msg timestamp="20231129 08:39:03.445" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231129 08:39:03.438" endtime="20231129 08:39:03.445"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231129 08:39:03.446" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231129 08:39:03.445" endtime="20231129 08:39:03.446"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:39:03.448" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:39:03.490" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:39:03.490" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:39:03.447" endtime="20231129 08:39:03.490"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:39:03.491" level="INFO"/>
<status status="PASS" starttime="20231129 08:39:03.490" endtime="20231129 08:39:03.491"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:39:03.491" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:39:03.491" endtime="20231129 08:39:03.491"/>
</kw>
<status status="PASS" starttime="20231129 08:39:03.447" endtime="20231129 08:39:03.492"/>
</kw>
<msg timestamp="20231129 08:39:03.492" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:39:03.446" endtime="20231129 08:39:03.492"/>
</kw>
<status status="PASS" starttime="20231129 08:39:03.446" endtime="20231129 08:39:03.492"/>
</kw>
<status status="PASS" starttime="20231129 08:39:03.446" endtime="20231129 08:39:03.492"/>
</kw>
<status status="PASS" starttime="20231129 08:39:03.437" endtime="20231129 08:39:03.492"/>
</kw>
<status status="PASS" starttime="20231129 08:39:03.437" endtime="20231129 08:39:03.492"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl -X DELETE --negotiate -u : -v ${ENDPOINT_URL}/secret/testuser2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:39:03.494" level="INFO">Running command 'curl -X DELETE --negotiate -u : -v http://s3g:9878/secret/testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:39:03.542" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:39:03.542" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20231129 08:39:03.493" endtime="20231129 08:39:03.542"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:39:03.543" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to s3g port 9878 (#0)
*   Trying 172.19.0.11...
* Connected to s3g (172.19.0.11) port 9878 (#0)
&gt; DELETE /secret/testuser2 HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: s3g:9878
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Authentication required
&lt; Pragma: no-cache
&lt; X-Content-Type-Options: nosniff
&lt; X-XSS-Protection: 1; mode=block
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; HttpOnly
&lt; Content-Length: 0
&lt; 

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
* Connection #0 to host s3g left intact
* Issue another request to this URL: 'http://s3g:9878/secret/testuser2'
* Found bundle for host s3g: 0x6b5fe0
* Re-using existing connection! (#0) with host s3g
* Connected to s3g (172.19.0.11) port 9878 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; DELETE /secret/testuser2 HTTP/1.1
&gt; Authorization: Negotiate YIICWQYJKoZIhvcSAQICAQBuggJIMIICRKADAgEFoQMCAQ6iBwMFACAAAACjggFUYYIBUDCCAUygAwIBBaENGwtFWEFNUExFLkNPTaIWMBSgAwIBA6ENMAsbBEhUVFAbA3MzZ6OCARwwggEYoAMCARKhAwIBAaKCAQoEggEGIijeyZruH/jYfZyoNvrWlnRlYfVF5T9LLQVlY3lNEdqS7sS6K4B2MBPgAROn1+pYhiNaoPo+/ny0bi1wvowyDzenHBFZUVI5b9ywGzPrKbxdpK22VVPnSuQr0MsYb2E+y1za+fn843SvRQDoBYb9KiIOr4BmHGYZgU6ujlMd/0yYwDjvY+pgIuxY/Or1FMGEvG7VFHnukcc6YdXr4vo6ivAo7YRlbzT3sN3D3YkiFkdzTx6PUO3GzEx1mCqnkGsq4FQaWYqzqHGPnR5JkYO7ZwRAtziSwu4bvgeQcxo/7golsM7DoO/ENf3kJdawBxF/kPL9zVsynxmw5KNbt+RzAUVbfuV/7KSB1jCB06ADAgESooHLBIHIKdpFiWEEpmeIx/5sIEh5ycw5aXsbvjO50qJccU6ZcKJn1yBFUGisF5xb8W7Gss25P3VaaSvUDSEkcL+GTj4zDWnznF9chebo02aAx4nUldELIALjlhKzl0DaPappcfqfeIKpuiexeQ2KNCVJAMgRJykqhfRP3Lsp+piht7atF8QbuS+kinOREwrTHJ2v0yMFh1IA+9JWIgOpXAhlT3jdyW4cCEx2fBk8EaTEQULS5G01MO1XSaXqa2FgDHqWDGDPVaA+Giw0x6c=
&gt; User-Agent: curl/7.29.0
&gt; Host: s3g:9878
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Wed, 29 Nov 2023 08:39:03 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Wed, 29 Nov 2023 08:39:03 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/plain;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-XSS-Protection: 1; mode=block
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARC5fnMD41GU9uZ4KIn1GjmMARclHk/0bI3jwTHDSjUh70WtmM24elHlT8PjHspT1Y0tT+UKgaZn65q4Z13KPCI4mON
&lt; Set-Cookie: hadoop.auth="u=testuser&amp;p=testuser/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1701283143535&amp;s=dnKmAD+p+mJouIt+0LY8n/tMSvEF8zCeff12EScFs8s="; HttpOnly
&lt; Server: Ozone
&lt; x-amz-id-2: 1qO24a1MX
&lt; x-amz-request-id: f67c618a-b3d3-4076-98e5-90595088d428
&lt; Content-Length: 0
&lt; 

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
* Closing connection 0</msg>
<status status="PASS" starttime="20231129 08:39:03.543" endtime="20231129 08:39:03.544"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:39:03.544" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:39:03.544" endtime="20231129 08:39:03.544"/>
</kw>
<status status="PASS" starttime="20231129 08:39:03.493" endtime="20231129 08:39:03.545"/>
</kw>
<msg timestamp="20231129 08:39:03.545" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:39:03.493" endtime="20231129 08:39:03.545"/>
</kw>
<msg timestamp="20231129 08:39:03.545" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20231129 08:39:03.492" endtime="20231129 08:39:03.545"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>HTTP/1.1 200 OK</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:39:03.545" endtime="20231129 08:39:03.546"/>
</kw>
<status status="PASS" starttime="20231129 08:39:03.545" endtime="20231129 08:39:03.546"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3 Secret endpoint is disabled.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231129 08:39:03.546" endtime="20231129 08:39:03.546"/>
</kw>
<status status="NOT RUN" starttime="20231129 08:39:03.546" endtime="20231129 08:39:03.546"/>
</branch>
<status status="PASS" starttime="20231129 08:39:03.545" endtime="20231129 08:39:03.546"/>
</if>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:39:03.436" endtime="20231129 08:39:03.546"/>
</test>
<doc>S3 Secret Revoke test</doc>
<status status="PASS" starttime="20231129 08:39:03.312" endtime="20231129 08:39:03.547"/>
</suite>
<suite id="s1-s1-s18" name="Webui" source="/opt/hadoop/smoketest/s3/webui.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20231129 08:39:03.557" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:39:03.557" endtime="20231129 08:39:03.557"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231129 08:39:03.557" endtime="20231129 08:39:03.557"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231129 08:39:03.557" endtime="20231129 08:39:03.557"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:39:03.557" endtime="20231129 08:39:03.557"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:39:03.558" endtime="20231129 08:39:03.558"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:39:03.558" endtime="20231129 08:39:03.558"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:39:03.558" endtime="20231129 08:39:03.558"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:39:03.558" endtime="20231129 08:39:03.558"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20231129 08:39:03.558" endtime="20231129 08:39:03.558"/>
</kw>
<status status="PASS" starttime="20231129 08:39:03.556" endtime="20231129 08:39:03.558"/>
</kw>
<test id="s1-s1-s18-t1" name="S3 Gateway Web UI" line="32">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Get test user principal" library="commonlib">
<var>${principal}</var>
<arg>HTTP</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:39:03.562" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:39:03.564" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:39:03.564" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231129 08:39:03.561" endtime="20231129 08:39:03.564"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:39:03.565" level="INFO">scm</msg>
<status status="PASS" starttime="20231129 08:39:03.565" endtime="20231129 08:39:03.565"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:39:03.566" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:39:03.565" endtime="20231129 08:39:03.566"/>
</kw>
<status status="PASS" starttime="20231129 08:39:03.560" endtime="20231129 08:39:03.566"/>
</kw>
<msg timestamp="20231129 08:39:03.566" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:39:03.560" endtime="20231129 08:39:03.566"/>
</kw>
<msg timestamp="20231129 08:39:03.566" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231129 08:39:03.560" endtime="20231129 08:39:03.566"/>
</kw>
<msg timestamp="20231129 08:39:03.566" level="INFO">${principal} = HTTP/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231129 08:39:03.559" endtime="20231129 08:39:03.566"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/HTTP.keytab ${principal}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/HTTP.keytab ${principal}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:39:03.569" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/HTTP.keytab HTTP/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:39:03.587" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:39:03.587" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:39:03.568" endtime="20231129 08:39:03.587"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:39:03.588" level="INFO"/>
<status status="PASS" starttime="20231129 08:39:03.588" endtime="20231129 08:39:03.588"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:39:03.589" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:39:03.588" endtime="20231129 08:39:03.589"/>
</kw>
<status status="PASS" starttime="20231129 08:39:03.567" endtime="20231129 08:39:03.589"/>
</kw>
<msg timestamp="20231129 08:39:03.589" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:39:03.567" endtime="20231129 08:39:03.589"/>
</kw>
<status status="PASS" starttime="20231129 08:39:03.567" endtime="20231129 08:39:03.589"/>
</kw>
<status status="PASS" starttime="20231129 08:39:03.567" endtime="20231129 08:39:03.589"/>
</kw>
<status status="PASS" starttime="20231129 08:39:03.559" endtime="20231129 08:39:03.589"/>
</kw>
<status status="PASS" starttime="20231129 08:39:03.559" endtime="20231129 08:39:03.589"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -v ${ENDPOINT_URL}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:39:03.592" level="INFO">Running command 'curl --negotiate -u : -v http://s3g:9878 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:39:03.602" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:39:03.602" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20231129 08:39:03.591" endtime="20231129 08:39:03.602"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:39:03.603" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to s3g port 9878 (#0)
*   Trying 172.19.0.11...
* Connected to s3g (172.19.0.11) port 9878 (#0)
&gt; GET / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: s3g:9878
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 302 Found
&lt; Date: Wed, 29 Nov 2023 08:39:03 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Wed, 29 Nov 2023 08:39:03 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/plain;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-XSS-Protection: 1; mode=block
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; Location: http://s3g:9878/static/
&lt; Content-Length: 0
&lt; 

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
* Connection #0 to host s3g left intact</msg>
<status status="PASS" starttime="20231129 08:39:03.602" endtime="20231129 08:39:03.603"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:39:03.604" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:39:03.603" endtime="20231129 08:39:03.604"/>
</kw>
<status status="PASS" starttime="20231129 08:39:03.590" endtime="20231129 08:39:03.604"/>
</kw>
<msg timestamp="20231129 08:39:03.605" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:39:03.590" endtime="20231129 08:39:03.605"/>
</kw>
<msg timestamp="20231129 08:39:03.605" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20231129 08:39:03.590" endtime="20231129 08:39:03.605"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location:</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:39:03.605" endtime="20231129 08:39:03.605"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>/static/</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:39:03.605" endtime="20231129 08:39:03.606"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -v ${ENDPOINT_URL}/static/index.html</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:39:03.608" level="INFO">Running command 'curl --negotiate -u : -v http://s3g:9878/static/index.html 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:39:03.650" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:39:03.650" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20231129 08:39:03.607" endtime="20231129 08:39:03.650"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:39:03.651" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to s3g port 9878 (#0)
*   Trying 172.19.0.11...
* Connected to s3g (172.19.0.11) port 9878 (#0)
&gt; GET /static/index.html HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: s3g:9878
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 401 Authentication required
&lt; X-Content-Type-Options: nosniff
&lt; X-XSS-Protection: 1; mode=block
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; WWW-Authenticate: Negotiate
&lt; Set-Cookie: hadoop.auth=; Path=/; HttpOnly
&lt; Cache-Control: must-revalidate,no-cache,no-store
&lt; Content-Type: text/html;charset=iso-8859-1
&lt; Content-Length: 464
&lt; 
* Ignoring the response-body
{ [data not shown]

100   464  100   464    0     0  16845      0 --:--:-- --:--:-- --:--:-- 17185
* Connection #0 to host s3g left intact
* Issue another request to this URL: 'http://s3g:9878/static/index.html'
* Found bundle for host s3g: 0xf45fa0
* Re-using existing connection! (#0) with host s3g
* Connected to s3g (172.19.0.11) port 9878 (#0)
* Server auth using GSS-Negotiate with user ''
&gt; GET /static/index.html HTTP/1.1
&gt; Authorization: Negotiate YIICUQYJKoZIhvcSAQICAQBuggJAMIICPKADAgEFoQMCAQ6iBwMFACAAAACjggFQYYIBTDCCAUigAwIBBaENGwtFWEFNUExFLkNPTaIWMBSgAwIBA6ENMAsbBEhUVFAbA3MzZ6OCARgwggEUoAMCARKhAwIBAaKCAQYEggEC6ZOIr82uImhhhmcmqYNUqFMGvnmJiRvFSLVS2L+188Ju179pZbRVxPcodglqS6iv3QwiaVHhkCvB8WuodSFHGhVX/SbjIChLjRIRnmvNh47PaJxLguDclLmIaWl5uhr0Bn1ZCtnnsEDfYqgP0am4a+JkoP5YoSqbl71YIJtGX0TVR1sWj5a10tSH/EOIjuYHHLim+KAQBwE2/uVkyzseoUQU9WGEvZ0KenwsG4zA+GAluBvzvWhq732wwnT1beE94yz59ThK93ECtPKFLoNGoMK0Gh+RWyj+xTVD2iXSnIDhg5SfZwnBQp+LFCMFSbkNEoMDgGfVZJoKUpFF/ZCADZWspIHSMIHPoAMCARKigccEgcQ6NDj32oaL3TAhQooNXg8CFEewSMTQxxuwWsJx8W9SOig74e1QgdHoYNfGeARJbOr57VxEiGLHpoUy/XwfezM3F+xhufhZx7CBFf0l4Jpv4/vvPNJlp56nx5B0Y/9ez2LXjQSkd7JDy04DrQ5PQ/okt63yfKhJIDD+v6OGLisxh+9ttPBwmUl06Q7wDMTIm3EdaCZ9Cmbvr14DZ/DOSeVyIpw7i84GW5eoWh+EsPBGqMe9spYft0oPish1rWYkPgjzCv79
&gt; User-Agent: curl/7.29.0
&gt; Host: s3g:9878
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Wed, 29 Nov 2023 08:39:03 GMT
&lt; Content-Type: text/html
&lt; X-Content-Type-Options: nosniff
&lt; X-XSS-Protection: 1; mode=block
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCDJphSncyPs8mzJvxtt3t9Adz9hCewgUZfDsDMQrKOTSD1Dkwr2MgbFe8KK1yAvjn/2of7P5F3cD6vLLfY99Oefqa
&lt; Set-Cookie: hadoop.auth="u=HTTP&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1701283143642&amp;s=aDM8sbTeAUF5vfDe1+1ObV1u0n/IuulOVdfxZPXY23I="; Path=/; HttpOnly
&lt; Last-Modified: Wed, 29 Nov 2023 08:08:36 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 3106
&lt; 
{ [data not shown]

100  3106  100  3106    0     0  82961      0 --:--:-- --:--:-- --:--:-- 82961
* Closing connection 0
&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"&gt;
&lt;!--
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
--&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="utf-8"&gt;
    &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
    &lt;meta name="viewport" content="width=device-width, initial-scale=1"&gt;
    &lt;meta http-equiv="Content-Security-Policy" content="script-src 'self';"&gt;
    &lt;!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags --&gt;
    &lt;meta name="description" content="Apache Ozone S3 gateway"&gt;

    &lt;title&gt;S3 gateway -- Apache Ozone&lt;/title&gt;

    &lt;link href="bootstrap-3.4.1/css/bootstrap.min.css" rel="stylesheet"&gt;
    &lt;link href="hadoop.css" rel="stylesheet"&gt;
    &lt;link href="ozone.css" rel="stylesheet"&gt;

&lt;/head&gt;

&lt;body&gt;

&lt;header class="navbar navbar-inverse navbar-fixed-top bs-docs-nav"&gt;
    &lt;div class="container-fluid"&gt;
        &lt;div class="navbar-header"&gt;
            &lt;button type="button" class="navbar-toggle collapsed"
                    data-toggle="collapse" data-target="#navbar"
                    aria-expanded="false" aria-controls="navbar"&gt;
                &lt;span class="sr-only"&gt;Toggle navigation&lt;/span&gt;
                &lt;span class="icon-bar"&gt;&lt;/span&gt;
                &lt;span class="icon-bar"&gt;&lt;/span&gt;
                &lt;span class="icon-bar"&gt;&lt;/span&gt;
            &lt;/button&gt;
            &lt;a class="navbar-brand" href="#"&gt;Ozone S3G&lt;/a&gt;
        &lt;/div&gt;
        &lt;div id="navbar" class="collapse navbar-collapse"&gt;
            &lt;ul class="nav navbar-nav" id="ui-tabs"&gt;
                &lt;li&gt;&lt;a href="docs"&gt;Documentation&lt;/a&gt;&lt;/li&gt;

            &lt;/ul&gt;
        &lt;/div&gt;&lt;!--/.nav-collapse --&gt;

    &lt;/div&gt;
&lt;/header&gt;


&lt;div class="container-fluid" style="margin: 12pt"&gt;

    &lt;h1&gt;S3 gateway&lt;/h1&gt;

    &lt;p&gt;This is an endpoint of Apache Ozone S3 gateway. Use it with any
        AWS S3 compatible tool
        with setting this url as an endpoint&lt;/p&gt;

    &lt;p&gt;For example with aws-cli:&lt;/p&gt;

    &lt;pre&gt;aws s3api --endpoint &lt;span id="s3gurl"&gt;&lt;/span&gt; create-bucket --bucket=wordcount&lt;/pre&gt;

    &lt;p&gt;For more information, please check the &lt;a href="docs"&gt;documentation.&lt;/a&gt;
    &lt;/p&gt;
&lt;/div&gt;&lt;!-- /.container --&gt;

&lt;script src="jquery-3.5.1.min.js"&gt;&lt;/script&gt;
&lt;script src="bootstrap-3.4.1/js/bootstrap.min.js"&gt;&lt;/script&gt;
&lt;script src="s3g.js"&gt;&lt;/script&gt;

&lt;/body&gt;
&lt;/html&gt;</msg>
<status status="PASS" starttime="20231129 08:39:03.650" endtime="20231129 08:39:03.651"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:39:03.652" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:39:03.651" endtime="20231129 08:39:03.652"/>
</kw>
<status status="PASS" starttime="20231129 08:39:03.606" endtime="20231129 08:39:03.652"/>
</kw>
<msg timestamp="20231129 08:39:03.652" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:39:03.606" endtime="20231129 08:39:03.652"/>
</kw>
<msg timestamp="20231129 08:39:03.652" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20231129 08:39:03.606" endtime="20231129 08:39:03.653"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Apache Ozone S3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:39:03.653" endtime="20231129 08:39:03.653"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:39:03.558" endtime="20231129 08:39:03.653"/>
</test>
<doc>S3 gateway web ui test</doc>
<status status="PASS" starttime="20231129 08:39:03.548" endtime="20231129 08:39:03.654"/>
</suite>
<status status="PASS" starttime="20231129 08:36:18.266" endtime="20231129 08:39:03.657"/>
</suite>
<suite id="s1-s2" name="Basic" source="/opt/hadoop/smoketest/ec/basic.robot">
<kw name="Prepare For Tests" library="lib" type="SETUP">
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/1mb bs=1048576 count=1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:39:06.236" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/1mb bs=1048576 count=1 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:39:06.242" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:39:06.242" level="INFO">${output} = 1+0 records in
1+0 records out
1048576 bytes (1.0 MB) copied, 0.00345906 s, 303 MB/s</msg>
<status status="PASS" starttime="20231129 08:39:06.235" endtime="20231129 08:39:06.242"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:39:06.242" level="INFO">1+0 records in
1+0 records out
1048576 bytes (1.0 MB) copied, 0.00345906 s, 303 MB/s</msg>
<status status="PASS" starttime="20231129 08:39:06.242" endtime="20231129 08:39:06.242"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:39:06.243" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:39:06.242" endtime="20231129 08:39:06.243"/>
</kw>
<status status="PASS" starttime="20231129 08:39:06.234" endtime="20231129 08:39:06.243"/>
</kw>
<msg timestamp="20231129 08:39:06.243" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:39:06.234" endtime="20231129 08:39:06.243"/>
</kw>
<status status="PASS" starttime="20231129 08:39:06.234" endtime="20231129 08:39:06.243"/>
</kw>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/2mb bs=1048576 count=2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:39:06.245" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/2mb bs=1048576 count=2 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:39:06.253" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:39:06.253" level="INFO">${output} = 2+0 records in
2+0 records out
2097152 bytes (2.1 MB) copied, 0.00636113 s, 330 MB/s</msg>
<status status="PASS" starttime="20231129 08:39:06.244" endtime="20231129 08:39:06.253"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:39:06.254" level="INFO">2+0 records in
2+0 records out
2097152 bytes (2.1 MB) copied, 0.00636113 s, 330 MB/s</msg>
<status status="PASS" starttime="20231129 08:39:06.253" endtime="20231129 08:39:06.254"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:39:06.254" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:39:06.254" endtime="20231129 08:39:06.254"/>
</kw>
<status status="PASS" starttime="20231129 08:39:06.244" endtime="20231129 08:39:06.254"/>
</kw>
<msg timestamp="20231129 08:39:06.254" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:39:06.243" endtime="20231129 08:39:06.254"/>
</kw>
<status status="PASS" starttime="20231129 08:39:06.243" endtime="20231129 08:39:06.255"/>
</kw>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/3mb bs=1048576 count=3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:39:06.257" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/3mb bs=1048576 count=3 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:39:06.268" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:39:06.268" level="INFO">${output} = 3+0 records in
3+0 records out
3145728 bytes (3.1 MB) copied, 0.00954876 s, 329 MB/s</msg>
<status status="PASS" starttime="20231129 08:39:06.256" endtime="20231129 08:39:06.268"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:39:06.269" level="INFO">3+0 records in
3+0 records out
3145728 bytes (3.1 MB) copied, 0.00954876 s, 329 MB/s</msg>
<status status="PASS" starttime="20231129 08:39:06.268" endtime="20231129 08:39:06.269"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:39:06.269" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:39:06.269" endtime="20231129 08:39:06.269"/>
</kw>
<status status="PASS" starttime="20231129 08:39:06.255" endtime="20231129 08:39:06.269"/>
</kw>
<msg timestamp="20231129 08:39:06.269" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:39:06.255" endtime="20231129 08:39:06.269"/>
</kw>
<status status="PASS" starttime="20231129 08:39:06.255" endtime="20231129 08:39:06.269"/>
</kw>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/100mb bs=1048576 count=100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:39:06.272" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/100mb bs=1048576 count=100 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:39:06.575" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:39:06.575" level="INFO">${output} = 100+0 records in
100+0 records out
104857600 bytes (105 MB) copied, 0.301716 s, 348 MB/s</msg>
<status status="PASS" starttime="20231129 08:39:06.270" endtime="20231129 08:39:06.575"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:39:06.576" level="INFO">100+0 records in
100+0 records out
104857600 bytes (105 MB) copied, 0.301716 s, 348 MB/s</msg>
<status status="PASS" starttime="20231129 08:39:06.576" endtime="20231129 08:39:06.576"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:39:06.577" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:39:06.576" endtime="20231129 08:39:06.577"/>
</kw>
<status status="PASS" starttime="20231129 08:39:06.270" endtime="20231129 08:39:06.577"/>
</kw>
<msg timestamp="20231129 08:39:06.577" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:39:06.270" endtime="20231129 08:39:06.577"/>
</kw>
<status status="PASS" starttime="20231129 08:39:06.269" endtime="20231129 08:39:06.577"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:39:06.581" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/;s/scm[0-9]/scm/;s/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:39:06.583" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:39:06.583" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231129 08:39:06.580" endtime="20231129 08:39:06.583"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:39:06.584" level="INFO">scm</msg>
<status status="PASS" starttime="20231129 08:39:06.584" endtime="20231129 08:39:06.584"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:39:06.584" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:39:06.584" endtime="20231129 08:39:06.584"/>
</kw>
<status status="PASS" starttime="20231129 08:39:06.579" endtime="20231129 08:39:06.585"/>
</kw>
<msg timestamp="20231129 08:39:06.585" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:39:06.579" endtime="20231129 08:39:06.585"/>
</kw>
<msg timestamp="20231129 08:39:06.585" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231129 08:39:06.579" endtime="20231129 08:39:06.585"/>
</kw>
<msg timestamp="20231129 08:39:06.585" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231129 08:39:06.579" endtime="20231129 08:39:06.585"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231129 08:39:06.585" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231129 08:39:06.585" endtime="20231129 08:39:06.585"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:39:06.588" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:39:06.605" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:39:06.605" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:39:06.587" endtime="20231129 08:39:06.605"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:39:06.606" level="INFO"/>
<status status="PASS" starttime="20231129 08:39:06.605" endtime="20231129 08:39:06.606"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:39:06.606" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:39:06.606" endtime="20231129 08:39:06.606"/>
</kw>
<status status="PASS" starttime="20231129 08:39:06.586" endtime="20231129 08:39:06.606"/>
</kw>
<msg timestamp="20231129 08:39:06.606" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:39:06.586" endtime="20231129 08:39:06.606"/>
</kw>
<status status="PASS" starttime="20231129 08:39:06.586" endtime="20231129 08:39:06.606"/>
</kw>
<status status="PASS" starttime="20231129 08:39:06.586" endtime="20231129 08:39:06.606"/>
</kw>
<status status="PASS" starttime="20231129 08:39:06.578" endtime="20231129 08:39:06.606"/>
</kw>
<status status="PASS" starttime="20231129 08:39:06.577" endtime="20231129 08:39:06.607"/>
</kw>
<status status="PASS" starttime="20231129 08:39:06.234" endtime="20231129 08:39:06.607"/>
</kw>
<test id="s1-s2-t1" name="Test Bucket Creation" line="62">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${VOLUME}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:39:06.610" level="INFO">Running command 'ozone sh volume create /vol12186 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:39:10.339" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:39:10.340" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:39:06.608" endtime="20231129 08:39:10.340"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:39:10.340" level="INFO"/>
<status status="PASS" starttime="20231129 08:39:10.340" endtime="20231129 08:39:10.340"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:39:10.341" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:39:10.341" endtime="20231129 08:39:10.341"/>
</kw>
<status status="PASS" starttime="20231129 08:39:06.608" endtime="20231129 08:39:10.341"/>
</kw>
<msg timestamp="20231129 08:39:10.341" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:39:06.608" endtime="20231129 08:39:10.341"/>
</kw>
<msg timestamp="20231129 08:39:10.342" level="INFO">${result} = </msg>
<status status="PASS" starttime="20231129 08:39:06.607" endtime="20231129 08:39:10.342"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:39:10.342" endtime="20231129 08:39:10.342"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create /${VOLUME}/default</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:39:10.345" level="INFO">Running command 'ozone sh bucket create /vol12186/default 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:39:13.960" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:39:13.961" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:39:10.343" endtime="20231129 08:39:13.961"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:39:13.961" level="INFO"/>
<status status="PASS" starttime="20231129 08:39:13.961" endtime="20231129 08:39:13.961"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:39:13.962" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:39:13.961" endtime="20231129 08:39:13.962"/>
</kw>
<status status="PASS" starttime="20231129 08:39:10.343" endtime="20231129 08:39:13.962"/>
</kw>
<msg timestamp="20231129 08:39:13.962" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:39:10.343" endtime="20231129 08:39:13.962"/>
</kw>
<msg timestamp="20231129 08:39:13.962" level="INFO">${result} = </msg>
<status status="PASS" starttime="20231129 08:39:10.342" endtime="20231129 08:39:13.962"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:39:13.962" endtime="20231129 08:39:13.963"/>
</kw>
<kw name="Verify Bucket Empty Replication Config" library="shell">
<arg>/${VOLUME}/default</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${bucket} | jq -r '.replicationConfig'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:39:13.966" level="INFO">Running command 'ozone sh bucket info /vol12186/default | jq -r '.replicationConfig' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:39:17.796" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:39:17.796" level="INFO">${output} = null</msg>
<status status="PASS" starttime="20231129 08:39:13.964" endtime="20231129 08:39:17.796"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:39:17.797" level="INFO">null</msg>
<status status="PASS" starttime="20231129 08:39:17.797" endtime="20231129 08:39:17.797"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:39:17.797" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:39:17.797" endtime="20231129 08:39:17.797"/>
</kw>
<status status="PASS" starttime="20231129 08:39:13.964" endtime="20231129 08:39:17.798"/>
</kw>
<msg timestamp="20231129 08:39:17.798" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:39:13.963" endtime="20231129 08:39:17.798"/>
</kw>
<msg timestamp="20231129 08:39:17.798" level="INFO">${result} = null</msg>
<status status="PASS" starttime="20231129 08:39:13.963" endtime="20231129 08:39:17.798"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>null</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231129 08:39:17.798" endtime="20231129 08:39:17.798"/>
</kw>
<status status="PASS" starttime="20231129 08:39:13.963" endtime="20231129 08:39:17.798"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create --replication 3 --type RATIS /${VOLUME}/ratis</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:39:17.801" level="INFO">Running command 'ozone sh bucket create --replication 3 --type RATIS /vol12186/ratis 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:39:21.574" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:39:21.574" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:39:17.800" endtime="20231129 08:39:21.574"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:39:21.575" level="INFO"/>
<status status="PASS" starttime="20231129 08:39:21.575" endtime="20231129 08:39:21.575"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:39:21.576" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:39:21.575" endtime="20231129 08:39:21.576"/>
</kw>
<status status="PASS" starttime="20231129 08:39:17.799" endtime="20231129 08:39:21.576"/>
</kw>
<msg timestamp="20231129 08:39:21.576" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:39:17.799" endtime="20231129 08:39:21.576"/>
</kw>
<msg timestamp="20231129 08:39:21.576" level="INFO">${result} = </msg>
<status status="PASS" starttime="20231129 08:39:17.799" endtime="20231129 08:39:21.576"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:39:21.576" endtime="20231129 08:39:21.576"/>
</kw>
<kw name="Verify Bucket Replica Replication Config" library="shell">
<arg>/${VOLUME}/ratis</arg>
<arg>RATIS</arg>
<arg>THREE</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${bucket} | jq -r '.replicationConfig.replicationType, .replicationConfig.replicationFactor'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:39:21.580" level="INFO">Running command 'ozone sh bucket info /vol12186/ratis | jq -r '.replicationConfig.replicationType, .replicationConfig.replicationFactor' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:39:25.581" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:39:25.582" level="INFO">${output} = RATIS
THREE</msg>
<status status="PASS" starttime="20231129 08:39:21.578" endtime="20231129 08:39:25.582"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:39:25.582" level="INFO">RATIS
THREE</msg>
<status status="PASS" starttime="20231129 08:39:25.582" endtime="20231129 08:39:25.582"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:39:25.583" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:39:25.582" endtime="20231129 08:39:25.583"/>
</kw>
<status status="PASS" starttime="20231129 08:39:21.578" endtime="20231129 08:39:25.583"/>
</kw>
<msg timestamp="20231129 08:39:25.583" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:39:21.577" endtime="20231129 08:39:25.583"/>
</kw>
<msg timestamp="20231129 08:39:25.583" level="INFO">${result} = RATIS
THREE</msg>
<status status="PASS" starttime="20231129 08:39:21.577" endtime="20231129 08:39:25.583"/>
</kw>
<kw name="Verify Replica Replication Config" library="shell">
<arg>${result}</arg>
<arg>${type}</arg>
<arg>${factor}</arg>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${type}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:39:25.584" endtime="20231129 08:39:25.585"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${factor}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:39:25.585" endtime="20231129 08:39:25.585"/>
</kw>
<status status="PASS" starttime="20231129 08:39:25.583" endtime="20231129 08:39:25.585"/>
</kw>
<status status="PASS" starttime="20231129 08:39:21.577" endtime="20231129 08:39:25.585"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create --replication rs-3-2-1024k --type EC /${VOLUME}/ecbucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:39:25.588" level="INFO">Running command 'ozone sh bucket create --replication rs-3-2-1024k --type EC /vol12186/ecbucket 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:39:29.292" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:39:29.292" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:39:25.586" endtime="20231129 08:39:29.292"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:39:29.292" level="INFO"/>
<status status="PASS" starttime="20231129 08:39:29.292" endtime="20231129 08:39:29.293"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:39:29.293" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:39:29.293" endtime="20231129 08:39:29.293"/>
</kw>
<status status="PASS" starttime="20231129 08:39:25.586" endtime="20231129 08:39:29.293"/>
</kw>
<msg timestamp="20231129 08:39:29.293" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:39:25.586" endtime="20231129 08:39:29.293"/>
</kw>
<msg timestamp="20231129 08:39:29.293" level="INFO">${result} = </msg>
<status status="PASS" starttime="20231129 08:39:25.585" endtime="20231129 08:39:29.293"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:39:29.294" endtime="20231129 08:39:29.294"/>
</kw>
<kw name="Verify Bucket EC Replication Config" library="shell">
<arg>/${VOLUME}/ecbucket</arg>
<arg>RS</arg>
<arg>3</arg>
<arg>2</arg>
<arg>1048576</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${bucket} | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:39:29.297" level="INFO">Running command 'ozone sh bucket info /vol12186/ecbucket | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:39:33.301" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:39:33.301" level="INFO">${output} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20231129 08:39:29.295" endtime="20231129 08:39:33.301"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:39:33.302" level="INFO">EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20231129 08:39:33.302" endtime="20231129 08:39:33.302"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:39:33.303" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:39:33.302" endtime="20231129 08:39:33.303"/>
</kw>
<status status="PASS" starttime="20231129 08:39:29.295" endtime="20231129 08:39:33.303"/>
</kw>
<msg timestamp="20231129 08:39:33.303" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:39:29.295" endtime="20231129 08:39:33.303"/>
</kw>
<msg timestamp="20231129 08:39:33.303" level="INFO">${result} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20231129 08:39:29.294" endtime="20231129 08:39:33.303"/>
</kw>
<kw name="Verify EC Replication Config" library="shell">
<arg>${result}</arg>
<arg>${encoding}</arg>
<arg>${data}</arg>
<arg>${parity}</arg>
<arg>${chunksize}</arg>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)EC$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:39:33.304" endtime="20231129 08:39:33.304"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${encoding}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:39:33.305" endtime="20231129 08:39:33.305"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${data}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:39:33.305" endtime="20231129 08:39:33.305"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${parity}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:39:33.305" endtime="20231129 08:39:33.306"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${chunksize}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:39:33.306" endtime="20231129 08:39:33.306"/>
</kw>
<status status="PASS" starttime="20231129 08:39:33.303" endtime="20231129 08:39:33.306"/>
</kw>
<status status="PASS" starttime="20231129 08:39:29.294" endtime="20231129 08:39:33.306"/>
</kw>
<status status="PASS" starttime="20231129 08:39:06.607" endtime="20231129 08:39:33.307"/>
</test>
<test id="s1-s2-t2" name="Create 1MB Key In EC Bucket" line="75">
<kw name="Create Key In EC Bucket">
<arg>1mb</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${dir}</var>
<arg>/${VOLUME}/ecbucket/dir</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:39:33.308" level="INFO">${dir} = /vol12186/ecbucket/dir</msg>
<status status="PASS" starttime="20231129 08:39:33.308" endtime="20231129 08:39:33.308"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${dir}/${size}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:39:33.308" level="INFO">${key} = /vol12186/ecbucket/dir/1mb</msg>
<status status="PASS" starttime="20231129 08:39:33.308" endtime="20231129 08:39:33.309"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${file}</var>
<arg>/tmp/${size}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:39:33.309" level="INFO">${file} = /tmp/1mb</msg>
<status status="PASS" starttime="20231129 08:39:33.309" endtime="20231129 08:39:33.309"/>
</kw>
<kw name="Create Key" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put ${args} ${key} ${file}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:39:33.313" level="INFO">Running command 'ozone sh key put  /vol12186/ecbucket/dir/1mb /tmp/1mb 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:39:38.896" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:39:38.896" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:39:33.311" endtime="20231129 08:39:38.896"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:39:38.897" level="INFO"/>
<status status="PASS" starttime="20231129 08:39:38.897" endtime="20231129 08:39:38.897"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:39:38.898" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:39:38.897" endtime="20231129 08:39:38.898"/>
</kw>
<status status="PASS" starttime="20231129 08:39:33.311" endtime="20231129 08:39:38.898"/>
</kw>
<msg timestamp="20231129 08:39:38.898" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:39:33.311" endtime="20231129 08:39:38.898"/>
</kw>
<msg timestamp="20231129 08:39:38.898" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:39:33.310" endtime="20231129 08:39:38.898"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:39:38.898" endtime="20231129 08:39:38.899"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Uploaded ${file} to ${key}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:39:38.899" level="INFO">Uploaded /tmp/1mb to /vol12186/ecbucket/dir/1mb</msg>
<status status="PASS" starttime="20231129 08:39:38.899" endtime="20231129 08:39:38.899"/>
</kw>
<status status="PASS" starttime="20231129 08:39:33.309" endtime="20231129 08:39:38.899"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231129 08:39:38.900" level="INFO">${postfix} = 96061</msg>
<status status="PASS" starttime="20231129 08:39:38.900" endtime="20231129 08:39:38.900"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:39:38.901" level="INFO">${tmpfile} = /tmp/tempkey-96061</msg>
<status status="PASS" starttime="20231129 08:39:38.900" endtime="20231129 08:39:38.901"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:39:38.903" level="INFO">Running command 'ozone sh key get /vol12186/ecbucket/dir/1mb /tmp/tempkey-96061 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:39:44.017" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:39:44.017" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:39:38.902" endtime="20231129 08:39:44.017"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:39:44.018" level="INFO"/>
<status status="PASS" starttime="20231129 08:39:44.018" endtime="20231129 08:39:44.018"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:39:44.019" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:39:44.018" endtime="20231129 08:39:44.019"/>
</kw>
<status status="PASS" starttime="20231129 08:39:38.901" endtime="20231129 08:39:44.019"/>
</kw>
<msg timestamp="20231129 08:39:44.019" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:39:38.901" endtime="20231129 08:39:44.019"/>
</kw>
<status status="PASS" starttime="20231129 08:39:38.901" endtime="20231129 08:39:44.019"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20231129 08:39:44.021" level="INFO">Running command 'diff -q /tmp/1mb /tmp/tempkey-96061 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:39:44.023" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20231129 08:39:44.019" endtime="20231129 08:39:44.023"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:39:44.026" level="INFO">Running command 'rm -f /tmp/tempkey-96061 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:39:44.027" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:39:44.027" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:39:44.024" endtime="20231129 08:39:44.027"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:39:44.028" level="INFO"/>
<status status="PASS" starttime="20231129 08:39:44.028" endtime="20231129 08:39:44.028"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:39:44.028" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:39:44.028" endtime="20231129 08:39:44.028"/>
</kw>
<status status="PASS" starttime="20231129 08:39:44.024" endtime="20231129 08:39:44.029"/>
</kw>
<msg timestamp="20231129 08:39:44.029" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:39:44.024" endtime="20231129 08:39:44.029"/>
</kw>
<status status="PASS" starttime="20231129 08:39:44.023" endtime="20231129 08:39:44.029"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20231129 08:39:44.029" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20231129 08:39:44.029" endtime="20231129 08:39:44.029"/>
</kw>
<msg timestamp="20231129 08:39:44.030" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20231129 08:39:38.900" endtime="20231129 08:39:44.030"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20231129 08:39:44.030" endtime="20231129 08:39:44.030"/>
</kw>
<status status="PASS" starttime="20231129 08:39:38.899" endtime="20231129 08:39:44.030"/>
</kw>
<kw name="Verify Key EC Replication Config" library="shell">
<arg>${key}</arg>
<arg>RS</arg>
<arg>3</arg>
<arg>2</arg>
<arg>1048576</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${key} | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:39:44.033" level="INFO">Running command 'ozone sh key info /vol12186/ecbucket/dir/1mb | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:39:47.776" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:39:47.776" level="INFO">${output} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20231129 08:39:44.032" endtime="20231129 08:39:47.777"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:39:47.777" level="INFO">EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20231129 08:39:47.777" endtime="20231129 08:39:47.777"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:39:47.778" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:39:47.777" endtime="20231129 08:39:47.778"/>
</kw>
<status status="PASS" starttime="20231129 08:39:44.031" endtime="20231129 08:39:47.778"/>
</kw>
<msg timestamp="20231129 08:39:47.778" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:39:44.031" endtime="20231129 08:39:47.778"/>
</kw>
<msg timestamp="20231129 08:39:47.778" level="INFO">${result} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20231129 08:39:44.030" endtime="20231129 08:39:47.778"/>
</kw>
<kw name="Verify EC Replication Config" library="shell">
<arg>${result}</arg>
<arg>${encoding}</arg>
<arg>${data}</arg>
<arg>${parity}</arg>
<arg>${chunksize}</arg>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)EC$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:39:47.779" endtime="20231129 08:39:47.779"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${encoding}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:39:47.779" endtime="20231129 08:39:47.780"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${data}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:39:47.780" endtime="20231129 08:39:47.780"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${parity}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:39:47.780" endtime="20231129 08:39:47.780"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${chunksize}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:39:47.781" endtime="20231129 08:39:47.781"/>
</kw>
<status status="PASS" starttime="20231129 08:39:47.778" endtime="20231129 08:39:47.781"/>
</kw>
<status status="PASS" starttime="20231129 08:39:44.030" endtime="20231129 08:39:47.781"/>
</kw>
<kw name="Verify Key EC Replication Config" library="shell">
<arg>${dir}</arg>
<arg>RS</arg>
<arg>3</arg>
<arg>2</arg>
<arg>1048576</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${key} | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:39:47.784" level="INFO">Running command 'ozone sh key info /vol12186/ecbucket/dir | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:39:51.536" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:39:51.536" level="INFO">${output} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20231129 08:39:47.783" endtime="20231129 08:39:51.536"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:39:51.537" level="INFO">EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20231129 08:39:51.536" endtime="20231129 08:39:51.537"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:39:51.537" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:39:51.537" endtime="20231129 08:39:51.537"/>
</kw>
<status status="PASS" starttime="20231129 08:39:47.782" endtime="20231129 08:39:51.537"/>
</kw>
<msg timestamp="20231129 08:39:51.538" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:39:47.782" endtime="20231129 08:39:51.538"/>
</kw>
<msg timestamp="20231129 08:39:51.538" level="INFO">${result} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20231129 08:39:47.781" endtime="20231129 08:39:51.538"/>
</kw>
<kw name="Verify EC Replication Config" library="shell">
<arg>${result}</arg>
<arg>${encoding}</arg>
<arg>${data}</arg>
<arg>${parity}</arg>
<arg>${chunksize}</arg>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)EC$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:39:51.539" endtime="20231129 08:39:51.539"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${encoding}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:39:51.539" endtime="20231129 08:39:51.539"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${data}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:39:51.539" endtime="20231129 08:39:51.540"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${parity}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:39:51.540" endtime="20231129 08:39:51.540"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${chunksize}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:39:51.540" endtime="20231129 08:39:51.540"/>
</kw>
<status status="PASS" starttime="20231129 08:39:51.538" endtime="20231129 08:39:51.540"/>
</kw>
<status status="PASS" starttime="20231129 08:39:47.781" endtime="20231129 08:39:51.540"/>
</kw>
<status status="PASS" starttime="20231129 08:39:33.308" endtime="20231129 08:39:51.540"/>
</kw>
<status status="PASS" starttime="20231129 08:39:33.307" endtime="20231129 08:39:51.541"/>
</test>
<test id="s1-s2-t3" name="Create 2MB Key In EC Bucket" line="78">
<kw name="Create Key In EC Bucket">
<arg>2mb</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${dir}</var>
<arg>/${VOLUME}/ecbucket/dir</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:39:51.542" level="INFO">${dir} = /vol12186/ecbucket/dir</msg>
<status status="PASS" starttime="20231129 08:39:51.542" endtime="20231129 08:39:51.542"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${dir}/${size}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:39:51.543" level="INFO">${key} = /vol12186/ecbucket/dir/2mb</msg>
<status status="PASS" starttime="20231129 08:39:51.542" endtime="20231129 08:39:51.543"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${file}</var>
<arg>/tmp/${size}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:39:51.543" level="INFO">${file} = /tmp/2mb</msg>
<status status="PASS" starttime="20231129 08:39:51.543" endtime="20231129 08:39:51.543"/>
</kw>
<kw name="Create Key" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put ${args} ${key} ${file}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:39:51.547" level="INFO">Running command 'ozone sh key put  /vol12186/ecbucket/dir/2mb /tmp/2mb 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:39:57.153" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:39:57.153" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:39:51.545" endtime="20231129 08:39:57.153"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:39:57.154" level="INFO"/>
<status status="PASS" starttime="20231129 08:39:57.153" endtime="20231129 08:39:57.154"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:39:57.154" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:39:57.154" endtime="20231129 08:39:57.154"/>
</kw>
<status status="PASS" starttime="20231129 08:39:51.545" endtime="20231129 08:39:57.154"/>
</kw>
<msg timestamp="20231129 08:39:57.154" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:39:51.545" endtime="20231129 08:39:57.155"/>
</kw>
<msg timestamp="20231129 08:39:57.155" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:39:51.544" endtime="20231129 08:39:57.155"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:39:57.155" endtime="20231129 08:39:57.155"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Uploaded ${file} to ${key}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:39:57.155" level="INFO">Uploaded /tmp/2mb to /vol12186/ecbucket/dir/2mb</msg>
<status status="PASS" starttime="20231129 08:39:57.155" endtime="20231129 08:39:57.155"/>
</kw>
<status status="PASS" starttime="20231129 08:39:51.543" endtime="20231129 08:39:57.155"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231129 08:39:57.157" level="INFO">${postfix} = 39618</msg>
<status status="PASS" starttime="20231129 08:39:57.157" endtime="20231129 08:39:57.157"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:39:57.157" level="INFO">${tmpfile} = /tmp/tempkey-39618</msg>
<status status="PASS" starttime="20231129 08:39:57.157" endtime="20231129 08:39:57.157"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:39:57.160" level="INFO">Running command 'ozone sh key get /vol12186/ecbucket/dir/2mb /tmp/tempkey-39618 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:40:02.310" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:40:02.310" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:39:57.158" endtime="20231129 08:40:02.310"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:40:02.310" level="INFO"/>
<status status="PASS" starttime="20231129 08:40:02.310" endtime="20231129 08:40:02.310"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:40:02.311" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:40:02.311" endtime="20231129 08:40:02.311"/>
</kw>
<status status="PASS" starttime="20231129 08:39:57.158" endtime="20231129 08:40:02.311"/>
</kw>
<msg timestamp="20231129 08:40:02.311" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:39:57.158" endtime="20231129 08:40:02.311"/>
</kw>
<status status="PASS" starttime="20231129 08:39:57.157" endtime="20231129 08:40:02.311"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20231129 08:40:02.313" level="INFO">Running command 'diff -q /tmp/2mb /tmp/tempkey-39618 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:40:02.315" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20231129 08:40:02.311" endtime="20231129 08:40:02.315"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:40:02.318" level="INFO">Running command 'rm -f /tmp/tempkey-39618 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:40:02.320" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:40:02.320" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:40:02.317" endtime="20231129 08:40:02.320"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:40:02.320" level="INFO"/>
<status status="PASS" starttime="20231129 08:40:02.320" endtime="20231129 08:40:02.320"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:40:02.321" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:40:02.321" endtime="20231129 08:40:02.321"/>
</kw>
<status status="PASS" starttime="20231129 08:40:02.317" endtime="20231129 08:40:02.321"/>
</kw>
<msg timestamp="20231129 08:40:02.321" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:40:02.316" endtime="20231129 08:40:02.321"/>
</kw>
<status status="PASS" starttime="20231129 08:40:02.316" endtime="20231129 08:40:02.321"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20231129 08:40:02.322" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20231129 08:40:02.321" endtime="20231129 08:40:02.322"/>
</kw>
<msg timestamp="20231129 08:40:02.322" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20231129 08:39:57.156" endtime="20231129 08:40:02.322"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20231129 08:40:02.322" endtime="20231129 08:40:02.322"/>
</kw>
<status status="PASS" starttime="20231129 08:39:57.156" endtime="20231129 08:40:02.322"/>
</kw>
<kw name="Verify Key EC Replication Config" library="shell">
<arg>${key}</arg>
<arg>RS</arg>
<arg>3</arg>
<arg>2</arg>
<arg>1048576</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${key} | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:40:02.325" level="INFO">Running command 'ozone sh key info /vol12186/ecbucket/dir/2mb | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:40:06.269" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:40:06.269" level="INFO">${output} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20231129 08:40:02.324" endtime="20231129 08:40:06.269"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:40:06.270" level="INFO">EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20231129 08:40:06.270" endtime="20231129 08:40:06.270"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:40:06.271" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:40:06.270" endtime="20231129 08:40:06.271"/>
</kw>
<status status="PASS" starttime="20231129 08:40:02.324" endtime="20231129 08:40:06.271"/>
</kw>
<msg timestamp="20231129 08:40:06.271" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:40:02.324" endtime="20231129 08:40:06.271"/>
</kw>
<msg timestamp="20231129 08:40:06.271" level="INFO">${result} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20231129 08:40:02.323" endtime="20231129 08:40:06.271"/>
</kw>
<kw name="Verify EC Replication Config" library="shell">
<arg>${result}</arg>
<arg>${encoding}</arg>
<arg>${data}</arg>
<arg>${parity}</arg>
<arg>${chunksize}</arg>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)EC$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:40:06.272" endtime="20231129 08:40:06.272"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${encoding}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:40:06.272" endtime="20231129 08:40:06.273"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${data}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:40:06.273" endtime="20231129 08:40:06.273"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${parity}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:40:06.273" endtime="20231129 08:40:06.273"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${chunksize}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:40:06.274" endtime="20231129 08:40:06.274"/>
</kw>
<status status="PASS" starttime="20231129 08:40:06.271" endtime="20231129 08:40:06.274"/>
</kw>
<status status="PASS" starttime="20231129 08:40:02.323" endtime="20231129 08:40:06.274"/>
</kw>
<kw name="Verify Key EC Replication Config" library="shell">
<arg>${dir}</arg>
<arg>RS</arg>
<arg>3</arg>
<arg>2</arg>
<arg>1048576</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${key} | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:40:06.277" level="INFO">Running command 'ozone sh key info /vol12186/ecbucket/dir | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:40:10.363" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:40:10.364" level="INFO">${output} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20231129 08:40:06.275" endtime="20231129 08:40:10.364"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:40:10.364" level="INFO">EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20231129 08:40:10.364" endtime="20231129 08:40:10.364"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:40:10.365" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:40:10.365" endtime="20231129 08:40:10.365"/>
</kw>
<status status="PASS" starttime="20231129 08:40:06.275" endtime="20231129 08:40:10.365"/>
</kw>
<msg timestamp="20231129 08:40:10.365" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:40:06.275" endtime="20231129 08:40:10.365"/>
</kw>
<msg timestamp="20231129 08:40:10.366" level="INFO">${result} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20231129 08:40:06.274" endtime="20231129 08:40:10.366"/>
</kw>
<kw name="Verify EC Replication Config" library="shell">
<arg>${result}</arg>
<arg>${encoding}</arg>
<arg>${data}</arg>
<arg>${parity}</arg>
<arg>${chunksize}</arg>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)EC$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:40:10.366" endtime="20231129 08:40:10.367"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${encoding}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:40:10.367" endtime="20231129 08:40:10.367"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${data}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:40:10.367" endtime="20231129 08:40:10.367"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${parity}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:40:10.367" endtime="20231129 08:40:10.368"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${chunksize}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:40:10.368" endtime="20231129 08:40:10.368"/>
</kw>
<status status="PASS" starttime="20231129 08:40:10.366" endtime="20231129 08:40:10.368"/>
</kw>
<status status="PASS" starttime="20231129 08:40:06.274" endtime="20231129 08:40:10.368"/>
</kw>
<status status="PASS" starttime="20231129 08:39:51.542" endtime="20231129 08:40:10.368"/>
</kw>
<status status="PASS" starttime="20231129 08:39:51.541" endtime="20231129 08:40:10.368"/>
</test>
<test id="s1-s2-t4" name="Create 3MB Key In EC Bucket" line="81">
<kw name="Create Key In EC Bucket">
<arg>3mb</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${dir}</var>
<arg>/${VOLUME}/ecbucket/dir</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:40:10.370" level="INFO">${dir} = /vol12186/ecbucket/dir</msg>
<status status="PASS" starttime="20231129 08:40:10.370" endtime="20231129 08:40:10.370"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${dir}/${size}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:40:10.370" level="INFO">${key} = /vol12186/ecbucket/dir/3mb</msg>
<status status="PASS" starttime="20231129 08:40:10.370" endtime="20231129 08:40:10.370"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${file}</var>
<arg>/tmp/${size}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:40:10.371" level="INFO">${file} = /tmp/3mb</msg>
<status status="PASS" starttime="20231129 08:40:10.370" endtime="20231129 08:40:10.371"/>
</kw>
<kw name="Create Key" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put ${args} ${key} ${file}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:40:10.375" level="INFO">Running command 'ozone sh key put  /vol12186/ecbucket/dir/3mb /tmp/3mb 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:40:15.809" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:40:15.809" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:40:10.373" endtime="20231129 08:40:15.809"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:40:15.809" level="INFO"/>
<status status="PASS" starttime="20231129 08:40:15.809" endtime="20231129 08:40:15.810"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:40:15.810" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:40:15.810" endtime="20231129 08:40:15.810"/>
</kw>
<status status="PASS" starttime="20231129 08:40:10.373" endtime="20231129 08:40:15.810"/>
</kw>
<msg timestamp="20231129 08:40:15.810" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:40:10.372" endtime="20231129 08:40:15.810"/>
</kw>
<msg timestamp="20231129 08:40:15.810" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:40:10.372" endtime="20231129 08:40:15.810"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:40:15.811" endtime="20231129 08:40:15.811"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Uploaded ${file} to ${key}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:40:15.811" level="INFO">Uploaded /tmp/3mb to /vol12186/ecbucket/dir/3mb</msg>
<status status="PASS" starttime="20231129 08:40:15.811" endtime="20231129 08:40:15.811"/>
</kw>
<status status="PASS" starttime="20231129 08:40:10.371" endtime="20231129 08:40:15.811"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231129 08:40:15.813" level="INFO">${postfix} = 54073</msg>
<status status="PASS" starttime="20231129 08:40:15.812" endtime="20231129 08:40:15.813"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:40:15.813" level="INFO">${tmpfile} = /tmp/tempkey-54073</msg>
<status status="PASS" starttime="20231129 08:40:15.813" endtime="20231129 08:40:15.813"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:40:15.816" level="INFO">Running command 'ozone sh key get /vol12186/ecbucket/dir/3mb /tmp/tempkey-54073 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:40:21.026" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:40:21.026" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:40:15.814" endtime="20231129 08:40:21.026"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:40:21.027" level="INFO"/>
<status status="PASS" starttime="20231129 08:40:21.026" endtime="20231129 08:40:21.027"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:40:21.027" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:40:21.027" endtime="20231129 08:40:21.027"/>
</kw>
<status status="PASS" starttime="20231129 08:40:15.814" endtime="20231129 08:40:21.027"/>
</kw>
<msg timestamp="20231129 08:40:21.027" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:40:15.814" endtime="20231129 08:40:21.027"/>
</kw>
<status status="PASS" starttime="20231129 08:40:15.813" endtime="20231129 08:40:21.028"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20231129 08:40:21.029" level="INFO">Running command 'diff -q /tmp/3mb /tmp/tempkey-54073 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:40:21.032" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20231129 08:40:21.028" endtime="20231129 08:40:21.032"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:40:21.035" level="INFO">Running command 'rm -f /tmp/tempkey-54073 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:40:21.036" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:40:21.036" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:40:21.034" endtime="20231129 08:40:21.037"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:40:21.037" level="INFO"/>
<status status="PASS" starttime="20231129 08:40:21.037" endtime="20231129 08:40:21.037"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:40:21.037" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:40:21.037" endtime="20231129 08:40:21.038"/>
</kw>
<status status="PASS" starttime="20231129 08:40:21.033" endtime="20231129 08:40:21.038"/>
</kw>
<msg timestamp="20231129 08:40:21.038" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:40:21.033" endtime="20231129 08:40:21.038"/>
</kw>
<status status="PASS" starttime="20231129 08:40:21.032" endtime="20231129 08:40:21.038"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20231129 08:40:21.038" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20231129 08:40:21.038" endtime="20231129 08:40:21.038"/>
</kw>
<msg timestamp="20231129 08:40:21.039" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20231129 08:40:15.812" endtime="20231129 08:40:21.039"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20231129 08:40:21.039" endtime="20231129 08:40:21.039"/>
</kw>
<status status="PASS" starttime="20231129 08:40:15.811" endtime="20231129 08:40:21.039"/>
</kw>
<kw name="Verify Key EC Replication Config" library="shell">
<arg>${key}</arg>
<arg>RS</arg>
<arg>3</arg>
<arg>2</arg>
<arg>1048576</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${key} | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:40:21.042" level="INFO">Running command 'ozone sh key info /vol12186/ecbucket/dir/3mb | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:40:25.012" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:40:25.013" level="INFO">${output} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20231129 08:40:21.041" endtime="20231129 08:40:25.013"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:40:25.013" level="INFO">EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20231129 08:40:25.013" endtime="20231129 08:40:25.013"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:40:25.014" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:40:25.014" endtime="20231129 08:40:25.014"/>
</kw>
<status status="PASS" starttime="20231129 08:40:21.040" endtime="20231129 08:40:25.014"/>
</kw>
<msg timestamp="20231129 08:40:25.014" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:40:21.040" endtime="20231129 08:40:25.014"/>
</kw>
<msg timestamp="20231129 08:40:25.014" level="INFO">${result} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20231129 08:40:21.040" endtime="20231129 08:40:25.014"/>
</kw>
<kw name="Verify EC Replication Config" library="shell">
<arg>${result}</arg>
<arg>${encoding}</arg>
<arg>${data}</arg>
<arg>${parity}</arg>
<arg>${chunksize}</arg>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)EC$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:40:25.015" endtime="20231129 08:40:25.015"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${encoding}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:40:25.015" endtime="20231129 08:40:25.016"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${data}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:40:25.016" endtime="20231129 08:40:25.016"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${parity}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:40:25.016" endtime="20231129 08:40:25.016"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${chunksize}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:40:25.017" endtime="20231129 08:40:25.017"/>
</kw>
<status status="PASS" starttime="20231129 08:40:25.014" endtime="20231129 08:40:25.017"/>
</kw>
<status status="PASS" starttime="20231129 08:40:21.039" endtime="20231129 08:40:25.017"/>
</kw>
<kw name="Verify Key EC Replication Config" library="shell">
<arg>${dir}</arg>
<arg>RS</arg>
<arg>3</arg>
<arg>2</arg>
<arg>1048576</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${key} | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:40:25.020" level="INFO">Running command 'ozone sh key info /vol12186/ecbucket/dir | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:40:28.941" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:40:28.941" level="INFO">${output} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20231129 08:40:25.018" endtime="20231129 08:40:28.941"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:40:28.942" level="INFO">EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20231129 08:40:28.941" endtime="20231129 08:40:28.942"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:40:28.942" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:40:28.942" endtime="20231129 08:40:28.942"/>
</kw>
<status status="PASS" starttime="20231129 08:40:25.018" endtime="20231129 08:40:28.943"/>
</kw>
<msg timestamp="20231129 08:40:28.943" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:40:25.018" endtime="20231129 08:40:28.943"/>
</kw>
<msg timestamp="20231129 08:40:28.943" level="INFO">${result} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20231129 08:40:25.017" endtime="20231129 08:40:28.943"/>
</kw>
<kw name="Verify EC Replication Config" library="shell">
<arg>${result}</arg>
<arg>${encoding}</arg>
<arg>${data}</arg>
<arg>${parity}</arg>
<arg>${chunksize}</arg>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)EC$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:40:28.944" endtime="20231129 08:40:28.944"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${encoding}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:40:28.944" endtime="20231129 08:40:28.944"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${data}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:40:28.944" endtime="20231129 08:40:28.945"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${parity}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:40:28.945" endtime="20231129 08:40:28.945"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${chunksize}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:40:28.945" endtime="20231129 08:40:28.945"/>
</kw>
<status status="PASS" starttime="20231129 08:40:28.943" endtime="20231129 08:40:28.946"/>
</kw>
<status status="PASS" starttime="20231129 08:40:25.017" endtime="20231129 08:40:28.946"/>
</kw>
<status status="PASS" starttime="20231129 08:40:10.369" endtime="20231129 08:40:28.946"/>
</kw>
<status status="PASS" starttime="20231129 08:40:10.369" endtime="20231129 08:40:28.946"/>
</test>
<test id="s1-s2-t5" name="Create 100MB Key In EC Bucket" line="84">
<kw name="Create Key In EC Bucket">
<arg>100mb</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${dir}</var>
<arg>/${VOLUME}/ecbucket/dir</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:40:28.947" level="INFO">${dir} = /vol12186/ecbucket/dir</msg>
<status status="PASS" starttime="20231129 08:40:28.947" endtime="20231129 08:40:28.947"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${dir}/${size}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:40:28.948" level="INFO">${key} = /vol12186/ecbucket/dir/100mb</msg>
<status status="PASS" starttime="20231129 08:40:28.947" endtime="20231129 08:40:28.948"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${file}</var>
<arg>/tmp/${size}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:40:28.948" level="INFO">${file} = /tmp/100mb</msg>
<status status="PASS" starttime="20231129 08:40:28.948" endtime="20231129 08:40:28.948"/>
</kw>
<kw name="Create Key" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put ${args} ${key} ${file}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:40:28.952" level="INFO">Running command 'ozone sh key put  /vol12186/ecbucket/dir/100mb /tmp/100mb 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:40:37.234" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:40:37.234" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:40:28.951" endtime="20231129 08:40:37.234"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:40:37.235" level="INFO"/>
<status status="PASS" starttime="20231129 08:40:37.235" endtime="20231129 08:40:37.235"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:40:37.235" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:40:37.235" endtime="20231129 08:40:37.236"/>
</kw>
<status status="PASS" starttime="20231129 08:40:28.950" endtime="20231129 08:40:37.236"/>
</kw>
<msg timestamp="20231129 08:40:37.236" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:40:28.950" endtime="20231129 08:40:37.236"/>
</kw>
<msg timestamp="20231129 08:40:37.236" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:40:28.949" endtime="20231129 08:40:37.236"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:40:37.236" endtime="20231129 08:40:37.236"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Uploaded ${file} to ${key}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:40:37.237" level="INFO">Uploaded /tmp/100mb to /vol12186/ecbucket/dir/100mb</msg>
<status status="PASS" starttime="20231129 08:40:37.236" endtime="20231129 08:40:37.237"/>
</kw>
<status status="PASS" starttime="20231129 08:40:28.948" endtime="20231129 08:40:37.237"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231129 08:40:37.238" level="INFO">${postfix} = 92596</msg>
<status status="PASS" starttime="20231129 08:40:37.238" endtime="20231129 08:40:37.238"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:40:37.239" level="INFO">${tmpfile} = /tmp/tempkey-92596</msg>
<status status="PASS" starttime="20231129 08:40:37.238" endtime="20231129 08:40:37.239"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:40:37.241" level="INFO">Running command 'ozone sh key get /vol12186/ecbucket/dir/100mb /tmp/tempkey-92596 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:40:43.619" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:40:43.619" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:40:37.240" endtime="20231129 08:40:43.619"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:40:43.619" level="INFO"/>
<status status="PASS" starttime="20231129 08:40:43.619" endtime="20231129 08:40:43.620"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:40:43.620" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:40:43.620" endtime="20231129 08:40:43.620"/>
</kw>
<status status="PASS" starttime="20231129 08:40:37.239" endtime="20231129 08:40:43.620"/>
</kw>
<msg timestamp="20231129 08:40:43.620" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:40:37.239" endtime="20231129 08:40:43.620"/>
</kw>
<status status="PASS" starttime="20231129 08:40:37.239" endtime="20231129 08:40:43.620"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20231129 08:40:43.622" level="INFO">Running command 'diff -q /tmp/100mb /tmp/tempkey-92596 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:40:43.663" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20231129 08:40:43.621" endtime="20231129 08:40:43.663"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:40:43.666" level="INFO">Running command 'rm -f /tmp/tempkey-92596 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:40:43.678" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:40:43.678" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:40:43.664" endtime="20231129 08:40:43.678"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:40:43.678" level="INFO"/>
<status status="PASS" starttime="20231129 08:40:43.678" endtime="20231129 08:40:43.678"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:40:43.679" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:40:43.678" endtime="20231129 08:40:43.679"/>
</kw>
<status status="PASS" starttime="20231129 08:40:43.664" endtime="20231129 08:40:43.679"/>
</kw>
<msg timestamp="20231129 08:40:43.679" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:40:43.664" endtime="20231129 08:40:43.679"/>
</kw>
<status status="PASS" starttime="20231129 08:40:43.663" endtime="20231129 08:40:43.679"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20231129 08:40:43.680" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20231129 08:40:43.679" endtime="20231129 08:40:43.680"/>
</kw>
<msg timestamp="20231129 08:40:43.680" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20231129 08:40:37.237" endtime="20231129 08:40:43.680"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20231129 08:40:43.680" endtime="20231129 08:40:43.680"/>
</kw>
<status status="PASS" starttime="20231129 08:40:37.237" endtime="20231129 08:40:43.680"/>
</kw>
<kw name="Verify Key EC Replication Config" library="shell">
<arg>${key}</arg>
<arg>RS</arg>
<arg>3</arg>
<arg>2</arg>
<arg>1048576</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${key} | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:40:43.683" level="INFO">Running command 'ozone sh key info /vol12186/ecbucket/dir/100mb | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:40:47.591" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:40:47.591" level="INFO">${output} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20231129 08:40:43.682" endtime="20231129 08:40:47.592"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:40:47.592" level="INFO">EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20231129 08:40:47.592" endtime="20231129 08:40:47.592"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:40:47.593" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:40:47.592" endtime="20231129 08:40:47.593"/>
</kw>
<status status="PASS" starttime="20231129 08:40:43.681" endtime="20231129 08:40:47.593"/>
</kw>
<msg timestamp="20231129 08:40:47.593" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:40:43.681" endtime="20231129 08:40:47.593"/>
</kw>
<msg timestamp="20231129 08:40:47.593" level="INFO">${result} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20231129 08:40:43.681" endtime="20231129 08:40:47.593"/>
</kw>
<kw name="Verify EC Replication Config" library="shell">
<arg>${result}</arg>
<arg>${encoding}</arg>
<arg>${data}</arg>
<arg>${parity}</arg>
<arg>${chunksize}</arg>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)EC$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:40:47.594" endtime="20231129 08:40:47.594"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${encoding}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:40:47.594" endtime="20231129 08:40:47.595"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${data}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:40:47.595" endtime="20231129 08:40:47.595"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${parity}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:40:47.595" endtime="20231129 08:40:47.595"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${chunksize}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:40:47.596" endtime="20231129 08:40:47.596"/>
</kw>
<status status="PASS" starttime="20231129 08:40:47.594" endtime="20231129 08:40:47.596"/>
</kw>
<status status="PASS" starttime="20231129 08:40:43.680" endtime="20231129 08:40:47.596"/>
</kw>
<kw name="Verify Key EC Replication Config" library="shell">
<arg>${dir}</arg>
<arg>RS</arg>
<arg>3</arg>
<arg>2</arg>
<arg>1048576</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${key} | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:40:47.599" level="INFO">Running command 'ozone sh key info /vol12186/ecbucket/dir | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:40:51.435" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:40:51.435" level="INFO">${output} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20231129 08:40:47.598" endtime="20231129 08:40:51.435"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:40:51.436" level="INFO">EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20231129 08:40:51.435" endtime="20231129 08:40:51.436"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:40:51.436" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:40:51.436" endtime="20231129 08:40:51.436"/>
</kw>
<status status="PASS" starttime="20231129 08:40:47.597" endtime="20231129 08:40:51.436"/>
</kw>
<msg timestamp="20231129 08:40:51.436" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:40:47.597" endtime="20231129 08:40:51.437"/>
</kw>
<msg timestamp="20231129 08:40:51.437" level="INFO">${result} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20231129 08:40:47.596" endtime="20231129 08:40:51.437"/>
</kw>
<kw name="Verify EC Replication Config" library="shell">
<arg>${result}</arg>
<arg>${encoding}</arg>
<arg>${data}</arg>
<arg>${parity}</arg>
<arg>${chunksize}</arg>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)EC$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:40:51.438" endtime="20231129 08:40:51.438"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${encoding}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:40:51.438" endtime="20231129 08:40:51.438"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${data}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:40:51.438" endtime="20231129 08:40:51.438"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${parity}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:40:51.439" endtime="20231129 08:40:51.439"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${chunksize}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:40:51.439" endtime="20231129 08:40:51.439"/>
</kw>
<status status="PASS" starttime="20231129 08:40:51.437" endtime="20231129 08:40:51.439"/>
</kw>
<status status="PASS" starttime="20231129 08:40:47.596" endtime="20231129 08:40:51.439"/>
</kw>
<status status="PASS" starttime="20231129 08:40:28.947" endtime="20231129 08:40:51.439"/>
</kw>
<status status="PASS" starttime="20231129 08:40:28.946" endtime="20231129 08:40:51.440"/>
</test>
<test id="s1-s2-t6" name="Create Key in Default Bucket" line="87">
<kw name="Set Variable" library="BuiltIn">
<var>${size}</var>
<arg>1mb</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:40:51.441" level="INFO">${size} = 1mb</msg>
<status status="PASS" starttime="20231129 08:40:51.441" endtime="20231129 08:40:51.441"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${dir}</var>
<arg>/${VOLUME}/default/dir</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:40:51.441" level="INFO">${dir} = /vol12186/default/dir</msg>
<status status="PASS" starttime="20231129 08:40:51.441" endtime="20231129 08:40:51.441"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${dir}/${size}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:40:51.442" level="INFO">${key} = /vol12186/default/dir/1mb</msg>
<status status="PASS" starttime="20231129 08:40:51.441" endtime="20231129 08:40:51.442"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${file}</var>
<arg>/tmp/${size}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:40:51.442" level="INFO">${file} = /tmp/1mb</msg>
<status status="PASS" starttime="20231129 08:40:51.442" endtime="20231129 08:40:51.442"/>
</kw>
<kw name="Create Key" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put ${args} ${key} ${file}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:40:51.446" level="INFO">Running command 'ozone sh key put  /vol12186/default/dir/1mb /tmp/1mb 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:40:57.093" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:40:57.094" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:40:51.444" endtime="20231129 08:40:57.094"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:40:57.094" level="INFO"/>
<status status="PASS" starttime="20231129 08:40:57.094" endtime="20231129 08:40:57.094"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:40:57.095" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:40:57.095" endtime="20231129 08:40:57.095"/>
</kw>
<status status="PASS" starttime="20231129 08:40:51.444" endtime="20231129 08:40:57.095"/>
</kw>
<msg timestamp="20231129 08:40:57.095" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:40:51.443" endtime="20231129 08:40:57.095"/>
</kw>
<msg timestamp="20231129 08:40:57.095" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:40:51.443" endtime="20231129 08:40:57.095"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:40:57.095" endtime="20231129 08:40:57.096"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Uploaded ${file} to ${key}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:40:57.096" level="INFO">Uploaded /tmp/1mb to /vol12186/default/dir/1mb</msg>
<status status="PASS" starttime="20231129 08:40:57.096" endtime="20231129 08:40:57.096"/>
</kw>
<status status="PASS" starttime="20231129 08:40:51.442" endtime="20231129 08:40:57.096"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231129 08:40:57.098" level="INFO">${postfix} = 89394</msg>
<status status="PASS" starttime="20231129 08:40:57.097" endtime="20231129 08:40:57.098"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:40:57.098" level="INFO">${tmpfile} = /tmp/tempkey-89394</msg>
<status status="PASS" starttime="20231129 08:40:57.098" endtime="20231129 08:40:57.098"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:40:57.100" level="INFO">Running command 'ozone sh key get /vol12186/default/dir/1mb /tmp/tempkey-89394 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:41:02.351" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:41:02.351" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:40:57.099" endtime="20231129 08:41:02.351"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:41:02.352" level="INFO"/>
<status status="PASS" starttime="20231129 08:41:02.351" endtime="20231129 08:41:02.352"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:41:02.352" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:41:02.352" endtime="20231129 08:41:02.352"/>
</kw>
<status status="PASS" starttime="20231129 08:40:57.099" endtime="20231129 08:41:02.353"/>
</kw>
<msg timestamp="20231129 08:41:02.353" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:40:57.098" endtime="20231129 08:41:02.353"/>
</kw>
<status status="PASS" starttime="20231129 08:40:57.098" endtime="20231129 08:41:02.353"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20231129 08:41:02.354" level="INFO">Running command 'diff -q /tmp/1mb /tmp/tempkey-89394 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:41:02.357" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20231129 08:41:02.353" endtime="20231129 08:41:02.357"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:41:02.359" level="INFO">Running command 'rm -f /tmp/tempkey-89394 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:41:02.361" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:41:02.361" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:41:02.358" endtime="20231129 08:41:02.361"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:41:02.362" level="INFO"/>
<status status="PASS" starttime="20231129 08:41:02.361" endtime="20231129 08:41:02.362"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:41:02.362" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:41:02.362" endtime="20231129 08:41:02.362"/>
</kw>
<status status="PASS" starttime="20231129 08:41:02.358" endtime="20231129 08:41:02.362"/>
</kw>
<msg timestamp="20231129 08:41:02.362" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:41:02.357" endtime="20231129 08:41:02.362"/>
</kw>
<status status="PASS" starttime="20231129 08:41:02.357" endtime="20231129 08:41:02.362"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20231129 08:41:02.363" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20231129 08:41:02.363" endtime="20231129 08:41:02.363"/>
</kw>
<msg timestamp="20231129 08:41:02.363" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20231129 08:40:57.097" endtime="20231129 08:41:02.363"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20231129 08:41:02.363" endtime="20231129 08:41:02.364"/>
</kw>
<status status="PASS" starttime="20231129 08:40:57.096" endtime="20231129 08:41:02.364"/>
</kw>
<kw name="Verify Key Replica Replication Config" library="shell">
<arg>${key}</arg>
<arg>RATIS</arg>
<arg>THREE</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${key} | jq -r '.replicationConfig.replicationType, .replicationConfig.replicationFactor'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:41:02.367" level="INFO">Running command 'ozone sh key info /vol12186/default/dir/1mb | jq -r '.replicationConfig.replicationType, .replicationConfig.replicationFactor' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:41:06.157" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:41:06.158" level="INFO">${output} = RATIS
THREE</msg>
<status status="PASS" starttime="20231129 08:41:02.365" endtime="20231129 08:41:06.158"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:41:06.158" level="INFO">RATIS
THREE</msg>
<status status="PASS" starttime="20231129 08:41:06.158" endtime="20231129 08:41:06.158"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:41:06.159" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:41:06.159" endtime="20231129 08:41:06.159"/>
</kw>
<status status="PASS" starttime="20231129 08:41:02.365" endtime="20231129 08:41:06.159"/>
</kw>
<msg timestamp="20231129 08:41:06.159" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:41:02.365" endtime="20231129 08:41:06.159"/>
</kw>
<msg timestamp="20231129 08:41:06.159" level="INFO">${result} = RATIS
THREE</msg>
<status status="PASS" starttime="20231129 08:41:02.364" endtime="20231129 08:41:06.159"/>
</kw>
<kw name="Verify Replica Replication Config" library="shell">
<arg>${result}</arg>
<arg>${type}</arg>
<arg>${factor}</arg>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${type}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:41:06.160" endtime="20231129 08:41:06.160"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${factor}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:41:06.161" endtime="20231129 08:41:06.161"/>
</kw>
<status status="PASS" starttime="20231129 08:41:06.160" endtime="20231129 08:41:06.161"/>
</kw>
<status status="PASS" starttime="20231129 08:41:02.364" endtime="20231129 08:41:06.161"/>
</kw>
<kw name="Verify Key Replica Replication Config" library="shell">
<arg>${dir}</arg>
<arg>RATIS</arg>
<arg>THREE</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${key} | jq -r '.replicationConfig.replicationType, .replicationConfig.replicationFactor'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:41:06.164" level="INFO">Running command 'ozone sh key info /vol12186/default/dir | jq -r '.replicationConfig.replicationType, .replicationConfig.replicationFactor' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:41:10.231" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:41:10.231" level="INFO">${output} = RATIS
THREE</msg>
<status status="PASS" starttime="20231129 08:41:06.162" endtime="20231129 08:41:10.231"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:41:10.232" level="INFO">RATIS
THREE</msg>
<status status="PASS" starttime="20231129 08:41:10.231" endtime="20231129 08:41:10.232"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:41:10.232" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:41:10.232" endtime="20231129 08:41:10.232"/>
</kw>
<status status="PASS" starttime="20231129 08:41:06.162" endtime="20231129 08:41:10.232"/>
</kw>
<msg timestamp="20231129 08:41:10.232" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:41:06.162" endtime="20231129 08:41:10.233"/>
</kw>
<msg timestamp="20231129 08:41:10.233" level="INFO">${result} = RATIS
THREE</msg>
<status status="PASS" starttime="20231129 08:41:06.161" endtime="20231129 08:41:10.233"/>
</kw>
<kw name="Verify Replica Replication Config" library="shell">
<arg>${result}</arg>
<arg>${type}</arg>
<arg>${factor}</arg>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${type}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:41:10.233" endtime="20231129 08:41:10.234"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${factor}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:41:10.234" endtime="20231129 08:41:10.234"/>
</kw>
<status status="PASS" starttime="20231129 08:41:10.233" endtime="20231129 08:41:10.234"/>
</kw>
<status status="PASS" starttime="20231129 08:41:06.161" endtime="20231129 08:41:10.234"/>
</kw>
<status status="PASS" starttime="20231129 08:40:51.440" endtime="20231129 08:41:10.234"/>
</test>
<test id="s1-s2-t7" name="Create Key in Ratis Bucket" line="97">
<kw name="Set Variable" library="BuiltIn">
<var>${size}</var>
<arg>1mb</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:41:10.236" level="INFO">${size} = 1mb</msg>
<status status="PASS" starttime="20231129 08:41:10.235" endtime="20231129 08:41:10.236"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${dir}</var>
<arg>/${VOLUME}/ratis/dir</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:41:10.236" level="INFO">${dir} = /vol12186/ratis/dir</msg>
<status status="PASS" starttime="20231129 08:41:10.236" endtime="20231129 08:41:10.236"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${dir}/${size}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:41:10.237" level="INFO">${key} = /vol12186/ratis/dir/1mb</msg>
<status status="PASS" starttime="20231129 08:41:10.236" endtime="20231129 08:41:10.237"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${file}</var>
<arg>/tmp/${size}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:41:10.237" level="INFO">${file} = /tmp/1mb</msg>
<status status="PASS" starttime="20231129 08:41:10.237" endtime="20231129 08:41:10.237"/>
</kw>
<kw name="Create Key" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put ${args} ${key} ${file}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:41:10.241" level="INFO">Running command 'ozone sh key put  /vol12186/ratis/dir/1mb /tmp/1mb 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:41:15.477" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:41:15.477" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:41:10.239" endtime="20231129 08:41:15.477"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:41:15.478" level="INFO"/>
<status status="PASS" starttime="20231129 08:41:15.477" endtime="20231129 08:41:15.478"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:41:15.478" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:41:15.478" endtime="20231129 08:41:15.478"/>
</kw>
<status status="PASS" starttime="20231129 08:41:10.239" endtime="20231129 08:41:15.478"/>
</kw>
<msg timestamp="20231129 08:41:15.479" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:41:10.238" endtime="20231129 08:41:15.479"/>
</kw>
<msg timestamp="20231129 08:41:15.479" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:41:10.238" endtime="20231129 08:41:15.479"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:41:15.479" endtime="20231129 08:41:15.479"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Uploaded ${file} to ${key}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:41:15.479" level="INFO">Uploaded /tmp/1mb to /vol12186/ratis/dir/1mb</msg>
<status status="PASS" starttime="20231129 08:41:15.479" endtime="20231129 08:41:15.480"/>
</kw>
<status status="PASS" starttime="20231129 08:41:10.237" endtime="20231129 08:41:15.480"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231129 08:41:15.490" level="INFO">${postfix} = 55870</msg>
<status status="PASS" starttime="20231129 08:41:15.481" endtime="20231129 08:41:15.490"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:41:15.490" level="INFO">${tmpfile} = /tmp/tempkey-55870</msg>
<status status="PASS" starttime="20231129 08:41:15.490" endtime="20231129 08:41:15.490"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:41:15.493" level="INFO">Running command 'ozone sh key get /vol12186/ratis/dir/1mb /tmp/tempkey-55870 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:41:20.428" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:41:20.428" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:41:15.492" endtime="20231129 08:41:20.428"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:41:20.429" level="INFO"/>
<status status="PASS" starttime="20231129 08:41:20.428" endtime="20231129 08:41:20.429"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:41:20.429" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:41:20.429" endtime="20231129 08:41:20.429"/>
</kw>
<status status="PASS" starttime="20231129 08:41:15.491" endtime="20231129 08:41:20.429"/>
</kw>
<msg timestamp="20231129 08:41:20.430" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:41:15.491" endtime="20231129 08:41:20.430"/>
</kw>
<status status="PASS" starttime="20231129 08:41:15.490" endtime="20231129 08:41:20.430"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20231129 08:41:20.431" level="INFO">Running command 'diff -q /tmp/1mb /tmp/tempkey-55870 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:41:20.434" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20231129 08:41:20.430" endtime="20231129 08:41:20.434"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:41:20.436" level="INFO">Running command 'rm -f /tmp/tempkey-55870 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:41:20.438" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:41:20.438" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:41:20.435" endtime="20231129 08:41:20.438"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:41:20.438" level="INFO"/>
<status status="PASS" starttime="20231129 08:41:20.438" endtime="20231129 08:41:20.439"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:41:20.439" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:41:20.439" endtime="20231129 08:41:20.439"/>
</kw>
<status status="PASS" starttime="20231129 08:41:20.435" endtime="20231129 08:41:20.439"/>
</kw>
<msg timestamp="20231129 08:41:20.439" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:41:20.434" endtime="20231129 08:41:20.439"/>
</kw>
<status status="PASS" starttime="20231129 08:41:20.434" endtime="20231129 08:41:20.439"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20231129 08:41:20.440" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20231129 08:41:20.439" endtime="20231129 08:41:20.440"/>
</kw>
<msg timestamp="20231129 08:41:20.440" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20231129 08:41:15.480" endtime="20231129 08:41:20.440"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20231129 08:41:20.440" endtime="20231129 08:41:20.440"/>
</kw>
<status status="PASS" starttime="20231129 08:41:15.480" endtime="20231129 08:41:20.441"/>
</kw>
<kw name="Verify Key Replica Replication Config" library="shell">
<arg>${key}</arg>
<arg>RATIS</arg>
<arg>THREE</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${key} | jq -r '.replicationConfig.replicationType, .replicationConfig.replicationFactor'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:41:20.443" level="INFO">Running command 'ozone sh key info /vol12186/ratis/dir/1mb | jq -r '.replicationConfig.replicationType, .replicationConfig.replicationFactor' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:41:24.545" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:41:24.546" level="INFO">${output} = RATIS
THREE</msg>
<status status="PASS" starttime="20231129 08:41:20.442" endtime="20231129 08:41:24.546"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:41:24.546" level="INFO">RATIS
THREE</msg>
<status status="PASS" starttime="20231129 08:41:24.546" endtime="20231129 08:41:24.546"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:41:24.547" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:41:24.547" endtime="20231129 08:41:24.547"/>
</kw>
<status status="PASS" starttime="20231129 08:41:20.442" endtime="20231129 08:41:24.547"/>
</kw>
<msg timestamp="20231129 08:41:24.547" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:41:20.441" endtime="20231129 08:41:24.547"/>
</kw>
<msg timestamp="20231129 08:41:24.547" level="INFO">${result} = RATIS
THREE</msg>
<status status="PASS" starttime="20231129 08:41:20.441" endtime="20231129 08:41:24.547"/>
</kw>
<kw name="Verify Replica Replication Config" library="shell">
<arg>${result}</arg>
<arg>${type}</arg>
<arg>${factor}</arg>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${type}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:41:24.548" endtime="20231129 08:41:24.549"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${factor}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:41:24.549" endtime="20231129 08:41:24.549"/>
</kw>
<status status="PASS" starttime="20231129 08:41:24.548" endtime="20231129 08:41:24.549"/>
</kw>
<status status="PASS" starttime="20231129 08:41:20.441" endtime="20231129 08:41:24.549"/>
</kw>
<kw name="Verify Key Replica Replication Config" library="shell">
<arg>${dir}</arg>
<arg>RATIS</arg>
<arg>THREE</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${key} | jq -r '.replicationConfig.replicationType, .replicationConfig.replicationFactor'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:41:24.552" level="INFO">Running command 'ozone sh key info /vol12186/ratis/dir | jq -r '.replicationConfig.replicationType, .replicationConfig.replicationFactor' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:41:28.399" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:41:28.399" level="INFO">${output} = RATIS
THREE</msg>
<status status="PASS" starttime="20231129 08:41:24.551" endtime="20231129 08:41:28.399"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:41:28.400" level="INFO">RATIS
THREE</msg>
<status status="PASS" starttime="20231129 08:41:28.400" endtime="20231129 08:41:28.400"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:41:28.400" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:41:28.400" endtime="20231129 08:41:28.401"/>
</kw>
<status status="PASS" starttime="20231129 08:41:24.550" endtime="20231129 08:41:28.401"/>
</kw>
<msg timestamp="20231129 08:41:28.401" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:41:24.550" endtime="20231129 08:41:28.401"/>
</kw>
<msg timestamp="20231129 08:41:28.401" level="INFO">${result} = RATIS
THREE</msg>
<status status="PASS" starttime="20231129 08:41:24.550" endtime="20231129 08:41:28.401"/>
</kw>
<kw name="Verify Replica Replication Config" library="shell">
<arg>${result}</arg>
<arg>${type}</arg>
<arg>${factor}</arg>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${type}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:41:28.402" endtime="20231129 08:41:28.402"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${factor}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:41:28.402" endtime="20231129 08:41:28.402"/>
</kw>
<status status="PASS" starttime="20231129 08:41:28.401" endtime="20231129 08:41:28.402"/>
</kw>
<status status="PASS" starttime="20231129 08:41:24.549" endtime="20231129 08:41:28.403"/>
</kw>
<status status="PASS" starttime="20231129 08:41:10.235" endtime="20231129 08:41:28.403"/>
</test>
<test id="s1-s2-t8" name="Create Ratis Key In EC Bucket" line="107">
<kw name="Set Variable" library="BuiltIn">
<var>${size}</var>
<arg>1mb</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:41:28.404" level="INFO">${size} = 1mb</msg>
<status status="PASS" starttime="20231129 08:41:28.404" endtime="20231129 08:41:28.404"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${dir}</var>
<arg>/${VOLUME}/ecbucket/dir2</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:41:28.404" level="INFO">${dir} = /vol12186/ecbucket/dir2</msg>
<status status="PASS" starttime="20231129 08:41:28.404" endtime="20231129 08:41:28.404"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${dir}/${size}Ratis</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:41:28.405" level="INFO">${key} = /vol12186/ecbucket/dir2/1mbRatis</msg>
<status status="PASS" starttime="20231129 08:41:28.404" endtime="20231129 08:41:28.405"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${file}</var>
<arg>/tmp/${size}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:41:28.405" level="INFO">${file} = /tmp/1mb</msg>
<status status="PASS" starttime="20231129 08:41:28.405" endtime="20231129 08:41:28.405"/>
</kw>
<kw name="Create Key" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<arg>--replication=THREE --type=RATIS</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put ${args} ${key} ${file}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:41:28.408" level="INFO">Running command 'ozone sh key put --replication=THREE --type=RATIS /vol12186/ecbucket/dir2/1mbRatis /tmp/1mb 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:41:33.763" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:41:33.763" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:41:28.407" endtime="20231129 08:41:33.763"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:41:33.763" level="INFO"/>
<status status="PASS" starttime="20231129 08:41:33.763" endtime="20231129 08:41:33.763"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:41:33.764" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:41:33.764" endtime="20231129 08:41:33.764"/>
</kw>
<status status="PASS" starttime="20231129 08:41:28.406" endtime="20231129 08:41:33.764"/>
</kw>
<msg timestamp="20231129 08:41:33.764" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:41:28.406" endtime="20231129 08:41:33.764"/>
</kw>
<msg timestamp="20231129 08:41:33.765" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:41:28.406" endtime="20231129 08:41:33.765"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:41:33.765" endtime="20231129 08:41:33.765"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Uploaded ${file} to ${key}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:41:33.765" level="INFO">Uploaded /tmp/1mb to /vol12186/ecbucket/dir2/1mbRatis</msg>
<status status="PASS" starttime="20231129 08:41:33.765" endtime="20231129 08:41:33.765"/>
</kw>
<status status="PASS" starttime="20231129 08:41:28.405" endtime="20231129 08:41:33.765"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231129 08:41:33.767" level="INFO">${postfix} = 30507</msg>
<status status="PASS" starttime="20231129 08:41:33.767" endtime="20231129 08:41:33.767"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:41:33.767" level="INFO">${tmpfile} = /tmp/tempkey-30507</msg>
<status status="PASS" starttime="20231129 08:41:33.767" endtime="20231129 08:41:33.767"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:41:33.770" level="INFO">Running command 'ozone sh key get /vol12186/ecbucket/dir2/1mbRatis /tmp/tempkey-30507 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:41:38.919" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:41:38.919" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:41:33.768" endtime="20231129 08:41:38.919"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:41:38.920" level="INFO"/>
<status status="PASS" starttime="20231129 08:41:38.919" endtime="20231129 08:41:38.920"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:41:38.920" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:41:38.920" endtime="20231129 08:41:38.920"/>
</kw>
<status status="PASS" starttime="20231129 08:41:33.768" endtime="20231129 08:41:38.920"/>
</kw>
<msg timestamp="20231129 08:41:38.920" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:41:33.768" endtime="20231129 08:41:38.921"/>
</kw>
<status status="PASS" starttime="20231129 08:41:33.767" endtime="20231129 08:41:38.921"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20231129 08:41:38.922" level="INFO">Running command 'diff -q /tmp/1mb /tmp/tempkey-30507 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:41:38.924" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20231129 08:41:38.921" endtime="20231129 08:41:38.924"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:41:38.927" level="INFO">Running command 'rm -f /tmp/tempkey-30507 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:41:38.928" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:41:38.929" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:41:38.926" endtime="20231129 08:41:38.929"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:41:38.929" level="INFO"/>
<status status="PASS" starttime="20231129 08:41:38.929" endtime="20231129 08:41:38.929"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:41:38.930" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:41:38.929" endtime="20231129 08:41:38.930"/>
</kw>
<status status="PASS" starttime="20231129 08:41:38.925" endtime="20231129 08:41:38.930"/>
</kw>
<msg timestamp="20231129 08:41:38.930" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:41:38.925" endtime="20231129 08:41:38.930"/>
</kw>
<status status="PASS" starttime="20231129 08:41:38.924" endtime="20231129 08:41:38.930"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20231129 08:41:38.930" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20231129 08:41:38.930" endtime="20231129 08:41:38.931"/>
</kw>
<msg timestamp="20231129 08:41:38.931" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20231129 08:41:33.766" endtime="20231129 08:41:38.931"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20231129 08:41:38.931" endtime="20231129 08:41:38.931"/>
</kw>
<status status="PASS" starttime="20231129 08:41:33.766" endtime="20231129 08:41:38.931"/>
</kw>
<kw name="Verify Key Replica Replication Config" library="shell">
<arg>${key}</arg>
<arg>RATIS</arg>
<arg>THREE</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${key} | jq -r '.replicationConfig.replicationType, .replicationConfig.replicationFactor'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:41:38.934" level="INFO">Running command 'ozone sh key info /vol12186/ecbucket/dir2/1mbRatis | jq -r '.replicationConfig.replicationType, .replicationConfig.replicationFactor' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:41:42.947" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:41:42.947" level="INFO">${output} = RATIS
THREE</msg>
<status status="PASS" starttime="20231129 08:41:38.933" endtime="20231129 08:41:42.947"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:41:42.948" level="INFO">RATIS
THREE</msg>
<status status="PASS" starttime="20231129 08:41:42.948" endtime="20231129 08:41:42.948"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:41:42.949" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:41:42.948" endtime="20231129 08:41:42.949"/>
</kw>
<status status="PASS" starttime="20231129 08:41:38.932" endtime="20231129 08:41:42.949"/>
</kw>
<msg timestamp="20231129 08:41:42.949" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:41:38.932" endtime="20231129 08:41:42.949"/>
</kw>
<msg timestamp="20231129 08:41:42.949" level="INFO">${result} = RATIS
THREE</msg>
<status status="PASS" starttime="20231129 08:41:38.932" endtime="20231129 08:41:42.949"/>
</kw>
<kw name="Verify Replica Replication Config" library="shell">
<arg>${result}</arg>
<arg>${type}</arg>
<arg>${factor}</arg>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${type}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:41:42.950" endtime="20231129 08:41:42.950"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${factor}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:41:42.950" endtime="20231129 08:41:42.951"/>
</kw>
<status status="PASS" starttime="20231129 08:41:42.949" endtime="20231129 08:41:42.951"/>
</kw>
<status status="PASS" starttime="20231129 08:41:38.931" endtime="20231129 08:41:42.951"/>
</kw>
<kw name="Verify Key EC Replication Config" library="shell">
<arg>${dir}</arg>
<arg>RS</arg>
<arg>3</arg>
<arg>2</arg>
<arg>1048576</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${key} | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:41:42.954" level="INFO">Running command 'ozone sh key info /vol12186/ecbucket/dir2 | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:41:47.142" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:41:47.142" level="INFO">${output} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20231129 08:41:42.953" endtime="20231129 08:41:47.142"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:41:47.142" level="INFO">EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20231129 08:41:47.142" endtime="20231129 08:41:47.143"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:41:47.143" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:41:47.143" endtime="20231129 08:41:47.143"/>
</kw>
<status status="PASS" starttime="20231129 08:41:42.952" endtime="20231129 08:41:47.143"/>
</kw>
<msg timestamp="20231129 08:41:47.143" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:41:42.952" endtime="20231129 08:41:47.143"/>
</kw>
<msg timestamp="20231129 08:41:47.143" level="INFO">${result} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20231129 08:41:42.951" endtime="20231129 08:41:47.143"/>
</kw>
<kw name="Verify EC Replication Config" library="shell">
<arg>${result}</arg>
<arg>${encoding}</arg>
<arg>${data}</arg>
<arg>${parity}</arg>
<arg>${chunksize}</arg>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)EC$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:41:47.144" endtime="20231129 08:41:47.145"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${encoding}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:41:47.145" endtime="20231129 08:41:47.145"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${data}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:41:47.145" endtime="20231129 08:41:47.145"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${parity}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:41:47.145" endtime="20231129 08:41:47.146"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${chunksize}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:41:47.146" endtime="20231129 08:41:47.146"/>
</kw>
<status status="PASS" starttime="20231129 08:41:47.144" endtime="20231129 08:41:47.146"/>
</kw>
<status status="PASS" starttime="20231129 08:41:42.951" endtime="20231129 08:41:47.146"/>
</kw>
<status status="PASS" starttime="20231129 08:41:28.403" endtime="20231129 08:41:47.146"/>
</test>
<test id="s1-s2-t9" name="Create EC Key In Ratis Bucket" line="117">
<kw name="Set Variable" library="BuiltIn">
<var>${size}</var>
<arg>1mb</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:41:47.147" level="INFO">${size} = 1mb</msg>
<status status="PASS" starttime="20231129 08:41:47.147" endtime="20231129 08:41:47.147"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${dir}</var>
<arg>/${VOLUME}/ratis/dir2</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:41:47.148" level="INFO">${dir} = /vol12186/ratis/dir2</msg>
<status status="PASS" starttime="20231129 08:41:47.147" endtime="20231129 08:41:47.148"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${dir}/${size}EC</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:41:47.148" level="INFO">${key} = /vol12186/ratis/dir2/1mbEC</msg>
<status status="PASS" starttime="20231129 08:41:47.148" endtime="20231129 08:41:47.148"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${file}</var>
<arg>/tmp/${size}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:41:47.148" level="INFO">${file} = /tmp/1mb</msg>
<status status="PASS" starttime="20231129 08:41:47.148" endtime="20231129 08:41:47.149"/>
</kw>
<kw name="Create Key" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<arg>--replication=rs-3-2-1024k --type=EC</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put ${args} ${key} ${file}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:41:47.152" level="INFO">Running command 'ozone sh key put --replication=rs-3-2-1024k --type=EC /vol12186/ratis/dir2/1mbEC /tmp/1mb 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:41:52.845" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:41:52.845" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:41:47.150" endtime="20231129 08:41:52.845"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:41:52.846" level="INFO"/>
<status status="PASS" starttime="20231129 08:41:52.845" endtime="20231129 08:41:52.846"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:41:52.846" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:41:52.846" endtime="20231129 08:41:52.846"/>
</kw>
<status status="PASS" starttime="20231129 08:41:47.150" endtime="20231129 08:41:52.846"/>
</kw>
<msg timestamp="20231129 08:41:52.847" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:41:47.150" endtime="20231129 08:41:52.847"/>
</kw>
<msg timestamp="20231129 08:41:52.847" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:41:47.149" endtime="20231129 08:41:52.847"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:41:52.847" endtime="20231129 08:41:52.847"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Uploaded ${file} to ${key}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:41:52.848" level="INFO">Uploaded /tmp/1mb to /vol12186/ratis/dir2/1mbEC</msg>
<status status="PASS" starttime="20231129 08:41:52.847" endtime="20231129 08:41:52.848"/>
</kw>
<status status="PASS" starttime="20231129 08:41:47.149" endtime="20231129 08:41:52.848"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231129 08:41:52.849" level="INFO">${postfix} = 83395</msg>
<status status="PASS" starttime="20231129 08:41:52.849" endtime="20231129 08:41:52.849"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:41:52.849" level="INFO">${tmpfile} = /tmp/tempkey-83395</msg>
<status status="PASS" starttime="20231129 08:41:52.849" endtime="20231129 08:41:52.849"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:41:52.852" level="INFO">Running command 'ozone sh key get /vol12186/ratis/dir2/1mbEC /tmp/tempkey-83395 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:41:58.037" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:41:58.037" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:41:52.851" endtime="20231129 08:41:58.037"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:41:58.038" level="INFO"/>
<status status="PASS" starttime="20231129 08:41:58.037" endtime="20231129 08:41:58.038"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:41:58.038" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:41:58.038" endtime="20231129 08:41:58.038"/>
</kw>
<status status="PASS" starttime="20231129 08:41:52.850" endtime="20231129 08:41:58.039"/>
</kw>
<msg timestamp="20231129 08:41:58.039" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:41:52.850" endtime="20231129 08:41:58.039"/>
</kw>
<status status="PASS" starttime="20231129 08:41:52.849" endtime="20231129 08:41:58.039"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20231129 08:41:58.040" level="INFO">Running command 'diff -q /tmp/1mb /tmp/tempkey-83395 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:41:58.042" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20231129 08:41:58.039" endtime="20231129 08:41:58.042"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:41:58.045" level="INFO">Running command 'rm -f /tmp/tempkey-83395 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:41:58.047" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:41:58.047" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:41:58.044" endtime="20231129 08:41:58.047"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:41:58.047" level="INFO"/>
<status status="PASS" starttime="20231129 08:41:58.047" endtime="20231129 08:41:58.047"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:41:58.048" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:41:58.047" endtime="20231129 08:41:58.048"/>
</kw>
<status status="PASS" starttime="20231129 08:41:58.043" endtime="20231129 08:41:58.048"/>
</kw>
<msg timestamp="20231129 08:41:58.048" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:41:58.043" endtime="20231129 08:41:58.048"/>
</kw>
<status status="PASS" starttime="20231129 08:41:58.043" endtime="20231129 08:41:58.048"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20231129 08:41:58.049" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20231129 08:41:58.048" endtime="20231129 08:41:58.049"/>
</kw>
<msg timestamp="20231129 08:41:58.049" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20231129 08:41:52.848" endtime="20231129 08:41:58.049"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20231129 08:41:58.049" endtime="20231129 08:41:58.049"/>
</kw>
<status status="PASS" starttime="20231129 08:41:52.848" endtime="20231129 08:41:58.049"/>
</kw>
<kw name="Verify Key EC Replication Config" library="shell">
<arg>${key}</arg>
<arg>RS</arg>
<arg>3</arg>
<arg>2</arg>
<arg>1048576</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${key} | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:41:58.052" level="INFO">Running command 'ozone sh key info /vol12186/ratis/dir2/1mbEC | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:42:01.990" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:42:01.990" level="INFO">${output} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20231129 08:41:58.051" endtime="20231129 08:42:01.990"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:42:01.990" level="INFO">EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20231129 08:42:01.990" endtime="20231129 08:42:01.991"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:42:01.991" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:42:01.991" endtime="20231129 08:42:01.991"/>
</kw>
<status status="PASS" starttime="20231129 08:41:58.051" endtime="20231129 08:42:01.991"/>
</kw>
<msg timestamp="20231129 08:42:01.991" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:41:58.050" endtime="20231129 08:42:01.991"/>
</kw>
<msg timestamp="20231129 08:42:01.991" level="INFO">${result} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20231129 08:41:58.050" endtime="20231129 08:42:01.991"/>
</kw>
<kw name="Verify EC Replication Config" library="shell">
<arg>${result}</arg>
<arg>${encoding}</arg>
<arg>${data}</arg>
<arg>${parity}</arg>
<arg>${chunksize}</arg>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)EC$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:42:01.992" endtime="20231129 08:42:01.992"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${encoding}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:42:01.993" endtime="20231129 08:42:01.993"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${data}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:42:01.993" endtime="20231129 08:42:01.993"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${parity}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:42:01.993" endtime="20231129 08:42:01.993"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${chunksize}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:42:01.994" endtime="20231129 08:42:01.994"/>
</kw>
<status status="PASS" starttime="20231129 08:42:01.992" endtime="20231129 08:42:01.994"/>
</kw>
<status status="PASS" starttime="20231129 08:41:58.049" endtime="20231129 08:42:01.994"/>
</kw>
<kw name="Verify Key Replica Replication Config" library="shell">
<arg>${dir}</arg>
<arg>RATIS</arg>
<arg>THREE</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${key} | jq -r '.replicationConfig.replicationType, .replicationConfig.replicationFactor'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:42:01.997" level="INFO">Running command 'ozone sh key info /vol12186/ratis/dir2 | jq -r '.replicationConfig.replicationType, .replicationConfig.replicationFactor' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:42:06.156" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:42:06.156" level="INFO">${output} = RATIS
THREE</msg>
<status status="PASS" starttime="20231129 08:42:01.996" endtime="20231129 08:42:06.156"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:42:06.157" level="INFO">RATIS
THREE</msg>
<status status="PASS" starttime="20231129 08:42:06.157" endtime="20231129 08:42:06.157"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:42:06.157" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:42:06.157" endtime="20231129 08:42:06.158"/>
</kw>
<status status="PASS" starttime="20231129 08:42:01.995" endtime="20231129 08:42:06.158"/>
</kw>
<msg timestamp="20231129 08:42:06.158" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:42:01.995" endtime="20231129 08:42:06.158"/>
</kw>
<msg timestamp="20231129 08:42:06.158" level="INFO">${result} = RATIS
THREE</msg>
<status status="PASS" starttime="20231129 08:42:01.994" endtime="20231129 08:42:06.158"/>
</kw>
<kw name="Verify Replica Replication Config" library="shell">
<arg>${result}</arg>
<arg>${type}</arg>
<arg>${factor}</arg>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${type}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:42:06.159" endtime="20231129 08:42:06.159"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${factor}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:42:06.159" endtime="20231129 08:42:06.159"/>
</kw>
<status status="PASS" starttime="20231129 08:42:06.158" endtime="20231129 08:42:06.160"/>
</kw>
<status status="PASS" starttime="20231129 08:42:01.994" endtime="20231129 08:42:06.160"/>
</kw>
<status status="PASS" starttime="20231129 08:41:47.147" endtime="20231129 08:42:06.160"/>
</test>
<test id="s1-s2-t10" name="Test Invalid Replication Parameters" line="127">
<kw name="Execute And Ignore Error" library="os">
<var>${message}</var>
<arg>ozone sh bucket create --replication=rs-3-2-1024k --type=RATIS /${VOLUME}/foo</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:42:06.163" level="INFO">Running command 'ozone sh bucket create --replication=rs-3-2-1024k --type=RATIS /vol12186/foo 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:42:09.790" level="INFO">${rc} = 255</msg>
<msg timestamp="20231129 08:42:09.790" level="INFO">${output} = rs-3-2-1024k is not supported for RATIS replication type</msg>
<status status="PASS" starttime="20231129 08:42:06.161" endtime="20231129 08:42:09.790"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:42:09.791" level="INFO">rs-3-2-1024k is not supported for RATIS replication type</msg>
<status status="PASS" starttime="20231129 08:42:09.790" endtime="20231129 08:42:09.791"/>
</kw>
<msg timestamp="20231129 08:42:09.791" level="INFO">${message} = rs-3-2-1024k is not supported for RATIS replication type</msg>
<status status="PASS" starttime="20231129 08:42:06.161" endtime="20231129 08:42:09.791"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${message}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:42:09.791" endtime="20231129 08:42:09.791"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${message}</arg>
<arg>rs-3-2-1024k</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:42:09.792" endtime="20231129 08:42:09.792"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${message}</arg>
<arg>not supported</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:42:09.792" endtime="20231129 08:42:09.792"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${message}</var>
<arg>ozone sh key put --replication=rs-6-3-1024k --type=RATIS /${VOLUME}/foo/bar /tmp/1mb</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:42:09.794" level="INFO">Running command 'ozone sh key put --replication=rs-6-3-1024k --type=RATIS /vol12186/foo/bar /tmp/1mb 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:42:13.411" level="INFO">${rc} = 255</msg>
<msg timestamp="20231129 08:42:13.411" level="INFO">${output} = rs-6-3-1024k is not supported for RATIS replication type</msg>
<status status="PASS" starttime="20231129 08:42:09.793" endtime="20231129 08:42:13.411"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:42:13.412" level="INFO">rs-6-3-1024k is not supported for RATIS replication type</msg>
<status status="PASS" starttime="20231129 08:42:13.411" endtime="20231129 08:42:13.412"/>
</kw>
<msg timestamp="20231129 08:42:13.412" level="INFO">${message} = rs-6-3-1024k is not supported for RATIS replication type</msg>
<status status="PASS" starttime="20231129 08:42:09.792" endtime="20231129 08:42:13.412"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${message}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:42:13.412" endtime="20231129 08:42:13.412"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${message}</arg>
<arg>rs-6-3-1024k</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:42:13.412" endtime="20231129 08:42:13.413"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${message}</arg>
<arg>not supported</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:42:13.413" endtime="20231129 08:42:13.413"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${message}</var>
<arg>ozone sh bucket create --replication=rs-6-3-1024k --type=STAND_ALONE /${VOLUME}/foo</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:42:13.415" level="INFO">Running command 'ozone sh bucket create --replication=rs-6-3-1024k --type=STAND_ALONE /vol12186/foo 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:42:15.323" level="INFO">${rc} = 2</msg>
<msg timestamp="20231129 08:42:15.323" level="INFO">${output} = Could not invoke public void org.apache.hadoop.ozone.shell.ShellReplicationOptions.setType(java.lang.String) with STAND_ALONE (java.lang.IllegalArgumentException: Invalid value 'STAND_ALONE' for optio...</msg>
<status status="PASS" starttime="20231129 08:42:13.414" endtime="20231129 08:42:15.323"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:42:15.324" level="INFO">Could not invoke public void org.apache.hadoop.ozone.shell.ShellReplicationOptions.setType(java.lang.String) with STAND_ALONE (java.lang.IllegalArgumentException: Invalid value 'STAND_ALONE' for option '--type'. Unsupported replication type STAND_ALONE. Supported values are: RATIS, EC.)
Usage: ozone sh bucket create [-ghV] [-k=&lt;bekName&gt;] [-l=&lt;allowedBucketLayout&gt;]
                              [--namespace-quota=&lt;quotaInNamespace&gt;]
                              [--quota=&lt;quotaInBytes&gt;] [-r=&lt;replication&gt;]
                              [-t=&lt;type&gt;] [-u=&lt;ownerName&gt;] &lt;value&gt;
creates a bucket in a given volume
      &lt;value&gt;              URI of the volume/bucket.
                           Ozone URI could either be a full URI or short URI.
                           Full URI should start with o3://, in case of non-HA
                           clusters it should be followed by the host name and
                           optionally the port number. In case of HA clusters
                           the service id should be used. Service id provides a
                           logical name for multiple hosts and it is defined
                           in the property ozone.om.service.ids.
                           Example of a full URI with host name and port number
                           for a key:
                           o3://omhostname:9862/vol1/bucket1/key1
                           With a service id for a volume:
                           o3://omserviceid/vol1/
                           Short URI should start from the volume.
                           Example of a short URI for a bucket:
                           vol1/bucket1
                           Any unspecified information will be identified from
                           the config files.

  -g, --enforcegdpr        if true, indicates GDPR enforced bucket,
                             false/unspecified indicates otherwise
  -h, --help               Show this help message and exit.
  -k, --bucketkey=&lt;bekName&gt;
                           bucket encryption key name
  -l, --layout=&lt;allowedBucketLayout&gt;
                           Allowed Bucket Layouts: FILE_SYSTEM_OPTIMIZED,
                             OBJECT_STORE, LEGACY
      --namespace-quota=&lt;quotaInNamespace&gt;
                           For volume this parameter represents the number of
                             buckets, and for buckets represents the number of
                             keys (eg. 5)
      --quota, --space-quota=&lt;quotaInBytes&gt;
                           The maximum space quota can be used (eg. 1GB)
  -r, --replication=&lt;replication&gt;
                           Replication definition. Valid values are replication
                             type-specific.  For RATIS: ONE or THREE. In case
                             of EC, pass CODEC-DATA-PARITY-CHUNKSIZE,  e.g.
                             rs-3-2-1024k, rs-6-3-1024k, rs-10-4-1024k
  -t, --type, --replication-type=&lt;type&gt;
                           Replication type. Supported types are: RATIS, EC
  -u, --user=&lt;ownerName&gt;   Owner of the bucket. Defaults to current user if not
                             specified
  -V, --version            Print version information and exit.</msg>
<status status="PASS" starttime="20231129 08:42:15.324" endtime="20231129 08:42:15.324"/>
</kw>
<msg timestamp="20231129 08:42:15.325" level="INFO">${message} = Could not invoke public void org.apache.hadoop.ozone.shell.ShellReplicationOptions.setType(java.lang.String) with STAND_ALONE (java.lang.IllegalArgumentException: Invalid value 'STAND_ALONE' for optio...</msg>
<status status="PASS" starttime="20231129 08:42:13.413" endtime="20231129 08:42:15.325"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${message}</arg>
<arg>STAND_ALONE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:42:15.325" endtime="20231129 08:42:15.325"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${message}</arg>
<arg>Invalid value</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:42:15.325" endtime="20231129 08:42:15.325"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${message}</var>
<arg>ozone sh key put --replication=rs-3-2-1024k --type=STAND_ALONE /${VOLUME}/foo/bar /tmp/1mb</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:42:15.327" level="INFO">Running command 'ozone sh key put --replication=rs-3-2-1024k --type=STAND_ALONE /vol12186/foo/bar /tmp/1mb 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:42:17.253" level="INFO">${rc} = 2</msg>
<msg timestamp="20231129 08:42:17.253" level="INFO">${output} = Could not invoke public void org.apache.hadoop.ozone.shell.ShellReplicationOptions.setType(java.lang.String) with STAND_ALONE (java.lang.IllegalArgumentException: Invalid value 'STAND_ALONE' for optio...</msg>
<status status="PASS" starttime="20231129 08:42:15.326" endtime="20231129 08:42:17.253"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:42:17.254" level="INFO">Could not invoke public void org.apache.hadoop.ozone.shell.ShellReplicationOptions.setType(java.lang.String) with STAND_ALONE (java.lang.IllegalArgumentException: Invalid value 'STAND_ALONE' for option '--type'. Unsupported replication type STAND_ALONE. Supported values are: RATIS, EC.)
Usage: ozone sh key put [-hV] [--stream] [-r=&lt;replication&gt;] [-t=&lt;type&gt;] &lt;value&gt;
                        &lt;fileName&gt;
creates or overwrites an existing key
      &lt;value&gt;      URI of the volume/bucket/key.
                   Ozone URI could either be a full URI or short URI.
                   Full URI should start with o3://, in case of non-HA
                   clusters it should be followed by the host name and
                   optionally the port number. In case of HA clusters
                   the service id should be used. Service id provides a
                   logical name for multiple hosts and it is defined
                   in the property ozone.om.service.ids.
                   Example of a full URI with host name and port number
                   for a key:
                   o3://omhostname:9862/vol1/bucket1/key1
                   With a service id for a volume:
                   o3://omserviceid/vol1/
                   Short URI should start from the volume.
                   Example of a short URI for a bucket:
                   vol1/bucket1
                   Any unspecified information will be identified from
                   the config files.

      &lt;fileName&gt;   File to upload
  -h, --help       Show this help message and exit.
  -r, --replication=&lt;replication&gt;
                   Replication definition. Valid values are replication
                     type-specific.  For RATIS: ONE or THREE. In case of EC,
                     pass CODEC-DATA-PARITY-CHUNKSIZE,  e.g. rs-3-2-1024k,
                     rs-6-3-1024k, rs-10-4-1024k
      --stream
  -t, --type, --replication-type=&lt;type&gt;
                   Replication type. Supported types are: RATIS, EC
  -V, --version    Print version information and exit.</msg>
<status status="PASS" starttime="20231129 08:42:17.254" endtime="20231129 08:42:17.254"/>
</kw>
<msg timestamp="20231129 08:42:17.254" level="INFO">${message} = Could not invoke public void org.apache.hadoop.ozone.shell.ShellReplicationOptions.setType(java.lang.String) with STAND_ALONE (java.lang.IllegalArgumentException: Invalid value 'STAND_ALONE' for optio...</msg>
<status status="PASS" starttime="20231129 08:42:15.325" endtime="20231129 08:42:17.255"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${message}</arg>
<arg>STAND_ALONE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:42:17.255" endtime="20231129 08:42:17.255"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${message}</arg>
<arg>Invalid value</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:42:17.255" endtime="20231129 08:42:17.255"/>
</kw>
<status status="PASS" starttime="20231129 08:42:06.160" endtime="20231129 08:42:17.255"/>
</test>
<test id="s1-s2-t11" name="Invalid Replication With Misconfigured Client" line="143">
<kw name="Execute And Ignore Error" library="os">
<var>${message}</var>
<arg>ozone sh -Dozone.replication.allowed-configs="" bucket create --replication=rs-2-1-1024k --type=EC /${VOLUME}/invalid</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:42:17.258" level="INFO">Running command 'ozone sh -Dozone.replication.allowed-configs="" bucket create --replication=rs-2-1-1024k --type=EC /vol12186/invalid 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:42:21.130" level="INFO">${rc} = 255</msg>
<msg timestamp="20231129 08:42:21.130" level="INFO">${output} = INVALID_REQUEST Invalid replication config: EC{rs-2-1-1024k}</msg>
<status status="PASS" starttime="20231129 08:42:17.257" endtime="20231129 08:42:21.130"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:42:21.131" level="INFO">INVALID_REQUEST Invalid replication config: EC{rs-2-1-1024k}</msg>
<status status="PASS" starttime="20231129 08:42:21.130" endtime="20231129 08:42:21.131"/>
</kw>
<msg timestamp="20231129 08:42:21.131" level="INFO">${message} = INVALID_REQUEST Invalid replication config: EC{rs-2-1-1024k}</msg>
<status status="PASS" starttime="20231129 08:42:17.256" endtime="20231129 08:42:21.131"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${message}</arg>
<arg>INVALID_REQUEST Invalid replication config</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:42:21.131" endtime="20231129 08:42:21.132"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${message}</var>
<arg>ozone sh -Dozone.replication.allowed-configs="" key put --replication=rs-3-2-1024 --type=EC /${VOLUME}/ecbucket/invalid /tmp/1mb</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:42:21.134" level="INFO">Running command 'ozone sh -Dozone.replication.allowed-configs="" key put --replication=rs-3-2-1024 --type=EC /vol12186/ecbucket/invalid /tmp/1mb 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:42:24.832" level="INFO">${rc} = 255</msg>
<msg timestamp="20231129 08:42:24.832" level="INFO">${output} = INVALID_REQUEST Invalid replication config: EC{rs-3-2-1k}</msg>
<status status="PASS" starttime="20231129 08:42:21.132" endtime="20231129 08:42:24.832"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:42:24.833" level="INFO">INVALID_REQUEST Invalid replication config: EC{rs-3-2-1k}</msg>
<status status="PASS" starttime="20231129 08:42:24.832" endtime="20231129 08:42:24.833"/>
</kw>
<msg timestamp="20231129 08:42:24.833" level="INFO">${message} = INVALID_REQUEST Invalid replication config: EC{rs-3-2-1k}</msg>
<status status="PASS" starttime="20231129 08:42:21.132" endtime="20231129 08:42:24.833"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${message}</arg>
<arg>INVALID_REQUEST Invalid replication config</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:42:24.833" endtime="20231129 08:42:24.833"/>
</kw>
<status status="PASS" starttime="20231129 08:42:17.256" endtime="20231129 08:42:24.833"/>
</test>
<test id="s1-s2-t12" name="Check disk usage after create a file which uses EC replication type" line="152">
<kw name="Generate Random String" library="String">
<var>${vol}</var>
<arg>8</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231129 08:42:24.835" level="INFO">${vol} = vegwmhjx</msg>
<status status="PASS" starttime="20231129 08:42:24.835" endtime="20231129 08:42:24.835"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${bucket}</var>
<arg>8</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231129 08:42:24.836" level="INFO">${bucket} = rtbpbrxv</msg>
<status status="PASS" starttime="20231129 08:42:24.835" endtime="20231129 08:42:24.836"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${vol}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:42:24.838" level="INFO">Running command 'ozone sh volume create /vegwmhjx 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:42:28.642" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:42:28.642" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:42:24.837" endtime="20231129 08:42:28.642"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:42:28.643" level="INFO"/>
<status status="PASS" starttime="20231129 08:42:28.643" endtime="20231129 08:42:28.643"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:42:28.644" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:42:28.643" endtime="20231129 08:42:28.644"/>
</kw>
<status status="PASS" starttime="20231129 08:42:24.836" endtime="20231129 08:42:28.644"/>
</kw>
<msg timestamp="20231129 08:42:28.644" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:42:24.836" endtime="20231129 08:42:28.644"/>
</kw>
<status status="PASS" starttime="20231129 08:42:24.836" endtime="20231129 08:42:28.644"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${vol}/${bucket} --type EC --replication rs-3-2-1024k</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:42:28.647" level="INFO">Running command 'ozone sh bucket create /vegwmhjx/rtbpbrxv --type EC --replication rs-3-2-1024k 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:42:32.139" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:42:32.139" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:42:28.646" endtime="20231129 08:42:32.139"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:42:32.140" level="INFO"/>
<status status="PASS" starttime="20231129 08:42:32.139" endtime="20231129 08:42:32.140"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:42:32.140" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:42:32.140" endtime="20231129 08:42:32.140"/>
</kw>
<status status="PASS" starttime="20231129 08:42:28.645" endtime="20231129 08:42:32.141"/>
</kw>
<msg timestamp="20231129 08:42:32.141" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:42:28.645" endtime="20231129 08:42:32.141"/>
</kw>
<status status="PASS" starttime="20231129 08:42:28.644" endtime="20231129 08:42:32.141"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -put NOTICE.txt /${vol}/${bucket}/PUTFILE2.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:42:32.144" level="INFO">Running command 'ozone fs -put NOTICE.txt /vegwmhjx/rtbpbrxv/PUTFILE2.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:42:36.992" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:42:36.992" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:42:32.142" endtime="20231129 08:42:36.992"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:42:36.993" level="INFO"/>
<status status="PASS" starttime="20231129 08:42:36.993" endtime="20231129 08:42:36.993"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:42:36.994" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:42:36.993" endtime="20231129 08:42:36.994"/>
</kw>
<status status="PASS" starttime="20231129 08:42:32.142" endtime="20231129 08:42:36.994"/>
</kw>
<msg timestamp="20231129 08:42:36.994" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:42:32.141" endtime="20231129 08:42:36.994"/>
</kw>
<status status="PASS" starttime="20231129 08:42:32.141" endtime="20231129 08:42:36.994"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedFileLength}</var>
<arg>stat -c %s NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:42:36.997" level="INFO">Running command 'stat -c %s NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:42:36.999" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:42:36.999" level="INFO">${output} = 17289</msg>
<status status="PASS" starttime="20231129 08:42:36.995" endtime="20231129 08:42:36.999"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:42:36.999" level="INFO">17289</msg>
<status status="PASS" starttime="20231129 08:42:36.999" endtime="20231129 08:42:36.999"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:42:37.000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:42:36.999" endtime="20231129 08:42:37.000"/>
</kw>
<status status="PASS" starttime="20231129 08:42:36.995" endtime="20231129 08:42:37.000"/>
</kw>
<msg timestamp="20231129 08:42:37.000" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:42:36.995" endtime="20231129 08:42:37.000"/>
</kw>
<msg timestamp="20231129 08:42:37.000" level="INFO">${expectedFileLength} = 17289</msg>
<status status="PASS" starttime="20231129 08:42:36.994" endtime="20231129 08:42:37.000"/>
</kw>
<kw name="Get Disk Usage of File with EC RS Replication">
<var>${expectedDiskUsage}</var>
<arg>${expectedFileLength}</arg>
<arg>3</arg>
<arg>2</arg>
<arg>1024</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${ecChunkSize}</var>
<arg>${ecChunkSize} * 1024</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20231129 08:42:37.001" level="INFO">${ecChunkSize} = 1048576</msg>
<status status="PASS" starttime="20231129 08:42:37.001" endtime="20231129 08:42:37.001"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${dataStripeSize}</var>
<arg>${dataChunkCount} * ${ecChunkSize} * 1024</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20231129 08:42:37.002" level="INFO">${dataStripeSize} = 3221225472</msg>
<status status="PASS" starttime="20231129 08:42:37.001" endtime="20231129 08:42:37.002"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${fullStripes}</var>
<arg>${fileLength}/${dataStripeSize}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20231129 08:42:37.002" level="INFO">${fullStripes} = 5.367211997509003e-06</msg>
<status status="PASS" starttime="20231129 08:42:37.002" endtime="20231129 08:42:37.002"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${fullStripes}</var>
<arg>${fullStripes}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20231129 08:42:37.003" level="INFO">${fullStripes} = 0</msg>
<status status="PASS" starttime="20231129 08:42:37.002" endtime="20231129 08:42:37.003"/>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<var>${fullStripes}</var>
<arg>${fullStripes}</arg>
<arg>0</arg>
<doc>Converts the given item to a floating point number.</doc>
<msg timestamp="20231129 08:42:37.003" level="INFO">${fullStripes} = 0.0</msg>
<status status="PASS" starttime="20231129 08:42:37.003" endtime="20231129 08:42:37.003"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${partialFirstChunk}</var>
<arg>${fileLength} % ${dataStripeSize}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20231129 08:42:37.004" level="INFO">${partialFirstChunk} = 17289</msg>
<status status="PASS" starttime="20231129 08:42:37.003" endtime="20231129 08:42:37.004"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${ecChunkSize}</var>
<arg>${ecChunkSize}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20231129 08:42:37.004" level="INFO">${ecChunkSize} = 1048576</msg>
<status status="PASS" starttime="20231129 08:42:37.004" endtime="20231129 08:42:37.004"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${partialFirstChunk}</var>
<arg>${partialFirstChunk}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20231129 08:42:37.004" level="INFO">${partialFirstChunk} = 17289</msg>
<status status="PASS" starttime="20231129 08:42:37.004" endtime="20231129 08:42:37.004"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${partialFirstChunkOptions}</var>
<arg>${ecChunkSize}</arg>
<arg>${partialFirstChunk}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20231129 08:42:37.005" level="INFO">${partialFirstChunkOptions} = [1048576, 17289]</msg>
<status status="PASS" starttime="20231129 08:42:37.005" endtime="20231129 08:42:37.005"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${partialFirstChunk}</var>
<arg>min(${partialFirstChunkOptions})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20231129 08:42:37.005" level="INFO">${partialFirstChunk} = 17289</msg>
<status status="PASS" starttime="20231129 08:42:37.005" endtime="20231129 08:42:37.005"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${replicationOverhead}</var>
<arg>${fullStripes} * 2 * 1024 * 1024 + ${partialFirstChunk} * 2</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20231129 08:42:37.006" level="INFO">${replicationOverhead} = 34578.0</msg>
<status status="PASS" starttime="20231129 08:42:37.005" endtime="20231129 08:42:37.006"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${expectedDiskUsage}</var>
<arg>${fileLength} + ${replicationOverhead}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20231129 08:42:37.006" level="INFO">${expectedDiskUsage} = 51867.0</msg>
<status status="PASS" starttime="20231129 08:42:37.006" endtime="20231129 08:42:37.006"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${expectedDiskUsage}</var>
<arg>${expectedDiskUsage}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20231129 08:42:37.007" level="INFO">${expectedDiskUsage} = 51867</msg>
<status status="PASS" starttime="20231129 08:42:37.006" endtime="20231129 08:42:37.007"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${expectedDiskUsage}</var>
<arg>${expectedDiskUsage}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20231129 08:42:37.007" level="INFO">${expectedDiskUsage} = 51867</msg>
<status status="PASS" starttime="20231129 08:42:37.007" endtime="20231129 08:42:37.007"/>
</kw>
<msg timestamp="20231129 08:42:37.007" level="INFO">${expectedDiskUsage} = 51867</msg>
<status status="PASS" starttime="20231129 08:42:37.000" endtime="20231129 08:42:37.007"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -du /${vol}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:42:37.010" level="INFO">Running command 'ozone fs -du /vegwmhjx/rtbpbrxv 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:42:40.352" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:42:40.352" level="INFO">${output} = 17289  51867  /vegwmhjx/rtbpbrxv/PUTFILE2.txt</msg>
<status status="PASS" starttime="20231129 08:42:37.008" endtime="20231129 08:42:40.352"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:42:40.353" level="INFO">17289  51867  /vegwmhjx/rtbpbrxv/PUTFILE2.txt</msg>
<status status="PASS" starttime="20231129 08:42:40.353" endtime="20231129 08:42:40.353"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:42:40.354" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:42:40.354" endtime="20231129 08:42:40.354"/>
</kw>
<status status="PASS" starttime="20231129 08:42:37.008" endtime="20231129 08:42:40.354"/>
</kw>
<msg timestamp="20231129 08:42:40.354" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:42:37.008" endtime="20231129 08:42:40.354"/>
</kw>
<msg timestamp="20231129 08:42:40.354" level="INFO">${result} = 17289  51867  /vegwmhjx/rtbpbrxv/PUTFILE2.txt</msg>
<status status="PASS" starttime="20231129 08:42:37.007" endtime="20231129 08:42:40.354"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PUTFILE2.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:42:40.355" endtime="20231129 08:42:40.355"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expectedFileLength}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:42:40.355" endtime="20231129 08:42:40.355"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expectedDiskUsage}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:42:40.355" endtime="20231129 08:42:40.356"/>
</kw>
<status status="PASS" starttime="20231129 08:42:24.834" endtime="20231129 08:42:40.356"/>
</test>
<doc>Test EC shell commands</doc>
<status status="PASS" starttime="20231129 08:39:06.185" endtime="20231129 08:42:40.357"/>
</suite>
<suite id="s1-s3" name="read-4-datanodes" source="/opt/hadoop/smoketest/ec/read.robot">
<test id="s1-s3-t1" name="Read 1MB EC Key" line="25">
<kw name="Key Should Match Local File" library="shell">
<arg>/${VOLUME}/ecbucket/dir/1mb</arg>
<arg>/tmp/1mb</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231129 08:42:46.631" level="INFO">${postfix} = 77623</msg>
<status status="PASS" starttime="20231129 08:42:46.631" endtime="20231129 08:42:46.631"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:42:46.632" level="INFO">${tmpfile} = /tmp/tempkey-77623</msg>
<status status="PASS" starttime="20231129 08:42:46.631" endtime="20231129 08:42:46.632"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:42:46.634" level="INFO">Running command 'ozone sh key get /vol12186/ecbucket/dir/1mb /tmp/tempkey-77623 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:43:43.506" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:43:43.506" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:42:46.633" endtime="20231129 08:43:43.506"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:43:43.507" level="INFO"/>
<status status="PASS" starttime="20231129 08:43:43.507" endtime="20231129 08:43:43.507"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:43:43.507" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:43:43.507" endtime="20231129 08:43:43.507"/>
</kw>
<status status="PASS" starttime="20231129 08:42:46.632" endtime="20231129 08:43:43.508"/>
</kw>
<msg timestamp="20231129 08:43:43.508" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:42:46.632" endtime="20231129 08:43:43.508"/>
</kw>
<status status="PASS" starttime="20231129 08:42:46.632" endtime="20231129 08:43:43.508"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20231129 08:43:43.510" level="INFO">Running command 'diff -q /tmp/1mb /tmp/tempkey-77623 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:43:43.512" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20231129 08:43:43.508" endtime="20231129 08:43:43.512"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:43:43.514" level="INFO">Running command 'rm -f /tmp/tempkey-77623 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:43:43.516" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:43:43.516" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:43:43.513" endtime="20231129 08:43:43.516"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:43:43.517" level="INFO"/>
<status status="PASS" starttime="20231129 08:43:43.516" endtime="20231129 08:43:43.517"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:43:43.517" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:43:43.517" endtime="20231129 08:43:43.517"/>
</kw>
<status status="PASS" starttime="20231129 08:43:43.513" endtime="20231129 08:43:43.517"/>
</kw>
<msg timestamp="20231129 08:43:43.517" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:43:43.513" endtime="20231129 08:43:43.517"/>
</kw>
<status status="PASS" starttime="20231129 08:43:43.512" endtime="20231129 08:43:43.517"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20231129 08:43:43.518" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20231129 08:43:43.518" endtime="20231129 08:43:43.518"/>
</kw>
<msg timestamp="20231129 08:43:43.518" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20231129 08:42:46.631" endtime="20231129 08:43:43.518"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20231129 08:43:43.518" endtime="20231129 08:43:43.519"/>
</kw>
<status status="PASS" starttime="20231129 08:42:46.630" endtime="20231129 08:43:43.519"/>
</kw>
<status status="PASS" starttime="20231129 08:42:46.630" endtime="20231129 08:43:43.519"/>
</test>
<test id="s1-s3-t2" name="Read 2MB EC Key" line="28">
<kw name="Key Should Match Local File" library="shell">
<arg>/${VOLUME}/ecbucket/dir/2mb</arg>
<arg>/tmp/2mb</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231129 08:43:43.521" level="INFO">${postfix} = 71586</msg>
<status status="PASS" starttime="20231129 08:43:43.521" endtime="20231129 08:43:43.521"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:43:43.521" level="INFO">${tmpfile} = /tmp/tempkey-71586</msg>
<status status="PASS" starttime="20231129 08:43:43.521" endtime="20231129 08:43:43.522"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:43:43.524" level="INFO">Running command 'ozone sh key get /vol12186/ecbucket/dir/2mb /tmp/tempkey-71586 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:43:48.668" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:43:48.668" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:43:43.523" endtime="20231129 08:43:48.668"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:43:48.669" level="INFO"/>
<status status="PASS" starttime="20231129 08:43:48.668" endtime="20231129 08:43:48.669"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:43:48.669" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:43:48.669" endtime="20231129 08:43:48.669"/>
</kw>
<status status="PASS" starttime="20231129 08:43:43.522" endtime="20231129 08:43:48.670"/>
</kw>
<msg timestamp="20231129 08:43:48.670" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:43:43.522" endtime="20231129 08:43:48.670"/>
</kw>
<status status="PASS" starttime="20231129 08:43:43.522" endtime="20231129 08:43:48.670"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20231129 08:43:48.671" level="INFO">Running command 'diff -q /tmp/2mb /tmp/tempkey-71586 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:43:48.674" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20231129 08:43:48.670" endtime="20231129 08:43:48.674"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:43:48.677" level="INFO">Running command 'rm -f /tmp/tempkey-71586 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:43:48.678" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:43:48.678" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:43:48.675" endtime="20231129 08:43:48.678"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:43:48.679" level="INFO"/>
<status status="PASS" starttime="20231129 08:43:48.679" endtime="20231129 08:43:48.679"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:43:48.679" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:43:48.679" endtime="20231129 08:43:48.680"/>
</kw>
<status status="PASS" starttime="20231129 08:43:48.675" endtime="20231129 08:43:48.680"/>
</kw>
<msg timestamp="20231129 08:43:48.680" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:43:48.675" endtime="20231129 08:43:48.680"/>
</kw>
<status status="PASS" starttime="20231129 08:43:48.674" endtime="20231129 08:43:48.680"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20231129 08:43:48.680" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20231129 08:43:48.680" endtime="20231129 08:43:48.680"/>
</kw>
<msg timestamp="20231129 08:43:48.681" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20231129 08:43:43.520" endtime="20231129 08:43:48.681"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20231129 08:43:48.681" endtime="20231129 08:43:48.681"/>
</kw>
<status status="PASS" starttime="20231129 08:43:43.520" endtime="20231129 08:43:48.681"/>
</kw>
<status status="PASS" starttime="20231129 08:43:43.519" endtime="20231129 08:43:48.681"/>
</test>
<test id="s1-s3-t3" name="Read 3MB EC Key" line="31">
<kw name="Key Should Match Local File" library="shell">
<arg>/${VOLUME}/ecbucket/dir/3mb</arg>
<arg>/tmp/3mb</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231129 08:43:48.683" level="INFO">${postfix} = 78657</msg>
<status status="PASS" starttime="20231129 08:43:48.683" endtime="20231129 08:43:48.683"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:43:48.683" level="INFO">${tmpfile} = /tmp/tempkey-78657</msg>
<status status="PASS" starttime="20231129 08:43:48.683" endtime="20231129 08:43:48.684"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:43:48.686" level="INFO">Running command 'ozone sh key get /vol12186/ecbucket/dir/3mb /tmp/tempkey-78657 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:44:03.557" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:44:03.557" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:43:48.685" endtime="20231129 08:44:03.557"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:44:03.558" level="INFO"/>
<status status="PASS" starttime="20231129 08:44:03.557" endtime="20231129 08:44:03.558"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:44:03.558" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:44:03.558" endtime="20231129 08:44:03.558"/>
</kw>
<status status="PASS" starttime="20231129 08:43:48.684" endtime="20231129 08:44:03.558"/>
</kw>
<msg timestamp="20231129 08:44:03.558" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:43:48.684" endtime="20231129 08:44:03.558"/>
</kw>
<status status="PASS" starttime="20231129 08:43:48.684" endtime="20231129 08:44:03.558"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20231129 08:44:03.560" level="INFO">Running command 'diff -q /tmp/3mb /tmp/tempkey-78657 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:44:03.563" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20231129 08:44:03.559" endtime="20231129 08:44:03.563"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:44:03.566" level="INFO">Running command 'rm -f /tmp/tempkey-78657 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:44:03.568" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:44:03.568" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:44:03.565" endtime="20231129 08:44:03.568"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:44:03.568" level="INFO"/>
<status status="PASS" starttime="20231129 08:44:03.568" endtime="20231129 08:44:03.568"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:44:03.569" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:44:03.569" endtime="20231129 08:44:03.569"/>
</kw>
<status status="PASS" starttime="20231129 08:44:03.564" endtime="20231129 08:44:03.569"/>
</kw>
<msg timestamp="20231129 08:44:03.569" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:44:03.564" endtime="20231129 08:44:03.569"/>
</kw>
<status status="PASS" starttime="20231129 08:44:03.563" endtime="20231129 08:44:03.569"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20231129 08:44:03.570" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20231129 08:44:03.569" endtime="20231129 08:44:03.570"/>
</kw>
<msg timestamp="20231129 08:44:03.570" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20231129 08:43:48.682" endtime="20231129 08:44:03.570"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20231129 08:44:03.570" endtime="20231129 08:44:03.570"/>
</kw>
<status status="PASS" starttime="20231129 08:43:48.682" endtime="20231129 08:44:03.570"/>
</kw>
<status status="PASS" starttime="20231129 08:43:48.682" endtime="20231129 08:44:03.571"/>
</test>
<test id="s1-s3-t4" name="Read 100MB EC Key" line="34">
<kw name="Key Should Match Local File" library="shell">
<arg>/${VOLUME}/ecbucket/dir/100mb</arg>
<arg>/tmp/100mb</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231129 08:44:03.573" level="INFO">${postfix} = 71343</msg>
<status status="PASS" starttime="20231129 08:44:03.572" endtime="20231129 08:44:03.573"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:44:03.573" level="INFO">${tmpfile} = /tmp/tempkey-71343</msg>
<status status="PASS" starttime="20231129 08:44:03.573" endtime="20231129 08:44:03.573"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:44:03.575" level="INFO">Running command 'ozone sh key get /vol12186/ecbucket/dir/100mb /tmp/tempkey-71343 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:44:10.037" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:44:10.037" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:44:03.574" endtime="20231129 08:44:10.037"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:44:10.038" level="INFO"/>
<status status="PASS" starttime="20231129 08:44:10.037" endtime="20231129 08:44:10.038"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:44:10.038" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:44:10.038" endtime="20231129 08:44:10.038"/>
</kw>
<status status="PASS" starttime="20231129 08:44:03.574" endtime="20231129 08:44:10.039"/>
</kw>
<msg timestamp="20231129 08:44:10.039" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:44:03.574" endtime="20231129 08:44:10.039"/>
</kw>
<status status="PASS" starttime="20231129 08:44:03.573" endtime="20231129 08:44:10.039"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20231129 08:44:10.041" level="INFO">Running command 'diff -q /tmp/100mb /tmp/tempkey-71343 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:44:10.079" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20231129 08:44:10.039" endtime="20231129 08:44:10.079"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:44:10.082" level="INFO">Running command 'rm -f /tmp/tempkey-71343 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:44:10.094" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:44:10.094" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:44:10.080" endtime="20231129 08:44:10.094"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:44:10.095" level="INFO"/>
<status status="PASS" starttime="20231129 08:44:10.095" endtime="20231129 08:44:10.095"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:44:10.095" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:44:10.095" endtime="20231129 08:44:10.096"/>
</kw>
<status status="PASS" starttime="20231129 08:44:10.080" endtime="20231129 08:44:10.096"/>
</kw>
<msg timestamp="20231129 08:44:10.097" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:44:10.080" endtime="20231129 08:44:10.097"/>
</kw>
<status status="PASS" starttime="20231129 08:44:10.079" endtime="20231129 08:44:10.097"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20231129 08:44:10.097" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20231129 08:44:10.097" endtime="20231129 08:44:10.097"/>
</kw>
<msg timestamp="20231129 08:44:10.097" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20231129 08:44:03.572" endtime="20231129 08:44:10.097"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20231129 08:44:10.098" endtime="20231129 08:44:10.098"/>
</kw>
<status status="PASS" starttime="20231129 08:44:03.571" endtime="20231129 08:44:10.098"/>
</kw>
<status status="PASS" starttime="20231129 08:44:03.571" endtime="20231129 08:44:10.098"/>
</test>
<test id="s1-s3-t5" name="Read EC Key in Ratis Bucket" line="37">
<kw name="Key Should Match Local File" library="shell">
<arg>/${VOLUME}/ratis/dir2/1mbEC</arg>
<arg>/tmp/1mb</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231129 08:44:10.100" level="INFO">${postfix} = 60804</msg>
<status status="PASS" starttime="20231129 08:44:10.100" endtime="20231129 08:44:10.100"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:44:10.100" level="INFO">${tmpfile} = /tmp/tempkey-60804</msg>
<status status="PASS" starttime="20231129 08:44:10.100" endtime="20231129 08:44:10.100"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:44:10.103" level="INFO">Running command 'ozone sh key get /vol12186/ratis/dir2/1mbEC /tmp/tempkey-60804 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:44:15.243" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:44:15.243" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:44:10.101" endtime="20231129 08:44:15.243"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:44:15.244" level="INFO"/>
<status status="PASS" starttime="20231129 08:44:15.244" endtime="20231129 08:44:15.244"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:44:15.245" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:44:15.244" endtime="20231129 08:44:15.245"/>
</kw>
<status status="PASS" starttime="20231129 08:44:10.101" endtime="20231129 08:44:15.245"/>
</kw>
<msg timestamp="20231129 08:44:15.245" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:44:10.101" endtime="20231129 08:44:15.245"/>
</kw>
<status status="PASS" starttime="20231129 08:44:10.100" endtime="20231129 08:44:15.245"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20231129 08:44:15.247" level="INFO">Running command 'diff -q /tmp/1mb /tmp/tempkey-60804 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:44:15.249" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20231129 08:44:15.245" endtime="20231129 08:44:15.249"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:44:15.252" level="INFO">Running command 'rm -f /tmp/tempkey-60804 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:44:15.253" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:44:15.253" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:44:15.250" endtime="20231129 08:44:15.253"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:44:15.254" level="INFO"/>
<status status="PASS" starttime="20231129 08:44:15.253" endtime="20231129 08:44:15.254"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:44:15.254" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:44:15.254" endtime="20231129 08:44:15.254"/>
</kw>
<status status="PASS" starttime="20231129 08:44:15.250" endtime="20231129 08:44:15.254"/>
</kw>
<msg timestamp="20231129 08:44:15.254" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:44:15.250" endtime="20231129 08:44:15.255"/>
</kw>
<status status="PASS" starttime="20231129 08:44:15.249" endtime="20231129 08:44:15.255"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20231129 08:44:15.255" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20231129 08:44:15.255" endtime="20231129 08:44:15.255"/>
</kw>
<msg timestamp="20231129 08:44:15.255" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20231129 08:44:10.099" endtime="20231129 08:44:15.255"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20231129 08:44:15.255" endtime="20231129 08:44:15.256"/>
</kw>
<status status="PASS" starttime="20231129 08:44:10.099" endtime="20231129 08:44:15.256"/>
</kw>
<status status="PASS" starttime="20231129 08:44:10.098" endtime="20231129 08:44:15.256"/>
</test>
<doc>Test reading EC keys</doc>
<status status="PASS" starttime="20231129 08:42:46.585" endtime="20231129 08:44:15.257"/>
</suite>
<suite id="s1-s4" name="read-3-datanodes" source="/opt/hadoop/smoketest/ec/read.robot">
<test id="s1-s4-t1" name="Read 1MB EC Key" line="25">
<kw name="Key Should Match Local File" library="shell">
<arg>/${VOLUME}/ecbucket/dir/1mb</arg>
<arg>/tmp/1mb</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231129 08:44:21.101" level="INFO">${postfix} = 67382</msg>
<status status="PASS" starttime="20231129 08:44:21.101" endtime="20231129 08:44:21.102"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:44:21.102" level="INFO">${tmpfile} = /tmp/tempkey-67382</msg>
<status status="PASS" starttime="20231129 08:44:21.102" endtime="20231129 08:44:21.102"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:44:21.105" level="INFO">Running command 'ozone sh key get /vol12186/ecbucket/dir/1mb /tmp/tempkey-67382 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:44:35.791" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:44:35.791" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:44:21.103" endtime="20231129 08:44:35.791"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:44:35.792" level="INFO"/>
<status status="PASS" starttime="20231129 08:44:35.791" endtime="20231129 08:44:35.792"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:44:35.792" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:44:35.792" endtime="20231129 08:44:35.792"/>
</kw>
<status status="PASS" starttime="20231129 08:44:21.103" endtime="20231129 08:44:35.792"/>
</kw>
<msg timestamp="20231129 08:44:35.792" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:44:21.102" endtime="20231129 08:44:35.792"/>
</kw>
<status status="PASS" starttime="20231129 08:44:21.102" endtime="20231129 08:44:35.793"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20231129 08:44:35.794" level="INFO">Running command 'diff -q /tmp/1mb /tmp/tempkey-67382 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:44:35.796" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20231129 08:44:35.793" endtime="20231129 08:44:35.796"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:44:35.799" level="INFO">Running command 'rm -f /tmp/tempkey-67382 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:44:35.801" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:44:35.801" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:44:35.798" endtime="20231129 08:44:35.801"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:44:35.801" level="INFO"/>
<status status="PASS" starttime="20231129 08:44:35.801" endtime="20231129 08:44:35.801"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:44:35.802" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:44:35.801" endtime="20231129 08:44:35.802"/>
</kw>
<status status="PASS" starttime="20231129 08:44:35.797" endtime="20231129 08:44:35.802"/>
</kw>
<msg timestamp="20231129 08:44:35.802" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:44:35.797" endtime="20231129 08:44:35.802"/>
</kw>
<status status="PASS" starttime="20231129 08:44:35.797" endtime="20231129 08:44:35.802"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20231129 08:44:35.803" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20231129 08:44:35.802" endtime="20231129 08:44:35.803"/>
</kw>
<msg timestamp="20231129 08:44:35.803" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20231129 08:44:21.101" endtime="20231129 08:44:35.803"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20231129 08:44:35.803" endtime="20231129 08:44:35.803"/>
</kw>
<status status="PASS" starttime="20231129 08:44:21.100" endtime="20231129 08:44:35.803"/>
</kw>
<status status="PASS" starttime="20231129 08:44:21.100" endtime="20231129 08:44:35.803"/>
</test>
<test id="s1-s4-t2" name="Read 2MB EC Key" line="28">
<kw name="Key Should Match Local File" library="shell">
<arg>/${VOLUME}/ecbucket/dir/2mb</arg>
<arg>/tmp/2mb</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231129 08:44:35.805" level="INFO">${postfix} = 76109</msg>
<status status="PASS" starttime="20231129 08:44:35.805" endtime="20231129 08:44:35.805"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:44:35.806" level="INFO">${tmpfile} = /tmp/tempkey-76109</msg>
<status status="PASS" starttime="20231129 08:44:35.806" endtime="20231129 08:44:35.806"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:44:35.808" level="INFO">Running command 'ozone sh key get /vol12186/ecbucket/dir/2mb /tmp/tempkey-76109 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:44:40.799" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:44:40.799" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:44:35.807" endtime="20231129 08:44:40.799"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:44:40.799" level="INFO"/>
<status status="PASS" starttime="20231129 08:44:40.799" endtime="20231129 08:44:40.799"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:44:40.800" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:44:40.800" endtime="20231129 08:44:40.800"/>
</kw>
<status status="PASS" starttime="20231129 08:44:35.807" endtime="20231129 08:44:40.800"/>
</kw>
<msg timestamp="20231129 08:44:40.800" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:44:35.806" endtime="20231129 08:44:40.800"/>
</kw>
<status status="PASS" starttime="20231129 08:44:35.806" endtime="20231129 08:44:40.800"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20231129 08:44:40.802" level="INFO">Running command 'diff -q /tmp/2mb /tmp/tempkey-76109 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:44:40.804" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20231129 08:44:40.800" endtime="20231129 08:44:40.805"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:44:40.807" level="INFO">Running command 'rm -f /tmp/tempkey-76109 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:44:40.809" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:44:40.809" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:44:40.806" endtime="20231129 08:44:40.809"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:44:40.810" level="INFO"/>
<status status="PASS" starttime="20231129 08:44:40.809" endtime="20231129 08:44:40.810"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:44:40.810" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:44:40.810" endtime="20231129 08:44:40.810"/>
</kw>
<status status="PASS" starttime="20231129 08:44:40.806" endtime="20231129 08:44:40.810"/>
</kw>
<msg timestamp="20231129 08:44:40.810" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:44:40.805" endtime="20231129 08:44:40.811"/>
</kw>
<status status="PASS" starttime="20231129 08:44:40.805" endtime="20231129 08:44:40.811"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20231129 08:44:40.811" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20231129 08:44:40.811" endtime="20231129 08:44:40.811"/>
</kw>
<msg timestamp="20231129 08:44:40.811" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20231129 08:44:35.805" endtime="20231129 08:44:40.811"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20231129 08:44:40.811" endtime="20231129 08:44:40.812"/>
</kw>
<status status="PASS" starttime="20231129 08:44:35.804" endtime="20231129 08:44:40.812"/>
</kw>
<status status="PASS" starttime="20231129 08:44:35.804" endtime="20231129 08:44:40.812"/>
</test>
<test id="s1-s4-t3" name="Read 3MB EC Key" line="31">
<kw name="Key Should Match Local File" library="shell">
<arg>/${VOLUME}/ecbucket/dir/3mb</arg>
<arg>/tmp/3mb</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231129 08:44:40.814" level="INFO">${postfix} = 76326</msg>
<status status="PASS" starttime="20231129 08:44:40.814" endtime="20231129 08:44:40.814"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:44:40.814" level="INFO">${tmpfile} = /tmp/tempkey-76326</msg>
<status status="PASS" starttime="20231129 08:44:40.814" endtime="20231129 08:44:40.814"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:44:40.817" level="INFO">Running command 'ozone sh key get /vol12186/ecbucket/dir/3mb /tmp/tempkey-76326 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:44:55.561" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:44:55.561" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:44:40.815" endtime="20231129 08:44:55.561"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:44:55.562" level="INFO"/>
<status status="PASS" starttime="20231129 08:44:55.561" endtime="20231129 08:44:55.562"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:44:55.562" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:44:55.562" endtime="20231129 08:44:55.562"/>
</kw>
<status status="PASS" starttime="20231129 08:44:40.815" endtime="20231129 08:44:55.562"/>
</kw>
<msg timestamp="20231129 08:44:55.562" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:44:40.815" endtime="20231129 08:44:55.563"/>
</kw>
<status status="PASS" starttime="20231129 08:44:40.814" endtime="20231129 08:44:55.563"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20231129 08:44:55.564" level="INFO">Running command 'diff -q /tmp/3mb /tmp/tempkey-76326 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:44:55.567" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20231129 08:44:55.563" endtime="20231129 08:44:55.567"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:44:55.570" level="INFO">Running command 'rm -f /tmp/tempkey-76326 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:44:55.572" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:44:55.572" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:44:55.569" endtime="20231129 08:44:55.572"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:44:55.572" level="INFO"/>
<status status="PASS" starttime="20231129 08:44:55.572" endtime="20231129 08:44:55.572"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:44:55.573" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:44:55.573" endtime="20231129 08:44:55.573"/>
</kw>
<status status="PASS" starttime="20231129 08:44:55.568" endtime="20231129 08:44:55.573"/>
</kw>
<msg timestamp="20231129 08:44:55.573" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:44:55.568" endtime="20231129 08:44:55.573"/>
</kw>
<status status="PASS" starttime="20231129 08:44:55.568" endtime="20231129 08:44:55.573"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20231129 08:44:55.574" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20231129 08:44:55.573" endtime="20231129 08:44:55.574"/>
</kw>
<msg timestamp="20231129 08:44:55.574" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20231129 08:44:40.813" endtime="20231129 08:44:55.574"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20231129 08:44:55.574" endtime="20231129 08:44:55.574"/>
</kw>
<status status="PASS" starttime="20231129 08:44:40.813" endtime="20231129 08:44:55.574"/>
</kw>
<status status="PASS" starttime="20231129 08:44:40.812" endtime="20231129 08:44:55.574"/>
</test>
<test id="s1-s4-t4" name="Read 100MB EC Key" line="34">
<kw name="Key Should Match Local File" library="shell">
<arg>/${VOLUME}/ecbucket/dir/100mb</arg>
<arg>/tmp/100mb</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231129 08:44:55.576" level="INFO">${postfix} = 78699</msg>
<status status="PASS" starttime="20231129 08:44:55.576" endtime="20231129 08:44:55.576"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:44:55.577" level="INFO">${tmpfile} = /tmp/tempkey-78699</msg>
<status status="PASS" starttime="20231129 08:44:55.576" endtime="20231129 08:44:55.577"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:44:55.579" level="INFO">Running command 'ozone sh key get /vol12186/ecbucket/dir/100mb /tmp/tempkey-78699 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:45:01.970" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:45:01.970" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:44:55.578" endtime="20231129 08:45:01.970"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:45:01.971" level="INFO"/>
<status status="PASS" starttime="20231129 08:45:01.970" endtime="20231129 08:45:01.971"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:45:01.971" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:45:01.971" endtime="20231129 08:45:01.971"/>
</kw>
<status status="PASS" starttime="20231129 08:44:55.577" endtime="20231129 08:45:01.971"/>
</kw>
<msg timestamp="20231129 08:45:01.971" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:44:55.577" endtime="20231129 08:45:01.971"/>
</kw>
<status status="PASS" starttime="20231129 08:44:55.577" endtime="20231129 08:45:01.971"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20231129 08:45:01.973" level="INFO">Running command 'diff -q /tmp/100mb /tmp/tempkey-78699 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:45:02.011" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20231129 08:45:01.972" endtime="20231129 08:45:02.011"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:45:02.014" level="INFO">Running command 'rm -f /tmp/tempkey-78699 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:45:02.027" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:45:02.027" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:45:02.013" endtime="20231129 08:45:02.027"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:45:02.027" level="INFO"/>
<status status="PASS" starttime="20231129 08:45:02.027" endtime="20231129 08:45:02.027"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:45:02.028" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:45:02.028" endtime="20231129 08:45:02.029"/>
</kw>
<status status="PASS" starttime="20231129 08:45:02.012" endtime="20231129 08:45:02.029"/>
</kw>
<msg timestamp="20231129 08:45:02.029" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:45:02.012" endtime="20231129 08:45:02.029"/>
</kw>
<status status="PASS" starttime="20231129 08:45:02.011" endtime="20231129 08:45:02.029"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20231129 08:45:02.030" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20231129 08:45:02.029" endtime="20231129 08:45:02.030"/>
</kw>
<msg timestamp="20231129 08:45:02.030" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20231129 08:44:55.576" endtime="20231129 08:45:02.030"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20231129 08:45:02.030" endtime="20231129 08:45:02.030"/>
</kw>
<status status="PASS" starttime="20231129 08:44:55.575" endtime="20231129 08:45:02.030"/>
</kw>
<status status="PASS" starttime="20231129 08:44:55.575" endtime="20231129 08:45:02.030"/>
</test>
<test id="s1-s4-t5" name="Read EC Key in Ratis Bucket" line="37">
<kw name="Key Should Match Local File" library="shell">
<arg>/${VOLUME}/ratis/dir2/1mbEC</arg>
<arg>/tmp/1mb</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231129 08:45:02.032" level="INFO">${postfix} = 46591</msg>
<status status="PASS" starttime="20231129 08:45:02.032" endtime="20231129 08:45:02.033"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:45:02.033" level="INFO">${tmpfile} = /tmp/tempkey-46591</msg>
<status status="PASS" starttime="20231129 08:45:02.033" endtime="20231129 08:45:02.033"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:45:02.035" level="INFO">Running command 'ozone sh key get /vol12186/ratis/dir2/1mbEC /tmp/tempkey-46591 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:45:07.403" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:45:07.403" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:45:02.034" endtime="20231129 08:45:07.403"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:45:07.404" level="INFO"/>
<status status="PASS" starttime="20231129 08:45:07.403" endtime="20231129 08:45:07.404"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:45:07.404" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:45:07.404" endtime="20231129 08:45:07.404"/>
</kw>
<status status="PASS" starttime="20231129 08:45:02.034" endtime="20231129 08:45:07.405"/>
</kw>
<msg timestamp="20231129 08:45:07.405" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:45:02.033" endtime="20231129 08:45:07.405"/>
</kw>
<status status="PASS" starttime="20231129 08:45:02.033" endtime="20231129 08:45:07.405"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20231129 08:45:07.407" level="INFO">Running command 'diff -q /tmp/1mb /tmp/tempkey-46591 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:45:07.409" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20231129 08:45:07.405" endtime="20231129 08:45:07.409"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:45:07.411" level="INFO">Running command 'rm -f /tmp/tempkey-46591 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:45:07.413" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:45:07.413" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:45:07.410" endtime="20231129 08:45:07.413"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:45:07.414" level="INFO"/>
<status status="PASS" starttime="20231129 08:45:07.413" endtime="20231129 08:45:07.414"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:45:07.414" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:45:07.414" endtime="20231129 08:45:07.414"/>
</kw>
<status status="PASS" starttime="20231129 08:45:07.410" endtime="20231129 08:45:07.414"/>
</kw>
<msg timestamp="20231129 08:45:07.414" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:45:07.409" endtime="20231129 08:45:07.414"/>
</kw>
<status status="PASS" starttime="20231129 08:45:07.409" endtime="20231129 08:45:07.415"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20231129 08:45:07.415" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20231129 08:45:07.415" endtime="20231129 08:45:07.415"/>
</kw>
<msg timestamp="20231129 08:45:07.415" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20231129 08:45:02.032" endtime="20231129 08:45:07.415"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20231129 08:45:07.415" endtime="20231129 08:45:07.416"/>
</kw>
<status status="PASS" starttime="20231129 08:45:02.031" endtime="20231129 08:45:07.416"/>
</kw>
<status status="PASS" starttime="20231129 08:45:02.031" endtime="20231129 08:45:07.416"/>
</test>
<doc>Test reading EC keys</doc>
<status status="PASS" starttime="20231129 08:44:21.055" endtime="20231129 08:45:07.417"/>
</suite>
<suite id="s1-s5" name="EC-recovery" source="/opt/hadoop/smoketest/replication/wait.robot">
<test id="s1-s5-t1" name="Wait Until Container Replicated" line="32">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5min</arg>
<arg>10sec</arg>
<arg>Check Container Replicated</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check Container Replicated">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info --json "${container}" | jq '.pipeline.nodes | length'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:45:12.257" level="INFO">Running command 'ozone admin container info --json "1" | jq '.pipeline.nodes | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:45:21.659" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:45:21.659" level="INFO">${output} = 4</msg>
<status status="PASS" starttime="20231129 08:45:12.255" endtime="20231129 08:45:21.659"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:45:21.661" level="INFO">4</msg>
<status status="PASS" starttime="20231129 08:45:21.660" endtime="20231129 08:45:21.661"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:45:21.661" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:45:21.661" endtime="20231129 08:45:21.662"/>
</kw>
<status status="PASS" starttime="20231129 08:45:12.254" endtime="20231129 08:45:21.662"/>
</kw>
<msg timestamp="20231129 08:45:21.662" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:45:12.254" endtime="20231129 08:45:21.662"/>
</kw>
<msg timestamp="20231129 08:45:21.662" level="INFO">${output} = 4</msg>
<status status="PASS" starttime="20231129 08:45:12.253" endtime="20231129 08:45:21.662"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${count}</arg>
<doc>Fails if the given objects are unequal.</doc>
<msg timestamp="20231129 08:45:21.663" level="FAIL">4 != 5</msg>
<status status="FAIL" starttime="20231129 08:45:21.662" endtime="20231129 08:45:21.663"/>
</kw>
<status status="FAIL" starttime="20231129 08:45:12.252" endtime="20231129 08:45:21.663"/>
</kw>
<kw name="Check Container Replicated">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info --json "${container}" | jq '.pipeline.nodes | length'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:45:31.667" level="INFO">Running command 'ozone admin container info --json "1" | jq '.pipeline.nodes | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:45:34.973" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:45:34.973" level="INFO">${output} = 4</msg>
<status status="PASS" starttime="20231129 08:45:31.665" endtime="20231129 08:45:34.973"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:45:34.974" level="INFO">4</msg>
<status status="PASS" starttime="20231129 08:45:34.974" endtime="20231129 08:45:34.975"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:45:34.975" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:45:34.975" endtime="20231129 08:45:34.975"/>
</kw>
<status status="PASS" starttime="20231129 08:45:31.665" endtime="20231129 08:45:34.975"/>
</kw>
<msg timestamp="20231129 08:45:34.975" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:45:31.665" endtime="20231129 08:45:34.976"/>
</kw>
<msg timestamp="20231129 08:45:34.976" level="INFO">${output} = 4</msg>
<status status="PASS" starttime="20231129 08:45:31.664" endtime="20231129 08:45:34.976"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${count}</arg>
<doc>Fails if the given objects are unequal.</doc>
<msg timestamp="20231129 08:45:34.976" level="FAIL">4 != 5</msg>
<status status="FAIL" starttime="20231129 08:45:34.976" endtime="20231129 08:45:34.977"/>
</kw>
<status status="FAIL" starttime="20231129 08:45:31.664" endtime="20231129 08:45:34.977"/>
</kw>
<kw name="Check Container Replicated">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info --json "${container}" | jq '.pipeline.nodes | length'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:45:44.981" level="INFO">Running command 'ozone admin container info --json "1" | jq '.pipeline.nodes | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:45:48.458" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:45:48.458" level="INFO">${output} = 4</msg>
<status status="PASS" starttime="20231129 08:45:44.979" endtime="20231129 08:45:48.458"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:45:48.459" level="INFO">4</msg>
<status status="PASS" starttime="20231129 08:45:48.459" endtime="20231129 08:45:48.459"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:45:48.460" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:45:48.460" endtime="20231129 08:45:48.460"/>
</kw>
<status status="PASS" starttime="20231129 08:45:44.979" endtime="20231129 08:45:48.460"/>
</kw>
<msg timestamp="20231129 08:45:48.460" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:45:44.978" endtime="20231129 08:45:48.460"/>
</kw>
<msg timestamp="20231129 08:45:48.460" level="INFO">${output} = 4</msg>
<status status="PASS" starttime="20231129 08:45:44.978" endtime="20231129 08:45:48.460"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${count}</arg>
<doc>Fails if the given objects are unequal.</doc>
<msg timestamp="20231129 08:45:48.461" level="FAIL">4 != 5</msg>
<status status="FAIL" starttime="20231129 08:45:48.461" endtime="20231129 08:45:48.461"/>
</kw>
<status status="FAIL" starttime="20231129 08:45:44.977" endtime="20231129 08:45:48.461"/>
</kw>
<kw name="Check Container Replicated">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info --json "${container}" | jq '.pipeline.nodes | length'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:45:58.465" level="INFO">Running command 'ozone admin container info --json "1" | jq '.pipeline.nodes | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:46:01.765" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:46:01.765" level="INFO">${output} = 4</msg>
<status status="PASS" starttime="20231129 08:45:58.463" endtime="20231129 08:46:01.765"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:46:01.766" level="INFO">4</msg>
<status status="PASS" starttime="20231129 08:46:01.765" endtime="20231129 08:46:01.766"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:46:01.766" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:46:01.766" endtime="20231129 08:46:01.766"/>
</kw>
<status status="PASS" starttime="20231129 08:45:58.463" endtime="20231129 08:46:01.767"/>
</kw>
<msg timestamp="20231129 08:46:01.767" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:45:58.463" endtime="20231129 08:46:01.767"/>
</kw>
<msg timestamp="20231129 08:46:01.767" level="INFO">${output} = 4</msg>
<status status="PASS" starttime="20231129 08:45:58.462" endtime="20231129 08:46:01.767"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${count}</arg>
<doc>Fails if the given objects are unequal.</doc>
<msg timestamp="20231129 08:46:01.767" level="FAIL">4 != 5</msg>
<status status="FAIL" starttime="20231129 08:46:01.767" endtime="20231129 08:46:01.768"/>
</kw>
<status status="FAIL" starttime="20231129 08:45:58.462" endtime="20231129 08:46:01.768"/>
</kw>
<kw name="Check Container Replicated">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info --json "${container}" | jq '.pipeline.nodes | length'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:46:11.771" level="INFO">Running command 'ozone admin container info --json "1" | jq '.pipeline.nodes | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:46:15.049" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:46:15.049" level="INFO">${output} = 4</msg>
<status status="PASS" starttime="20231129 08:46:11.770" endtime="20231129 08:46:15.049"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:46:15.050" level="INFO">4</msg>
<status status="PASS" starttime="20231129 08:46:15.049" endtime="20231129 08:46:15.050"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:46:15.051" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:46:15.050" endtime="20231129 08:46:15.051"/>
</kw>
<status status="PASS" starttime="20231129 08:46:11.769" endtime="20231129 08:46:15.051"/>
</kw>
<msg timestamp="20231129 08:46:15.051" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:46:11.769" endtime="20231129 08:46:15.051"/>
</kw>
<msg timestamp="20231129 08:46:15.051" level="INFO">${output} = 4</msg>
<status status="PASS" starttime="20231129 08:46:11.769" endtime="20231129 08:46:15.051"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${count}</arg>
<doc>Fails if the given objects are unequal.</doc>
<msg timestamp="20231129 08:46:15.052" level="FAIL">4 != 5</msg>
<status status="FAIL" starttime="20231129 08:46:15.051" endtime="20231129 08:46:15.052"/>
</kw>
<status status="FAIL" starttime="20231129 08:46:11.768" endtime="20231129 08:46:15.052"/>
</kw>
<kw name="Check Container Replicated">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info --json "${container}" | jq '.pipeline.nodes | length'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:46:25.056" level="INFO">Running command 'ozone admin container info --json "1" | jq '.pipeline.nodes | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:46:28.353" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:46:28.353" level="INFO">${output} = 4</msg>
<status status="PASS" starttime="20231129 08:46:25.054" endtime="20231129 08:46:28.353"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:46:28.354" level="INFO">4</msg>
<status status="PASS" starttime="20231129 08:46:28.353" endtime="20231129 08:46:28.354"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:46:28.354" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:46:28.354" endtime="20231129 08:46:28.354"/>
</kw>
<status status="PASS" starttime="20231129 08:46:25.054" endtime="20231129 08:46:28.355"/>
</kw>
<msg timestamp="20231129 08:46:28.355" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:46:25.053" endtime="20231129 08:46:28.355"/>
</kw>
<msg timestamp="20231129 08:46:28.355" level="INFO">${output} = 4</msg>
<status status="PASS" starttime="20231129 08:46:25.053" endtime="20231129 08:46:28.355"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${count}</arg>
<doc>Fails if the given objects are unequal.</doc>
<msg timestamp="20231129 08:46:28.355" level="FAIL">4 != 5</msg>
<status status="FAIL" starttime="20231129 08:46:28.355" endtime="20231129 08:46:28.356"/>
</kw>
<status status="FAIL" starttime="20231129 08:46:25.052" endtime="20231129 08:46:28.356"/>
</kw>
<kw name="Check Container Replicated">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info --json "${container}" | jq '.pipeline.nodes | length'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:46:38.360" level="INFO">Running command 'ozone admin container info --json "1" | jq '.pipeline.nodes | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:46:41.693" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:46:41.693" level="INFO">${output} = 4</msg>
<status status="PASS" starttime="20231129 08:46:38.358" endtime="20231129 08:46:41.693"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:46:41.694" level="INFO">4</msg>
<status status="PASS" starttime="20231129 08:46:41.693" endtime="20231129 08:46:41.694"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:46:41.694" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:46:41.694" endtime="20231129 08:46:41.694"/>
</kw>
<status status="PASS" starttime="20231129 08:46:38.357" endtime="20231129 08:46:41.695"/>
</kw>
<msg timestamp="20231129 08:46:41.695" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:46:38.357" endtime="20231129 08:46:41.695"/>
</kw>
<msg timestamp="20231129 08:46:41.695" level="INFO">${output} = 4</msg>
<status status="PASS" starttime="20231129 08:46:38.357" endtime="20231129 08:46:41.695"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${count}</arg>
<doc>Fails if the given objects are unequal.</doc>
<msg timestamp="20231129 08:46:41.696" level="FAIL">4 != 5</msg>
<status status="FAIL" starttime="20231129 08:46:41.695" endtime="20231129 08:46:41.696"/>
</kw>
<status status="FAIL" starttime="20231129 08:46:38.356" endtime="20231129 08:46:41.696"/>
</kw>
<kw name="Check Container Replicated">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info --json "${container}" | jq '.pipeline.nodes | length'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:46:51.701" level="INFO">Running command 'ozone admin container info --json "1" | jq '.pipeline.nodes | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:46:54.996" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:46:54.997" level="INFO">${output} = 4</msg>
<status status="PASS" starttime="20231129 08:46:51.699" endtime="20231129 08:46:54.997"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:46:54.998" level="INFO">4</msg>
<status status="PASS" starttime="20231129 08:46:54.997" endtime="20231129 08:46:54.998"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:46:54.998" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:46:54.998" endtime="20231129 08:46:54.998"/>
</kw>
<status status="PASS" starttime="20231129 08:46:51.699" endtime="20231129 08:46:54.998"/>
</kw>
<msg timestamp="20231129 08:46:54.998" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:46:51.698" endtime="20231129 08:46:54.998"/>
</kw>
<msg timestamp="20231129 08:46:54.999" level="INFO">${output} = 4</msg>
<status status="PASS" starttime="20231129 08:46:51.697" endtime="20231129 08:46:54.999"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${count}</arg>
<doc>Fails if the given objects are unequal.</doc>
<msg timestamp="20231129 08:46:54.999" level="FAIL">4 != 5</msg>
<status status="FAIL" starttime="20231129 08:46:54.999" endtime="20231129 08:46:54.999"/>
</kw>
<status status="FAIL" starttime="20231129 08:46:51.696" endtime="20231129 08:46:54.999"/>
</kw>
<kw name="Check Container Replicated">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info --json "${container}" | jq '.pipeline.nodes | length'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:47:05.003" level="INFO">Running command 'ozone admin container info --json "1" | jq '.pipeline.nodes | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:47:08.230" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:47:08.230" level="INFO">${output} = 4</msg>
<status status="PASS" starttime="20231129 08:47:05.001" endtime="20231129 08:47:08.230"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:47:08.231" level="INFO">4</msg>
<status status="PASS" starttime="20231129 08:47:08.231" endtime="20231129 08:47:08.231"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:47:08.232" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:47:08.231" endtime="20231129 08:47:08.232"/>
</kw>
<status status="PASS" starttime="20231129 08:47:05.001" endtime="20231129 08:47:08.232"/>
</kw>
<msg timestamp="20231129 08:47:08.232" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:47:05.001" endtime="20231129 08:47:08.232"/>
</kw>
<msg timestamp="20231129 08:47:08.232" level="INFO">${output} = 4</msg>
<status status="PASS" starttime="20231129 08:47:05.000" endtime="20231129 08:47:08.232"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${count}</arg>
<doc>Fails if the given objects are unequal.</doc>
<msg timestamp="20231129 08:47:08.233" level="FAIL">4 != 5</msg>
<status status="FAIL" starttime="20231129 08:47:08.233" endtime="20231129 08:47:08.233"/>
</kw>
<status status="FAIL" starttime="20231129 08:47:05.000" endtime="20231129 08:47:08.233"/>
</kw>
<kw name="Check Container Replicated">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info --json "${container}" | jq '.pipeline.nodes | length'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:47:18.237" level="INFO">Running command 'ozone admin container info --json "1" | jq '.pipeline.nodes | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:47:21.470" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:47:21.470" level="INFO">${output} = 3</msg>
<status status="PASS" starttime="20231129 08:47:18.235" endtime="20231129 08:47:21.470"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:47:21.471" level="INFO">3</msg>
<status status="PASS" starttime="20231129 08:47:21.470" endtime="20231129 08:47:21.471"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:47:21.472" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:47:21.471" endtime="20231129 08:47:21.472"/>
</kw>
<status status="PASS" starttime="20231129 08:47:18.235" endtime="20231129 08:47:21.472"/>
</kw>
<msg timestamp="20231129 08:47:21.472" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:47:18.235" endtime="20231129 08:47:21.472"/>
</kw>
<msg timestamp="20231129 08:47:21.472" level="INFO">${output} = 3</msg>
<status status="PASS" starttime="20231129 08:47:18.234" endtime="20231129 08:47:21.472"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${count}</arg>
<doc>Fails if the given objects are unequal.</doc>
<msg timestamp="20231129 08:47:21.473" level="FAIL">3 != 5</msg>
<status status="FAIL" starttime="20231129 08:47:21.472" endtime="20231129 08:47:21.473"/>
</kw>
<status status="FAIL" starttime="20231129 08:47:18.234" endtime="20231129 08:47:21.473"/>
</kw>
<kw name="Check Container Replicated">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info --json "${container}" | jq '.pipeline.nodes | length'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:47:31.477" level="INFO">Running command 'ozone admin container info --json "1" | jq '.pipeline.nodes | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:47:34.682" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:47:34.682" level="INFO">${output} = 3</msg>
<status status="PASS" starttime="20231129 08:47:31.475" endtime="20231129 08:47:34.682"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:47:34.683" level="INFO">3</msg>
<status status="PASS" starttime="20231129 08:47:34.682" endtime="20231129 08:47:34.683"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:47:34.684" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:47:34.683" endtime="20231129 08:47:34.684"/>
</kw>
<status status="PASS" starttime="20231129 08:47:31.475" endtime="20231129 08:47:34.684"/>
</kw>
<msg timestamp="20231129 08:47:34.684" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:47:31.474" endtime="20231129 08:47:34.684"/>
</kw>
<msg timestamp="20231129 08:47:34.684" level="INFO">${output} = 3</msg>
<status status="PASS" starttime="20231129 08:47:31.474" endtime="20231129 08:47:34.684"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${count}</arg>
<doc>Fails if the given objects are unequal.</doc>
<msg timestamp="20231129 08:47:34.685" level="FAIL">3 != 5</msg>
<status status="FAIL" starttime="20231129 08:47:34.684" endtime="20231129 08:47:34.685"/>
</kw>
<status status="FAIL" starttime="20231129 08:47:31.473" endtime="20231129 08:47:34.685"/>
</kw>
<kw name="Check Container Replicated">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info --json "${container}" | jq '.pipeline.nodes | length'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:47:44.689" level="INFO">Running command 'ozone admin container info --json "1" | jq '.pipeline.nodes | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:47:47.876" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:47:47.877" level="INFO">${output} = 4</msg>
<status status="PASS" starttime="20231129 08:47:44.687" endtime="20231129 08:47:47.877"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:47:47.877" level="INFO">4</msg>
<status status="PASS" starttime="20231129 08:47:47.877" endtime="20231129 08:47:47.877"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:47:47.878" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:47:47.878" endtime="20231129 08:47:47.878"/>
</kw>
<status status="PASS" starttime="20231129 08:47:44.687" endtime="20231129 08:47:47.878"/>
</kw>
<msg timestamp="20231129 08:47:47.878" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:47:44.686" endtime="20231129 08:47:47.878"/>
</kw>
<msg timestamp="20231129 08:47:47.878" level="INFO">${output} = 4</msg>
<status status="PASS" starttime="20231129 08:47:44.686" endtime="20231129 08:47:47.878"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${count}</arg>
<doc>Fails if the given objects are unequal.</doc>
<msg timestamp="20231129 08:47:47.879" level="FAIL">4 != 5</msg>
<status status="FAIL" starttime="20231129 08:47:47.879" endtime="20231129 08:47:47.879"/>
</kw>
<status status="FAIL" starttime="20231129 08:47:44.685" endtime="20231129 08:47:47.879"/>
</kw>
<kw name="Check Container Replicated">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info --json "${container}" | jq '.pipeline.nodes | length'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:47:57.883" level="INFO">Running command 'ozone admin container info --json "1" | jq '.pipeline.nodes | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:48:01.068" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:48:01.069" level="INFO">${output} = 4</msg>
<status status="PASS" starttime="20231129 08:47:57.881" endtime="20231129 08:48:01.069"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:48:01.070" level="INFO">4</msg>
<status status="PASS" starttime="20231129 08:48:01.069" endtime="20231129 08:48:01.070"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:48:01.070" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:48:01.070" endtime="20231129 08:48:01.071"/>
</kw>
<status status="PASS" starttime="20231129 08:47:57.881" endtime="20231129 08:48:01.071"/>
</kw>
<msg timestamp="20231129 08:48:01.071" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:47:57.881" endtime="20231129 08:48:01.071"/>
</kw>
<msg timestamp="20231129 08:48:01.071" level="INFO">${output} = 4</msg>
<status status="PASS" starttime="20231129 08:47:57.880" endtime="20231129 08:48:01.071"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${count}</arg>
<doc>Fails if the given objects are unequal.</doc>
<msg timestamp="20231129 08:48:01.072" level="FAIL">4 != 5</msg>
<status status="FAIL" starttime="20231129 08:48:01.071" endtime="20231129 08:48:01.072"/>
</kw>
<status status="FAIL" starttime="20231129 08:47:57.880" endtime="20231129 08:48:01.072"/>
</kw>
<kw name="Check Container Replicated">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info --json "${container}" | jq '.pipeline.nodes | length'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:48:11.076" level="INFO">Running command 'ozone admin container info --json "1" | jq '.pipeline.nodes | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:48:14.286" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:48:14.286" level="INFO">${output} = 4</msg>
<status status="PASS" starttime="20231129 08:48:11.074" endtime="20231129 08:48:14.286"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:48:14.287" level="INFO">4</msg>
<status status="PASS" starttime="20231129 08:48:14.286" endtime="20231129 08:48:14.287"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:48:14.287" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:48:14.287" endtime="20231129 08:48:14.287"/>
</kw>
<status status="PASS" starttime="20231129 08:48:11.073" endtime="20231129 08:48:14.287"/>
</kw>
<msg timestamp="20231129 08:48:14.287" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:48:11.073" endtime="20231129 08:48:14.287"/>
</kw>
<msg timestamp="20231129 08:48:14.288" level="INFO">${output} = 4</msg>
<status status="PASS" starttime="20231129 08:48:11.073" endtime="20231129 08:48:14.288"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${count}</arg>
<doc>Fails if the given objects are unequal.</doc>
<msg timestamp="20231129 08:48:14.288" level="FAIL">4 != 5</msg>
<status status="FAIL" starttime="20231129 08:48:14.288" endtime="20231129 08:48:14.288"/>
</kw>
<status status="FAIL" starttime="20231129 08:48:11.072" endtime="20231129 08:48:14.288"/>
</kw>
<kw name="Check Container Replicated">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info --json "${container}" | jq '.pipeline.nodes | length'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:48:24.292" level="INFO">Running command 'ozone admin container info --json "1" | jq '.pipeline.nodes | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:48:27.352" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:48:27.352" level="INFO">${output} = 4</msg>
<status status="PASS" starttime="20231129 08:48:24.290" endtime="20231129 08:48:27.352"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:48:27.353" level="INFO">4</msg>
<status status="PASS" starttime="20231129 08:48:27.353" endtime="20231129 08:48:27.353"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:48:27.354" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:48:27.354" endtime="20231129 08:48:27.354"/>
</kw>
<status status="PASS" starttime="20231129 08:48:24.290" endtime="20231129 08:48:27.354"/>
</kw>
<msg timestamp="20231129 08:48:27.354" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:48:24.290" endtime="20231129 08:48:27.354"/>
</kw>
<msg timestamp="20231129 08:48:27.354" level="INFO">${output} = 4</msg>
<status status="PASS" starttime="20231129 08:48:24.289" endtime="20231129 08:48:27.354"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${count}</arg>
<doc>Fails if the given objects are unequal.</doc>
<msg timestamp="20231129 08:48:27.355" level="FAIL">4 != 5</msg>
<status status="FAIL" starttime="20231129 08:48:27.355" endtime="20231129 08:48:27.355"/>
</kw>
<status status="FAIL" starttime="20231129 08:48:24.289" endtime="20231129 08:48:27.355"/>
</kw>
<kw name="Check Container Replicated">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info --json "${container}" | jq '.pipeline.nodes | length'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:48:37.359" level="INFO">Running command 'ozone admin container info --json "1" | jq '.pipeline.nodes | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:48:40.593" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:48:40.593" level="INFO">${output} = 4</msg>
<status status="PASS" starttime="20231129 08:48:37.358" endtime="20231129 08:48:40.593"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:48:40.594" level="INFO">4</msg>
<status status="PASS" starttime="20231129 08:48:40.594" endtime="20231129 08:48:40.594"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:48:40.595" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:48:40.594" endtime="20231129 08:48:40.595"/>
</kw>
<status status="PASS" starttime="20231129 08:48:37.357" endtime="20231129 08:48:40.595"/>
</kw>
<msg timestamp="20231129 08:48:40.595" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:48:37.357" endtime="20231129 08:48:40.595"/>
</kw>
<msg timestamp="20231129 08:48:40.595" level="INFO">${output} = 4</msg>
<status status="PASS" starttime="20231129 08:48:37.356" endtime="20231129 08:48:40.595"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${count}</arg>
<doc>Fails if the given objects are unequal.</doc>
<msg timestamp="20231129 08:48:40.596" level="FAIL">4 != 5</msg>
<status status="FAIL" starttime="20231129 08:48:40.595" endtime="20231129 08:48:40.596"/>
</kw>
<status status="FAIL" starttime="20231129 08:48:37.356" endtime="20231129 08:48:40.596"/>
</kw>
<kw name="Check Container Replicated">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info --json "${container}" | jq '.pipeline.nodes | length'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:48:50.600" level="INFO">Running command 'ozone admin container info --json "1" | jq '.pipeline.nodes | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:48:53.662" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:48:53.662" level="INFO">${output} = 4</msg>
<status status="PASS" starttime="20231129 08:48:50.598" endtime="20231129 08:48:53.662"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:48:53.663" level="INFO">4</msg>
<status status="PASS" starttime="20231129 08:48:53.663" endtime="20231129 08:48:53.664"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:48:53.664" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:48:53.664" endtime="20231129 08:48:53.664"/>
</kw>
<status status="PASS" starttime="20231129 08:48:50.598" endtime="20231129 08:48:53.665"/>
</kw>
<msg timestamp="20231129 08:48:53.665" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:48:50.598" endtime="20231129 08:48:53.665"/>
</kw>
<msg timestamp="20231129 08:48:53.665" level="INFO">${output} = 4</msg>
<status status="PASS" starttime="20231129 08:48:50.597" endtime="20231129 08:48:53.665"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${count}</arg>
<doc>Fails if the given objects are unequal.</doc>
<msg timestamp="20231129 08:48:53.666" level="FAIL">4 != 5</msg>
<status status="FAIL" starttime="20231129 08:48:53.665" endtime="20231129 08:48:53.666"/>
</kw>
<status status="FAIL" starttime="20231129 08:48:50.597" endtime="20231129 08:48:53.666"/>
</kw>
<kw name="Check Container Replicated">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info --json "${container}" | jq '.pipeline.nodes | length'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:49:03.671" level="INFO">Running command 'ozone admin container info --json "1" | jq '.pipeline.nodes | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:49:06.864" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:49:06.864" level="INFO">${output} = 4</msg>
<status status="PASS" starttime="20231129 08:49:03.669" endtime="20231129 08:49:06.864"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:49:06.865" level="INFO">4</msg>
<status status="PASS" starttime="20231129 08:49:06.865" endtime="20231129 08:49:06.865"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:49:06.866" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:49:06.865" endtime="20231129 08:49:06.866"/>
</kw>
<status status="PASS" starttime="20231129 08:49:03.668" endtime="20231129 08:49:06.866"/>
</kw>
<msg timestamp="20231129 08:49:06.866" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:49:03.668" endtime="20231129 08:49:06.866"/>
</kw>
<msg timestamp="20231129 08:49:06.866" level="INFO">${output} = 4</msg>
<status status="PASS" starttime="20231129 08:49:03.667" endtime="20231129 08:49:06.866"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${count}</arg>
<doc>Fails if the given objects are unequal.</doc>
<msg timestamp="20231129 08:49:06.867" level="FAIL">4 != 5</msg>
<status status="FAIL" starttime="20231129 08:49:06.866" endtime="20231129 08:49:06.867"/>
</kw>
<status status="FAIL" starttime="20231129 08:49:03.667" endtime="20231129 08:49:06.867"/>
</kw>
<kw name="Check Container Replicated">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info --json "${container}" | jq '.pipeline.nodes | length'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:49:16.871" level="INFO">Running command 'ozone admin container info --json "1" | jq '.pipeline.nodes | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:49:19.995" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:49:19.995" level="INFO">${output} = 4</msg>
<status status="PASS" starttime="20231129 08:49:16.869" endtime="20231129 08:49:19.995"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:49:19.996" level="INFO">4</msg>
<status status="PASS" starttime="20231129 08:49:19.995" endtime="20231129 08:49:19.996"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:49:19.996" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:49:19.996" endtime="20231129 08:49:19.996"/>
</kw>
<status status="PASS" starttime="20231129 08:49:16.869" endtime="20231129 08:49:19.996"/>
</kw>
<msg timestamp="20231129 08:49:19.996" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:49:16.869" endtime="20231129 08:49:19.996"/>
</kw>
<msg timestamp="20231129 08:49:19.997" level="INFO">${output} = 4</msg>
<status status="PASS" starttime="20231129 08:49:16.868" endtime="20231129 08:49:19.997"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${count}</arg>
<doc>Fails if the given objects are unequal.</doc>
<msg timestamp="20231129 08:49:19.997" level="FAIL">4 != 5</msg>
<status status="FAIL" starttime="20231129 08:49:19.997" endtime="20231129 08:49:19.997"/>
</kw>
<status status="FAIL" starttime="20231129 08:49:16.868" endtime="20231129 08:49:19.997"/>
</kw>
<kw name="Check Container Replicated">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info --json "${container}" | jq '.pipeline.nodes | length'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:49:30.002" level="INFO">Running command 'ozone admin container info --json "1" | jq '.pipeline.nodes | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:49:33.345" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:49:33.345" level="INFO">${output} = 4</msg>
<status status="PASS" starttime="20231129 08:49:30.000" endtime="20231129 08:49:33.345"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:49:33.346" level="INFO">4</msg>
<status status="PASS" starttime="20231129 08:49:33.346" endtime="20231129 08:49:33.346"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:49:33.347" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:49:33.347" endtime="20231129 08:49:33.347"/>
</kw>
<status status="PASS" starttime="20231129 08:49:29.999" endtime="20231129 08:49:33.347"/>
</kw>
<msg timestamp="20231129 08:49:33.347" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:49:29.999" endtime="20231129 08:49:33.347"/>
</kw>
<msg timestamp="20231129 08:49:33.347" level="INFO">${output} = 4</msg>
<status status="PASS" starttime="20231129 08:49:29.999" endtime="20231129 08:49:33.347"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${count}</arg>
<doc>Fails if the given objects are unequal.</doc>
<msg timestamp="20231129 08:49:33.348" level="FAIL">4 != 5</msg>
<status status="FAIL" starttime="20231129 08:49:33.347" endtime="20231129 08:49:33.348"/>
</kw>
<status status="FAIL" starttime="20231129 08:49:29.998" endtime="20231129 08:49:33.348"/>
</kw>
<kw name="Check Container Replicated">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info --json "${container}" | jq '.pipeline.nodes | length'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:49:43.352" level="INFO">Running command 'ozone admin container info --json "1" | jq '.pipeline.nodes | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:49:46.398" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:49:46.398" level="INFO">${output} = 4</msg>
<status status="PASS" starttime="20231129 08:49:43.350" endtime="20231129 08:49:46.399"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:49:46.400" level="INFO">4</msg>
<status status="PASS" starttime="20231129 08:49:46.399" endtime="20231129 08:49:46.400"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:49:46.400" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:49:46.400" endtime="20231129 08:49:46.400"/>
</kw>
<status status="PASS" starttime="20231129 08:49:43.350" endtime="20231129 08:49:46.401"/>
</kw>
<msg timestamp="20231129 08:49:46.401" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:49:43.350" endtime="20231129 08:49:46.401"/>
</kw>
<msg timestamp="20231129 08:49:46.401" level="INFO">${output} = 4</msg>
<status status="PASS" starttime="20231129 08:49:43.349" endtime="20231129 08:49:46.401"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${count}</arg>
<doc>Fails if the given objects are unequal.</doc>
<msg timestamp="20231129 08:49:46.401" level="FAIL">4 != 5</msg>
<status status="FAIL" starttime="20231129 08:49:46.401" endtime="20231129 08:49:46.401"/>
</kw>
<status status="FAIL" starttime="20231129 08:49:43.349" endtime="20231129 08:49:46.402"/>
</kw>
<kw name="Check Container Replicated">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info --json "${container}" | jq '.pipeline.nodes | length'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:49:56.406" level="INFO">Running command 'ozone admin container info --json "1" | jq '.pipeline.nodes | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:49:59.430" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:49:59.430" level="INFO">${output} = 4</msg>
<status status="PASS" starttime="20231129 08:49:56.404" endtime="20231129 08:49:59.430"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:49:59.431" level="INFO">4</msg>
<status status="PASS" starttime="20231129 08:49:59.431" endtime="20231129 08:49:59.431"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:49:59.432" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:49:59.431" endtime="20231129 08:49:59.432"/>
</kw>
<status status="PASS" starttime="20231129 08:49:56.404" endtime="20231129 08:49:59.432"/>
</kw>
<msg timestamp="20231129 08:49:59.432" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:49:56.403" endtime="20231129 08:49:59.432"/>
</kw>
<msg timestamp="20231129 08:49:59.432" level="INFO">${output} = 4</msg>
<status status="PASS" starttime="20231129 08:49:56.403" endtime="20231129 08:49:59.432"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${count}</arg>
<doc>Fails if the given objects are unequal.</doc>
<msg timestamp="20231129 08:49:59.433" level="FAIL">4 != 5</msg>
<status status="FAIL" starttime="20231129 08:49:59.432" endtime="20231129 08:49:59.433"/>
</kw>
<status status="FAIL" starttime="20231129 08:49:56.402" endtime="20231129 08:49:59.433"/>
</kw>
<kw name="Check Container Replicated">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info --json "${container}" | jq '.pipeline.nodes | length'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:50:09.437" level="INFO">Running command 'ozone admin container info --json "1" | jq '.pipeline.nodes | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:50:12.252" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20231129 08:50:09.435" endtime="20231129 08:50:12.252"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20231129 08:50:12.253" endtime="20231129 08:50:12.253"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20231129 08:50:12.253" endtime="20231129 08:50:12.253"/>
</kw>
<status status="FAIL" starttime="20231129 08:50:09.435" endtime="20231129 08:50:12.253"/>
</kw>
<msg timestamp="20231129 08:50:12.254" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20231129 08:50:09.435" endtime="20231129 08:50:12.254"/>
</kw>
<status status="FAIL" starttime="20231129 08:50:09.434" endtime="20231129 08:50:12.254"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${count}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20231129 08:50:12.254" endtime="20231129 08:50:12.254"/>
</kw>
<status status="FAIL" starttime="20231129 08:50:09.433" endtime="20231129 08:50:12.254"/>
</kw>
<status status="FAIL" starttime="20231129 08:45:12.252" endtime="20231129 08:50:12.254"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20231129 08:45:12.251" endtime="20231129 08:50:12.255">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Wait for replication to succeed</doc>
<status status="FAIL" starttime="20231129 08:45:12.181" endtime="20231129 08:50:12.256"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="814672"/>
</suite>
<statistics>
<total>
<stat pass="94" fail="1" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="13" fail="0" skip="0">no-bucket-type</stat>
</tag>
<suite>
<stat pass="94" fail="1" skip="0" id="s1" name="ozonesecure-ec">ozonesecure-ec</stat>
<stat pass="72" fail="0" skip="0" id="s1-s1" name="S3">ozonesecure-ec.S3</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1-s1" name="Awss3">ozonesecure-ec.S3.Awss3</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s2" name="Boto3">ozonesecure-ec.S3.Boto3</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s3" name="Bucketcreate">ozonesecure-ec.S3.Bucketcreate</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s4" name="Bucketdelete">ozonesecure-ec.S3.Bucketdelete</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1-s5" name="Buckethead">ozonesecure-ec.S3.Buckethead</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s6" name="Bucketlist">ozonesecure-ec.S3.Bucketlist</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s7" name="Freon">ozonesecure-ec.S3.Freon</stat>
<stat pass="14" fail="0" skip="0" id="s1-s1-s8" name="MultipartUpload">ozonesecure-ec.S3.MultipartUpload</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s9" name="Objectcopy">ozonesecure-ec.S3.Objectcopy</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s10" name="Objectcopys3A">ozonesecure-ec.S3.Objectcopys3A</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s11" name="Objectdelete">ozonesecure-ec.S3.Objectdelete</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s12" name="Objecthead">ozonesecure-ec.S3.Objecthead</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s13" name="Objectmultidelete">ozonesecure-ec.S3.Objectmultidelete</stat>
<stat pass="19" fail="0" skip="0" id="s1-s1-s14" name="Objectputget">ozonesecure-ec.S3.Objectputget</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1-s15" name="S3 Getsecret">ozonesecure-ec.S3.S3 Getsecret</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1-s16" name="Secretgenerate">ozonesecure-ec.S3.Secretgenerate</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1-s17" name="Secretrevoke">ozonesecure-ec.S3.Secretrevoke</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s18" name="Webui">ozonesecure-ec.S3.Webui</stat>
<stat pass="12" fail="0" skip="0" id="s1-s2" name="Basic">ozonesecure-ec.Basic</stat>
<stat pass="5" fail="0" skip="0" id="s1-s3" name="read-4-datanodes">ozonesecure-ec.read-4-datanodes</stat>
<stat pass="5" fail="0" skip="0" id="s1-s4" name="read-3-datanodes">ozonesecure-ec.read-3-datanodes</stat>
<stat pass="0" fail="1" skip="0" id="s1-s5" name="EC-recovery">ozonesecure-ec.EC-recovery</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
