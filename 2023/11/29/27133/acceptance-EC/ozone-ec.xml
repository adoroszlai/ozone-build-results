<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20231129 08:34:35.887" rpa="false" schemaversion="4">
<suite id="s1" name="ozone-ec">
<suite id="s1-s1" name="S3" source="/opt/hadoop/smoketest/s3">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20231129 08:25:35.957" endtime="20231129 08:25:35.957"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Generate random prefix" library="commonawslib">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231129 08:25:35.959" level="INFO">${randStr} = 5520489753</msg>
<status status="PASS" starttime="20231129 08:25:35.958" endtime="20231129 08:25:35.959"/>
</kw>
<msg timestamp="20231129 08:25:35.959" level="INFO">${random} = ozone-test-5520489753</msg>
<status status="PASS" starttime="20231129 08:25:35.958" endtime="20231129 08:25:35.959"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231129 08:25:35.961" level="INFO">${PREFIX} = ozone-test-5520489753</msg>
<status status="PASS" starttime="20231129 08:25:35.959" endtime="20231129 08:25:35.961"/>
</kw>
<status status="PASS" starttime="20231129 08:25:35.958" endtime="20231129 08:25:35.961"/>
</kw>
<status status="PASS" starttime="20231129 08:25:35.957" endtime="20231129 08:25:35.961"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Install aws cli" library="commonawslib">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which aws</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:25:35.976" level="INFO">Running command 'which aws 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:25:35.976" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:25:35.976" level="INFO">${output} = /usr/local/bin/aws</msg>
<status status="PASS" starttime="20231129 08:25:35.961" endtime="20231129 08:25:35.976"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20231129 08:25:35.977" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:25:35.977" endtime="20231129 08:25:35.977"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>which apt-get</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="NOT RUN" starttime="20231129 08:25:35.977" endtime="20231129 08:25:35.977"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 debian</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:25:35.977" endtime="20231129 08:25:35.977"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>yum --help</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<status status="NOT RUN" starttime="20231129 08:25:35.978" endtime="20231129 08:25:35.978"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${rc}' == '0'</arg>
<arg>Install aws cli s3 centos</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:25:35.978" endtime="20231129 08:25:35.978"/>
</kw>
<status status="PASS" starttime="20231129 08:25:35.961" endtime="20231129 08:25:35.978"/>
</kw>
<status status="PASS" starttime="20231129 08:25:35.961" endtime="20231129 08:25:35.978"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup v4 headers" library="commonawslib">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231129 08:25:35.979" endtime="20231129 08:25:35.979"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup secure v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231129 08:25:35.979" endtime="20231129 08:25:35.979"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Setup dummy credentials for S3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:25:35.982" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:25:36.376" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:25:36.376" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:25:35.981" endtime="20231129 08:25:36.377"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:25:36.377" level="INFO"/>
<status status="PASS" starttime="20231129 08:25:36.377" endtime="20231129 08:25:36.377"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:25:36.378" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:25:36.378" endtime="20231129 08:25:36.378"/>
</kw>
<status status="PASS" starttime="20231129 08:25:35.980" endtime="20231129 08:25:36.378"/>
</kw>
<msg timestamp="20231129 08:25:36.378" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:25:35.980" endtime="20231129 08:25:36.378"/>
</kw>
<status status="PASS" starttime="20231129 08:25:35.980" endtime="20231129 08:25:36.378"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:25:36.381" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:25:36.763" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:25:36.763" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:25:36.379" endtime="20231129 08:25:36.763"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:25:36.763" level="INFO"/>
<status status="PASS" starttime="20231129 08:25:36.763" endtime="20231129 08:25:36.763"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:25:36.764" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:25:36.764" endtime="20231129 08:25:36.764"/>
</kw>
<status status="PASS" starttime="20231129 08:25:36.379" endtime="20231129 08:25:36.764"/>
</kw>
<msg timestamp="20231129 08:25:36.764" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:25:36.379" endtime="20231129 08:25:36.764"/>
</kw>
<status status="PASS" starttime="20231129 08:25:36.378" endtime="20231129 08:25:36.764"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:25:36.767" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:25:37.180" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:25:37.181" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:25:36.765" endtime="20231129 08:25:37.181"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:25:37.181" level="INFO"/>
<status status="PASS" starttime="20231129 08:25:37.181" endtime="20231129 08:25:37.181"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:25:37.182" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:25:37.182" endtime="20231129 08:25:37.182"/>
</kw>
<status status="PASS" starttime="20231129 08:25:36.765" endtime="20231129 08:25:37.182"/>
</kw>
<msg timestamp="20231129 08:25:37.182" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:25:36.765" endtime="20231129 08:25:37.182"/>
</kw>
<status status="PASS" starttime="20231129 08:25:36.764" endtime="20231129 08:25:37.182"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:25:37.185" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:25:37.592" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:25:37.592" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:25:37.183" endtime="20231129 08:25:37.592"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:25:37.593" level="INFO"/>
<status status="PASS" starttime="20231129 08:25:37.593" endtime="20231129 08:25:37.593"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:25:37.594" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:25:37.593" endtime="20231129 08:25:37.594"/>
</kw>
<status status="PASS" starttime="20231129 08:25:37.183" endtime="20231129 08:25:37.594"/>
</kw>
<msg timestamp="20231129 08:25:37.594" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:25:37.183" endtime="20231129 08:25:37.594"/>
</kw>
<status status="PASS" starttime="20231129 08:25:37.182" endtime="20231129 08:25:37.594"/>
</kw>
<status status="PASS" starttime="20231129 08:25:35.980" endtime="20231129 08:25:37.594"/>
</kw>
<status status="PASS" starttime="20231129 08:25:35.979" endtime="20231129 08:25:37.594"/>
</kw>
<status status="PASS" starttime="20231129 08:25:35.978" endtime="20231129 08:25:37.594"/>
</kw>
<status status="PASS" starttime="20231129 08:25:35.978" endtime="20231129 08:25:37.594"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231129 08:25:37.595" endtime="20231129 08:25:37.595"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231129 08:25:37.595" endtime="20231129 08:25:37.595"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231129 08:25:37.596" endtime="20231129 08:25:37.596"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create EC bucket" library="commonawslib">
<kw name="Bucket Exists" library="shell">
<var>${exists}</var>
<arg>o3://${OM_SERVICE_ID}/s3v/erasure</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>timeout 15 ozone sh bucket info ${bucket}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:25:37.599" level="INFO">Running command 'timeout 15 ozone sh bucket info o3://om/s3v/erasure 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:25:41.840" level="INFO">${rc} = 255</msg>
<msg timestamp="20231129 08:25:41.840" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found: s3v/erasure</msg>
<status status="PASS" starttime="20231129 08:25:37.597" endtime="20231129 08:25:41.841"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${rc} != 0</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20231129 08:25:41.841" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:25:41.841" endtime="20231129 08:25:41.841"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'VOLUME_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:25:41.842" endtime="20231129 08:25:41.842"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>'BUCKET_NOT_FOUND' in '''${output}'''</arg>
<arg>${FALSE}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:25:41.842" endtime="20231129 08:25:41.842"/>
</kw>
<msg timestamp="20231129 08:25:41.842" level="INFO">${exists} = False</msg>
<status status="PASS" starttime="20231129 08:25:37.597" endtime="20231129 08:25:41.842"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${exists}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<status status="PASS" starttime="20231129 08:25:41.842" endtime="20231129 08:25:41.842"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create --replication rs-3-2-1024k --type EC o3://${OM_SERVICE_ID}/s3v/erasure</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:25:41.845" level="INFO">Running command 'ozone sh bucket create --replication rs-3-2-1024k --type EC o3://om/s3v/erasure 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:25:45.961" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:25:45.961" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:25:41.844" endtime="20231129 08:25:45.961"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:25:45.962" level="INFO"/>
<status status="PASS" starttime="20231129 08:25:45.961" endtime="20231129 08:25:45.962"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:25:45.962" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:25:45.962" endtime="20231129 08:25:45.962"/>
</kw>
<status status="PASS" starttime="20231129 08:25:41.843" endtime="20231129 08:25:45.963"/>
</kw>
<msg timestamp="20231129 08:25:45.963" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:25:41.843" endtime="20231129 08:25:45.963"/>
</kw>
<status status="PASS" starttime="20231129 08:25:41.843" endtime="20231129 08:25:45.963"/>
</kw>
<status status="PASS" starttime="20231129 08:25:37.596" endtime="20231129 08:25:45.963"/>
</kw>
<status status="PASS" starttime="20231129 08:25:37.596" endtime="20231129 08:25:45.963"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231129 08:25:45.964" level="INFO">${OZONE_S3_TESTS_SET_UP} = True</msg>
<status status="PASS" starttime="20231129 08:25:45.963" endtime="20231129 08:25:45.964"/>
</kw>
<status status="PASS" starttime="20231129 08:25:35.956" endtime="20231129 08:25:45.964"/>
</kw>
<suite id="s1-s1-s1" name="Awss3" source="/opt/hadoop/smoketest/s3/awss3.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20231129 08:25:45.972" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:25:45.972" endtime="20231129 08:25:45.973"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231129 08:25:45.973" endtime="20231129 08:25:45.973"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231129 08:25:45.973" endtime="20231129 08:25:45.973"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:25:45.973" endtime="20231129 08:25:45.973"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:25:45.973" endtime="20231129 08:25:45.973"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:25:45.973" endtime="20231129 08:25:45.973"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:25:45.973" endtime="20231129 08:25:45.973"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:25:45.974" endtime="20231129 08:25:45.974"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20231129 08:25:45.974" endtime="20231129 08:25:45.974"/>
</kw>
<status status="PASS" starttime="20231129 08:25:45.972" endtime="20231129 08:25:45.974"/>
</kw>
<test id="s1-s1-s1-t1" name="File upload and directory list" line="31">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:25:45.977" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20231129 08:25:45.978" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:25:45.979" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:25:45.975" endtime="20231129 08:25:45.979"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:25:45.979" level="INFO"/>
<status status="PASS" starttime="20231129 08:25:45.979" endtime="20231129 08:25:45.979"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:25:45.980" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:25:45.979" endtime="20231129 08:25:45.980"/>
</kw>
<status status="PASS" starttime="20231129 08:25:45.975" endtime="20231129 08:25:45.980"/>
</kw>
<msg timestamp="20231129 08:25:45.980" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:25:45.975" endtime="20231129 08:25:45.980"/>
</kw>
<status status="PASS" starttime="20231129 08:25:45.974" endtime="20231129 08:25:45.980"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:25:45.983" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://erasure 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:25:50.551" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:25:50.551" level="INFO">${output} = Completed 29 Bytes/29 Bytes (7 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://erasure/testfile             </msg>
<status status="PASS" starttime="20231129 08:25:45.982" endtime="20231129 08:25:50.551"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:25:50.552" level="INFO">Completed 29 Bytes/29 Bytes (7 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://erasure/testfile             </msg>
<status status="PASS" starttime="20231129 08:25:50.551" endtime="20231129 08:25:50.552"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:25:50.552" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:25:50.552" endtime="20231129 08:25:50.552"/>
</kw>
<status status="PASS" starttime="20231129 08:25:45.982" endtime="20231129 08:25:50.552"/>
</kw>
<msg timestamp="20231129 08:25:50.552" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:25:45.981" endtime="20231129 08:25:50.552"/>
</kw>
<msg timestamp="20231129 08:25:50.553" level="INFO">${output} = Completed 29 Bytes/29 Bytes (7 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://erasure/testfile             </msg>
<status status="PASS" starttime="20231129 08:25:45.981" endtime="20231129 08:25:50.553"/>
</kw>
<msg timestamp="20231129 08:25:50.553" level="INFO">${result} = Completed 29 Bytes/29 Bytes (7 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://erasure/testfile             </msg>
<status status="PASS" starttime="20231129 08:25:45.980" endtime="20231129 08:25:50.553"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>upload</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:25:50.553" endtime="20231129 08:25:50.553"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}/dir1/dir2/file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:25:50.556" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://erasure/dir1/dir2/file 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:25:51.341" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:25:51.341" level="INFO">${output} = Completed 29 Bytes/29 Bytes (101 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://erasure/dir1/dir2/file         </msg>
<status status="PASS" starttime="20231129 08:25:50.555" endtime="20231129 08:25:51.341"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:25:51.342" level="INFO">Completed 29 Bytes/29 Bytes (101 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://erasure/dir1/dir2/file         </msg>
<status status="PASS" starttime="20231129 08:25:51.342" endtime="20231129 08:25:51.342"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:25:51.343" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:25:51.342" endtime="20231129 08:25:51.343"/>
</kw>
<status status="PASS" starttime="20231129 08:25:50.555" endtime="20231129 08:25:51.343"/>
</kw>
<msg timestamp="20231129 08:25:51.343" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:25:50.554" endtime="20231129 08:25:51.343"/>
</kw>
<msg timestamp="20231129 08:25:51.343" level="INFO">${output} = Completed 29 Bytes/29 Bytes (101 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://erasure/dir1/dir2/file         </msg>
<status status="PASS" starttime="20231129 08:25:50.554" endtime="20231129 08:25:51.343"/>
</kw>
<msg timestamp="20231129 08:25:51.343" level="INFO">${result} = Completed 29 Bytes/29 Bytes (101 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://erasure/dir1/dir2/file         </msg>
<status status="PASS" starttime="20231129 08:25:50.553" endtime="20231129 08:25:51.343"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>upload</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:25:51.343" endtime="20231129 08:25:51.344"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:25:51.347" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://erasure 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:25:52.100" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:25:52.100" level="INFO">${output} =                            PRE dir1/
2023-11-29 08:25:50         29 testfile</msg>
<status status="PASS" starttime="20231129 08:25:51.345" endtime="20231129 08:25:52.100"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:25:52.101" level="INFO">                           PRE dir1/
2023-11-29 08:25:50         29 testfile</msg>
<status status="PASS" starttime="20231129 08:25:52.101" endtime="20231129 08:25:52.101"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:25:52.102" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:25:52.101" endtime="20231129 08:25:52.102"/>
</kw>
<status status="PASS" starttime="20231129 08:25:51.345" endtime="20231129 08:25:52.102"/>
</kw>
<msg timestamp="20231129 08:25:52.102" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:25:51.345" endtime="20231129 08:25:52.102"/>
</kw>
<msg timestamp="20231129 08:25:52.103" level="INFO">${output} =                            PRE dir1/
2023-11-29 08:25:50         29 testfile</msg>
<status status="PASS" starttime="20231129 08:25:51.344" endtime="20231129 08:25:52.103"/>
</kw>
<msg timestamp="20231129 08:25:52.103" level="INFO">${result} =                            PRE dir1/
2023-11-29 08:25:50         29 testfile</msg>
<status status="PASS" starttime="20231129 08:25:51.344" endtime="20231129 08:25:52.103"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>testfile</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:25:52.103" endtime="20231129 08:25:52.103"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:25:52.104" endtime="20231129 08:25:52.104"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:25:52.104" endtime="20231129 08:25:52.104"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/dir1/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:25:52.108" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://erasure/dir1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:25:52.617" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:25:52.617" level="INFO">${output} =                            PRE dir2/
2023-11-29 08:25:51          0 </msg>
<status status="PASS" starttime="20231129 08:25:52.106" endtime="20231129 08:25:52.617"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:25:52.618" level="INFO">                           PRE dir2/
2023-11-29 08:25:51          0 </msg>
<status status="PASS" starttime="20231129 08:25:52.618" endtime="20231129 08:25:52.618"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:25:52.619" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:25:52.618" endtime="20231129 08:25:52.619"/>
</kw>
<status status="PASS" starttime="20231129 08:25:52.106" endtime="20231129 08:25:52.619"/>
</kw>
<msg timestamp="20231129 08:25:52.619" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:25:52.106" endtime="20231129 08:25:52.619"/>
</kw>
<msg timestamp="20231129 08:25:52.619" level="INFO">${output} =                            PRE dir2/
2023-11-29 08:25:51          0 </msg>
<status status="PASS" starttime="20231129 08:25:52.105" endtime="20231129 08:25:52.619"/>
</kw>
<msg timestamp="20231129 08:25:52.619" level="INFO">${result} =                            PRE dir2/
2023-11-29 08:25:51          0 </msg>
<status status="PASS" starttime="20231129 08:25:52.105" endtime="20231129 08:25:52.619"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>testfile</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:25:52.620" endtime="20231129 08:25:52.620"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:25:52.620" endtime="20231129 08:25:52.620"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:25:52.620" endtime="20231129 08:25:52.621"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/dir1/dir2/file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:25:52.624" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://erasure/dir1/dir2/file 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:25:53.176" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:25:53.176" level="INFO">${output} = 2023-11-29 08:25:51         29 file</msg>
<status status="PASS" starttime="20231129 08:25:52.622" endtime="20231129 08:25:53.177"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:25:53.177" level="INFO">2023-11-29 08:25:51         29 file</msg>
<status status="PASS" starttime="20231129 08:25:53.177" endtime="20231129 08:25:53.178"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:25:53.178" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:25:53.178" endtime="20231129 08:25:53.178"/>
</kw>
<status status="PASS" starttime="20231129 08:25:52.622" endtime="20231129 08:25:53.178"/>
</kw>
<msg timestamp="20231129 08:25:53.178" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:25:52.622" endtime="20231129 08:25:53.178"/>
</kw>
<msg timestamp="20231129 08:25:53.178" level="INFO">${output} = 2023-11-29 08:25:51         29 file</msg>
<status status="PASS" starttime="20231129 08:25:52.621" endtime="20231129 08:25:53.179"/>
</kw>
<msg timestamp="20231129 08:25:53.179" level="INFO">${result} = 2023-11-29 08:25:51         29 file</msg>
<status status="PASS" starttime="20231129 08:25:52.621" endtime="20231129 08:25:53.179"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>testfile</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:25:53.179" endtime="20231129 08:25:53.179"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dir1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:25:53.179" endtime="20231129 08:25:53.180"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>file</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:25:53.180" endtime="20231129 08:25:53.180"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:25:45.974" endtime="20231129 08:25:53.180"/>
</test>
<test id="s1-s1-s1-t2" name="File upload with special chars" line="50">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:25:53.184" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20231129 08:25:53.185" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:25:53.185" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:25:53.182" endtime="20231129 08:25:53.185"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:25:53.186" level="INFO"/>
<status status="PASS" starttime="20231129 08:25:53.186" endtime="20231129 08:25:53.186"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:25:53.187" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:25:53.186" endtime="20231129 08:25:53.187"/>
</kw>
<status status="PASS" starttime="20231129 08:25:53.182" endtime="20231129 08:25:53.187"/>
</kw>
<msg timestamp="20231129 08:25:53.187" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:25:53.182" endtime="20231129 08:25:53.187"/>
</kw>
<status status="PASS" starttime="20231129 08:25:53.181" endtime="20231129 08:25:53.187"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}/specialchars/a+b</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:25:53.191" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://erasure/specialchars/a+b 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:25:54.075" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:25:54.075" level="INFO">${output} = Completed 29 Bytes/29 Bytes (83 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://erasure/specialchars/a+b      </msg>
<status status="PASS" starttime="20231129 08:25:53.189" endtime="20231129 08:25:54.075"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:25:54.076" level="INFO">Completed 29 Bytes/29 Bytes (83 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://erasure/specialchars/a+b      </msg>
<status status="PASS" starttime="20231129 08:25:54.075" endtime="20231129 08:25:54.076"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:25:54.076" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:25:54.076" endtime="20231129 08:25:54.076"/>
</kw>
<status status="PASS" starttime="20231129 08:25:53.188" endtime="20231129 08:25:54.077"/>
</kw>
<msg timestamp="20231129 08:25:54.077" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:25:53.188" endtime="20231129 08:25:54.077"/>
</kw>
<msg timestamp="20231129 08:25:54.077" level="INFO">${output} = Completed 29 Bytes/29 Bytes (83 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://erasure/specialchars/a+b      </msg>
<status status="PASS" starttime="20231129 08:25:53.188" endtime="20231129 08:25:54.077"/>
</kw>
<msg timestamp="20231129 08:25:54.077" level="INFO">${result} = Completed 29 Bytes/29 Bytes (83 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://erasure/specialchars/a+b      </msg>
<status status="PASS" starttime="20231129 08:25:53.187" endtime="20231129 08:25:54.077"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>upload</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:25:54.077" endtime="20231129 08:25:54.077"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/specialchars/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:25:54.080" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://erasure/specialchars/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:25:54.602" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:25:54.602" level="INFO">${output} = 2023-11-29 08:25:53          0 
2023-11-29 08:25:54         29 a+b</msg>
<status status="PASS" starttime="20231129 08:25:54.079" endtime="20231129 08:25:54.602"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:25:54.603" level="INFO">2023-11-29 08:25:53          0 
2023-11-29 08:25:54         29 a+b</msg>
<status status="PASS" starttime="20231129 08:25:54.603" endtime="20231129 08:25:54.603"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:25:54.604" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:25:54.604" endtime="20231129 08:25:54.604"/>
</kw>
<status status="PASS" starttime="20231129 08:25:54.079" endtime="20231129 08:25:54.604"/>
</kw>
<msg timestamp="20231129 08:25:54.604" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:25:54.078" endtime="20231129 08:25:54.604"/>
</kw>
<msg timestamp="20231129 08:25:54.604" level="INFO">${output} = 2023-11-29 08:25:53          0 
2023-11-29 08:25:54         29 a+b</msg>
<status status="PASS" starttime="20231129 08:25:54.078" endtime="20231129 08:25:54.604"/>
</kw>
<msg timestamp="20231129 08:25:54.605" level="INFO">${result} = 2023-11-29 08:25:53          0 
2023-11-29 08:25:54         29 a+b</msg>
<status status="PASS" starttime="20231129 08:25:54.078" endtime="20231129 08:25:54.605"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>'a b'</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:25:54.605" endtime="20231129 08:25:54.605"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>a+b</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:25:54.605" endtime="20231129 08:25:54.606"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:25:53.181" endtime="20231129 08:25:54.606"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20231129 08:25:45.964" endtime="20231129 08:25:54.607"/>
</suite>
<suite id="s1-s1-s2" name="Boto3" source="/opt/hadoop/smoketest/s3/boto3.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20231129 08:25:54.620" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:25:54.620" endtime="20231129 08:25:54.620"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231129 08:25:54.621" endtime="20231129 08:25:54.621"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231129 08:25:54.621" endtime="20231129 08:25:54.621"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:25:54.621" endtime="20231129 08:25:54.621"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:25:54.621" endtime="20231129 08:25:54.621"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:25:54.621" endtime="20231129 08:25:54.621"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:25:54.621" endtime="20231129 08:25:54.621"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:25:54.622" endtime="20231129 08:25:54.622"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20231129 08:25:54.622" endtime="20231129 08:25:54.622"/>
</kw>
<status status="PASS" starttime="20231129 08:25:54.620" endtime="20231129 08:25:54.622"/>
</kw>
<test id="s1-s1-s2-t1" name="Boto3 Client Test" line="34">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>python3 ${S3_SMOKETEST_DIR}/boto_client.py ${ENDPOINT_URL} ${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:25:54.625" level="INFO">Running command 'python3 /opt/hadoop/smoketest/s3/boto_client.py http://s3g:9878 erasure 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:25:58.578" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:25:58.578" level="INFO">${output} = test_create_bucket (__main__.TestBotoClient) ... /usr/local/lib/python3.6/site-packages/boto3/compat.py:88: PythonDeprecationWarning: Boto3 will no longer support Python 3.6 starting May 30, 2022. To ...</msg>
<status status="PASS" starttime="20231129 08:25:54.623" endtime="20231129 08:25:58.578"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:25:58.579" level="INFO">test_create_bucket (__main__.TestBotoClient) ... /usr/local/lib/python3.6/site-packages/boto3/compat.py:88: PythonDeprecationWarning: Boto3 will no longer support Python 3.6 starting May 30, 2022. To continue receiving service updates, bug fixes, and security updates please upgrade to Python 3.7 or later. More information can be found here: https://aws.amazon.com/blogs/developer/python-support-policy-updates-for-aws-sdks-and-tools/
  warnings.warn(warning, PythonDeprecationWarning)
ok
test_list_bucket (__main__.TestBotoClient) ... ok
test_head_bucket (__main__.TestBotoClient) ... ok
test_bucket_delete (__main__.TestBotoClient) ... ok
test_upload_file (__main__.TestBotoClient) ... ok
test_download_file (__main__.TestBotoClient) ... ok
test_delete_objects (__main__.TestBotoClient) ... ok
test_head_object (__main__.TestBotoClient) ... ok
test_multi_uploads (__main__.TestBotoClient) ... ok

----------------------------------------------------------------------
Ran 9 tests in 3.730s

OK
{'ResponseMetadata': {'RequestId': 'a7d45482-2ceb-4973-9d85-efb924338b53', 'HostId': 'IA4KNGi9DjdSKIz', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Wed, 29 Nov 2023 08:25:54 GMT', 'cache-control': 'no-cache', 'expires': 'Wed, 29 Nov 2023 08:25:54 GMT', 'pragma': 'no-cache', 'content-type': 'text/plain;charset=utf-8', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'location': 'http://s3g:9878/ozone-test-kpzbbugqfi', 'server': 'Ozone', 'x-amz-id-2': 'IA4KNGi9DjdSKIz', 'x-amz-request-id': 'a7d45482-2ceb-4973-9d85-efb924338b53', 'content-length': '0'}, 'RetryAttempts': 0}, 'Location': 'http://s3g:9878/ozone-test-kpzbbugqfi'}
None
None
None
{'ResponseMetadata': {'RequestId': 'f930987a-7784-41cd-afaf-ab8ba4f9632d', 'HostId': 'mgRdrKMzoqUN', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Wed, 29 Nov 2023 08:25:56 GMT', 'cache-control': 'no-cache', 'expires': 'Wed, 29 Nov 2023 08:25:56 GMT', 'pragma': 'no-cache', 'content-type': 'text/plain;charset=utf-8', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'location': 'http://s3g:9878/bucket-hbnfrqfsrd', 'server': 'Ozone', 'x-amz-id-2': 'mgRdrKMzoqUN', 'x-amz-request-id': 'f930987a-7784-41cd-afaf-ab8ba4f9632d', 'content-length': '0'}, 'RetryAttempts': 0}, 'Location': 'http://s3g:9878/bucket-hbnfrqfsrd'}
{'ResponseMetadata': {'RequestId': '9e494aa2-54d8-46e0-b840-6c5ad508b30e', 'HostId': 'WlNSTo8hoG9al', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Wed, 29 Nov 2023 08:25:56 GMT', 'cache-control': 'no-cache', 'expires': 'Wed, 29 Nov 2023 08:25:56 GMT', 'pragma': 'no-cache', 'content-type': 'application/xml', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': 'WlNSTo8hoG9al', 'x-amz-request-id': '9e494aa2-54d8-46e0-b840-6c5ad508b30e', 'content-length': '465'}, 'RetryAttempts': 0}, 'Buckets': [{'Name': 'bucket-hbnfrqfsrd', 'CreationDate': datetime.datetime(2023, 11, 29, 8, 25, 56, 745000, tzinfo=tzlocal())}, {'Name': 'erasure', 'CreationDate': datetime.datetime(2023, 11, 29, 8, 25, 45, 780000, tzinfo=tzlocal())}, {'Name': 'ozone-test-kpzbbugqfi', 'CreationDate': datetime.datetime(2023, 11, 29, 8, 25, 54, 978000, tzinfo=tzlocal())}]}
{'ResponseMetadata': {'RequestId': '72c86bbd-0a38-4034-9667-218c71f6bf41', 'HostId': 'Uj901F6fz3fF7D', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Wed, 29 Nov 2023 08:25:56 GMT', 'cache-control': 'no-cache', 'expires': 'Wed, 29 Nov 2023 08:25:56 GMT', 'pragma': 'no-cache', 'content-type': 'application/octet-stream', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': 'Uj901F6fz3fF7D', 'x-amz-request-id': '72c86bbd-0a38-4034-9667-218c71f6bf41', 'content-length': '0'}, 'RetryAttempts': 0}}
{'ResponseMetadata': {'RequestId': 'f1c9ae23-2271-4030-b4ff-40223b2f8c63', 'HostId': '2JySRVKk', 'HTTPStatusCode': 204, 'HTTPHeaders': {'date': 'Wed, 29 Nov 2023 08:25:56 GMT', 'cache-control': 'no-cache', 'expires': 'Wed, 29 Nov 2023 08:25:56 GMT', 'pragma': 'no-cache', 'content-type': 'text/plain;charset=utf-8', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': '2JySRVKk', 'x-amz-request-id': 'f1c9ae23-2271-4030-b4ff-40223b2f8c63'}, 'RetryAttempts': 0}}
{'ResponseMetadata': {'RequestId': '403200d4-2fba-49ef-bbc3-91d6d7d13243', 'HostId': 'laGE5OYnLkO0soA', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Wed, 29 Nov 2023 08:25:56 GMT', 'cache-control': 'no-cache', 'expires': 'Wed, 29 Nov 2023 08:25:56 GMT', 'pragma': 'no-cache', 'content-type': 'binary/octet-stream', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'etag': '"d5568357dc4eaab62bd52312f884c9be"', 'last-modified': 'Wed, 29 Nov 2023 08:25:56 GMT', 'server': 'Ozone', 'x-amz-id-2': 'laGE5OYnLkO0soA', 'x-amz-request-id': '403200d4-2fba-49ef-bbc3-91d6d7d13243', 'content-length': '4068'}, 'RetryAttempts': 0}, 'LastModified': datetime.datetime(2023, 11, 29, 8, 25, 56, tzinfo=tzutc()), 'ContentLength': 4068, 'ETag': '"d5568357dc4eaab62bd52312f884c9be"', 'CacheControl': 'no-cache', 'ContentType': 'binary/octet-stream', 'Expires': datetime.datetime(2023, 11, 29, 8, 25, 56, tzinfo=tzutc()), 'Metadata': {}}
{'ResponseMetadata': {'RequestId': '4451747a-63a6-4e23-8e04-31bb71f35839', 'HostId': 'Ov198QnSpeHl', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Wed, 29 Nov 2023 08:25:57 GMT', 'cache-control': 'no-cache', 'expires': 'Wed, 29 Nov 2023 08:25:57 GMT', 'pragma': 'no-cache', 'content-type': 'application/xml', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': 'Ov198QnSpeHl', 'x-amz-request-id': '4451747a-63a6-4e23-8e04-31bb71f35839', 'content-length': '212'}, 'RetryAttempts': 0}, 'Deleted': [{'Key': 'README4.md'}, {'Key': 'README3.md'}]}
{'ResponseMetadata': {'RequestId': '7cd4b155-96e8-4b5a-9a3e-df84d49f256a', 'HostId': 'Msv7EDdi2y6ck', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Wed, 29 Nov 2023 08:25:57 GMT', 'cache-control': 'no-cache', 'expires': 'Wed, 29 Nov 2023 08:25:57 GMT', 'pragma': 'no-cache', 'content-type': 'binary/octet-stream', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'etag': '"d5568357dc4eaab62bd52312f884c9be"', 'last-modified': 'Wed, 29 Nov 2023 08:25:55 GMT', 'server': 'Ozone', 'x-amz-id-2': 'Msv7EDdi2y6ck', 'x-amz-request-id': '7cd4b155-96e8-4b5a-9a3e-df84d49f256a', 'content-length': '4068'}, 'RetryAttempts': 0}, 'LastModified': datetime.datetime(2023, 11, 29, 8, 25, 55, tzinfo=tzutc()), 'ContentLength': 4068, 'ETag': '"d5568357dc4eaab62bd52312f884c9be"', 'CacheControl': 'no-cache', 'ContentType': 'binary/octet-stream', 'Expires': datetime.datetime(2023, 11, 29, 8, 25, 57, tzinfo=tzutc()), 'Metadata': {}}
{'ResponseMetadata': {'RequestId': '4c6ed7fd-e633-417f-a954-bbf83c480f94', 'HostId': 'j9LfhSHS9q', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Wed, 29 Nov 2023 08:25:57 GMT', 'cache-control': 'no-cache', 'expires': 'Wed, 29 Nov 2023 08:25:57 GMT', 'pragma': 'no-cache', 'content-type': 'application/xml', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': 'j9LfhSHS9q', 'x-amz-request-id': '4c6ed7fd-e633-417f-a954-bbf83c480f94', 'content-length': '287'}, 'RetryAttempts': 0}, 'Bucket': 'erasure', 'Key': 'mjvcmhphbj', 'UploadId': 'cc833ad5-c5bb-4b0f-8d24-8689bbf68c04-111492881267032077'}
{'ResponseMetadata': {'RequestId': 'db426281-4bab-4175-ad8b-4937412c222f', 'HostId': 'QGsA2qSI9', 'HTTPStatusCode': 200, 'HTTPHeaders': {'date': 'Wed, 29 Nov 2023 08:25:58 GMT', 'cache-control': 'no-cache', 'expires': 'Wed, 29 Nov 2023 08:25:58 GMT', 'pragma': 'no-cache', 'content-type': 'application/xml', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-frame-options': 'SAMEORIGIN', 'server': 'Ozone', 'x-amz-id-2': 'QGsA2qSI9', 'x-amz-request-id': 'db426281-4bab-4175-ad8b-4937412c222f', 'content-length': '288'}, 'RetryAttempts': 0}, 'Location': 'erasure', 'Bucket': 'erasure', 'Key': 'mjvcmhphbj', 'ETag': '"24d794dfc756320ffadb905d526299bc-2"'}
Boto3 Client Test PASSED!</msg>
<status status="PASS" starttime="20231129 08:25:58.578" endtime="20231129 08:25:58.579"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:25:58.579" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:25:58.579" endtime="20231129 08:25:58.580"/>
</kw>
<status status="PASS" starttime="20231129 08:25:54.623" endtime="20231129 08:25:58.580"/>
</kw>
<msg timestamp="20231129 08:25:58.580" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:25:54.623" endtime="20231129 08:25:58.580"/>
</kw>
<msg timestamp="20231129 08:25:58.580" level="INFO">${result} = test_create_bucket (__main__.TestBotoClient) ... /usr/local/lib/python3.6/site-packages/boto3/compat.py:88: PythonDeprecationWarning: Boto3 will no longer support Python 3.6 starting May 30, 2022. To ...</msg>
<status status="PASS" starttime="20231129 08:25:54.622" endtime="20231129 08:25:58.580"/>
</kw>
<timeout value="15 minutes"/>
<status status="PASS" starttime="20231129 08:25:54.622" endtime="20231129 08:25:58.580"/>
</test>
<doc>S3 gateway test with Boto3 Client</doc>
<status status="PASS" starttime="20231129 08:25:54.608" endtime="20231129 08:25:58.581"/>
</suite>
<suite id="s1-s1-s3" name="Bucketcreate" source="/opt/hadoop/smoketest/s3/bucketcreate.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20231129 08:25:58.591" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:25:58.591" endtime="20231129 08:25:58.591"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231129 08:25:58.591" endtime="20231129 08:25:58.591"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231129 08:25:58.591" endtime="20231129 08:25:58.591"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:25:58.591" endtime="20231129 08:25:58.591"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:25:58.592" endtime="20231129 08:25:58.592"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:25:58.592" endtime="20231129 08:25:58.592"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:25:58.592" endtime="20231129 08:25:58.592"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:25:58.592" endtime="20231129 08:25:58.592"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20231129 08:25:58.592" endtime="20231129 08:25:58.592"/>
</kw>
<status status="PASS" starttime="20231129 08:25:58.590" endtime="20231129 08:25:58.592"/>
</kw>
<test id="s1-s1-s3-t1" name="Create new bucket" line="32">
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Ozone String" library="commonawslib">
<var>${postfix}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231129 08:25:58.594" level="INFO">${randStr} = 9156143777</msg>
<status status="PASS" starttime="20231129 08:25:58.593" endtime="20231129 08:25:58.594"/>
</kw>
<msg timestamp="20231129 08:25:58.594" level="INFO">${postfix} = ozone-test-9156143777</msg>
<status status="PASS" starttime="20231129 08:25:58.593" endtime="20231129 08:25:58.594"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:25:58.594" level="INFO">${bucket} = bucket-ozone-test-9156143777</msg>
<status status="PASS" starttime="20231129 08:25:58.594" endtime="20231129 08:25:58.594"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:25:58.598" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-ozone-test-9156143777 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:25:59.074" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:25:59.074" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-9156143777"
}</msg>
<status status="PASS" starttime="20231129 08:25:58.596" endtime="20231129 08:25:59.075"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:25:59.075" level="INFO">{
    "Location": "http://s3g:9878/bucket-ozone-test-9156143777"
}</msg>
<status status="PASS" starttime="20231129 08:25:59.075" endtime="20231129 08:25:59.075"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:25:59.076" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:25:59.076" endtime="20231129 08:25:59.076"/>
</kw>
<status status="PASS" starttime="20231129 08:25:58.596" endtime="20231129 08:25:59.076"/>
</kw>
<msg timestamp="20231129 08:25:59.076" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:25:58.596" endtime="20231129 08:25:59.076"/>
</kw>
<msg timestamp="20231129 08:25:59.077" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-9156143777"
}</msg>
<status status="PASS" starttime="20231129 08:25:58.595" endtime="20231129 08:25:59.077"/>
</kw>
<msg timestamp="20231129 08:25:59.077" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-ozone-test-9156143777"
}</msg>
<status status="PASS" starttime="20231129 08:25:58.595" endtime="20231129 08:25:59.077"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:25:59.077" endtime="20231129 08:25:59.077"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:25:59.077" endtime="20231129 08:25:59.078"/>
</kw>
<status status="PASS" starttime="20231129 08:25:58.594" endtime="20231129 08:25:59.078"/>
</kw>
<status status="PASS" starttime="20231129 08:25:58.593" endtime="20231129 08:25:59.078"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:25:58.592" endtime="20231129 08:25:59.078"/>
</test>
<test id="s1-s1-s3-t2" name="Create bucket which already exists" line="35">
<kw name="Create bucket" library="commonawslib">
<var>${bucket}</var>
<kw name="Generate Ozone String" library="commonawslib">
<var>${postfix}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231129 08:25:59.081" level="INFO">${randStr} = 9372680784</msg>
<status status="PASS" starttime="20231129 08:25:59.080" endtime="20231129 08:25:59.081"/>
</kw>
<msg timestamp="20231129 08:25:59.081" level="INFO">${postfix} = ozone-test-9372680784</msg>
<status status="PASS" starttime="20231129 08:25:59.080" endtime="20231129 08:25:59.081"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:25:59.082" level="INFO">${bucket} = bucket-ozone-test-9372680784</msg>
<status status="PASS" starttime="20231129 08:25:59.081" endtime="20231129 08:25:59.082"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:25:59.085" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-ozone-test-9372680784 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:25:59.544" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:25:59.544" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-9372680784"
}</msg>
<status status="PASS" starttime="20231129 08:25:59.083" endtime="20231129 08:25:59.544"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:25:59.545" level="INFO">{
    "Location": "http://s3g:9878/bucket-ozone-test-9372680784"
}</msg>
<status status="PASS" starttime="20231129 08:25:59.544" endtime="20231129 08:25:59.545"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:25:59.545" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:25:59.545" endtime="20231129 08:25:59.545"/>
</kw>
<status status="PASS" starttime="20231129 08:25:59.083" endtime="20231129 08:25:59.545"/>
</kw>
<msg timestamp="20231129 08:25:59.545" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:25:59.083" endtime="20231129 08:25:59.546"/>
</kw>
<msg timestamp="20231129 08:25:59.546" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-9372680784"
}</msg>
<status status="PASS" starttime="20231129 08:25:59.082" endtime="20231129 08:25:59.546"/>
</kw>
<msg timestamp="20231129 08:25:59.546" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-ozone-test-9372680784"
}</msg>
<status status="PASS" starttime="20231129 08:25:59.082" endtime="20231129 08:25:59.546"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:25:59.546" endtime="20231129 08:25:59.546"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:25:59.546" endtime="20231129 08:25:59.547"/>
</kw>
<status status="PASS" starttime="20231129 08:25:59.082" endtime="20231129 08:25:59.547"/>
</kw>
<msg timestamp="20231129 08:25:59.547" level="INFO">${bucket} = bucket-ozone-test-9372680784</msg>
<status status="PASS" starttime="20231129 08:25:59.080" endtime="20231129 08:25:59.547"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:25:59.549" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-ozone-test-9372680784 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:00.180" level="INFO">${rc} = 255</msg>
<msg timestamp="20231129 08:26:00.180" level="INFO">${output} = 
An error occurred (BucketAlreadyExists) when calling the CreateBucket operation: The requested bucket name is not available as it already exists.</msg>
<status status="PASS" starttime="20231129 08:25:59.548" endtime="20231129 08:26:00.180"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:00.181" level="INFO">
An error occurred (BucketAlreadyExists) when calling the CreateBucket operation: The requested bucket name is not available as it already exists.</msg>
<status status="PASS" starttime="20231129 08:26:00.181" endtime="20231129 08:26:00.181"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:00.182" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:00.181" endtime="20231129 08:26:00.182"/>
</kw>
<msg timestamp="20231129 08:26:00.182" level="INFO">${output} = 
An error occurred (BucketAlreadyExists) when calling the CreateBucket operation: The requested bucket name is not available as it already exists.</msg>
<status status="PASS" starttime="20231129 08:25:59.548" endtime="20231129 08:26:00.182"/>
</kw>
<msg timestamp="20231129 08:26:00.182" level="INFO">${result} = 
An error occurred (BucketAlreadyExists) when calling the CreateBucket operation: The requested bucket name is not available as it already exists.</msg>
<status status="PASS" starttime="20231129 08:25:59.547" endtime="20231129 08:26:00.182"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BucketAlreadyExists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:26:00.182" endtime="20231129 08:26:00.183"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:25:59.079" endtime="20231129 08:26:00.183"/>
</test>
<test id="s1-s1-s3-t3" name="Create bucket with invalid bucket name" line="40">
<kw name="Generate Ozone String" library="commonawslib">
<var>${randStr}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231129 08:26:00.185" level="INFO">${randStr} = 1441719560</msg>
<status status="PASS" starttime="20231129 08:26:00.184" endtime="20231129 08:26:00.185"/>
</kw>
<msg timestamp="20231129 08:26:00.185" level="INFO">${randStr} = ozone-test-1441719560</msg>
<status status="PASS" starttime="20231129 08:26:00.184" endtime="20231129 08:26:00.185"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket invalid_bucket_${randStr}</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:00.187" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket invalid_bucket_ozone-test-1441719560 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:00.658" level="INFO">${rc} = 255</msg>
<msg timestamp="20231129 08:26:00.658" level="INFO">${output} = 
An error occurred (InvalidBucketName) when calling the CreateBucket operation: The specified bucket is not valid.</msg>
<status status="PASS" starttime="20231129 08:26:00.186" endtime="20231129 08:26:00.658"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:00.659" level="INFO">
An error occurred (InvalidBucketName) when calling the CreateBucket operation: The specified bucket is not valid.</msg>
<status status="PASS" starttime="20231129 08:26:00.658" endtime="20231129 08:26:00.659"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:00.659" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:00.659" endtime="20231129 08:26:00.660"/>
</kw>
<msg timestamp="20231129 08:26:00.660" level="INFO">${output} = 
An error occurred (InvalidBucketName) when calling the CreateBucket operation: The specified bucket is not valid.</msg>
<status status="PASS" starttime="20231129 08:26:00.186" endtime="20231129 08:26:00.660"/>
</kw>
<msg timestamp="20231129 08:26:00.660" level="INFO">${result} = 
An error occurred (InvalidBucketName) when calling the CreateBucket operation: The specified bucket is not valid.</msg>
<status status="PASS" starttime="20231129 08:26:00.185" endtime="20231129 08:26:00.660"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidBucketName</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:26:00.660" endtime="20231129 08:26:00.661"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:26:00.183" endtime="20231129 08:26:00.661"/>
</test>
<test id="s1-s1-s3-t4" name="Create new bucket and check no group ACL" line="45">
<kw name="Create bucket" library="commonawslib">
<var>${bucket}</var>
<kw name="Generate Ozone String" library="commonawslib">
<var>${postfix}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231129 08:26:00.664" level="INFO">${randStr} = 1466650342</msg>
<status status="PASS" starttime="20231129 08:26:00.662" endtime="20231129 08:26:00.664"/>
</kw>
<msg timestamp="20231129 08:26:00.664" level="INFO">${postfix} = ozone-test-1466650342</msg>
<status status="PASS" starttime="20231129 08:26:00.662" endtime="20231129 08:26:00.664"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:26:00.665" level="INFO">${bucket} = bucket-ozone-test-1466650342</msg>
<status status="PASS" starttime="20231129 08:26:00.664" endtime="20231129 08:26:00.665"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:00.668" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-ozone-test-1466650342 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:01.121" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:01.121" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-1466650342"
}</msg>
<status status="PASS" starttime="20231129 08:26:00.666" endtime="20231129 08:26:01.121"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:01.122" level="INFO">{
    "Location": "http://s3g:9878/bucket-ozone-test-1466650342"
}</msg>
<status status="PASS" starttime="20231129 08:26:01.121" endtime="20231129 08:26:01.122"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:01.122" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:01.122" endtime="20231129 08:26:01.122"/>
</kw>
<status status="PASS" starttime="20231129 08:26:00.666" endtime="20231129 08:26:01.123"/>
</kw>
<msg timestamp="20231129 08:26:01.123" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:00.666" endtime="20231129 08:26:01.123"/>
</kw>
<msg timestamp="20231129 08:26:01.123" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-1466650342"
}</msg>
<status status="PASS" starttime="20231129 08:26:00.665" endtime="20231129 08:26:01.123"/>
</kw>
<msg timestamp="20231129 08:26:01.123" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-ozone-test-1466650342"
}</msg>
<status status="PASS" starttime="20231129 08:26:00.665" endtime="20231129 08:26:01.123"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:26:01.123" endtime="20231129 08:26:01.124"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:26:01.124" endtime="20231129 08:26:01.124"/>
</kw>
<status status="PASS" starttime="20231129 08:26:00.665" endtime="20231129 08:26:01.124"/>
</kw>
<msg timestamp="20231129 08:26:01.124" level="INFO">${bucket} = bucket-ozone-test-1466650342</msg>
<status status="PASS" starttime="20231129 08:26:00.662" endtime="20231129 08:26:01.124"/>
</kw>
<kw name="Execute" library="os">
<var>${acl}</var>
<arg>ozone sh bucket getacl s3v/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:01.127" level="INFO">Running command 'ozone sh bucket getacl s3v/bucket-ozone-test-1466650342 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:04.597" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:04.597" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "dlfknslnfslf",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20231129 08:26:01.126" endtime="20231129 08:26:04.597"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:04.598" level="INFO">[ {
  "type" : "USER",
  "name" : "dlfknslnfslf",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20231129 08:26:04.597" endtime="20231129 08:26:04.598"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:04.598" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:04.598" endtime="20231129 08:26:04.599"/>
</kw>
<status status="PASS" starttime="20231129 08:26:01.125" endtime="20231129 08:26:04.599"/>
</kw>
<msg timestamp="20231129 08:26:04.599" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:01.125" endtime="20231129 08:26:04.599"/>
</kw>
<msg timestamp="20231129 08:26:04.599" level="INFO">${acl} = [ {
  "type" : "USER",
  "name" : "dlfknslnfslf",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20231129 08:26:01.125" endtime="20231129 08:26:04.599"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${group}</var>
<arg>${acl}</arg>
<arg>"GROUP"</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20231129 08:26:04.600" level="INFO">${group} = []</msg>
<status status="PASS" starttime="20231129 08:26:04.599" endtime="20231129 08:26:04.600"/>
</kw>
<if>
<branch type="IF" condition="'${group}' is not '[]'">
<kw name="Evaluate" library="BuiltIn">
<var>${json}</var>
<arg>json.loads('''${acl}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" starttime="20231129 08:26:04.600" endtime="20231129 08:26:04.600"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${json}[1][type]</arg>
<arg>GROUP</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231129 08:26:04.600" endtime="20231129 08:26:04.600"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${json}[1][aclList]</arg>
<arg>NONE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231129 08:26:04.601" endtime="20231129 08:26:04.601"/>
</kw>
<status status="NOT RUN" starttime="20231129 08:26:04.600" endtime="20231129 08:26:04.601"/>
</branch>
<status status="PASS" starttime="20231129 08:26:04.600" endtime="20231129 08:26:04.601"/>
</if>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:26:00.661" endtime="20231129 08:26:04.601"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20231129 08:25:58.582" endtime="20231129 08:26:04.602"/>
</suite>
<suite id="s1-s1-s4" name="Bucketdelete" source="/opt/hadoop/smoketest/s3/bucketdelete.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20231129 08:26:04.612" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:04.611" endtime="20231129 08:26:04.612"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231129 08:26:04.612" endtime="20231129 08:26:04.612"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231129 08:26:04.612" endtime="20231129 08:26:04.612"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:26:04.612" endtime="20231129 08:26:04.612"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:26:04.612" endtime="20231129 08:26:04.612"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:26:04.613" endtime="20231129 08:26:04.613"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:26:04.613" endtime="20231129 08:26:04.613"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:26:04.613" endtime="20231129 08:26:04.613"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20231129 08:26:04.613" endtime="20231129 08:26:04.613"/>
</kw>
<status status="PASS" starttime="20231129 08:26:04.611" endtime="20231129 08:26:04.613"/>
</kw>
<test id="s1-s1-s4-t1" name="Delete existing bucket" line="37">
<kw name="Create bucket to be deleted">
<var>${bucket}</var>
<kw name="Run Keyword If" library="BuiltIn">
<var>${bucket}</var>
<arg>'${BUCKET}' == 'link'</arg>
<arg>Create link</arg>
<arg>to-be-deleted</arg>
<arg>ELSE</arg>
<arg>Run Keyword</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create bucket</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create bucket" library="commonawslib">
<kw name="Generate Ozone String" library="commonawslib">
<var>${postfix}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231129 08:26:04.616" level="INFO">${randStr} = 4369342531</msg>
<status status="PASS" starttime="20231129 08:26:04.615" endtime="20231129 08:26:04.616"/>
</kw>
<msg timestamp="20231129 08:26:04.616" level="INFO">${postfix} = ozone-test-4369342531</msg>
<status status="PASS" starttime="20231129 08:26:04.615" endtime="20231129 08:26:04.616"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:26:04.616" level="INFO">${bucket} = bucket-ozone-test-4369342531</msg>
<status status="PASS" starttime="20231129 08:26:04.616" endtime="20231129 08:26:04.616"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:04.619" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-ozone-test-4369342531 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:05.066" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:05.066" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-4369342531"
}</msg>
<status status="PASS" starttime="20231129 08:26:04.618" endtime="20231129 08:26:05.066"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:05.067" level="INFO">{
    "Location": "http://s3g:9878/bucket-ozone-test-4369342531"
}</msg>
<status status="PASS" starttime="20231129 08:26:05.066" endtime="20231129 08:26:05.067"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:05.067" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:05.067" endtime="20231129 08:26:05.067"/>
</kw>
<status status="PASS" starttime="20231129 08:26:04.618" endtime="20231129 08:26:05.067"/>
</kw>
<msg timestamp="20231129 08:26:05.067" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:04.617" endtime="20231129 08:26:05.068"/>
</kw>
<msg timestamp="20231129 08:26:05.068" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-4369342531"
}</msg>
<status status="PASS" starttime="20231129 08:26:04.617" endtime="20231129 08:26:05.068"/>
</kw>
<msg timestamp="20231129 08:26:05.068" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-ozone-test-4369342531"
}</msg>
<status status="PASS" starttime="20231129 08:26:04.617" endtime="20231129 08:26:05.068"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:26:05.068" endtime="20231129 08:26:05.068"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:26:05.069" endtime="20231129 08:26:05.069"/>
</kw>
<status status="PASS" starttime="20231129 08:26:04.616" endtime="20231129 08:26:05.069"/>
</kw>
<status status="PASS" starttime="20231129 08:26:04.615" endtime="20231129 08:26:05.069"/>
</kw>
<status status="PASS" starttime="20231129 08:26:04.614" endtime="20231129 08:26:05.069"/>
</kw>
<msg timestamp="20231129 08:26:05.069" level="INFO">${bucket} = bucket-ozone-test-4369342531</msg>
<status status="PASS" starttime="20231129 08:26:04.614" endtime="20231129 08:26:05.069"/>
</kw>
<msg timestamp="20231129 08:26:05.069" level="INFO">${bucket} = bucket-ozone-test-4369342531</msg>
<status status="PASS" starttime="20231129 08:26:04.614" endtime="20231129 08:26:05.069"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>delete-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:05.073" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket bucket-ozone-test-4369342531 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:05.532" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:05.532" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:26:05.071" endtime="20231129 08:26:05.532"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:05.533" level="INFO"/>
<status status="PASS" starttime="20231129 08:26:05.533" endtime="20231129 08:26:05.533"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:05.534" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:05.534" endtime="20231129 08:26:05.534"/>
</kw>
<status status="PASS" starttime="20231129 08:26:05.071" endtime="20231129 08:26:05.534"/>
</kw>
<msg timestamp="20231129 08:26:05.534" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:05.070" endtime="20231129 08:26:05.534"/>
</kw>
<msg timestamp="20231129 08:26:05.534" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:26:05.070" endtime="20231129 08:26:05.534"/>
</kw>
<status status="PASS" starttime="20231129 08:26:05.070" endtime="20231129 08:26:05.535"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:26:04.613" endtime="20231129 08:26:05.535"/>
</test>
<test id="s1-s1-s4-t2" name="Delete non-existent bucket" line="41">
<kw name="Generate Ozone String" library="commonawslib">
<var>${randStr}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231129 08:26:05.537" level="INFO">${randStr} = 8767655938</msg>
<status status="PASS" starttime="20231129 08:26:05.536" endtime="20231129 08:26:05.537"/>
</kw>
<msg timestamp="20231129 08:26:05.537" level="INFO">${randStr} = ozone-test-8767655938</msg>
<status status="PASS" starttime="20231129 08:26:05.536" endtime="20231129 08:26:05.537"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>delete-bucket --bucket nosuchbucket-${randStr}</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:05.539" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket nosuchbucket-ozone-test-8767655938 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:05.995" level="INFO">${rc} = 255</msg>
<msg timestamp="20231129 08:26:05.995" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the DeleteBucket operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20231129 08:26:05.538" endtime="20231129 08:26:05.995"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:05.996" level="INFO">
An error occurred (NoSuchBucket) when calling the DeleteBucket operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20231129 08:26:05.995" endtime="20231129 08:26:05.996"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:05.996" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:05.996" endtime="20231129 08:26:05.996"/>
</kw>
<msg timestamp="20231129 08:26:05.997" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the DeleteBucket operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20231129 08:26:05.537" endtime="20231129 08:26:05.997"/>
</kw>
<msg timestamp="20231129 08:26:05.997" level="INFO">${result} = 
An error occurred (NoSuchBucket) when calling the DeleteBucket operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20231129 08:26:05.537" endtime="20231129 08:26:05.997"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchBucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:26:05.997" endtime="20231129 08:26:05.997"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:26:05.535" endtime="20231129 08:26:05.997"/>
</test>
<test id="s1-s1-s4-t3" name="Delete bucket with incomplete multipart uploads" line="47">
<kw name="Create bucket" library="commonawslib">
<var>${bucket}</var>
<kw name="Generate Ozone String" library="commonawslib">
<var>${postfix}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231129 08:26:06.000" level="INFO">${randStr} = 8784879820</msg>
<status status="PASS" starttime="20231129 08:26:05.999" endtime="20231129 08:26:06.000"/>
</kw>
<msg timestamp="20231129 08:26:06.000" level="INFO">${postfix} = ozone-test-8784879820</msg>
<status status="PASS" starttime="20231129 08:26:05.999" endtime="20231129 08:26:06.000"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:26:06.000" level="INFO">${bucket} = bucket-ozone-test-8784879820</msg>
<status status="PASS" starttime="20231129 08:26:06.000" endtime="20231129 08:26:06.000"/>
</kw>
<kw name="Create bucket with name" library="commonawslib">
<arg>${bucket}</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:06.004" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket bucket-ozone-test-8784879820 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:06.450" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:06.450" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-8784879820"
}</msg>
<status status="PASS" starttime="20231129 08:26:06.002" endtime="20231129 08:26:06.450"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:06.451" level="INFO">{
    "Location": "http://s3g:9878/bucket-ozone-test-8784879820"
}</msg>
<status status="PASS" starttime="20231129 08:26:06.451" endtime="20231129 08:26:06.451"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:06.452" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:06.451" endtime="20231129 08:26:06.452"/>
</kw>
<status status="PASS" starttime="20231129 08:26:06.002" endtime="20231129 08:26:06.452"/>
</kw>
<msg timestamp="20231129 08:26:06.452" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:06.002" endtime="20231129 08:26:06.452"/>
</kw>
<msg timestamp="20231129 08:26:06.452" level="INFO">${output} = {
    "Location": "http://s3g:9878/bucket-ozone-test-8784879820"
}</msg>
<status status="PASS" starttime="20231129 08:26:06.001" endtime="20231129 08:26:06.452"/>
</kw>
<msg timestamp="20231129 08:26:06.452" level="INFO">${result} = {
    "Location": "http://s3g:9878/bucket-ozone-test-8784879820"
}</msg>
<status status="PASS" starttime="20231129 08:26:06.001" endtime="20231129 08:26:06.452"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:26:06.453" endtime="20231129 08:26:06.453"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:26:06.453" endtime="20231129 08:26:06.453"/>
</kw>
<status status="PASS" starttime="20231129 08:26:06.000" endtime="20231129 08:26:06.453"/>
</kw>
<msg timestamp="20231129 08:26:06.453" level="INFO">${bucket} = bucket-ozone-test-8784879820</msg>
<status status="PASS" starttime="20231129 08:26:05.999" endtime="20231129 08:26:06.454"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${initiate_result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key incomplete-multipartkey</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:06.457" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket bucket-ozone-test-8784879820 --key incomplete-multipartkey 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:06.915" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:06.915" level="INFO">${output} = {
    "Bucket": "bucket-ozone-test-8784879820",
    "Key": "incomplete-multipartkey",
    "UploadId": "776dee41-e7bc-48cb-83fc-e0c21a2fe2f4-111492881898864656"
}</msg>
<status status="PASS" starttime="20231129 08:26:06.455" endtime="20231129 08:26:06.915"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:06.916" level="INFO">{
    "Bucket": "bucket-ozone-test-8784879820",
    "Key": "incomplete-multipartkey",
    "UploadId": "776dee41-e7bc-48cb-83fc-e0c21a2fe2f4-111492881898864656"
}</msg>
<status status="PASS" starttime="20231129 08:26:06.915" endtime="20231129 08:26:06.916"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:06.916" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:06.916" endtime="20231129 08:26:06.916"/>
</kw>
<status status="PASS" starttime="20231129 08:26:06.455" endtime="20231129 08:26:06.916"/>
</kw>
<msg timestamp="20231129 08:26:06.917" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:06.455" endtime="20231129 08:26:06.917"/>
</kw>
<msg timestamp="20231129 08:26:06.917" level="INFO">${output} = {
    "Bucket": "bucket-ozone-test-8784879820",
    "Key": "incomplete-multipartkey",
    "UploadId": "776dee41-e7bc-48cb-83fc-e0c21a2fe2f4-111492881898864656"
}</msg>
<status status="PASS" starttime="20231129 08:26:06.454" endtime="20231129 08:26:06.917"/>
</kw>
<msg timestamp="20231129 08:26:06.917" level="INFO">${initiate_result} = {
    "Bucket": "bucket-ozone-test-8784879820",
    "Key": "incomplete-multipartkey",
    "UploadId": "776dee41-e7bc-48cb-83fc-e0c21a2fe2f4-111492881898864656"
}</msg>
<status status="PASS" starttime="20231129 08:26:06.454" endtime="20231129 08:26:06.917"/>
</kw>
<kw name="Execute" library="os">
<var>${uploadID}</var>
<arg>echo '${initiate_result}' | jq -r '.UploadId'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:06.920" level="INFO">Running command 'echo '{
    "Bucket": "bucket-ozone-test-8784879820",
    "Key": "incomplete-multipartkey",
    "UploadId": "776dee41-e7bc-48cb-83fc-e0c21a2fe2f4-111492881898864656"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:06.946" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:06.946" level="INFO">${output} = 776dee41-e7bc-48cb-83fc-e0c21a2fe2f4-111492881898864656</msg>
<status status="PASS" starttime="20231129 08:26:06.918" endtime="20231129 08:26:06.946"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:06.947" level="INFO">776dee41-e7bc-48cb-83fc-e0c21a2fe2f4-111492881898864656</msg>
<status status="PASS" starttime="20231129 08:26:06.947" endtime="20231129 08:26:06.947"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:06.948" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:06.947" endtime="20231129 08:26:06.948"/>
</kw>
<status status="PASS" starttime="20231129 08:26:06.918" endtime="20231129 08:26:06.948"/>
</kw>
<msg timestamp="20231129 08:26:06.948" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:06.918" endtime="20231129 08:26:06.948"/>
</kw>
<msg timestamp="20231129 08:26:06.948" level="INFO">${uploadID} = 776dee41-e7bc-48cb-83fc-e0c21a2fe2f4-111492881898864656</msg>
<status status="PASS" starttime="20231129 08:26:06.917" endtime="20231129 08:26:06.948"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${initiate_result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:26:06.948" endtime="20231129 08:26:06.949"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${initiate_result}</arg>
<arg>incomplete-multipartkey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:26:06.949" endtime="20231129 08:26:06.949"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${initiate_result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:26:06.949" endtime="20231129 08:26:06.949"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${delete_fail_result}</var>
<arg>delete-bucket --bucket ${bucket}</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:06.952" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket bucket-ozone-test-8784879820 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:07.411" level="INFO">${rc} = 255</msg>
<msg timestamp="20231129 08:26:07.411" level="INFO">${output} = 
An error occurred (BucketNotEmpty) when calling the DeleteBucket operation: The bucket you tried to delete is not empty. If you are using --force option to delete all objects in the bucket, please en...</msg>
<status status="PASS" starttime="20231129 08:26:06.950" endtime="20231129 08:26:07.411"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:07.412" level="INFO">
An error occurred (BucketNotEmpty) when calling the DeleteBucket operation: The bucket you tried to delete is not empty. If you are using --force option to delete all objects in the bucket, please ensure that the bucket layout is OBJECT_STORE or that the bucket is completely empty before delete.</msg>
<status status="PASS" starttime="20231129 08:26:07.411" endtime="20231129 08:26:07.412"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:07.412" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:07.412" endtime="20231129 08:26:07.413"/>
</kw>
<msg timestamp="20231129 08:26:07.413" level="INFO">${output} = 
An error occurred (BucketNotEmpty) when calling the DeleteBucket operation: The bucket you tried to delete is not empty. If you are using --force option to delete all objects in the bucket, please en...</msg>
<status status="PASS" starttime="20231129 08:26:06.950" endtime="20231129 08:26:07.413"/>
</kw>
<msg timestamp="20231129 08:26:07.413" level="INFO">${delete_fail_result} = 
An error occurred (BucketNotEmpty) when calling the DeleteBucket operation: The bucket you tried to delete is not empty. If you are using --force option to delete all objects in the bucket, please en...</msg>
<status status="PASS" starttime="20231129 08:26:06.950" endtime="20231129 08:26:07.413"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${delete_fail_result}</arg>
<arg>BucketNotEmpty</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:26:07.413" endtime="20231129 08:26:07.413"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${abort_result}</var>
<arg>abort-multipart-upload --bucket ${bucket} --key incomplete-multipartkey --upload-id ${uploadID}</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:07.416" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket bucket-ozone-test-8784879820 --key incomplete-multipartkey --upload-id 776dee41-e7bc-48cb-83fc-e0c21a2fe2f4-111492881898864656 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:07.861" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:07.861" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:26:07.415" endtime="20231129 08:26:07.861"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:07.862" level="INFO"/>
<status status="PASS" starttime="20231129 08:26:07.862" endtime="20231129 08:26:07.862"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:07.863" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:07.863" endtime="20231129 08:26:07.863"/>
</kw>
<msg timestamp="20231129 08:26:07.863" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:26:07.414" endtime="20231129 08:26:07.863"/>
</kw>
<msg timestamp="20231129 08:26:07.863" level="INFO">${abort_result} = </msg>
<status status="PASS" starttime="20231129 08:26:07.414" endtime="20231129 08:26:07.863"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${delete_result}</var>
<arg>delete-bucket --bucket ${bucket}</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:07.866" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-bucket --bucket bucket-ozone-test-8784879820 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:08.316" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:08.316" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:26:07.865" endtime="20231129 08:26:08.316"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:08.317" level="INFO"/>
<status status="PASS" starttime="20231129 08:26:08.316" endtime="20231129 08:26:08.317"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:08.317" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:08.317" endtime="20231129 08:26:08.317"/>
</kw>
<msg timestamp="20231129 08:26:08.318" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:26:07.864" endtime="20231129 08:26:08.318"/>
</kw>
<msg timestamp="20231129 08:26:08.318" level="INFO">${delete_result} = </msg>
<status status="PASS" starttime="20231129 08:26:07.864" endtime="20231129 08:26:08.318"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:26:05.998" endtime="20231129 08:26:08.318"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20231129 08:26:04.603" endtime="20231129 08:26:08.319"/>
</suite>
<suite id="s1-s1-s5" name="Buckethead" source="/opt/hadoop/smoketest/s3/buckethead.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20231129 08:26:08.329" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:08.329" endtime="20231129 08:26:08.329"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231129 08:26:08.329" endtime="20231129 08:26:08.329"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231129 08:26:08.329" endtime="20231129 08:26:08.329"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:26:08.330" endtime="20231129 08:26:08.330"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:26:08.330" endtime="20231129 08:26:08.330"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:26:08.330" endtime="20231129 08:26:08.330"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:26:08.330" endtime="20231129 08:26:08.330"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:26:08.330" endtime="20231129 08:26:08.330"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20231129 08:26:08.330" endtime="20231129 08:26:08.330"/>
</kw>
<status status="PASS" starttime="20231129 08:26:08.329" endtime="20231129 08:26:08.330"/>
</kw>
<test id="s1-s1-s5-t1" name="Head Bucket" line="31">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>head-bucket --bucket ${BUCKET}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:08.334" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-bucket --bucket erasure 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:08.785" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:08.785" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:26:08.333" endtime="20231129 08:26:08.785"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:08.786" level="INFO"/>
<status status="PASS" starttime="20231129 08:26:08.786" endtime="20231129 08:26:08.786"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:08.787" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:08.786" endtime="20231129 08:26:08.787"/>
</kw>
<status status="PASS" starttime="20231129 08:26:08.332" endtime="20231129 08:26:08.787"/>
</kw>
<msg timestamp="20231129 08:26:08.787" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:08.332" endtime="20231129 08:26:08.787"/>
</kw>
<msg timestamp="20231129 08:26:08.787" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:26:08.331" endtime="20231129 08:26:08.787"/>
</kw>
<msg timestamp="20231129 08:26:08.787" level="INFO">${result} = </msg>
<status status="PASS" starttime="20231129 08:26:08.331" endtime="20231129 08:26:08.787"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:26:08.331" endtime="20231129 08:26:08.788"/>
</test>
<test id="s1-s1-s5-t2" name="Head Bucket not existent" line="34">
<kw name="Generate Ozone String" library="commonawslib">
<var>${randStr}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231129 08:26:08.789" level="INFO">${randStr} = 1768630843</msg>
<status status="PASS" starttime="20231129 08:26:08.789" endtime="20231129 08:26:08.789"/>
</kw>
<msg timestamp="20231129 08:26:08.790" level="INFO">${randStr} = ozone-test-1768630843</msg>
<status status="PASS" starttime="20231129 08:26:08.789" endtime="20231129 08:26:08.790"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-bucket --bucket ozonenosuchbucketqqweqwe-${randStr}</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:08.792" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-bucket --bucket ozonenosuchbucketqqweqwe-ozone-test-1768630843 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:09.275" level="INFO">${rc} = 255</msg>
<msg timestamp="20231129 08:26:09.275" level="INFO">${output} = 
An error occurred (404) when calling the HeadBucket operation: Not Found</msg>
<status status="PASS" starttime="20231129 08:26:08.791" endtime="20231129 08:26:09.275"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:09.276" level="INFO">
An error occurred (404) when calling the HeadBucket operation: Not Found</msg>
<status status="PASS" starttime="20231129 08:26:09.275" endtime="20231129 08:26:09.276"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:09.277" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:09.277" endtime="20231129 08:26:09.277"/>
</kw>
<msg timestamp="20231129 08:26:09.278" level="INFO">${output} = 
An error occurred (404) when calling the HeadBucket operation: Not Found</msg>
<status status="PASS" starttime="20231129 08:26:08.790" endtime="20231129 08:26:09.278"/>
</kw>
<msg timestamp="20231129 08:26:09.278" level="INFO">${result} = 
An error occurred (404) when calling the HeadBucket operation: Not Found</msg>
<status status="PASS" starttime="20231129 08:26:08.790" endtime="20231129 08:26:09.278"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>404</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:26:09.278" endtime="20231129 08:26:09.279"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Not Found</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:26:09.279" endtime="20231129 08:26:09.279"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:26:08.788" endtime="20231129 08:26:09.280"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20231129 08:26:08.320" endtime="20231129 08:26:09.281"/>
</suite>
<suite id="s1-s1-s6" name="Bucketlist" source="/opt/hadoop/smoketest/s3/bucketlist.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20231129 08:26:09.299" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:09.298" endtime="20231129 08:26:09.299"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231129 08:26:09.299" endtime="20231129 08:26:09.299"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231129 08:26:09.299" endtime="20231129 08:26:09.299"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:26:09.299" endtime="20231129 08:26:09.300"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:26:09.300" endtime="20231129 08:26:09.300"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:26:09.300" endtime="20231129 08:26:09.300"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:26:09.300" endtime="20231129 08:26:09.300"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:26:09.300" endtime="20231129 08:26:09.300"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20231129 08:26:09.301" endtime="20231129 08:26:09.301"/>
</kw>
<status status="PASS" starttime="20231129 08:26:09.298" endtime="20231129 08:26:09.301"/>
</kw>
<test id="s1-s1-s6-t1" name="List buckets" line="31">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-buckets | jq -r '.Buckets[].Name'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:09.305" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-buckets | jq -r '.Buckets[].Name' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:09.753" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:09.753" level="INFO">${output} = bucket-hbnfrqfsrd
bucket-ozone-test-1466650342
bucket-ozone-test-9156143777
bucket-ozone-test-9372680784
erasure</msg>
<status status="PASS" starttime="20231129 08:26:09.304" endtime="20231129 08:26:09.753"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:09.754" level="INFO">bucket-hbnfrqfsrd
bucket-ozone-test-1466650342
bucket-ozone-test-9156143777
bucket-ozone-test-9372680784
erasure</msg>
<status status="PASS" starttime="20231129 08:26:09.753" endtime="20231129 08:26:09.754"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:09.754" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:09.754" endtime="20231129 08:26:09.755"/>
</kw>
<status status="PASS" starttime="20231129 08:26:09.303" endtime="20231129 08:26:09.755"/>
</kw>
<msg timestamp="20231129 08:26:09.755" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:09.303" endtime="20231129 08:26:09.755"/>
</kw>
<msg timestamp="20231129 08:26:09.755" level="INFO">${output} = bucket-hbnfrqfsrd
bucket-ozone-test-1466650342
bucket-ozone-test-9156143777
bucket-ozone-test-9372680784
erasure</msg>
<status status="PASS" starttime="20231129 08:26:09.302" endtime="20231129 08:26:09.755"/>
</kw>
<msg timestamp="20231129 08:26:09.755" level="INFO">${result} = bucket-hbnfrqfsrd
bucket-ozone-test-1466650342
bucket-ozone-test-9156143777
bucket-ozone-test-9372680784
erasure</msg>
<status status="PASS" starttime="20231129 08:26:09.302" endtime="20231129 08:26:09.755"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:26:09.755" endtime="20231129 08:26:09.756"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:26:09.301" endtime="20231129 08:26:09.756"/>
</test>
<test id="s1-s1-s6-t2" name="Get bucket info with Ozone Shell to check the owner field" line="35">
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skipping this check as security is not enabled</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<msg timestamp="20231129 08:26:09.757" level="INFO">Execution passed with message:
Skipping this check as security is not enabled</msg>
<status status="PASS" starttime="20231129 08:26:09.757" endtime="20231129 08:26:09.757"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /s3v/${BUCKET} | jq -r '.owner'</arg>
<status status="NOT RUN" starttime="20231129 08:26:09.758" endtime="20231129 08:26:09.758"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>testuser</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20231129 08:26:09.758" endtime="20231129 08:26:09.758"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:26:09.756" endtime="20231129 08:26:09.758">Skipping this check as security is not enabled</status>
</test>
<test id="s1-s1-s6-t3" name="List buckets with empty access id" line="43">
<kw name="Save AWS access key" library="commonawslib" type="SETUP">
<kw name="Execute" library="os">
<var>${OZONE_AWS_ACCESS_KEY_ID}</var>
<arg>aws configure get aws_access_key_id</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:09.762" level="INFO">Running command 'aws configure get aws_access_key_id 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:10.139" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:10.139" level="INFO">${output} = dlfknslnfslf</msg>
<status status="PASS" starttime="20231129 08:26:09.760" endtime="20231129 08:26:10.139"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:10.140" level="INFO">dlfknslnfslf</msg>
<status status="PASS" starttime="20231129 08:26:10.139" endtime="20231129 08:26:10.140"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:10.141" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:10.140" endtime="20231129 08:26:10.141"/>
</kw>
<status status="PASS" starttime="20231129 08:26:09.760" endtime="20231129 08:26:10.141"/>
</kw>
<msg timestamp="20231129 08:26:10.141" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:09.760" endtime="20231129 08:26:10.141"/>
</kw>
<msg timestamp="20231129 08:26:10.141" level="INFO">${OZONE_AWS_ACCESS_KEY_ID} = dlfknslnfslf</msg>
<status status="PASS" starttime="20231129 08:26:09.759" endtime="20231129 08:26:10.141"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${OZONE_AWS_ACCESS_KEY_ID}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20231129 08:26:10.142" level="INFO">${OZONE_AWS_ACCESS_KEY_ID} = dlfknslnfslf</msg>
<status status="PASS" starttime="20231129 08:26:10.141" endtime="20231129 08:26:10.142"/>
</kw>
<status status="PASS" starttime="20231129 08:26:09.759" endtime="20231129 08:26:10.142"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ''</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:10.145" level="INFO">Running command 'aws configure set aws_access_key_id '' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:10.529" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:10.529" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:26:10.143" endtime="20231129 08:26:10.529"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:10.530" level="INFO"/>
<status status="PASS" starttime="20231129 08:26:10.529" endtime="20231129 08:26:10.530"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:10.530" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:10.530" endtime="20231129 08:26:10.531"/>
</kw>
<status status="PASS" starttime="20231129 08:26:10.143" endtime="20231129 08:26:10.531"/>
</kw>
<msg timestamp="20231129 08:26:10.531" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:10.143" endtime="20231129 08:26:10.531"/>
</kw>
<status status="PASS" starttime="20231129 08:26:10.142" endtime="20231129 08:26:10.531"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>list-buckets</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:10.533" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-buckets 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:10.976" level="INFO">${rc} = 255</msg>
<msg timestamp="20231129 08:26:10.976" level="INFO">${output} = 
An error occurred (AuthorizationHeaderMalformed) when calling the ListBuckets operation: The authorization header you provided is invalid.</msg>
<status status="PASS" starttime="20231129 08:26:10.532" endtime="20231129 08:26:10.976"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:10.977" level="INFO">
An error occurred (AuthorizationHeaderMalformed) when calling the ListBuckets operation: The authorization header you provided is invalid.</msg>
<status status="PASS" starttime="20231129 08:26:10.976" endtime="20231129 08:26:10.977"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:10.977" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:10.977" endtime="20231129 08:26:10.977"/>
</kw>
<msg timestamp="20231129 08:26:10.978" level="INFO">${output} = 
An error occurred (AuthorizationHeaderMalformed) when calling the ListBuckets operation: The authorization header you provided is invalid.</msg>
<status status="PASS" starttime="20231129 08:26:10.531" endtime="20231129 08:26:10.978"/>
</kw>
<msg timestamp="20231129 08:26:10.978" level="INFO">${result} = 
An error occurred (AuthorizationHeaderMalformed) when calling the ListBuckets operation: The authorization header you provided is invalid.</msg>
<status status="PASS" starttime="20231129 08:26:10.531" endtime="20231129 08:26:10.978"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>The authorization header you provided is invalid</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:26:10.978" endtime="20231129 08:26:10.978"/>
</kw>
<kw name="Restore AWS access key" library="commonawslib" type="TEARDOWN">
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id ${OZONE_AWS_ACCESS_KEY_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:10.982" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:11.360" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:11.360" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:26:10.981" endtime="20231129 08:26:11.360"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:11.361" level="INFO"/>
<status status="PASS" starttime="20231129 08:26:11.361" endtime="20231129 08:26:11.361"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:11.362" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:11.361" endtime="20231129 08:26:11.362"/>
</kw>
<status status="PASS" starttime="20231129 08:26:10.980" endtime="20231129 08:26:11.362"/>
</kw>
<msg timestamp="20231129 08:26:11.362" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:10.980" endtime="20231129 08:26:11.362"/>
</kw>
<status status="PASS" starttime="20231129 08:26:10.979" endtime="20231129 08:26:11.362"/>
</kw>
<status status="PASS" starttime="20231129 08:26:10.979" endtime="20231129 08:26:11.362"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:26:09.758" endtime="20231129 08:26:11.362"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20231129 08:26:09.284" endtime="20231129 08:26:11.363"/>
</suite>
<suite id="s1-s1-s7" name="Freon" source="/opt/hadoop/smoketest/s3/freon.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20231129 08:26:11.374" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:11.374" endtime="20231129 08:26:11.374"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231129 08:26:11.374" endtime="20231129 08:26:11.375"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231129 08:26:11.375" endtime="20231129 08:26:11.375"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:26:11.375" endtime="20231129 08:26:11.375"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:26:11.375" endtime="20231129 08:26:11.375"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:26:11.375" endtime="20231129 08:26:11.376"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:26:11.376" endtime="20231129 08:26:11.376"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:26:11.376" endtime="20231129 08:26:11.376"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20231129 08:26:11.376" endtime="20231129 08:26:11.376"/>
</kw>
<status status="PASS" starttime="20231129 08:26:11.373" endtime="20231129 08:26:11.376"/>
</kw>
<test id="s1-s1-s7-t1" name="Run Freon S3BG" line="43">
<kw name="Setup aws credentials" type="SETUP">
<kw name="Execute" library="os">
<var>${accessKey}</var>
<arg>aws configure get aws_access_key_id</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:11.379" level="INFO">Running command 'aws configure get aws_access_key_id 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:11.755" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:11.755" level="INFO">${output} = dlfknslnfslf</msg>
<status status="PASS" starttime="20231129 08:26:11.378" endtime="20231129 08:26:11.755"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:11.756" level="INFO">dlfknslnfslf</msg>
<status status="PASS" starttime="20231129 08:26:11.755" endtime="20231129 08:26:11.756"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:11.756" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:11.756" endtime="20231129 08:26:11.756"/>
</kw>
<status status="PASS" starttime="20231129 08:26:11.378" endtime="20231129 08:26:11.757"/>
</kw>
<msg timestamp="20231129 08:26:11.757" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:11.377" endtime="20231129 08:26:11.757"/>
</kw>
<msg timestamp="20231129 08:26:11.757" level="INFO">${accessKey} = dlfknslnfslf</msg>
<status status="PASS" starttime="20231129 08:26:11.377" endtime="20231129 08:26:11.757"/>
</kw>
<kw name="Execute" library="os">
<var>${secret}</var>
<arg>aws configure get aws_secret_access_key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:11.760" level="INFO">Running command 'aws configure get aws_secret_access_key 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:12.127" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:12.127" level="INFO">${output} = dlfknslnfslf</msg>
<status status="PASS" starttime="20231129 08:26:11.758" endtime="20231129 08:26:12.127"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:12.128" level="INFO">dlfknslnfslf</msg>
<status status="PASS" starttime="20231129 08:26:12.128" endtime="20231129 08:26:12.128"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:12.128" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:12.128" endtime="20231129 08:26:12.128"/>
</kw>
<status status="PASS" starttime="20231129 08:26:11.758" endtime="20231129 08:26:12.129"/>
</kw>
<msg timestamp="20231129 08:26:12.129" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:11.758" endtime="20231129 08:26:12.129"/>
</kw>
<msg timestamp="20231129 08:26:12.129" level="INFO">${secret} = dlfknslnfslf</msg>
<status status="PASS" starttime="20231129 08:26:11.757" endtime="20231129 08:26:12.129"/>
</kw>
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>AWS_SECRET_ACCESS_KEY</arg>
<arg>${secret}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20231129 08:26:12.129" level="INFO">Environment variable 'AWS_SECRET_ACCESS_KEY' set to value 'dlfknslnfslf'.</msg>
<status status="PASS" starttime="20231129 08:26:12.129" endtime="20231129 08:26:12.129"/>
</kw>
<kw name="Set Environment Variable" library="OperatingSystem">
<arg>AWS_ACCESS_KEY_ID</arg>
<arg>${accessKey}</arg>
<doc>Sets an environment variable to a specified value.</doc>
<msg timestamp="20231129 08:26:12.130" level="INFO">Environment variable 'AWS_ACCESS_KEY_ID' set to value 'dlfknslnfslf'.</msg>
<status status="PASS" starttime="20231129 08:26:12.129" endtime="20231129 08:26:12.130"/>
</kw>
<status status="PASS" starttime="20231129 08:26:11.377" endtime="20231129 08:26:12.130"/>
</kw>
<kw name="Freon S3BG">
<arg>s3bg-${BUCKET}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon s3bg -e ${ENDPOINT_URL} -t ${threads} -n ${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:12.133" level="INFO">Running command 'ozone freon s3bg -e http://s3g:9878 -t 10 -n 100 -p s3bg-erasure  2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:16.361" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:16.361" level="INFO">${output} = 2023-11-29 08:26:14,102 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-11-29 08:26:14,199 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231129 08:26:12.132" endtime="20231129 08:26:16.361"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:16.362" level="INFO">2023-11-29 08:26:14,102 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-11-29 08:26:14,199 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-11-29 08:26:14,199 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-11-29 08:26:14,261 [main] INFO freon.BaseFreonGenerator: Executing test with prefix s3bg-erasure and number-of-tests 100
2023-11-29 08:26:14,296 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-11-29 08:26:15,298 [Thread-5] INFO freon.ProgressBar: Progress: 45.00 % (45 out of 100)
2023-11-29 08:26:16,299 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2023-11-29 08:26:16,315 [shutdown-hook-0] INFO metrics: type=TIMER, name=bucket-create, count=100, min=19.954329, max=191.728034, mean=77.32594175000006, stddev=40.53945622788343, median=64.443076, p75=97.194845, p95=157.14457, p98=180.653315, p99=181.957473, p999=191.728034, mean_rate=69.99405457901476, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-11-29 08:26:16,316 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2023-11-29 08:26:16,316 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-11-29 08:26:16,316 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20231129 08:26:16.361" endtime="20231129 08:26:16.362"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:16.363" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:16.362" endtime="20231129 08:26:16.363"/>
</kw>
<status status="PASS" starttime="20231129 08:26:12.132" endtime="20231129 08:26:16.364"/>
</kw>
<msg timestamp="20231129 08:26:16.364" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:12.131" endtime="20231129 08:26:16.364"/>
</kw>
<msg timestamp="20231129 08:26:16.364" level="INFO">${result} = 2023-11-29 08:26:14,102 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-11-29 08:26:14,199 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20231129 08:26:12.131" endtime="20231129 08:26:16.364"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:26:16.364" endtime="20231129 08:26:16.364"/>
</kw>
<status status="PASS" starttime="20231129 08:26:12.130" endtime="20231129 08:26:16.364"/>
</kw>
<tag>no-bucket-type</tag>
<status status="PASS" starttime="20231129 08:26:11.376" endtime="20231129 08:26:16.365"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20231129 08:26:11.364" endtime="20231129 08:26:16.365"/>
</suite>
<suite id="s1-s1-s8" name="MultipartUpload" source="/opt/hadoop/smoketest/s3/MultipartUpload.robot">
<kw name="Setup Multipart Tests" type="SETUP">
<kw name="Setup s3 tests" library="commonawslib">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20231129 08:26:16.377" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:16.377" endtime="20231129 08:26:16.377"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231129 08:26:16.377" endtime="20231129 08:26:16.377"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231129 08:26:16.377" endtime="20231129 08:26:16.377"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:26:16.377" endtime="20231129 08:26:16.378"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:26:16.378" endtime="20231129 08:26:16.378"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:26:16.378" endtime="20231129 08:26:16.378"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:26:16.378" endtime="20231129 08:26:16.378"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:26:16.378" endtime="20231129 08:26:16.378"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20231129 08:26:16.378" endtime="20231129 08:26:16.378"/>
</kw>
<status status="PASS" starttime="20231129 08:26:16.377" endtime="20231129 08:26:16.378"/>
</kw>
<kw name="Create Random File KB">
<arg>/tmp/part1</arg>
<arg>5121</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=${file} bs=1024 count=${size_in_kilobytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:16.382" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1024 count=5121 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:16.408" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:16.408" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:26:16.380" endtime="20231129 08:26:16.408"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:16.409" level="INFO"/>
<status status="PASS" starttime="20231129 08:26:16.409" endtime="20231129 08:26:16.409"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:16.409" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:16.409" endtime="20231129 08:26:16.410"/>
</kw>
<status status="PASS" starttime="20231129 08:26:16.380" endtime="20231129 08:26:16.410"/>
</kw>
<msg timestamp="20231129 08:26:16.410" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:16.379" endtime="20231129 08:26:16.410"/>
</kw>
<status status="PASS" starttime="20231129 08:26:16.379" endtime="20231129 08:26:16.410"/>
</kw>
<status status="PASS" starttime="20231129 08:26:16.378" endtime="20231129 08:26:16.410"/>
</kw>
<kw name="Create Random File KB">
<arg>/tmp/part2</arg>
<arg>1023</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=${file} bs=1024 count=${size_in_kilobytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:16.413" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part2 bs=1024 count=1023 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:16.419" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:16.419" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:26:16.412" endtime="20231129 08:26:16.419"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:16.420" level="INFO"/>
<status status="PASS" starttime="20231129 08:26:16.420" endtime="20231129 08:26:16.420"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:16.421" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:16.420" endtime="20231129 08:26:16.421"/>
</kw>
<status status="PASS" starttime="20231129 08:26:16.411" endtime="20231129 08:26:16.421"/>
</kw>
<msg timestamp="20231129 08:26:16.421" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:16.411" endtime="20231129 08:26:16.421"/>
</kw>
<status status="PASS" starttime="20231129 08:26:16.411" endtime="20231129 08:26:16.421"/>
</kw>
<status status="PASS" starttime="20231129 08:26:16.410" endtime="20231129 08:26:16.421"/>
</kw>
<status status="PASS" starttime="20231129 08:26:16.376" endtime="20231129 08:26:16.421"/>
</kw>
<test id="s1-s1-s8-t1" name="Test Multipart Upload With Adjusted Length" line="57">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231129 08:26:16.423" level="INFO">${randStr} = 0135666177</msg>
<status status="PASS" starttime="20231129 08:26:16.423" endtime="20231129 08:26:16.423"/>
</kw>
<msg timestamp="20231129 08:26:16.423" level="INFO">${random} = ozone-test-0135666177</msg>
<status status="PASS" starttime="20231129 08:26:16.422" endtime="20231129 08:26:16.423"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231129 08:26:16.424" level="INFO">${PREFIX} = ozone-test-0135666177</msg>
<status status="PASS" starttime="20231129 08:26:16.423" endtime="20231129 08:26:16.424"/>
</kw>
<status status="PASS" starttime="20231129 08:26:16.422" endtime="20231129 08:26:16.424"/>
</kw>
<kw name="Perform Multipart Upload" library="commonawslib">
<arg>${BUCKET}</arg>
<arg>multipart/adjusted_length_${PREFIX}</arg>
<arg>/tmp/part1</arg>
<arg>/tmp/part2</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${bucket} --key ${key}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:16.427" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket erasure --key multipart/adjusted_length_ozone-test-0135666177 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:16.938" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:16.938" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "multipart/adjusted_length_ozone-test-0135666177",
    "UploadId": "f976f279-260e-4500-9a1d-97864f1c8657-111492882555469841"
}</msg>
<status status="PASS" starttime="20231129 08:26:16.426" endtime="20231129 08:26:16.938"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:16.939" level="INFO">{
    "Bucket": "erasure",
    "Key": "multipart/adjusted_length_ozone-test-0135666177",
    "UploadId": "f976f279-260e-4500-9a1d-97864f1c8657-111492882555469841"
}</msg>
<status status="PASS" starttime="20231129 08:26:16.939" endtime="20231129 08:26:16.939"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:16.940" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:16.939" endtime="20231129 08:26:16.940"/>
</kw>
<status status="PASS" starttime="20231129 08:26:16.426" endtime="20231129 08:26:16.940"/>
</kw>
<msg timestamp="20231129 08:26:16.940" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:16.425" endtime="20231129 08:26:16.940"/>
</kw>
<msg timestamp="20231129 08:26:16.940" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "multipart/adjusted_length_ozone-test-0135666177",
    "UploadId": "f976f279-260e-4500-9a1d-97864f1c8657-111492882555469841"
}</msg>
<status status="PASS" starttime="20231129 08:26:16.425" endtime="20231129 08:26:16.940"/>
</kw>
<msg timestamp="20231129 08:26:16.940" level="INFO">${result} = {
    "Bucket": "erasure",
    "Key": "multipart/adjusted_length_ozone-test-0135666177",
    "UploadId": "f976f279-260e-4500-9a1d-97864f1c8657-111492882555469841"
}</msg>
<status status="PASS" starttime="20231129 08:26:16.424" endtime="20231129 08:26:16.940"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${upload_id}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:16.942" level="INFO">Running command 'echo '{
    "Bucket": "erasure",
    "Key": "multipart/adjusted_length_ozone-test-0135666177",
    "UploadId": "f976f279-260e-4500-9a1d-97864f1c8657-111492882555469841"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:16.979" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:16.979" level="INFO">${output} = f976f279-260e-4500-9a1d-97864f1c8657-111492882555469841</msg>
<status status="PASS" starttime="20231129 08:26:16.941" endtime="20231129 08:26:16.979"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:16.980" level="INFO">f976f279-260e-4500-9a1d-97864f1c8657-111492882555469841</msg>
<status status="PASS" starttime="20231129 08:26:16.979" endtime="20231129 08:26:16.980"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:16.981" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:16.980" endtime="20231129 08:26:16.981"/>
</kw>
<msg timestamp="20231129 08:26:16.981" level="INFO">${upload_id} = f976f279-260e-4500-9a1d-97864f1c8657-111492882555469841</msg>
<status status="PASS" starttime="20231129 08:26:16.941" endtime="20231129 08:26:16.981"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{etags}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20231129 08:26:16.981" level="INFO">@{etags} = [ ]</msg>
<status status="PASS" starttime="20231129 08:26:16.981" endtime="20231129 08:26:16.981"/>
</kw>
<for flavor="IN ENUMERATE">
<var>${i}</var>
<var>${file}</var>
<value>@{files}</value>
<iter>
<var name="${i}">0</var>
<var name="${file}">/tmp/part1</var>
<kw name="Evaluate" library="BuiltIn">
<var>${part}</var>
<arg>${i} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20231129 08:26:16.982" level="INFO">${part} = 1</msg>
<status status="PASS" starttime="20231129 08:26:16.982" endtime="20231129 08:26:16.982"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${bucket} --key ${key} --part-number ${part} --body ${file} --upload-id ${upload_id}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:16.987" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket erasure --key multipart/adjusted_length_ozone-test-0135666177 --part-number 1 --body /tmp/part1 --upload-id f976f279-260e-4500-9a1d-97864f1c8657-111492882555469841 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:17.960" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:17.960" level="INFO">${output} = {
    "ETag": "/s3v/erasure/multipart/adjusted_length_ozone-test-0135666177-f976f279-260e-4500-9a1d-97864f1c8657-111492882555469841-1"
}</msg>
<status status="PASS" starttime="20231129 08:26:16.985" endtime="20231129 08:26:17.960"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:17.961" level="INFO">{
    "ETag": "/s3v/erasure/multipart/adjusted_length_ozone-test-0135666177-f976f279-260e-4500-9a1d-97864f1c8657-111492882555469841-1"
}</msg>
<status status="PASS" starttime="20231129 08:26:17.960" endtime="20231129 08:26:17.961"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:17.961" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:17.961" endtime="20231129 08:26:17.961"/>
</kw>
<status status="PASS" starttime="20231129 08:26:16.985" endtime="20231129 08:26:17.961"/>
</kw>
<msg timestamp="20231129 08:26:17.962" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:16.984" endtime="20231129 08:26:17.962"/>
</kw>
<msg timestamp="20231129 08:26:17.962" level="INFO">${output} = {
    "ETag": "/s3v/erasure/multipart/adjusted_length_ozone-test-0135666177-f976f279-260e-4500-9a1d-97864f1c8657-111492882555469841-1"
}</msg>
<status status="PASS" starttime="20231129 08:26:16.983" endtime="20231129 08:26:17.962"/>
</kw>
<msg timestamp="20231129 08:26:17.962" level="INFO">${result} = {
    "ETag": "/s3v/erasure/multipart/adjusted_length_ozone-test-0135666177-f976f279-260e-4500-9a1d-97864f1c8657-111492882555469841-1"
}</msg>
<status status="PASS" starttime="20231129 08:26:16.983" endtime="20231129 08:26:17.962"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:17.965" level="INFO">Running command 'echo '{
    "ETag": "/s3v/erasure/multipart/adjusted_length_ozone-test-0135666177-f976f279-260e-4500-9a1d-97864f1c8657-111492882555469841-1"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:17.991" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:17.991" level="INFO">${output} = /s3v/erasure/multipart/adjusted_length_ozone-test-0135666177-f976f279-260e-4500-9a1d-97864f1c8657-111492882555469841-1</msg>
<status status="PASS" starttime="20231129 08:26:17.963" endtime="20231129 08:26:17.991"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:17.992" level="INFO">/s3v/erasure/multipart/adjusted_length_ozone-test-0135666177-f976f279-260e-4500-9a1d-97864f1c8657-111492882555469841-1</msg>
<status status="PASS" starttime="20231129 08:26:17.991" endtime="20231129 08:26:17.992"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:17.992" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:17.992" endtime="20231129 08:26:17.992"/>
</kw>
<status status="PASS" starttime="20231129 08:26:17.963" endtime="20231129 08:26:17.992"/>
</kw>
<msg timestamp="20231129 08:26:17.992" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:17.963" endtime="20231129 08:26:17.993"/>
</kw>
<msg timestamp="20231129 08:26:17.993" level="INFO">${etag} = /s3v/erasure/multipart/adjusted_length_ozone-test-0135666177-f976f279-260e-4500-9a1d-97864f1c8657-111492882555469841-1</msg>
<status status="PASS" starttime="20231129 08:26:17.962" endtime="20231129 08:26:17.993"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${etags}</arg>
<arg>{ETag=${etag},PartNumber=${part}}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20231129 08:26:17.993" endtime="20231129 08:26:17.993"/>
</kw>
<status status="PASS" starttime="20231129 08:26:16.982" endtime="20231129 08:26:17.993"/>
</iter>
<iter>
<var name="${i}">1</var>
<var name="${file}">/tmp/part2</var>
<kw name="Evaluate" library="BuiltIn">
<var>${part}</var>
<arg>${i} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20231129 08:26:17.994" level="INFO">${part} = 2</msg>
<status status="PASS" starttime="20231129 08:26:17.994" endtime="20231129 08:26:17.994"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${bucket} --key ${key} --part-number ${part} --body ${file} --upload-id ${upload_id}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:17.997" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket erasure --key multipart/adjusted_length_ozone-test-0135666177 --part-number 2 --body /tmp/part2 --upload-id f976f279-260e-4500-9a1d-97864f1c8657-111492882555469841 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:18.561" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:18.561" level="INFO">${output} = {
    "ETag": "/s3v/erasure/multipart/adjusted_length_ozone-test-0135666177-f976f279-260e-4500-9a1d-97864f1c8657-111492882555469841-2"
}</msg>
<status status="PASS" starttime="20231129 08:26:17.996" endtime="20231129 08:26:18.561"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:18.562" level="INFO">{
    "ETag": "/s3v/erasure/multipart/adjusted_length_ozone-test-0135666177-f976f279-260e-4500-9a1d-97864f1c8657-111492882555469841-2"
}</msg>
<status status="PASS" starttime="20231129 08:26:18.562" endtime="20231129 08:26:18.562"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:18.563" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:18.562" endtime="20231129 08:26:18.563"/>
</kw>
<status status="PASS" starttime="20231129 08:26:17.995" endtime="20231129 08:26:18.563"/>
</kw>
<msg timestamp="20231129 08:26:18.563" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:17.995" endtime="20231129 08:26:18.563"/>
</kw>
<msg timestamp="20231129 08:26:18.563" level="INFO">${output} = {
    "ETag": "/s3v/erasure/multipart/adjusted_length_ozone-test-0135666177-f976f279-260e-4500-9a1d-97864f1c8657-111492882555469841-2"
}</msg>
<status status="PASS" starttime="20231129 08:26:17.995" endtime="20231129 08:26:18.563"/>
</kw>
<msg timestamp="20231129 08:26:18.564" level="INFO">${result} = {
    "ETag": "/s3v/erasure/multipart/adjusted_length_ozone-test-0135666177-f976f279-260e-4500-9a1d-97864f1c8657-111492882555469841-2"
}</msg>
<status status="PASS" starttime="20231129 08:26:17.994" endtime="20231129 08:26:18.564"/>
</kw>
<kw name="Execute" library="os">
<var>${etag}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:18.566" level="INFO">Running command 'echo '{
    "ETag": "/s3v/erasure/multipart/adjusted_length_ozone-test-0135666177-f976f279-260e-4500-9a1d-97864f1c8657-111492882555469841-2"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:18.593" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:18.593" level="INFO">${output} = /s3v/erasure/multipart/adjusted_length_ozone-test-0135666177-f976f279-260e-4500-9a1d-97864f1c8657-111492882555469841-2</msg>
<status status="PASS" starttime="20231129 08:26:18.565" endtime="20231129 08:26:18.593"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:18.593" level="INFO">/s3v/erasure/multipart/adjusted_length_ozone-test-0135666177-f976f279-260e-4500-9a1d-97864f1c8657-111492882555469841-2</msg>
<status status="PASS" starttime="20231129 08:26:18.593" endtime="20231129 08:26:18.594"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:18.594" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:18.594" endtime="20231129 08:26:18.594"/>
</kw>
<status status="PASS" starttime="20231129 08:26:18.564" endtime="20231129 08:26:18.594"/>
</kw>
<msg timestamp="20231129 08:26:18.594" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:18.564" endtime="20231129 08:26:18.594"/>
</kw>
<msg timestamp="20231129 08:26:18.594" level="INFO">${etag} = /s3v/erasure/multipart/adjusted_length_ozone-test-0135666177-f976f279-260e-4500-9a1d-97864f1c8657-111492882555469841-2</msg>
<status status="PASS" starttime="20231129 08:26:18.564" endtime="20231129 08:26:18.594"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${etags}</arg>
<arg>{ETag=${etag},PartNumber=${part}}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20231129 08:26:18.595" endtime="20231129 08:26:18.595"/>
</kw>
<status status="PASS" starttime="20231129 08:26:17.993" endtime="20231129 08:26:18.595"/>
</iter>
<status status="PASS" starttime="20231129 08:26:16.981" endtime="20231129 08:26:18.595"/>
</for>
<kw name="Catenate" library="BuiltIn">
<var>${parts}</var>
<arg>SEPARATOR=,</arg>
<arg>@{etags}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20231129 08:26:18.596" level="INFO">${parts} = {ETag=/s3v/erasure/multipart/adjusted_length_ozone-test-0135666177-f976f279-260e-4500-9a1d-97864f1c8657-111492882555469841-1,PartNumber=1},{ETag=/s3v/erasure/multipart/adjusted_length_ozone-test-01356...</msg>
<status status="PASS" starttime="20231129 08:26:18.595" endtime="20231129 08:26:18.596"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>complete-multipart-upload --bucket ${bucket} --key ${key} --upload-id ${upload_id} --multipart-upload 'Parts=[${parts}]'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:18.599" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --bucket erasure --key multipart/adjusted_length_ozone-test-0135666177 --upload-id f976f279-260e-4500-9a1d-97864f1c8657-111492882555469841 --multipart-upload 'Parts=[{ETag=/s3v/erasure/multipart/adjusted_length_ozone-test-0135666177-f976f279-260e-4500-9a1d-97864f1c8657-111492882555469841-1,PartNumber=1},{ETag=/s3v/erasure/multipart/adjusted_length_ozone-test-0135666177-f976f279-260e-4500-9a1d-97864f1c8657-111492882555469841-2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:19.053" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:19.053" level="INFO">${output} = {
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "multipart/adjusted_length_ozone-test-0135666177",
    "ETag": "\"1082eebc375850ed6009e50019f253a7-2\""
}</msg>
<status status="PASS" starttime="20231129 08:26:18.598" endtime="20231129 08:26:19.053"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:19.054" level="INFO">{
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "multipart/adjusted_length_ozone-test-0135666177",
    "ETag": "\"1082eebc375850ed6009e50019f253a7-2\""
}</msg>
<status status="PASS" starttime="20231129 08:26:19.053" endtime="20231129 08:26:19.054"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:19.054" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:19.054" endtime="20231129 08:26:19.054"/>
</kw>
<status status="PASS" starttime="20231129 08:26:18.597" endtime="20231129 08:26:19.054"/>
</kw>
<msg timestamp="20231129 08:26:19.054" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:18.597" endtime="20231129 08:26:19.055"/>
</kw>
<msg timestamp="20231129 08:26:19.055" level="INFO">${output} = {
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "multipart/adjusted_length_ozone-test-0135666177",
    "ETag": "\"1082eebc375850ed6009e50019f253a7-2\""
}</msg>
<status status="PASS" starttime="20231129 08:26:18.596" endtime="20231129 08:26:19.055"/>
</kw>
<status status="PASS" starttime="20231129 08:26:18.596" endtime="20231129 08:26:19.055"/>
</kw>
<status status="PASS" starttime="20231129 08:26:16.424" endtime="20231129 08:26:19.055"/>
</kw>
<kw name="Verify Multipart Upload" library="commonawslib">
<arg>${BUCKET}</arg>
<arg>multipart/adjusted_length_${PREFIX}</arg>
<arg>/tmp/part1</arg>
<arg>/tmp/part2</arg>
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231129 08:26:19.056" level="INFO">${randStr} = 9927447559</msg>
<status status="PASS" starttime="20231129 08:26:19.056" endtime="20231129 08:26:19.057"/>
</kw>
<msg timestamp="20231129 08:26:19.057" level="INFO">${random} = ozone-test-9927447559</msg>
<status status="PASS" starttime="20231129 08:26:19.056" endtime="20231129 08:26:19.057"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${bucket} --key ${key} /tmp/verify${random}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:19.060" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key multipart/adjusted_length_ozone-test-0135666177 /tmp/verifyozone-test-9927447559 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:19.611" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:19.611" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:26:19 GMT",
    "ContentLength": 6291456,
    "ETag": "\"1082eebc375850ed6009e50019f253a7-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20231129 08:26:19.058" endtime="20231129 08:26:19.611"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:19.612" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:26:19 GMT",
    "ContentLength": 6291456,
    "ETag": "\"1082eebc375850ed6009e50019f253a7-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 29 Nov 2023 08:26:19 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231129 08:26:19.612" endtime="20231129 08:26:19.613"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:19.613" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:19.613" endtime="20231129 08:26:19.613"/>
</kw>
<status status="PASS" starttime="20231129 08:26:19.058" endtime="20231129 08:26:19.613"/>
</kw>
<msg timestamp="20231129 08:26:19.613" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:19.058" endtime="20231129 08:26:19.613"/>
</kw>
<msg timestamp="20231129 08:26:19.614" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:26:19 GMT",
    "ContentLength": 6291456,
    "ETag": "\"1082eebc375850ed6009e50019f253a7-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20231129 08:26:19.057" endtime="20231129 08:26:19.614"/>
</kw>
<status status="PASS" starttime="20231129 08:26:19.057" endtime="20231129 08:26:19.614"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${tmp}</var>
<arg>@{files}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20231129 08:26:19.614" level="INFO">${tmp} = /tmp/part1 /tmp/part2</msg>
<status status="PASS" starttime="20231129 08:26:19.614" endtime="20231129 08:26:19.614"/>
</kw>
<kw name="Execute" library="os">
<arg>cat ${tmp} &gt; /tmp/original${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:19.617" level="INFO">Running command 'cat /tmp/part1 /tmp/part2 &gt; /tmp/originalozone-test-9927447559'.</msg>
<msg timestamp="20231129 08:26:19.623" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:19.623" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:26:19.616" endtime="20231129 08:26:19.623"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:19.624" level="INFO"/>
<status status="PASS" starttime="20231129 08:26:19.624" endtime="20231129 08:26:19.624"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:19.625" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:19.624" endtime="20231129 08:26:19.625"/>
</kw>
<status status="PASS" starttime="20231129 08:26:19.615" endtime="20231129 08:26:19.625"/>
</kw>
<msg timestamp="20231129 08:26:19.625" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:19.615" endtime="20231129 08:26:19.625"/>
</kw>
<status status="PASS" starttime="20231129 08:26:19.614" endtime="20231129 08:26:19.625"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/original${random}</arg>
<arg>/tmp/verify${random}</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:19.628" level="INFO">Running command 'md5sum /tmp/originalozone-test-9927447559 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:19.641" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:19.641" level="INFO">${output} = bd3939b715a22e1963f73f3847a33c2a</msg>
<status status="PASS" starttime="20231129 08:26:19.627" endtime="20231129 08:26:19.641"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:19.641" level="INFO">bd3939b715a22e1963f73f3847a33c2a</msg>
<status status="PASS" starttime="20231129 08:26:19.641" endtime="20231129 08:26:19.642"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:19.642" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:19.642" endtime="20231129 08:26:19.642"/>
</kw>
<status status="PASS" starttime="20231129 08:26:19.626" endtime="20231129 08:26:19.642"/>
</kw>
<msg timestamp="20231129 08:26:19.642" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:19.626" endtime="20231129 08:26:19.642"/>
</kw>
<msg timestamp="20231129 08:26:19.643" level="INFO">${checksumbefore} = bd3939b715a22e1963f73f3847a33c2a</msg>
<status status="PASS" starttime="20231129 08:26:19.626" endtime="20231129 08:26:19.643"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:19.645" level="INFO">Running command 'md5sum /tmp/verifyozone-test-9927447559 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:19.657" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:19.657" level="INFO">${output} = bd3939b715a22e1963f73f3847a33c2a</msg>
<status status="PASS" starttime="20231129 08:26:19.644" endtime="20231129 08:26:19.657"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:19.658" level="INFO">bd3939b715a22e1963f73f3847a33c2a</msg>
<status status="PASS" starttime="20231129 08:26:19.658" endtime="20231129 08:26:19.658"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:19.659" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:19.658" endtime="20231129 08:26:19.659"/>
</kw>
<status status="PASS" starttime="20231129 08:26:19.643" endtime="20231129 08:26:19.659"/>
</kw>
<msg timestamp="20231129 08:26:19.659" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:19.643" endtime="20231129 08:26:19.659"/>
</kw>
<msg timestamp="20231129 08:26:19.659" level="INFO">${checksumafter} = bd3939b715a22e1963f73f3847a33c2a</msg>
<status status="PASS" starttime="20231129 08:26:19.643" endtime="20231129 08:26:19.659"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231129 08:26:19.659" endtime="20231129 08:26:19.660"/>
</kw>
<status status="PASS" starttime="20231129 08:26:19.625" endtime="20231129 08:26:19.660"/>
</kw>
<status status="PASS" starttime="20231129 08:26:19.055" endtime="20231129 08:26:19.660"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:26:16.421" endtime="20231129 08:26:19.660"/>
</test>
<test id="s1-s1-s8-t2" name="Test Multipart Upload" line="61">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231129 08:26:19.662" level="INFO">${randStr} = 0834024025</msg>
<status status="PASS" starttime="20231129 08:26:19.662" endtime="20231129 08:26:19.662"/>
</kw>
<msg timestamp="20231129 08:26:19.662" level="INFO">${random} = ozone-test-0834024025</msg>
<status status="PASS" starttime="20231129 08:26:19.661" endtime="20231129 08:26:19.662"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231129 08:26:19.663" level="INFO">${PREFIX} = ozone-test-0834024025</msg>
<status status="PASS" starttime="20231129 08:26:19.662" endtime="20231129 08:26:19.663"/>
</kw>
<status status="PASS" starttime="20231129 08:26:19.661" endtime="20231129 08:26:19.663"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:19.666" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket erasure --key ozone-test-0834024025/multipartKey 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:20.114" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:20.114" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-0834024025/multipartKey",
    "UploadId": "e3d041bb-741e-4102-8216-3148839858cd-111492882763939860"
}</msg>
<status status="PASS" starttime="20231129 08:26:19.664" endtime="20231129 08:26:20.114"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:20.115" level="INFO">{
    "Bucket": "erasure",
    "Key": "ozone-test-0834024025/multipartKey",
    "UploadId": "e3d041bb-741e-4102-8216-3148839858cd-111492882763939860"
}</msg>
<status status="PASS" starttime="20231129 08:26:20.114" endtime="20231129 08:26:20.115"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:20.115" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:20.115" endtime="20231129 08:26:20.116"/>
</kw>
<status status="PASS" starttime="20231129 08:26:19.664" endtime="20231129 08:26:20.116"/>
</kw>
<msg timestamp="20231129 08:26:20.116" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:19.664" endtime="20231129 08:26:20.116"/>
</kw>
<msg timestamp="20231129 08:26:20.116" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-0834024025/multipartKey",
    "UploadId": "e3d041bb-741e-4102-8216-3148839858cd-111492882763939860"
}</msg>
<status status="PASS" starttime="20231129 08:26:19.663" endtime="20231129 08:26:20.116"/>
</kw>
<msg timestamp="20231129 08:26:20.116" level="INFO">${result} = {
    "Bucket": "erasure",
    "Key": "ozone-test-0834024025/multipartKey",
    "UploadId": "e3d041bb-741e-4102-8216-3148839858cd-111492882763939860"
}</msg>
<status status="PASS" starttime="20231129 08:26:19.663" endtime="20231129 08:26:20.116"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:20.118" level="INFO">Running command 'echo '{
    "Bucket": "erasure",
    "Key": "ozone-test-0834024025/multipartKey",
    "UploadId": "e3d041bb-741e-4102-8216-3148839858cd-111492882763939860"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:20.144" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:20.144" level="INFO">${output} = e3d041bb-741e-4102-8216-3148839858cd-111492882763939860</msg>
<status status="PASS" starttime="20231129 08:26:20.117" endtime="20231129 08:26:20.144"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:20.145" level="INFO">e3d041bb-741e-4102-8216-3148839858cd-111492882763939860</msg>
<status status="PASS" starttime="20231129 08:26:20.144" endtime="20231129 08:26:20.145"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:20.145" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:20.145" endtime="20231129 08:26:20.145"/>
</kw>
<msg timestamp="20231129 08:26:20.145" level="INFO">${uploadID} = e3d041bb-741e-4102-8216-3148839858cd-111492882763939860</msg>
<status status="PASS" starttime="20231129 08:26:20.117" endtime="20231129 08:26:20.146"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:26:20.146" endtime="20231129 08:26:20.146"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:26:20.146" endtime="20231129 08:26:20.146"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:26:20.147" endtime="20231129 08:26:20.147"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:20.150" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket erasure --key ozone-test-0834024025/multipartKey 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:20.614" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:20.614" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-0834024025/multipartKey",
    "UploadId": "def03d02-e685-4f59-b424-95f4b8bec789-111492882796838933"
}</msg>
<status status="PASS" starttime="20231129 08:26:20.149" endtime="20231129 08:26:20.614"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:20.615" level="INFO">{
    "Bucket": "erasure",
    "Key": "ozone-test-0834024025/multipartKey",
    "UploadId": "def03d02-e685-4f59-b424-95f4b8bec789-111492882796838933"
}</msg>
<status status="PASS" starttime="20231129 08:26:20.614" endtime="20231129 08:26:20.615"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:20.615" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:20.615" endtime="20231129 08:26:20.615"/>
</kw>
<status status="PASS" starttime="20231129 08:26:20.148" endtime="20231129 08:26:20.616"/>
</kw>
<msg timestamp="20231129 08:26:20.616" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:20.148" endtime="20231129 08:26:20.616"/>
</kw>
<msg timestamp="20231129 08:26:20.616" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-0834024025/multipartKey",
    "UploadId": "def03d02-e685-4f59-b424-95f4b8bec789-111492882796838933"
}</msg>
<status status="PASS" starttime="20231129 08:26:20.147" endtime="20231129 08:26:20.616"/>
</kw>
<msg timestamp="20231129 08:26:20.616" level="INFO">${result} = {
    "Bucket": "erasure",
    "Key": "ozone-test-0834024025/multipartKey",
    "UploadId": "def03d02-e685-4f59-b424-95f4b8bec789-111492882796838933"
}</msg>
<status status="PASS" starttime="20231129 08:26:20.147" endtime="20231129 08:26:20.616"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${nextUploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:20.618" level="INFO">Running command 'echo '{
    "Bucket": "erasure",
    "Key": "ozone-test-0834024025/multipartKey",
    "UploadId": "def03d02-e685-4f59-b424-95f4b8bec789-111492882796838933"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:20.644" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:20.644" level="INFO">${output} = def03d02-e685-4f59-b424-95f4b8bec789-111492882796838933</msg>
<status status="PASS" starttime="20231129 08:26:20.617" endtime="20231129 08:26:20.644"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:20.645" level="INFO">def03d02-e685-4f59-b424-95f4b8bec789-111492882796838933</msg>
<status status="PASS" starttime="20231129 08:26:20.644" endtime="20231129 08:26:20.645"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:20.645" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:20.645" endtime="20231129 08:26:20.645"/>
</kw>
<msg timestamp="20231129 08:26:20.645" level="INFO">${nextUploadID} = def03d02-e685-4f59-b424-95f4b8bec789-111492882796838933</msg>
<status status="PASS" starttime="20231129 08:26:20.616" endtime="20231129 08:26:20.645"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:26:20.646" endtime="20231129 08:26:20.646"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:26:20.646" endtime="20231129 08:26:20.646"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:26:20.647" endtime="20231129 08:26:20.647"/>
</kw>
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${uploadID}</arg>
<arg>${nextUploadID}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="PASS" starttime="20231129 08:26:20.647" endtime="20231129 08:26:20.647"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>5</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>5</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:20.650" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:20.668" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:20.668" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:26:20.649" endtime="20231129 08:26:20.668"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:20.669" level="INFO"/>
<status status="PASS" starttime="20231129 08:26:20.669" endtime="20231129 08:26:20.669"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:20.670" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:20.669" endtime="20231129 08:26:20.670"/>
</kw>
<status status="PASS" starttime="20231129 08:26:20.649" endtime="20231129 08:26:20.670"/>
</kw>
<msg timestamp="20231129 08:26:20.670" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:20.649" endtime="20231129 08:26:20.670"/>
</kw>
<status status="PASS" starttime="20231129 08:26:20.648" endtime="20231129 08:26:20.670"/>
</kw>
<status status="PASS" starttime="20231129 08:26:20.648" endtime="20231129 08:26:20.670"/>
</kw>
<status status="PASS" starttime="20231129 08:26:20.647" endtime="20231129 08:26:20.670"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey --part-number 1 --body /tmp/part1 --upload-id ${nextUploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:20.673" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket erasure --key ozone-test-0834024025/multipartKey --part-number 1 --body /tmp/part1 --upload-id def03d02-e685-4f59-b424-95f4b8bec789-111492882796838933 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:21.279" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:21.279" level="INFO">${output} = {
    "ETag": "/s3v/erasure/ozone-test-0834024025/multipartKey-def03d02-e685-4f59-b424-95f4b8bec789-111492882796838933-1"
}</msg>
<status status="PASS" starttime="20231129 08:26:20.672" endtime="20231129 08:26:21.279"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:21.280" level="INFO">{
    "ETag": "/s3v/erasure/ozone-test-0834024025/multipartKey-def03d02-e685-4f59-b424-95f4b8bec789-111492882796838933-1"
}</msg>
<status status="PASS" starttime="20231129 08:26:21.280" endtime="20231129 08:26:21.280"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:21.281" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:21.281" endtime="20231129 08:26:21.281"/>
</kw>
<status status="PASS" starttime="20231129 08:26:20.672" endtime="20231129 08:26:21.281"/>
</kw>
<msg timestamp="20231129 08:26:21.281" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:20.671" endtime="20231129 08:26:21.281"/>
</kw>
<msg timestamp="20231129 08:26:21.281" level="INFO">${output} = {
    "ETag": "/s3v/erasure/ozone-test-0834024025/multipartKey-def03d02-e685-4f59-b424-95f4b8bec789-111492882796838933-1"
}</msg>
<status status="PASS" starttime="20231129 08:26:20.671" endtime="20231129 08:26:21.281"/>
</kw>
<msg timestamp="20231129 08:26:21.282" level="INFO">${result} = {
    "ETag": "/s3v/erasure/ozone-test-0834024025/multipartKey-def03d02-e685-4f59-b424-95f4b8bec789-111492882796838933-1"
}</msg>
<status status="PASS" starttime="20231129 08:26:20.670" endtime="20231129 08:26:21.282"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:26:21.282" endtime="20231129 08:26:21.282"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>5</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>5</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:21.286" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:21.304" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:21.304" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:26:21.284" endtime="20231129 08:26:21.304"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:21.305" level="INFO"/>
<status status="PASS" starttime="20231129 08:26:21.304" endtime="20231129 08:26:21.305"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:21.305" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:21.305" endtime="20231129 08:26:21.305"/>
</kw>
<status status="PASS" starttime="20231129 08:26:21.284" endtime="20231129 08:26:21.306"/>
</kw>
<msg timestamp="20231129 08:26:21.306" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:21.284" endtime="20231129 08:26:21.306"/>
</kw>
<status status="PASS" starttime="20231129 08:26:21.283" endtime="20231129 08:26:21.306"/>
</kw>
<status status="PASS" starttime="20231129 08:26:21.282" endtime="20231129 08:26:21.306"/>
</kw>
<status status="PASS" starttime="20231129 08:26:21.282" endtime="20231129 08:26:21.306"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey --part-number 1 --body /tmp/part1 --upload-id ${nextUploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:21.309" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket erasure --key ozone-test-0834024025/multipartKey --part-number 1 --body /tmp/part1 --upload-id def03d02-e685-4f59-b424-95f4b8bec789-111492882796838933 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:21.979" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:21.979" level="INFO">${output} = {
    "ETag": "/s3v/erasure/ozone-test-0834024025/multipartKey-def03d02-e685-4f59-b424-95f4b8bec789-111492882796838933-1"
}</msg>
<status status="PASS" starttime="20231129 08:26:21.308" endtime="20231129 08:26:21.979"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:21.980" level="INFO">{
    "ETag": "/s3v/erasure/ozone-test-0834024025/multipartKey-def03d02-e685-4f59-b424-95f4b8bec789-111492882796838933-1"
}</msg>
<status status="PASS" starttime="20231129 08:26:21.980" endtime="20231129 08:26:21.980"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:21.981" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:21.981" endtime="20231129 08:26:21.981"/>
</kw>
<status status="PASS" starttime="20231129 08:26:21.307" endtime="20231129 08:26:21.981"/>
</kw>
<msg timestamp="20231129 08:26:21.981" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:21.307" endtime="20231129 08:26:21.982"/>
</kw>
<msg timestamp="20231129 08:26:21.982" level="INFO">${output} = {
    "ETag": "/s3v/erasure/ozone-test-0834024025/multipartKey-def03d02-e685-4f59-b424-95f4b8bec789-111492882796838933-1"
}</msg>
<status status="PASS" starttime="20231129 08:26:21.307" endtime="20231129 08:26:21.982"/>
</kw>
<msg timestamp="20231129 08:26:21.982" level="INFO">${result} = {
    "ETag": "/s3v/erasure/ozone-test-0834024025/multipartKey-def03d02-e685-4f59-b424-95f4b8bec789-111492882796838933-1"
}</msg>
<status status="PASS" starttime="20231129 08:26:21.306" endtime="20231129 08:26:21.982"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:26:21.982" endtime="20231129 08:26:21.983"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:26:19.661" endtime="20231129 08:26:21.983"/>
</test>
<test id="s1-s1-s8-t3" name="Test Multipart Upload Complete" line="89">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231129 08:26:21.986" level="INFO">${randStr} = 5290287418</msg>
<status status="PASS" starttime="20231129 08:26:21.986" endtime="20231129 08:26:21.986"/>
</kw>
<msg timestamp="20231129 08:26:21.987" level="INFO">${random} = ozone-test-5290287418</msg>
<status status="PASS" starttime="20231129 08:26:21.985" endtime="20231129 08:26:21.987"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231129 08:26:21.987" level="INFO">${PREFIX} = ozone-test-5290287418</msg>
<status status="PASS" starttime="20231129 08:26:21.987" endtime="20231129 08:26:21.987"/>
</kw>
<status status="PASS" starttime="20231129 08:26:21.985" endtime="20231129 08:26:21.987"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:21.992" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket erasure --key ozone-test-5290287418/multipartKey1 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:22.486" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:22.487" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-5290287418/multipartKey1",
    "UploadId": "42d9e508-6b55-418e-9272-2917186a55a0-111492882919653400"
}</msg>
<status status="PASS" starttime="20231129 08:26:21.990" endtime="20231129 08:26:22.487"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:22.487" level="INFO">{
    "Bucket": "erasure",
    "Key": "ozone-test-5290287418/multipartKey1",
    "UploadId": "42d9e508-6b55-418e-9272-2917186a55a0-111492882919653400"
}</msg>
<status status="PASS" starttime="20231129 08:26:22.487" endtime="20231129 08:26:22.488"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:22.488" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:22.488" endtime="20231129 08:26:22.488"/>
</kw>
<status status="PASS" starttime="20231129 08:26:21.989" endtime="20231129 08:26:22.489"/>
</kw>
<msg timestamp="20231129 08:26:22.489" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:21.989" endtime="20231129 08:26:22.489"/>
</kw>
<msg timestamp="20231129 08:26:22.489" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-5290287418/multipartKey1",
    "UploadId": "42d9e508-6b55-418e-9272-2917186a55a0-111492882919653400"
}</msg>
<status status="PASS" starttime="20231129 08:26:21.988" endtime="20231129 08:26:22.489"/>
</kw>
<msg timestamp="20231129 08:26:22.489" level="INFO">${result} = {
    "Bucket": "erasure",
    "Key": "ozone-test-5290287418/multipartKey1",
    "UploadId": "42d9e508-6b55-418e-9272-2917186a55a0-111492882919653400"
}</msg>
<status status="PASS" starttime="20231129 08:26:21.988" endtime="20231129 08:26:22.489"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:22.491" level="INFO">Running command 'echo '{
    "Bucket": "erasure",
    "Key": "ozone-test-5290287418/multipartKey1",
    "UploadId": "42d9e508-6b55-418e-9272-2917186a55a0-111492882919653400"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:22.518" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:22.518" level="INFO">${output} = 42d9e508-6b55-418e-9272-2917186a55a0-111492882919653400</msg>
<status status="PASS" starttime="20231129 08:26:22.490" endtime="20231129 08:26:22.518"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:22.519" level="INFO">42d9e508-6b55-418e-9272-2917186a55a0-111492882919653400</msg>
<status status="PASS" starttime="20231129 08:26:22.518" endtime="20231129 08:26:22.519"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:22.519" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:22.519" endtime="20231129 08:26:22.519"/>
</kw>
<msg timestamp="20231129 08:26:22.520" level="INFO">${uploadID} = 42d9e508-6b55-418e-9272-2917186a55a0-111492882919653400</msg>
<status status="PASS" starttime="20231129 08:26:22.489" endtime="20231129 08:26:22.520"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:26:22.520" endtime="20231129 08:26:22.520"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:26:22.520" endtime="20231129 08:26:22.521"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:26:22.521" endtime="20231129 08:26:22.521"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>5</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>5</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:22.524" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:22.543" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:22.543" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:26:22.523" endtime="20231129 08:26:22.543"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:22.543" level="INFO"/>
<status status="PASS" starttime="20231129 08:26:22.543" endtime="20231129 08:26:22.543"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:22.544" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:22.544" endtime="20231129 08:26:22.544"/>
</kw>
<status status="PASS" starttime="20231129 08:26:22.523" endtime="20231129 08:26:22.544"/>
</kw>
<msg timestamp="20231129 08:26:22.544" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:22.522" endtime="20231129 08:26:22.544"/>
</kw>
<status status="PASS" starttime="20231129 08:26:22.522" endtime="20231129 08:26:22.544"/>
</kw>
<status status="PASS" starttime="20231129 08:26:22.521" endtime="20231129 08:26:22.545"/>
</kw>
<status status="PASS" starttime="20231129 08:26:22.521" endtime="20231129 08:26:22.545"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 --part-number 1 --body /tmp/part1 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:22.548" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket erasure --key ozone-test-5290287418/multipartKey1 --part-number 1 --body /tmp/part1 --upload-id 42d9e508-6b55-418e-9272-2917186a55a0-111492882919653400 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:23.224" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:23.224" level="INFO">${output} = {
    "ETag": "/s3v/erasure/ozone-test-5290287418/multipartKey1-42d9e508-6b55-418e-9272-2917186a55a0-111492882919653400-1"
}</msg>
<status status="PASS" starttime="20231129 08:26:22.546" endtime="20231129 08:26:23.224"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:23.225" level="INFO">{
    "ETag": "/s3v/erasure/ozone-test-5290287418/multipartKey1-42d9e508-6b55-418e-9272-2917186a55a0-111492882919653400-1"
}</msg>
<status status="PASS" starttime="20231129 08:26:23.224" endtime="20231129 08:26:23.225"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:23.225" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:23.225" endtime="20231129 08:26:23.225"/>
</kw>
<status status="PASS" starttime="20231129 08:26:22.546" endtime="20231129 08:26:23.225"/>
</kw>
<msg timestamp="20231129 08:26:23.225" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:22.546" endtime="20231129 08:26:23.226"/>
</kw>
<msg timestamp="20231129 08:26:23.226" level="INFO">${output} = {
    "ETag": "/s3v/erasure/ozone-test-5290287418/multipartKey1-42d9e508-6b55-418e-9272-2917186a55a0-111492882919653400-1"
}</msg>
<status status="PASS" starttime="20231129 08:26:22.545" endtime="20231129 08:26:23.226"/>
</kw>
<msg timestamp="20231129 08:26:23.226" level="INFO">${result} = {
    "ETag": "/s3v/erasure/ozone-test-5290287418/multipartKey1-42d9e508-6b55-418e-9272-2917186a55a0-111492882919653400-1"
}</msg>
<status status="PASS" starttime="20231129 08:26:22.545" endtime="20231129 08:26:23.226"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:23.228" level="INFO">Running command 'echo '{
    "ETag": "/s3v/erasure/ozone-test-5290287418/multipartKey1-42d9e508-6b55-418e-9272-2917186a55a0-111492882919653400-1"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:23.269" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:23.270" level="INFO">${output} = /s3v/erasure/ozone-test-5290287418/multipartKey1-42d9e508-6b55-418e-9272-2917186a55a0-111492882919653400-1</msg>
<status status="PASS" starttime="20231129 08:26:23.227" endtime="20231129 08:26:23.270"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:23.271" level="INFO">/s3v/erasure/ozone-test-5290287418/multipartKey1-42d9e508-6b55-418e-9272-2917186a55a0-111492882919653400-1</msg>
<status status="PASS" starttime="20231129 08:26:23.270" endtime="20231129 08:26:23.271"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:23.272" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:23.271" endtime="20231129 08:26:23.272"/>
</kw>
<msg timestamp="20231129 08:26:23.272" level="INFO">${eTag1} = /s3v/erasure/ozone-test-5290287418/multipartKey1-42d9e508-6b55-418e-9272-2917186a55a0-111492882919653400-1</msg>
<status status="PASS" starttime="20231129 08:26:23.226" endtime="20231129 08:26:23.272"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:26:23.272" endtime="20231129 08:26:23.273"/>
</kw>
<kw name="Execute" library="os">
<arg>echo "Part2" &gt; /tmp/part2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:23.276" level="INFO">Running command 'echo "Part2" &gt; /tmp/part2'.</msg>
<msg timestamp="20231129 08:26:23.278" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:23.278" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:26:23.275" endtime="20231129 08:26:23.278"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:23.278" level="INFO"/>
<status status="PASS" starttime="20231129 08:26:23.278" endtime="20231129 08:26:23.279"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:23.279" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:23.279" endtime="20231129 08:26:23.279"/>
</kw>
<status status="PASS" starttime="20231129 08:26:23.274" endtime="20231129 08:26:23.279"/>
</kw>
<msg timestamp="20231129 08:26:23.279" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:23.273" endtime="20231129 08:26:23.279"/>
</kw>
<status status="PASS" starttime="20231129 08:26:23.273" endtime="20231129 08:26:23.279"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 --part-number 2 --body /tmp/part2 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:23.282" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket erasure --key ozone-test-5290287418/multipartKey1 --part-number 2 --body /tmp/part2 --upload-id 42d9e508-6b55-418e-9272-2917186a55a0-111492882919653400 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:23.798" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:23.798" level="INFO">${output} = {
    "ETag": "/s3v/erasure/ozone-test-5290287418/multipartKey1-42d9e508-6b55-418e-9272-2917186a55a0-111492882919653400-2"
}</msg>
<status status="PASS" starttime="20231129 08:26:23.281" endtime="20231129 08:26:23.798"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:23.799" level="INFO">{
    "ETag": "/s3v/erasure/ozone-test-5290287418/multipartKey1-42d9e508-6b55-418e-9272-2917186a55a0-111492882919653400-2"
}</msg>
<status status="PASS" starttime="20231129 08:26:23.799" endtime="20231129 08:26:23.799"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:23.800" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:23.799" endtime="20231129 08:26:23.800"/>
</kw>
<status status="PASS" starttime="20231129 08:26:23.281" endtime="20231129 08:26:23.800"/>
</kw>
<msg timestamp="20231129 08:26:23.800" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:23.280" endtime="20231129 08:26:23.800"/>
</kw>
<msg timestamp="20231129 08:26:23.800" level="INFO">${output} = {
    "ETag": "/s3v/erasure/ozone-test-5290287418/multipartKey1-42d9e508-6b55-418e-9272-2917186a55a0-111492882919653400-2"
}</msg>
<status status="PASS" starttime="20231129 08:26:23.280" endtime="20231129 08:26:23.800"/>
</kw>
<msg timestamp="20231129 08:26:23.800" level="INFO">${result} = {
    "ETag": "/s3v/erasure/ozone-test-5290287418/multipartKey1-42d9e508-6b55-418e-9272-2917186a55a0-111492882919653400-2"
}</msg>
<status status="PASS" starttime="20231129 08:26:23.280" endtime="20231129 08:26:23.800"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:23.802" level="INFO">Running command 'echo '{
    "ETag": "/s3v/erasure/ozone-test-5290287418/multipartKey1-42d9e508-6b55-418e-9272-2917186a55a0-111492882919653400-2"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:23.828" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:23.828" level="INFO">${output} = /s3v/erasure/ozone-test-5290287418/multipartKey1-42d9e508-6b55-418e-9272-2917186a55a0-111492882919653400-2</msg>
<status status="PASS" starttime="20231129 08:26:23.801" endtime="20231129 08:26:23.829"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:23.829" level="INFO">/s3v/erasure/ozone-test-5290287418/multipartKey1-42d9e508-6b55-418e-9272-2917186a55a0-111492882919653400-2</msg>
<status status="PASS" starttime="20231129 08:26:23.829" endtime="20231129 08:26:23.829"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:23.830" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:23.829" endtime="20231129 08:26:23.830"/>
</kw>
<msg timestamp="20231129 08:26:23.830" level="INFO">${eTag2} = /s3v/erasure/ozone-test-5290287418/multipartKey1-42d9e508-6b55-418e-9272-2917186a55a0-111492882919653400-2</msg>
<status status="PASS" starttime="20231129 08:26:23.801" endtime="20231129 08:26:23.830"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:26:23.830" endtime="20231129 08:26:23.831"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=${eTag2},PartNumber=2}]'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:23.834" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 42d9e508-6b55-418e-9272-2917186a55a0-111492882919653400 --bucket erasure --key ozone-test-5290287418/multipartKey1 --multipart-upload 'Parts=[{ETag=/s3v/erasure/ozone-test-5290287418/multipartKey1-42d9e508-6b55-418e-9272-2917186a55a0-111492882919653400-1,PartNumber=1},{ETag=/s3v/erasure/ozone-test-5290287418/multipartKey1-42d9e508-6b55-418e-9272-2917186a55a0-111492882919653400-2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:24.296" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:24.296" level="INFO">${output} = {
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "ozone-test-5290287418/multipartKey1",
    "ETag": "\"0480618fae95d49343d9abf29f9a0474-2\""
}</msg>
<status status="PASS" starttime="20231129 08:26:23.833" endtime="20231129 08:26:24.296"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:24.297" level="INFO">{
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "ozone-test-5290287418/multipartKey1",
    "ETag": "\"0480618fae95d49343d9abf29f9a0474-2\""
}</msg>
<status status="PASS" starttime="20231129 08:26:24.296" endtime="20231129 08:26:24.297"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:24.297" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:24.297" endtime="20231129 08:26:24.298"/>
</kw>
<status status="PASS" starttime="20231129 08:26:23.832" endtime="20231129 08:26:24.298"/>
</kw>
<msg timestamp="20231129 08:26:24.298" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:23.832" endtime="20231129 08:26:24.298"/>
</kw>
<msg timestamp="20231129 08:26:24.298" level="INFO">${output} = {
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "ozone-test-5290287418/multipartKey1",
    "ETag": "\"0480618fae95d49343d9abf29f9a0474-2\""
}</msg>
<status status="PASS" starttime="20231129 08:26:23.831" endtime="20231129 08:26:24.298"/>
</kw>
<msg timestamp="20231129 08:26:24.298" level="INFO">${result} = {
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "ozone-test-5290287418/multipartKey1",
    "ETag": "\"0480618fae95d49343d9abf29f9a0474-2\""
}</msg>
<status status="PASS" starttime="20231129 08:26:23.831" endtime="20231129 08:26:24.298"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:26:24.298" endtime="20231129 08:26:24.299"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:26:24.299" endtime="20231129 08:26:24.299"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:26:24.299" endtime="20231129 08:26:24.300"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 /tmp/${PREFIX}-multipartKey1.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:24.303" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-5290287418/multipartKey1 /tmp/ozone-test-5290287418-multipartKey1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:24.851" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:24.851" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:26:24 GMT",
    "ContentLength": 5242886,
    "ETag": "\"0480618fae95d49343d9abf29f9a0474-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20231129 08:26:24.302" endtime="20231129 08:26:24.851"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:24.852" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:26:24 GMT",
    "ContentLength": 5242886,
    "ETag": "\"0480618fae95d49343d9abf29f9a0474-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 29 Nov 2023 08:26:24 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231129 08:26:24.851" endtime="20231129 08:26:24.852"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:24.853" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:24.852" endtime="20231129 08:26:24.853"/>
</kw>
<status status="PASS" starttime="20231129 08:26:24.301" endtime="20231129 08:26:24.853"/>
</kw>
<msg timestamp="20231129 08:26:24.853" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:24.301" endtime="20231129 08:26:24.853"/>
</kw>
<msg timestamp="20231129 08:26:24.853" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:26:24 GMT",
    "ContentLength": 5242886,
    "ETag": "\"0480618fae95d49343d9abf29f9a0474-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20231129 08:26:24.300" endtime="20231129 08:26:24.853"/>
</kw>
<msg timestamp="20231129 08:26:24.854" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:26:24 GMT",
    "ContentLength": 5242886,
    "ETag": "\"0480618fae95d49343d9abf29f9a0474-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20231129 08:26:24.300" endtime="20231129 08:26:24.854"/>
</kw>
<kw name="Execute" library="os">
<arg>cat /tmp/part1 /tmp/part2 &gt; /tmp/${PREFIX}-multipartKey1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:24.857" level="INFO">Running command 'cat /tmp/part1 /tmp/part2 &gt; /tmp/ozone-test-5290287418-multipartKey1'.</msg>
<msg timestamp="20231129 08:26:24.864" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:24.864" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:26:24.856" endtime="20231129 08:26:24.864"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:24.865" level="INFO"/>
<status status="PASS" starttime="20231129 08:26:24.864" endtime="20231129 08:26:24.865"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:24.866" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:24.865" endtime="20231129 08:26:24.866"/>
</kw>
<status status="PASS" starttime="20231129 08:26:24.855" endtime="20231129 08:26:24.866"/>
</kw>
<msg timestamp="20231129 08:26:24.866" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:24.855" endtime="20231129 08:26:24.866"/>
</kw>
<status status="PASS" starttime="20231129 08:26:24.854" endtime="20231129 08:26:24.866"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/${PREFIX}-multipartKey1</arg>
<arg>/tmp/${PREFIX}-multipartKey1.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:24.870" level="INFO">Running command 'md5sum /tmp/ozone-test-5290287418-multipartKey1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:24.882" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:24.882" level="INFO">${output} = 60cc82859d7b71a28b37989f569c0569</msg>
<status status="PASS" starttime="20231129 08:26:24.869" endtime="20231129 08:26:24.882"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:24.883" level="INFO">60cc82859d7b71a28b37989f569c0569</msg>
<status status="PASS" starttime="20231129 08:26:24.882" endtime="20231129 08:26:24.883"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:24.884" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:24.883" endtime="20231129 08:26:24.884"/>
</kw>
<status status="PASS" starttime="20231129 08:26:24.868" endtime="20231129 08:26:24.884"/>
</kw>
<msg timestamp="20231129 08:26:24.884" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:24.868" endtime="20231129 08:26:24.884"/>
</kw>
<msg timestamp="20231129 08:26:24.884" level="INFO">${checksumbefore} = 60cc82859d7b71a28b37989f569c0569</msg>
<status status="PASS" starttime="20231129 08:26:24.867" endtime="20231129 08:26:24.884"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:24.887" level="INFO">Running command 'md5sum /tmp/ozone-test-5290287418-multipartKey1.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:24.898" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:24.899" level="INFO">${output} = 60cc82859d7b71a28b37989f569c0569</msg>
<status status="PASS" starttime="20231129 08:26:24.886" endtime="20231129 08:26:24.899"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:24.900" level="INFO">60cc82859d7b71a28b37989f569c0569</msg>
<status status="PASS" starttime="20231129 08:26:24.899" endtime="20231129 08:26:24.900"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:24.900" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:24.900" endtime="20231129 08:26:24.901"/>
</kw>
<status status="PASS" starttime="20231129 08:26:24.885" endtime="20231129 08:26:24.901"/>
</kw>
<msg timestamp="20231129 08:26:24.901" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:24.885" endtime="20231129 08:26:24.901"/>
</kw>
<msg timestamp="20231129 08:26:24.901" level="INFO">${checksumafter} = 60cc82859d7b71a28b37989f569c0569</msg>
<status status="PASS" starttime="20231129 08:26:24.884" endtime="20231129 08:26:24.901"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231129 08:26:24.901" endtime="20231129 08:26:24.902"/>
</kw>
<status status="PASS" starttime="20231129 08:26:24.867" endtime="20231129 08:26:24.902"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 --part-number 1 /tmp/${PREFIX}-multipartKey1-part1.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:24.907" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-5290287418/multipartKey1 --part-number 1 /tmp/ozone-test-5290287418-multipartKey1-part1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:25.425" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:25.425" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:26:24 GMT",
    "ContentLength": 5242880,
    "ETag": "\"0480618fae95d49343d9abf29f9a0474-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20231129 08:26:24.905" endtime="20231129 08:26:25.425"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:25.426" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:26:24 GMT",
    "ContentLength": 5242880,
    "ETag": "\"0480618fae95d49343d9abf29f9a0474-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 29 Nov 2023 08:26:25 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231129 08:26:25.426" endtime="20231129 08:26:25.426"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:25.427" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:25.427" endtime="20231129 08:26:25.427"/>
</kw>
<status status="PASS" starttime="20231129 08:26:24.904" endtime="20231129 08:26:25.427"/>
</kw>
<msg timestamp="20231129 08:26:25.427" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:24.904" endtime="20231129 08:26:25.427"/>
</kw>
<msg timestamp="20231129 08:26:25.427" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:26:24 GMT",
    "ContentLength": 5242880,
    "ETag": "\"0480618fae95d49343d9abf29f9a0474-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20231129 08:26:24.903" endtime="20231129 08:26:25.427"/>
</kw>
<msg timestamp="20231129 08:26:25.428" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:26:24 GMT",
    "ContentLength": 5242880,
    "ETag": "\"0480618fae95d49343d9abf29f9a0474-2\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20231129 08:26:24.902" endtime="20231129 08:26:25.428"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part1</arg>
<arg>/tmp/${PREFIX}-multipartKey1-part1.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:25.431" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:25.441" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:25.441" level="INFO">${output} = eab4fe3e6eb7fe51a71f012ea4c1c5fd</msg>
<status status="PASS" starttime="20231129 08:26:25.429" endtime="20231129 08:26:25.441"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:25.442" level="INFO">eab4fe3e6eb7fe51a71f012ea4c1c5fd</msg>
<status status="PASS" starttime="20231129 08:26:25.442" endtime="20231129 08:26:25.442"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:25.443" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:25.442" endtime="20231129 08:26:25.443"/>
</kw>
<status status="PASS" starttime="20231129 08:26:25.429" endtime="20231129 08:26:25.443"/>
</kw>
<msg timestamp="20231129 08:26:25.443" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:25.429" endtime="20231129 08:26:25.443"/>
</kw>
<msg timestamp="20231129 08:26:25.443" level="INFO">${checksumbefore} = eab4fe3e6eb7fe51a71f012ea4c1c5fd</msg>
<status status="PASS" starttime="20231129 08:26:25.428" endtime="20231129 08:26:25.443"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:25.446" level="INFO">Running command 'md5sum /tmp/ozone-test-5290287418-multipartKey1-part1.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:25.456" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:25.456" level="INFO">${output} = eab4fe3e6eb7fe51a71f012ea4c1c5fd</msg>
<status status="PASS" starttime="20231129 08:26:25.444" endtime="20231129 08:26:25.456"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:25.457" level="INFO">eab4fe3e6eb7fe51a71f012ea4c1c5fd</msg>
<status status="PASS" starttime="20231129 08:26:25.456" endtime="20231129 08:26:25.457"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:25.457" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:25.457" endtime="20231129 08:26:25.457"/>
</kw>
<status status="PASS" starttime="20231129 08:26:25.444" endtime="20231129 08:26:25.458"/>
</kw>
<msg timestamp="20231129 08:26:25.458" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:25.444" endtime="20231129 08:26:25.458"/>
</kw>
<msg timestamp="20231129 08:26:25.458" level="INFO">${checksumafter} = eab4fe3e6eb7fe51a71f012ea4c1c5fd</msg>
<status status="PASS" starttime="20231129 08:26:25.443" endtime="20231129 08:26:25.458"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231129 08:26:25.458" endtime="20231129 08:26:25.458"/>
</kw>
<status status="PASS" starttime="20231129 08:26:25.428" endtime="20231129 08:26:25.458"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey1 --part-number 2 /tmp/${PREFIX}-multipartKey1-part2.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:25.461" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-5290287418/multipartKey1 --part-number 2 /tmp/ozone-test-5290287418-multipartKey1-part2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:25.923" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:25.923" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:26:24 GMT",
    "ContentLength": 6,
    "ETag": "\"0480618fae95d49343d9abf29f9a0474-2\"",
    "CacheControl": "no-cache",
    "C...</msg>
<status status="PASS" starttime="20231129 08:26:25.460" endtime="20231129 08:26:25.924"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:25.924" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:26:24 GMT",
    "ContentLength": 6,
    "ETag": "\"0480618fae95d49343d9abf29f9a0474-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 29 Nov 2023 08:26:25 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231129 08:26:25.924" endtime="20231129 08:26:25.925"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:25.925" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:25.925" endtime="20231129 08:26:25.925"/>
</kw>
<status status="PASS" starttime="20231129 08:26:25.460" endtime="20231129 08:26:25.925"/>
</kw>
<msg timestamp="20231129 08:26:25.925" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:25.459" endtime="20231129 08:26:25.925"/>
</kw>
<msg timestamp="20231129 08:26:25.926" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:26:24 GMT",
    "ContentLength": 6,
    "ETag": "\"0480618fae95d49343d9abf29f9a0474-2\"",
    "CacheControl": "no-cache",
    "C...</msg>
<status status="PASS" starttime="20231129 08:26:25.459" endtime="20231129 08:26:25.926"/>
</kw>
<msg timestamp="20231129 08:26:25.926" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:26:24 GMT",
    "ContentLength": 6,
    "ETag": "\"0480618fae95d49343d9abf29f9a0474-2\"",
    "CacheControl": "no-cache",
    "C...</msg>
<status status="PASS" starttime="20231129 08:26:25.459" endtime="20231129 08:26:25.926"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part2</arg>
<arg>/tmp/${PREFIX}-multipartKey1-part2.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:25.930" level="INFO">Running command 'md5sum /tmp/part2 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:25.932" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:25.932" level="INFO">${output} = 9e6cc3c0311e8eb9548e860d8caf6734</msg>
<status status="PASS" starttime="20231129 08:26:25.929" endtime="20231129 08:26:25.932"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:25.933" level="INFO">9e6cc3c0311e8eb9548e860d8caf6734</msg>
<status status="PASS" starttime="20231129 08:26:25.932" endtime="20231129 08:26:25.933"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:25.933" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:25.933" endtime="20231129 08:26:25.933"/>
</kw>
<status status="PASS" starttime="20231129 08:26:25.927" endtime="20231129 08:26:25.933"/>
</kw>
<msg timestamp="20231129 08:26:25.933" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:25.927" endtime="20231129 08:26:25.933"/>
</kw>
<msg timestamp="20231129 08:26:25.934" level="INFO">${checksumbefore} = 9e6cc3c0311e8eb9548e860d8caf6734</msg>
<status status="PASS" starttime="20231129 08:26:25.927" endtime="20231129 08:26:25.934"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:25.936" level="INFO">Running command 'md5sum /tmp/ozone-test-5290287418-multipartKey1-part2.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:25.938" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:25.938" level="INFO">${output} = 9e6cc3c0311e8eb9548e860d8caf6734</msg>
<status status="PASS" starttime="20231129 08:26:25.935" endtime="20231129 08:26:25.938"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:25.938" level="INFO">9e6cc3c0311e8eb9548e860d8caf6734</msg>
<status status="PASS" starttime="20231129 08:26:25.938" endtime="20231129 08:26:25.938"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:25.939" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:25.939" endtime="20231129 08:26:25.939"/>
</kw>
<status status="PASS" starttime="20231129 08:26:25.934" endtime="20231129 08:26:25.939"/>
</kw>
<msg timestamp="20231129 08:26:25.939" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:25.934" endtime="20231129 08:26:25.939"/>
</kw>
<msg timestamp="20231129 08:26:25.939" level="INFO">${checksumafter} = 9e6cc3c0311e8eb9548e860d8caf6734</msg>
<status status="PASS" starttime="20231129 08:26:25.934" endtime="20231129 08:26:25.939"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231129 08:26:25.939" endtime="20231129 08:26:25.940"/>
</kw>
<status status="PASS" starttime="20231129 08:26:25.926" endtime="20231129 08:26:25.940"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:26:21.984" endtime="20231129 08:26:25.940"/>
</test>
<test id="s1-s1-s8-t4" name="Test Multipart Upload Complete Entity too small" line="124">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231129 08:26:25.942" level="INFO">${randStr} = 4340299397</msg>
<status status="PASS" starttime="20231129 08:26:25.942" endtime="20231129 08:26:25.942"/>
</kw>
<msg timestamp="20231129 08:26:25.942" level="INFO">${random} = ozone-test-4340299397</msg>
<status status="PASS" starttime="20231129 08:26:25.941" endtime="20231129 08:26:25.942"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231129 08:26:25.943" level="INFO">${PREFIX} = ozone-test-4340299397</msg>
<status status="PASS" starttime="20231129 08:26:25.942" endtime="20231129 08:26:25.943"/>
</kw>
<status status="PASS" starttime="20231129 08:26:25.941" endtime="20231129 08:26:25.943"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey2</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:25.945" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket erasure --key ozone-test-4340299397/multipartKey2 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:26.395" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:26.395" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-4340299397/multipartKey2",
    "UploadId": "19d86433-5c67-4d3b-ad43-7651f0342243-111492883175702555"
}</msg>
<status status="PASS" starttime="20231129 08:26:25.944" endtime="20231129 08:26:26.395"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:26.396" level="INFO">{
    "Bucket": "erasure",
    "Key": "ozone-test-4340299397/multipartKey2",
    "UploadId": "19d86433-5c67-4d3b-ad43-7651f0342243-111492883175702555"
}</msg>
<status status="PASS" starttime="20231129 08:26:26.395" endtime="20231129 08:26:26.396"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:26.396" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:26.396" endtime="20231129 08:26:26.397"/>
</kw>
<status status="PASS" starttime="20231129 08:26:25.944" endtime="20231129 08:26:26.397"/>
</kw>
<msg timestamp="20231129 08:26:26.397" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:25.944" endtime="20231129 08:26:26.397"/>
</kw>
<msg timestamp="20231129 08:26:26.397" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-4340299397/multipartKey2",
    "UploadId": "19d86433-5c67-4d3b-ad43-7651f0342243-111492883175702555"
}</msg>
<status status="PASS" starttime="20231129 08:26:25.943" endtime="20231129 08:26:26.397"/>
</kw>
<msg timestamp="20231129 08:26:26.397" level="INFO">${result} = {
    "Bucket": "erasure",
    "Key": "ozone-test-4340299397/multipartKey2",
    "UploadId": "19d86433-5c67-4d3b-ad43-7651f0342243-111492883175702555"
}</msg>
<status status="PASS" starttime="20231129 08:26:25.943" endtime="20231129 08:26:26.397"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:26.400" level="INFO">Running command 'echo '{
    "Bucket": "erasure",
    "Key": "ozone-test-4340299397/multipartKey2",
    "UploadId": "19d86433-5c67-4d3b-ad43-7651f0342243-111492883175702555"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:26.426" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:26.426" level="INFO">${output} = 19d86433-5c67-4d3b-ad43-7651f0342243-111492883175702555</msg>
<status status="PASS" starttime="20231129 08:26:26.399" endtime="20231129 08:26:26.426"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:26.427" level="INFO">19d86433-5c67-4d3b-ad43-7651f0342243-111492883175702555</msg>
<status status="PASS" starttime="20231129 08:26:26.427" endtime="20231129 08:26:26.427"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:26.428" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:26.427" endtime="20231129 08:26:26.428"/>
</kw>
<msg timestamp="20231129 08:26:26.428" level="INFO">${uploadID} = 19d86433-5c67-4d3b-ad43-7651f0342243-111492883175702555</msg>
<status status="PASS" starttime="20231129 08:26:26.398" endtime="20231129 08:26:26.428"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:26:26.428" endtime="20231129 08:26:26.428"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:26:26.428" endtime="20231129 08:26:26.429"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:26:26.429" endtime="20231129 08:26:26.429"/>
</kw>
<kw name="Execute" library="os">
<arg>echo "Part1" &gt; /tmp/part1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:26.432" level="INFO">Running command 'echo "Part1" &gt; /tmp/part1'.</msg>
<msg timestamp="20231129 08:26:26.434" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:26.434" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:26:26.431" endtime="20231129 08:26:26.434"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:26.434" level="INFO"/>
<status status="PASS" starttime="20231129 08:26:26.434" endtime="20231129 08:26:26.434"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:26.435" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:26.434" endtime="20231129 08:26:26.435"/>
</kw>
<status status="PASS" starttime="20231129 08:26:26.430" endtime="20231129 08:26:26.435"/>
</kw>
<msg timestamp="20231129 08:26:26.435" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:26.430" endtime="20231129 08:26:26.435"/>
</kw>
<status status="PASS" starttime="20231129 08:26:26.429" endtime="20231129 08:26:26.435"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey2 --part-number 1 --body /tmp/part1 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:26.438" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket erasure --key ozone-test-4340299397/multipartKey2 --part-number 1 --body /tmp/part1 --upload-id 19d86433-5c67-4d3b-ad43-7651f0342243-111492883175702555 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:26.941" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:26.941" level="INFO">${output} = {
    "ETag": "/s3v/erasure/ozone-test-4340299397/multipartKey2-19d86433-5c67-4d3b-ad43-7651f0342243-111492883175702555-1"
}</msg>
<status status="PASS" starttime="20231129 08:26:26.437" endtime="20231129 08:26:26.941"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:26.942" level="INFO">{
    "ETag": "/s3v/erasure/ozone-test-4340299397/multipartKey2-19d86433-5c67-4d3b-ad43-7651f0342243-111492883175702555-1"
}</msg>
<status status="PASS" starttime="20231129 08:26:26.942" endtime="20231129 08:26:26.942"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:26.943" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:26.943" endtime="20231129 08:26:26.943"/>
</kw>
<status status="PASS" starttime="20231129 08:26:26.437" endtime="20231129 08:26:26.943"/>
</kw>
<msg timestamp="20231129 08:26:26.943" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:26.436" endtime="20231129 08:26:26.943"/>
</kw>
<msg timestamp="20231129 08:26:26.943" level="INFO">${output} = {
    "ETag": "/s3v/erasure/ozone-test-4340299397/multipartKey2-19d86433-5c67-4d3b-ad43-7651f0342243-111492883175702555-1"
}</msg>
<status status="PASS" starttime="20231129 08:26:26.436" endtime="20231129 08:26:26.943"/>
</kw>
<msg timestamp="20231129 08:26:26.944" level="INFO">${result} = {
    "ETag": "/s3v/erasure/ozone-test-4340299397/multipartKey2-19d86433-5c67-4d3b-ad43-7651f0342243-111492883175702555-1"
}</msg>
<status status="PASS" starttime="20231129 08:26:26.435" endtime="20231129 08:26:26.944"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:26.946" level="INFO">Running command 'echo '{
    "ETag": "/s3v/erasure/ozone-test-4340299397/multipartKey2-19d86433-5c67-4d3b-ad43-7651f0342243-111492883175702555-1"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:26.973" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:26.973" level="INFO">${output} = /s3v/erasure/ozone-test-4340299397/multipartKey2-19d86433-5c67-4d3b-ad43-7651f0342243-111492883175702555-1</msg>
<status status="PASS" starttime="20231129 08:26:26.944" endtime="20231129 08:26:26.973"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:26.973" level="INFO">/s3v/erasure/ozone-test-4340299397/multipartKey2-19d86433-5c67-4d3b-ad43-7651f0342243-111492883175702555-1</msg>
<status status="PASS" starttime="20231129 08:26:26.973" endtime="20231129 08:26:26.974"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:26.974" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:26.974" endtime="20231129 08:26:26.974"/>
</kw>
<msg timestamp="20231129 08:26:26.974" level="INFO">${eTag1} = /s3v/erasure/ozone-test-4340299397/multipartKey2-19d86433-5c67-4d3b-ad43-7651f0342243-111492883175702555-1</msg>
<status status="PASS" starttime="20231129 08:26:26.944" endtime="20231129 08:26:26.974"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:26:26.974" endtime="20231129 08:26:26.975"/>
</kw>
<kw name="Execute" library="os">
<arg>echo "Part2" &gt; /tmp/part2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:26.977" level="INFO">Running command 'echo "Part2" &gt; /tmp/part2'.</msg>
<msg timestamp="20231129 08:26:26.978" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:26.978" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:26:26.976" endtime="20231129 08:26:26.978"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:26.979" level="INFO"/>
<status status="PASS" starttime="20231129 08:26:26.979" endtime="20231129 08:26:26.979"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:26.979" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:26.979" endtime="20231129 08:26:26.980"/>
</kw>
<status status="PASS" starttime="20231129 08:26:26.975" endtime="20231129 08:26:26.980"/>
</kw>
<msg timestamp="20231129 08:26:26.980" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:26.975" endtime="20231129 08:26:26.980"/>
</kw>
<status status="PASS" starttime="20231129 08:26:26.975" endtime="20231129 08:26:26.980"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey2 --part-number 2 --body /tmp/part2 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:26.983" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket erasure --key ozone-test-4340299397/multipartKey2 --part-number 2 --body /tmp/part2 --upload-id 19d86433-5c67-4d3b-ad43-7651f0342243-111492883175702555 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:27.479" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:27.479" level="INFO">${output} = {
    "ETag": "/s3v/erasure/ozone-test-4340299397/multipartKey2-19d86433-5c67-4d3b-ad43-7651f0342243-111492883175702555-2"
}</msg>
<status status="PASS" starttime="20231129 08:26:26.982" endtime="20231129 08:26:27.479"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:27.480" level="INFO">{
    "ETag": "/s3v/erasure/ozone-test-4340299397/multipartKey2-19d86433-5c67-4d3b-ad43-7651f0342243-111492883175702555-2"
}</msg>
<status status="PASS" starttime="20231129 08:26:27.479" endtime="20231129 08:26:27.480"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:27.480" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:27.480" endtime="20231129 08:26:27.481"/>
</kw>
<status status="PASS" starttime="20231129 08:26:26.981" endtime="20231129 08:26:27.481"/>
</kw>
<msg timestamp="20231129 08:26:27.481" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:26.981" endtime="20231129 08:26:27.481"/>
</kw>
<msg timestamp="20231129 08:26:27.481" level="INFO">${output} = {
    "ETag": "/s3v/erasure/ozone-test-4340299397/multipartKey2-19d86433-5c67-4d3b-ad43-7651f0342243-111492883175702555-2"
}</msg>
<status status="PASS" starttime="20231129 08:26:26.981" endtime="20231129 08:26:27.481"/>
</kw>
<msg timestamp="20231129 08:26:27.481" level="INFO">${result} = {
    "ETag": "/s3v/erasure/ozone-test-4340299397/multipartKey2-19d86433-5c67-4d3b-ad43-7651f0342243-111492883175702555-2"
}</msg>
<status status="PASS" starttime="20231129 08:26:26.980" endtime="20231129 08:26:27.481"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:27.483" level="INFO">Running command 'echo '{
    "ETag": "/s3v/erasure/ozone-test-4340299397/multipartKey2-19d86433-5c67-4d3b-ad43-7651f0342243-111492883175702555-2"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:27.509" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:27.509" level="INFO">${output} = /s3v/erasure/ozone-test-4340299397/multipartKey2-19d86433-5c67-4d3b-ad43-7651f0342243-111492883175702555-2</msg>
<status status="PASS" starttime="20231129 08:26:27.482" endtime="20231129 08:26:27.509"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:27.510" level="INFO">/s3v/erasure/ozone-test-4340299397/multipartKey2-19d86433-5c67-4d3b-ad43-7651f0342243-111492883175702555-2</msg>
<status status="PASS" starttime="20231129 08:26:27.510" endtime="20231129 08:26:27.510"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:27.511" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:27.510" endtime="20231129 08:26:27.511"/>
</kw>
<msg timestamp="20231129 08:26:27.511" level="INFO">${eTag2} = /s3v/erasure/ozone-test-4340299397/multipartKey2-19d86433-5c67-4d3b-ad43-7651f0342243-111492883175702555-2</msg>
<status status="PASS" starttime="20231129 08:26:27.481" endtime="20231129 08:26:27.511"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:26:27.511" endtime="20231129 08:26:27.511"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey2 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=${eTag2},PartNumber=2}]'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:27.514" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 19d86433-5c67-4d3b-ad43-7651f0342243-111492883175702555 --bucket erasure --key ozone-test-4340299397/multipartKey2 --multipart-upload 'Parts=[{ETag=/s3v/erasure/ozone-test-4340299397/multipartKey2-19d86433-5c67-4d3b-ad43-7651f0342243-111492883175702555-1,PartNumber=1},{ETag=/s3v/erasure/ozone-test-4340299397/multipartKey2-19d86433-5c67-4d3b-ad43-7651f0342243-111492883175702555-2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:27.966" level="INFO">${rc} = 255</msg>
<msg timestamp="20231129 08:26:27.966" level="INFO">${output} = 
An error occurred (EntityTooSmall) when calling the CompleteMultipartUpload operation: Your proposed upload is smaller than the minimum allowed object size. Each part must be at least 5 MB in size, e...</msg>
<status status="PASS" starttime="20231129 08:26:27.513" endtime="20231129 08:26:27.966"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:27.967" level="INFO">
An error occurred (EntityTooSmall) when calling the CompleteMultipartUpload operation: Your proposed upload is smaller than the minimum allowed object size. Each part must be at least 5 MB in size, except the last part.</msg>
<status status="PASS" starttime="20231129 08:26:27.966" endtime="20231129 08:26:27.967"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:27.967" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:27.967" endtime="20231129 08:26:27.967"/>
</kw>
<msg timestamp="20231129 08:26:27.968" level="INFO">${output} = 
An error occurred (EntityTooSmall) when calling the CompleteMultipartUpload operation: Your proposed upload is smaller than the minimum allowed object size. Each part must be at least 5 MB in size, e...</msg>
<status status="PASS" starttime="20231129 08:26:27.512" endtime="20231129 08:26:27.968"/>
</kw>
<msg timestamp="20231129 08:26:27.968" level="INFO">${result} = 
An error occurred (EntityTooSmall) when calling the CompleteMultipartUpload operation: Your proposed upload is smaller than the minimum allowed object size. Each part must be at least 5 MB in size, e...</msg>
<status status="PASS" starttime="20231129 08:26:27.512" endtime="20231129 08:26:27.968"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>EntityTooSmall</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:26:27.968" endtime="20231129 08:26:27.968"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:26:25.941" endtime="20231129 08:26:27.968"/>
</test>
<test id="s1-s1-s8-t5" name="Test Multipart Upload Complete Invalid part errors and complete mpu with few parts" line="147">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231129 08:26:27.971" level="INFO">${randStr} = 0911885445</msg>
<status status="PASS" starttime="20231129 08:26:27.970" endtime="20231129 08:26:27.971"/>
</kw>
<msg timestamp="20231129 08:26:27.971" level="INFO">${random} = ozone-test-0911885445</msg>
<status status="PASS" starttime="20231129 08:26:27.970" endtime="20231129 08:26:27.971"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231129 08:26:27.971" level="INFO">${PREFIX} = ozone-test-0911885445</msg>
<status status="PASS" starttime="20231129 08:26:27.971" endtime="20231129 08:26:27.971"/>
</kw>
<status status="PASS" starttime="20231129 08:26:27.970" endtime="20231129 08:26:27.972"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey3</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:27.975" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket erasure --key ozone-test-0911885445/multipartKey3 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:28.431" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:28.431" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-0911885445/multipartKey3",
    "UploadId": "7400ff0e-97e8-4904-8670-55d53e0f173d-111492883309264926"
}</msg>
<status status="PASS" starttime="20231129 08:26:27.973" endtime="20231129 08:26:28.431"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:28.432" level="INFO">{
    "Bucket": "erasure",
    "Key": "ozone-test-0911885445/multipartKey3",
    "UploadId": "7400ff0e-97e8-4904-8670-55d53e0f173d-111492883309264926"
}</msg>
<status status="PASS" starttime="20231129 08:26:28.432" endtime="20231129 08:26:28.432"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:28.433" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:28.432" endtime="20231129 08:26:28.433"/>
</kw>
<status status="PASS" starttime="20231129 08:26:27.973" endtime="20231129 08:26:28.433"/>
</kw>
<msg timestamp="20231129 08:26:28.433" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:27.973" endtime="20231129 08:26:28.433"/>
</kw>
<msg timestamp="20231129 08:26:28.433" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-0911885445/multipartKey3",
    "UploadId": "7400ff0e-97e8-4904-8670-55d53e0f173d-111492883309264926"
}</msg>
<status status="PASS" starttime="20231129 08:26:27.972" endtime="20231129 08:26:28.433"/>
</kw>
<msg timestamp="20231129 08:26:28.433" level="INFO">${result} = {
    "Bucket": "erasure",
    "Key": "ozone-test-0911885445/multipartKey3",
    "UploadId": "7400ff0e-97e8-4904-8670-55d53e0f173d-111492883309264926"
}</msg>
<status status="PASS" starttime="20231129 08:26:27.972" endtime="20231129 08:26:28.433"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:28.435" level="INFO">Running command 'echo '{
    "Bucket": "erasure",
    "Key": "ozone-test-0911885445/multipartKey3",
    "UploadId": "7400ff0e-97e8-4904-8670-55d53e0f173d-111492883309264926"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:28.461" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:28.462" level="INFO">${output} = 7400ff0e-97e8-4904-8670-55d53e0f173d-111492883309264926</msg>
<status status="PASS" starttime="20231129 08:26:28.434" endtime="20231129 08:26:28.462"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:28.462" level="INFO">7400ff0e-97e8-4904-8670-55d53e0f173d-111492883309264926</msg>
<status status="PASS" starttime="20231129 08:26:28.462" endtime="20231129 08:26:28.462"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:28.463" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:28.463" endtime="20231129 08:26:28.463"/>
</kw>
<msg timestamp="20231129 08:26:28.463" level="INFO">${uploadID} = 7400ff0e-97e8-4904-8670-55d53e0f173d-111492883309264926</msg>
<status status="PASS" starttime="20231129 08:26:28.434" endtime="20231129 08:26:28.463"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:26:28.463" endtime="20231129 08:26:28.464"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:26:28.464" endtime="20231129 08:26:28.464"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:26:28.464" endtime="20231129 08:26:28.465"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}]'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:28.467" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 7400ff0e-97e8-4904-8670-55d53e0f173d-111492883309264926 --bucket erasure --key ozone-test-0911885445/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:28.915" level="INFO">${rc} = 255</msg>
<msg timestamp="20231129 08:26:28.915" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20231129 08:26:28.466" endtime="20231129 08:26:28.915"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:28.916" level="INFO">
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified entity tag might not have matched the part's entity tag.</msg>
<status status="PASS" starttime="20231129 08:26:28.915" endtime="20231129 08:26:28.916"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:28.917" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:28.916" endtime="20231129 08:26:28.917"/>
</kw>
<msg timestamp="20231129 08:26:28.917" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20231129 08:26:28.465" endtime="20231129 08:26:28.917"/>
</kw>
<msg timestamp="20231129 08:26:28.917" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20231129 08:26:28.465" endtime="20231129 08:26:28.917"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPart</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:26:28.917" endtime="20231129 08:26:28.918"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=2},{ETag=etag2,PartNumber=1}]'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:28.921" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 7400ff0e-97e8-4904-8670-55d53e0f173d-111492883309264926 --bucket erasure --key ozone-test-0911885445/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=2},{ETag=etag2,PartNumber=1}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:29.365" level="INFO">${rc} = 255</msg>
<msg timestamp="20231129 08:26:29.365" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20231129 08:26:28.919" endtime="20231129 08:26:29.365"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:29.366" level="INFO">
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified entity tag might not have matched the part's entity tag.</msg>
<status status="PASS" starttime="20231129 08:26:29.366" endtime="20231129 08:26:29.366"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:29.367" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:29.366" endtime="20231129 08:26:29.367"/>
</kw>
<msg timestamp="20231129 08:26:29.367" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20231129 08:26:28.918" endtime="20231129 08:26:29.367"/>
</kw>
<msg timestamp="20231129 08:26:29.367" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20231129 08:26:28.918" endtime="20231129 08:26:29.367"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPart</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:26:29.367" endtime="20231129 08:26:29.368"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>5</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>5</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:29.371" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:29.389" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:29.389" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:26:29.370" endtime="20231129 08:26:29.389"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:29.390" level="INFO"/>
<status status="PASS" starttime="20231129 08:26:29.389" endtime="20231129 08:26:29.390"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:29.390" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:29.390" endtime="20231129 08:26:29.390"/>
</kw>
<status status="PASS" starttime="20231129 08:26:29.369" endtime="20231129 08:26:29.390"/>
</kw>
<msg timestamp="20231129 08:26:29.390" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:29.369" endtime="20231129 08:26:29.390"/>
</kw>
<status status="PASS" starttime="20231129 08:26:29.368" endtime="20231129 08:26:29.390"/>
</kw>
<status status="PASS" starttime="20231129 08:26:29.368" endtime="20231129 08:26:29.391"/>
</kw>
<status status="PASS" starttime="20231129 08:26:29.368" endtime="20231129 08:26:29.391"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --part-number 1 --body /tmp/part1 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:29.394" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket erasure --key ozone-test-0911885445/multipartKey3 --part-number 1 --body /tmp/part1 --upload-id 7400ff0e-97e8-4904-8670-55d53e0f173d-111492883309264926 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:29.989" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:29.989" level="INFO">${output} = {
    "ETag": "/s3v/erasure/ozone-test-0911885445/multipartKey3-7400ff0e-97e8-4904-8670-55d53e0f173d-111492883309264926-1"
}</msg>
<status status="PASS" starttime="20231129 08:26:29.392" endtime="20231129 08:26:29.989"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:29.990" level="INFO">{
    "ETag": "/s3v/erasure/ozone-test-0911885445/multipartKey3-7400ff0e-97e8-4904-8670-55d53e0f173d-111492883309264926-1"
}</msg>
<status status="PASS" starttime="20231129 08:26:29.989" endtime="20231129 08:26:29.990"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:29.991" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:29.990" endtime="20231129 08:26:29.991"/>
</kw>
<status status="PASS" starttime="20231129 08:26:29.392" endtime="20231129 08:26:29.991"/>
</kw>
<msg timestamp="20231129 08:26:29.991" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:29.392" endtime="20231129 08:26:29.991"/>
</kw>
<msg timestamp="20231129 08:26:29.991" level="INFO">${output} = {
    "ETag": "/s3v/erasure/ozone-test-0911885445/multipartKey3-7400ff0e-97e8-4904-8670-55d53e0f173d-111492883309264926-1"
}</msg>
<status status="PASS" starttime="20231129 08:26:29.391" endtime="20231129 08:26:29.991"/>
</kw>
<msg timestamp="20231129 08:26:29.991" level="INFO">${result} = {
    "ETag": "/s3v/erasure/ozone-test-0911885445/multipartKey3-7400ff0e-97e8-4904-8670-55d53e0f173d-111492883309264926-1"
}</msg>
<status status="PASS" starttime="20231129 08:26:29.391" endtime="20231129 08:26:29.991"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:29.993" level="INFO">Running command 'echo '{
    "ETag": "/s3v/erasure/ozone-test-0911885445/multipartKey3-7400ff0e-97e8-4904-8670-55d53e0f173d-111492883309264926-1"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:30.020" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:30.020" level="INFO">${output} = /s3v/erasure/ozone-test-0911885445/multipartKey3-7400ff0e-97e8-4904-8670-55d53e0f173d-111492883309264926-1</msg>
<status status="PASS" starttime="20231129 08:26:29.992" endtime="20231129 08:26:30.020"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:30.020" level="INFO">/s3v/erasure/ozone-test-0911885445/multipartKey3-7400ff0e-97e8-4904-8670-55d53e0f173d-111492883309264926-1</msg>
<status status="PASS" starttime="20231129 08:26:30.020" endtime="20231129 08:26:30.021"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:30.021" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:30.021" endtime="20231129 08:26:30.021"/>
</kw>
<msg timestamp="20231129 08:26:30.021" level="INFO">${eTag1} = /s3v/erasure/ozone-test-0911885445/multipartKey3-7400ff0e-97e8-4904-8670-55d53e0f173d-111492883309264926-1</msg>
<status status="PASS" starttime="20231129 08:26:29.992" endtime="20231129 08:26:30.021"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:26:30.021" endtime="20231129 08:26:30.022"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --part-number 2 --body /tmp/part1 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:30.025" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket erasure --key ozone-test-0911885445/multipartKey3 --part-number 2 --body /tmp/part1 --upload-id 7400ff0e-97e8-4904-8670-55d53e0f173d-111492883309264926 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:30.694" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:30.694" level="INFO">${output} = {
    "ETag": "/s3v/erasure/ozone-test-0911885445/multipartKey3-7400ff0e-97e8-4904-8670-55d53e0f173d-111492883309264926-2"
}</msg>
<status status="PASS" starttime="20231129 08:26:30.023" endtime="20231129 08:26:30.694"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:30.695" level="INFO">{
    "ETag": "/s3v/erasure/ozone-test-0911885445/multipartKey3-7400ff0e-97e8-4904-8670-55d53e0f173d-111492883309264926-2"
}</msg>
<status status="PASS" starttime="20231129 08:26:30.695" endtime="20231129 08:26:30.695"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:30.696" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:30.695" endtime="20231129 08:26:30.696"/>
</kw>
<status status="PASS" starttime="20231129 08:26:30.023" endtime="20231129 08:26:30.696"/>
</kw>
<msg timestamp="20231129 08:26:30.696" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:30.023" endtime="20231129 08:26:30.696"/>
</kw>
<msg timestamp="20231129 08:26:30.696" level="INFO">${output} = {
    "ETag": "/s3v/erasure/ozone-test-0911885445/multipartKey3-7400ff0e-97e8-4904-8670-55d53e0f173d-111492883309264926-2"
}</msg>
<status status="PASS" starttime="20231129 08:26:30.022" endtime="20231129 08:26:30.696"/>
</kw>
<msg timestamp="20231129 08:26:30.697" level="INFO">${result} = {
    "ETag": "/s3v/erasure/ozone-test-0911885445/multipartKey3-7400ff0e-97e8-4904-8670-55d53e0f173d-111492883309264926-2"
}</msg>
<status status="PASS" starttime="20231129 08:26:30.022" endtime="20231129 08:26:30.697"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:30.699" level="INFO">Running command 'echo '{
    "ETag": "/s3v/erasure/ozone-test-0911885445/multipartKey3-7400ff0e-97e8-4904-8670-55d53e0f173d-111492883309264926-2"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:30.725" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:30.725" level="INFO">${output} = /s3v/erasure/ozone-test-0911885445/multipartKey3-7400ff0e-97e8-4904-8670-55d53e0f173d-111492883309264926-2</msg>
<status status="PASS" starttime="20231129 08:26:30.697" endtime="20231129 08:26:30.725"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:30.726" level="INFO">/s3v/erasure/ozone-test-0911885445/multipartKey3-7400ff0e-97e8-4904-8670-55d53e0f173d-111492883309264926-2</msg>
<status status="PASS" starttime="20231129 08:26:30.725" endtime="20231129 08:26:30.726"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:30.726" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:30.726" endtime="20231129 08:26:30.726"/>
</kw>
<msg timestamp="20231129 08:26:30.726" level="INFO">${eTag2} = /s3v/erasure/ozone-test-0911885445/multipartKey3-7400ff0e-97e8-4904-8670-55d53e0f173d-111492883309264926-2</msg>
<status status="PASS" starttime="20231129 08:26:30.697" endtime="20231129 08:26:30.726"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:26:30.727" endtime="20231129 08:26:30.727"/>
</kw>
<kw name="Execute" library="os">
<arg>echo "Part3" &gt; /tmp/part3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:30.729" level="INFO">Running command 'echo "Part3" &gt; /tmp/part3'.</msg>
<msg timestamp="20231129 08:26:30.731" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:30.731" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:26:30.728" endtime="20231129 08:26:30.731"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:30.731" level="INFO"/>
<status status="PASS" starttime="20231129 08:26:30.731" endtime="20231129 08:26:30.732"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:30.732" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:30.732" endtime="20231129 08:26:30.732"/>
</kw>
<status status="PASS" starttime="20231129 08:26:30.728" endtime="20231129 08:26:30.732"/>
</kw>
<msg timestamp="20231129 08:26:30.732" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:30.727" endtime="20231129 08:26:30.732"/>
</kw>
<status status="PASS" starttime="20231129 08:26:30.727" endtime="20231129 08:26:30.732"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --part-number 3 --body /tmp/part3 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:30.735" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket erasure --key ozone-test-0911885445/multipartKey3 --part-number 3 --body /tmp/part3 --upload-id 7400ff0e-97e8-4904-8670-55d53e0f173d-111492883309264926 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:31.264" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:31.264" level="INFO">${output} = {
    "ETag": "/s3v/erasure/ozone-test-0911885445/multipartKey3-7400ff0e-97e8-4904-8670-55d53e0f173d-111492883309264926-3"
}</msg>
<status status="PASS" starttime="20231129 08:26:30.734" endtime="20231129 08:26:31.264"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:31.265" level="INFO">{
    "ETag": "/s3v/erasure/ozone-test-0911885445/multipartKey3-7400ff0e-97e8-4904-8670-55d53e0f173d-111492883309264926-3"
}</msg>
<status status="PASS" starttime="20231129 08:26:31.264" endtime="20231129 08:26:31.265"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:31.265" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:31.265" endtime="20231129 08:26:31.265"/>
</kw>
<status status="PASS" starttime="20231129 08:26:30.734" endtime="20231129 08:26:31.266"/>
</kw>
<msg timestamp="20231129 08:26:31.266" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:30.734" endtime="20231129 08:26:31.266"/>
</kw>
<msg timestamp="20231129 08:26:31.266" level="INFO">${output} = {
    "ETag": "/s3v/erasure/ozone-test-0911885445/multipartKey3-7400ff0e-97e8-4904-8670-55d53e0f173d-111492883309264926-3"
}</msg>
<status status="PASS" starttime="20231129 08:26:30.733" endtime="20231129 08:26:31.266"/>
</kw>
<msg timestamp="20231129 08:26:31.266" level="INFO">${result} = {
    "ETag": "/s3v/erasure/ozone-test-0911885445/multipartKey3-7400ff0e-97e8-4904-8670-55d53e0f173d-111492883309264926-3"
}</msg>
<status status="PASS" starttime="20231129 08:26:30.733" endtime="20231129 08:26:31.266"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag3}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:31.268" level="INFO">Running command 'echo '{
    "ETag": "/s3v/erasure/ozone-test-0911885445/multipartKey3-7400ff0e-97e8-4904-8670-55d53e0f173d-111492883309264926-3"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:31.295" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:31.295" level="INFO">${output} = /s3v/erasure/ozone-test-0911885445/multipartKey3-7400ff0e-97e8-4904-8670-55d53e0f173d-111492883309264926-3</msg>
<status status="PASS" starttime="20231129 08:26:31.267" endtime="20231129 08:26:31.295"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:31.296" level="INFO">/s3v/erasure/ozone-test-0911885445/multipartKey3-7400ff0e-97e8-4904-8670-55d53e0f173d-111492883309264926-3</msg>
<status status="PASS" starttime="20231129 08:26:31.296" endtime="20231129 08:26:31.296"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:31.297" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:31.297" endtime="20231129 08:26:31.297"/>
</kw>
<msg timestamp="20231129 08:26:31.297" level="INFO">${eTag3} = /s3v/erasure/ozone-test-0911885445/multipartKey3-7400ff0e-97e8-4904-8670-55d53e0f173d-111492883309264926-3</msg>
<status status="PASS" starttime="20231129 08:26:31.266" endtime="20231129 08:26:31.297"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:26:31.297" endtime="20231129 08:26:31.298"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}]'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:31.300" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 7400ff0e-97e8-4904-8670-55d53e0f173d-111492883309264926 --bucket erasure --key ozone-test-0911885445/multipartKey3 --multipart-upload 'Parts=[{ETag=etag1,PartNumber=1},{ETag=etag2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:31.758" level="INFO">${rc} = 255</msg>
<msg timestamp="20231129 08:26:31.758" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20231129 08:26:31.299" endtime="20231129 08:26:31.758"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:31.759" level="INFO">
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified entity tag might not have matched the part's entity tag.</msg>
<status status="PASS" starttime="20231129 08:26:31.759" endtime="20231129 08:26:31.759"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:31.760" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:31.759" endtime="20231129 08:26:31.760"/>
</kw>
<msg timestamp="20231129 08:26:31.760" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20231129 08:26:31.298" endtime="20231129 08:26:31.760"/>
</kw>
<msg timestamp="20231129 08:26:31.760" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20231129 08:26:31.298" endtime="20231129 08:26:31.760"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPart</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:26:31.760" endtime="20231129 08:26:31.761"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=etag2,PartNumber=2}]'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:31.764" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 7400ff0e-97e8-4904-8670-55d53e0f173d-111492883309264926 --bucket erasure --key ozone-test-0911885445/multipartKey3 --multipart-upload 'Parts=[{ETag=/s3v/erasure/ozone-test-0911885445/multipartKey3-7400ff0e-97e8-4904-8670-55d53e0f173d-111492883309264926-1,PartNumber=1},{ETag=etag2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:32.209" level="INFO">${rc} = 255</msg>
<msg timestamp="20231129 08:26:32.209" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20231129 08:26:31.762" endtime="20231129 08:26:32.209"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:32.210" level="INFO">
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified entity tag might not have matched the part's entity tag.</msg>
<status status="PASS" starttime="20231129 08:26:32.210" endtime="20231129 08:26:32.210"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:32.211" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:32.210" endtime="20231129 08:26:32.211"/>
</kw>
<msg timestamp="20231129 08:26:32.211" level="INFO">${output} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20231129 08:26:31.762" endtime="20231129 08:26:32.211"/>
</kw>
<msg timestamp="20231129 08:26:32.211" level="INFO">${result} = 
An error occurred (InvalidPart) when calling the CompleteMultipartUpload operation: One or more of the specified parts could not be found. The part might not have been uploaded, or the specified enti...</msg>
<status status="PASS" starttime="20231129 08:26:31.761" endtime="20231129 08:26:32.211"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPart</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:26:32.212" endtime="20231129 08:26:32.212"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=4},{ETag=etag2,PartNumber=2}]'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:32.215" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 7400ff0e-97e8-4904-8670-55d53e0f173d-111492883309264926 --bucket erasure --key ozone-test-0911885445/multipartKey3 --multipart-upload 'Parts=[{ETag=/s3v/erasure/ozone-test-0911885445/multipartKey3-7400ff0e-97e8-4904-8670-55d53e0f173d-111492883309264926-1,PartNumber=4},{ETag=etag2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:32.652" level="INFO">${rc} = 255</msg>
<msg timestamp="20231129 08:26:32.652" level="INFO">${output} = 
An error occurred (InvalidPartOrder) when calling the CompleteMultipartUpload operation: The list of parts was not in ascending order. The parts list must be specified in order by part number.</msg>
<status status="PASS" starttime="20231129 08:26:32.213" endtime="20231129 08:26:32.652"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:32.653" level="INFO">
An error occurred (InvalidPartOrder) when calling the CompleteMultipartUpload operation: The list of parts was not in ascending order. The parts list must be specified in order by part number.</msg>
<status status="PASS" starttime="20231129 08:26:32.652" endtime="20231129 08:26:32.653"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:32.653" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:32.653" endtime="20231129 08:26:32.653"/>
</kw>
<msg timestamp="20231129 08:26:32.653" level="INFO">${output} = 
An error occurred (InvalidPartOrder) when calling the CompleteMultipartUpload operation: The list of parts was not in ascending order. The parts list must be specified in order by part number.</msg>
<status status="PASS" starttime="20231129 08:26:32.213" endtime="20231129 08:26:32.653"/>
</kw>
<msg timestamp="20231129 08:26:32.654" level="INFO">${result} = 
An error occurred (InvalidPartOrder) when calling the CompleteMultipartUpload operation: The list of parts was not in ascending order. The parts list must be specified in order by part number.</msg>
<status status="PASS" starttime="20231129 08:26:32.212" endtime="20231129 08:26:32.654"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidPartOrder</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:26:32.654" endtime="20231129 08:26:32.654"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=${eTag3},PartNumber=3}]'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:32.658" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 7400ff0e-97e8-4904-8670-55d53e0f173d-111492883309264926 --bucket erasure --key ozone-test-0911885445/multipartKey3 --multipart-upload 'Parts=[{ETag=/s3v/erasure/ozone-test-0911885445/multipartKey3-7400ff0e-97e8-4904-8670-55d53e0f173d-111492883309264926-1,PartNumber=1},{ETag=/s3v/erasure/ozone-test-0911885445/multipartKey3-7400ff0e-97e8-4904-8670-55d53e0f173d-111492883309264926-3,PartNumber=3}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:33.112" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:33.112" level="INFO">${output} = {
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "ozone-test-0911885445/multipartKey3",
    "ETag": "\"866bd18a2f35ecda339d6778a6a68959-3\""
}</msg>
<status status="PASS" starttime="20231129 08:26:32.656" endtime="20231129 08:26:33.112"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:33.113" level="INFO">{
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "ozone-test-0911885445/multipartKey3",
    "ETag": "\"866bd18a2f35ecda339d6778a6a68959-3\""
}</msg>
<status status="PASS" starttime="20231129 08:26:33.113" endtime="20231129 08:26:33.113"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:33.114" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:33.113" endtime="20231129 08:26:33.114"/>
</kw>
<status status="PASS" starttime="20231129 08:26:32.656" endtime="20231129 08:26:33.114"/>
</kw>
<msg timestamp="20231129 08:26:33.114" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:32.655" endtime="20231129 08:26:33.114"/>
</kw>
<msg timestamp="20231129 08:26:33.114" level="INFO">${output} = {
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "ozone-test-0911885445/multipartKey3",
    "ETag": "\"866bd18a2f35ecda339d6778a6a68959-3\""
}</msg>
<status status="PASS" starttime="20231129 08:26:32.655" endtime="20231129 08:26:33.114"/>
</kw>
<msg timestamp="20231129 08:26:33.115" level="INFO">${result} = {
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "ozone-test-0911885445/multipartKey3",
    "ETag": "\"866bd18a2f35ecda339d6778a6a68959-3\""
}</msg>
<status status="PASS" starttime="20231129 08:26:32.654" endtime="20231129 08:26:33.115"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:26:33.115" endtime="20231129 08:26:33.115"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:26:33.115" endtime="20231129 08:26:33.115"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:26:33.116" endtime="20231129 08:26:33.116"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 /tmp/${PREFIX}-multipartKey3.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:33.119" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-0911885445/multipartKey3 /tmp/ozone-test-0911885445-multipartKey3.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:33.676" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:33.676" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:26:33 GMT",
    "ContentLength": 5242886,
    "ETag": "\"866bd18a2f35ecda339d6778a6a68959-3\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20231129 08:26:33.118" endtime="20231129 08:26:33.676"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:33.677" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:26:33 GMT",
    "ContentLength": 5242886,
    "ETag": "\"866bd18a2f35ecda339d6778a6a68959-3\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 29 Nov 2023 08:26:33 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231129 08:26:33.677" endtime="20231129 08:26:33.677"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:33.678" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:33.677" endtime="20231129 08:26:33.678"/>
</kw>
<status status="PASS" starttime="20231129 08:26:33.117" endtime="20231129 08:26:33.678"/>
</kw>
<msg timestamp="20231129 08:26:33.678" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:33.117" endtime="20231129 08:26:33.678"/>
</kw>
<msg timestamp="20231129 08:26:33.678" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:26:33 GMT",
    "ContentLength": 5242886,
    "ETag": "\"866bd18a2f35ecda339d6778a6a68959-3\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20231129 08:26:33.117" endtime="20231129 08:26:33.678"/>
</kw>
<msg timestamp="20231129 08:26:33.679" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:26:33 GMT",
    "ContentLength": 5242886,
    "ETag": "\"866bd18a2f35ecda339d6778a6a68959-3\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20231129 08:26:33.116" endtime="20231129 08:26:33.679"/>
</kw>
<kw name="Execute" library="os">
<arg>cat /tmp/part1 /tmp/part3 &gt; /tmp/${PREFIX}-multipartKey3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:33.682" level="INFO">Running command 'cat /tmp/part1 /tmp/part3 &gt; /tmp/ozone-test-0911885445-multipartKey3'.</msg>
<msg timestamp="20231129 08:26:33.686" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:33.687" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:26:33.680" endtime="20231129 08:26:33.687"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:33.687" level="INFO"/>
<status status="PASS" starttime="20231129 08:26:33.687" endtime="20231129 08:26:33.687"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:33.688" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:33.687" endtime="20231129 08:26:33.688"/>
</kw>
<status status="PASS" starttime="20231129 08:26:33.679" endtime="20231129 08:26:33.688"/>
</kw>
<msg timestamp="20231129 08:26:33.688" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:33.679" endtime="20231129 08:26:33.688"/>
</kw>
<status status="PASS" starttime="20231129 08:26:33.679" endtime="20231129 08:26:33.688"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/${PREFIX}-multipartKey3</arg>
<arg>/tmp/${PREFIX}-multipartKey3.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:33.691" level="INFO">Running command 'md5sum /tmp/ozone-test-0911885445-multipartKey3 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:33.701" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:33.701" level="INFO">${output} = f4390987ddf6af29409a41b391b7b131</msg>
<status status="PASS" starttime="20231129 08:26:33.690" endtime="20231129 08:26:33.701"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:33.702" level="INFO">f4390987ddf6af29409a41b391b7b131</msg>
<status status="PASS" starttime="20231129 08:26:33.702" endtime="20231129 08:26:33.702"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:33.703" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:33.702" endtime="20231129 08:26:33.703"/>
</kw>
<status status="PASS" starttime="20231129 08:26:33.689" endtime="20231129 08:26:33.703"/>
</kw>
<msg timestamp="20231129 08:26:33.703" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:33.689" endtime="20231129 08:26:33.703"/>
</kw>
<msg timestamp="20231129 08:26:33.703" level="INFO">${checksumbefore} = f4390987ddf6af29409a41b391b7b131</msg>
<status status="PASS" starttime="20231129 08:26:33.689" endtime="20231129 08:26:33.703"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:33.706" level="INFO">Running command 'md5sum /tmp/ozone-test-0911885445-multipartKey3.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:33.716" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:33.716" level="INFO">${output} = f4390987ddf6af29409a41b391b7b131</msg>
<status status="PASS" starttime="20231129 08:26:33.704" endtime="20231129 08:26:33.716"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:33.717" level="INFO">f4390987ddf6af29409a41b391b7b131</msg>
<status status="PASS" starttime="20231129 08:26:33.716" endtime="20231129 08:26:33.717"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:33.717" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:33.717" endtime="20231129 08:26:33.718"/>
</kw>
<status status="PASS" starttime="20231129 08:26:33.704" endtime="20231129 08:26:33.718"/>
</kw>
<msg timestamp="20231129 08:26:33.718" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:33.704" endtime="20231129 08:26:33.718"/>
</kw>
<msg timestamp="20231129 08:26:33.718" level="INFO">${checksumafter} = f4390987ddf6af29409a41b391b7b131</msg>
<status status="PASS" starttime="20231129 08:26:33.703" endtime="20231129 08:26:33.718"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231129 08:26:33.718" endtime="20231129 08:26:33.718"/>
</kw>
<status status="PASS" starttime="20231129 08:26:33.688" endtime="20231129 08:26:33.719"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --part-number 1 /tmp/${PREFIX}-multipartKey3-part1.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:33.721" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-0911885445/multipartKey3 --part-number 1 /tmp/ozone-test-0911885445-multipartKey3-part1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:34.255" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:34.255" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:26:33 GMT",
    "ContentLength": 5242880,
    "ETag": "\"866bd18a2f35ecda339d6778a6a68959-3\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20231129 08:26:33.720" endtime="20231129 08:26:34.255"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:34.256" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:26:33 GMT",
    "ContentLength": 5242880,
    "ETag": "\"866bd18a2f35ecda339d6778a6a68959-3\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 29 Nov 2023 08:26:34 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231129 08:26:34.256" endtime="20231129 08:26:34.256"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:34.257" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:34.257" endtime="20231129 08:26:34.257"/>
</kw>
<status status="PASS" starttime="20231129 08:26:33.720" endtime="20231129 08:26:34.257"/>
</kw>
<msg timestamp="20231129 08:26:34.257" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:33.720" endtime="20231129 08:26:34.257"/>
</kw>
<msg timestamp="20231129 08:26:34.257" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:26:33 GMT",
    "ContentLength": 5242880,
    "ETag": "\"866bd18a2f35ecda339d6778a6a68959-3\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20231129 08:26:33.719" endtime="20231129 08:26:34.258"/>
</kw>
<msg timestamp="20231129 08:26:34.258" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:26:33 GMT",
    "ContentLength": 5242880,
    "ETag": "\"866bd18a2f35ecda339d6778a6a68959-3\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20231129 08:26:33.719" endtime="20231129 08:26:34.258"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part1</arg>
<arg>/tmp/${PREFIX}-multipartKey3-part1.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:34.261" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:34.271" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:34.272" level="INFO">${output} = 11dbf7bfa1e3aff4419176b11bf777d9</msg>
<status status="PASS" starttime="20231129 08:26:34.259" endtime="20231129 08:26:34.272"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:34.272" level="INFO">11dbf7bfa1e3aff4419176b11bf777d9</msg>
<status status="PASS" starttime="20231129 08:26:34.272" endtime="20231129 08:26:34.272"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:34.273" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:34.273" endtime="20231129 08:26:34.273"/>
</kw>
<status status="PASS" starttime="20231129 08:26:34.259" endtime="20231129 08:26:34.273"/>
</kw>
<msg timestamp="20231129 08:26:34.273" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:34.259" endtime="20231129 08:26:34.273"/>
</kw>
<msg timestamp="20231129 08:26:34.273" level="INFO">${checksumbefore} = 11dbf7bfa1e3aff4419176b11bf777d9</msg>
<status status="PASS" starttime="20231129 08:26:34.258" endtime="20231129 08:26:34.273"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:34.276" level="INFO">Running command 'md5sum /tmp/ozone-test-0911885445-multipartKey3-part1.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:34.286" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:34.286" level="INFO">${output} = 11dbf7bfa1e3aff4419176b11bf777d9</msg>
<status status="PASS" starttime="20231129 08:26:34.275" endtime="20231129 08:26:34.286"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:34.287" level="INFO">11dbf7bfa1e3aff4419176b11bf777d9</msg>
<status status="PASS" starttime="20231129 08:26:34.287" endtime="20231129 08:26:34.287"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:34.287" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:34.287" endtime="20231129 08:26:34.288"/>
</kw>
<status status="PASS" starttime="20231129 08:26:34.274" endtime="20231129 08:26:34.288"/>
</kw>
<msg timestamp="20231129 08:26:34.288" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:34.274" endtime="20231129 08:26:34.288"/>
</kw>
<msg timestamp="20231129 08:26:34.288" level="INFO">${checksumafter} = 11dbf7bfa1e3aff4419176b11bf777d9</msg>
<status status="PASS" starttime="20231129 08:26:34.273" endtime="20231129 08:26:34.288"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231129 08:26:34.288" endtime="20231129 08:26:34.289"/>
</kw>
<status status="PASS" starttime="20231129 08:26:34.258" endtime="20231129 08:26:34.289"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/multipartKey3 --part-number 3 /tmp/${PREFIX}-multipartKey3-part3.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:34.291" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-0911885445/multipartKey3 --part-number 3 /tmp/ozone-test-0911885445-multipartKey3-part3.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:34.728" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:34.728" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:26:33 GMT",
    "ContentLength": 6,
    "ETag": "\"866bd18a2f35ecda339d6778a6a68959-3\"",
    "CacheControl": "no-cache",
    "C...</msg>
<status status="PASS" starttime="20231129 08:26:34.290" endtime="20231129 08:26:34.728"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:34.729" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:26:33 GMT",
    "ContentLength": 6,
    "ETag": "\"866bd18a2f35ecda339d6778a6a68959-3\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 29 Nov 2023 08:26:34 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231129 08:26:34.728" endtime="20231129 08:26:34.729"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:34.729" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:34.729" endtime="20231129 08:26:34.730"/>
</kw>
<status status="PASS" starttime="20231129 08:26:34.290" endtime="20231129 08:26:34.730"/>
</kw>
<msg timestamp="20231129 08:26:34.730" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:34.290" endtime="20231129 08:26:34.730"/>
</kw>
<msg timestamp="20231129 08:26:34.730" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:26:33 GMT",
    "ContentLength": 6,
    "ETag": "\"866bd18a2f35ecda339d6778a6a68959-3\"",
    "CacheControl": "no-cache",
    "C...</msg>
<status status="PASS" starttime="20231129 08:26:34.289" endtime="20231129 08:26:34.730"/>
</kw>
<msg timestamp="20231129 08:26:34.730" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:26:33 GMT",
    "ContentLength": 6,
    "ETag": "\"866bd18a2f35ecda339d6778a6a68959-3\"",
    "CacheControl": "no-cache",
    "C...</msg>
<status status="PASS" starttime="20231129 08:26:34.289" endtime="20231129 08:26:34.730"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part3</arg>
<arg>/tmp/${PREFIX}-multipartKey3-part3.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:34.733" level="INFO">Running command 'md5sum /tmp/part3 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:34.735" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:34.735" level="INFO">${output} = 804f368834f04e8d39a8a7c76ba870e3</msg>
<status status="PASS" starttime="20231129 08:26:34.732" endtime="20231129 08:26:34.735"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:34.736" level="INFO">804f368834f04e8d39a8a7c76ba870e3</msg>
<status status="PASS" starttime="20231129 08:26:34.736" endtime="20231129 08:26:34.736"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:34.737" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:34.736" endtime="20231129 08:26:34.737"/>
</kw>
<status status="PASS" starttime="20231129 08:26:34.731" endtime="20231129 08:26:34.737"/>
</kw>
<msg timestamp="20231129 08:26:34.737" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:34.731" endtime="20231129 08:26:34.737"/>
</kw>
<msg timestamp="20231129 08:26:34.737" level="INFO">${checksumbefore} = 804f368834f04e8d39a8a7c76ba870e3</msg>
<status status="PASS" starttime="20231129 08:26:34.731" endtime="20231129 08:26:34.737"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:34.739" level="INFO">Running command 'md5sum /tmp/ozone-test-0911885445-multipartKey3-part3.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:34.741" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:34.741" level="INFO">${output} = 804f368834f04e8d39a8a7c76ba870e3</msg>
<status status="PASS" starttime="20231129 08:26:34.738" endtime="20231129 08:26:34.741"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:34.742" level="INFO">804f368834f04e8d39a8a7c76ba870e3</msg>
<status status="PASS" starttime="20231129 08:26:34.742" endtime="20231129 08:26:34.742"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:34.743" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:34.742" endtime="20231129 08:26:34.743"/>
</kw>
<status status="PASS" starttime="20231129 08:26:34.738" endtime="20231129 08:26:34.743"/>
</kw>
<msg timestamp="20231129 08:26:34.743" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:34.738" endtime="20231129 08:26:34.743"/>
</kw>
<msg timestamp="20231129 08:26:34.743" level="INFO">${checksumafter} = 804f368834f04e8d39a8a7c76ba870e3</msg>
<status status="PASS" starttime="20231129 08:26:34.737" endtime="20231129 08:26:34.743"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231129 08:26:34.743" endtime="20231129 08:26:34.744"/>
</kw>
<status status="PASS" starttime="20231129 08:26:34.730" endtime="20231129 08:26:34.744"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:26:27.969" endtime="20231129 08:26:34.744"/>
</test>
<test id="s1-s1-s8-t6" name="Test abort Multipart upload" line="198">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231129 08:26:34.746" level="INFO">${randStr} = 2853385398</msg>
<status status="PASS" starttime="20231129 08:26:34.746" endtime="20231129 08:26:34.746"/>
</kw>
<msg timestamp="20231129 08:26:34.746" level="INFO">${random} = ozone-test-2853385398</msg>
<status status="PASS" starttime="20231129 08:26:34.745" endtime="20231129 08:26:34.746"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231129 08:26:34.747" level="INFO">${PREFIX} = ozone-test-2853385398</msg>
<status status="PASS" starttime="20231129 08:26:34.746" endtime="20231129 08:26:34.747"/>
</kw>
<status status="PASS" starttime="20231129 08:26:34.745" endtime="20231129 08:26:34.747"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey4 --storage-class REDUCED_REDUNDANCY</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:34.749" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket erasure --key ozone-test-2853385398/multipartKey4 --storage-class REDUCED_REDUNDANCY 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:35.207" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:35.207" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-2853385398/multipartKey4",
    "UploadId": "e7cdc7df-0b38-4aa3-9cf8-6f6b5ca75c3d-111492883753271330"
}</msg>
<status status="PASS" starttime="20231129 08:26:34.748" endtime="20231129 08:26:35.207"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:35.208" level="INFO">{
    "Bucket": "erasure",
    "Key": "ozone-test-2853385398/multipartKey4",
    "UploadId": "e7cdc7df-0b38-4aa3-9cf8-6f6b5ca75c3d-111492883753271330"
}</msg>
<status status="PASS" starttime="20231129 08:26:35.207" endtime="20231129 08:26:35.208"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:35.208" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:35.208" endtime="20231129 08:26:35.208"/>
</kw>
<status status="PASS" starttime="20231129 08:26:34.748" endtime="20231129 08:26:35.208"/>
</kw>
<msg timestamp="20231129 08:26:35.209" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:34.748" endtime="20231129 08:26:35.209"/>
</kw>
<msg timestamp="20231129 08:26:35.209" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-2853385398/multipartKey4",
    "UploadId": "e7cdc7df-0b38-4aa3-9cf8-6f6b5ca75c3d-111492883753271330"
}</msg>
<status status="PASS" starttime="20231129 08:26:34.747" endtime="20231129 08:26:35.209"/>
</kw>
<msg timestamp="20231129 08:26:35.209" level="INFO">${result} = {
    "Bucket": "erasure",
    "Key": "ozone-test-2853385398/multipartKey4",
    "UploadId": "e7cdc7df-0b38-4aa3-9cf8-6f6b5ca75c3d-111492883753271330"
}</msg>
<status status="PASS" starttime="20231129 08:26:34.747" endtime="20231129 08:26:35.209"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:35.211" level="INFO">Running command 'echo '{
    "Bucket": "erasure",
    "Key": "ozone-test-2853385398/multipartKey4",
    "UploadId": "e7cdc7df-0b38-4aa3-9cf8-6f6b5ca75c3d-111492883753271330"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:35.237" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:35.237" level="INFO">${output} = e7cdc7df-0b38-4aa3-9cf8-6f6b5ca75c3d-111492883753271330</msg>
<status status="PASS" starttime="20231129 08:26:35.210" endtime="20231129 08:26:35.237"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:35.238" level="INFO">e7cdc7df-0b38-4aa3-9cf8-6f6b5ca75c3d-111492883753271330</msg>
<status status="PASS" starttime="20231129 08:26:35.238" endtime="20231129 08:26:35.238"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:35.239" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:35.238" endtime="20231129 08:26:35.239"/>
</kw>
<msg timestamp="20231129 08:26:35.239" level="INFO">${uploadID} = e7cdc7df-0b38-4aa3-9cf8-6f6b5ca75c3d-111492883753271330</msg>
<status status="PASS" starttime="20231129 08:26:35.209" endtime="20231129 08:26:35.239"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:26:35.239" endtime="20231129 08:26:35.239"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:26:35.240" endtime="20231129 08:26:35.240"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:26:35.240" endtime="20231129 08:26:35.240"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey4 --upload-id ${uploadID}</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:35.243" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket erasure --key ozone-test-2853385398/multipartKey4 --upload-id e7cdc7df-0b38-4aa3-9cf8-6f6b5ca75c3d-111492883753271330 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:35.691" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:35.691" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:26:35.241" endtime="20231129 08:26:35.692"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:35.692" level="INFO"/>
<status status="PASS" starttime="20231129 08:26:35.692" endtime="20231129 08:26:35.693"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:35.693" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:35.693" endtime="20231129 08:26:35.693"/>
</kw>
<msg timestamp="20231129 08:26:35.693" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:26:35.241" endtime="20231129 08:26:35.693"/>
</kw>
<msg timestamp="20231129 08:26:35.694" level="INFO">${result} = </msg>
<status status="PASS" starttime="20231129 08:26:35.240" endtime="20231129 08:26:35.694"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:26:34.745" endtime="20231129 08:26:35.694"/>
</test>
<test id="s1-s1-s8-t7" name="Test abort Multipart upload with invalid uploadId" line="207">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231129 08:26:35.696" level="INFO">${randStr} = 5988892345</msg>
<status status="PASS" starttime="20231129 08:26:35.696" endtime="20231129 08:26:35.696"/>
</kw>
<msg timestamp="20231129 08:26:35.696" level="INFO">${random} = ozone-test-5988892345</msg>
<status status="PASS" starttime="20231129 08:26:35.695" endtime="20231129 08:26:35.696"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231129 08:26:35.697" level="INFO">${PREFIX} = ozone-test-5988892345</msg>
<status status="PASS" starttime="20231129 08:26:35.696" endtime="20231129 08:26:35.697"/>
</kw>
<status status="PASS" starttime="20231129 08:26:35.695" endtime="20231129 08:26:35.697"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id "random"</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:35.700" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket erasure --key ozone-test-5988892345/multipartKey5 --upload-id "random" 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:36.169" level="INFO">${rc} = 255</msg>
<msg timestamp="20231129 08:26:36.169" level="INFO">${output} = 
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have bee...</msg>
<status status="PASS" starttime="20231129 08:26:35.698" endtime="20231129 08:26:36.170"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:36.170" level="INFO">
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted or completed.</msg>
<status status="PASS" starttime="20231129 08:26:36.170" endtime="20231129 08:26:36.171"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:36.171" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:36.171" endtime="20231129 08:26:36.171"/>
</kw>
<msg timestamp="20231129 08:26:36.171" level="INFO">${output} = 
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have bee...</msg>
<status status="PASS" starttime="20231129 08:26:35.697" endtime="20231129 08:26:36.171"/>
</kw>
<msg timestamp="20231129 08:26:36.171" level="INFO">${result} = 
An error occurred (NoSuchUpload) when calling the AbortMultipartUpload operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have bee...</msg>
<status status="PASS" starttime="20231129 08:26:35.697" endtime="20231129 08:26:36.171"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:26:35.694" endtime="20231129 08:26:36.172"/>
</test>
<test id="s1-s1-s8-t8" name="Upload part with Incorrect uploadID" line="210">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231129 08:26:36.174" level="INFO">${randStr} = 6983299519</msg>
<status status="PASS" starttime="20231129 08:26:36.174" endtime="20231129 08:26:36.174"/>
</kw>
<msg timestamp="20231129 08:26:36.174" level="INFO">${random} = ozone-test-6983299519</msg>
<status status="PASS" starttime="20231129 08:26:36.173" endtime="20231129 08:26:36.174"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231129 08:26:36.175" level="INFO">${PREFIX} = ozone-test-6983299519</msg>
<status status="PASS" starttime="20231129 08:26:36.175" endtime="20231129 08:26:36.175"/>
</kw>
<status status="PASS" starttime="20231129 08:26:36.173" endtime="20231129 08:26:36.175"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:36.178" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket erasure --key ozone-test-6983299519/multipartKey 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:36.624" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:36.624" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-6983299519/multipartKey",
    "UploadId": "68a7b724-7046-481c-b7d9-9faf6c153fee-111492883846332451"
}</msg>
<status status="PASS" starttime="20231129 08:26:36.177" endtime="20231129 08:26:36.624"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:36.625" level="INFO">{
    "Bucket": "erasure",
    "Key": "ozone-test-6983299519/multipartKey",
    "UploadId": "68a7b724-7046-481c-b7d9-9faf6c153fee-111492883846332451"
}</msg>
<status status="PASS" starttime="20231129 08:26:36.625" endtime="20231129 08:26:36.625"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:36.626" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:36.626" endtime="20231129 08:26:36.626"/>
</kw>
<status status="PASS" starttime="20231129 08:26:36.176" endtime="20231129 08:26:36.626"/>
</kw>
<msg timestamp="20231129 08:26:36.626" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:36.176" endtime="20231129 08:26:36.626"/>
</kw>
<msg timestamp="20231129 08:26:36.626" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-6983299519/multipartKey",
    "UploadId": "68a7b724-7046-481c-b7d9-9faf6c153fee-111492883846332451"
}</msg>
<status status="PASS" starttime="20231129 08:26:36.176" endtime="20231129 08:26:36.626"/>
</kw>
<msg timestamp="20231129 08:26:36.627" level="INFO">${result} = {
    "Bucket": "erasure",
    "Key": "ozone-test-6983299519/multipartKey",
    "UploadId": "68a7b724-7046-481c-b7d9-9faf6c153fee-111492883846332451"
}</msg>
<status status="PASS" starttime="20231129 08:26:36.175" endtime="20231129 08:26:36.627"/>
</kw>
<kw name="Execute" library="os">
<arg>echo "Multipart upload" &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:36.629" level="INFO">Running command 'echo "Multipart upload" &gt; /tmp/testfile'.</msg>
<msg timestamp="20231129 08:26:36.630" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:36.630" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:26:36.628" endtime="20231129 08:26:36.630"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:36.631" level="INFO"/>
<status status="PASS" starttime="20231129 08:26:36.631" endtime="20231129 08:26:36.631"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:36.632" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:36.631" endtime="20231129 08:26:36.632"/>
</kw>
<status status="PASS" starttime="20231129 08:26:36.627" endtime="20231129 08:26:36.632"/>
</kw>
<msg timestamp="20231129 08:26:36.632" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:36.627" endtime="20231129 08:26:36.632"/>
</kw>
<status status="PASS" starttime="20231129 08:26:36.627" endtime="20231129 08:26:36.632"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey --part-number 1 --body /tmp/testfile --upload-id "random"</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:36.634" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket erasure --key ozone-test-6983299519/multipartKey --part-number 1 --body /tmp/testfile --upload-id "random" 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:37.086" level="INFO">${rc} = 255</msg>
<msg timestamp="20231129 08:26:37.086" level="INFO">${output} = 
An error occurred (NoSuchUpload) when calling the UploadPart operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted ...</msg>
<status status="PASS" starttime="20231129 08:26:36.633" endtime="20231129 08:26:37.086"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:37.087" level="INFO">
An error occurred (NoSuchUpload) when calling the UploadPart operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted or completed.</msg>
<status status="PASS" starttime="20231129 08:26:37.087" endtime="20231129 08:26:37.087"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:37.088" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:37.087" endtime="20231129 08:26:37.088"/>
</kw>
<msg timestamp="20231129 08:26:37.088" level="INFO">${output} = 
An error occurred (NoSuchUpload) when calling the UploadPart operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted ...</msg>
<status status="PASS" starttime="20231129 08:26:36.633" endtime="20231129 08:26:37.088"/>
</kw>
<msg timestamp="20231129 08:26:37.088" level="INFO">${result} = 
An error occurred (NoSuchUpload) when calling the UploadPart operation: The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted ...</msg>
<status status="PASS" starttime="20231129 08:26:36.632" endtime="20231129 08:26:37.089"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchUpload</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:26:37.089" endtime="20231129 08:26:37.089"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:26:36.172" endtime="20231129 08:26:37.089"/>
</test>
<test id="s1-s1-s8-t9" name="Test list parts" line="216">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231129 08:26:37.092" level="INFO">${randStr} = 8828959507</msg>
<status status="PASS" starttime="20231129 08:26:37.091" endtime="20231129 08:26:37.092"/>
</kw>
<msg timestamp="20231129 08:26:37.092" level="INFO">${random} = ozone-test-8828959507</msg>
<status status="PASS" starttime="20231129 08:26:37.091" endtime="20231129 08:26:37.092"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231129 08:26:37.093" level="INFO">${PREFIX} = ozone-test-8828959507</msg>
<status status="PASS" starttime="20231129 08:26:37.092" endtime="20231129 08:26:37.093"/>
</kw>
<status status="PASS" starttime="20231129 08:26:37.090" endtime="20231129 08:26:37.093"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey5</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:37.096" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket erasure --key ozone-test-8828959507/multipartKey5 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:37.545" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:37.546" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-8828959507/multipartKey5",
    "UploadId": "a478d6ce-2f29-44ba-8a1a-28d678de45b5-111492883906691109"
}</msg>
<status status="PASS" starttime="20231129 08:26:37.094" endtime="20231129 08:26:37.546"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:37.547" level="INFO">{
    "Bucket": "erasure",
    "Key": "ozone-test-8828959507/multipartKey5",
    "UploadId": "a478d6ce-2f29-44ba-8a1a-28d678de45b5-111492883906691109"
}</msg>
<status status="PASS" starttime="20231129 08:26:37.546" endtime="20231129 08:26:37.547"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:37.547" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:37.547" endtime="20231129 08:26:37.547"/>
</kw>
<status status="PASS" starttime="20231129 08:26:37.094" endtime="20231129 08:26:37.547"/>
</kw>
<msg timestamp="20231129 08:26:37.547" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:37.094" endtime="20231129 08:26:37.547"/>
</kw>
<msg timestamp="20231129 08:26:37.548" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-8828959507/multipartKey5",
    "UploadId": "a478d6ce-2f29-44ba-8a1a-28d678de45b5-111492883906691109"
}</msg>
<status status="PASS" starttime="20231129 08:26:37.093" endtime="20231129 08:26:37.548"/>
</kw>
<msg timestamp="20231129 08:26:37.548" level="INFO">${result} = {
    "Bucket": "erasure",
    "Key": "ozone-test-8828959507/multipartKey5",
    "UploadId": "a478d6ce-2f29-44ba-8a1a-28d678de45b5-111492883906691109"
}</msg>
<status status="PASS" starttime="20231129 08:26:37.093" endtime="20231129 08:26:37.548"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:37.550" level="INFO">Running command 'echo '{
    "Bucket": "erasure",
    "Key": "ozone-test-8828959507/multipartKey5",
    "UploadId": "a478d6ce-2f29-44ba-8a1a-28d678de45b5-111492883906691109"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:37.576" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:37.576" level="INFO">${output} = a478d6ce-2f29-44ba-8a1a-28d678de45b5-111492883906691109</msg>
<status status="PASS" starttime="20231129 08:26:37.549" endtime="20231129 08:26:37.576"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:37.577" level="INFO">a478d6ce-2f29-44ba-8a1a-28d678de45b5-111492883906691109</msg>
<status status="PASS" starttime="20231129 08:26:37.576" endtime="20231129 08:26:37.577"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:37.577" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:37.577" endtime="20231129 08:26:37.577"/>
</kw>
<msg timestamp="20231129 08:26:37.577" level="INFO">${uploadID} = a478d6ce-2f29-44ba-8a1a-28d678de45b5-111492883906691109</msg>
<status status="PASS" starttime="20231129 08:26:37.548" endtime="20231129 08:26:37.578"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:26:37.578" endtime="20231129 08:26:37.578"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multipartKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:26:37.578" endtime="20231129 08:26:37.578"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:26:37.578" endtime="20231129 08:26:37.579"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>5</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>5</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:37.582" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:37.600" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:37.600" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:26:37.581" endtime="20231129 08:26:37.600"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:37.601" level="INFO"/>
<status status="PASS" starttime="20231129 08:26:37.600" endtime="20231129 08:26:37.601"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:37.601" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:37.601" endtime="20231129 08:26:37.601"/>
</kw>
<status status="PASS" starttime="20231129 08:26:37.580" endtime="20231129 08:26:37.601"/>
</kw>
<msg timestamp="20231129 08:26:37.601" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:37.580" endtime="20231129 08:26:37.601"/>
</kw>
<status status="PASS" starttime="20231129 08:26:37.580" endtime="20231129 08:26:37.602"/>
</kw>
<status status="PASS" starttime="20231129 08:26:37.579" endtime="20231129 08:26:37.602"/>
</kw>
<status status="PASS" starttime="20231129 08:26:37.579" endtime="20231129 08:26:37.602"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --part-number 1 --body /tmp/part1 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:37.605" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket erasure --key ozone-test-8828959507/multipartKey5 --part-number 1 --body /tmp/part1 --upload-id a478d6ce-2f29-44ba-8a1a-28d678de45b5-111492883906691109 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:38.213" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:38.213" level="INFO">${output} = {
    "ETag": "/s3v/erasure/ozone-test-8828959507/multipartKey5-a478d6ce-2f29-44ba-8a1a-28d678de45b5-111492883906691109-1"
}</msg>
<status status="PASS" starttime="20231129 08:26:37.603" endtime="20231129 08:26:38.213"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:38.214" level="INFO">{
    "ETag": "/s3v/erasure/ozone-test-8828959507/multipartKey5-a478d6ce-2f29-44ba-8a1a-28d678de45b5-111492883906691109-1"
}</msg>
<status status="PASS" starttime="20231129 08:26:38.213" endtime="20231129 08:26:38.214"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:38.214" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:38.214" endtime="20231129 08:26:38.214"/>
</kw>
<status status="PASS" starttime="20231129 08:26:37.603" endtime="20231129 08:26:38.214"/>
</kw>
<msg timestamp="20231129 08:26:38.214" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:37.603" endtime="20231129 08:26:38.215"/>
</kw>
<msg timestamp="20231129 08:26:38.215" level="INFO">${output} = {
    "ETag": "/s3v/erasure/ozone-test-8828959507/multipartKey5-a478d6ce-2f29-44ba-8a1a-28d678de45b5-111492883906691109-1"
}</msg>
<status status="PASS" starttime="20231129 08:26:37.602" endtime="20231129 08:26:38.215"/>
</kw>
<msg timestamp="20231129 08:26:38.215" level="INFO">${result} = {
    "ETag": "/s3v/erasure/ozone-test-8828959507/multipartKey5-a478d6ce-2f29-44ba-8a1a-28d678de45b5-111492883906691109-1"
}</msg>
<status status="PASS" starttime="20231129 08:26:37.602" endtime="20231129 08:26:38.215"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:38.217" level="INFO">Running command 'echo '{
    "ETag": "/s3v/erasure/ozone-test-8828959507/multipartKey5-a478d6ce-2f29-44ba-8a1a-28d678de45b5-111492883906691109-1"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:38.254" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:38.254" level="INFO">${output} = /s3v/erasure/ozone-test-8828959507/multipartKey5-a478d6ce-2f29-44ba-8a1a-28d678de45b5-111492883906691109-1</msg>
<status status="PASS" starttime="20231129 08:26:38.216" endtime="20231129 08:26:38.254"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:38.255" level="INFO">/s3v/erasure/ozone-test-8828959507/multipartKey5-a478d6ce-2f29-44ba-8a1a-28d678de45b5-111492883906691109-1</msg>
<status status="PASS" starttime="20231129 08:26:38.255" endtime="20231129 08:26:38.255"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:38.256" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:38.255" endtime="20231129 08:26:38.256"/>
</kw>
<msg timestamp="20231129 08:26:38.256" level="INFO">${eTag1} = /s3v/erasure/ozone-test-8828959507/multipartKey5-a478d6ce-2f29-44ba-8a1a-28d678de45b5-111492883906691109-1</msg>
<status status="PASS" starttime="20231129 08:26:38.215" endtime="20231129 08:26:38.256"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:26:38.256" endtime="20231129 08:26:38.257"/>
</kw>
<kw name="Execute" library="os">
<arg>echo "Part2" &gt; /tmp/part2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:38.259" level="INFO">Running command 'echo "Part2" &gt; /tmp/part2'.</msg>
<msg timestamp="20231129 08:26:38.260" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:38.261" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:26:38.258" endtime="20231129 08:26:38.261"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:38.261" level="INFO"/>
<status status="PASS" starttime="20231129 08:26:38.261" endtime="20231129 08:26:38.261"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:38.262" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:38.261" endtime="20231129 08:26:38.262"/>
</kw>
<status status="PASS" starttime="20231129 08:26:38.257" endtime="20231129 08:26:38.262"/>
</kw>
<msg timestamp="20231129 08:26:38.262" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:38.257" endtime="20231129 08:26:38.262"/>
</kw>
<status status="PASS" starttime="20231129 08:26:38.257" endtime="20231129 08:26:38.262"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --part-number 2 --body /tmp/part2 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:38.265" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part --bucket erasure --key ozone-test-8828959507/multipartKey5 --part-number 2 --body /tmp/part2 --upload-id a478d6ce-2f29-44ba-8a1a-28d678de45b5-111492883906691109 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:38.767" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:38.767" level="INFO">${output} = {
    "ETag": "/s3v/erasure/ozone-test-8828959507/multipartKey5-a478d6ce-2f29-44ba-8a1a-28d678de45b5-111492883906691109-2"
}</msg>
<status status="PASS" starttime="20231129 08:26:38.264" endtime="20231129 08:26:38.767"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:38.768" level="INFO">{
    "ETag": "/s3v/erasure/ozone-test-8828959507/multipartKey5-a478d6ce-2f29-44ba-8a1a-28d678de45b5-111492883906691109-2"
}</msg>
<status status="PASS" starttime="20231129 08:26:38.767" endtime="20231129 08:26:38.768"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:38.768" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:38.768" endtime="20231129 08:26:38.768"/>
</kw>
<status status="PASS" starttime="20231129 08:26:38.264" endtime="20231129 08:26:38.768"/>
</kw>
<msg timestamp="20231129 08:26:38.768" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:38.263" endtime="20231129 08:26:38.769"/>
</kw>
<msg timestamp="20231129 08:26:38.769" level="INFO">${output} = {
    "ETag": "/s3v/erasure/ozone-test-8828959507/multipartKey5-a478d6ce-2f29-44ba-8a1a-28d678de45b5-111492883906691109-2"
}</msg>
<status status="PASS" starttime="20231129 08:26:38.263" endtime="20231129 08:26:38.769"/>
</kw>
<msg timestamp="20231129 08:26:38.769" level="INFO">${result} = {
    "ETag": "/s3v/erasure/ozone-test-8828959507/multipartKey5-a478d6ce-2f29-44ba-8a1a-28d678de45b5-111492883906691109-2"
}</msg>
<status status="PASS" starttime="20231129 08:26:38.262" endtime="20231129 08:26:38.769"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:38.771" level="INFO">Running command 'echo '{
    "ETag": "/s3v/erasure/ozone-test-8828959507/multipartKey5-a478d6ce-2f29-44ba-8a1a-28d678de45b5-111492883906691109-2"
}' | jq -r '.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:38.796" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:38.797" level="INFO">${output} = /s3v/erasure/ozone-test-8828959507/multipartKey5-a478d6ce-2f29-44ba-8a1a-28d678de45b5-111492883906691109-2</msg>
<status status="PASS" starttime="20231129 08:26:38.770" endtime="20231129 08:26:38.797"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:38.797" level="INFO">/s3v/erasure/ozone-test-8828959507/multipartKey5-a478d6ce-2f29-44ba-8a1a-28d678de45b5-111492883906691109-2</msg>
<status status="PASS" starttime="20231129 08:26:38.797" endtime="20231129 08:26:38.797"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:38.798" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:38.798" endtime="20231129 08:26:38.798"/>
</kw>
<msg timestamp="20231129 08:26:38.798" level="INFO">${eTag2} = /s3v/erasure/ozone-test-8828959507/multipartKey5-a478d6ce-2f29-44ba-8a1a-28d678de45b5-111492883906691109-2</msg>
<status status="PASS" starttime="20231129 08:26:38.769" endtime="20231129 08:26:38.798"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:26:38.798" endtime="20231129 08:26:38.799"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-parts --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id ${uploadID}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:38.802" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-parts --bucket erasure --key ozone-test-8828959507/multipartKey5 --upload-id a478d6ce-2f29-44ba-8a1a-28d678de45b5-111492883906691109 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:39.268" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:39.268" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2023-11-29T08:26:38.154Z",
            "ETag": "/s3v/erasure/ozone-test-8828959507/multipartKey5-a478d6ce-2f29-44ba...</msg>
<status status="PASS" starttime="20231129 08:26:38.800" endtime="20231129 08:26:39.268"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:39.269" level="INFO">{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2023-11-29T08:26:38.154Z",
            "ETag": "/s3v/erasure/ozone-test-8828959507/multipartKey5-a478d6ce-2f29-44ba-8a1a-28d678de45b5-111492883906691109-1",
            "Size": 5242880
        },
        {
            "PartNumber": 2,
            "LastModified": "2023-11-29T08:26:38.718Z",
            "ETag": "/s3v/erasure/ozone-test-8828959507/multipartKey5-a478d6ce-2f29-44ba-8a1a-28d678de45b5-111492883906691109-2",
            "Size": 6
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD"
}</msg>
<status status="PASS" starttime="20231129 08:26:39.269" endtime="20231129 08:26:39.270"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:39.270" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:39.270" endtime="20231129 08:26:39.270"/>
</kw>
<status status="PASS" starttime="20231129 08:26:38.800" endtime="20231129 08:26:39.270"/>
</kw>
<msg timestamp="20231129 08:26:39.270" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:38.800" endtime="20231129 08:26:39.270"/>
</kw>
<msg timestamp="20231129 08:26:39.271" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2023-11-29T08:26:38.154Z",
            "ETag": "/s3v/erasure/ozone-test-8828959507/multipartKey5-a478d6ce-2f29-44ba...</msg>
<status status="PASS" starttime="20231129 08:26:38.799" endtime="20231129 08:26:39.271"/>
</kw>
<msg timestamp="20231129 08:26:39.271" level="INFO">${result} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2023-11-29T08:26:38.154Z",
            "ETag": "/s3v/erasure/ozone-test-8828959507/multipartKey5-a478d6ce-2f29-44ba...</msg>
<status status="PASS" starttime="20231129 08:26:38.799" endtime="20231129 08:26:39.271"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${part1}</var>
<arg>echo '${result}' | jq -r '.Parts[0].ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:39.273" level="INFO">Running command 'echo '{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2023-11-29T08:26:38.154Z",
            "ETag": "/s3v/erasure/ozone-test-8828959507/multipartKey5-a478d6ce-2f29-44ba-8a1a-28d678de45b5-111492883906691109-1",
            "Size": 5242880
        },
        {
            "PartNumber": 2,
            "LastModified": "2023-11-29T08:26:38.718Z",
            "ETag": "/s3v/erasure/ozone-test-8828959507/multipartKey5-a478d6ce-2f29-44ba-8a1a-28d678de45b5-111492883906691109-2",
            "Size": 6
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD"
}' | jq -r '.Parts[0].ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:39.307" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:39.307" level="INFO">${output} = /s3v/erasure/ozone-test-8828959507/multipartKey5-a478d6ce-2f29-44ba-8a1a-28d678de45b5-111492883906691109-1</msg>
<status status="PASS" starttime="20231129 08:26:39.271" endtime="20231129 08:26:39.307"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:39.308" level="INFO">/s3v/erasure/ozone-test-8828959507/multipartKey5-a478d6ce-2f29-44ba-8a1a-28d678de45b5-111492883906691109-1</msg>
<status status="PASS" starttime="20231129 08:26:39.308" endtime="20231129 08:26:39.308"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:39.309" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:39.308" endtime="20231129 08:26:39.309"/>
</kw>
<msg timestamp="20231129 08:26:39.309" level="INFO">${part1} = /s3v/erasure/ozone-test-8828959507/multipartKey5-a478d6ce-2f29-44ba-8a1a-28d678de45b5-111492883906691109-1</msg>
<status status="PASS" starttime="20231129 08:26:39.271" endtime="20231129 08:26:39.309"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${part2}</var>
<arg>echo '${result}' | jq -r '.Parts[1].ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:39.311" level="INFO">Running command 'echo '{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2023-11-29T08:26:38.154Z",
            "ETag": "/s3v/erasure/ozone-test-8828959507/multipartKey5-a478d6ce-2f29-44ba-8a1a-28d678de45b5-111492883906691109-1",
            "Size": 5242880
        },
        {
            "PartNumber": 2,
            "LastModified": "2023-11-29T08:26:38.718Z",
            "ETag": "/s3v/erasure/ozone-test-8828959507/multipartKey5-a478d6ce-2f29-44ba-8a1a-28d678de45b5-111492883906691109-2",
            "Size": 6
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD"
}' | jq -r '.Parts[1].ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:39.337" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:39.337" level="INFO">${output} = /s3v/erasure/ozone-test-8828959507/multipartKey5-a478d6ce-2f29-44ba-8a1a-28d678de45b5-111492883906691109-2</msg>
<status status="PASS" starttime="20231129 08:26:39.310" endtime="20231129 08:26:39.337"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:39.338" level="INFO">/s3v/erasure/ozone-test-8828959507/multipartKey5-a478d6ce-2f29-44ba-8a1a-28d678de45b5-111492883906691109-2</msg>
<status status="PASS" starttime="20231129 08:26:39.338" endtime="20231129 08:26:39.338"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:39.338" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:39.338" endtime="20231129 08:26:39.339"/>
</kw>
<msg timestamp="20231129 08:26:39.339" level="INFO">${part2} = /s3v/erasure/ozone-test-8828959507/multipartKey5-a478d6ce-2f29-44ba-8a1a-28d678de45b5-111492883906691109-2</msg>
<status status="PASS" starttime="20231129 08:26:39.309" endtime="20231129 08:26:39.339"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${part1}</arg>
<arg>${eTag1}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231129 08:26:39.339" endtime="20231129 08:26:39.339"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${part2}</arg>
<arg>${eTag2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:26:39.339" endtime="20231129 08:26:39.340"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:26:39.340" endtime="20231129 08:26:39.340"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-parts --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id ${uploadID} --max-items 1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:39.343" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-parts --bucket erasure --key ozone-test-8828959507/multipartKey5 --upload-id a478d6ce-2f29-44ba-8a1a-28d678de45b5-111492883906691109 --max-items 1 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:39.793" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:39.793" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2023-11-29T08:26:38.154Z",
            "ETag": "/s3v/erasure/ozone-test-8828959507/multipartKey5-a478d6ce-2f29-44ba...</msg>
<status status="PASS" starttime="20231129 08:26:39.342" endtime="20231129 08:26:39.793"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:39.794" level="INFO">{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2023-11-29T08:26:38.154Z",
            "ETag": "/s3v/erasure/ozone-test-8828959507/multipartKey5-a478d6ce-2f29-44ba-8a1a-28d678de45b5-111492883906691109-1",
            "Size": 5242880
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD",
    "NextToken": "eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0="
}</msg>
<status status="PASS" starttime="20231129 08:26:39.793" endtime="20231129 08:26:39.794"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:39.794" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:39.794" endtime="20231129 08:26:39.795"/>
</kw>
<status status="PASS" starttime="20231129 08:26:39.341" endtime="20231129 08:26:39.795"/>
</kw>
<msg timestamp="20231129 08:26:39.795" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:39.341" endtime="20231129 08:26:39.795"/>
</kw>
<msg timestamp="20231129 08:26:39.795" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2023-11-29T08:26:38.154Z",
            "ETag": "/s3v/erasure/ozone-test-8828959507/multipartKey5-a478d6ce-2f29-44ba...</msg>
<status status="PASS" starttime="20231129 08:26:39.341" endtime="20231129 08:26:39.795"/>
</kw>
<msg timestamp="20231129 08:26:39.795" level="INFO">${result} = {
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2023-11-29T08:26:38.154Z",
            "ETag": "/s3v/erasure/ozone-test-8828959507/multipartKey5-a478d6ce-2f29-44ba...</msg>
<status status="PASS" starttime="20231129 08:26:39.340" endtime="20231129 08:26:39.795"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${part1}</var>
<arg>echo '${result}' | jq -r '.Parts[0].ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:39.797" level="INFO">Running command 'echo '{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2023-11-29T08:26:38.154Z",
            "ETag": "/s3v/erasure/ozone-test-8828959507/multipartKey5-a478d6ce-2f29-44ba-8a1a-28d678de45b5-111492883906691109-1",
            "Size": 5242880
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD",
    "NextToken": "eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0="
}' | jq -r '.Parts[0].ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:39.823" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:39.823" level="INFO">${output} = /s3v/erasure/ozone-test-8828959507/multipartKey5-a478d6ce-2f29-44ba-8a1a-28d678de45b5-111492883906691109-1</msg>
<status status="PASS" starttime="20231129 08:26:39.796" endtime="20231129 08:26:39.823"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:39.824" level="INFO">/s3v/erasure/ozone-test-8828959507/multipartKey5-a478d6ce-2f29-44ba-8a1a-28d678de45b5-111492883906691109-1</msg>
<status status="PASS" starttime="20231129 08:26:39.824" endtime="20231129 08:26:39.824"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:39.825" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:39.824" endtime="20231129 08:26:39.825"/>
</kw>
<msg timestamp="20231129 08:26:39.825" level="INFO">${part1} = /s3v/erasure/ozone-test-8828959507/multipartKey5-a478d6ce-2f29-44ba-8a1a-28d678de45b5-111492883906691109-1</msg>
<status status="PASS" starttime="20231129 08:26:39.795" endtime="20231129 08:26:39.825"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${token}</var>
<arg>echo '${result}' | jq -r '.NextToken'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:39.827" level="INFO">Running command 'echo '{
    "Parts": [
        {
            "PartNumber": 1,
            "LastModified": "2023-11-29T08:26:38.154Z",
            "ETag": "/s3v/erasure/ozone-test-8828959507/multipartKey5-a478d6ce-2f29-44ba-8a1a-28d678de45b5-111492883906691109-1",
            "Size": 5242880
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD",
    "NextToken": "eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0="
}' | jq -r '.NextToken' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:39.853" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:39.853" level="INFO">${output} = eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0=</msg>
<status status="PASS" starttime="20231129 08:26:39.826" endtime="20231129 08:26:39.853"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:39.854" level="INFO">eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0=</msg>
<status status="PASS" starttime="20231129 08:26:39.854" endtime="20231129 08:26:39.854"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:39.854" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:39.854" endtime="20231129 08:26:39.855"/>
</kw>
<msg timestamp="20231129 08:26:39.855" level="INFO">${token} = eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0=</msg>
<status status="PASS" starttime="20231129 08:26:39.825" endtime="20231129 08:26:39.855"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${part1}</arg>
<arg>${eTag1}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231129 08:26:39.855" endtime="20231129 08:26:39.855"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:26:39.855" endtime="20231129 08:26:39.856"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-parts --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id ${uploadID} --max-items 1 --starting-token ${token}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:39.859" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-parts --bucket erasure --key ozone-test-8828959507/multipartKey5 --upload-id a478d6ce-2f29-44ba-8a1a-28d678de45b5-111492883906691109 --max-items 1 --starting-token eyJQYXJ0TnVtYmVyTWFya2VyIjogbnVsbCwgImJvdG9fdHJ1bmNhdGVfYW1vdW50IjogMX0= 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:40.304" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:40.304" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 2,
            "LastModified": "2023-11-29T08:26:38.718Z",
            "ETag": "/s3v/erasure/ozone-test-8828959507/multipartKey5-a478d6ce-2f29-44ba...</msg>
<status status="PASS" starttime="20231129 08:26:39.858" endtime="20231129 08:26:40.304"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:40.305" level="INFO">{
    "Parts": [
        {
            "PartNumber": 2,
            "LastModified": "2023-11-29T08:26:38.718Z",
            "ETag": "/s3v/erasure/ozone-test-8828959507/multipartKey5-a478d6ce-2f29-44ba-8a1a-28d678de45b5-111492883906691109-2",
            "Size": 6
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD"
}</msg>
<status status="PASS" starttime="20231129 08:26:40.305" endtime="20231129 08:26:40.305"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:40.306" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:40.306" endtime="20231129 08:26:40.306"/>
</kw>
<status status="PASS" starttime="20231129 08:26:39.857" endtime="20231129 08:26:40.306"/>
</kw>
<msg timestamp="20231129 08:26:40.306" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:39.857" endtime="20231129 08:26:40.306"/>
</kw>
<msg timestamp="20231129 08:26:40.306" level="INFO">${output} = {
    "Parts": [
        {
            "PartNumber": 2,
            "LastModified": "2023-11-29T08:26:38.718Z",
            "ETag": "/s3v/erasure/ozone-test-8828959507/multipartKey5-a478d6ce-2f29-44ba...</msg>
<status status="PASS" starttime="20231129 08:26:39.856" endtime="20231129 08:26:40.306"/>
</kw>
<msg timestamp="20231129 08:26:40.307" level="INFO">${result} = {
    "Parts": [
        {
            "PartNumber": 2,
            "LastModified": "2023-11-29T08:26:38.718Z",
            "ETag": "/s3v/erasure/ozone-test-8828959507/multipartKey5-a478d6ce-2f29-44ba...</msg>
<status status="PASS" starttime="20231129 08:26:39.856" endtime="20231129 08:26:40.307"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${part2}</var>
<arg>echo '${result}' | jq -r '.Parts[0].ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:40.309" level="INFO">Running command 'echo '{
    "Parts": [
        {
            "PartNumber": 2,
            "LastModified": "2023-11-29T08:26:38.718Z",
            "ETag": "/s3v/erasure/ozone-test-8828959507/multipartKey5-a478d6ce-2f29-44ba-8a1a-28d678de45b5-111492883906691109-2",
            "Size": 6
        }
    ],
    "ChecksumAlgorithm": null,
    "Initiator": null,
    "Owner": null,
    "StorageClass": "STANDARD"
}' | jq -r '.Parts[0].ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:40.335" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:40.335" level="INFO">${output} = /s3v/erasure/ozone-test-8828959507/multipartKey5-a478d6ce-2f29-44ba-8a1a-28d678de45b5-111492883906691109-2</msg>
<status status="PASS" starttime="20231129 08:26:40.307" endtime="20231129 08:26:40.335"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:40.336" level="INFO">/s3v/erasure/ozone-test-8828959507/multipartKey5-a478d6ce-2f29-44ba-8a1a-28d678de45b5-111492883906691109-2</msg>
<status status="PASS" starttime="20231129 08:26:40.336" endtime="20231129 08:26:40.336"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:40.337" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:40.337" endtime="20231129 08:26:40.337"/>
</kw>
<msg timestamp="20231129 08:26:40.337" level="INFO">${part2} = /s3v/erasure/ozone-test-8828959507/multipartKey5-a478d6ce-2f29-44ba-8a1a-28d678de45b5-111492883906691109-2</msg>
<status status="PASS" starttime="20231129 08:26:40.307" endtime="20231129 08:26:40.337"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${part2}</arg>
<arg>${eTag2}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231129 08:26:40.337" endtime="20231129 08:26:40.338"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:26:40.338" endtime="20231129 08:26:40.338"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>abort-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/multipartKey5 --upload-id ${uploadID}</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:40.341" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 abort-multipart-upload --bucket erasure --key ozone-test-8828959507/multipartKey5 --upload-id a478d6ce-2f29-44ba-8a1a-28d678de45b5-111492883906691109 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:40.794" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:40.794" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:26:40.339" endtime="20231129 08:26:40.794"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:40.795" level="INFO"/>
<status status="PASS" starttime="20231129 08:26:40.794" endtime="20231129 08:26:40.795"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:40.796" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:40.795" endtime="20231129 08:26:40.796"/>
</kw>
<msg timestamp="20231129 08:26:40.796" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:26:40.339" endtime="20231129 08:26:40.796"/>
</kw>
<msg timestamp="20231129 08:26:40.796" level="INFO">${result} = </msg>
<status status="PASS" starttime="20231129 08:26:40.338" endtime="20231129 08:26:40.796"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:26:37.090" endtime="20231129 08:26:40.796"/>
</test>
<test id="s1-s1-s8-t10" name="Test Multipart Upload with the simplified aws s3 cp API" line="258">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231129 08:26:40.799" level="INFO">${randStr} = 3703413038</msg>
<status status="PASS" starttime="20231129 08:26:40.798" endtime="20231129 08:26:40.799"/>
</kw>
<msg timestamp="20231129 08:26:40.799" level="INFO">${random} = ozone-test-3703413038</msg>
<status status="PASS" starttime="20231129 08:26:40.798" endtime="20231129 08:26:40.799"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231129 08:26:40.799" level="INFO">${PREFIX} = ozone-test-3703413038</msg>
<status status="PASS" starttime="20231129 08:26:40.799" endtime="20231129 08:26:40.799"/>
</kw>
<status status="PASS" starttime="20231129 08:26:40.798" endtime="20231129 08:26:40.799"/>
</kw>
<kw name="Create Random file">
<arg>22</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:40.802" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=22 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:40.874" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:40.874" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:26:40.801" endtime="20231129 08:26:40.874"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:40.875" level="INFO"/>
<status status="PASS" starttime="20231129 08:26:40.875" endtime="20231129 08:26:40.875"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:40.876" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:40.875" endtime="20231129 08:26:40.876"/>
</kw>
<status status="PASS" starttime="20231129 08:26:40.801" endtime="20231129 08:26:40.876"/>
</kw>
<msg timestamp="20231129 08:26:40.876" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:40.800" endtime="20231129 08:26:40.876"/>
</kw>
<status status="PASS" starttime="20231129 08:26:40.800" endtime="20231129 08:26:40.876"/>
</kw>
<status status="PASS" starttime="20231129 08:26:40.800" endtime="20231129 08:26:40.876"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>cp /tmp/part1 s3://${BUCKET}/mpyawscli</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:40.880" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/part1 s3://erasure/mpyawscli 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:41.888" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:41.888" level="INFO">${output} = Completed 256.0 KiB/22.0 MiB (3.7 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (7.1 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (10.5 MiB/s) with 1 file(s) remaining
C...</msg>
<status status="PASS" starttime="20231129 08:26:40.878" endtime="20231129 08:26:41.888"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:41.889" level="INFO">Completed 256.0 KiB/22.0 MiB (3.7 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (7.1 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (10.5 MiB/s) with 1 file(s) remaining
Completed 1.0 MiB/22.0 MiB (12.6 MiB/s) with 1 file(s) remaining  
Completed 1.2 MiB/22.0 MiB (15.6 MiB/s) with 1 file(s) remaining  
Completed 1.5 MiB/22.0 MiB (18.6 MiB/s) with 1 file(s) remaining  
Completed 1.8 MiB/22.0 MiB (21.5 MiB/s) with 1 file(s) remaining  
Completed 2.0 MiB/22.0 MiB (23.9 MiB/s) with 1 file(s) remaining  
Completed 2.2 MiB/22.0 MiB (26.7 MiB/s) with 1 file(s) remaining  
Completed 2.5 MiB/22.0 MiB (29.3 MiB/s) with 1 file(s) remaining  
Completed 2.8 MiB/22.0 MiB (31.9 MiB/s) with 1 file(s) remaining  
Completed 3.0 MiB/22.0 MiB (33.1 MiB/s) with 1 file(s) remaining  
Completed 3.2 MiB/22.0 MiB (35.2 MiB/s) with 1 file(s) remaining  
Completed 3.5 MiB/22.0 MiB (37.6 MiB/s) with 1 file(s) remaining  
Completed 3.8 MiB/22.0 MiB (40.0 MiB/s) with 1 file(s) remaining  
Completed 4.0 MiB/22.0 MiB (42.3 MiB/s) with 1 file(s) remaining  
Completed 4.2 MiB/22.0 MiB (44.8 MiB/s) with 1 file(s) remaining  
Completed 4.5 MiB/22.0 MiB (47.2 MiB/s) with 1 file(s) remaining  
Completed 4.8 MiB/22.0 MiB (49.6 MiB/s) with 1 file(s) remaining  
Completed 5.0 MiB/22.0 MiB (52.0 MiB/s) with 1 file(s) remaining  
Completed 5.2 MiB/22.0 MiB (54.3 MiB/s) with 1 file(s) remaining  
Completed 5.5 MiB/22.0 MiB (56.7 MiB/s) with 1 file(s) remaining  
Completed 5.8 MiB/22.0 MiB (58.4 MiB/s) with 1 file(s) remaining  
Completed 6.0 MiB/22.0 MiB (60.2 MiB/s) with 1 file(s) remaining  
Completed 6.2 MiB/22.0 MiB (62.1 MiB/s) with 1 file(s) remaining  
Completed 6.5 MiB/22.0 MiB (63.9 MiB/s) with 1 file(s) remaining  
Completed 6.8 MiB/22.0 MiB (65.9 MiB/s) with 1 file(s) remaining  
Completed 7.0 MiB/22.0 MiB (62.6 MiB/s) with 1 file(s) remaining  
Completed 7.2 MiB/22.0 MiB (64.5 MiB/s) with 1 file(s) remaining  
Completed 7.5 MiB/22.0 MiB (66.2 MiB/s) with 1 file(s) remaining  
Completed 7.8 MiB/22.0 MiB (67.5 MiB/s) with 1 file(s) remaining  
Completed 8.0 MiB/22.0 MiB (69.4 MiB/s) with 1 file(s) remaining  
Completed 8.2 MiB/22.0 MiB (71.2 MiB/s) with 1 file(s) remaining  
Completed 8.5 MiB/22.0 MiB (72.8 MiB/s) with 1 file(s) remaining  
Completed 8.8 MiB/22.0 MiB (74.0 MiB/s) with 1 file(s) remaining  
Completed 9.0 MiB/22.0 MiB (75.0 MiB/s) with 1 file(s) remaining  
Completed 9.2 MiB/22.0 MiB (76.7 MiB/s) with 1 file(s) remaining  
Completed 9.5 MiB/22.0 MiB (78.3 MiB/s) with 1 file(s) remaining  
Completed 9.8 MiB/22.0 MiB (80.0 MiB/s) with 1 file(s) remaining  
Completed 10.0 MiB/22.0 MiB (81.9 MiB/s) with 1 file(s) remaining 
Completed 10.2 MiB/22.0 MiB (82.4 MiB/s) with 1 file(s) remaining 
Completed 10.5 MiB/22.0 MiB (83.8 MiB/s) with 1 file(s) remaining 
Completed 10.8 MiB/22.0 MiB (85.4 MiB/s) with 1 file(s) remaining 
Completed 11.0 MiB/22.0 MiB (87.0 MiB/s) with 1 file(s) remaining 
Completed 11.2 MiB/22.0 MiB (88.7 MiB/s) with 1 file(s) remaining 
Completed 11.5 MiB/22.0 MiB (90.4 MiB/s) with 1 file(s) remaining 
Completed 11.8 MiB/22.0 MiB (91.2 MiB/s) with 1 file(s) remaining 
Completed 12.0 MiB/22.0 MiB (92.9 MiB/s) with 1 file(s) remaining 
Completed 12.2 MiB/22.0 MiB (94.7 MiB/s) with 1 file(s) remaining 
Completed 12.5 MiB/22.0 MiB (95.0 MiB/s) with 1 file(s) remaining 
Completed 12.8 MiB/22.0 MiB (96.6 MiB/s) with 1 file(s) remaining 
Completed 13.0 MiB/22.0 MiB (98.2 MiB/s) with 1 file(s) remaining 
Completed 13.2 MiB/22.0 MiB (99.8 MiB/s) with 1 file(s) remaining 
Completed 13.5 MiB/22.0 MiB (101.5 MiB/s) with 1 file(s) remaining
Completed 13.8 MiB/22.0 MiB (103.0 MiB/s) with 1 file(s) remaining
Completed 14.0 MiB/22.0 MiB (104.6 MiB/s) with 1 file(s) remaining
Completed 14.2 MiB/22.0 MiB (106.2 MiB/s) with 1 file(s) remaining
Completed 14.5 MiB/22.0 MiB (107.7 MiB/s) with 1 file(s) remaining
Completed 14.8 MiB/22.0 MiB (109.3 MiB/s) with 1 file(s) remaining
Completed 15.0 MiB/22.0 MiB (109.8 MiB/s) with 1 file(s) remaining
Completed 15.2 MiB/22.0 MiB (111.2 MiB/s) with 1 file(s) remaining
Completed 15.5 MiB/22.0 MiB (110.4 MiB/s) with 1 file(s) remaining
Completed 15.8 MiB/22.0 MiB (111.3 MiB/s) with 1 file(s) remaining
Completed 16.0 MiB/22.0 MiB (112.2 MiB/s) with 1 file(s) remaining
Completed 16.2 MiB/22.0 MiB (113.2 MiB/s) with 1 file(s) remaining
Completed 16.5 MiB/22.0 MiB (114.4 MiB/s) with 1 file(s) remaining
Completed 16.8 MiB/22.0 MiB (115.7 MiB/s) with 1 file(s) remaining
Completed 17.0 MiB/22.0 MiB (117.3 MiB/s) with 1 file(s) remaining
Completed 17.2 MiB/22.0 MiB (118.7 MiB/s) with 1 file(s) remaining
Completed 17.5 MiB/22.0 MiB (120.0 MiB/s) with 1 file(s) remaining
Completed 17.8 MiB/22.0 MiB (121.4 MiB/s) with 1 file(s) remaining
Completed 18.0 MiB/22.0 MiB (122.8 MiB/s) with 1 file(s) remaining
Completed 18.2 MiB/22.0 MiB (124.3 MiB/s) with 1 file(s) remaining
Completed 18.5 MiB/22.0 MiB (125.6 MiB/s) with 1 file(s) remaining
Completed 18.8 MiB/22.0 MiB (126.7 MiB/s) with 1 file(s) remaining
Completed 19.0 MiB/22.0 MiB (128.2 MiB/s) with 1 file(s) remaining
Completed 19.2 MiB/22.0 MiB (129.3 MiB/s) with 1 file(s) remaining
Completed 19.5 MiB/22.0 MiB (130.5 MiB/s) with 1 file(s) remaining
Completed 19.8 MiB/22.0 MiB (131.6 MiB/s) with 1 file(s) remaining
Completed 20.0 MiB/22.0 MiB (117.4 MiB/s) with 1 file(s) remaining
Completed 20.2 MiB/22.0 MiB (117.3 MiB/s) with 1 file(s) remaining
Completed 20.5 MiB/22.0 MiB (117.9 MiB/s) with 1 file(s) remaining
Completed 20.8 MiB/22.0 MiB (110.7 MiB/s) with 1 file(s) remaining
Completed 21.0 MiB/22.0 MiB (111.7 MiB/s) with 1 file(s) remaining
Completed 21.2 MiB/22.0 MiB (99.2 MiB/s) with 1 file(s) remaining 
Completed 21.5 MiB/22.0 MiB (100.2 MiB/s) with 1 file(s) remaining
Completed 21.8 MiB/22.0 MiB (99.9 MiB/s) with 1 file(s) remaining 
Completed 22.0 MiB/22.0 MiB (96.8 MiB/s) with 1 file(s) remaining 
upload: ../../tmp/part1 to s3://erasure/mpyawscli                 </msg>
<status status="PASS" starttime="20231129 08:26:41.889" endtime="20231129 08:26:41.889"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:41.890" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:41.890" endtime="20231129 08:26:41.890"/>
</kw>
<status status="PASS" starttime="20231129 08:26:40.878" endtime="20231129 08:26:41.890"/>
</kw>
<msg timestamp="20231129 08:26:41.890" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:40.877" endtime="20231129 08:26:41.890"/>
</kw>
<msg timestamp="20231129 08:26:41.890" level="INFO">${output} = Completed 256.0 KiB/22.0 MiB (3.7 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (7.1 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (10.5 MiB/s) with 1 file(s) remaining
C...</msg>
<status status="PASS" starttime="20231129 08:26:40.877" endtime="20231129 08:26:41.890"/>
</kw>
<status status="PASS" starttime="20231129 08:26:40.877" endtime="20231129 08:26:41.891"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>cp s3://${BUCKET}/mpyawscli /tmp/part1.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:41.894" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp s3://erasure/mpyawscli /tmp/part1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:42.565" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:42.565" level="INFO">${output} = Completed 256.0 KiB/22.0 MiB (4.1 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (8.1 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (12.1 MiB/s) with 1 file(s) remaining
C...</msg>
<status status="PASS" starttime="20231129 08:26:41.892" endtime="20231129 08:26:42.565"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:42.566" level="INFO">Completed 256.0 KiB/22.0 MiB (4.1 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (8.1 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (12.1 MiB/s) with 1 file(s) remaining
Completed 1.0 MiB/22.0 MiB (16.0 MiB/s) with 1 file(s) remaining  
Completed 1.2 MiB/22.0 MiB (19.8 MiB/s) with 1 file(s) remaining  
Completed 1.5 MiB/22.0 MiB (23.5 MiB/s) with 1 file(s) remaining  
Completed 1.8 MiB/22.0 MiB (26.7 MiB/s) with 1 file(s) remaining  
Completed 2.0 MiB/22.0 MiB (30.3 MiB/s) with 1 file(s) remaining  
Completed 2.2 MiB/22.0 MiB (33.9 MiB/s) with 1 file(s) remaining  
Completed 2.5 MiB/22.0 MiB (37.5 MiB/s) with 1 file(s) remaining  
Completed 2.8 MiB/22.0 MiB (41.0 MiB/s) with 1 file(s) remaining  
Completed 3.0 MiB/22.0 MiB (43.5 MiB/s) with 1 file(s) remaining  
Completed 3.2 MiB/22.0 MiB (43.5 MiB/s) with 1 file(s) remaining  
Completed 3.5 MiB/22.0 MiB (45.0 MiB/s) with 1 file(s) remaining  
Completed 3.8 MiB/22.0 MiB (47.2 MiB/s) with 1 file(s) remaining  
Completed 4.0 MiB/22.0 MiB (48.0 MiB/s) with 1 file(s) remaining  
Completed 4.2 MiB/22.0 MiB (49.8 MiB/s) with 1 file(s) remaining  
Completed 4.5 MiB/22.0 MiB (52.6 MiB/s) with 1 file(s) remaining  
Completed 4.8 MiB/22.0 MiB (54.3 MiB/s) with 1 file(s) remaining  
Completed 5.0 MiB/22.0 MiB (57.0 MiB/s) with 1 file(s) remaining  
Completed 5.2 MiB/22.0 MiB (58.8 MiB/s) with 1 file(s) remaining  
Completed 5.5 MiB/22.0 MiB (55.8 MiB/s) with 1 file(s) remaining  
Completed 5.8 MiB/22.0 MiB (58.2 MiB/s) with 1 file(s) remaining  
Completed 6.0 MiB/22.0 MiB (58.3 MiB/s) with 1 file(s) remaining  
Completed 6.2 MiB/22.0 MiB (59.7 MiB/s) with 1 file(s) remaining  
Completed 6.5 MiB/22.0 MiB (61.5 MiB/s) with 1 file(s) remaining  
Completed 6.8 MiB/22.0 MiB (63.2 MiB/s) with 1 file(s) remaining  
Completed 7.0 MiB/22.0 MiB (65.3 MiB/s) with 1 file(s) remaining  
Completed 7.2 MiB/22.0 MiB (67.1 MiB/s) with 1 file(s) remaining  
Completed 7.5 MiB/22.0 MiB (69.1 MiB/s) with 1 file(s) remaining  
Completed 7.8 MiB/22.0 MiB (70.6 MiB/s) with 1 file(s) remaining  
Completed 8.0 MiB/22.0 MiB (72.6 MiB/s) with 1 file(s) remaining  
Completed 8.2 MiB/22.0 MiB (68.1 MiB/s) with 1 file(s) remaining  
Completed 8.5 MiB/22.0 MiB (69.5 MiB/s) with 1 file(s) remaining  
Completed 8.8 MiB/22.0 MiB (71.4 MiB/s) with 1 file(s) remaining  
Completed 9.0 MiB/22.0 MiB (72.8 MiB/s) with 1 file(s) remaining  
Completed 9.2 MiB/22.0 MiB (74.2 MiB/s) with 1 file(s) remaining  
Completed 9.5 MiB/22.0 MiB (75.6 MiB/s) with 1 file(s) remaining  
Completed 9.8 MiB/22.0 MiB (77.4 MiB/s) with 1 file(s) remaining  
Completed 10.0 MiB/22.0 MiB (79.1 MiB/s) with 1 file(s) remaining 
Completed 10.2 MiB/22.0 MiB (80.0 MiB/s) with 1 file(s) remaining 
Completed 10.5 MiB/22.0 MiB (81.2 MiB/s) with 1 file(s) remaining 
Completed 10.8 MiB/22.0 MiB (82.5 MiB/s) with 1 file(s) remaining 
Completed 11.0 MiB/22.0 MiB (82.8 MiB/s) with 1 file(s) remaining 
Completed 11.2 MiB/22.0 MiB (78.7 MiB/s) with 1 file(s) remaining 
Completed 11.5 MiB/22.0 MiB (79.4 MiB/s) with 1 file(s) remaining 
Completed 11.8 MiB/22.0 MiB (81.0 MiB/s) with 1 file(s) remaining 
Completed 12.0 MiB/22.0 MiB (82.6 MiB/s) with 1 file(s) remaining 
Completed 12.2 MiB/22.0 MiB (84.0 MiB/s) with 1 file(s) remaining 
Completed 12.5 MiB/22.0 MiB (85.2 MiB/s) with 1 file(s) remaining 
Completed 12.8 MiB/22.0 MiB (86.8 MiB/s) with 1 file(s) remaining 
Completed 13.0 MiB/22.0 MiB (87.5 MiB/s) with 1 file(s) remaining 
Completed 13.2 MiB/22.0 MiB (88.9 MiB/s) with 1 file(s) remaining 
Completed 13.5 MiB/22.0 MiB (90.2 MiB/s) with 1 file(s) remaining 
Completed 13.8 MiB/22.0 MiB (91.7 MiB/s) with 1 file(s) remaining 
Completed 14.0 MiB/22.0 MiB (93.1 MiB/s) with 1 file(s) remaining 
Completed 14.2 MiB/22.0 MiB (86.9 MiB/s) with 1 file(s) remaining 
Completed 14.5 MiB/22.0 MiB (87.8 MiB/s) with 1 file(s) remaining 
Completed 14.8 MiB/22.0 MiB (88.9 MiB/s) with 1 file(s) remaining 
Completed 15.0 MiB/22.0 MiB (90.2 MiB/s) with 1 file(s) remaining 
Completed 15.2 MiB/22.0 MiB (90.3 MiB/s) with 1 file(s) remaining 
Completed 15.5 MiB/22.0 MiB (91.7 MiB/s) with 1 file(s) remaining 
Completed 15.8 MiB/22.0 MiB (93.1 MiB/s) with 1 file(s) remaining 
Completed 16.0 MiB/22.0 MiB (94.5 MiB/s) with 1 file(s) remaining 
Completed 16.2 MiB/22.0 MiB (95.1 MiB/s) with 1 file(s) remaining 
Completed 16.5 MiB/22.0 MiB (95.4 MiB/s) with 1 file(s) remaining 
Completed 16.8 MiB/22.0 MiB (96.7 MiB/s) with 1 file(s) remaining 
Completed 17.0 MiB/22.0 MiB (98.0 MiB/s) with 1 file(s) remaining 
Completed 17.2 MiB/22.0 MiB (92.7 MiB/s) with 1 file(s) remaining 
Completed 17.5 MiB/22.0 MiB (93.8 MiB/s) with 1 file(s) remaining 
Completed 17.8 MiB/22.0 MiB (94.9 MiB/s) with 1 file(s) remaining 
Completed 18.0 MiB/22.0 MiB (96.1 MiB/s) with 1 file(s) remaining 
Completed 18.2 MiB/22.0 MiB (95.2 MiB/s) with 1 file(s) remaining 
Completed 18.5 MiB/22.0 MiB (96.3 MiB/s) with 1 file(s) remaining 
Completed 18.8 MiB/22.0 MiB (97.2 MiB/s) with 1 file(s) remaining 
Completed 19.0 MiB/22.0 MiB (98.1 MiB/s) with 1 file(s) remaining 
Completed 19.2 MiB/22.0 MiB (97.2 MiB/s) with 1 file(s) remaining 
Completed 19.5 MiB/22.0 MiB (98.1 MiB/s) with 1 file(s) remaining 
Completed 19.8 MiB/22.0 MiB (99.2 MiB/s) with 1 file(s) remaining 
Completed 20.0 MiB/22.0 MiB (100.2 MiB/s) with 1 file(s) remaining
Completed 20.2 MiB/22.0 MiB (98.1 MiB/s) with 1 file(s) remaining 
Completed 20.5 MiB/22.0 MiB (98.8 MiB/s) with 1 file(s) remaining 
Completed 20.8 MiB/22.0 MiB (99.9 MiB/s) with 1 file(s) remaining 
Completed 21.0 MiB/22.0 MiB (100.5 MiB/s) with 1 file(s) remaining
Completed 21.2 MiB/22.0 MiB (97.2 MiB/s) with 1 file(s) remaining 
Completed 21.5 MiB/22.0 MiB (97.7 MiB/s) with 1 file(s) remaining 
Completed 21.8 MiB/22.0 MiB (98.7 MiB/s) with 1 file(s) remaining 
Completed 22.0 MiB/22.0 MiB (99.6 MiB/s) with 1 file(s) remaining 
download: s3://erasure/mpyawscli to ../../tmp/part1.result        </msg>
<status status="PASS" starttime="20231129 08:26:42.566" endtime="20231129 08:26:42.566"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:42.567" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:42.566" endtime="20231129 08:26:42.567"/>
</kw>
<status status="PASS" starttime="20231129 08:26:41.892" endtime="20231129 08:26:42.567"/>
</kw>
<msg timestamp="20231129 08:26:42.567" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:41.892" endtime="20231129 08:26:42.567"/>
</kw>
<msg timestamp="20231129 08:26:42.567" level="INFO">${output} = Completed 256.0 KiB/22.0 MiB (4.1 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/22.0 MiB (8.1 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/22.0 MiB (12.1 MiB/s) with 1 file(s) remaining
C...</msg>
<status status="PASS" starttime="20231129 08:26:41.891" endtime="20231129 08:26:42.567"/>
</kw>
<status status="PASS" starttime="20231129 08:26:41.891" endtime="20231129 08:26:42.567"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>rm s3://${BUCKET}/mpyawscli</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:42.571" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 rm s3://erasure/mpyawscli 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:43.010" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:43.010" level="INFO">${output} = delete: s3://erasure/mpyawscli</msg>
<status status="PASS" starttime="20231129 08:26:42.569" endtime="20231129 08:26:43.010"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:43.011" level="INFO">delete: s3://erasure/mpyawscli</msg>
<status status="PASS" starttime="20231129 08:26:43.011" endtime="20231129 08:26:43.011"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:43.012" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:43.011" endtime="20231129 08:26:43.012"/>
</kw>
<status status="PASS" starttime="20231129 08:26:42.569" endtime="20231129 08:26:43.012"/>
</kw>
<msg timestamp="20231129 08:26:43.012" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:42.569" endtime="20231129 08:26:43.012"/>
</kw>
<msg timestamp="20231129 08:26:43.012" level="INFO">${output} = delete: s3://erasure/mpyawscli</msg>
<status status="PASS" starttime="20231129 08:26:42.568" endtime="20231129 08:26:43.012"/>
</kw>
<status status="PASS" starttime="20231129 08:26:42.568" endtime="20231129 08:26:43.013"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part1</arg>
<arg>/tmp/part1.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:43.016" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:43.056" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:43.056" level="INFO">${output} = 57def609cd44b842412d979a61481ea1</msg>
<status status="PASS" starttime="20231129 08:26:43.014" endtime="20231129 08:26:43.056"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:43.057" level="INFO">57def609cd44b842412d979a61481ea1</msg>
<status status="PASS" starttime="20231129 08:26:43.057" endtime="20231129 08:26:43.057"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:43.058" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:43.057" endtime="20231129 08:26:43.058"/>
</kw>
<status status="PASS" starttime="20231129 08:26:43.014" endtime="20231129 08:26:43.058"/>
</kw>
<msg timestamp="20231129 08:26:43.058" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:43.014" endtime="20231129 08:26:43.058"/>
</kw>
<msg timestamp="20231129 08:26:43.058" level="INFO">${checksumbefore} = 57def609cd44b842412d979a61481ea1</msg>
<status status="PASS" starttime="20231129 08:26:43.013" endtime="20231129 08:26:43.058"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:43.063" level="INFO">Running command 'md5sum /tmp/part1.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:43.103" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:43.104" level="INFO">${output} = 57def609cd44b842412d979a61481ea1</msg>
<status status="PASS" starttime="20231129 08:26:43.059" endtime="20231129 08:26:43.104"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:43.105" level="INFO">57def609cd44b842412d979a61481ea1</msg>
<status status="PASS" starttime="20231129 08:26:43.104" endtime="20231129 08:26:43.105"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:43.105" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:43.105" endtime="20231129 08:26:43.105"/>
</kw>
<status status="PASS" starttime="20231129 08:26:43.059" endtime="20231129 08:26:43.105"/>
</kw>
<msg timestamp="20231129 08:26:43.105" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:43.059" endtime="20231129 08:26:43.106"/>
</kw>
<msg timestamp="20231129 08:26:43.106" level="INFO">${checksumafter} = 57def609cd44b842412d979a61481ea1</msg>
<status status="PASS" starttime="20231129 08:26:43.058" endtime="20231129 08:26:43.106"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231129 08:26:43.106" endtime="20231129 08:26:43.106"/>
</kw>
<status status="PASS" starttime="20231129 08:26:43.013" endtime="20231129 08:26:43.106"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:26:40.797" endtime="20231129 08:26:43.107"/>
</test>
<test id="s1-s1-s8-t11" name="Test Multipart Upload Put With Copy" line="265">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231129 08:26:43.109" level="INFO">${randStr} = 0394486520</msg>
<status status="PASS" starttime="20231129 08:26:43.108" endtime="20231129 08:26:43.109"/>
</kw>
<msg timestamp="20231129 08:26:43.109" level="INFO">${random} = ozone-test-0394486520</msg>
<status status="PASS" starttime="20231129 08:26:43.108" endtime="20231129 08:26:43.109"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231129 08:26:43.110" level="INFO">${PREFIX} = ozone-test-0394486520</msg>
<status status="PASS" starttime="20231129 08:26:43.109" endtime="20231129 08:26:43.110"/>
</kw>
<status status="PASS" starttime="20231129 08:26:43.108" endtime="20231129 08:26:43.110"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>5</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>5</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:43.113" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=5 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:43.133" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:43.133" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:26:43.111" endtime="20231129 08:26:43.133"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:43.134" level="INFO"/>
<status status="PASS" starttime="20231129 08:26:43.133" endtime="20231129 08:26:43.134"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:43.134" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:43.134" endtime="20231129 08:26:43.134"/>
</kw>
<status status="PASS" starttime="20231129 08:26:43.111" endtime="20231129 08:26:43.134"/>
</kw>
<msg timestamp="20231129 08:26:43.134" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:43.111" endtime="20231129 08:26:43.134"/>
</kw>
<status status="PASS" starttime="20231129 08:26:43.110" endtime="20231129 08:26:43.134"/>
</kw>
<status status="PASS" starttime="20231129 08:26:43.110" endtime="20231129 08:26:43.135"/>
</kw>
<status status="PASS" starttime="20231129 08:26:43.110" endtime="20231129 08:26:43.135"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/copytest/source --body /tmp/part1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:43.138" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket erasure --key ozone-test-0394486520/copytest/source --body /tmp/part1 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:43.743" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:43.743" level="INFO">${output} = {
    "ETag": "\"733e0a96fe5f97e5792cd5abcf9529eb\""
}</msg>
<status status="PASS" starttime="20231129 08:26:43.136" endtime="20231129 08:26:43.743"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:43.744" level="INFO">{
    "ETag": "\"733e0a96fe5f97e5792cd5abcf9529eb\""
}</msg>
<status status="PASS" starttime="20231129 08:26:43.743" endtime="20231129 08:26:43.744"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:43.745" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:43.744" endtime="20231129 08:26:43.745"/>
</kw>
<status status="PASS" starttime="20231129 08:26:43.136" endtime="20231129 08:26:43.745"/>
</kw>
<msg timestamp="20231129 08:26:43.745" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:43.136" endtime="20231129 08:26:43.745"/>
</kw>
<msg timestamp="20231129 08:26:43.745" level="INFO">${output} = {
    "ETag": "\"733e0a96fe5f97e5792cd5abcf9529eb\""
}</msg>
<status status="PASS" starttime="20231129 08:26:43.135" endtime="20231129 08:26:43.745"/>
</kw>
<msg timestamp="20231129 08:26:43.745" level="INFO">${result} = {
    "ETag": "\"733e0a96fe5f97e5792cd5abcf9529eb\""
}</msg>
<status status="PASS" starttime="20231129 08:26:43.135" endtime="20231129 08:26:43.745"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/copytest/destination</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:43.749" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket erasure --key ozone-test-0394486520/copytest/destination 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:44.220" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:44.220" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-0394486520/copytest/destination",
    "UploadId": "90884761-d09a-4226-9094-797294ee8f7e-111492884343816237"
}</msg>
<status status="PASS" starttime="20231129 08:26:43.747" endtime="20231129 08:26:44.220"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:44.221" level="INFO">{
    "Bucket": "erasure",
    "Key": "ozone-test-0394486520/copytest/destination",
    "UploadId": "90884761-d09a-4226-9094-797294ee8f7e-111492884343816237"
}</msg>
<status status="PASS" starttime="20231129 08:26:44.220" endtime="20231129 08:26:44.221"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:44.222" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:44.221" endtime="20231129 08:26:44.222"/>
</kw>
<status status="PASS" starttime="20231129 08:26:43.747" endtime="20231129 08:26:44.222"/>
</kw>
<msg timestamp="20231129 08:26:44.222" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:43.746" endtime="20231129 08:26:44.222"/>
</kw>
<msg timestamp="20231129 08:26:44.222" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-0394486520/copytest/destination",
    "UploadId": "90884761-d09a-4226-9094-797294ee8f7e-111492884343816237"
}</msg>
<status status="PASS" starttime="20231129 08:26:43.746" endtime="20231129 08:26:44.222"/>
</kw>
<msg timestamp="20231129 08:26:44.222" level="INFO">${result} = {
    "Bucket": "erasure",
    "Key": "ozone-test-0394486520/copytest/destination",
    "UploadId": "90884761-d09a-4226-9094-797294ee8f7e-111492884343816237"
}</msg>
<status status="PASS" starttime="20231129 08:26:43.745" endtime="20231129 08:26:44.222"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:44.225" level="INFO">Running command 'echo '{
    "Bucket": "erasure",
    "Key": "ozone-test-0394486520/copytest/destination",
    "UploadId": "90884761-d09a-4226-9094-797294ee8f7e-111492884343816237"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:44.250" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:44.250" level="INFO">${output} = 90884761-d09a-4226-9094-797294ee8f7e-111492884343816237</msg>
<status status="PASS" starttime="20231129 08:26:44.223" endtime="20231129 08:26:44.250"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:44.251" level="INFO">90884761-d09a-4226-9094-797294ee8f7e-111492884343816237</msg>
<status status="PASS" starttime="20231129 08:26:44.250" endtime="20231129 08:26:44.251"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:44.251" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:44.251" endtime="20231129 08:26:44.251"/>
</kw>
<msg timestamp="20231129 08:26:44.252" level="INFO">${uploadID} = 90884761-d09a-4226-9094-797294ee8f7e-111492884343816237</msg>
<status status="PASS" starttime="20231129 08:26:44.223" endtime="20231129 08:26:44.252"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:26:44.252" endtime="20231129 08:26:44.252"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:26:44.252" endtime="20231129 08:26:44.252"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copytest/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copytest/source</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:44.255" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket erasure --key ozone-test-0394486520/copytest/destination --upload-id 90884761-d09a-4226-9094-797294ee8f7e-111492884343816237 --part-number 1 --copy-source erasure/ozone-test-0394486520/copytest/source 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:44.894" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:44.894" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/s3v/erasure/ozone-test-0394486520/copytest/destination-90884761-d09a-4226-9094-797294ee8f7e-111492884343816237-1",
        "LastModified": "2023-11-29T08:26...</msg>
<status status="PASS" starttime="20231129 08:26:44.254" endtime="20231129 08:26:44.894"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:44.895" level="INFO">{
    "CopyPartResult": {
        "ETag": "/s3v/erasure/ozone-test-0394486520/copytest/destination-90884761-d09a-4226-9094-797294ee8f7e-111492884343816237-1",
        "LastModified": "2023-11-29T08:26:44.830Z"
    }
}</msg>
<status status="PASS" starttime="20231129 08:26:44.895" endtime="20231129 08:26:44.895"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:44.896" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:44.895" endtime="20231129 08:26:44.896"/>
</kw>
<status status="PASS" starttime="20231129 08:26:44.254" endtime="20231129 08:26:44.896"/>
</kw>
<msg timestamp="20231129 08:26:44.896" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:44.254" endtime="20231129 08:26:44.896"/>
</kw>
<msg timestamp="20231129 08:26:44.896" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/s3v/erasure/ozone-test-0394486520/copytest/destination-90884761-d09a-4226-9094-797294ee8f7e-111492884343816237-1",
        "LastModified": "2023-11-29T08:26...</msg>
<status status="PASS" starttime="20231129 08:26:44.253" endtime="20231129 08:26:44.896"/>
</kw>
<msg timestamp="20231129 08:26:44.897" level="INFO">${result} = {
    "CopyPartResult": {
        "ETag": "/s3v/erasure/ozone-test-0394486520/copytest/destination-90884761-d09a-4226-9094-797294ee8f7e-111492884343816237-1",
        "LastModified": "2023-11-29T08:26...</msg>
<status status="PASS" starttime="20231129 08:26:44.253" endtime="20231129 08:26:44.897"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:26:44.897" endtime="20231129 08:26:44.897"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:26:44.897" endtime="20231129 08:26:44.897"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:44.900" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "ETag": "/s3v/erasure/ozone-test-0394486520/copytest/destination-90884761-d09a-4226-9094-797294ee8f7e-111492884343816237-1",
        "LastModified": "2023-11-29T08:26:44.830Z"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:44.926" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:44.926" level="INFO">${output} = /s3v/erasure/ozone-test-0394486520/copytest/destination-90884761-d09a-4226-9094-797294ee8f7e-111492884343816237-1</msg>
<status status="PASS" starttime="20231129 08:26:44.898" endtime="20231129 08:26:44.926"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:44.927" level="INFO">/s3v/erasure/ozone-test-0394486520/copytest/destination-90884761-d09a-4226-9094-797294ee8f7e-111492884343816237-1</msg>
<status status="PASS" starttime="20231129 08:26:44.927" endtime="20231129 08:26:44.927"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:44.928" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:44.927" endtime="20231129 08:26:44.928"/>
</kw>
<msg timestamp="20231129 08:26:44.928" level="INFO">${eTag1} = /s3v/erasure/ozone-test-0394486520/copytest/destination-90884761-d09a-4226-9094-797294ee8f7e-111492884343816237-1</msg>
<status status="PASS" starttime="20231129 08:26:44.898" endtime="20231129 08:26:44.928"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/copytest/destination --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1}]'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:44.931" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 90884761-d09a-4226-9094-797294ee8f7e-111492884343816237 --bucket erasure --key ozone-test-0394486520/copytest/destination --multipart-upload 'Parts=[{ETag=/s3v/erasure/ozone-test-0394486520/copytest/destination-90884761-d09a-4226-9094-797294ee8f7e-111492884343816237-1,PartNumber=1}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:45.380" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:45.380" level="INFO">${output} = {
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "ozone-test-0394486520/copytest/destination",
    "ETag": "\"37a6259cc0c1dae299a7866489dff0bd-1\""
}</msg>
<status status="PASS" starttime="20231129 08:26:44.930" endtime="20231129 08:26:45.381"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:45.381" level="INFO">{
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "ozone-test-0394486520/copytest/destination",
    "ETag": "\"37a6259cc0c1dae299a7866489dff0bd-1\""
}</msg>
<status status="PASS" starttime="20231129 08:26:45.381" endtime="20231129 08:26:45.381"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:45.382" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:45.382" endtime="20231129 08:26:45.382"/>
</kw>
<status status="PASS" starttime="20231129 08:26:44.929" endtime="20231129 08:26:45.382"/>
</kw>
<msg timestamp="20231129 08:26:45.382" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:44.929" endtime="20231129 08:26:45.382"/>
</kw>
<msg timestamp="20231129 08:26:45.382" level="INFO">${output} = {
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "ozone-test-0394486520/copytest/destination",
    "ETag": "\"37a6259cc0c1dae299a7866489dff0bd-1\""
}</msg>
<status status="PASS" starttime="20231129 08:26:44.929" endtime="20231129 08:26:45.382"/>
</kw>
<status status="PASS" starttime="20231129 08:26:44.928" endtime="20231129 08:26:45.383"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/copytest/destination /tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:45.386" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-0394486520/copytest/destination /tmp/part-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:45.919" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:45.919" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:26:45 GMT",
    "ContentLength": 5242880,
    "ETag": "\"37a6259cc0c1dae299a7866489dff0bd-1\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20231129 08:26:45.385" endtime="20231129 08:26:45.919"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:45.920" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:26:45 GMT",
    "ContentLength": 5242880,
    "ETag": "\"37a6259cc0c1dae299a7866489dff0bd-1\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 29 Nov 2023 08:26:45 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231129 08:26:45.919" endtime="20231129 08:26:45.920"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:45.921" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:45.920" endtime="20231129 08:26:45.921"/>
</kw>
<status status="PASS" starttime="20231129 08:26:45.384" endtime="20231129 08:26:45.921"/>
</kw>
<msg timestamp="20231129 08:26:45.921" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:45.384" endtime="20231129 08:26:45.921"/>
</kw>
<msg timestamp="20231129 08:26:45.921" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:26:45 GMT",
    "ContentLength": 5242880,
    "ETag": "\"37a6259cc0c1dae299a7866489dff0bd-1\"",
    "CacheControl": "no-cache",
...</msg>
<status status="PASS" starttime="20231129 08:26:45.383" endtime="20231129 08:26:45.922"/>
</kw>
<status status="PASS" starttime="20231129 08:26:45.383" endtime="20231129 08:26:45.922"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part1</arg>
<arg>/tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:45.926" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:45.939" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:45.939" level="INFO">${output} = 733e0a96fe5f97e5792cd5abcf9529eb</msg>
<status status="PASS" starttime="20231129 08:26:45.924" endtime="20231129 08:26:45.939"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:45.940" level="INFO">733e0a96fe5f97e5792cd5abcf9529eb</msg>
<status status="PASS" starttime="20231129 08:26:45.940" endtime="20231129 08:26:45.941"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:45.941" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:45.941" endtime="20231129 08:26:45.941"/>
</kw>
<status status="PASS" starttime="20231129 08:26:45.924" endtime="20231129 08:26:45.942"/>
</kw>
<msg timestamp="20231129 08:26:45.942" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:45.923" endtime="20231129 08:26:45.942"/>
</kw>
<msg timestamp="20231129 08:26:45.942" level="INFO">${checksumbefore} = 733e0a96fe5f97e5792cd5abcf9529eb</msg>
<status status="PASS" starttime="20231129 08:26:45.923" endtime="20231129 08:26:45.942"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:45.946" level="INFO">Running command 'md5sum /tmp/part-result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:45.961" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:45.961" level="INFO">${output} = 733e0a96fe5f97e5792cd5abcf9529eb</msg>
<status status="PASS" starttime="20231129 08:26:45.944" endtime="20231129 08:26:45.961"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:45.962" level="INFO">733e0a96fe5f97e5792cd5abcf9529eb</msg>
<status status="PASS" starttime="20231129 08:26:45.962" endtime="20231129 08:26:45.962"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:45.963" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:45.963" endtime="20231129 08:26:45.963"/>
</kw>
<status status="PASS" starttime="20231129 08:26:45.943" endtime="20231129 08:26:45.963"/>
</kw>
<msg timestamp="20231129 08:26:45.963" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:45.943" endtime="20231129 08:26:45.964"/>
</kw>
<msg timestamp="20231129 08:26:45.964" level="INFO">${checksumafter} = 733e0a96fe5f97e5792cd5abcf9529eb</msg>
<status status="PASS" starttime="20231129 08:26:45.942" endtime="20231129 08:26:45.964"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231129 08:26:45.964" endtime="20231129 08:26:45.965"/>
</kw>
<status status="PASS" starttime="20231129 08:26:45.922" endtime="20231129 08:26:45.965"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:26:43.107" endtime="20231129 08:26:45.965"/>
</test>
<test id="s1-s1-s8-t12" name="Test Multipart Upload Put With Copy and range" line="287">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231129 08:26:45.968" level="INFO">${randStr} = 6427772121</msg>
<status status="PASS" starttime="20231129 08:26:45.968" endtime="20231129 08:26:45.968"/>
</kw>
<msg timestamp="20231129 08:26:45.968" level="INFO">${random} = ozone-test-6427772121</msg>
<status status="PASS" starttime="20231129 08:26:45.967" endtime="20231129 08:26:45.968"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231129 08:26:45.969" level="INFO">${PREFIX} = ozone-test-6427772121</msg>
<status status="PASS" starttime="20231129 08:26:45.969" endtime="20231129 08:26:45.969"/>
</kw>
<status status="PASS" starttime="20231129 08:26:45.967" endtime="20231129 08:26:45.969"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>10</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>10</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:45.974" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=10 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:46.024" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:46.024" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:26:45.972" endtime="20231129 08:26:46.024"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:46.025" level="INFO"/>
<status status="PASS" starttime="20231129 08:26:46.024" endtime="20231129 08:26:46.025"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:46.026" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:46.025" endtime="20231129 08:26:46.026"/>
</kw>
<status status="PASS" starttime="20231129 08:26:45.971" endtime="20231129 08:26:46.026"/>
</kw>
<msg timestamp="20231129 08:26:46.026" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:45.971" endtime="20231129 08:26:46.026"/>
</kw>
<status status="PASS" starttime="20231129 08:26:45.970" endtime="20231129 08:26:46.026"/>
</kw>
<status status="PASS" starttime="20231129 08:26:45.970" endtime="20231129 08:26:46.026"/>
</kw>
<status status="PASS" starttime="20231129 08:26:45.969" endtime="20231129 08:26:46.027"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/source --body /tmp/part1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:46.031" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket erasure --key ozone-test-6427772121/copyrange/source --body /tmp/part1 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:46.701" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:46.702" level="INFO">${output} = {
    "ETag": "\"7711cb236fb87efb9512ca573c864e59\""
}</msg>
<status status="PASS" starttime="20231129 08:26:46.029" endtime="20231129 08:26:46.702"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:46.702" level="INFO">{
    "ETag": "\"7711cb236fb87efb9512ca573c864e59\""
}</msg>
<status status="PASS" starttime="20231129 08:26:46.702" endtime="20231129 08:26:46.703"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:46.703" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:46.703" endtime="20231129 08:26:46.703"/>
</kw>
<status status="PASS" starttime="20231129 08:26:46.028" endtime="20231129 08:26:46.703"/>
</kw>
<msg timestamp="20231129 08:26:46.703" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:46.028" endtime="20231129 08:26:46.703"/>
</kw>
<msg timestamp="20231129 08:26:46.704" level="INFO">${output} = {
    "ETag": "\"7711cb236fb87efb9512ca573c864e59\""
}</msg>
<status status="PASS" starttime="20231129 08:26:46.027" endtime="20231129 08:26:46.704"/>
</kw>
<msg timestamp="20231129 08:26:46.704" level="INFO">${result} = {
    "ETag": "\"7711cb236fb87efb9512ca573c864e59\""
}</msg>
<status status="PASS" starttime="20231129 08:26:46.027" endtime="20231129 08:26:46.704"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:46.707" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket erasure --key ozone-test-6427772121/copyrange/destination 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:47.205" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:47.205" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-6427772121/copyrange/destination",
    "UploadId": "7dcba571-d554-41ef-9d32-599fe9d5d074-111492884538327088"
}</msg>
<status status="PASS" starttime="20231129 08:26:46.706" endtime="20231129 08:26:47.205"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:47.206" level="INFO">{
    "Bucket": "erasure",
    "Key": "ozone-test-6427772121/copyrange/destination",
    "UploadId": "7dcba571-d554-41ef-9d32-599fe9d5d074-111492884538327088"
}</msg>
<status status="PASS" starttime="20231129 08:26:47.205" endtime="20231129 08:26:47.206"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:47.206" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:47.206" endtime="20231129 08:26:47.206"/>
</kw>
<status status="PASS" starttime="20231129 08:26:46.705" endtime="20231129 08:26:47.206"/>
</kw>
<msg timestamp="20231129 08:26:47.206" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:46.705" endtime="20231129 08:26:47.207"/>
</kw>
<msg timestamp="20231129 08:26:47.207" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-6427772121/copyrange/destination",
    "UploadId": "7dcba571-d554-41ef-9d32-599fe9d5d074-111492884538327088"
}</msg>
<status status="PASS" starttime="20231129 08:26:46.704" endtime="20231129 08:26:47.207"/>
</kw>
<msg timestamp="20231129 08:26:47.207" level="INFO">${result} = {
    "Bucket": "erasure",
    "Key": "ozone-test-6427772121/copyrange/destination",
    "UploadId": "7dcba571-d554-41ef-9d32-599fe9d5d074-111492884538327088"
}</msg>
<status status="PASS" starttime="20231129 08:26:46.704" endtime="20231129 08:26:47.207"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:47.209" level="INFO">Running command 'echo '{
    "Bucket": "erasure",
    "Key": "ozone-test-6427772121/copyrange/destination",
    "UploadId": "7dcba571-d554-41ef-9d32-599fe9d5d074-111492884538327088"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:47.236" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:47.236" level="INFO">${output} = 7dcba571-d554-41ef-9d32-599fe9d5d074-111492884538327088</msg>
<status status="PASS" starttime="20231129 08:26:47.208" endtime="20231129 08:26:47.236"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:47.236" level="INFO">7dcba571-d554-41ef-9d32-599fe9d5d074-111492884538327088</msg>
<status status="PASS" starttime="20231129 08:26:47.236" endtime="20231129 08:26:47.236"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:47.237" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:47.237" endtime="20231129 08:26:47.237"/>
</kw>
<msg timestamp="20231129 08:26:47.237" level="INFO">${uploadID} = 7dcba571-d554-41ef-9d32-599fe9d5d074-111492884538327088</msg>
<status status="PASS" starttime="20231129 08:26:47.207" endtime="20231129 08:26:47.237"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:26:47.237" endtime="20231129 08:26:47.238"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:26:47.238" endtime="20231129 08:26:47.238"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=0-10485757</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:47.242" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket erasure --key ozone-test-6427772121/copyrange/destination --upload-id 7dcba571-d554-41ef-9d32-599fe9d5d074-111492884538327088 --part-number 1 --copy-source erasure/ozone-test-6427772121/copyrange/source --copy-source-range bytes=0-10485757 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:48.036" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:48.036" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/s3v/erasure/ozone-test-6427772121/copyrange/destination-7dcba571-d554-41ef-9d32-599fe9d5d074-111492884538327088-1",
        "LastModified": "2023-11-29T08:2...</msg>
<status status="PASS" starttime="20231129 08:26:47.240" endtime="20231129 08:26:48.037"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:48.037" level="INFO">{
    "CopyPartResult": {
        "ETag": "/s3v/erasure/ozone-test-6427772121/copyrange/destination-7dcba571-d554-41ef-9d32-599fe9d5d074-111492884538327088-1",
        "LastModified": "2023-11-29T08:26:47.987Z"
    }
}</msg>
<status status="PASS" starttime="20231129 08:26:48.037" endtime="20231129 08:26:48.038"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:48.038" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:48.038" endtime="20231129 08:26:48.038"/>
</kw>
<status status="PASS" starttime="20231129 08:26:47.240" endtime="20231129 08:26:48.038"/>
</kw>
<msg timestamp="20231129 08:26:48.038" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:47.240" endtime="20231129 08:26:48.038"/>
</kw>
<msg timestamp="20231129 08:26:48.039" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/s3v/erasure/ozone-test-6427772121/copyrange/destination-7dcba571-d554-41ef-9d32-599fe9d5d074-111492884538327088-1",
        "LastModified": "2023-11-29T08:2...</msg>
<status status="PASS" starttime="20231129 08:26:47.239" endtime="20231129 08:26:48.039"/>
</kw>
<msg timestamp="20231129 08:26:48.039" level="INFO">${result} = {
    "CopyPartResult": {
        "ETag": "/s3v/erasure/ozone-test-6427772121/copyrange/destination-7dcba571-d554-41ef-9d32-599fe9d5d074-111492884538327088-1",
        "LastModified": "2023-11-29T08:2...</msg>
<status status="PASS" starttime="20231129 08:26:47.238" endtime="20231129 08:26:48.039"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:26:48.039" endtime="20231129 08:26:48.039"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:26:48.039" endtime="20231129 08:26:48.040"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:48.042" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "ETag": "/s3v/erasure/ozone-test-6427772121/copyrange/destination-7dcba571-d554-41ef-9d32-599fe9d5d074-111492884538327088-1",
        "LastModified": "2023-11-29T08:26:47.987Z"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:48.068" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:48.068" level="INFO">${output} = /s3v/erasure/ozone-test-6427772121/copyrange/destination-7dcba571-d554-41ef-9d32-599fe9d5d074-111492884538327088-1</msg>
<status status="PASS" starttime="20231129 08:26:48.040" endtime="20231129 08:26:48.068"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:48.069" level="INFO">/s3v/erasure/ozone-test-6427772121/copyrange/destination-7dcba571-d554-41ef-9d32-599fe9d5d074-111492884538327088-1</msg>
<status status="PASS" starttime="20231129 08:26:48.068" endtime="20231129 08:26:48.069"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:48.069" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:48.069" endtime="20231129 08:26:48.069"/>
</kw>
<msg timestamp="20231129 08:26:48.069" level="INFO">${eTag1} = /s3v/erasure/ozone-test-6427772121/copyrange/destination-7dcba571-d554-41ef-9d32-599fe9d5d074-111492884538327088-1</msg>
<status status="PASS" starttime="20231129 08:26:48.040" endtime="20231129 08:26:48.069"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 2 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=10485758-10485759</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:48.073" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket erasure --key ozone-test-6427772121/copyrange/destination --upload-id 7dcba571-d554-41ef-9d32-599fe9d5d074-111492884538327088 --part-number 2 --copy-source erasure/ozone-test-6427772121/copyrange/source --copy-source-range bytes=10485758-10485759 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:48.588" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:48.588" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/s3v/erasure/ozone-test-6427772121/copyrange/destination-7dcba571-d554-41ef-9d32-599fe9d5d074-111492884538327088-2",
        "LastModified": "2023-11-29T08:2...</msg>
<status status="PASS" starttime="20231129 08:26:48.071" endtime="20231129 08:26:48.588"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:48.589" level="INFO">{
    "CopyPartResult": {
        "ETag": "/s3v/erasure/ozone-test-6427772121/copyrange/destination-7dcba571-d554-41ef-9d32-599fe9d5d074-111492884538327088-2",
        "LastModified": "2023-11-29T08:26:48.548Z"
    }
}</msg>
<status status="PASS" starttime="20231129 08:26:48.589" endtime="20231129 08:26:48.589"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:48.590" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:48.589" endtime="20231129 08:26:48.590"/>
</kw>
<status status="PASS" starttime="20231129 08:26:48.071" endtime="20231129 08:26:48.590"/>
</kw>
<msg timestamp="20231129 08:26:48.590" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:48.071" endtime="20231129 08:26:48.590"/>
</kw>
<msg timestamp="20231129 08:26:48.590" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/s3v/erasure/ozone-test-6427772121/copyrange/destination-7dcba571-d554-41ef-9d32-599fe9d5d074-111492884538327088-2",
        "LastModified": "2023-11-29T08:2...</msg>
<status status="PASS" starttime="20231129 08:26:48.070" endtime="20231129 08:26:48.590"/>
</kw>
<msg timestamp="20231129 08:26:48.591" level="INFO">${result} = {
    "CopyPartResult": {
        "ETag": "/s3v/erasure/ozone-test-6427772121/copyrange/destination-7dcba571-d554-41ef-9d32-599fe9d5d074-111492884538327088-2",
        "LastModified": "2023-11-29T08:2...</msg>
<status status="PASS" starttime="20231129 08:26:48.070" endtime="20231129 08:26:48.591"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:26:48.591" endtime="20231129 08:26:48.591"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:26:48.591" endtime="20231129 08:26:48.591"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:48.593" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "ETag": "/s3v/erasure/ozone-test-6427772121/copyrange/destination-7dcba571-d554-41ef-9d32-599fe9d5d074-111492884538327088-2",
        "LastModified": "2023-11-29T08:26:48.548Z"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:48.620" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:48.620" level="INFO">${output} = /s3v/erasure/ozone-test-6427772121/copyrange/destination-7dcba571-d554-41ef-9d32-599fe9d5d074-111492884538327088-2</msg>
<status status="PASS" starttime="20231129 08:26:48.592" endtime="20231129 08:26:48.620"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:48.621" level="INFO">/s3v/erasure/ozone-test-6427772121/copyrange/destination-7dcba571-d554-41ef-9d32-599fe9d5d074-111492884538327088-2</msg>
<status status="PASS" starttime="20231129 08:26:48.620" endtime="20231129 08:26:48.621"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:48.621" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:48.621" endtime="20231129 08:26:48.621"/>
</kw>
<msg timestamp="20231129 08:26:48.622" level="INFO">${eTag2} = /s3v/erasure/ozone-test-6427772121/copyrange/destination-7dcba571-d554-41ef-9d32-599fe9d5d074-111492884538327088-2</msg>
<status status="PASS" starttime="20231129 08:26:48.592" endtime="20231129 08:26:48.622"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=${eTag2},PartNumber=2}]'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:48.625" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id 7dcba571-d554-41ef-9d32-599fe9d5d074-111492884538327088 --bucket erasure --key ozone-test-6427772121/copyrange/destination --multipart-upload 'Parts=[{ETag=/s3v/erasure/ozone-test-6427772121/copyrange/destination-7dcba571-d554-41ef-9d32-599fe9d5d074-111492884538327088-1,PartNumber=1},{ETag=/s3v/erasure/ozone-test-6427772121/copyrange/destination-7dcba571-d554-41ef-9d32-599fe9d5d074-111492884538327088-2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:49.074" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:49.074" level="INFO">${output} = {
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "ozone-test-6427772121/copyrange/destination",
    "ETag": "\"24d794dfc756320ffadb905d526299bc-2\""
}</msg>
<status status="PASS" starttime="20231129 08:26:48.624" endtime="20231129 08:26:49.074"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:49.075" level="INFO">{
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "ozone-test-6427772121/copyrange/destination",
    "ETag": "\"24d794dfc756320ffadb905d526299bc-2\""
}</msg>
<status status="PASS" starttime="20231129 08:26:49.075" endtime="20231129 08:26:49.075"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:49.076" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:49.075" endtime="20231129 08:26:49.076"/>
</kw>
<status status="PASS" starttime="20231129 08:26:48.623" endtime="20231129 08:26:49.076"/>
</kw>
<msg timestamp="20231129 08:26:49.076" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:48.623" endtime="20231129 08:26:49.076"/>
</kw>
<msg timestamp="20231129 08:26:49.076" level="INFO">${output} = {
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "ozone-test-6427772121/copyrange/destination",
    "ETag": "\"24d794dfc756320ffadb905d526299bc-2\""
}</msg>
<status status="PASS" starttime="20231129 08:26:48.622" endtime="20231129 08:26:49.076"/>
</kw>
<status status="PASS" starttime="20231129 08:26:48.622" endtime="20231129 08:26:49.076"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination /tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:49.080" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-6427772121/copyrange/destination /tmp/part-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:49.633" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:49.633" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:26:49 GMT",
    "ContentLength": 10485760,
    "ETag": "\"24d794dfc756320ffadb905d526299bc-2\"",
    "CacheControl": "no-cache",...</msg>
<status status="PASS" starttime="20231129 08:26:49.078" endtime="20231129 08:26:49.633"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:49.634" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:26:49 GMT",
    "ContentLength": 10485760,
    "ETag": "\"24d794dfc756320ffadb905d526299bc-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 29 Nov 2023 08:26:49 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231129 08:26:49.633" endtime="20231129 08:26:49.634"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:49.634" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:49.634" endtime="20231129 08:26:49.634"/>
</kw>
<status status="PASS" starttime="20231129 08:26:49.078" endtime="20231129 08:26:49.634"/>
</kw>
<msg timestamp="20231129 08:26:49.635" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:49.078" endtime="20231129 08:26:49.635"/>
</kw>
<msg timestamp="20231129 08:26:49.635" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:26:49 GMT",
    "ContentLength": 10485760,
    "ETag": "\"24d794dfc756320ffadb905d526299bc-2\"",
    "CacheControl": "no-cache",...</msg>
<status status="PASS" starttime="20231129 08:26:49.077" endtime="20231129 08:26:49.635"/>
</kw>
<status status="PASS" starttime="20231129 08:26:49.077" endtime="20231129 08:26:49.635"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part1</arg>
<arg>/tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:49.638" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:49.657" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:49.658" level="INFO">${output} = 7711cb236fb87efb9512ca573c864e59</msg>
<status status="PASS" starttime="20231129 08:26:49.637" endtime="20231129 08:26:49.658"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:49.658" level="INFO">7711cb236fb87efb9512ca573c864e59</msg>
<status status="PASS" starttime="20231129 08:26:49.658" endtime="20231129 08:26:49.658"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:49.659" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:49.659" endtime="20231129 08:26:49.659"/>
</kw>
<status status="PASS" starttime="20231129 08:26:49.636" endtime="20231129 08:26:49.659"/>
</kw>
<msg timestamp="20231129 08:26:49.659" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:49.636" endtime="20231129 08:26:49.659"/>
</kw>
<msg timestamp="20231129 08:26:49.659" level="INFO">${checksumbefore} = 7711cb236fb87efb9512ca573c864e59</msg>
<status status="PASS" starttime="20231129 08:26:49.635" endtime="20231129 08:26:49.659"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:49.662" level="INFO">Running command 'md5sum /tmp/part-result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:49.681" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:49.681" level="INFO">${output} = 7711cb236fb87efb9512ca573c864e59</msg>
<status status="PASS" starttime="20231129 08:26:49.661" endtime="20231129 08:26:49.681"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:49.682" level="INFO">7711cb236fb87efb9512ca573c864e59</msg>
<status status="PASS" starttime="20231129 08:26:49.681" endtime="20231129 08:26:49.682"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:49.682" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:49.682" endtime="20231129 08:26:49.682"/>
</kw>
<status status="PASS" starttime="20231129 08:26:49.660" endtime="20231129 08:26:49.682"/>
</kw>
<msg timestamp="20231129 08:26:49.683" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:49.660" endtime="20231129 08:26:49.683"/>
</kw>
<msg timestamp="20231129 08:26:49.683" level="INFO">${checksumafter} = 7711cb236fb87efb9512ca573c864e59</msg>
<status status="PASS" starttime="20231129 08:26:49.659" endtime="20231129 08:26:49.683"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231129 08:26:49.683" endtime="20231129 08:26:49.683"/>
</kw>
<status status="PASS" starttime="20231129 08:26:49.635" endtime="20231129 08:26:49.683"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:26:45.966" endtime="20231129 08:26:49.684"/>
</test>
<test id="s1-s1-s8-t13" name="Test Multipart Upload Put With Copy and range with IfModifiedSince" line="314">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231129 08:26:49.686" level="INFO">${randStr} = 7041349536</msg>
<status status="PASS" starttime="20231129 08:26:49.685" endtime="20231129 08:26:49.686"/>
</kw>
<msg timestamp="20231129 08:26:49.686" level="INFO">${random} = ozone-test-7041349536</msg>
<status status="PASS" starttime="20231129 08:26:49.685" endtime="20231129 08:26:49.686"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231129 08:26:49.686" level="INFO">${PREFIX} = ozone-test-7041349536</msg>
<status status="PASS" starttime="20231129 08:26:49.686" endtime="20231129 08:26:49.686"/>
</kw>
<status status="PASS" starttime="20231129 08:26:49.685" endtime="20231129 08:26:49.687"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Create Random file</arg>
<arg>10</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Create Random file">
<arg>10</arg>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=${size_in_megabytes} status=none</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:49.690" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/part1 bs=1048576 count=10 status=none 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:49.724" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:49.724" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:26:49.688" endtime="20231129 08:26:49.724"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:49.725" level="INFO"/>
<status status="PASS" starttime="20231129 08:26:49.724" endtime="20231129 08:26:49.725"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:49.725" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:49.725" endtime="20231129 08:26:49.726"/>
</kw>
<status status="PASS" starttime="20231129 08:26:49.688" endtime="20231129 08:26:49.726"/>
</kw>
<msg timestamp="20231129 08:26:49.726" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:49.688" endtime="20231129 08:26:49.726"/>
</kw>
<status status="PASS" starttime="20231129 08:26:49.687" endtime="20231129 08:26:49.726"/>
</kw>
<status status="PASS" starttime="20231129 08:26:49.687" endtime="20231129 08:26:49.726"/>
</kw>
<status status="PASS" starttime="20231129 08:26:49.687" endtime="20231129 08:26:49.726"/>
</kw>
<kw name="Get Current Date" library="DateTime">
<var>${curDate}</var>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20231129 08:26:49.727" level="INFO">${curDate} = 2023-11-29 08:26:49.726</msg>
<status status="PASS" starttime="20231129 08:26:49.726" endtime="20231129 08:26:49.727"/>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<var>${beforeCreate}</var>
<arg>${curDate}</arg>
<arg>1 day</arg>
<doc>Subtracts time from date and returns the resulting date.</doc>
<msg timestamp="20231129 08:26:49.730" level="INFO">${beforeCreate} = 2023-11-28 08:26:49.726</msg>
<status status="PASS" starttime="20231129 08:26:49.727" endtime="20231129 08:26:49.730"/>
</kw>
<kw name="Add Time To Date" library="DateTime">
<var>${tomorrow}</var>
<arg>${curDate}</arg>
<arg>1 day</arg>
<doc>Adds time to date and returns the resulting date.</doc>
<msg timestamp="20231129 08:26:49.730" level="INFO">${tomorrow} = 2023-11-30 08:26:49.726</msg>
<status status="PASS" starttime="20231129 08:26:49.730" endtime="20231129 08:26:49.730"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/source --body /tmp/part1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:49.733" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket erasure --key ozone-test-7041349536/copyrange/source --body /tmp/part1 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:50.442" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:50.442" level="INFO">${output} = {
    "ETag": "\"60da8939d74b11dd0884c7277408aaac\""
}</msg>
<status status="PASS" starttime="20231129 08:26:49.732" endtime="20231129 08:26:50.442"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:50.443" level="INFO">{
    "ETag": "\"60da8939d74b11dd0884c7277408aaac\""
}</msg>
<status status="PASS" starttime="20231129 08:26:50.443" endtime="20231129 08:26:50.443"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:50.444" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:50.443" endtime="20231129 08:26:50.444"/>
</kw>
<status status="PASS" starttime="20231129 08:26:49.732" endtime="20231129 08:26:50.444"/>
</kw>
<msg timestamp="20231129 08:26:50.444" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:49.731" endtime="20231129 08:26:50.444"/>
</kw>
<msg timestamp="20231129 08:26:50.444" level="INFO">${output} = {
    "ETag": "\"60da8939d74b11dd0884c7277408aaac\""
}</msg>
<status status="PASS" starttime="20231129 08:26:49.731" endtime="20231129 08:26:50.444"/>
</kw>
<msg timestamp="20231129 08:26:50.445" level="INFO">${result} = {
    "ETag": "\"60da8939d74b11dd0884c7277408aaac\""
}</msg>
<status status="PASS" starttime="20231129 08:26:49.730" endtime="20231129 08:26:50.445"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:50.448" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket erasure --key ozone-test-7041349536/copyrange/destination 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:50.890" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:50.890" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-7041349536/copyrange/destination",
    "UploadId": "a3b24719-c8f0-4128-8897-cf6f20bbe39d-111492884781137972"
}</msg>
<status status="PASS" starttime="20231129 08:26:50.446" endtime="20231129 08:26:50.890"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:50.891" level="INFO">{
    "Bucket": "erasure",
    "Key": "ozone-test-7041349536/copyrange/destination",
    "UploadId": "a3b24719-c8f0-4128-8897-cf6f20bbe39d-111492884781137972"
}</msg>
<status status="PASS" starttime="20231129 08:26:50.890" endtime="20231129 08:26:50.891"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:50.891" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:50.891" endtime="20231129 08:26:50.891"/>
</kw>
<status status="PASS" starttime="20231129 08:26:50.446" endtime="20231129 08:26:50.892"/>
</kw>
<msg timestamp="20231129 08:26:50.892" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:50.446" endtime="20231129 08:26:50.892"/>
</kw>
<msg timestamp="20231129 08:26:50.892" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-7041349536/copyrange/destination",
    "UploadId": "a3b24719-c8f0-4128-8897-cf6f20bbe39d-111492884781137972"
}</msg>
<status status="PASS" starttime="20231129 08:26:50.445" endtime="20231129 08:26:50.892"/>
</kw>
<msg timestamp="20231129 08:26:50.892" level="INFO">${result} = {
    "Bucket": "erasure",
    "Key": "ozone-test-7041349536/copyrange/destination",
    "UploadId": "a3b24719-c8f0-4128-8897-cf6f20bbe39d-111492884781137972"
}</msg>
<status status="PASS" starttime="20231129 08:26:50.445" endtime="20231129 08:26:50.892"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:50.894" level="INFO">Running command 'echo '{
    "Bucket": "erasure",
    "Key": "ozone-test-7041349536/copyrange/destination",
    "UploadId": "a3b24719-c8f0-4128-8897-cf6f20bbe39d-111492884781137972"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:50.921" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:50.921" level="INFO">${output} = a3b24719-c8f0-4128-8897-cf6f20bbe39d-111492884781137972</msg>
<status status="PASS" starttime="20231129 08:26:50.893" endtime="20231129 08:26:50.921"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:50.921" level="INFO">a3b24719-c8f0-4128-8897-cf6f20bbe39d-111492884781137972</msg>
<status status="PASS" starttime="20231129 08:26:50.921" endtime="20231129 08:26:50.921"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:50.922" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:50.922" endtime="20231129 08:26:50.922"/>
</kw>
<msg timestamp="20231129 08:26:50.922" level="INFO">${uploadID} = a3b24719-c8f0-4128-8897-cf6f20bbe39d-111492884781137972</msg>
<status status="PASS" starttime="20231129 08:26:50.892" endtime="20231129 08:26:50.922"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:26:50.922" endtime="20231129 08:26:50.923"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:26:50.923" endtime="20231129 08:26:50.923"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/source</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:50.926" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket erasure --key ozone-test-7041349536/copyrange/source 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:51.363" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:51.363" level="INFO">${output} = {
    "LastModified": "Wed, 29 Nov 2023 08:26:50 GMT",
    "ContentLength": 10485760,
    "ETag": "\"60da8939d74b11dd0884c7277408aaac\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/oct...</msg>
<status status="PASS" starttime="20231129 08:26:50.925" endtime="20231129 08:26:51.363"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:51.364" level="INFO">{
    "LastModified": "Wed, 29 Nov 2023 08:26:50 GMT",
    "ContentLength": 10485760,
    "ETag": "\"60da8939d74b11dd0884c7277408aaac\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Wed, 29 Nov 2023 08:26:51 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231129 08:26:51.364" endtime="20231129 08:26:51.365"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:51.365" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:51.365" endtime="20231129 08:26:51.365"/>
</kw>
<status status="PASS" starttime="20231129 08:26:50.924" endtime="20231129 08:26:51.365"/>
</kw>
<msg timestamp="20231129 08:26:51.365" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:50.924" endtime="20231129 08:26:51.365"/>
</kw>
<msg timestamp="20231129 08:26:51.366" level="INFO">${output} = {
    "LastModified": "Wed, 29 Nov 2023 08:26:50 GMT",
    "ContentLength": 10485760,
    "ETag": "\"60da8939d74b11dd0884c7277408aaac\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/oct...</msg>
<status status="PASS" starttime="20231129 08:26:50.924" endtime="20231129 08:26:51.366"/>
</kw>
<msg timestamp="20231129 08:26:51.366" level="INFO">${result} = {
    "LastModified": "Wed, 29 Nov 2023 08:26:50 GMT",
    "ContentLength": 10485760,
    "ETag": "\"60da8939d74b11dd0884c7277408aaac\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/oct...</msg>
<status status="PASS" starttime="20231129 08:26:50.923" endtime="20231129 08:26:51.366"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${lastModified}</var>
<arg>echo '${result}' | jq -r '.LastModified'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:51.368" level="INFO">Running command 'echo '{
    "LastModified": "Wed, 29 Nov 2023 08:26:50 GMT",
    "ContentLength": 10485760,
    "ETag": "\"60da8939d74b11dd0884c7277408aaac\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Wed, 29 Nov 2023 08:26:51 GMT",
    "Metadata": {}
}' | jq -r '.LastModified' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:51.394" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:51.394" level="INFO">${output} = Wed, 29 Nov 2023 08:26:50 GMT</msg>
<status status="PASS" starttime="20231129 08:26:51.366" endtime="20231129 08:26:51.394"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:51.395" level="INFO">Wed, 29 Nov 2023 08:26:50 GMT</msg>
<status status="PASS" starttime="20231129 08:26:51.395" endtime="20231129 08:26:51.395"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:51.396" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:51.395" endtime="20231129 08:26:51.396"/>
</kw>
<msg timestamp="20231129 08:26:51.396" level="INFO">${lastModified} = Wed, 29 Nov 2023 08:26:50 GMT</msg>
<status status="PASS" starttime="20231129 08:26:51.366" endtime="20231129 08:26:51.396"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${LastModified}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:26:51.396" endtime="20231129 08:26:51.397"/>
</kw>
<kw name="Convert Date" library="DateTime">
<var>${lmDate}</var>
<arg>${lastModified}</arg>
<arg>date_format=%a, %d %b %Y %H:%M:%S %Z</arg>
<doc>Converts between supported `date formats`.</doc>
<msg timestamp="20231129 08:26:51.399" level="INFO">${lmDate} = 2023-11-29 08:26:50.000</msg>
<status status="PASS" starttime="20231129 08:26:51.397" endtime="20231129 08:26:51.399"/>
</kw>
<kw name="Add Time To Date" library="DateTime">
<var>${afterCreate}</var>
<arg>${lmDate}</arg>
<arg>3 seconds</arg>
<doc>Adds time to date and returns the resulting date.</doc>
<msg timestamp="20231129 08:26:51.399" level="INFO">${afterCreate} = 2023-11-29 08:26:53.000</msg>
<status status="PASS" starttime="20231129 08:26:51.399" endtime="20231129 08:26:51.400"/>
</kw>
<kw name="Wait Til Date Past">
<arg>${afterCreate}</arg>
<kw name="Get Current Date" library="DateTime">
<var>${latestDate}</var>
<arg>UTC</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20231129 08:26:51.400" level="INFO">${latestDate} = 2023-11-29 08:26:51.400</msg>
<status status="PASS" starttime="20231129 08:26:51.400" endtime="20231129 08:26:51.400"/>
</kw>
<kw name="Subtract Date From Date" library="DateTime">
<var>${sleepSeconds}</var>
<arg>${date}</arg>
<arg>${latestDate}</arg>
<doc>Subtracts date from another date and returns time between.</doc>
<msg timestamp="20231129 08:26:51.401" level="INFO">${sleepSeconds} = 1.6</msg>
<status status="PASS" starttime="20231129 08:26:51.401" endtime="20231129 08:26:51.401"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${sleepSeconds} &gt; 0</arg>
<arg>Sleep</arg>
<arg>${sleepSeconds}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Sleep" library="BuiltIn">
<arg>${sleepSeconds}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20231129 08:26:53.002" level="INFO">Slept 1 second 600 milliseconds</msg>
<status status="PASS" starttime="20231129 08:26:51.402" endtime="20231129 08:26:53.002"/>
</kw>
<status status="PASS" starttime="20231129 08:26:51.401" endtime="20231129 08:26:53.002"/>
</kw>
<status status="PASS" starttime="20231129 08:26:51.400" endtime="20231129 08:26:53.002"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '${afterCreate}'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:53.006" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket erasure --key ozone-test-7041349536/copyrange/destination --upload-id a3b24719-c8f0-4128-8897-cf6f20bbe39d-111492884781137972 --part-number 1 --copy-source erasure/ozone-test-7041349536/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '2023-11-29 08:26:53.000' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:53.515" level="INFO">${rc} = 255</msg>
<msg timestamp="20231129 08:26:53.515" level="INFO">${output} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20231129 08:26:53.004" endtime="20231129 08:26:53.515"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:53.516" level="INFO">
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20231129 08:26:53.515" endtime="20231129 08:26:53.516"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:53.516" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:53.516" endtime="20231129 08:26:53.516"/>
</kw>
<msg timestamp="20231129 08:26:53.516" level="INFO">${output} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20231129 08:26:53.004" endtime="20231129 08:26:53.516"/>
</kw>
<msg timestamp="20231129 08:26:53.517" level="INFO">${result} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20231129 08:26:53.003" endtime="20231129 08:26:53.517"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PreconditionFailed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:26:53.517" endtime="20231129 08:26:53.517"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 2 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=10485758-10485759 --copy-source-if-unmodified-since '${beforeCreate}'</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:53.520" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket erasure --key ozone-test-7041349536/copyrange/destination --upload-id a3b24719-c8f0-4128-8897-cf6f20bbe39d-111492884781137972 --part-number 2 --copy-source erasure/ozone-test-7041349536/copyrange/source --copy-source-range bytes=10485758-10485759 --copy-source-if-unmodified-since '2023-11-28 08:26:49.726' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:54.000" level="INFO">${rc} = 255</msg>
<msg timestamp="20231129 08:26:54.000" level="INFO">${output} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20231129 08:26:53.519" endtime="20231129 08:26:54.000"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:54.001" level="INFO">
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20231129 08:26:54.000" endtime="20231129 08:26:54.001"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:54.001" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:54.001" endtime="20231129 08:26:54.001"/>
</kw>
<msg timestamp="20231129 08:26:54.002" level="INFO">${output} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20231129 08:26:53.518" endtime="20231129 08:26:54.002"/>
</kw>
<msg timestamp="20231129 08:26:54.002" level="INFO">${result} = 
An error occurred (PreconditionFailed) when calling the UploadPartCopy operation: At least one of the pre-conditions you specified did not hold</msg>
<status status="PASS" starttime="20231129 08:26:53.517" endtime="20231129 08:26:54.002"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PreconditionFailed</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:26:54.002" endtime="20231129 08:26:54.002"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '${beforeCreate}'</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:54.005" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket erasure --key ozone-test-7041349536/copyrange/destination --upload-id a3b24719-c8f0-4128-8897-cf6f20bbe39d-111492884781137972 --part-number 1 --copy-source erasure/ozone-test-7041349536/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '2023-11-28 08:26:49.726' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:54.858" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:54.858" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/s3v/erasure/ozone-test-7041349536/copyrange/destination-a3b24719-c8f0-4128-8897-cf6f20bbe39d-111492884781137972-1",
        "LastModified": "2023-11-29T08:2...</msg>
<status status="PASS" starttime="20231129 08:26:54.004" endtime="20231129 08:26:54.858"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:54.859" level="INFO">{
    "CopyPartResult": {
        "ETag": "/s3v/erasure/ozone-test-7041349536/copyrange/destination-a3b24719-c8f0-4128-8897-cf6f20bbe39d-111492884781137972-1",
        "LastModified": "2023-11-29T08:26:54.785Z"
    }
}</msg>
<status status="PASS" starttime="20231129 08:26:54.859" endtime="20231129 08:26:54.859"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:54.860" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:54.860" endtime="20231129 08:26:54.860"/>
</kw>
<msg timestamp="20231129 08:26:54.861" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/s3v/erasure/ozone-test-7041349536/copyrange/destination-a3b24719-c8f0-4128-8897-cf6f20bbe39d-111492884781137972-1",
        "LastModified": "2023-11-29T08:2...</msg>
<status status="PASS" starttime="20231129 08:26:54.003" endtime="20231129 08:26:54.861"/>
</kw>
<msg timestamp="20231129 08:26:54.861" level="INFO">${result} = {
    "CopyPartResult": {
        "ETag": "/s3v/erasure/ozone-test-7041349536/copyrange/destination-a3b24719-c8f0-4128-8897-cf6f20bbe39d-111492884781137972-1",
        "LastModified": "2023-11-29T08:2...</msg>
<status status="PASS" starttime="20231129 08:26:54.003" endtime="20231129 08:26:54.861"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:26:54.861" endtime="20231129 08:26:54.861"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:26:54.862" endtime="20231129 08:26:54.862"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:54.865" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "ETag": "/s3v/erasure/ozone-test-7041349536/copyrange/destination-a3b24719-c8f0-4128-8897-cf6f20bbe39d-111492884781137972-1",
        "LastModified": "2023-11-29T08:26:54.785Z"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:54.906" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:54.906" level="INFO">${output} = /s3v/erasure/ozone-test-7041349536/copyrange/destination-a3b24719-c8f0-4128-8897-cf6f20bbe39d-111492884781137972-1</msg>
<status status="PASS" starttime="20231129 08:26:54.863" endtime="20231129 08:26:54.906"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:54.907" level="INFO">/s3v/erasure/ozone-test-7041349536/copyrange/destination-a3b24719-c8f0-4128-8897-cf6f20bbe39d-111492884781137972-1</msg>
<status status="PASS" starttime="20231129 08:26:54.906" endtime="20231129 08:26:54.907"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:54.908" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:54.907" endtime="20231129 08:26:54.908"/>
</kw>
<msg timestamp="20231129 08:26:54.908" level="INFO">${eTag1} = /s3v/erasure/ozone-test-7041349536/copyrange/destination-a3b24719-c8f0-4128-8897-cf6f20bbe39d-111492884781137972-1</msg>
<status status="PASS" starttime="20231129 08:26:54.862" endtime="20231129 08:26:54.908"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 2 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=10485758-10485759 --copy-source-if-unmodified-since '${afterCreate}'</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:54.913" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket erasure --key ozone-test-7041349536/copyrange/destination --upload-id a3b24719-c8f0-4128-8897-cf6f20bbe39d-111492884781137972 --part-number 2 --copy-source erasure/ozone-test-7041349536/copyrange/source --copy-source-range bytes=10485758-10485759 --copy-source-if-unmodified-since '2023-11-29 08:26:53.000' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:55.454" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:55.454" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/s3v/erasure/ozone-test-7041349536/copyrange/destination-a3b24719-c8f0-4128-8897-cf6f20bbe39d-111492884781137972-2",
        "LastModified": "2023-11-29T08:2...</msg>
<status status="PASS" starttime="20231129 08:26:54.911" endtime="20231129 08:26:55.455"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:55.455" level="INFO">{
    "CopyPartResult": {
        "ETag": "/s3v/erasure/ozone-test-7041349536/copyrange/destination-a3b24719-c8f0-4128-8897-cf6f20bbe39d-111492884781137972-2",
        "LastModified": "2023-11-29T08:26:55.411Z"
    }
}</msg>
<status status="PASS" starttime="20231129 08:26:55.455" endtime="20231129 08:26:55.455"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:55.456" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:55.456" endtime="20231129 08:26:55.456"/>
</kw>
<msg timestamp="20231129 08:26:55.456" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/s3v/erasure/ozone-test-7041349536/copyrange/destination-a3b24719-c8f0-4128-8897-cf6f20bbe39d-111492884781137972-2",
        "LastModified": "2023-11-29T08:2...</msg>
<status status="PASS" starttime="20231129 08:26:54.910" endtime="20231129 08:26:55.456"/>
</kw>
<msg timestamp="20231129 08:26:55.456" level="INFO">${result} = {
    "CopyPartResult": {
        "ETag": "/s3v/erasure/ozone-test-7041349536/copyrange/destination-a3b24719-c8f0-4128-8897-cf6f20bbe39d-111492884781137972-2",
        "LastModified": "2023-11-29T08:2...</msg>
<status status="PASS" starttime="20231129 08:26:54.909" endtime="20231129 08:26:55.456"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:26:55.457" endtime="20231129 08:26:55.457"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:26:55.457" endtime="20231129 08:26:55.457"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag2}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:55.459" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "ETag": "/s3v/erasure/ozone-test-7041349536/copyrange/destination-a3b24719-c8f0-4128-8897-cf6f20bbe39d-111492884781137972-2",
        "LastModified": "2023-11-29T08:26:55.411Z"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:55.485" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:55.485" level="INFO">${output} = /s3v/erasure/ozone-test-7041349536/copyrange/destination-a3b24719-c8f0-4128-8897-cf6f20bbe39d-111492884781137972-2</msg>
<status status="PASS" starttime="20231129 08:26:55.458" endtime="20231129 08:26:55.485"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:55.486" level="INFO">/s3v/erasure/ozone-test-7041349536/copyrange/destination-a3b24719-c8f0-4128-8897-cf6f20bbe39d-111492884781137972-2</msg>
<status status="PASS" starttime="20231129 08:26:55.486" endtime="20231129 08:26:55.486"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:55.487" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:55.486" endtime="20231129 08:26:55.487"/>
</kw>
<msg timestamp="20231129 08:26:55.487" level="INFO">${eTag2} = /s3v/erasure/ozone-test-7041349536/copyrange/destination-a3b24719-c8f0-4128-8897-cf6f20bbe39d-111492884781137972-2</msg>
<status status="PASS" starttime="20231129 08:26:55.457" endtime="20231129 08:26:55.487"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>upload-part-copy --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --upload-id ${uploadID} --part-number 1 --copy-source ${BUCKET}/${PREFIX}/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '${tomorrow}'</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:55.490" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 upload-part-copy --bucket erasure --key ozone-test-7041349536/copyrange/destination --upload-id a3b24719-c8f0-4128-8897-cf6f20bbe39d-111492884781137972 --part-number 1 --copy-source erasure/ozone-test-7041349536/copyrange/source --copy-source-range bytes=0-10485757 --copy-source-if-modified-since '2023-11-30 08:26:49.726' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:56.314" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:56.314" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/s3v/erasure/ozone-test-7041349536/copyrange/destination-a3b24719-c8f0-4128-8897-cf6f20bbe39d-111492884781137972-1",
        "LastModified": "2023-11-29T08:2...</msg>
<status status="PASS" starttime="20231129 08:26:55.488" endtime="20231129 08:26:56.315"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:56.316" level="INFO">{
    "CopyPartResult": {
        "ETag": "/s3v/erasure/ozone-test-7041349536/copyrange/destination-a3b24719-c8f0-4128-8897-cf6f20bbe39d-111492884781137972-1",
        "LastModified": "2023-11-29T08:26:56.249Z"
    }
}</msg>
<status status="PASS" starttime="20231129 08:26:56.315" endtime="20231129 08:26:56.316"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:56.318" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:56.316" endtime="20231129 08:26:56.318"/>
</kw>
<msg timestamp="20231129 08:26:56.318" level="INFO">${output} = {
    "CopyPartResult": {
        "ETag": "/s3v/erasure/ozone-test-7041349536/copyrange/destination-a3b24719-c8f0-4128-8897-cf6f20bbe39d-111492884781137972-1",
        "LastModified": "2023-11-29T08:2...</msg>
<status status="PASS" starttime="20231129 08:26:55.488" endtime="20231129 08:26:56.318"/>
</kw>
<msg timestamp="20231129 08:26:56.318" level="INFO">${result} = {
    "CopyPartResult": {
        "ETag": "/s3v/erasure/ozone-test-7041349536/copyrange/destination-a3b24719-c8f0-4128-8897-cf6f20bbe39d-111492884781137972-1",
        "LastModified": "2023-11-29T08:2...</msg>
<status status="PASS" starttime="20231129 08:26:55.487" endtime="20231129 08:26:56.318"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:26:56.319" endtime="20231129 08:26:56.319"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>LastModified</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:26:56.319" endtime="20231129 08:26:56.319"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${eTag1}</var>
<arg>echo '${result}' | jq -r '.CopyPartResult.ETag'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:56.322" level="INFO">Running command 'echo '{
    "CopyPartResult": {
        "ETag": "/s3v/erasure/ozone-test-7041349536/copyrange/destination-a3b24719-c8f0-4128-8897-cf6f20bbe39d-111492884781137972-1",
        "LastModified": "2023-11-29T08:26:56.249Z"
    }
}' | jq -r '.CopyPartResult.ETag' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:56.349" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:56.349" level="INFO">${output} = /s3v/erasure/ozone-test-7041349536/copyrange/destination-a3b24719-c8f0-4128-8897-cf6f20bbe39d-111492884781137972-1</msg>
<status status="PASS" starttime="20231129 08:26:56.320" endtime="20231129 08:26:56.349"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:56.350" level="INFO">/s3v/erasure/ozone-test-7041349536/copyrange/destination-a3b24719-c8f0-4128-8897-cf6f20bbe39d-111492884781137972-1</msg>
<status status="PASS" starttime="20231129 08:26:56.350" endtime="20231129 08:26:56.350"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:56.351" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:56.351" endtime="20231129 08:26:56.351"/>
</kw>
<msg timestamp="20231129 08:26:56.351" level="INFO">${eTag1} = /s3v/erasure/ozone-test-7041349536/copyrange/destination-a3b24719-c8f0-4128-8897-cf6f20bbe39d-111492884781137972-1</msg>
<status status="PASS" starttime="20231129 08:26:56.320" endtime="20231129 08:26:56.351"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>complete-multipart-upload --upload-id ${uploadID} --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination --multipart-upload 'Parts=[{ETag=${eTag1},PartNumber=1},{ETag=${eTag2},PartNumber=2}]'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:56.355" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 complete-multipart-upload --upload-id a3b24719-c8f0-4128-8897-cf6f20bbe39d-111492884781137972 --bucket erasure --key ozone-test-7041349536/copyrange/destination --multipart-upload 'Parts=[{ETag=/s3v/erasure/ozone-test-7041349536/copyrange/destination-a3b24719-c8f0-4128-8897-cf6f20bbe39d-111492884781137972-1,PartNumber=1},{ETag=/s3v/erasure/ozone-test-7041349536/copyrange/destination-a3b24719-c8f0-4128-8897-cf6f20bbe39d-111492884781137972-2,PartNumber=2}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:56.806" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:56.806" level="INFO">${output} = {
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "ozone-test-7041349536/copyrange/destination",
    "ETag": "\"24d794dfc756320ffadb905d526299bc-2\""
}</msg>
<status status="PASS" starttime="20231129 08:26:56.353" endtime="20231129 08:26:56.806"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:56.807" level="INFO">{
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "ozone-test-7041349536/copyrange/destination",
    "ETag": "\"24d794dfc756320ffadb905d526299bc-2\""
}</msg>
<status status="PASS" starttime="20231129 08:26:56.806" endtime="20231129 08:26:56.807"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:56.807" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:56.807" endtime="20231129 08:26:56.808"/>
</kw>
<status status="PASS" starttime="20231129 08:26:56.353" endtime="20231129 08:26:56.808"/>
</kw>
<msg timestamp="20231129 08:26:56.808" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:56.353" endtime="20231129 08:26:56.808"/>
</kw>
<msg timestamp="20231129 08:26:56.808" level="INFO">${output} = {
    "Location": "erasure",
    "Bucket": "erasure",
    "Key": "ozone-test-7041349536/copyrange/destination",
    "ETag": "\"24d794dfc756320ffadb905d526299bc-2\""
}</msg>
<status status="PASS" starttime="20231129 08:26:56.352" endtime="20231129 08:26:56.808"/>
</kw>
<status status="PASS" starttime="20231129 08:26:56.351" endtime="20231129 08:26:56.808"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/copyrange/destination /tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:56.812" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-7041349536/copyrange/destination /tmp/part-result 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:57.386" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:57.387" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:26:56 GMT",
    "ContentLength": 10485760,
    "ETag": "\"24d794dfc756320ffadb905d526299bc-2\"",
    "CacheControl": "no-cache",...</msg>
<status status="PASS" starttime="20231129 08:26:56.810" endtime="20231129 08:26:57.387"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:57.388" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:26:56 GMT",
    "ContentLength": 10485760,
    "ETag": "\"24d794dfc756320ffadb905d526299bc-2\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 29 Nov 2023 08:26:57 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231129 08:26:57.387" endtime="20231129 08:26:57.388"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:57.388" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:57.388" endtime="20231129 08:26:57.388"/>
</kw>
<status status="PASS" starttime="20231129 08:26:56.810" endtime="20231129 08:26:57.388"/>
</kw>
<msg timestamp="20231129 08:26:57.389" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:56.809" endtime="20231129 08:26:57.389"/>
</kw>
<msg timestamp="20231129 08:26:57.389" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:26:56 GMT",
    "ContentLength": 10485760,
    "ETag": "\"24d794dfc756320ffadb905d526299bc-2\"",
    "CacheControl": "no-cache",...</msg>
<status status="PASS" starttime="20231129 08:26:56.809" endtime="20231129 08:26:57.389"/>
</kw>
<status status="PASS" starttime="20231129 08:26:56.808" endtime="20231129 08:26:57.389"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/part1</arg>
<arg>/tmp/part-result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:57.392" level="INFO">Running command 'md5sum /tmp/part1 | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:57.412" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:57.412" level="INFO">${output} = 60da8939d74b11dd0884c7277408aaac</msg>
<status status="PASS" starttime="20231129 08:26:57.391" endtime="20231129 08:26:57.412"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:57.412" level="INFO">60da8939d74b11dd0884c7277408aaac</msg>
<status status="PASS" starttime="20231129 08:26:57.412" endtime="20231129 08:26:57.413"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:57.413" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:57.413" endtime="20231129 08:26:57.413"/>
</kw>
<status status="PASS" starttime="20231129 08:26:57.390" endtime="20231129 08:26:57.414"/>
</kw>
<msg timestamp="20231129 08:26:57.414" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:57.390" endtime="20231129 08:26:57.414"/>
</kw>
<msg timestamp="20231129 08:26:57.414" level="INFO">${checksumbefore} = 60da8939d74b11dd0884c7277408aaac</msg>
<status status="PASS" starttime="20231129 08:26:57.390" endtime="20231129 08:26:57.414"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:57.416" level="INFO">Running command 'md5sum /tmp/part-result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:57.436" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:57.436" level="INFO">${output} = 60da8939d74b11dd0884c7277408aaac</msg>
<status status="PASS" starttime="20231129 08:26:57.415" endtime="20231129 08:26:57.436"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:57.437" level="INFO">60da8939d74b11dd0884c7277408aaac</msg>
<status status="PASS" starttime="20231129 08:26:57.436" endtime="20231129 08:26:57.437"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:57.437" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:57.437" endtime="20231129 08:26:57.437"/>
</kw>
<status status="PASS" starttime="20231129 08:26:57.415" endtime="20231129 08:26:57.437"/>
</kw>
<msg timestamp="20231129 08:26:57.437" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:57.414" endtime="20231129 08:26:57.438"/>
</kw>
<msg timestamp="20231129 08:26:57.438" level="INFO">${checksumafter} = 60da8939d74b11dd0884c7277408aaac</msg>
<status status="PASS" starttime="20231129 08:26:57.414" endtime="20231129 08:26:57.438"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231129 08:26:57.438" endtime="20231129 08:26:57.438"/>
</kw>
<status status="PASS" starttime="20231129 08:26:57.389" endtime="20231129 08:26:57.438"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:26:49.684" endtime="20231129 08:26:57.438"/>
</test>
<test id="s1-s1-s8-t14" name="Test Multipart Upload list" line="367">
<kw name="Generate random prefix" library="commonawslib" type="SETUP">
<kw name="Generate Ozone String" library="commonawslib">
<var>${random}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231129 08:26:57.440" level="INFO">${randStr} = 1877614098</msg>
<status status="PASS" starttime="20231129 08:26:57.440" endtime="20231129 08:26:57.441"/>
</kw>
<msg timestamp="20231129 08:26:57.441" level="INFO">${random} = ozone-test-1877614098</msg>
<status status="PASS" starttime="20231129 08:26:57.440" endtime="20231129 08:26:57.441"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${PREFIX}</arg>
<arg>${random}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20231129 08:26:57.441" level="INFO">${PREFIX} = ozone-test-1877614098</msg>
<status status="PASS" starttime="20231129 08:26:57.441" endtime="20231129 08:26:57.441"/>
</kw>
<status status="PASS" starttime="20231129 08:26:57.439" endtime="20231129 08:26:57.441"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/listtest/key1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:57.444" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket erasure --key ozone-test-1877614098/listtest/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:57.884" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:57.884" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-1877614098/listtest/key1",
    "UploadId": "a674d64d-2429-43ed-b173-92f15b0e0532-111492885239562296"
}</msg>
<status status="PASS" starttime="20231129 08:26:57.443" endtime="20231129 08:26:57.884"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:57.885" level="INFO">{
    "Bucket": "erasure",
    "Key": "ozone-test-1877614098/listtest/key1",
    "UploadId": "a674d64d-2429-43ed-b173-92f15b0e0532-111492885239562296"
}</msg>
<status status="PASS" starttime="20231129 08:26:57.885" endtime="20231129 08:26:57.885"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:57.886" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:57.886" endtime="20231129 08:26:57.886"/>
</kw>
<status status="PASS" starttime="20231129 08:26:57.443" endtime="20231129 08:26:57.886"/>
</kw>
<msg timestamp="20231129 08:26:57.886" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:57.442" endtime="20231129 08:26:57.886"/>
</kw>
<msg timestamp="20231129 08:26:57.886" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-1877614098/listtest/key1",
    "UploadId": "a674d64d-2429-43ed-b173-92f15b0e0532-111492885239562296"
}</msg>
<status status="PASS" starttime="20231129 08:26:57.442" endtime="20231129 08:26:57.886"/>
</kw>
<msg timestamp="20231129 08:26:57.887" level="INFO">${result} = {
    "Bucket": "erasure",
    "Key": "ozone-test-1877614098/listtest/key1",
    "UploadId": "a674d64d-2429-43ed-b173-92f15b0e0532-111492885239562296"
}</msg>
<status status="PASS" starttime="20231129 08:26:57.442" endtime="20231129 08:26:57.887"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID1}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:57.889" level="INFO">Running command 'echo '{
    "Bucket": "erasure",
    "Key": "ozone-test-1877614098/listtest/key1",
    "UploadId": "a674d64d-2429-43ed-b173-92f15b0e0532-111492885239562296"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:57.914" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:57.914" level="INFO">${output} = a674d64d-2429-43ed-b173-92f15b0e0532-111492885239562296</msg>
<status status="PASS" starttime="20231129 08:26:57.887" endtime="20231129 08:26:57.914"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:57.915" level="INFO">a674d64d-2429-43ed-b173-92f15b0e0532-111492885239562296</msg>
<status status="PASS" starttime="20231129 08:26:57.915" endtime="20231129 08:26:57.915"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:57.916" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:57.915" endtime="20231129 08:26:57.916"/>
</kw>
<msg timestamp="20231129 08:26:57.916" level="INFO">${uploadID1} = a674d64d-2429-43ed-b173-92f15b0e0532-111492885239562296</msg>
<status status="PASS" starttime="20231129 08:26:57.887" endtime="20231129 08:26:57.916"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:26:57.916" endtime="20231129 08:26:57.916"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/listtest/key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:26:57.917" endtime="20231129 08:26:57.917"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:26:57.917" endtime="20231129 08:26:57.917"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-multipart-upload --bucket ${BUCKET} --key ${PREFIX}/listtest/key2</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:57.920" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-multipart-upload --bucket erasure --key ozone-test-1877614098/listtest/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:58.374" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:58.374" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-1877614098/listtest/key2",
    "UploadId": "848f5ac1-4159-4ae7-9b6d-5ed5ccd399c4-111492885271543865"
}</msg>
<status status="PASS" starttime="20231129 08:26:57.919" endtime="20231129 08:26:58.374"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:58.375" level="INFO">{
    "Bucket": "erasure",
    "Key": "ozone-test-1877614098/listtest/key2",
    "UploadId": "848f5ac1-4159-4ae7-9b6d-5ed5ccd399c4-111492885271543865"
}</msg>
<status status="PASS" starttime="20231129 08:26:58.374" endtime="20231129 08:26:58.375"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:58.375" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:58.375" endtime="20231129 08:26:58.375"/>
</kw>
<status status="PASS" starttime="20231129 08:26:57.919" endtime="20231129 08:26:58.375"/>
</kw>
<msg timestamp="20231129 08:26:58.376" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:57.918" endtime="20231129 08:26:58.376"/>
</kw>
<msg timestamp="20231129 08:26:58.376" level="INFO">${output} = {
    "Bucket": "erasure",
    "Key": "ozone-test-1877614098/listtest/key2",
    "UploadId": "848f5ac1-4159-4ae7-9b6d-5ed5ccd399c4-111492885271543865"
}</msg>
<status status="PASS" starttime="20231129 08:26:57.918" endtime="20231129 08:26:58.376"/>
</kw>
<msg timestamp="20231129 08:26:58.376" level="INFO">${result} = {
    "Bucket": "erasure",
    "Key": "ozone-test-1877614098/listtest/key2",
    "UploadId": "848f5ac1-4159-4ae7-9b6d-5ed5ccd399c4-111492885271543865"
}</msg>
<status status="PASS" starttime="20231129 08:26:57.917" endtime="20231129 08:26:58.376"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${uploadID2}</var>
<arg>echo '${result}' | jq -r '.UploadId'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:58.378" level="INFO">Running command 'echo '{
    "Bucket": "erasure",
    "Key": "ozone-test-1877614098/listtest/key2",
    "UploadId": "848f5ac1-4159-4ae7-9b6d-5ed5ccd399c4-111492885271543865"
}' | jq -r '.UploadId' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:58.404" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:58.404" level="INFO">${output} = 848f5ac1-4159-4ae7-9b6d-5ed5ccd399c4-111492885271543865</msg>
<status status="PASS" starttime="20231129 08:26:58.377" endtime="20231129 08:26:58.404"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:58.405" level="INFO">848f5ac1-4159-4ae7-9b6d-5ed5ccd399c4-111492885271543865</msg>
<status status="PASS" starttime="20231129 08:26:58.404" endtime="20231129 08:26:58.405"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:58.405" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:58.405" endtime="20231129 08:26:58.405"/>
</kw>
<msg timestamp="20231129 08:26:58.406" level="INFO">${uploadID2} = 848f5ac1-4159-4ae7-9b6d-5ed5ccd399c4-111492885271543865</msg>
<status status="PASS" starttime="20231129 08:26:58.376" endtime="20231129 08:26:58.406"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${BUCKET}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:26:58.406" endtime="20231129 08:26:58.406"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/listtest/key2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:26:58.406" endtime="20231129 08:26:58.406"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>UploadId</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:26:58.407" endtime="20231129 08:26:58.407"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-multipart-uploads --bucket ${BUCKET} --prefix ${PREFIX}/listtest</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:58.410" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-multipart-uploads --bucket erasure --prefix ozone-test-1877614098/listtest 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:58.864" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:58.864" level="INFO">${output} = {
    "Uploads": [
        {
            "UploadId": "a674d64d-2429-43ed-b173-92f15b0e0532-111492885239562296",
            "Key": "ozone-test-1877614098/listtest/key1",
            "Initiated": "2023...</msg>
<status status="PASS" starttime="20231129 08:26:58.409" endtime="20231129 08:26:58.864"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:58.865" level="INFO">{
    "Uploads": [
        {
            "UploadId": "a674d64d-2429-43ed-b173-92f15b0e0532-111492885239562296",
            "Key": "ozone-test-1877614098/listtest/key1",
            "Initiated": "2023-11-29T08:26:57.840Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "848f5ac1-4159-4ae7-9b6d-5ed5ccd399c4-111492885271543865",
            "Key": "ozone-test-1877614098/listtest/key2",
            "Initiated": "2023-11-29T08:26:58.328Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        }
    ]
}</msg>
<status status="PASS" starttime="20231129 08:26:58.864" endtime="20231129 08:26:58.865"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:58.865" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:58.865" endtime="20231129 08:26:58.865"/>
</kw>
<status status="PASS" starttime="20231129 08:26:58.408" endtime="20231129 08:26:58.865"/>
</kw>
<msg timestamp="20231129 08:26:58.865" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:58.408" endtime="20231129 08:26:58.866"/>
</kw>
<msg timestamp="20231129 08:26:58.866" level="INFO">${output} = {
    "Uploads": [
        {
            "UploadId": "a674d64d-2429-43ed-b173-92f15b0e0532-111492885239562296",
            "Key": "ozone-test-1877614098/listtest/key1",
            "Initiated": "2023...</msg>
<status status="PASS" starttime="20231129 08:26:58.407" endtime="20231129 08:26:58.866"/>
</kw>
<msg timestamp="20231129 08:26:58.866" level="INFO">${result} = {
    "Uploads": [
        {
            "UploadId": "a674d64d-2429-43ed-b173-92f15b0e0532-111492885239562296",
            "Key": "ozone-test-1877614098/listtest/key1",
            "Initiated": "2023...</msg>
<status status="PASS" starttime="20231129 08:26:58.407" endtime="20231129 08:26:58.866"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${uploadID1}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:26:58.866" endtime="20231129 08:26:58.866"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${uploadID2}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:26:58.866" endtime="20231129 08:26:58.867"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${count}</var>
<arg>echo '${result}' | jq -r '.Uploads | length'</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:58.869" level="INFO">Running command 'echo '{
    "Uploads": [
        {
            "UploadId": "a674d64d-2429-43ed-b173-92f15b0e0532-111492885239562296",
            "Key": "ozone-test-1877614098/listtest/key1",
            "Initiated": "2023-11-29T08:26:57.840Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        },
        {
            "UploadId": "848f5ac1-4159-4ae7-9b6d-5ed5ccd399c4-111492885271543865",
            "Key": "ozone-test-1877614098/listtest/key2",
            "Initiated": "2023-11-29T08:26:58.328Z",
            "StorageClass": "STANDARD",
            "Owner": {
                "DisplayName": "Not Supported",
                "ID": "NOT-SUPPORTED"
            },
            "Initiator": {
                "ID": "NOT-SUPPORTED",
                "DisplayName": "Not Supported"
            }
        }
    ]
}' | jq -r '.Uploads | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:58.895" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:58.895" level="INFO">${output} = 2</msg>
<status status="PASS" starttime="20231129 08:26:58.867" endtime="20231129 08:26:58.895"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:58.895" level="INFO">2</msg>
<status status="PASS" starttime="20231129 08:26:58.895" endtime="20231129 08:26:58.895"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:58.896" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:58.896" endtime="20231129 08:26:58.896"/>
</kw>
<msg timestamp="20231129 08:26:58.896" level="INFO">${count} = 2</msg>
<status status="PASS" starttime="20231129 08:26:58.867" endtime="20231129 08:26:58.896"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${count}</arg>
<arg>2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231129 08:26:58.896" endtime="20231129 08:26:58.897"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:26:57.439" endtime="20231129 08:26:58.897"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20231129 08:26:16.366" endtime="20231129 08:26:58.898"/>
</suite>
<suite id="s1-s1-s9" name="Objectcopy" source="/opt/hadoop/smoketest/s3/objectcopy.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20231129 08:26:58.910" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:58.909" endtime="20231129 08:26:58.910"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231129 08:26:58.910" endtime="20231129 08:26:58.910"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231129 08:26:58.910" endtime="20231129 08:26:58.910"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:26:58.910" endtime="20231129 08:26:58.910"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:26:58.910" endtime="20231129 08:26:58.910"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:26:58.911" endtime="20231129 08:26:58.911"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:26:58.911" endtime="20231129 08:26:58.911"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:26:58.911" endtime="20231129 08:26:58.911"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20231129 08:26:58.911" endtime="20231129 08:26:58.911"/>
</kw>
<status status="PASS" starttime="20231129 08:26:58.909" endtime="20231129 08:26:58.911"/>
</kw>
<test id="s1-s1-s9-t1" name="Copy Object Happy Scenario" line="37">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${DESTBUCKET}' == 'generated1'</arg>
<arg>Create Dest Bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create Dest Bucket">
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231129 08:26:58.913" level="INFO">${postfix} = 63179</msg>
<status status="PASS" starttime="20231129 08:26:58.912" endtime="20231129 08:26:58.913"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${DESTBUCKET}</arg>
<arg>destbucket-${postfix}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231129 08:26:58.913" level="INFO">${DESTBUCKET} = destbucket-63179</msg>
<status status="PASS" starttime="20231129 08:26:58.913" endtime="20231129 08:26:58.913"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>create-bucket --bucket ${DESTBUCKET}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:58.916" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket destbucket-63179 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:59.357" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:59.357" level="INFO">${output} = {
    "Location": "http://s3g:9878/destbucket-63179"
}</msg>
<status status="PASS" starttime="20231129 08:26:58.915" endtime="20231129 08:26:59.357"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:59.358" level="INFO">{
    "Location": "http://s3g:9878/destbucket-63179"
}</msg>
<status status="PASS" starttime="20231129 08:26:59.358" endtime="20231129 08:26:59.358"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:59.359" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:59.359" endtime="20231129 08:26:59.359"/>
</kw>
<status status="PASS" starttime="20231129 08:26:58.914" endtime="20231129 08:26:59.359"/>
</kw>
<msg timestamp="20231129 08:26:59.359" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:58.914" endtime="20231129 08:26:59.359"/>
</kw>
<msg timestamp="20231129 08:26:59.359" level="INFO">${output} = {
    "Location": "http://s3g:9878/destbucket-63179"
}</msg>
<status status="PASS" starttime="20231129 08:26:58.914" endtime="20231129 08:26:59.359"/>
</kw>
<status status="PASS" starttime="20231129 08:26:58.913" endtime="20231129 08:26:59.360"/>
</kw>
<status status="PASS" starttime="20231129 08:26:58.912" endtime="20231129 08:26:59.360"/>
</kw>
<status status="PASS" starttime="20231129 08:26:58.912" endtime="20231129 08:26:59.360"/>
</kw>
<kw name="Execute" library="os">
<arg>date &gt; /tmp/copyfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:59.362" level="INFO">Running command 'date &gt; /tmp/copyfile'.</msg>
<msg timestamp="20231129 08:26:59.364" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:59.364" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:26:59.361" endtime="20231129 08:26:59.364"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:59.365" level="INFO"/>
<status status="PASS" starttime="20231129 08:26:59.364" endtime="20231129 08:26:59.365"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:59.365" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:59.365" endtime="20231129 08:26:59.365"/>
</kw>
<status status="PASS" starttime="20231129 08:26:59.361" endtime="20231129 08:26:59.366"/>
</kw>
<msg timestamp="20231129 08:26:59.366" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:59.360" endtime="20231129 08:26:59.366"/>
</kw>
<status status="PASS" starttime="20231129 08:26:59.360" endtime="20231129 08:26:59.366"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/copyobject/key=value/f1 --body /tmp/copyfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:59.369" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket erasure --key ozone-test-1877614098/copyobject/key=value/f1 --body /tmp/copyfile 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:26:59.847" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:26:59.847" level="INFO">${output} = {
    "ETag": "\"7bb144f63c1a1933b253a1baceb8b4c0\""
}</msg>
<status status="PASS" starttime="20231129 08:26:59.368" endtime="20231129 08:26:59.847"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:26:59.848" level="INFO">{
    "ETag": "\"7bb144f63c1a1933b253a1baceb8b4c0\""
}</msg>
<status status="PASS" starttime="20231129 08:26:59.848" endtime="20231129 08:26:59.848"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:26:59.849" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:26:59.848" endtime="20231129 08:26:59.849"/>
</kw>
<status status="PASS" starttime="20231129 08:26:59.367" endtime="20231129 08:26:59.849"/>
</kw>
<msg timestamp="20231129 08:26:59.849" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:59.367" endtime="20231129 08:26:59.849"/>
</kw>
<msg timestamp="20231129 08:26:59.850" level="INFO">${output} = {
    "ETag": "\"7bb144f63c1a1933b253a1baceb8b4c0\""
}</msg>
<status status="PASS" starttime="20231129 08:26:59.367" endtime="20231129 08:26:59.850"/>
</kw>
<msg timestamp="20231129 08:26:59.850" level="INFO">${result} = {
    "ETag": "\"7bb144f63c1a1933b253a1baceb8b4c0\""
}</msg>
<status status="PASS" starttime="20231129 08:26:59.366" endtime="20231129 08:26:59.850"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/copyobject/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:26:59.853" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket erasure --prefix ozone-test-1877614098/copyobject/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:00.310" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:00.310" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-1877614098/copyobject/key=value/",
            "LastModified": "2023-11-29T08:26:59.766Z",
            "ETag": "2023-11-29T08:26:59.766Z",
...</msg>
<status status="PASS" starttime="20231129 08:26:59.852" endtime="20231129 08:27:00.310"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:00.311" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-1877614098/copyobject/key=value/",
            "LastModified": "2023-11-29T08:26:59.766Z",
            "ETag": "2023-11-29T08:26:59.766Z",
            "Size": 0,
            "StorageClass": "STANDARD"
        },
        {
            "Key": "ozone-test-1877614098/copyobject/key=value/f1",
            "LastModified": "2023-11-29T08:26:59.802Z",
            "ETag": "2023-11-29T08:26:59.802Z",
            "Size": 29,
            "StorageClass": "STANDARD"
        }
    ]
}</msg>
<status status="PASS" starttime="20231129 08:27:00.310" endtime="20231129 08:27:00.311"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:00.311" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:00.311" endtime="20231129 08:27:00.312"/>
</kw>
<status status="PASS" starttime="20231129 08:26:59.851" endtime="20231129 08:27:00.312"/>
</kw>
<msg timestamp="20231129 08:27:00.312" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:26:59.851" endtime="20231129 08:27:00.312"/>
</kw>
<msg timestamp="20231129 08:27:00.312" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-1877614098/copyobject/key=value/",
            "LastModified": "2023-11-29T08:26:59.766Z",
            "ETag": "2023-11-29T08:26:59.766Z",
...</msg>
<status status="PASS" starttime="20231129 08:26:59.851" endtime="20231129 08:27:00.312"/>
</kw>
<msg timestamp="20231129 08:27:00.312" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-1877614098/copyobject/key=value/",
            "LastModified": "2023-11-29T08:26:59.766Z",
            "ETag": "2023-11-29T08:26:59.766Z",
...</msg>
<status status="PASS" starttime="20231129 08:26:59.850" endtime="20231129 08:27:00.312"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:27:00.312" endtime="20231129 08:27:00.313"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${BUCKET}/${PREFIX}/copyobject/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:00.316" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-63179 --key ozone-test-1877614098/copyobject/key=value/f1 --copy-source erasure/ozone-test-1877614098/copyobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:01.150" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:01.150" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "91c7a0b9-78c2-445e-9e9d-a83a68192182",
        "LastModified": "2023-11-29T08:27:01.068Z"
    }
}</msg>
<status status="PASS" starttime="20231129 08:27:00.315" endtime="20231129 08:27:01.150"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:01.151" level="INFO">{
    "CopyObjectResult": {
        "ETag": "91c7a0b9-78c2-445e-9e9d-a83a68192182",
        "LastModified": "2023-11-29T08:27:01.068Z"
    }
}</msg>
<status status="PASS" starttime="20231129 08:27:01.150" endtime="20231129 08:27:01.151"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:01.151" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:01.151" endtime="20231129 08:27:01.151"/>
</kw>
<status status="PASS" starttime="20231129 08:27:00.314" endtime="20231129 08:27:01.152"/>
</kw>
<msg timestamp="20231129 08:27:01.152" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:00.314" endtime="20231129 08:27:01.152"/>
</kw>
<msg timestamp="20231129 08:27:01.152" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "91c7a0b9-78c2-445e-9e9d-a83a68192182",
        "LastModified": "2023-11-29T08:27:01.068Z"
    }
}</msg>
<status status="PASS" starttime="20231129 08:27:00.314" endtime="20231129 08:27:01.152"/>
</kw>
<msg timestamp="20231129 08:27:01.152" level="INFO">${result} = {
    "CopyObjectResult": {
        "ETag": "91c7a0b9-78c2-445e-9e9d-a83a68192182",
        "LastModified": "2023-11-29T08:27:01.068Z"
    }
}</msg>
<status status="PASS" starttime="20231129 08:27:00.313" endtime="20231129 08:27:01.152"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${DESTBUCKET} --prefix ${PREFIX}/copyobject/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:01.155" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket destbucket-63179 --prefix ozone-test-1877614098/copyobject/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:01.608" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:01.608" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-1877614098/copyobject/key=value/f1",
            "LastModified": "2023-11-29T08:27:01.068Z",
            "ETag": "2023-11-29T08:27:01.068Z"...</msg>
<status status="PASS" starttime="20231129 08:27:01.154" endtime="20231129 08:27:01.608"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:01.609" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-1877614098/copyobject/key=value/f1",
            "LastModified": "2023-11-29T08:27:01.068Z",
            "ETag": "2023-11-29T08:27:01.068Z",
            "Size": 29,
            "StorageClass": "STANDARD"
        }
    ]
}</msg>
<status status="PASS" starttime="20231129 08:27:01.608" endtime="20231129 08:27:01.609"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:01.609" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:01.609" endtime="20231129 08:27:01.609"/>
</kw>
<status status="PASS" starttime="20231129 08:27:01.154" endtime="20231129 08:27:01.609"/>
</kw>
<msg timestamp="20231129 08:27:01.609" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:01.153" endtime="20231129 08:27:01.609"/>
</kw>
<msg timestamp="20231129 08:27:01.610" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-1877614098/copyobject/key=value/f1",
            "LastModified": "2023-11-29T08:27:01.068Z",
            "ETag": "2023-11-29T08:27:01.068Z"...</msg>
<status status="PASS" starttime="20231129 08:27:01.153" endtime="20231129 08:27:01.610"/>
</kw>
<msg timestamp="20231129 08:27:01.610" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-1877614098/copyobject/key=value/f1",
            "LastModified": "2023-11-29T08:27:01.068Z",
            "ETag": "2023-11-29T08:27:01.068Z"...</msg>
<status status="PASS" starttime="20231129 08:27:01.152" endtime="20231129 08:27:01.610"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:27:01.610" endtime="20231129 08:27:01.610"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${BUCKET}/${PREFIX}/copyobject/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:01.614" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-63179 --key ozone-test-1877614098/copyobject/key=value/f1 --copy-source erasure/ozone-test-1877614098/copyobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:02.148" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:02.148" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "cfb3da8d-e857-4295-b80a-6ef93a97e9f0",
        "LastModified": "2023-11-29T08:27:02.070Z"
    }
}</msg>
<status status="PASS" starttime="20231129 08:27:01.612" endtime="20231129 08:27:02.148"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:02.149" level="INFO">{
    "CopyObjectResult": {
        "ETag": "cfb3da8d-e857-4295-b80a-6ef93a97e9f0",
        "LastModified": "2023-11-29T08:27:02.070Z"
    }
}</msg>
<status status="PASS" starttime="20231129 08:27:02.149" endtime="20231129 08:27:02.149"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:02.150" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:02.150" endtime="20231129 08:27:02.150"/>
</kw>
<status status="PASS" starttime="20231129 08:27:01.612" endtime="20231129 08:27:02.150"/>
</kw>
<msg timestamp="20231129 08:27:02.150" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:01.612" endtime="20231129 08:27:02.151"/>
</kw>
<msg timestamp="20231129 08:27:02.151" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "cfb3da8d-e857-4295-b80a-6ef93a97e9f0",
        "LastModified": "2023-11-29T08:27:02.070Z"
    }
}</msg>
<status status="PASS" starttime="20231129 08:27:01.611" endtime="20231129 08:27:02.151"/>
</kw>
<msg timestamp="20231129 08:27:02.151" level="INFO">${result} = {
    "CopyObjectResult": {
        "ETag": "cfb3da8d-e857-4295-b80a-6ef93a97e9f0",
        "LastModified": "2023-11-29T08:27:02.070Z"
    }
}</msg>
<status status="PASS" starttime="20231129 08:27:01.611" endtime="20231129 08:27:02.151"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${DESTBUCKET} --prefix ${PREFIX}/copyobject/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:02.155" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket destbucket-63179 --prefix ozone-test-1877614098/copyobject/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:02.597" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:02.597" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-1877614098/copyobject/key=value/f1",
            "LastModified": "2023-11-29T08:27:02.070Z",
            "ETag": "2023-11-29T08:27:02.070Z"...</msg>
<status status="PASS" starttime="20231129 08:27:02.154" endtime="20231129 08:27:02.597"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:02.598" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-1877614098/copyobject/key=value/f1",
            "LastModified": "2023-11-29T08:27:02.070Z",
            "ETag": "2023-11-29T08:27:02.070Z",
            "Size": 29,
            "StorageClass": "STANDARD"
        }
    ]
}</msg>
<status status="PASS" starttime="20231129 08:27:02.598" endtime="20231129 08:27:02.598"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:02.599" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:02.598" endtime="20231129 08:27:02.599"/>
</kw>
<status status="PASS" starttime="20231129 08:27:02.153" endtime="20231129 08:27:02.599"/>
</kw>
<msg timestamp="20231129 08:27:02.599" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:02.153" endtime="20231129 08:27:02.599"/>
</kw>
<msg timestamp="20231129 08:27:02.599" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-1877614098/copyobject/key=value/f1",
            "LastModified": "2023-11-29T08:27:02.070Z",
            "ETag": "2023-11-29T08:27:02.070Z"...</msg>
<status status="PASS" starttime="20231129 08:27:02.152" endtime="20231129 08:27:02.599"/>
</kw>
<msg timestamp="20231129 08:27:02.599" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-1877614098/copyobject/key=value/f1",
            "LastModified": "2023-11-29T08:27:02.070Z",
            "ETag": "2023-11-29T08:27:02.070Z"...</msg>
<status status="PASS" starttime="20231129 08:27:02.151" endtime="20231129 08:27:02.599"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:27:02.600" endtime="20231129 08:27:02.600"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:26:58.911" endtime="20231129 08:27:02.600"/>
</test>
<test id="s1-s1-s9-t2" name="Copy Object Where Bucket is not available" line="52">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket dfdfdfdfdfnonexistent --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${BUCKET}/${PREFIX}/copyobject/key=value/f1</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:02.604" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket dfdfdfdfdfnonexistent --key ozone-test-1877614098/copyobject/key=value/f1 --copy-source erasure/ozone-test-1877614098/copyobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:03.062" level="INFO">${rc} = 255</msg>
<msg timestamp="20231129 08:27:03.062" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20231129 08:27:02.602" endtime="20231129 08:27:03.062"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:03.064" level="INFO">
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20231129 08:27:03.063" endtime="20231129 08:27:03.064"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:03.064" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:03.064" endtime="20231129 08:27:03.064"/>
</kw>
<msg timestamp="20231129 08:27:03.065" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20231129 08:27:02.602" endtime="20231129 08:27:03.065"/>
</kw>
<msg timestamp="20231129 08:27:03.065" level="INFO">${result} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20231129 08:27:02.601" endtime="20231129 08:27:03.065"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchBucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:27:03.065" endtime="20231129 08:27:03.066"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source dfdfdfdfdfnonexistent/${PREFIX}/copyobject/key=value/f1</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:03.069" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-63179 --key ozone-test-1877614098/copyobject/key=value/f1 --copy-source dfdfdfdfdfnonexistent/ozone-test-1877614098/copyobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:03.554" level="INFO">${rc} = 255</msg>
<msg timestamp="20231129 08:27:03.554" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20231129 08:27:03.067" endtime="20231129 08:27:03.554"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:03.555" level="INFO">
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20231129 08:27:03.554" endtime="20231129 08:27:03.555"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:03.555" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:03.555" endtime="20231129 08:27:03.555"/>
</kw>
<msg timestamp="20231129 08:27:03.555" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20231129 08:27:03.066" endtime="20231129 08:27:03.555"/>
</kw>
<msg timestamp="20231129 08:27:03.556" level="INFO">${result} = 
An error occurred (NoSuchBucket) when calling the CopyObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20231129 08:27:03.066" endtime="20231129 08:27:03.556"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchBucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:27:03.556" endtime="20231129 08:27:03.556"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:27:02.600" endtime="20231129 08:27:03.556"/>
</test>
<test id="s1-s1-s9-t3" name="Copy Object Where both source and dest are same with change to storageclass" line="58">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>copy-object --storage-class REDUCED_REDUNDANCY --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${DESTBUCKET}/${PREFIX}/copyobject/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:03.561" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --storage-class REDUCED_REDUNDANCY --bucket destbucket-63179 --key ozone-test-1877614098/copyobject/key=value/f1 --copy-source destbucket-63179/ozone-test-1877614098/copyobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:04.008" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:04.008" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "61aaba9a-3caa-4b49-99b8-822bad5eb84b",
        "LastModified": "2023-11-29T08:27:03.968Z"
    }
}</msg>
<status status="PASS" starttime="20231129 08:27:03.559" endtime="20231129 08:27:04.008"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:04.009" level="INFO">{
    "CopyObjectResult": {
        "ETag": "61aaba9a-3caa-4b49-99b8-822bad5eb84b",
        "LastModified": "2023-11-29T08:27:03.968Z"
    }
}</msg>
<status status="PASS" starttime="20231129 08:27:04.009" endtime="20231129 08:27:04.009"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:04.010" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:04.009" endtime="20231129 08:27:04.010"/>
</kw>
<status status="PASS" starttime="20231129 08:27:03.559" endtime="20231129 08:27:04.010"/>
</kw>
<msg timestamp="20231129 08:27:04.010" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:03.559" endtime="20231129 08:27:04.010"/>
</kw>
<msg timestamp="20231129 08:27:04.010" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "61aaba9a-3caa-4b49-99b8-822bad5eb84b",
        "LastModified": "2023-11-29T08:27:03.968Z"
    }
}</msg>
<status status="PASS" starttime="20231129 08:27:03.558" endtime="20231129 08:27:04.010"/>
</kw>
<msg timestamp="20231129 08:27:04.010" level="INFO">${result} = {
    "CopyObjectResult": {
        "ETag": "61aaba9a-3caa-4b49-99b8-822bad5eb84b",
        "LastModified": "2023-11-29T08:27:03.968Z"
    }
}</msg>
<status status="PASS" starttime="20231129 08:27:03.558" endtime="20231129 08:27:04.011"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ETag</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:27:04.011" endtime="20231129 08:27:04.011"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:27:03.557" endtime="20231129 08:27:04.011"/>
</test>
<test id="s1-s1-s9-t4" name="Copy Object Where Key not available" line="62">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${DESTBUCKET} --key ${PREFIX}/copyobject/key=value/f1 --copy-source ${BUCKET}/nonnonexistentkey</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:04.015" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket destbucket-63179 --key ozone-test-1877614098/copyobject/key=value/f1 --copy-source erasure/nonnonexistentkey 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:04.461" level="INFO">${rc} = 255</msg>
<msg timestamp="20231129 08:27:04.461" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20231129 08:27:04.013" endtime="20231129 08:27:04.461"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:04.462" level="INFO">
An error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20231129 08:27:04.462" endtime="20231129 08:27:04.462"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:04.463" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:04.462" endtime="20231129 08:27:04.463"/>
</kw>
<msg timestamp="20231129 08:27:04.463" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20231129 08:27:04.013" endtime="20231129 08:27:04.463"/>
</kw>
<msg timestamp="20231129 08:27:04.463" level="INFO">${result} = 
An error occurred (NoSuchKey) when calling the CopyObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20231129 08:27:04.012" endtime="20231129 08:27:04.463"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:27:04.463" endtime="20231129 08:27:04.464"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:27:04.012" endtime="20231129 08:27:04.464"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20231129 08:26:58.901" endtime="20231129 08:27:04.465"/>
</suite>
<suite id="s1-s1-s10" name="Objectcopys3A" source="/opt/hadoop/smoketest/s3/objectcopys3a.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20231129 08:27:04.475" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:04.475" endtime="20231129 08:27:04.475"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231129 08:27:04.475" endtime="20231129 08:27:04.475"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231129 08:27:04.475" endtime="20231129 08:27:04.475"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:27:04.476" endtime="20231129 08:27:04.476"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:27:04.476" endtime="20231129 08:27:04.476"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:27:04.476" endtime="20231129 08:27:04.476"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:27:04.476" endtime="20231129 08:27:04.476"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:27:04.476" endtime="20231129 08:27:04.476"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20231129 08:27:04.476" endtime="20231129 08:27:04.476"/>
</kw>
<status status="PASS" starttime="20231129 08:27:04.474" endtime="20231129 08:27:04.477"/>
</kw>
<test id="s1-s1-s10-t1" name="Put object s3a simulation" line="30">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:04.479" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile'.</msg>
<msg timestamp="20231129 08:27:04.481" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:04.481" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:27:04.478" endtime="20231129 08:27:04.481"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:04.481" level="INFO"/>
<status status="PASS" starttime="20231129 08:27:04.481" endtime="20231129 08:27:04.482"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:04.482" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:04.482" endtime="20231129 08:27:04.482"/>
</kw>
<status status="PASS" starttime="20231129 08:27:04.478" endtime="20231129 08:27:04.482"/>
</kw>
<msg timestamp="20231129 08:27:04.482" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:04.477" endtime="20231129 08:27:04.482"/>
</kw>
<status status="PASS" starttime="20231129 08:27:04.477" endtime="20231129 08:27:04.483"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/word.txt</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:04.485" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket erasure --key ozone-test-1877614098/word.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:04.933" level="INFO">${rc} = 255</msg>
<msg timestamp="20231129 08:27:04.933" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231129 08:27:04.484" endtime="20231129 08:27:04.933"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:04.934" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231129 08:27:04.933" endtime="20231129 08:27:04.934"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:04.934" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:04.934" endtime="20231129 08:27:04.934"/>
</kw>
<msg timestamp="20231129 08:27:04.935" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231129 08:27:04.483" endtime="20231129 08:27:04.935"/>
</kw>
<msg timestamp="20231129 08:27:04.935" level="INFO">${result} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231129 08:27:04.483" endtime="20231129 08:27:04.935"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/word.txt/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:04.938" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket erasure --prefix ozone-test-1877614098/word.txt/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:05.385" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:05.385" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:27:04.936" endtime="20231129 08:27:05.385"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:05.386" level="INFO"/>
<status status="PASS" starttime="20231129 08:27:05.386" endtime="20231129 08:27:05.386"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:05.387" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:05.387" endtime="20231129 08:27:05.387"/>
</kw>
<status status="PASS" starttime="20231129 08:27:04.936" endtime="20231129 08:27:05.387"/>
</kw>
<msg timestamp="20231129 08:27:05.387" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:04.936" endtime="20231129 08:27:05.387"/>
</kw>
<msg timestamp="20231129 08:27:05.387" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:27:04.935" endtime="20231129 08:27:05.387"/>
</kw>
<msg timestamp="20231129 08:27:05.388" level="INFO">${result} = </msg>
<status status="PASS" starttime="20231129 08:27:04.935" endtime="20231129 08:27:05.388"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>word.txt</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:27:05.388" endtime="20231129 08:27:05.388"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/word.txt._COPYING_</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:05.391" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket erasure --key ozone-test-1877614098/word.txt._COPYING_ 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:05.836" level="INFO">${rc} = 255</msg>
<msg timestamp="20231129 08:27:05.836" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231129 08:27:05.389" endtime="20231129 08:27:05.836"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:05.837" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231129 08:27:05.836" endtime="20231129 08:27:05.837"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:05.837" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:05.837" endtime="20231129 08:27:05.837"/>
</kw>
<msg timestamp="20231129 08:27:05.838" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231129 08:27:05.389" endtime="20231129 08:27:05.838"/>
</kw>
<msg timestamp="20231129 08:27:05.838" level="INFO">${result} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231129 08:27:05.388" endtime="20231129 08:27:05.838"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/word.txt._COPYING_/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:05.841" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket erasure --prefix ozone-test-1877614098/word.txt._COPYING_/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:06.286" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:06.286" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:27:05.839" endtime="20231129 08:27:06.287"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:06.287" level="INFO"/>
<status status="PASS" starttime="20231129 08:27:06.287" endtime="20231129 08:27:06.287"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:06.288" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:06.288" endtime="20231129 08:27:06.288"/>
</kw>
<status status="PASS" starttime="20231129 08:27:05.839" endtime="20231129 08:27:06.288"/>
</kw>
<msg timestamp="20231129 08:27:06.288" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:05.839" endtime="20231129 08:27:06.288"/>
</kw>
<msg timestamp="20231129 08:27:06.289" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:27:05.838" endtime="20231129 08:27:06.289"/>
</kw>
<msg timestamp="20231129 08:27:06.289" level="INFO">${result} = </msg>
<status status="PASS" starttime="20231129 08:27:05.838" endtime="20231129 08:27:06.289"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>word.txt._COPYING_</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:27:06.289" endtime="20231129 08:27:06.289"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/word.txt._COPYING_ --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:06.293" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket erasure --key ozone-test-1877614098/word.txt._COPYING_ --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:06.782" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:06.782" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231129 08:27:06.291" endtime="20231129 08:27:06.782"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:06.783" level="INFO">{
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231129 08:27:06.782" endtime="20231129 08:27:06.783"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:06.783" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:06.783" endtime="20231129 08:27:06.783"/>
</kw>
<status status="PASS" starttime="20231129 08:27:06.290" endtime="20231129 08:27:06.783"/>
</kw>
<msg timestamp="20231129 08:27:06.784" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:06.290" endtime="20231129 08:27:06.784"/>
</kw>
<msg timestamp="20231129 08:27:06.784" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231129 08:27:06.290" endtime="20231129 08:27:06.784"/>
</kw>
<msg timestamp="20231129 08:27:06.784" level="INFO">${result} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231129 08:27:06.289" endtime="20231129 08:27:06.784"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/word.txt._COPYING_</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:06.787" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket erasure --key ozone-test-1877614098/word.txt._COPYING_ 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:07.260" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:07.260" level="INFO">${output} = {
    "LastModified": "Wed, 29 Nov 2023 08:27:06 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20231129 08:27:06.785" endtime="20231129 08:27:07.260"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:07.261" level="INFO">{
    "LastModified": "Wed, 29 Nov 2023 08:27:06 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Wed, 29 Nov 2023 08:27:07 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231129 08:27:07.260" endtime="20231129 08:27:07.261"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:07.261" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:07.261" endtime="20231129 08:27:07.261"/>
</kw>
<msg timestamp="20231129 08:27:07.262" level="INFO">${output} = {
    "LastModified": "Wed, 29 Nov 2023 08:27:06 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20231129 08:27:06.785" endtime="20231129 08:27:07.262"/>
</kw>
<status status="PASS" starttime="20231129 08:27:06.784" endtime="20231129 08:27:07.262"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/word.txt</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:07.264" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket erasure --key ozone-test-1877614098/word.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:07.713" level="INFO">${rc} = 255</msg>
<msg timestamp="20231129 08:27:07.714" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231129 08:27:07.263" endtime="20231129 08:27:07.714"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:07.715" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231129 08:27:07.714" endtime="20231129 08:27:07.715"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:07.715" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:07.715" endtime="20231129 08:27:07.715"/>
</kw>
<msg timestamp="20231129 08:27:07.715" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231129 08:27:07.262" endtime="20231129 08:27:07.715"/>
</kw>
<status status="PASS" starttime="20231129 08:27:07.262" endtime="20231129 08:27:07.716"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/word.txt/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:07.719" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket erasure --prefix ozone-test-1877614098/word.txt/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:08.161" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:08.161" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:27:07.717" endtime="20231129 08:27:08.161"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:08.162" level="INFO"/>
<status status="PASS" starttime="20231129 08:27:08.162" endtime="20231129 08:27:08.162"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:08.163" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:08.162" endtime="20231129 08:27:08.163"/>
</kw>
<status status="PASS" starttime="20231129 08:27:07.717" endtime="20231129 08:27:08.163"/>
</kw>
<msg timestamp="20231129 08:27:08.163" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:07.717" endtime="20231129 08:27:08.163"/>
</kw>
<msg timestamp="20231129 08:27:08.163" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:27:07.716" endtime="20231129 08:27:08.163"/>
</kw>
<msg timestamp="20231129 08:27:08.164" level="INFO">${result} = </msg>
<status status="PASS" starttime="20231129 08:27:07.716" endtime="20231129 08:27:08.164"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>word.txt._COPYING_</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:27:08.164" endtime="20231129 08:27:08.164"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>copy-object --bucket ${BUCKET} --key ${PREFIX}/word.txt --copy-source ${BUCKET}/${PREFIX}/word.txt._COPYING_</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:08.167" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 copy-object --bucket erasure --key ozone-test-1877614098/word.txt --copy-source erasure/ozone-test-1877614098/word.txt._COPYING_ 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:08.708" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:08.708" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "be56a74c-6404-41b4-b42f-f57e9cdfde62",
        "LastModified": "2023-11-29T08:27:08.652Z"
    }
}</msg>
<status status="PASS" starttime="20231129 08:27:08.166" endtime="20231129 08:27:08.708"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:08.709" level="INFO">{
    "CopyObjectResult": {
        "ETag": "be56a74c-6404-41b4-b42f-f57e9cdfde62",
        "LastModified": "2023-11-29T08:27:08.652Z"
    }
}</msg>
<status status="PASS" starttime="20231129 08:27:08.708" endtime="20231129 08:27:08.709"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:08.709" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:08.709" endtime="20231129 08:27:08.709"/>
</kw>
<status status="PASS" starttime="20231129 08:27:08.165" endtime="20231129 08:27:08.709"/>
</kw>
<msg timestamp="20231129 08:27:08.709" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:08.165" endtime="20231129 08:27:08.709"/>
</kw>
<msg timestamp="20231129 08:27:08.710" level="INFO">${output} = {
    "CopyObjectResult": {
        "ETag": "be56a74c-6404-41b4-b42f-f57e9cdfde62",
        "LastModified": "2023-11-29T08:27:08.652Z"
    }
}</msg>
<status status="PASS" starttime="20231129 08:27:08.165" endtime="20231129 08:27:08.710"/>
</kw>
<msg timestamp="20231129 08:27:08.710" level="INFO">${result} = {
    "CopyObjectResult": {
        "ETag": "be56a74c-6404-41b4-b42f-f57e9cdfde62",
        "LastModified": "2023-11-29T08:27:08.652Z"
    }
}</msg>
<status status="PASS" starttime="20231129 08:27:08.164" endtime="20231129 08:27:08.710"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/word.txt</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:08.713" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket erasure --key ozone-test-1877614098/word.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:09.155" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:09.155" level="INFO">${output} = {
    "LastModified": "Wed, 29 Nov 2023 08:27:08 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20231129 08:27:08.711" endtime="20231129 08:27:09.155"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:09.156" level="INFO">{
    "LastModified": "Wed, 29 Nov 2023 08:27:08 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Wed, 29 Nov 2023 08:27:09 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231129 08:27:09.156" endtime="20231129 08:27:09.156"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:09.157" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:09.156" endtime="20231129 08:27:09.157"/>
</kw>
<msg timestamp="20231129 08:27:09.157" level="INFO">${output} = {
    "LastModified": "Wed, 29 Nov 2023 08:27:08 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20231129 08:27:08.711" endtime="20231129 08:27:09.157"/>
</kw>
<status status="PASS" starttime="20231129 08:27:08.710" endtime="20231129 08:27:09.157"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/word.txt._COPYING_</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:09.160" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket erasure --key ozone-test-1877614098/word.txt._COPYING_ 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:09.634" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:09.634" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:27:09.159" endtime="20231129 08:27:09.634"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:09.635" level="INFO"/>
<status status="PASS" starttime="20231129 08:27:09.634" endtime="20231129 08:27:09.635"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:09.635" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:09.635" endtime="20231129 08:27:09.635"/>
</kw>
<status status="PASS" starttime="20231129 08:27:09.158" endtime="20231129 08:27:09.635"/>
</kw>
<msg timestamp="20231129 08:27:09.635" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:09.158" endtime="20231129 08:27:09.636"/>
</kw>
<msg timestamp="20231129 08:27:09.636" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:27:09.158" endtime="20231129 08:27:09.636"/>
</kw>
<status status="PASS" starttime="20231129 08:27:09.157" endtime="20231129 08:27:09.636"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/word.txt._COPYING_</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:09.639" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket erasure --key ozone-test-1877614098/word.txt._COPYING_ 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:10.083" level="INFO">${rc} = 255</msg>
<msg timestamp="20231129 08:27:10.083" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231129 08:27:09.637" endtime="20231129 08:27:10.083"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:10.084" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231129 08:27:10.083" endtime="20231129 08:27:10.084"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:10.084" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:10.084" endtime="20231129 08:27:10.084"/>
</kw>
<msg timestamp="20231129 08:27:10.084" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231129 08:27:09.637" endtime="20231129 08:27:10.084"/>
</kw>
<status status="PASS" starttime="20231129 08:27:09.636" endtime="20231129 08:27:10.085"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:27:04.477" endtime="20231129 08:27:10.085"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20231129 08:27:04.466" endtime="20231129 08:27:10.085"/>
</suite>
<suite id="s1-s1-s11" name="Objectdelete" source="/opt/hadoop/smoketest/s3/objectdelete.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20231129 08:27:10.096" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:10.095" endtime="20231129 08:27:10.096"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231129 08:27:10.096" endtime="20231129 08:27:10.096"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231129 08:27:10.096" endtime="20231129 08:27:10.096"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:27:10.096" endtime="20231129 08:27:10.096"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:27:10.096" endtime="20231129 08:27:10.096"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:27:10.096" endtime="20231129 08:27:10.096"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:27:10.097" endtime="20231129 08:27:10.097"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:27:10.097" endtime="20231129 08:27:10.097"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20231129 08:27:10.097" endtime="20231129 08:27:10.097"/>
</kw>
<status status="PASS" starttime="20231129 08:27:10.095" endtime="20231129 08:27:10.097"/>
</kw>
<test id="s1-s1-s11-t1" name="Delete file with s3api" line="30">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:10.100" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20231129 08:27:10.102" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:10.102" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:27:10.099" endtime="20231129 08:27:10.102"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:10.103" level="INFO"/>
<status status="PASS" starttime="20231129 08:27:10.102" endtime="20231129 08:27:10.103"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:10.103" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:10.103" endtime="20231129 08:27:10.103"/>
</kw>
<status status="PASS" starttime="20231129 08:27:10.098" endtime="20231129 08:27:10.103"/>
</kw>
<msg timestamp="20231129 08:27:10.103" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:10.098" endtime="20231129 08:27:10.103"/>
</kw>
<status status="PASS" starttime="20231129 08:27:10.098" endtime="20231129 08:27:10.104"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapi/key=value/f1 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:10.106" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket erasure --key ozone-test-1877614098/deletetestapi/key=value/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:10.592" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:10.592" level="INFO">${output} = {
    "ETag": "\"de49302151f40eaa1c48782f3469bf51\""
}</msg>
<status status="PASS" starttime="20231129 08:27:10.105" endtime="20231129 08:27:10.592"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:10.593" level="INFO">{
    "ETag": "\"de49302151f40eaa1c48782f3469bf51\""
}</msg>
<status status="PASS" starttime="20231129 08:27:10.592" endtime="20231129 08:27:10.593"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:10.593" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:10.593" endtime="20231129 08:27:10.593"/>
</kw>
<status status="PASS" starttime="20231129 08:27:10.105" endtime="20231129 08:27:10.593"/>
</kw>
<msg timestamp="20231129 08:27:10.593" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:10.105" endtime="20231129 08:27:10.594"/>
</kw>
<msg timestamp="20231129 08:27:10.594" level="INFO">${output} = {
    "ETag": "\"de49302151f40eaa1c48782f3469bf51\""
}</msg>
<status status="PASS" starttime="20231129 08:27:10.104" endtime="20231129 08:27:10.594"/>
</kw>
<msg timestamp="20231129 08:27:10.594" level="INFO">${result} = {
    "ETag": "\"de49302151f40eaa1c48782f3469bf51\""
}</msg>
<status status="PASS" starttime="20231129 08:27:10.104" endtime="20231129 08:27:10.594"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/deletetestapi/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:10.597" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket erasure --prefix ozone-test-1877614098/deletetestapi/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:11.055" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:11.055" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-1877614098/deletetestapi/key=value/",
            "LastModified": "2023-11-29T08:27:10.512Z",
            "ETag": "2023-11-29T08:27:10.512Z...</msg>
<status status="PASS" starttime="20231129 08:27:10.596" endtime="20231129 08:27:11.055"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:11.056" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-1877614098/deletetestapi/key=value/",
            "LastModified": "2023-11-29T08:27:10.512Z",
            "ETag": "2023-11-29T08:27:10.512Z",
            "Size": 0,
            "StorageClass": "STANDARD"
        },
        {
            "Key": "ozone-test-1877614098/deletetestapi/key=value/f1",
            "LastModified": "2023-11-29T08:27:10.545Z",
            "ETag": "2023-11-29T08:27:10.545Z",
            "Size": 29,
            "StorageClass": "STANDARD"
        }
    ]
}</msg>
<status status="PASS" starttime="20231129 08:27:11.056" endtime="20231129 08:27:11.056"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:11.057" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:11.056" endtime="20231129 08:27:11.057"/>
</kw>
<status status="PASS" starttime="20231129 08:27:10.595" endtime="20231129 08:27:11.057"/>
</kw>
<msg timestamp="20231129 08:27:11.057" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:10.595" endtime="20231129 08:27:11.057"/>
</kw>
<msg timestamp="20231129 08:27:11.057" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-1877614098/deletetestapi/key=value/",
            "LastModified": "2023-11-29T08:27:10.512Z",
            "ETag": "2023-11-29T08:27:10.512Z...</msg>
<status status="PASS" starttime="20231129 08:27:10.595" endtime="20231129 08:27:11.058"/>
</kw>
<msg timestamp="20231129 08:27:11.058" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-1877614098/deletetestapi/key=value/",
            "LastModified": "2023-11-29T08:27:10.512Z",
            "ETag": "2023-11-29T08:27:10.512Z...</msg>
<status status="PASS" starttime="20231129 08:27:10.594" endtime="20231129 08:27:11.058"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>"${PREFIX}/deletetestapi/key=value/f1"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:27:11.058" endtime="20231129 08:27:11.058"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapi/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:11.062" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket erasure --key ozone-test-1877614098/deletetestapi/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:11.505" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:11.505" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:27:11.060" endtime="20231129 08:27:11.505"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:11.506" level="INFO"/>
<status status="PASS" starttime="20231129 08:27:11.505" endtime="20231129 08:27:11.506"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:11.506" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:11.506" endtime="20231129 08:27:11.507"/>
</kw>
<status status="PASS" starttime="20231129 08:27:11.060" endtime="20231129 08:27:11.507"/>
</kw>
<msg timestamp="20231129 08:27:11.507" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:11.059" endtime="20231129 08:27:11.507"/>
</kw>
<msg timestamp="20231129 08:27:11.507" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:27:11.059" endtime="20231129 08:27:11.507"/>
</kw>
<msg timestamp="20231129 08:27:11.507" level="INFO">${result} = </msg>
<status status="PASS" starttime="20231129 08:27:11.058" endtime="20231129 08:27:11.507"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/deletetestapi/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:11.511" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket erasure --prefix ozone-test-1877614098/deletetestapi/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:11.964" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:11.965" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-1877614098/deletetestapi/key=value/",
            "LastModified": "2023-11-29T08:27:10.512Z",
            "ETag": "2023-11-29T08:27:10.512Z...</msg>
<status status="PASS" starttime="20231129 08:27:11.509" endtime="20231129 08:27:11.965"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:11.965" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-1877614098/deletetestapi/key=value/",
            "LastModified": "2023-11-29T08:27:10.512Z",
            "ETag": "2023-11-29T08:27:10.512Z",
            "Size": 0,
            "StorageClass": "STANDARD"
        }
    ]
}</msg>
<status status="PASS" starttime="20231129 08:27:11.965" endtime="20231129 08:27:11.966"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:11.966" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:11.966" endtime="20231129 08:27:11.966"/>
</kw>
<status status="PASS" starttime="20231129 08:27:11.509" endtime="20231129 08:27:11.966"/>
</kw>
<msg timestamp="20231129 08:27:11.966" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:11.508" endtime="20231129 08:27:11.966"/>
</kw>
<msg timestamp="20231129 08:27:11.967" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-1877614098/deletetestapi/key=value/",
            "LastModified": "2023-11-29T08:27:10.512Z",
            "ETag": "2023-11-29T08:27:10.512Z...</msg>
<status status="PASS" starttime="20231129 08:27:11.508" endtime="20231129 08:27:11.967"/>
</kw>
<msg timestamp="20231129 08:27:11.967" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-1877614098/deletetestapi/key=value/",
            "LastModified": "2023-11-29T08:27:10.512Z",
            "ETag": "2023-11-29T08:27:10.512Z...</msg>
<status status="PASS" starttime="20231129 08:27:11.507" endtime="20231129 08:27:11.967"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>"${PREFIX}/deletetestapi/key=value/f1"</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:27:11.967" endtime="20231129 08:27:11.967"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:27:10.097" endtime="20231129 08:27:11.968"/>
</test>
<test id="s1-s1-s11-t2" name="Delete file with s3api, file doesn't exist" line="39">
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:11.972" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://erasure/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:12.421" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:12.421" level="INFO">${output} =                            PRE dir1/
                           PRE multipart/
                           PRE ozone-test-0394486520/
                           PRE ozone-test-0834024025/
             ...</msg>
<status status="PASS" starttime="20231129 08:27:11.970" endtime="20231129 08:27:12.421"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:12.422" level="INFO">                           PRE dir1/
                           PRE multipart/
                           PRE ozone-test-0394486520/
                           PRE ozone-test-0834024025/
                           PRE ozone-test-0911885445/
                           PRE ozone-test-1877614098/
                           PRE ozone-test-2853385398/
                           PRE ozone-test-4340299397/
                           PRE ozone-test-5290287418/
                           PRE ozone-test-6427772121/
                           PRE ozone-test-6983299519/
                           PRE ozone-test-7041349536/
                           PRE ozone-test-8828959507/
                           PRE specialchars/
2023-11-29 08:25:56       4068 README1.md
2023-11-29 08:25:55       4068 README10.md
2023-11-29 08:25:58   20971522 mjvcmhphbj
2023-11-29 08:25:56   10485761 multiUpload.1.gz
2023-11-29 08:25:56   10485761 multiUpload.2.gz
2023-11-29 08:25:50         29 testfile</msg>
<status status="PASS" starttime="20231129 08:27:12.421" endtime="20231129 08:27:12.422"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:12.422" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:12.422" endtime="20231129 08:27:12.422"/>
</kw>
<status status="PASS" starttime="20231129 08:27:11.970" endtime="20231129 08:27:12.422"/>
</kw>
<msg timestamp="20231129 08:27:12.423" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:11.970" endtime="20231129 08:27:12.423"/>
</kw>
<msg timestamp="20231129 08:27:12.423" level="INFO">${output} =                            PRE dir1/
                           PRE multipart/
                           PRE ozone-test-0394486520/
                           PRE ozone-test-0834024025/
             ...</msg>
<status status="PASS" starttime="20231129 08:27:11.969" endtime="20231129 08:27:12.423"/>
</kw>
<msg timestamp="20231129 08:27:12.423" level="INFO">${result} =                            PRE dir1/
                           PRE multipart/
                           PRE ozone-test-0394486520/
                           PRE ozone-test-0834024025/
             ...</msg>
<status status="PASS" starttime="20231129 08:27:11.969" endtime="20231129 08:27:12.423"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>thereisnosuchfile</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:27:12.423" endtime="20231129 08:27:12.423"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key thereisnosuchfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:12.427" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket erasure --key thereisnosuchfile 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:12.891" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:12.891" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:27:12.425" endtime="20231129 08:27:12.891"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:12.892" level="INFO"/>
<status status="PASS" starttime="20231129 08:27:12.891" endtime="20231129 08:27:12.892"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:12.892" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:12.892" endtime="20231129 08:27:12.892"/>
</kw>
<status status="PASS" starttime="20231129 08:27:12.425" endtime="20231129 08:27:12.893"/>
</kw>
<msg timestamp="20231129 08:27:12.893" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:12.424" endtime="20231129 08:27:12.893"/>
</kw>
<msg timestamp="20231129 08:27:12.893" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:27:12.424" endtime="20231129 08:27:12.893"/>
</kw>
<msg timestamp="20231129 08:27:12.893" level="INFO">${result} = </msg>
<status status="PASS" starttime="20231129 08:27:12.424" endtime="20231129 08:27:12.893"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:12.896" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://erasure/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:13.414" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:13.414" level="INFO">${output} =                            PRE dir1/
                           PRE multipart/
                           PRE ozone-test-0394486520/
                           PRE ozone-test-0834024025/
             ...</msg>
<status status="PASS" starttime="20231129 08:27:12.895" endtime="20231129 08:27:13.414"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:13.415" level="INFO">                           PRE dir1/
                           PRE multipart/
                           PRE ozone-test-0394486520/
                           PRE ozone-test-0834024025/
                           PRE ozone-test-0911885445/
                           PRE ozone-test-1877614098/
                           PRE ozone-test-2853385398/
                           PRE ozone-test-4340299397/
                           PRE ozone-test-5290287418/
                           PRE ozone-test-6427772121/
                           PRE ozone-test-6983299519/
                           PRE ozone-test-7041349536/
                           PRE ozone-test-8828959507/
                           PRE specialchars/
2023-11-29 08:25:56       4068 README1.md
2023-11-29 08:25:55       4068 README10.md
2023-11-29 08:25:58   20971522 mjvcmhphbj
2023-11-29 08:25:56   10485761 multiUpload.1.gz
2023-11-29 08:25:56   10485761 multiUpload.2.gz
2023-11-29 08:25:50         29 testfile</msg>
<status status="PASS" starttime="20231129 08:27:13.414" endtime="20231129 08:27:13.415"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:13.416" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:13.415" endtime="20231129 08:27:13.416"/>
</kw>
<status status="PASS" starttime="20231129 08:27:12.894" endtime="20231129 08:27:13.416"/>
</kw>
<msg timestamp="20231129 08:27:13.416" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:12.894" endtime="20231129 08:27:13.416"/>
</kw>
<msg timestamp="20231129 08:27:13.416" level="INFO">${output} =                            PRE dir1/
                           PRE multipart/
                           PRE ozone-test-0394486520/
                           PRE ozone-test-0834024025/
             ...</msg>
<status status="PASS" starttime="20231129 08:27:12.894" endtime="20231129 08:27:13.416"/>
</kw>
<msg timestamp="20231129 08:27:13.417" level="INFO">${result} =                            PRE dir1/
                           PRE multipart/
                           PRE ozone-test-0394486520/
                           PRE ozone-test-0834024025/
             ...</msg>
<status status="PASS" starttime="20231129 08:27:12.893" endtime="20231129 08:27:13.417"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>thereisnosuchfile</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:27:13.417" endtime="20231129 08:27:13.417"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:27:11.968" endtime="20231129 08:27:13.417"/>
</test>
<test id="s1-s1-s11-t3" name="Delete dir with s3api" line="46">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:13.421" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20231129 08:27:13.422" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:13.422" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:27:13.419" endtime="20231129 08:27:13.423"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:13.423" level="INFO"/>
<status status="PASS" starttime="20231129 08:27:13.423" endtime="20231129 08:27:13.423"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:13.424" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:13.423" endtime="20231129 08:27:13.424"/>
</kw>
<status status="PASS" starttime="20231129 08:27:13.419" endtime="20231129 08:27:13.424"/>
</kw>
<msg timestamp="20231129 08:27:13.424" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:13.419" endtime="20231129 08:27:13.424"/>
</kw>
<status status="PASS" starttime="20231129 08:27:13.418" endtime="20231129 08:27:13.424"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}/${PREFIX}/deletetestapidir/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:13.427" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://erasure/ozone-test-1877614098/deletetestapidir/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:13.942" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:13.942" level="INFO">${output} = Completed 29 Bytes/29 Bytes (321 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://erasure/ozone-test-1877614098/deletetestapidir/key=value/f1</msg>
<status status="PASS" starttime="20231129 08:27:13.426" endtime="20231129 08:27:13.942"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:13.943" level="INFO">Completed 29 Bytes/29 Bytes (321 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://erasure/ozone-test-1877614098/deletetestapidir/key=value/f1</msg>
<status status="PASS" starttime="20231129 08:27:13.942" endtime="20231129 08:27:13.943"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:13.943" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:13.943" endtime="20231129 08:27:13.943"/>
</kw>
<status status="PASS" starttime="20231129 08:27:13.425" endtime="20231129 08:27:13.943"/>
</kw>
<msg timestamp="20231129 08:27:13.943" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:13.425" endtime="20231129 08:27:13.944"/>
</kw>
<msg timestamp="20231129 08:27:13.944" level="INFO">${output} = Completed 29 Bytes/29 Bytes (321 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://erasure/ozone-test-1877614098/deletetestapidir/key=value/f1</msg>
<status status="PASS" starttime="20231129 08:27:13.425" endtime="20231129 08:27:13.944"/>
</kw>
<msg timestamp="20231129 08:27:13.944" level="INFO">${result} = Completed 29 Bytes/29 Bytes (321 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://erasure/ozone-test-1877614098/deletetestapidir/key=value/f1</msg>
<status status="PASS" starttime="20231129 08:27:13.424" endtime="20231129 08:27:13.944"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/${PREFIX}/deletetestapidir/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:13.947" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://erasure/ozone-test-1877614098/deletetestapidir/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:14.383" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:14.383" level="INFO">${output} = 2023-11-29 08:27:13          0 
2023-11-29 08:27:13         29 f1</msg>
<status status="PASS" starttime="20231129 08:27:13.946" endtime="20231129 08:27:14.383"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:14.384" level="INFO">2023-11-29 08:27:13          0 
2023-11-29 08:27:13         29 f1</msg>
<status status="PASS" starttime="20231129 08:27:14.384" endtime="20231129 08:27:14.384"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:14.385" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:14.385" endtime="20231129 08:27:14.385"/>
</kw>
<status status="PASS" starttime="20231129 08:27:13.945" endtime="20231129 08:27:14.385"/>
</kw>
<msg timestamp="20231129 08:27:14.385" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:13.945" endtime="20231129 08:27:14.385"/>
</kw>
<msg timestamp="20231129 08:27:14.385" level="INFO">${output} = 2023-11-29 08:27:13          0 
2023-11-29 08:27:13         29 f1</msg>
<status status="PASS" starttime="20231129 08:27:13.945" endtime="20231129 08:27:14.385"/>
</kw>
<msg timestamp="20231129 08:27:14.386" level="INFO">${result} = 2023-11-29 08:27:13          0 
2023-11-29 08:27:13         29 f1</msg>
<status status="PASS" starttime="20231129 08:27:13.944" endtime="20231129 08:27:14.386"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:27:14.386" endtime="20231129 08:27:14.386"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapidir/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:14.390" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket erasure --key ozone-test-1877614098/deletetestapidir/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:14.833" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:14.833" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:27:14.388" endtime="20231129 08:27:14.833"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:14.834" level="INFO"/>
<status status="PASS" starttime="20231129 08:27:14.834" endtime="20231129 08:27:14.834"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:14.835" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:14.834" endtime="20231129 08:27:14.835"/>
</kw>
<status status="PASS" starttime="20231129 08:27:14.387" endtime="20231129 08:27:14.835"/>
</kw>
<msg timestamp="20231129 08:27:14.835" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:14.387" endtime="20231129 08:27:14.835"/>
</kw>
<msg timestamp="20231129 08:27:14.835" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:27:14.387" endtime="20231129 08:27:14.835"/>
</kw>
<msg timestamp="20231129 08:27:14.835" level="INFO">${result} = </msg>
<status status="PASS" starttime="20231129 08:27:14.386" endtime="20231129 08:27:14.835"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/${PREFIX}/deletetestapidir/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:14.839" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://erasure/ozone-test-1877614098/deletetestapidir/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:15.279" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:15.279" level="INFO">${output} = 2023-11-29 08:27:13          0 
2023-11-29 08:27:13         29 f1</msg>
<status status="PASS" starttime="20231129 08:27:14.837" endtime="20231129 08:27:15.279"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:15.280" level="INFO">2023-11-29 08:27:13          0 
2023-11-29 08:27:13         29 f1</msg>
<status status="PASS" starttime="20231129 08:27:15.279" endtime="20231129 08:27:15.280"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:15.280" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:15.280" endtime="20231129 08:27:15.281"/>
</kw>
<status status="PASS" starttime="20231129 08:27:14.837" endtime="20231129 08:27:15.281"/>
</kw>
<msg timestamp="20231129 08:27:15.281" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:14.837" endtime="20231129 08:27:15.281"/>
</kw>
<msg timestamp="20231129 08:27:15.281" level="INFO">${output} = 2023-11-29 08:27:13          0 
2023-11-29 08:27:13         29 f1</msg>
<status status="PASS" starttime="20231129 08:27:14.836" endtime="20231129 08:27:15.281"/>
</kw>
<msg timestamp="20231129 08:27:15.281" level="INFO">${result} = 2023-11-29 08:27:13          0 
2023-11-29 08:27:13         29 f1</msg>
<status status="PASS" starttime="20231129 08:27:14.836" endtime="20231129 08:27:15.281"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:27:15.281" endtime="20231129 08:27:15.282"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapidir/key=value/f1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:15.285" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket erasure --key ozone-test-1877614098/deletetestapidir/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:15.737" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:15.737" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:27:15.283" endtime="20231129 08:27:15.737"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:15.738" level="INFO"/>
<status status="PASS" starttime="20231129 08:27:15.737" endtime="20231129 08:27:15.738"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:15.738" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:15.738" endtime="20231129 08:27:15.738"/>
</kw>
<status status="PASS" starttime="20231129 08:27:15.283" endtime="20231129 08:27:15.738"/>
</kw>
<msg timestamp="20231129 08:27:15.738" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:15.283" endtime="20231129 08:27:15.738"/>
</kw>
<msg timestamp="20231129 08:27:15.739" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:27:15.282" endtime="20231129 08:27:15.739"/>
</kw>
<msg timestamp="20231129 08:27:15.739" level="INFO">${result} = </msg>
<status status="PASS" starttime="20231129 08:27:15.282" endtime="20231129 08:27:15.739"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:27:13.418" endtime="20231129 08:27:15.739"/>
</test>
<test id="s1-s1-s11-t4" name="Delete file with s3api, file doesn't exist, prefix of a real file" line="57">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:15.743" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20231129 08:27:15.744" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:15.745" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:27:15.741" endtime="20231129 08:27:15.745"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:15.745" level="INFO"/>
<status status="PASS" starttime="20231129 08:27:15.745" endtime="20231129 08:27:15.745"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:15.746" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:15.745" endtime="20231129 08:27:15.746"/>
</kw>
<status status="PASS" starttime="20231129 08:27:15.741" endtime="20231129 08:27:15.746"/>
</kw>
<msg timestamp="20231129 08:27:15.746" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:15.741" endtime="20231129 08:27:15.746"/>
</kw>
<status status="PASS" starttime="20231129 08:27:15.740" endtime="20231129 08:27:15.746"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/testfile s3://${BUCKET}/${PREFIX}/deletetestapiprefix/key=value/filefile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:15.749" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 cp /tmp/testfile s3://erasure/ozone-test-1877614098/deletetestapiprefix/key=value/filefile 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:16.245" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:16.245" level="INFO">${output} = Completed 29 Bytes/29 Bytes (442 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://erasure/ozone-test-1877614098/deletetestapiprefix/key=value/filefile</msg>
<status status="PASS" starttime="20231129 08:27:15.748" endtime="20231129 08:27:16.245"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:16.246" level="INFO">Completed 29 Bytes/29 Bytes (442 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://erasure/ozone-test-1877614098/deletetestapiprefix/key=value/filefile</msg>
<status status="PASS" starttime="20231129 08:27:16.245" endtime="20231129 08:27:16.246"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:16.247" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:16.246" endtime="20231129 08:27:16.247"/>
</kw>
<status status="PASS" starttime="20231129 08:27:15.748" endtime="20231129 08:27:16.247"/>
</kw>
<msg timestamp="20231129 08:27:16.247" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:15.747" endtime="20231129 08:27:16.247"/>
</kw>
<msg timestamp="20231129 08:27:16.247" level="INFO">${output} = Completed 29 Bytes/29 Bytes (442 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://erasure/ozone-test-1877614098/deletetestapiprefix/key=value/filefile</msg>
<status status="PASS" starttime="20231129 08:27:15.747" endtime="20231129 08:27:16.247"/>
</kw>
<msg timestamp="20231129 08:27:16.247" level="INFO">${result} = Completed 29 Bytes/29 Bytes (442 Bytes/s) with 1 file(s) remaining
upload: ../../tmp/testfile to s3://erasure/ozone-test-1877614098/deletetestapiprefix/key=value/filefile</msg>
<status status="PASS" starttime="20231129 08:27:15.746" endtime="20231129 08:27:16.247"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/${PREFIX}/deletetestapiprefix/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:16.251" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://erasure/ozone-test-1877614098/deletetestapiprefix/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:16.684" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:16.684" level="INFO">${output} = 2023-11-29 08:27:16          0 
2023-11-29 08:27:16         29 filefile</msg>
<status status="PASS" starttime="20231129 08:27:16.249" endtime="20231129 08:27:16.684"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:16.685" level="INFO">2023-11-29 08:27:16          0 
2023-11-29 08:27:16         29 filefile</msg>
<status status="PASS" starttime="20231129 08:27:16.684" endtime="20231129 08:27:16.685"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:16.686" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:16.685" endtime="20231129 08:27:16.686"/>
</kw>
<status status="PASS" starttime="20231129 08:27:16.249" endtime="20231129 08:27:16.686"/>
</kw>
<msg timestamp="20231129 08:27:16.686" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:16.249" endtime="20231129 08:27:16.686"/>
</kw>
<msg timestamp="20231129 08:27:16.686" level="INFO">${output} = 2023-11-29 08:27:16          0 
2023-11-29 08:27:16         29 filefile</msg>
<status status="PASS" starttime="20231129 08:27:16.248" endtime="20231129 08:27:16.686"/>
</kw>
<msg timestamp="20231129 08:27:16.686" level="INFO">${result} = 2023-11-29 08:27:16          0 
2023-11-29 08:27:16         29 filefile</msg>
<status status="PASS" starttime="20231129 08:27:16.248" endtime="20231129 08:27:16.686"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>filefile</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:27:16.686" endtime="20231129 08:27:16.687"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapiprefix/key=value/file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:16.690" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket erasure --key ozone-test-1877614098/deletetestapiprefix/key=value/file 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:17.151" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:17.151" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:27:16.689" endtime="20231129 08:27:17.151"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:17.152" level="INFO"/>
<status status="PASS" starttime="20231129 08:27:17.151" endtime="20231129 08:27:17.152"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:17.152" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:17.152" endtime="20231129 08:27:17.152"/>
</kw>
<status status="PASS" starttime="20231129 08:27:16.688" endtime="20231129 08:27:17.153"/>
</kw>
<msg timestamp="20231129 08:27:17.153" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:16.688" endtime="20231129 08:27:17.153"/>
</kw>
<msg timestamp="20231129 08:27:17.153" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:27:16.687" endtime="20231129 08:27:17.153"/>
</kw>
<msg timestamp="20231129 08:27:17.153" level="INFO">${result} = </msg>
<status status="PASS" starttime="20231129 08:27:16.687" endtime="20231129 08:27:17.153"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<var>${result}</var>
<arg>ls s3://${BUCKET}/${PREFIX}/deletetestapiprefix/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:17.156" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 ls s3://erasure/ozone-test-1877614098/deletetestapiprefix/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:17.603" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:17.603" level="INFO">${output} = 2023-11-29 08:27:16          0 
2023-11-29 08:27:16         29 filefile</msg>
<status status="PASS" starttime="20231129 08:27:17.155" endtime="20231129 08:27:17.603"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:17.604" level="INFO">2023-11-29 08:27:16          0 
2023-11-29 08:27:16         29 filefile</msg>
<status status="PASS" starttime="20231129 08:27:17.603" endtime="20231129 08:27:17.604"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:17.604" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:17.604" endtime="20231129 08:27:17.604"/>
</kw>
<status status="PASS" starttime="20231129 08:27:17.155" endtime="20231129 08:27:17.604"/>
</kw>
<msg timestamp="20231129 08:27:17.604" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:17.154" endtime="20231129 08:27:17.605"/>
</kw>
<msg timestamp="20231129 08:27:17.605" level="INFO">${output} = 2023-11-29 08:27:16          0 
2023-11-29 08:27:16         29 filefile</msg>
<status status="PASS" starttime="20231129 08:27:17.154" endtime="20231129 08:27:17.605"/>
</kw>
<msg timestamp="20231129 08:27:17.605" level="INFO">${result} = 2023-11-29 08:27:16          0 
2023-11-29 08:27:16         29 filefile</msg>
<status status="PASS" starttime="20231129 08:27:17.153" endtime="20231129 08:27:17.605"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>filefile</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:27:17.605" endtime="20231129 08:27:17.605"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/deletetestapiprefix/key=value/filefile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:17.609" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket erasure --key ozone-test-1877614098/deletetestapiprefix/key=value/filefile 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:18.195" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:18.195" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:27:17.607" endtime="20231129 08:27:18.195"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:18.196" level="INFO"/>
<status status="PASS" starttime="20231129 08:27:18.196" endtime="20231129 08:27:18.196"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:18.197" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:18.196" endtime="20231129 08:27:18.197"/>
</kw>
<status status="PASS" starttime="20231129 08:27:17.607" endtime="20231129 08:27:18.197"/>
</kw>
<msg timestamp="20231129 08:27:18.197" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:17.607" endtime="20231129 08:27:18.197"/>
</kw>
<msg timestamp="20231129 08:27:18.197" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:27:17.606" endtime="20231129 08:27:18.197"/>
</kw>
<msg timestamp="20231129 08:27:18.197" level="INFO">${result} = </msg>
<status status="PASS" starttime="20231129 08:27:17.606" endtime="20231129 08:27:18.197"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:27:15.740" endtime="20231129 08:27:18.198"/>
</test>
<test id="s1-s1-s11-t5" name="Delete file with s3api, bucket doesn't exist" line="69">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET}-nosuchbucket --key f1</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:18.201" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket erasure-nosuchbucket --key f1 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:18.641" level="INFO">${rc} = 255</msg>
<msg timestamp="20231129 08:27:18.641" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20231129 08:27:18.200" endtime="20231129 08:27:18.641"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:18.642" level="INFO">
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20231129 08:27:18.641" endtime="20231129 08:27:18.642"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:18.642" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:18.642" endtime="20231129 08:27:18.642"/>
</kw>
<msg timestamp="20231129 08:27:18.642" level="INFO">${output} = 
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20231129 08:27:18.199" endtime="20231129 08:27:18.642"/>
</kw>
<msg timestamp="20231129 08:27:18.643" level="INFO">${result} = 
An error occurred (NoSuchBucket) when calling the DeleteObject operation: The specified bucket does not exist</msg>
<status status="PASS" starttime="20231129 08:27:18.199" endtime="20231129 08:27:18.643"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchBucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:27:18.643" endtime="20231129 08:27:18.643"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:27:18.198" endtime="20231129 08:27:18.643"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20231129 08:27:10.086" endtime="20231129 08:27:18.644"/>
</suite>
<suite id="s1-s1-s12" name="Objecthead" source="/opt/hadoop/smoketest/s3/objecthead.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20231129 08:27:18.654" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:18.654" endtime="20231129 08:27:18.654"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231129 08:27:18.654" endtime="20231129 08:27:18.654"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231129 08:27:18.655" endtime="20231129 08:27:18.655"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:27:18.655" endtime="20231129 08:27:18.655"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:27:18.655" endtime="20231129 08:27:18.655"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:27:18.655" endtime="20231129 08:27:18.655"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:27:18.655" endtime="20231129 08:27:18.655"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:27:18.655" endtime="20231129 08:27:18.655"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20231129 08:27:18.656" endtime="20231129 08:27:18.656"/>
</kw>
<status status="PASS" starttime="20231129 08:27:18.654" endtime="20231129 08:27:18.656"/>
</kw>
<test id="s1-s1-s12-t1" name="Head existing object" line="32">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:18.659" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile'.</msg>
<msg timestamp="20231129 08:27:18.660" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:18.660" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:27:18.657" endtime="20231129 08:27:18.660"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:18.661" level="INFO"/>
<status status="PASS" starttime="20231129 08:27:18.660" endtime="20231129 08:27:18.661"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:18.661" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:18.661" endtime="20231129 08:27:18.661"/>
</kw>
<status status="PASS" starttime="20231129 08:27:18.657" endtime="20231129 08:27:18.662"/>
</kw>
<msg timestamp="20231129 08:27:18.662" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:18.657" endtime="20231129 08:27:18.662"/>
</kw>
<status status="PASS" starttime="20231129 08:27:18.656" endtime="20231129 08:27:18.662"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/headobject/key=value/f1 --body /tmp/testfile</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:18.664" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket erasure --key ozone-test-1877614098/headobject/key=value/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:19.163" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:19.163" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231129 08:27:18.663" endtime="20231129 08:27:19.163"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:19.164" level="INFO">{
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231129 08:27:19.163" endtime="20231129 08:27:19.164"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:19.165" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:19.164" endtime="20231129 08:27:19.165"/>
</kw>
<msg timestamp="20231129 08:27:19.165" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231129 08:27:18.663" endtime="20231129 08:27:19.165"/>
</kw>
<msg timestamp="20231129 08:27:19.165" level="INFO">${result} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231129 08:27:18.662" endtime="20231129 08:27:19.165"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/headobject/key=value/f1</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:19.168" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket erasure --key ozone-test-1877614098/headobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:19.607" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:19.607" level="INFO">${output} = {
    "LastModified": "Wed, 29 Nov 2023 08:27:19 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20231129 08:27:19.166" endtime="20231129 08:27:19.607"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:19.608" level="INFO">{
    "LastModified": "Wed, 29 Nov 2023 08:27:19 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Wed, 29 Nov 2023 08:27:19 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231129 08:27:19.607" endtime="20231129 08:27:19.608"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:19.609" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:19.608" endtime="20231129 08:27:19.609"/>
</kw>
<msg timestamp="20231129 08:27:19.609" level="INFO">${output} = {
    "LastModified": "Wed, 29 Nov 2023 08:27:19 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20231129 08:27:19.166" endtime="20231129 08:27:19.609"/>
</kw>
<msg timestamp="20231129 08:27:19.609" level="INFO">${result} = {
    "LastModified": "Wed, 29 Nov 2023 08:27:19 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20231129 08:27:19.165" endtime="20231129 08:27:19.609"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>delete-object --bucket ${BUCKET} --key ${PREFIX}/headobject/key=value/f1</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:19.612" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-object --bucket erasure --key ozone-test-1877614098/headobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:20.052" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:20.052" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:27:19.610" endtime="20231129 08:27:20.052"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:20.053" level="INFO"/>
<status status="PASS" starttime="20231129 08:27:20.052" endtime="20231129 08:27:20.053"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:20.053" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:20.053" endtime="20231129 08:27:20.053"/>
</kw>
<msg timestamp="20231129 08:27:20.054" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:27:19.610" endtime="20231129 08:27:20.054"/>
</kw>
<msg timestamp="20231129 08:27:20.054" level="INFO">${result} = </msg>
<status status="PASS" starttime="20231129 08:27:19.609" endtime="20231129 08:27:20.054"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:27:18.656" endtime="20231129 08:27:20.054"/>
</test>
<test id="s1-s1-s12-t2" name="Head object in non existing bucket" line="39">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET}-non-existent --key ${PREFIX}/headobject/key=value/f1</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:20.058" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket erasure-non-existent --key ozone-test-1877614098/headobject/key=value/f1 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:20.516" level="INFO">${rc} = 255</msg>
<msg timestamp="20231129 08:27:20.516" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231129 08:27:20.057" endtime="20231129 08:27:20.517"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:20.518" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231129 08:27:20.517" endtime="20231129 08:27:20.518"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:20.518" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:20.518" endtime="20231129 08:27:20.518"/>
</kw>
<msg timestamp="20231129 08:27:20.518" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231129 08:27:20.056" endtime="20231129 08:27:20.518"/>
</kw>
<msg timestamp="20231129 08:27:20.519" level="INFO">${result} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231129 08:27:20.055" endtime="20231129 08:27:20.519"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>404</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:27:20.519" endtime="20231129 08:27:20.519"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Not Found</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:27:20.519" endtime="20231129 08:27:20.520"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:27:20.055" endtime="20231129 08:27:20.520"/>
</test>
<test id="s1-s1-s12-t3" name="Head object where path is a directory" line="43">
<kw name="Create legacy bucket" library="commonawslib">
<var>${legacy-bucket}</var>
<kw name="Generate Ozone String" library="commonawslib">
<var>${postfix}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231129 08:27:20.522" level="INFO">${randStr} = 5828390658</msg>
<status status="PASS" starttime="20231129 08:27:20.522" endtime="20231129 08:27:20.522"/>
</kw>
<msg timestamp="20231129 08:27:20.522" level="INFO">${postfix} = ozone-test-5828390658</msg>
<status status="PASS" starttime="20231129 08:27:20.521" endtime="20231129 08:27:20.522"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${legacy_bucket}</var>
<arg>legacy-bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:27:20.523" level="INFO">${legacy_bucket} = legacy-bucket-ozone-test-5828390658</msg>
<status status="PASS" starttime="20231129 08:27:20.522" endtime="20231129 08:27:20.523"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh bucket create -l LEGACY s3v/${legacy_bucket}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:20.525" level="INFO">Running command 'ozone sh bucket create -l LEGACY s3v/legacy-bucket-ozone-test-5828390658 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:23.810" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:23.810" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:27:20.523" endtime="20231129 08:27:23.810"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:23.811" level="INFO"/>
<status status="PASS" starttime="20231129 08:27:23.811" endtime="20231129 08:27:23.811"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:23.812" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:23.811" endtime="20231129 08:27:23.812"/>
</kw>
<msg timestamp="20231129 08:27:23.812" level="INFO">${result} = </msg>
<status status="PASS" starttime="20231129 08:27:20.523" endtime="20231129 08:27:23.812"/>
</kw>
<msg timestamp="20231129 08:27:23.813" level="INFO">${legacy-bucket} = legacy-bucket-ozone-test-5828390658</msg>
<status status="PASS" starttime="20231129 08:27:20.521" endtime="20231129 08:27:23.813"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${legacy-bucket} --key ${PREFIX}/headobject/keyvalue/f1 --body /tmp/testfile</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:23.815" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket legacy-bucket-ozone-test-5828390658 --key ozone-test-1877614098/headobject/keyvalue/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:24.307" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:24.307" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231129 08:27:23.814" endtime="20231129 08:27:24.307"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:24.308" level="INFO">{
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231129 08:27:24.307" endtime="20231129 08:27:24.308"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:24.308" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:24.308" endtime="20231129 08:27:24.309"/>
</kw>
<msg timestamp="20231129 08:27:24.309" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231129 08:27:23.813" endtime="20231129 08:27:24.309"/>
</kw>
<msg timestamp="20231129 08:27:24.309" level="INFO">${result} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231129 08:27:23.813" endtime="20231129 08:27:24.309"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${legacy-bucket} --key ${PREFIX}/headobject/keyvalue/</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:24.312" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket legacy-bucket-ozone-test-5828390658 --key ozone-test-1877614098/headobject/keyvalue/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:24.751" level="INFO">${rc} = 255</msg>
<msg timestamp="20231129 08:27:24.751" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231129 08:27:24.310" endtime="20231129 08:27:24.751"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:24.752" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231129 08:27:24.751" endtime="20231129 08:27:24.752"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:24.752" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:24.752" endtime="20231129 08:27:24.752"/>
</kw>
<msg timestamp="20231129 08:27:24.752" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231129 08:27:24.310" endtime="20231129 08:27:24.752"/>
</kw>
<msg timestamp="20231129 08:27:24.753" level="INFO">${result} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231129 08:27:24.309" endtime="20231129 08:27:24.753"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>404</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:27:24.753" endtime="20231129 08:27:24.753"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Not Found</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:27:24.753" endtime="20231129 08:27:24.753"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:27:20.520" endtime="20231129 08:27:24.754"/>
</test>
<test id="s1-s1-s12-t4" name="Head directory objects" line="50">
<kw name="Create obs bucket" library="commonawslib">
<var>${obs-bucket}</var>
<kw name="Generate Ozone String" library="commonawslib">
<var>${postfix}</var>
<kw name="Generate Random String" library="String">
<var>${randStr}</var>
<arg>10</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231129 08:27:24.756" level="INFO">${randStr} = 8974904504</msg>
<status status="PASS" starttime="20231129 08:27:24.755" endtime="20231129 08:27:24.756"/>
</kw>
<msg timestamp="20231129 08:27:24.756" level="INFO">${postfix} = ozone-test-8974904504</msg>
<status status="PASS" starttime="20231129 08:27:24.755" endtime="20231129 08:27:24.756"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${bucket}</var>
<arg>obs-bucket-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:27:24.756" level="INFO">${bucket} = obs-bucket-ozone-test-8974904504</msg>
<status status="PASS" starttime="20231129 08:27:24.756" endtime="20231129 08:27:24.757"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh bucket create -l OBJECT_STORE s3v/${bucket}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:24.758" level="INFO">Running command 'ozone sh bucket create -l OBJECT_STORE s3v/obs-bucket-ozone-test-8974904504 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:27.739" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:27.739" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:27:24.757" endtime="20231129 08:27:27.739"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:27.740" level="INFO"/>
<status status="PASS" starttime="20231129 08:27:27.740" endtime="20231129 08:27:27.740"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:27.741" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:27.741" endtime="20231129 08:27:27.741"/>
</kw>
<msg timestamp="20231129 08:27:27.741" level="INFO">${result} = </msg>
<status status="PASS" starttime="20231129 08:27:24.757" endtime="20231129 08:27:27.741"/>
</kw>
<msg timestamp="20231129 08:27:27.742" level="INFO">${obs-bucket} = obs-bucket-ozone-test-8974904504</msg>
<status status="PASS" starttime="20231129 08:27:24.755" endtime="20231129 08:27:27.742"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${obs-bucket} --key ${PREFIX}/mydir/ --body /tmp/testfile</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:27.744" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket obs-bucket-ozone-test-8974904504 --key ozone-test-1877614098/mydir/ --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:28.233" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:28.233" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231129 08:27:27.743" endtime="20231129 08:27:28.233"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:28.234" level="INFO">{
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231129 08:27:28.233" endtime="20231129 08:27:28.234"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:28.234" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:28.234" endtime="20231129 08:27:28.234"/>
</kw>
<msg timestamp="20231129 08:27:28.235" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231129 08:27:27.742" endtime="20231129 08:27:28.235"/>
</kw>
<msg timestamp="20231129 08:27:28.235" level="INFO">${result} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231129 08:27:27.742" endtime="20231129 08:27:28.235"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${obs-bucket} --key ${PREFIX}/mydir</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:28.238" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket obs-bucket-ozone-test-8974904504 --key ozone-test-1877614098/mydir 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:28.676" level="INFO">${rc} = 255</msg>
<msg timestamp="20231129 08:27:28.676" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231129 08:27:28.236" endtime="20231129 08:27:28.676"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:28.677" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231129 08:27:28.677" endtime="20231129 08:27:28.677"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:28.678" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:28.677" endtime="20231129 08:27:28.678"/>
</kw>
<msg timestamp="20231129 08:27:28.678" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231129 08:27:28.236" endtime="20231129 08:27:28.678"/>
</kw>
<msg timestamp="20231129 08:27:28.678" level="INFO">${result} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231129 08:27:28.235" endtime="20231129 08:27:28.678"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>404</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:27:28.678" endtime="20231129 08:27:28.679"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Not Found</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:27:28.679" endtime="20231129 08:27:28.679"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${obs-bucket} --key ${PREFIX}/mydir/</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:28.682" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket obs-bucket-ozone-test-8974904504 --key ozone-test-1877614098/mydir/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:29.122" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:29.122" level="INFO">${output} = {
    "LastModified": "Wed, 29 Nov 2023 08:27:28 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20231129 08:27:28.681" endtime="20231129 08:27:29.122"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:29.123" level="INFO">{
    "LastModified": "Wed, 29 Nov 2023 08:27:28 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Wed, 29 Nov 2023 08:27:29 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231129 08:27:29.123" endtime="20231129 08:27:29.123"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:29.124" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:29.124" endtime="20231129 08:27:29.124"/>
</kw>
<msg timestamp="20231129 08:27:29.124" level="INFO">${output} = {
    "LastModified": "Wed, 29 Nov 2023 08:27:28 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20231129 08:27:28.680" endtime="20231129 08:27:29.124"/>
</kw>
<msg timestamp="20231129 08:27:29.124" level="INFO">${result} = {
    "LastModified": "Wed, 29 Nov 2023 08:27:28 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20231129 08:27:28.679" endtime="20231129 08:27:29.124"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:27:24.754" endtime="20231129 08:27:29.125"/>
</test>
<test id="s1-s1-s12-t5" name="Head non existing key" line="58">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/non-existent</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:29.128" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket erasure --key ozone-test-1877614098/non-existent 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:29.573" level="INFO">${rc} = 255</msg>
<msg timestamp="20231129 08:27:29.573" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231129 08:27:29.127" endtime="20231129 08:27:29.573"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:29.574" level="INFO">
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231129 08:27:29.574" endtime="20231129 08:27:29.574"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:29.575" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:29.574" endtime="20231129 08:27:29.575"/>
</kw>
<msg timestamp="20231129 08:27:29.575" level="INFO">${output} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231129 08:27:29.126" endtime="20231129 08:27:29.575"/>
</kw>
<msg timestamp="20231129 08:27:29.575" level="INFO">${result} = 
An error occurred (404) when calling the HeadObject operation: Not Found</msg>
<status status="PASS" starttime="20231129 08:27:29.126" endtime="20231129 08:27:29.575"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>404</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:27:29.576" endtime="20231129 08:27:29.576"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Not Found</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:27:29.576" endtime="20231129 08:27:29.576"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:27:29.125" endtime="20231129 08:27:29.577"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20231129 08:27:18.645" endtime="20231129 08:27:29.577"/>
</suite>
<suite id="s1-s1-s13" name="Objectmultidelete" source="/opt/hadoop/smoketest/s3/objectmultidelete.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20231129 08:27:29.587" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:29.587" endtime="20231129 08:27:29.587"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231129 08:27:29.588" endtime="20231129 08:27:29.588"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231129 08:27:29.588" endtime="20231129 08:27:29.588"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:27:29.588" endtime="20231129 08:27:29.588"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:27:29.588" endtime="20231129 08:27:29.588"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:27:29.588" endtime="20231129 08:27:29.588"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:27:29.588" endtime="20231129 08:27:29.588"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:27:29.589" endtime="20231129 08:27:29.589"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20231129 08:27:29.589" endtime="20231129 08:27:29.589"/>
</kw>
<status status="PASS" starttime="20231129 08:27:29.587" endtime="20231129 08:27:29.589"/>
</kw>
<test id="s1-s1-s13-t1" name="Delete file with multi delete" line="31">
<kw name="Execute" library="os">
<arg>date &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:29.592" level="INFO">Running command 'date &gt; /tmp/testfile'.</msg>
<msg timestamp="20231129 08:27:29.594" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:29.594" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:27:29.590" endtime="20231129 08:27:29.594"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:29.594" level="INFO"/>
<status status="PASS" starttime="20231129 08:27:29.594" endtime="20231129 08:27:29.594"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:29.595" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:29.594" endtime="20231129 08:27:29.595"/>
</kw>
<status status="PASS" starttime="20231129 08:27:29.590" endtime="20231129 08:27:29.595"/>
</kw>
<msg timestamp="20231129 08:27:29.595" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:29.590" endtime="20231129 08:27:29.595"/>
</kw>
<status status="PASS" starttime="20231129 08:27:29.589" endtime="20231129 08:27:29.595"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/multidelete/key=value/f1 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:29.599" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket erasure --key ozone-test-1877614098/multidelete/key=value/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:30.119" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:30.119" level="INFO">${output} = {
    "ETag": "\"a7f42914f74058cb64c9bf355b9c169c\""
}</msg>
<status status="PASS" starttime="20231129 08:27:29.598" endtime="20231129 08:27:30.119"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:30.120" level="INFO">{
    "ETag": "\"a7f42914f74058cb64c9bf355b9c169c\""
}</msg>
<status status="PASS" starttime="20231129 08:27:30.120" endtime="20231129 08:27:30.120"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:30.121" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:30.120" endtime="20231129 08:27:30.121"/>
</kw>
<status status="PASS" starttime="20231129 08:27:29.598" endtime="20231129 08:27:30.121"/>
</kw>
<msg timestamp="20231129 08:27:30.121" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:29.597" endtime="20231129 08:27:30.121"/>
</kw>
<msg timestamp="20231129 08:27:30.121" level="INFO">${output} = {
    "ETag": "\"a7f42914f74058cb64c9bf355b9c169c\""
}</msg>
<status status="PASS" starttime="20231129 08:27:29.596" endtime="20231129 08:27:30.121"/>
</kw>
<msg timestamp="20231129 08:27:30.122" level="INFO">${result} = {
    "ETag": "\"a7f42914f74058cb64c9bf355b9c169c\""
}</msg>
<status status="PASS" starttime="20231129 08:27:29.595" endtime="20231129 08:27:30.122"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/multidelete/key=value/f2 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:30.125" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket erasure --key ozone-test-1877614098/multidelete/key=value/f2 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:30.621" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:30.622" level="INFO">${output} = {
    "ETag": "\"a7f42914f74058cb64c9bf355b9c169c\""
}</msg>
<status status="PASS" starttime="20231129 08:27:30.123" endtime="20231129 08:27:30.622"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:30.622" level="INFO">{
    "ETag": "\"a7f42914f74058cb64c9bf355b9c169c\""
}</msg>
<status status="PASS" starttime="20231129 08:27:30.622" endtime="20231129 08:27:30.623"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:30.623" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:30.623" endtime="20231129 08:27:30.623"/>
</kw>
<status status="PASS" starttime="20231129 08:27:30.123" endtime="20231129 08:27:30.623"/>
</kw>
<msg timestamp="20231129 08:27:30.623" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:30.123" endtime="20231129 08:27:30.623"/>
</kw>
<msg timestamp="20231129 08:27:30.624" level="INFO">${output} = {
    "ETag": "\"a7f42914f74058cb64c9bf355b9c169c\""
}</msg>
<status status="PASS" starttime="20231129 08:27:30.122" endtime="20231129 08:27:30.624"/>
</kw>
<msg timestamp="20231129 08:27:30.624" level="INFO">${result} = {
    "ETag": "\"a7f42914f74058cb64c9bf355b9c169c\""
}</msg>
<status status="PASS" starttime="20231129 08:27:30.122" endtime="20231129 08:27:30.624"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/multidelete/key=value/f3 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:30.627" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket erasure --key ozone-test-1877614098/multidelete/key=value/f3 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:31.122" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:31.122" level="INFO">${output} = {
    "ETag": "\"a7f42914f74058cb64c9bf355b9c169c\""
}</msg>
<status status="PASS" starttime="20231129 08:27:30.626" endtime="20231129 08:27:31.122"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:31.123" level="INFO">{
    "ETag": "\"a7f42914f74058cb64c9bf355b9c169c\""
}</msg>
<status status="PASS" starttime="20231129 08:27:31.123" endtime="20231129 08:27:31.123"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:31.124" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:31.123" endtime="20231129 08:27:31.124"/>
</kw>
<status status="PASS" starttime="20231129 08:27:30.625" endtime="20231129 08:27:31.124"/>
</kw>
<msg timestamp="20231129 08:27:31.124" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:30.625" endtime="20231129 08:27:31.124"/>
</kw>
<msg timestamp="20231129 08:27:31.124" level="INFO">${output} = {
    "ETag": "\"a7f42914f74058cb64c9bf355b9c169c\""
}</msg>
<status status="PASS" starttime="20231129 08:27:30.625" endtime="20231129 08:27:31.124"/>
</kw>
<msg timestamp="20231129 08:27:31.124" level="INFO">${result} = {
    "ETag": "\"a7f42914f74058cb64c9bf355b9c169c\""
}</msg>
<status status="PASS" starttime="20231129 08:27:30.624" endtime="20231129 08:27:31.124"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/multidelete/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:31.128" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket erasure --prefix ozone-test-1877614098/multidelete/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:31.579" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:31.579" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-1877614098/multidelete/key=value/",
            "LastModified": "2023-11-29T08:27:29.999Z",
            "ETag": "2023-11-29T08:27:29.999Z",...</msg>
<status status="PASS" starttime="20231129 08:27:31.126" endtime="20231129 08:27:31.579"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:31.580" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-1877614098/multidelete/key=value/",
            "LastModified": "2023-11-29T08:27:29.999Z",
            "ETag": "2023-11-29T08:27:29.999Z",
            "Size": 0,
            "StorageClass": "STANDARD"
        },
        {
            "Key": "ozone-test-1877614098/multidelete/key=value/f1",
            "LastModified": "2023-11-29T08:27:30.073Z",
            "ETag": "2023-11-29T08:27:30.073Z",
            "Size": 29,
            "StorageClass": "STANDARD"
        },
        {
            "Key": "ozone-test-1877614098/multidelete/key=value/f2",
            "LastModified": "2023-11-29T08:27:30.574Z",
            "ETag": "2023-11-29T08:27:30.574Z",
            "Size": 29,
            "StorageClass": "STANDARD"
        },
        {
            "Key": "ozone-test-1877614098/multidelete/key=value/f3",
            "LastModified": "2023-11-29T08:27:31.077Z",
            "ETag": "2023-11-29T08:27:31.077Z",
            "Size": 29,
            "StorageClass": "STANDARD"
        }
    ]
}</msg>
<status status="PASS" starttime="20231129 08:27:31.579" endtime="20231129 08:27:31.580"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:31.581" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:31.580" endtime="20231129 08:27:31.581"/>
</kw>
<status status="PASS" starttime="20231129 08:27:31.126" endtime="20231129 08:27:31.581"/>
</kw>
<msg timestamp="20231129 08:27:31.581" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:31.126" endtime="20231129 08:27:31.581"/>
</kw>
<msg timestamp="20231129 08:27:31.581" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-1877614098/multidelete/key=value/",
            "LastModified": "2023-11-29T08:27:29.999Z",
            "ETag": "2023-11-29T08:27:29.999Z",...</msg>
<status status="PASS" starttime="20231129 08:27:31.125" endtime="20231129 08:27:31.581"/>
</kw>
<msg timestamp="20231129 08:27:31.581" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-1877614098/multidelete/key=value/",
            "LastModified": "2023-11-29T08:27:29.999Z",
            "ETag": "2023-11-29T08:27:29.999Z",...</msg>
<status status="PASS" starttime="20231129 08:27:31.125" endtime="20231129 08:27:31.581"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/key=value/f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:27:31.582" endtime="20231129 08:27:31.582"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/key=value/f2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:27:31.582" endtime="20231129 08:27:31.583"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/key=value/f3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:27:31.583" endtime="20231129 08:27:31.583"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:27:31.583" endtime="20231129 08:27:31.584"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>REDUCED_REDUNDANCY</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:27:31.584" endtime="20231129 08:27:31.584"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>delete-objects --bucket ${BUCKET} --delete 'Objects=[{Key=${PREFIX}/multidelete/key=value/f1},{Key=${PREFIX}/multidelete/key=value/f2},{Key=${PREFIX}/multidelete/key=value/f4}]'</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:31.587" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 delete-objects --bucket erasure --delete 'Objects=[{Key=ozone-test-1877614098/multidelete/key=value/f1},{Key=ozone-test-1877614098/multidelete/key=value/f2},{Key=ozone-test-1877614098/multidelete/key=value/f4}]' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:32.040" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:32.040" level="INFO">${output} = {
    "Deleted": [
        {
            "Key": "ozone-test-1877614098/multidelete/key=value/f1"
        },
        {
            "Key": "ozone-test-1877614098/multidelete/key=value/f2"
        },
   ...</msg>
<status status="PASS" starttime="20231129 08:27:31.586" endtime="20231129 08:27:32.040"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:32.041" level="INFO">{
    "Deleted": [
        {
            "Key": "ozone-test-1877614098/multidelete/key=value/f1"
        },
        {
            "Key": "ozone-test-1877614098/multidelete/key=value/f2"
        },
        {
            "Key": "ozone-test-1877614098/multidelete/key=value/f4"
        }
    ]
}</msg>
<status status="PASS" starttime="20231129 08:27:32.041" endtime="20231129 08:27:32.041"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:32.042" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:32.041" endtime="20231129 08:27:32.042"/>
</kw>
<status status="PASS" starttime="20231129 08:27:31.586" endtime="20231129 08:27:32.042"/>
</kw>
<msg timestamp="20231129 08:27:32.042" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:31.585" endtime="20231129 08:27:32.042"/>
</kw>
<msg timestamp="20231129 08:27:32.042" level="INFO">${output} = {
    "Deleted": [
        {
            "Key": "ozone-test-1877614098/multidelete/key=value/f1"
        },
        {
            "Key": "ozone-test-1877614098/multidelete/key=value/f2"
        },
   ...</msg>
<status status="PASS" starttime="20231129 08:27:31.585" endtime="20231129 08:27:32.042"/>
</kw>
<msg timestamp="20231129 08:27:32.043" level="INFO">${result} = {
    "Deleted": [
        {
            "Key": "ozone-test-1877614098/multidelete/key=value/f1"
        },
        {
            "Key": "ozone-test-1877614098/multidelete/key=value/f2"
        },
   ...</msg>
<status status="PASS" starttime="20231129 08:27:31.584" endtime="20231129 08:27:32.043"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:27:32.043" endtime="20231129 08:27:32.043"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/multidelete/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:32.046" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket erasure --prefix ozone-test-1877614098/multidelete/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:32.491" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:32.491" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-1877614098/multidelete/key=value/",
            "LastModified": "2023-11-29T08:27:29.999Z",
            "ETag": "2023-11-29T08:27:29.999Z",...</msg>
<status status="PASS" starttime="20231129 08:27:32.045" endtime="20231129 08:27:32.491"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:32.492" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-1877614098/multidelete/key=value/",
            "LastModified": "2023-11-29T08:27:29.999Z",
            "ETag": "2023-11-29T08:27:29.999Z",
            "Size": 0,
            "StorageClass": "STANDARD"
        },
        {
            "Key": "ozone-test-1877614098/multidelete/key=value/f3",
            "LastModified": "2023-11-29T08:27:31.077Z",
            "ETag": "2023-11-29T08:27:31.077Z",
            "Size": 29,
            "StorageClass": "STANDARD"
        }
    ]
}</msg>
<status status="PASS" starttime="20231129 08:27:32.492" endtime="20231129 08:27:32.492"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:32.493" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:32.492" endtime="20231129 08:27:32.493"/>
</kw>
<status status="PASS" starttime="20231129 08:27:32.044" endtime="20231129 08:27:32.493"/>
</kw>
<msg timestamp="20231129 08:27:32.493" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:32.044" endtime="20231129 08:27:32.493"/>
</kw>
<msg timestamp="20231129 08:27:32.493" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-1877614098/multidelete/key=value/",
            "LastModified": "2023-11-29T08:27:29.999Z",
            "ETag": "2023-11-29T08:27:29.999Z",...</msg>
<status status="PASS" starttime="20231129 08:27:32.044" endtime="20231129 08:27:32.493"/>
</kw>
<msg timestamp="20231129 08:27:32.494" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-1877614098/multidelete/key=value/",
            "LastModified": "2023-11-29T08:27:29.999Z",
            "ETag": "2023-11-29T08:27:29.999Z",...</msg>
<status status="PASS" starttime="20231129 08:27:32.043" endtime="20231129 08:27:32.494"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/key=value/f1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:27:32.494" endtime="20231129 08:27:32.494"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/key=value/f2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:27:32.494" endtime="20231129 08:27:32.495"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}/multidelete/key=value/f3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:27:32.495" endtime="20231129 08:27:32.495"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>STANDARD</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:27:32.495" endtime="20231129 08:27:32.495"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>REDUCED_REDUNDANCY</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:27:32.496" endtime="20231129 08:27:32.496"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:27:29.589" endtime="20231129 08:27:32.496"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20231129 08:27:29.579" endtime="20231129 08:27:32.497"/>
</suite>
<suite id="s1-s1-s14" name="Objectputget" source="/opt/hadoop/smoketest/s3/objectputget.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20231129 08:27:32.506" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:32.506" endtime="20231129 08:27:32.506"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231129 08:27:32.506" endtime="20231129 08:27:32.506"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231129 08:27:32.507" endtime="20231129 08:27:32.507"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:27:32.507" endtime="20231129 08:27:32.507"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:27:32.507" endtime="20231129 08:27:32.507"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:27:32.507" endtime="20231129 08:27:32.507"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:27:32.507" endtime="20231129 08:27:32.507"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:27:32.507" endtime="20231129 08:27:32.507"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20231129 08:27:32.507" endtime="20231129 08:27:32.508"/>
</kw>
<status status="PASS" starttime="20231129 08:27:32.506" endtime="20231129 08:27:32.508"/>
</kw>
<test id="s1-s1-s14-t1" name="Put object to s3" line="32">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:32.511" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile'.</msg>
<msg timestamp="20231129 08:27:32.512" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:32.512" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:27:32.509" endtime="20231129 08:27:32.512"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:32.512" level="INFO"/>
<status status="PASS" starttime="20231129 08:27:32.512" endtime="20231129 08:27:32.513"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:32.513" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:32.513" endtime="20231129 08:27:32.513"/>
</kw>
<status status="PASS" starttime="20231129 08:27:32.509" endtime="20231129 08:27:32.513"/>
</kw>
<msg timestamp="20231129 08:27:32.513" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:32.509" endtime="20231129 08:27:32.513"/>
</kw>
<status status="PASS" starttime="20231129 08:27:32.508" endtime="20231129 08:27:32.514"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --body /tmp/testfile</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:32.517" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket erasure --key ozone-test-1877614098/putobject/key=value/f1 --body /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:33.017" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:33.017" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231129 08:27:32.515" endtime="20231129 08:27:33.017"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:33.018" level="INFO">{
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231129 08:27:33.017" endtime="20231129 08:27:33.018"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:33.018" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:33.018" endtime="20231129 08:27:33.019"/>
</kw>
<status status="PASS" starttime="20231129 08:27:32.515" endtime="20231129 08:27:33.019"/>
</kw>
<msg timestamp="20231129 08:27:33.019" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:32.515" endtime="20231129 08:27:33.019"/>
</kw>
<msg timestamp="20231129 08:27:33.019" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231129 08:27:32.514" endtime="20231129 08:27:33.019"/>
</kw>
<msg timestamp="20231129 08:27:33.019" level="INFO">${result} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231129 08:27:32.514" endtime="20231129 08:27:33.019"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/putobject/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:33.022" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket erasure --prefix ozone-test-1877614098/putobject/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:33.495" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:33.495" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-1877614098/putobject/key=value/",
            "LastModified": "2023-11-29T08:27:32.941Z",
            "ETag": "2023-11-29T08:27:32.941Z",
 ...</msg>
<status status="PASS" starttime="20231129 08:27:33.021" endtime="20231129 08:27:33.495"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:33.496" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-1877614098/putobject/key=value/",
            "LastModified": "2023-11-29T08:27:32.941Z",
            "ETag": "2023-11-29T08:27:32.941Z",
            "Size": 0,
            "StorageClass": "STANDARD"
        },
        {
            "Key": "ozone-test-1877614098/putobject/key=value/f1",
            "LastModified": "2023-11-29T08:27:32.972Z",
            "ETag": "2023-11-29T08:27:32.972Z",
            "Size": 11,
            "StorageClass": "STANDARD"
        }
    ]
}</msg>
<status status="PASS" starttime="20231129 08:27:33.495" endtime="20231129 08:27:33.496"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:33.496" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:33.496" endtime="20231129 08:27:33.496"/>
</kw>
<status status="PASS" starttime="20231129 08:27:33.021" endtime="20231129 08:27:33.496"/>
</kw>
<msg timestamp="20231129 08:27:33.497" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:33.020" endtime="20231129 08:27:33.497"/>
</kw>
<msg timestamp="20231129 08:27:33.497" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-1877614098/putobject/key=value/",
            "LastModified": "2023-11-29T08:27:32.941Z",
            "ETag": "2023-11-29T08:27:32.941Z",
 ...</msg>
<status status="PASS" starttime="20231129 08:27:33.020" endtime="20231129 08:27:33.497"/>
</kw>
<msg timestamp="20231129 08:27:33.497" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-1877614098/putobject/key=value/",
            "LastModified": "2023-11-29T08:27:32.941Z",
            "ETag": "2023-11-29T08:27:32.941Z",
 ...</msg>
<status status="PASS" starttime="20231129 08:27:33.019" endtime="20231129 08:27:33.497"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>f1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:27:33.497" endtime="20231129 08:27:33.497"/>
</kw>
<kw name="Execute" library="os">
<arg>touch -f /tmp/zerobyte</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:33.500" level="INFO">Running command 'touch -f /tmp/zerobyte 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:33.502" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:33.502" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:27:33.499" endtime="20231129 08:27:33.502"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:33.503" level="INFO"/>
<status status="PASS" starttime="20231129 08:27:33.502" endtime="20231129 08:27:33.503"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:33.503" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:33.503" endtime="20231129 08:27:33.504"/>
</kw>
<status status="PASS" starttime="20231129 08:27:33.498" endtime="20231129 08:27:33.504"/>
</kw>
<msg timestamp="20231129 08:27:33.504" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:33.498" endtime="20231129 08:27:33.504"/>
</kw>
<status status="PASS" starttime="20231129 08:27:33.498" endtime="20231129 08:27:33.504"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/zerobyte --body /tmp/zerobyte</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:33.507" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket erasure --key ozone-test-1877614098/putobject/key=value/zerobyte --body /tmp/zerobyte 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:33.960" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:33.960" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:27:33.506" endtime="20231129 08:27:33.960"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:33.961" level="INFO"/>
<status status="PASS" starttime="20231129 08:27:33.961" endtime="20231129 08:27:33.961"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:33.962" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:33.962" endtime="20231129 08:27:33.962"/>
</kw>
<status status="PASS" starttime="20231129 08:27:33.505" endtime="20231129 08:27:33.962"/>
</kw>
<msg timestamp="20231129 08:27:33.962" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:33.505" endtime="20231129 08:27:33.962"/>
</kw>
<msg timestamp="20231129 08:27:33.962" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:27:33.505" endtime="20231129 08:27:33.962"/>
</kw>
<msg timestamp="20231129 08:27:33.963" level="INFO">${result} = </msg>
<status status="PASS" starttime="20231129 08:27:33.504" endtime="20231129 08:27:33.963"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>list-objects --bucket ${BUCKET} --prefix ${PREFIX}/putobject/key=value/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:33.966" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 list-objects --bucket erasure --prefix ozone-test-1877614098/putobject/key=value/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:34.413" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:34.413" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-1877614098/putobject/key=value/",
            "LastModified": "2023-11-29T08:27:32.941Z",
            "ETag": "2023-11-29T08:27:32.941Z",
 ...</msg>
<status status="PASS" starttime="20231129 08:27:33.965" endtime="20231129 08:27:34.413"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:34.414" level="INFO">{
    "Contents": [
        {
            "Key": "ozone-test-1877614098/putobject/key=value/",
            "LastModified": "2023-11-29T08:27:32.941Z",
            "ETag": "2023-11-29T08:27:32.941Z",
            "Size": 0,
            "StorageClass": "STANDARD"
        },
        {
            "Key": "ozone-test-1877614098/putobject/key=value/f1",
            "LastModified": "2023-11-29T08:27:32.972Z",
            "ETag": "2023-11-29T08:27:32.972Z",
            "Size": 11,
            "StorageClass": "STANDARD"
        },
        {
            "Key": "ozone-test-1877614098/putobject/key=value/zerobyte/",
            "LastModified": "2023-11-29T08:27:33.914Z",
            "ETag": "2023-11-29T08:27:33.914Z",
            "Size": 0,
            "StorageClass": "STANDARD"
        }
    ]
}</msg>
<status status="PASS" starttime="20231129 08:27:34.414" endtime="20231129 08:27:34.414"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:34.415" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:34.415" endtime="20231129 08:27:34.415"/>
</kw>
<status status="PASS" starttime="20231129 08:27:33.964" endtime="20231129 08:27:34.415"/>
</kw>
<msg timestamp="20231129 08:27:34.415" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:33.964" endtime="20231129 08:27:34.415"/>
</kw>
<msg timestamp="20231129 08:27:34.415" level="INFO">${output} = {
    "Contents": [
        {
            "Key": "ozone-test-1877614098/putobject/key=value/",
            "LastModified": "2023-11-29T08:27:32.941Z",
            "ETag": "2023-11-29T08:27:32.941Z",
 ...</msg>
<status status="PASS" starttime="20231129 08:27:33.963" endtime="20231129 08:27:34.416"/>
</kw>
<msg timestamp="20231129 08:27:34.416" level="INFO">${result} = {
    "Contents": [
        {
            "Key": "ozone-test-1877614098/putobject/key=value/",
            "LastModified": "2023-11-29T08:27:32.941Z",
            "ETag": "2023-11-29T08:27:32.941Z",
 ...</msg>
<status status="PASS" starttime="20231129 08:27:33.963" endtime="20231129 08:27:34.416"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>zerobyte</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:27:34.416" endtime="20231129 08:27:34.416"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:27:32.508" endtime="20231129 08:27:34.416"/>
</test>
<test id="s1-s1-s14-t2" name="Get object from s3" line="44">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 /tmp/testfile.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:34.421" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-1877614098/putobject/key=value/f1 /tmp/testfile.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:34.868" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:34.868" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:27:32 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20231129 08:27:34.419" endtime="20231129 08:27:34.868"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:34.869" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:27:32 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 29 Nov 2023 08:27:34 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231129 08:27:34.869" endtime="20231129 08:27:34.869"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:34.870" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:34.870" endtime="20231129 08:27:34.870"/>
</kw>
<status status="PASS" starttime="20231129 08:27:34.419" endtime="20231129 08:27:34.870"/>
</kw>
<msg timestamp="20231129 08:27:34.871" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:34.419" endtime="20231129 08:27:34.871"/>
</kw>
<msg timestamp="20231129 08:27:34.871" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:27:32 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20231129 08:27:34.418" endtime="20231129 08:27:34.871"/>
</kw>
<msg timestamp="20231129 08:27:34.871" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:27:32 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20231129 08:27:34.418" endtime="20231129 08:27:34.871"/>
</kw>
<kw name="Compare files" library="os">
<arg>/tmp/testfile</arg>
<arg>/tmp/testfile.result</arg>
<kw name="Execute" library="os">
<var>${checksumbefore}</var>
<arg>md5sum ${file1} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:34.874" level="INFO">Running command 'md5sum /tmp/testfile | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:34.876" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:34.876" level="INFO">${output} = 09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20231129 08:27:34.873" endtime="20231129 08:27:34.876"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:34.877" level="INFO">09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20231129 08:27:34.876" endtime="20231129 08:27:34.877"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:34.877" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:34.877" endtime="20231129 08:27:34.877"/>
</kw>
<status status="PASS" starttime="20231129 08:27:34.872" endtime="20231129 08:27:34.877"/>
</kw>
<msg timestamp="20231129 08:27:34.877" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:34.872" endtime="20231129 08:27:34.878"/>
</kw>
<msg timestamp="20231129 08:27:34.878" level="INFO">${checksumbefore} = 09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20231129 08:27:34.872" endtime="20231129 08:27:34.878"/>
</kw>
<kw name="Execute" library="os">
<var>${checksumafter}</var>
<arg>md5sum ${file2} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:34.880" level="INFO">Running command 'md5sum /tmp/testfile.result | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:34.882" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:34.882" level="INFO">${output} = 09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20231129 08:27:34.879" endtime="20231129 08:27:34.882"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:34.882" level="INFO">09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20231129 08:27:34.882" endtime="20231129 08:27:34.883"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:34.883" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:34.883" endtime="20231129 08:27:34.883"/>
</kw>
<status status="PASS" starttime="20231129 08:27:34.879" endtime="20231129 08:27:34.883"/>
</kw>
<msg timestamp="20231129 08:27:34.883" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:34.878" endtime="20231129 08:27:34.883"/>
</kw>
<msg timestamp="20231129 08:27:34.884" level="INFO">${checksumafter} = 09ad6a6e23191dd19110d0251c4c3186</msg>
<status status="PASS" starttime="20231129 08:27:34.878" endtime="20231129 08:27:34.884"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${checksumbefore}</arg>
<arg>${checksumafter}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231129 08:27:34.884" endtime="20231129 08:27:34.884"/>
</kw>
<status status="PASS" starttime="20231129 08:27:34.871" endtime="20231129 08:27:34.884"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:27:34.417" endtime="20231129 08:27:34.884"/>
</test>
<test id="s1-s1-s14-t3" name="Get object with wrong signature" line="49">
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>Skip in unsecure cluster</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<msg timestamp="20231129 08:27:34.886" level="INFO">Execution passed with message:
Skip in unsecure cluster</msg>
<status status="PASS" starttime="20231129 08:27:34.885" endtime="20231129 08:27:34.886"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>curl -i -H 'Authorization: AWS scm/scm@EXAMPLE.COM:asdfqwerty' ${ENDPOINT_URL}/${BUCKET}/${PREFIX}/putobject/key=value/f1</arg>
<status status="NOT RUN" starttime="20231129 08:27:34.886" endtime="20231129 08:27:34.886"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>403 Forbidden</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231129 08:27:34.886" endtime="20231129 08:27:34.886"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:27:34.885" endtime="20231129 08:27:34.886">Skip in unsecure cluster</status>
</test>
<test id="s1-s1-s14-t4" name="Get Partial object from s3 with both start and endoffset" line="54">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=0-4 /tmp/testfile1.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:34.890" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-1877614098/putobject/key=value/f1 --range bytes=0-4 /tmp/testfile1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:35.339" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:35.339" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:27:32 GMT",
    "ContentLength": 5,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20231129 08:27:34.889" endtime="20231129 08:27:35.339"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:35.340" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:27:32 GMT",
    "ContentLength": 5,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-4/11",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 29 Nov 2023 08:27:35 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231129 08:27:35.340" endtime="20231129 08:27:35.340"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:35.341" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:35.341" endtime="20231129 08:27:35.342"/>
</kw>
<status status="PASS" starttime="20231129 08:27:34.889" endtime="20231129 08:27:35.342"/>
</kw>
<msg timestamp="20231129 08:27:35.342" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:34.888" endtime="20231129 08:27:35.342"/>
</kw>
<msg timestamp="20231129 08:27:35.342" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:27:32 GMT",
    "ContentLength": 5,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20231129 08:27:34.888" endtime="20231129 08:27:35.342"/>
</kw>
<msg timestamp="20231129 08:27:35.342" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:27:32 GMT",
    "ContentLength": 5,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20231129 08:27:34.887" endtime="20231129 08:27:35.342"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:27:35.343" endtime="20231129 08:27:35.343"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-4/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:27:35.343" endtime="20231129 08:27:35.344"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:27:35.344" endtime="20231129 08:27:35.344"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=0 bs=1 count=5 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:35.347" level="INFO">Running command 'dd if=/tmp/testfile skip=0 bs=1 count=5 2&gt;/dev/null'.</msg>
<msg timestamp="20231129 08:27:35.349" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:35.349" level="INFO">${output} = Rando</msg>
<status status="PASS" starttime="20231129 08:27:35.345" endtime="20231129 08:27:35.349"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:35.349" level="INFO">Rando</msg>
<status status="PASS" starttime="20231129 08:27:35.349" endtime="20231129 08:27:35.349"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:35.350" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:35.350" endtime="20231129 08:27:35.350"/>
</kw>
<status status="PASS" starttime="20231129 08:27:35.345" endtime="20231129 08:27:35.350"/>
</kw>
<msg timestamp="20231129 08:27:35.350" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:35.345" endtime="20231129 08:27:35.350"/>
</kw>
<msg timestamp="20231129 08:27:35.351" level="INFO">${expectedData} = Rando</msg>
<status status="PASS" starttime="20231129 08:27:35.344" endtime="20231129 08:27:35.351"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile1.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:35.353" level="INFO">Running command 'cat /tmp/testfile1.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:35.355" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:35.355" level="INFO">${output} = Rando</msg>
<status status="PASS" starttime="20231129 08:27:35.352" endtime="20231129 08:27:35.355"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:35.356" level="INFO">Rando</msg>
<status status="PASS" starttime="20231129 08:27:35.355" endtime="20231129 08:27:35.356"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:35.356" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:35.356" endtime="20231129 08:27:35.356"/>
</kw>
<status status="PASS" starttime="20231129 08:27:35.352" endtime="20231129 08:27:35.357"/>
</kw>
<msg timestamp="20231129 08:27:35.357" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:35.351" endtime="20231129 08:27:35.357"/>
</kw>
<msg timestamp="20231129 08:27:35.357" level="INFO">${actualData} = Rando</msg>
<status status="PASS" starttime="20231129 08:27:35.351" endtime="20231129 08:27:35.357"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231129 08:27:35.357" endtime="20231129 08:27:35.357"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=2-4 /tmp/testfile1.result1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:35.360" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-1877614098/putobject/key=value/f1 --range bytes=2-4 /tmp/testfile1.result1 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:35.828" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:35.828" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:27:32 GMT",
    "ContentLength": 3,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20231129 08:27:35.359" endtime="20231129 08:27:35.828"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:35.829" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:27:32 GMT",
    "ContentLength": 3,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 2-4/11",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 29 Nov 2023 08:27:35 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231129 08:27:35.828" endtime="20231129 08:27:35.829"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:35.829" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:35.829" endtime="20231129 08:27:35.830"/>
</kw>
<status status="PASS" starttime="20231129 08:27:35.359" endtime="20231129 08:27:35.830"/>
</kw>
<msg timestamp="20231129 08:27:35.830" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:35.359" endtime="20231129 08:27:35.830"/>
</kw>
<msg timestamp="20231129 08:27:35.830" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:27:32 GMT",
    "ContentLength": 3,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20231129 08:27:35.358" endtime="20231129 08:27:35.830"/>
</kw>
<msg timestamp="20231129 08:27:35.830" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:27:32 GMT",
    "ContentLength": 3,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20231129 08:27:35.357" endtime="20231129 08:27:35.830"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:27:35.830" endtime="20231129 08:27:35.831"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 2-4/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:27:35.831" endtime="20231129 08:27:35.831"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:27:35.831" endtime="20231129 08:27:35.832"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=2 bs=1 count=3 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:35.835" level="INFO">Running command 'dd if=/tmp/testfile skip=2 bs=1 count=3 2&gt;/dev/null'.</msg>
<msg timestamp="20231129 08:27:35.836" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:35.836" level="INFO">${output} = ndo</msg>
<status status="PASS" starttime="20231129 08:27:35.833" endtime="20231129 08:27:35.836"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:35.837" level="INFO">ndo</msg>
<status status="PASS" starttime="20231129 08:27:35.837" endtime="20231129 08:27:35.837"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:35.838" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:35.837" endtime="20231129 08:27:35.838"/>
</kw>
<status status="PASS" starttime="20231129 08:27:35.832" endtime="20231129 08:27:35.838"/>
</kw>
<msg timestamp="20231129 08:27:35.838" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:35.832" endtime="20231129 08:27:35.838"/>
</kw>
<msg timestamp="20231129 08:27:35.838" level="INFO">${expectedData} = ndo</msg>
<status status="PASS" starttime="20231129 08:27:35.832" endtime="20231129 08:27:35.838"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile1.result1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:35.841" level="INFO">Running command 'cat /tmp/testfile1.result1 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:35.842" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:35.842" level="INFO">${output} = ndo</msg>
<status status="PASS" starttime="20231129 08:27:35.839" endtime="20231129 08:27:35.842"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:35.843" level="INFO">ndo</msg>
<status status="PASS" starttime="20231129 08:27:35.842" endtime="20231129 08:27:35.843"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:35.843" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:35.843" endtime="20231129 08:27:35.843"/>
</kw>
<status status="PASS" starttime="20231129 08:27:35.839" endtime="20231129 08:27:35.844"/>
</kw>
<msg timestamp="20231129 08:27:35.844" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:35.839" endtime="20231129 08:27:35.844"/>
</kw>
<msg timestamp="20231129 08:27:35.844" level="INFO">${actualData} = ndo</msg>
<status status="PASS" starttime="20231129 08:27:35.838" endtime="20231129 08:27:35.844"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231129 08:27:35.844" endtime="20231129 08:27:35.844"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=2-1000 /tmp/testfile1.result2</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:35.847" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-1877614098/putobject/key=value/f1 --range bytes=2-1000 /tmp/testfile1.result2 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:36.298" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:36.298" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:27:32 GMT",
    "ContentLength": 9,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20231129 08:27:35.846" endtime="20231129 08:27:36.298"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:36.299" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:27:32 GMT",
    "ContentLength": 9,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 2-10/11",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 29 Nov 2023 08:27:36 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231129 08:27:36.298" endtime="20231129 08:27:36.299"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:36.299" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:36.299" endtime="20231129 08:27:36.299"/>
</kw>
<status status="PASS" starttime="20231129 08:27:35.846" endtime="20231129 08:27:36.299"/>
</kw>
<msg timestamp="20231129 08:27:36.299" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:35.845" endtime="20231129 08:27:36.300"/>
</kw>
<msg timestamp="20231129 08:27:36.300" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:27:32 GMT",
    "ContentLength": 9,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20231129 08:27:35.845" endtime="20231129 08:27:36.300"/>
</kw>
<msg timestamp="20231129 08:27:36.300" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:27:32 GMT",
    "ContentLength": 9,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20231129 08:27:35.844" endtime="20231129 08:27:36.300"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:27:36.300" endtime="20231129 08:27:36.300"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 2-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:27:36.301" endtime="20231129 08:27:36.301"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:27:36.301" endtime="20231129 08:27:36.301"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=2 bs=1 count=9 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:36.304" level="INFO">Running command 'dd if=/tmp/testfile skip=2 bs=1 count=9 2&gt;/dev/null'.</msg>
<msg timestamp="20231129 08:27:36.306" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:36.306" level="INFO">${output} = ndomtext</msg>
<status status="PASS" starttime="20231129 08:27:36.302" endtime="20231129 08:27:36.306"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:36.306" level="INFO">ndomtext</msg>
<status status="PASS" starttime="20231129 08:27:36.306" endtime="20231129 08:27:36.306"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:36.307" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:36.307" endtime="20231129 08:27:36.307"/>
</kw>
<status status="PASS" starttime="20231129 08:27:36.302" endtime="20231129 08:27:36.307"/>
</kw>
<msg timestamp="20231129 08:27:36.307" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:36.302" endtime="20231129 08:27:36.307"/>
</kw>
<msg timestamp="20231129 08:27:36.307" level="INFO">${expectedData} = ndomtext</msg>
<status status="PASS" starttime="20231129 08:27:36.301" endtime="20231129 08:27:36.307"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile1.result2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:36.310" level="INFO">Running command 'cat /tmp/testfile1.result2 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:36.312" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:36.312" level="INFO">${output} = ndomtext</msg>
<status status="PASS" starttime="20231129 08:27:36.309" endtime="20231129 08:27:36.312"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:36.312" level="INFO">ndomtext</msg>
<status status="PASS" starttime="20231129 08:27:36.312" endtime="20231129 08:27:36.312"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:36.313" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:36.313" endtime="20231129 08:27:36.313"/>
</kw>
<status status="PASS" starttime="20231129 08:27:36.308" endtime="20231129 08:27:36.313"/>
</kw>
<msg timestamp="20231129 08:27:36.313" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:36.308" endtime="20231129 08:27:36.313"/>
</kw>
<msg timestamp="20231129 08:27:36.313" level="INFO">${actualData} = ndomtext</msg>
<status status="PASS" starttime="20231129 08:27:36.308" endtime="20231129 08:27:36.313"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231129 08:27:36.313" endtime="20231129 08:27:36.314"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:27:34.887" endtime="20231129 08:27:36.314"/>
</test>
<test id="s1-s1-s14-t5" name="Get Partial object from s3 with both start and endoffset(start offset and endoffset is greater than file size)" line="80">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=10000-10000 /tmp/testfile2.result</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:36.318" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-1877614098/putobject/key=value/f1 --range bytes=10000-10000 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:36.763" level="INFO">${rc} = 255</msg>
<msg timestamp="20231129 08:27:36.763" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20231129 08:27:36.317" endtime="20231129 08:27:36.763"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:36.764" level="INFO">
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20231129 08:27:36.763" endtime="20231129 08:27:36.764"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:36.764" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:36.764" endtime="20231129 08:27:36.765"/>
</kw>
<msg timestamp="20231129 08:27:36.765" level="INFO">${output} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20231129 08:27:36.316" endtime="20231129 08:27:36.765"/>
</kw>
<msg timestamp="20231129 08:27:36.765" level="INFO">${result} = 
An error occurred (InvalidRange) when calling the GetObject operation: The requested range is not satisfiable</msg>
<status status="PASS" starttime="20231129 08:27:36.315" endtime="20231129 08:27:36.765"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:27:36.765" endtime="20231129 08:27:36.765"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:27:36.314" endtime="20231129 08:27:36.766"/>
</test>
<test id="s1-s1-s14-t6" name="Get Partial object from s3 with both start and endoffset(end offset is greater than file size)" line="85">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=0-10000 /tmp/testfile2.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:36.770" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-1877614098/putobject/key=value/f1 --range bytes=0-10000 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:37.221" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:37.221" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:27:32 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20231129 08:27:36.769" endtime="20231129 08:27:37.221"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:37.222" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:27:32 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-10/11",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 29 Nov 2023 08:27:37 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231129 08:27:37.221" endtime="20231129 08:27:37.222"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:37.222" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:37.222" endtime="20231129 08:27:37.222"/>
</kw>
<status status="PASS" starttime="20231129 08:27:36.768" endtime="20231129 08:27:37.223"/>
</kw>
<msg timestamp="20231129 08:27:37.223" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:36.768" endtime="20231129 08:27:37.223"/>
</kw>
<msg timestamp="20231129 08:27:37.223" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:27:32 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20231129 08:27:36.767" endtime="20231129 08:27:37.223"/>
</kw>
<msg timestamp="20231129 08:27:37.223" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:27:32 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20231129 08:27:36.767" endtime="20231129 08:27:37.223"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:27:37.223" endtime="20231129 08:27:37.224"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:27:37.224" endtime="20231129 08:27:37.224"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:27:37.224" endtime="20231129 08:27:37.225"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:37.227" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:37.229" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:37.229" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20231129 08:27:37.226" endtime="20231129 08:27:37.229"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:37.230" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20231129 08:27:37.229" endtime="20231129 08:27:37.230"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:37.230" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:37.230" endtime="20231129 08:27:37.230"/>
</kw>
<status status="PASS" starttime="20231129 08:27:37.225" endtime="20231129 08:27:37.230"/>
</kw>
<msg timestamp="20231129 08:27:37.230" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:37.225" endtime="20231129 08:27:37.230"/>
</kw>
<msg timestamp="20231129 08:27:37.231" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20231129 08:27:37.225" endtime="20231129 08:27:37.231"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile2.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:37.233" level="INFO">Running command 'cat /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:37.235" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:37.235" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20231129 08:27:37.232" endtime="20231129 08:27:37.235"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:37.235" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20231129 08:27:37.235" endtime="20231129 08:27:37.236"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:37.236" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:37.236" endtime="20231129 08:27:37.236"/>
</kw>
<status status="PASS" starttime="20231129 08:27:37.231" endtime="20231129 08:27:37.236"/>
</kw>
<msg timestamp="20231129 08:27:37.236" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:37.231" endtime="20231129 08:27:37.236"/>
</kw>
<msg timestamp="20231129 08:27:37.237" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20231129 08:27:37.231" endtime="20231129 08:27:37.237"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231129 08:27:37.237" endtime="20231129 08:27:37.237"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:27:36.766" endtime="20231129 08:27:37.237"/>
</test>
<test id="s1-s1-s14-t7" name="Get Partial object from s3 with only start offset" line="94">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=0- /tmp/testfile3.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:37.241" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-1877614098/putobject/key=value/f1 --range bytes=0- /tmp/testfile3.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:37.677" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:37.677" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:27:32 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20231129 08:27:37.240" endtime="20231129 08:27:37.677"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:37.678" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:27:32 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-10/11",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 29 Nov 2023 08:27:37 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231129 08:27:37.677" endtime="20231129 08:27:37.678"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:37.678" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:37.678" endtime="20231129 08:27:37.678"/>
</kw>
<status status="PASS" starttime="20231129 08:27:37.239" endtime="20231129 08:27:37.678"/>
</kw>
<msg timestamp="20231129 08:27:37.679" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:37.239" endtime="20231129 08:27:37.679"/>
</kw>
<msg timestamp="20231129 08:27:37.679" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:27:32 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20231129 08:27:37.239" endtime="20231129 08:27:37.679"/>
</kw>
<msg timestamp="20231129 08:27:37.679" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:27:32 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20231129 08:27:37.238" endtime="20231129 08:27:37.679"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:27:37.679" endtime="20231129 08:27:37.679"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:27:37.679" endtime="20231129 08:27:37.680"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:27:37.680" endtime="20231129 08:27:37.680"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:37.683" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:37.684" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:37.684" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20231129 08:27:37.681" endtime="20231129 08:27:37.684"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:37.685" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20231129 08:27:37.685" endtime="20231129 08:27:37.685"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:37.686" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:37.685" endtime="20231129 08:27:37.686"/>
</kw>
<status status="PASS" starttime="20231129 08:27:37.681" endtime="20231129 08:27:37.686"/>
</kw>
<msg timestamp="20231129 08:27:37.686" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:37.681" endtime="20231129 08:27:37.686"/>
</kw>
<msg timestamp="20231129 08:27:37.686" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20231129 08:27:37.680" endtime="20231129 08:27:37.686"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile3.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:37.688" level="INFO">Running command 'cat /tmp/testfile3.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:37.690" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:37.690" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20231129 08:27:37.687" endtime="20231129 08:27:37.690"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:37.691" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20231129 08:27:37.690" endtime="20231129 08:27:37.691"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:37.691" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:37.691" endtime="20231129 08:27:37.691"/>
</kw>
<status status="PASS" starttime="20231129 08:27:37.687" endtime="20231129 08:27:37.691"/>
</kw>
<msg timestamp="20231129 08:27:37.691" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:37.687" endtime="20231129 08:27:37.691"/>
</kw>
<msg timestamp="20231129 08:27:37.692" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20231129 08:27:37.686" endtime="20231129 08:27:37.692"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231129 08:27:37.692" endtime="20231129 08:27:37.692"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:27:37.238" endtime="20231129 08:27:37.692"/>
</test>
<test id="s1-s1-s14-t8" name="Get Partial object from s3 with both start and endoffset which are equal" line="103">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=0-0 /tmp/testfile4.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:37.696" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-1877614098/putobject/key=value/f1 --range bytes=0-0 /tmp/testfile4.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:38.139" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:38.139" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:27:32 GMT",
    "ContentLength": 1,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20231129 08:27:37.695" endtime="20231129 08:27:38.139"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:38.140" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:27:32 GMT",
    "ContentLength": 1,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-0/11",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 29 Nov 2023 08:27:38 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231129 08:27:38.139" endtime="20231129 08:27:38.140"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:38.140" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:38.140" endtime="20231129 08:27:38.140"/>
</kw>
<status status="PASS" starttime="20231129 08:27:37.695" endtime="20231129 08:27:38.140"/>
</kw>
<msg timestamp="20231129 08:27:38.140" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:37.695" endtime="20231129 08:27:38.141"/>
</kw>
<msg timestamp="20231129 08:27:38.141" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:27:32 GMT",
    "ContentLength": 1,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20231129 08:27:37.694" endtime="20231129 08:27:38.141"/>
</kw>
<msg timestamp="20231129 08:27:38.141" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:27:32 GMT",
    "ContentLength": 1,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20231129 08:27:37.693" endtime="20231129 08:27:38.141"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:27:38.141" endtime="20231129 08:27:38.141"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-0/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:27:38.142" endtime="20231129 08:27:38.142"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:27:38.142" endtime="20231129 08:27:38.142"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=0 bs=1 count=1 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:38.145" level="INFO">Running command 'dd if=/tmp/testfile skip=0 bs=1 count=1 2&gt;/dev/null'.</msg>
<msg timestamp="20231129 08:27:38.146" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:38.147" level="INFO">${output} = R</msg>
<status status="PASS" starttime="20231129 08:27:38.143" endtime="20231129 08:27:38.147"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:38.147" level="INFO">R</msg>
<status status="PASS" starttime="20231129 08:27:38.147" endtime="20231129 08:27:38.147"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:38.148" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:38.147" endtime="20231129 08:27:38.148"/>
</kw>
<status status="PASS" starttime="20231129 08:27:38.143" endtime="20231129 08:27:38.148"/>
</kw>
<msg timestamp="20231129 08:27:38.148" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:38.143" endtime="20231129 08:27:38.148"/>
</kw>
<msg timestamp="20231129 08:27:38.148" level="INFO">${expectedData} = R</msg>
<status status="PASS" starttime="20231129 08:27:38.142" endtime="20231129 08:27:38.148"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile4.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:38.151" level="INFO">Running command 'cat /tmp/testfile4.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:38.152" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:38.152" level="INFO">${output} = R</msg>
<status status="PASS" starttime="20231129 08:27:38.149" endtime="20231129 08:27:38.152"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:38.153" level="INFO">R</msg>
<status status="PASS" starttime="20231129 08:27:38.152" endtime="20231129 08:27:38.153"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:38.153" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:38.153" endtime="20231129 08:27:38.153"/>
</kw>
<status status="PASS" starttime="20231129 08:27:38.149" endtime="20231129 08:27:38.154"/>
</kw>
<msg timestamp="20231129 08:27:38.154" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:38.149" endtime="20231129 08:27:38.154"/>
</kw>
<msg timestamp="20231129 08:27:38.154" level="INFO">${actualData} = R</msg>
<status status="PASS" starttime="20231129 08:27:38.148" endtime="20231129 08:27:38.154"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231129 08:27:38.154" endtime="20231129 08:27:38.154"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=4-4 /tmp/testfile5.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:38.157" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-1877614098/putobject/key=value/f1 --range bytes=4-4 /tmp/testfile5.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:38.607" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:38.607" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:27:32 GMT",
    "ContentLength": 1,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20231129 08:27:38.156" endtime="20231129 08:27:38.607"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:38.608" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:27:32 GMT",
    "ContentLength": 1,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 4-4/11",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 29 Nov 2023 08:27:38 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231129 08:27:38.607" endtime="20231129 08:27:38.608"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:38.609" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:38.608" endtime="20231129 08:27:38.609"/>
</kw>
<status status="PASS" starttime="20231129 08:27:38.156" endtime="20231129 08:27:38.609"/>
</kw>
<msg timestamp="20231129 08:27:38.609" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:38.156" endtime="20231129 08:27:38.609"/>
</kw>
<msg timestamp="20231129 08:27:38.609" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:27:32 GMT",
    "ContentLength": 1,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20231129 08:27:38.155" endtime="20231129 08:27:38.609"/>
</kw>
<msg timestamp="20231129 08:27:38.609" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:27:32 GMT",
    "ContentLength": 1,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20231129 08:27:38.155" endtime="20231129 08:27:38.609"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:27:38.609" endtime="20231129 08:27:38.610"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 4-4/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:27:38.610" endtime="20231129 08:27:38.610"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:27:38.610" endtime="20231129 08:27:38.611"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=4 bs=1 count=1 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:38.613" level="INFO">Running command 'dd if=/tmp/testfile skip=4 bs=1 count=1 2&gt;/dev/null'.</msg>
<msg timestamp="20231129 08:27:38.615" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:38.615" level="INFO">${output} = o</msg>
<status status="PASS" starttime="20231129 08:27:38.612" endtime="20231129 08:27:38.615"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:38.616" level="INFO">o</msg>
<status status="PASS" starttime="20231129 08:27:38.615" endtime="20231129 08:27:38.616"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:38.616" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:38.616" endtime="20231129 08:27:38.616"/>
</kw>
<status status="PASS" starttime="20231129 08:27:38.611" endtime="20231129 08:27:38.616"/>
</kw>
<msg timestamp="20231129 08:27:38.616" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:38.611" endtime="20231129 08:27:38.617"/>
</kw>
<msg timestamp="20231129 08:27:38.617" level="INFO">${expectedData} = o</msg>
<status status="PASS" starttime="20231129 08:27:38.611" endtime="20231129 08:27:38.617"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile5.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:38.619" level="INFO">Running command 'cat /tmp/testfile5.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:38.620" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:38.621" level="INFO">${output} = o</msg>
<status status="PASS" starttime="20231129 08:27:38.618" endtime="20231129 08:27:38.621"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:38.621" level="INFO">o</msg>
<status status="PASS" starttime="20231129 08:27:38.621" endtime="20231129 08:27:38.621"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:38.622" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:38.621" endtime="20231129 08:27:38.622"/>
</kw>
<status status="PASS" starttime="20231129 08:27:38.617" endtime="20231129 08:27:38.622"/>
</kw>
<msg timestamp="20231129 08:27:38.622" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:38.617" endtime="20231129 08:27:38.622"/>
</kw>
<msg timestamp="20231129 08:27:38.622" level="INFO">${actualData} = o</msg>
<status status="PASS" starttime="20231129 08:27:38.617" endtime="20231129 08:27:38.622"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231129 08:27:38.622" endtime="20231129 08:27:38.623"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:27:37.693" endtime="20231129 08:27:38.623"/>
</test>
<test id="s1-s1-s14-t9" name="Get Partial object from s3 to get last n bytes" line="120">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=-4 /tmp/testfile6.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:38.627" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-1877614098/putobject/key=value/f1 --range bytes=-4 /tmp/testfile6.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:39.075" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:39.075" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:27:32 GMT",
    "ContentLength": 4,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20231129 08:27:38.626" endtime="20231129 08:27:39.075"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:39.076" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:27:32 GMT",
    "ContentLength": 4,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 7-10/11",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 29 Nov 2023 08:27:39 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231129 08:27:39.075" endtime="20231129 08:27:39.076"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:39.076" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:39.076" endtime="20231129 08:27:39.076"/>
</kw>
<status status="PASS" starttime="20231129 08:27:38.625" endtime="20231129 08:27:39.077"/>
</kw>
<msg timestamp="20231129 08:27:39.077" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:38.625" endtime="20231129 08:27:39.077"/>
</kw>
<msg timestamp="20231129 08:27:39.077" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:27:32 GMT",
    "ContentLength": 4,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20231129 08:27:38.625" endtime="20231129 08:27:39.077"/>
</kw>
<msg timestamp="20231129 08:27:39.077" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:27:32 GMT",
    "ContentLength": 4,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Con...</msg>
<status status="PASS" starttime="20231129 08:27:38.624" endtime="20231129 08:27:39.077"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:27:39.077" endtime="20231129 08:27:39.078"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 7-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:27:39.078" endtime="20231129 08:27:39.078"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:27:39.078" endtime="20231129 08:27:39.078"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>dd if=/tmp/testfile skip=7 bs=1 count=4 2&gt;/dev/null</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:39.082" level="INFO">Running command 'dd if=/tmp/testfile skip=7 bs=1 count=4 2&gt;/dev/null'.</msg>
<msg timestamp="20231129 08:27:39.084" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:39.084" level="INFO">${output} = ext</msg>
<status status="PASS" starttime="20231129 08:27:39.081" endtime="20231129 08:27:39.084"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:39.085" level="INFO">ext</msg>
<status status="PASS" starttime="20231129 08:27:39.084" endtime="20231129 08:27:39.085"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:39.085" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:39.085" endtime="20231129 08:27:39.085"/>
</kw>
<status status="PASS" starttime="20231129 08:27:39.080" endtime="20231129 08:27:39.085"/>
</kw>
<msg timestamp="20231129 08:27:39.085" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:39.079" endtime="20231129 08:27:39.085"/>
</kw>
<msg timestamp="20231129 08:27:39.086" level="INFO">${expectedData} = ext</msg>
<status status="PASS" starttime="20231129 08:27:39.079" endtime="20231129 08:27:39.086"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile6.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:39.088" level="INFO">Running command 'cat /tmp/testfile6.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:39.089" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:39.090" level="INFO">${output} = ext</msg>
<status status="PASS" starttime="20231129 08:27:39.087" endtime="20231129 08:27:39.090"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:39.090" level="INFO">ext</msg>
<status status="PASS" starttime="20231129 08:27:39.090" endtime="20231129 08:27:39.090"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:39.091" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:39.090" endtime="20231129 08:27:39.091"/>
</kw>
<status status="PASS" starttime="20231129 08:27:39.086" endtime="20231129 08:27:39.091"/>
</kw>
<msg timestamp="20231129 08:27:39.091" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:39.086" endtime="20231129 08:27:39.091"/>
</kw>
<msg timestamp="20231129 08:27:39.091" level="INFO">${actualData} = ext</msg>
<status status="PASS" starttime="20231129 08:27:39.086" endtime="20231129 08:27:39.091"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231129 08:27:39.091" endtime="20231129 08:27:39.092"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=-10000 /tmp/testfile7.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:39.095" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-1877614098/putobject/key=value/f1 --range bytes=-10000 /tmp/testfile7.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:39.536" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:39.536" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:27:32 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20231129 08:27:39.093" endtime="20231129 08:27:39.536"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:39.537" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:27:32 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentRange": "bytes 0-10/11",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 29 Nov 2023 08:27:39 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231129 08:27:39.537" endtime="20231129 08:27:39.538"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:39.538" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:39.538" endtime="20231129 08:27:39.538"/>
</kw>
<status status="PASS" starttime="20231129 08:27:39.093" endtime="20231129 08:27:39.538"/>
</kw>
<msg timestamp="20231129 08:27:39.538" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:39.093" endtime="20231129 08:27:39.538"/>
</kw>
<msg timestamp="20231129 08:27:39.539" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:27:32 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20231129 08:27:39.092" endtime="20231129 08:27:39.539"/>
</kw>
<msg timestamp="20231129 08:27:39.539" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:27:32 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20231129 08:27:39.092" endtime="20231129 08:27:39.539"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:27:39.539" endtime="20231129 08:27:39.539"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bytes 0-10/11</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:27:39.539" endtime="20231129 08:27:39.540"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:27:39.540" endtime="20231129 08:27:39.540"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:39.543" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:39.544" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:39.545" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20231129 08:27:39.541" endtime="20231129 08:27:39.545"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:39.545" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20231129 08:27:39.545" endtime="20231129 08:27:39.545"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:39.546" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:39.545" endtime="20231129 08:27:39.546"/>
</kw>
<status status="PASS" starttime="20231129 08:27:39.541" endtime="20231129 08:27:39.546"/>
</kw>
<msg timestamp="20231129 08:27:39.546" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:39.541" endtime="20231129 08:27:39.546"/>
</kw>
<msg timestamp="20231129 08:27:39.546" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20231129 08:27:39.540" endtime="20231129 08:27:39.546"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile7.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:39.549" level="INFO">Running command 'cat /tmp/testfile7.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:39.551" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:39.551" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20231129 08:27:39.548" endtime="20231129 08:27:39.551"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:39.551" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20231129 08:27:39.551" endtime="20231129 08:27:39.551"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:39.552" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:39.552" endtime="20231129 08:27:39.552"/>
</kw>
<status status="PASS" starttime="20231129 08:27:39.547" endtime="20231129 08:27:39.552"/>
</kw>
<msg timestamp="20231129 08:27:39.552" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:39.547" endtime="20231129 08:27:39.552"/>
</kw>
<msg timestamp="20231129 08:27:39.552" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20231129 08:27:39.546" endtime="20231129 08:27:39.552"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231129 08:27:39.553" endtime="20231129 08:27:39.553"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:27:38.623" endtime="20231129 08:27:39.553"/>
</test>
<test id="s1-s1-s14-t10" name="Incorrect values for end and start offset" line="138">
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=-11-10000 /tmp/testfile8.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:39.557" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-1877614098/putobject/key=value/f1 --range bytes=-11-10000 /tmp/testfile8.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:40.000" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:40.000" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:27:32 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20231129 08:27:39.556" endtime="20231129 08:27:40.000"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:40.001" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:27:32 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 29 Nov 2023 08:27:39 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231129 08:27:40.001" endtime="20231129 08:27:40.001"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:40.002" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:40.001" endtime="20231129 08:27:40.002"/>
</kw>
<status status="PASS" starttime="20231129 08:27:39.555" endtime="20231129 08:27:40.002"/>
</kw>
<msg timestamp="20231129 08:27:40.002" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:39.555" endtime="20231129 08:27:40.002"/>
</kw>
<msg timestamp="20231129 08:27:40.002" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:27:32 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20231129 08:27:39.555" endtime="20231129 08:27:40.002"/>
</kw>
<msg timestamp="20231129 08:27:40.003" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:27:32 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20231129 08:27:39.554" endtime="20231129 08:27:40.003"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:27:40.003" endtime="20231129 08:27:40.003"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:27:40.003" endtime="20231129 08:27:40.003"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:40.006" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:40.008" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:40.008" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20231129 08:27:40.005" endtime="20231129 08:27:40.008"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:40.009" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20231129 08:27:40.008" endtime="20231129 08:27:40.009"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:40.009" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:40.009" endtime="20231129 08:27:40.009"/>
</kw>
<status status="PASS" starttime="20231129 08:27:40.004" endtime="20231129 08:27:40.009"/>
</kw>
<msg timestamp="20231129 08:27:40.009" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:40.004" endtime="20231129 08:27:40.009"/>
</kw>
<msg timestamp="20231129 08:27:40.010" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20231129 08:27:40.004" endtime="20231129 08:27:40.010"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile8.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:40.012" level="INFO">Running command 'cat /tmp/testfile8.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:40.014" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:40.014" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20231129 08:27:40.011" endtime="20231129 08:27:40.014"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:40.014" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20231129 08:27:40.014" endtime="20231129 08:27:40.014"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:40.015" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:40.015" endtime="20231129 08:27:40.015"/>
</kw>
<status status="PASS" starttime="20231129 08:27:40.011" endtime="20231129 08:27:40.015"/>
</kw>
<msg timestamp="20231129 08:27:40.015" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:40.010" endtime="20231129 08:27:40.015"/>
</kw>
<msg timestamp="20231129 08:27:40.015" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20231129 08:27:40.010" endtime="20231129 08:27:40.015"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231129 08:27:40.016" endtime="20231129 08:27:40.016"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/f1 --range bytes=11-8 /tmp/testfile9.result</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:40.019" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-1877614098/putobject/key=value/f1 --range bytes=11-8 /tmp/testfile9.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:40.474" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:40.475" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:27:32 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20231129 08:27:40.018" endtime="20231129 08:27:40.475"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:40.476" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:27:32 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Wed, 29 Nov 2023 08:27:40 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20231129 08:27:40.475" endtime="20231129 08:27:40.476"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:40.476" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:40.476" endtime="20231129 08:27:40.476"/>
</kw>
<status status="PASS" starttime="20231129 08:27:40.018" endtime="20231129 08:27:40.476"/>
</kw>
<msg timestamp="20231129 08:27:40.476" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:40.017" endtime="20231129 08:27:40.477"/>
</kw>
<msg timestamp="20231129 08:27:40.477" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:27:32 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20231129 08:27:40.017" endtime="20231129 08:27:40.477"/>
</kw>
<msg timestamp="20231129 08:27:40.477" level="INFO">${result} = {
    "AcceptRanges": "bytes",
    "LastModified": "Wed, 29 Nov 2023 08:27:32 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "Co...</msg>
<status status="PASS" starttime="20231129 08:27:40.016" endtime="20231129 08:27:40.477"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>ContentRange</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:27:40.477" endtime="20231129 08:27:40.477"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>AcceptRanges</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:27:40.478" endtime="20231129 08:27:40.478"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedData}</var>
<arg>cat /tmp/testfile</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:40.481" level="INFO">Running command 'cat /tmp/testfile 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:40.482" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:40.482" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20231129 08:27:40.479" endtime="20231129 08:27:40.482"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:40.483" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20231129 08:27:40.483" endtime="20231129 08:27:40.483"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:40.484" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:40.483" endtime="20231129 08:27:40.484"/>
</kw>
<status status="PASS" starttime="20231129 08:27:40.479" endtime="20231129 08:27:40.484"/>
</kw>
<msg timestamp="20231129 08:27:40.484" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:40.479" endtime="20231129 08:27:40.484"/>
</kw>
<msg timestamp="20231129 08:27:40.484" level="INFO">${expectedData} = Randomtext</msg>
<status status="PASS" starttime="20231129 08:27:40.478" endtime="20231129 08:27:40.484"/>
</kw>
<kw name="Execute" library="os">
<var>${actualData}</var>
<arg>cat /tmp/testfile8.result</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:40.487" level="INFO">Running command 'cat /tmp/testfile8.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:40.488" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:40.488" level="INFO">${output} = Randomtext</msg>
<status status="PASS" starttime="20231129 08:27:40.485" endtime="20231129 08:27:40.488"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:40.489" level="INFO">Randomtext</msg>
<status status="PASS" starttime="20231129 08:27:40.488" endtime="20231129 08:27:40.489"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:40.489" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:40.489" endtime="20231129 08:27:40.489"/>
</kw>
<status status="PASS" starttime="20231129 08:27:40.485" endtime="20231129 08:27:40.490"/>
</kw>
<msg timestamp="20231129 08:27:40.490" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:40.485" endtime="20231129 08:27:40.490"/>
</kw>
<msg timestamp="20231129 08:27:40.490" level="INFO">${actualData} = Randomtext</msg>
<status status="PASS" starttime="20231129 08:27:40.484" endtime="20231129 08:27:40.490"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${expectedData}</arg>
<arg>${actualData}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231129 08:27:40.490" endtime="20231129 08:27:40.490"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:27:39.554" endtime="20231129 08:27:40.491"/>
</test>
<test id="s1-s1-s14-t11" name="Zero byte file" line="153">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /s3v/${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:40.494" level="INFO">Running command 'ozone sh bucket info /s3v/erasure 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:43.635" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:43.636" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "s3v",
  "name" : "erasure",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 210786713,
  "usedNamespace" : 55,
  "creationTime" : "2023-11-29T...</msg>
<status status="PASS" starttime="20231129 08:27:40.493" endtime="20231129 08:27:43.636"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:43.637" level="INFO">{
  "metadata" : { },
  "volumeName" : "s3v",
  "name" : "erasure",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 210786713,
  "usedNamespace" : 55,
  "creationTime" : "2023-11-29T08:25:45.780Z",
  "modificationTime" : "2023-11-29T08:25:45.780Z",
  "sourcePathExist" : true,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "FILE_SYSTEM_OPTIMIZED",
  "owner" : "hadoop",
  "replicationConfig" : {
    "data" : 3,
    "parity" : 2,
    "ecChunkSize" : 1048576,
    "codec" : "RS",
    "replicationType" : "EC",
    "requiredNodes" : 5
  },
  "link" : false
}</msg>
<status status="PASS" starttime="20231129 08:27:43.636" endtime="20231129 08:27:43.637"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:43.637" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:43.637" endtime="20231129 08:27:43.637"/>
</kw>
<status status="PASS" starttime="20231129 08:27:40.492" endtime="20231129 08:27:43.637"/>
</kw>
<msg timestamp="20231129 08:27:43.638" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:40.492" endtime="20231129 08:27:43.638"/>
</kw>
<msg timestamp="20231129 08:27:43.638" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "s3v",
  "name" : "erasure",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 210786713,
  "usedNamespace" : 55,
  "creationTime" : "2023-11-29T...</msg>
<status status="PASS" starttime="20231129 08:27:40.492" endtime="20231129 08:27:43.638"/>
</kw>
<kw name="Execute" library="os">
<var>${linked}</var>
<arg>echo '${result}' | jq -j '.sourceVolume,"/",.sourceBucket'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:43.641" level="INFO">Running command 'echo '{
  "metadata" : { },
  "volumeName" : "s3v",
  "name" : "erasure",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 210786713,
  "usedNamespace" : 55,
  "creationTime" : "2023-11-29T08:25:45.780Z",
  "modificationTime" : "2023-11-29T08:25:45.780Z",
  "sourcePathExist" : true,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "FILE_SYSTEM_OPTIMIZED",
  "owner" : "hadoop",
  "replicationConfig" : {
    "data" : 3,
    "parity" : 2,
    "ecChunkSize" : 1048576,
    "codec" : "RS",
    "replicationType" : "EC",
    "requiredNodes" : 5
  },
  "link" : false
}' | jq -j '.sourceVolume,"/",.sourceBucket' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:43.666" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:43.666" level="INFO">${output} = null/null</msg>
<status status="PASS" starttime="20231129 08:27:43.639" endtime="20231129 08:27:43.666"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:43.667" level="INFO">null/null</msg>
<status status="PASS" starttime="20231129 08:27:43.667" endtime="20231129 08:27:43.667"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:43.668" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:43.667" endtime="20231129 08:27:43.668"/>
</kw>
<status status="PASS" starttime="20231129 08:27:43.639" endtime="20231129 08:27:43.668"/>
</kw>
<msg timestamp="20231129 08:27:43.668" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:43.638" endtime="20231129 08:27:43.668"/>
</kw>
<msg timestamp="20231129 08:27:43.668" level="INFO">${linked} = null/null</msg>
<status status="PASS" starttime="20231129 08:27:43.638" endtime="20231129 08:27:43.668"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${eval}</var>
<arg>"source" in """${linked}"""</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20231129 08:27:43.669" level="INFO">${eval} = False</msg>
<status status="PASS" starttime="20231129 08:27:43.668" endtime="20231129 08:27:43.669"/>
</kw>
<if>
<branch type="IF" condition="${eval} == ${True}">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${linked}</arg>
<status status="NOT RUN" starttime="20231129 08:27:43.669" endtime="20231129 08:27:43.669"/>
</kw>
<status status="NOT RUN" starttime="20231129 08:27:43.669" endtime="20231129 08:27:43.669"/>
</branch>
<status status="PASS" starttime="20231129 08:27:43.669" endtime="20231129 08:27:43.669"/>
</if>
<kw name="Evaluate" library="BuiltIn">
<var>${fsolayout}</var>
<arg>"OPTIMIZED" in """${result}"""</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20231129 08:27:43.670" level="INFO">${fsolayout} = True</msg>
<status status="PASS" starttime="20231129 08:27:43.669" endtime="20231129 08:27:43.670"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/zerobyte --range bytes=0-0 /tmp/testfile2.result</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:43.672" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-1877614098/putobject/key=value/zerobyte --range bytes=0-0 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:44.110" level="INFO">${rc} = 255</msg>
<msg timestamp="20231129 08:27:44.110" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20231129 08:27:43.671" endtime="20231129 08:27:44.110"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:44.111" level="INFO">
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20231129 08:27:44.110" endtime="20231129 08:27:44.111"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:44.111" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:44.111" endtime="20231129 08:27:44.112"/>
</kw>
<msg timestamp="20231129 08:27:44.112" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20231129 08:27:43.670" endtime="20231129 08:27:44.112"/>
</kw>
<msg timestamp="20231129 08:27:44.112" level="INFO">${result} = 
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20231129 08:27:43.670" endtime="20231129 08:27:44.112"/>
</kw>
<if>
<branch type="IF" condition="${fsolayout} == ${True}">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:27:44.113" endtime="20231129 08:27:44.113"/>
</kw>
<status status="PASS" starttime="20231129 08:27:44.112" endtime="20231129 08:27:44.113"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231129 08:27:44.113" endtime="20231129 08:27:44.113"/>
</kw>
<status status="NOT RUN" starttime="20231129 08:27:44.113" endtime="20231129 08:27:44.113"/>
</branch>
<status status="PASS" starttime="20231129 08:27:44.112" endtime="20231129 08:27:44.113"/>
</if>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/zerobyte --range bytes=0-1 /tmp/testfile2.result</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:44.116" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-1877614098/putobject/key=value/zerobyte --range bytes=0-1 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:44.557" level="INFO">${rc} = 255</msg>
<msg timestamp="20231129 08:27:44.557" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20231129 08:27:44.114" endtime="20231129 08:27:44.557"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:44.558" level="INFO">
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20231129 08:27:44.557" endtime="20231129 08:27:44.558"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:44.558" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:44.558" endtime="20231129 08:27:44.558"/>
</kw>
<msg timestamp="20231129 08:27:44.559" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20231129 08:27:44.114" endtime="20231129 08:27:44.559"/>
</kw>
<msg timestamp="20231129 08:27:44.559" level="INFO">${result} = 
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20231129 08:27:44.113" endtime="20231129 08:27:44.559"/>
</kw>
<if>
<branch type="IF" condition="${fsolayout} == ${True}">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:27:44.559" endtime="20231129 08:27:44.560"/>
</kw>
<status status="PASS" starttime="20231129 08:27:44.559" endtime="20231129 08:27:44.560"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231129 08:27:44.560" endtime="20231129 08:27:44.560"/>
</kw>
<status status="NOT RUN" starttime="20231129 08:27:44.560" endtime="20231129 08:27:44.560"/>
</branch>
<status status="PASS" starttime="20231129 08:27:44.559" endtime="20231129 08:27:44.560"/>
</if>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${result}</var>
<arg>get-object --bucket ${BUCKET} --key ${PREFIX}/putobject/key=value/zerobyte --range bytes=0-10000 /tmp/testfile2.result</arg>
<arg>255</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:44.563" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket erasure --key ozone-test-1877614098/putobject/key=value/zerobyte --range bytes=0-10000 /tmp/testfile2.result 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:45.019" level="INFO">${rc} = 255</msg>
<msg timestamp="20231129 08:27:45.019" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20231129 08:27:44.561" endtime="20231129 08:27:45.019"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:45.020" level="INFO">
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20231129 08:27:45.020" endtime="20231129 08:27:45.020"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:45.021" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:45.020" endtime="20231129 08:27:45.021"/>
</kw>
<msg timestamp="20231129 08:27:45.021" level="INFO">${output} = 
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20231129 08:27:44.561" endtime="20231129 08:27:45.021"/>
</kw>
<msg timestamp="20231129 08:27:45.021" level="INFO">${result} = 
An error occurred (NoSuchKey) when calling the GetObject operation: The specified key does not exist</msg>
<status status="PASS" starttime="20231129 08:27:44.560" endtime="20231129 08:27:45.021"/>
</kw>
<if>
<branch type="IF" condition="${fsolayout} == ${True}">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NoSuchKey</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:27:45.022" endtime="20231129 08:27:45.022"/>
</kw>
<status status="PASS" starttime="20231129 08:27:45.021" endtime="20231129 08:27:45.022"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>InvalidRange</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231129 08:27:45.022" endtime="20231129 08:27:45.022"/>
</kw>
<status status="NOT RUN" starttime="20231129 08:27:45.022" endtime="20231129 08:27:45.022"/>
</branch>
<status status="PASS" starttime="20231129 08:27:45.021" endtime="20231129 08:27:45.022"/>
</if>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:27:40.491" endtime="20231129 08:27:45.023"/>
</test>
<test id="s1-s1-s14-t12" name="Create file with user defined metadata" line="183">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:45.026" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile2'.</msg>
<msg timestamp="20231129 08:27:45.028" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:45.028" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:27:45.025" endtime="20231129 08:27:45.028"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:45.028" level="INFO"/>
<status status="PASS" starttime="20231129 08:27:45.028" endtime="20231129 08:27:45.028"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:45.029" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:45.029" endtime="20231129 08:27:45.029"/>
</kw>
<status status="PASS" starttime="20231129 08:27:45.024" endtime="20231129 08:27:45.029"/>
</kw>
<msg timestamp="20231129 08:27:45.029" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:45.024" endtime="20231129 08:27:45.029"/>
</kw>
<status status="PASS" starttime="20231129 08:27:45.024" endtime="20231129 08:27:45.029"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key1 --body /tmp/testfile2 --metadata="custom-key1=custom-value1,custom-key2=custom-value2"</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:45.033" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket erasure --key ozone-test-1877614098/putobject/custom-metadata/key1 --body /tmp/testfile2 --metadata="custom-key1=custom-value1,custom-key2=custom-value2" 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:45.551" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:45.551" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231129 08:27:45.031" endtime="20231129 08:27:45.552"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:45.553" level="INFO">{
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231129 08:27:45.552" endtime="20231129 08:27:45.553"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:45.553" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:45.553" endtime="20231129 08:27:45.553"/>
</kw>
<status status="PASS" starttime="20231129 08:27:45.031" endtime="20231129 08:27:45.554"/>
</kw>
<msg timestamp="20231129 08:27:45.554" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:45.031" endtime="20231129 08:27:45.554"/>
</kw>
<msg timestamp="20231129 08:27:45.554" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231129 08:27:45.030" endtime="20231129 08:27:45.554"/>
</kw>
<status status="PASS" starttime="20231129 08:27:45.030" endtime="20231129 08:27:45.554"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key1</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:45.558" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket erasure --key ozone-test-1877614098/putobject/custom-metadata/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:46.004" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:46.004" level="INFO">${output} = {
    "LastModified": "Wed, 29 Nov 2023 08:27:45 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20231129 08:27:45.557" endtime="20231129 08:27:46.004"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:46.005" level="INFO">{
    "LastModified": "Wed, 29 Nov 2023 08:27:45 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Wed, 29 Nov 2023 08:27:45 GMT",
    "Metadata": {
        "custom-key1": "custom-value1",
        "custom-key2": "custom-value2"
    }
}</msg>
<status status="PASS" starttime="20231129 08:27:46.005" endtime="20231129 08:27:46.005"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:46.006" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:46.006" endtime="20231129 08:27:46.006"/>
</kw>
<status status="PASS" starttime="20231129 08:27:45.556" endtime="20231129 08:27:46.006"/>
</kw>
<msg timestamp="20231129 08:27:46.006" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:45.556" endtime="20231129 08:27:46.006"/>
</kw>
<msg timestamp="20231129 08:27:46.006" level="INFO">${output} = {
    "LastModified": "Wed, 29 Nov 2023 08:27:45 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20231129 08:27:45.555" endtime="20231129 08:27:46.006"/>
</kw>
<msg timestamp="20231129 08:27:46.007" level="INFO">${result} = {
    "LastModified": "Wed, 29 Nov 2023 08:27:45 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20231129 08:27:45.555" endtime="20231129 08:27:46.007"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key1\": \"custom-value1\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:27:46.007" endtime="20231129 08:27:46.007"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key2\": \"custom-value2\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:27:46.007" endtime="20231129 08:27:46.007"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /s3v/${BUCKET}/${PREFIX}/putobject/custom-metadata/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:46.010" level="INFO">Running command 'ozone sh key info /s3v/erasure/ozone-test-1877614098/putobject/custom-metadata/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:49.429" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:49.429" level="INFO">${output} = {
  "volumeName" : "s3v",
  "bucketName" : "erasure",
  "name" : "ozone-test-1877614098/putobject/custom-metadata/key1",
  "dataSize" : 11,
  "creationTime" : "2023-11-29T08:27:45.439Z",
  "modificati...</msg>
<status status="PASS" starttime="20231129 08:27:46.009" endtime="20231129 08:27:49.429"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:49.430" level="INFO">{
  "volumeName" : "s3v",
  "bucketName" : "erasure",
  "name" : "ozone-test-1877614098/putobject/custom-metadata/key1",
  "dataSize" : 11,
  "creationTime" : "2023-11-29T08:27:45.439Z",
  "modificationTime" : "2023-11-29T08:27:45.488Z",
  "replicationConfig" : {
    "data" : 3,
    "parity" : 2,
    "ecChunkSize" : 1048576,
    "codec" : "RS",
    "replicationType" : "EC",
    "requiredNodes" : 5
  },
  "metadata" : {
    "ETag" : "09ad6a6e23191dd19110d0251c4c3186",
    "custom-key1" : "custom-value1",
    "custom-key2" : "custom-value2"
  },
  "ozoneKeyLocations" : [ {
    "containerID" : 5,
    "localID" : 111677748019200093,
    "length" : 11,
    "offset" : 0,
    "keyOffset" : 0
  } ],
  "file" : true
}</msg>
<status status="PASS" starttime="20231129 08:27:49.430" endtime="20231129 08:27:49.430"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:49.431" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:49.430" endtime="20231129 08:27:49.431"/>
</kw>
<status status="PASS" starttime="20231129 08:27:46.008" endtime="20231129 08:27:49.431"/>
</kw>
<msg timestamp="20231129 08:27:49.431" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:46.008" endtime="20231129 08:27:49.431"/>
</kw>
<msg timestamp="20231129 08:27:49.431" level="INFO">${result} = {
  "volumeName" : "s3v",
  "bucketName" : "erasure",
  "name" : "ozone-test-1877614098/putobject/custom-metadata/key1",
  "dataSize" : 11,
  "creationTime" : "2023-11-29T08:27:45.439Z",
  "modificati...</msg>
<status status="PASS" starttime="20231129 08:27:46.008" endtime="20231129 08:27:49.432"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key1\" : \"custom-value1\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:27:49.432" endtime="20231129 08:27:49.432"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key2\" : \"custom-value2\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:27:49.432" endtime="20231129 08:27:49.432"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:27:45.023" endtime="20231129 08:27:49.433"/>
</test>
<test id="s1-s1-s14-t13" name="Create file with user defined metadata with gdpr enabled value in request" line="195">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:49.436" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile2'.</msg>
<msg timestamp="20231129 08:27:49.437" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:49.438" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:27:49.435" endtime="20231129 08:27:49.438"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:49.438" level="INFO"/>
<status status="PASS" starttime="20231129 08:27:49.438" endtime="20231129 08:27:49.438"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:49.439" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:49.438" endtime="20231129 08:27:49.439"/>
</kw>
<status status="PASS" starttime="20231129 08:27:49.434" endtime="20231129 08:27:49.439"/>
</kw>
<msg timestamp="20231129 08:27:49.439" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:49.434" endtime="20231129 08:27:49.439"/>
</kw>
<status status="PASS" starttime="20231129 08:27:49.434" endtime="20231129 08:27:49.439"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key2 --body /tmp/testfile2 --metadata="gdprEnabled=true,custom-key2=custom-value2"</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:49.442" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket erasure --key ozone-test-1877614098/putobject/custom-metadata/key2 --body /tmp/testfile2 --metadata="gdprEnabled=true,custom-key2=custom-value2" 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:49.944" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:49.944" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231129 08:27:49.441" endtime="20231129 08:27:49.944"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:49.945" level="INFO">{
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231129 08:27:49.944" endtime="20231129 08:27:49.945"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:49.945" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:49.945" endtime="20231129 08:27:49.945"/>
</kw>
<status status="PASS" starttime="20231129 08:27:49.441" endtime="20231129 08:27:49.945"/>
</kw>
<msg timestamp="20231129 08:27:49.945" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:49.441" endtime="20231129 08:27:49.946"/>
</kw>
<msg timestamp="20231129 08:27:49.946" level="INFO">${output} = {
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\""
}</msg>
<status status="PASS" starttime="20231129 08:27:49.440" endtime="20231129 08:27:49.946"/>
</kw>
<status status="PASS" starttime="20231129 08:27:49.439" endtime="20231129 08:27:49.946"/>
</kw>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>head-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key2</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:49.949" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 head-object --bucket erasure --key ozone-test-1877614098/putobject/custom-metadata/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:50.396" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:50.396" level="INFO">${output} = {
    "LastModified": "Wed, 29 Nov 2023 08:27:49 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20231129 08:27:49.948" endtime="20231129 08:27:50.396"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:50.397" level="INFO">{
    "LastModified": "Wed, 29 Nov 2023 08:27:49 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-stream",
    "Expires": "Wed, 29 Nov 2023 08:27:50 GMT",
    "Metadata": {
        "custom-key2": "custom-value2"
    }
}</msg>
<status status="PASS" starttime="20231129 08:27:50.396" endtime="20231129 08:27:50.397"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:50.397" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:50.397" endtime="20231129 08:27:50.397"/>
</kw>
<status status="PASS" starttime="20231129 08:27:49.947" endtime="20231129 08:27:50.397"/>
</kw>
<msg timestamp="20231129 08:27:50.398" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:49.947" endtime="20231129 08:27:50.398"/>
</kw>
<msg timestamp="20231129 08:27:50.398" level="INFO">${output} = {
    "LastModified": "Wed, 29 Nov 2023 08:27:49 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20231129 08:27:49.947" endtime="20231129 08:27:50.398"/>
</kw>
<msg timestamp="20231129 08:27:50.398" level="INFO">${result} = {
    "LastModified": "Wed, 29 Nov 2023 08:27:49 GMT",
    "ContentLength": 11,
    "ETag": "\"09ad6a6e23191dd19110d0251c4c3186\"",
    "CacheControl": "no-cache",
    "ContentType": "binary/octet-str...</msg>
<status status="PASS" starttime="20231129 08:27:49.946" endtime="20231129 08:27:50.398"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"custom-key2\": \"custom-value2\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:27:50.398" endtime="20231129 08:27:50.398"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"gdprEnabled\": \"true\"</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:27:50.399" endtime="20231129 08:27:50.399"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:27:49.433" endtime="20231129 08:27:50.399"/>
</test>
<test id="s1-s1-s14-t14" name="Create file with user defined metadata size larger than 2 KB" line="203">
<kw name="Execute" library="os">
<arg>echo "Randomtext" &gt; /tmp/testfile2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:50.403" level="INFO">Running command 'echo "Randomtext" &gt; /tmp/testfile2'.</msg>
<msg timestamp="20231129 08:27:50.404" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:50.404" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:27:50.401" endtime="20231129 08:27:50.404"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:50.405" level="INFO"/>
<status status="PASS" starttime="20231129 08:27:50.404" endtime="20231129 08:27:50.405"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:50.405" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:50.405" endtime="20231129 08:27:50.405"/>
</kw>
<status status="PASS" starttime="20231129 08:27:50.401" endtime="20231129 08:27:50.406"/>
</kw>
<msg timestamp="20231129 08:27:50.406" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:50.401" endtime="20231129 08:27:50.406"/>
</kw>
<status status="PASS" starttime="20231129 08:27:50.400" endtime="20231129 08:27:50.406"/>
</kw>
<kw name="Execute" library="os">
<var>${custom_metadata_value}</var>
<arg>printf 'v%.0s' {1..3000}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:50.408" level="INFO">Running command 'printf 'v%.0s' {1..3000} 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:50.411" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:50.411" level="INFO">${output} = vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv...</msg>
<status status="PASS" starttime="20231129 08:27:50.407" endtime="20231129 08:27:50.411"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:50.411" level="INFO">vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv</msg>
<status status="PASS" starttime="20231129 08:27:50.411" endtime="20231129 08:27:50.412"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:50.412" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:50.412" endtime="20231129 08:27:50.412"/>
</kw>
<status status="PASS" starttime="20231129 08:27:50.406" endtime="20231129 08:27:50.412"/>
</kw>
<msg timestamp="20231129 08:27:50.412" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:50.406" endtime="20231129 08:27:50.412"/>
</kw>
<msg timestamp="20231129 08:27:50.413" level="INFO">${custom_metadata_value} = vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv...</msg>
<status status="PASS" starttime="20231129 08:27:50.406" endtime="20231129 08:27:50.413"/>
</kw>
<kw name="Execute AWSS3APICli and ignore error" library="commonawslib">
<var>${result}</var>
<arg>put-object --bucket ${BUCKET} --key ${PREFIX}/putobject/custom-metadata/key2 --body /tmp/testfile2 --metadata="custom-key1=${custom_metadata_value}"</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:50.415" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket erasure --key ozone-test-1877614098/putobject/custom-metadata/key2 --body /tmp/testfile2 --metadata="custom-key1=vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv" 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:50.863" level="INFO">${rc} = 255</msg>
<msg timestamp="20231129 08:27:50.863" level="INFO">${output} = 
An error occurred (MetadataTooLarge) when calling the PutObject operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20231129 08:27:50.414" endtime="20231129 08:27:50.863"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:50.864" level="INFO">
An error occurred (MetadataTooLarge) when calling the PutObject operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20231129 08:27:50.864" endtime="20231129 08:27:50.864"/>
</kw>
<msg timestamp="20231129 08:27:50.864" level="INFO">${output} = 
An error occurred (MetadataTooLarge) when calling the PutObject operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20231129 08:27:50.413" endtime="20231129 08:27:50.864"/>
</kw>
<msg timestamp="20231129 08:27:50.865" level="INFO">${result} = 
An error occurred (MetadataTooLarge) when calling the PutObject operation: Illegal user defined metadata. Combined size exceeds the maximum allowed metadata size of 2KB</msg>
<status status="PASS" starttime="20231129 08:27:50.413" endtime="20231129 08:27:50.865"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>custom-key1: ${custom_metadata_value}</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:27:50.865" endtime="20231129 08:27:50.865"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:27:50.400" endtime="20231129 08:27:50.865"/>
</test>
<test id="s1-s1-s14-t15" name="Create small file and expect ETag (MD5) in a reponse header" line="209">
<kw name="Execute" library="os">
<arg>head -c 1MB &lt;/dev/urandom &gt; /tmp/small_file</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:50.869" level="INFO">Running command 'head -c 1MB &lt;/dev/urandom &gt; /tmp/small_file'.</msg>
<msg timestamp="20231129 08:27:50.874" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:50.874" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:27:50.868" endtime="20231129 08:27:50.874"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:50.875" level="INFO"/>
<status status="PASS" starttime="20231129 08:27:50.874" endtime="20231129 08:27:50.875"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:50.875" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:50.875" endtime="20231129 08:27:50.875"/>
</kw>
<status status="PASS" starttime="20231129 08:27:50.867" endtime="20231129 08:27:50.875"/>
</kw>
<msg timestamp="20231129 08:27:50.876" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:50.867" endtime="20231129 08:27:50.876"/>
</kw>
<status status="PASS" starttime="20231129 08:27:50.866" endtime="20231129 08:27:50.876"/>
</kw>
<kw name="Execute" library="os">
<var>${file_md5_checksum}</var>
<arg>md5sum /tmp/small_file | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:50.878" level="INFO">Running command 'md5sum /tmp/small_file | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:50.881" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:50.882" level="INFO">${output} = e9cc07b675f963c691e9281355c45966</msg>
<status status="PASS" starttime="20231129 08:27:50.877" endtime="20231129 08:27:50.882"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:50.882" level="INFO">e9cc07b675f963c691e9281355c45966</msg>
<status status="PASS" starttime="20231129 08:27:50.882" endtime="20231129 08:27:50.882"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:50.883" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:50.882" endtime="20231129 08:27:50.883"/>
</kw>
<status status="PASS" starttime="20231129 08:27:50.876" endtime="20231129 08:27:50.883"/>
</kw>
<msg timestamp="20231129 08:27:50.883" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:50.876" endtime="20231129 08:27:50.883"/>
</kw>
<msg timestamp="20231129 08:27:50.883" level="INFO">${file_md5_checksum} = e9cc07b675f963c691e9281355c45966</msg>
<status status="PASS" starttime="20231129 08:27:50.876" endtime="20231129 08:27:50.883"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/small_file s3://${BUCKET}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:50.886" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp /tmp/small_file s3://erasure 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:51.419" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:51.419" level="INFO">${output} = 2023-11-29 08:27:51,226 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10
2023-11-29 08:27:51,227 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20231129 08:27:50.885" endtime="20231129 08:27:51.419"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:51.420" level="INFO">2023-11-29 08:27:51,226 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10
2023-11-29 08:27:51,227 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', '/tmp/small_file', 's3://erasure']
2023-11-29 08:27:51,227 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7f76f1c3a9d8&gt;
2023-11-29 08:27:51,227 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7f76f2a2e730&gt;
2023-11-29 08:27:51,227 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7f76f2a5dae8&gt;
2023-11-29 08:27:51,228 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2023-11-29 08:27:51,231 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7f76f1d67400&gt;
2023-11-29 08:27:51,231 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7f76f1c49048&gt;
2023-11-29 08:27:51,232 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f76f99496d8&gt;
2023-11-29 08:27:51,232 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7f76f1c49048&gt;
2023-11-29 08:27:51,233 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f76f99496d8&gt;
2023-11-29 08:27:51,233 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f76f99496d8&gt;
2023-11-29 08:27:51,234 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f76f2a312b0&gt;
2023-11-29 08:27:51,234 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f76f99496d8&gt;
2023-11-29 08:27:51,234 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f76f2a312b0&gt;
2023-11-29 08:27:51,234 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f76f99496d8&gt;
2023-11-29 08:27:51,234 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f76f99496d8&gt;
2023-11-29 08:27:51,234 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f76f99496d8&gt;
2023-11-29 08:27:51,234 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f76f2a312b0&gt;
2023-11-29 08:27:51,234 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f76f99496d8&gt;
2023-11-29 08:27:51,234 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f76f99496d8&gt;
2023-11-29 08:27:51,235 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f76f99496d8&gt;
2023-11-29 08:27:51,235 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f76f99496d8&gt;
2023-11-29 08:27:51,235 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f76f99496d8&gt;
2023-11-29 08:27:51,235 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f76f99496d8&gt;
2023-11-29 08:27:51,235 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f76f99496d8&gt;
2023-11-29 08:27:51,235 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f76f99496d8&gt;
2023-11-29 08:27:51,235 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f76f99496d8&gt;
2023-11-29 08:27:51,235 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f76f99496d8&gt;
2023-11-29 08:27:51,236 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f76f99496d8&gt;
2023-11-29 08:27:51,236 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f76f99496d8&gt;
2023-11-29 08:27:51,236 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f76f99496d8&gt;
2023-11-29 08:27:51,236 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f76f99496d8&gt;
2023-11-29 08:27:51,236 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f76f99496d8&gt;
2023-11-29 08:27:51,236 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f76f99496d8&gt;
2023-11-29 08:27:51,236 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f76f99496d8&gt;
2023-11-29 08:27:51,236 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f76f99496d8&gt;
2023-11-29 08:27:51,236 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f76f2a312b0&gt;
2023-11-29 08:27:51,236 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f76f99496d8&gt;
2023-11-29 08:27:51,237 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f76f99496d8&gt;
2023-11-29 08:27:51,237 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f76f99496d8&gt;
2023-11-29 08:27:51,237 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f76f2a312b0&gt;
2023-11-29 08:27:51,237 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f76f99496d8&gt;
2023-11-29 08:27:51,237 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f76f2a312b0&gt;
2023-11-29 08:27:51,237 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f76f99496d8&gt;
2023-11-29 08:27:51,237 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f76f99496d8&gt;
2023-11-29 08:27:51,237 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f76f99496d8&gt;
2023-11-29 08:27:51,238 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f76f99496d8&gt;
2023-11-29 08:27:51,238 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f76f99496d8&gt;
2023-11-29 08:27:51,238 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2023-11-29 08:27:51,238 - MainThread - botocore.credentials - INFO - Found credentials in environment variables.
2023-11-29 08:27:51,238 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/endpoints.json
2023-11-29 08:27:51,252 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/sdk-default-configuration.json
2023-11-29 08:27:51,252 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f76f36f2378&gt;
2023-11-29 08:27:51,253 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/s3/2006-03-01/service-2.json
2023-11-29 08:27:51,262 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f76f39cc2f0&gt;
2023-11-29 08:27:51,262 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f76f39cc0d0&gt;
2023-11-29 08:27:51,263 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-11-29 08:27:51,265 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2023-11-29 08:27:51,265 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/_retry.json
2023-11-29 08:27:51,266 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2023-11-29 08:27:51,267 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-11-29 08:27:51,267 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f76f36f2378&gt;
2023-11-29 08:27:51,268 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f76f39cc2f0&gt;
2023-11-29 08:27:51,268 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f76f39cc0d0&gt;
2023-11-29 08:27:51,268 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-11-29 08:27:51,270 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2023-11-29 08:27:51,270 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2023-11-29 08:27:51,271 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-11-29 08:27:51,271 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f76f36f2378&gt;
2023-11-29 08:27:51,273 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f76f39cc2f0&gt;
2023-11-29 08:27:51,273 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f76f39cc0d0&gt;
2023-11-29 08:27:51,273 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-11-29 08:27:51,275 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2023-11-29 08:27:51,275 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2023-11-29 08:27:51,276 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-11-29 08:27:51,276 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2023-11-29 08:27:51,277 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2023-11-29 08:27:51,278 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f76f14e9978&gt;}) about to wait for the following futures []
2023-11-29 08:27:51,278 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f76f14e9978&gt;}) done waiting for dependent futures
2023-11-29 08:27:51,278 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f76f14e9978&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f76f15a7828&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7f76f14de978&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7f76f14de9e8&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7f76f14deb70&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f76f14e9978&gt;}
2023-11-29 08:27:51,279 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task PutObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'small_file', 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f76f14deb70&gt; for transfer request: 0.
2023-11-29 08:27:51,279 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2023-11-29 08:27:51,279 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - PutObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'small_file', 'extra_args': {}}) about to wait for the following futures []
2023-11-29 08:27:51,279 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-11-29 08:27:51,279 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - PutObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'small_file', 'extra_args': {}}) done waiting for dependent futures
2023-11-29 08:27:51,280 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task PutObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'small_file', 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f76f15a7828&gt;, 'fileobj': &lt;s3transfer.utils.ReadFileChunk object at 0x7f76f14e9dd8&gt;, 'bucket': 'erasure', 'key': 'small_file', 'extra_args': {}}
2023-11-29 08:27:51,280 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function validate_ascii_metadata at 0x7f76f370f6a8&gt;
2023-11-29 08:27:51,280 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function sse_md5 at 0x7f76f370bae8&gt;
2023-11-29 08:27:51,280 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function convert_body_to_file_like_object at 0x7f76f370ff28&gt;
2023-11-29 08:27:51,280 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function validate_bucket_name at 0x7f76f370ba60&gt;
2023-11-29 08:27:51,281 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7f76f15a7d68&gt;&gt;
2023-11-29 08:27:51,281 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7f76f1577160&gt;&gt;
2023-11-29 08:27:51,281 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function generate_idempotent_uuid at 0x7f76f370b8c8&gt;
2023-11-29 08:27:51,281 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function conditionally_calculate_md5 at 0x7f76f40b20d0&gt;
2023-11-29 08:27:51,283 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_expect_header at 0x7f76f370bd90&gt;
2023-11-29 08:27:51,283 - ThreadPoolExecutor-0_0 - botocore.handlers - DEBUG - Adding expect 100 continue header to request.
2023-11-29 08:27:51,283 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7f76f15a7d68&gt;&gt;
2023-11-29 08:27:51,283 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_recursion_detection_header at 0x7f76f370b598&gt;
2023-11-29 08:27:51,283 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7f76f37110d0&gt;
2023-11-29 08:27:51,284 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=PutObject) with params: {'url_path': '/erasure/small_file', 'query_string': {}, 'method': 'PUT', 'headers': {'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10', 'Content-MD5': '6cwHtnX5Y8aR6SgTVcRZZg==', 'Expect': '100-continue'}, 'body': &lt;s3transfer.utils.ReadFileChunk object at 0x7f76f14e9dd8&gt;, 'url': 'http://s3g:9878/erasure/small_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f76f15a7a20&gt;, 'has_streaming_input': True, 'auth_type': None, 'signing': {'bucket': 'erasure'}}}
2023-11-29 08:27:51,284 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function signal_not_transferring at 0x7f76f5c34158&gt;
2023-11-29 08:27:51,284 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f76f15a79e8&gt;&gt;
2023-11-29 08:27:51,284 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.PutObject: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7f76f15771d0&gt;&gt;
2023-11-29 08:27:51,284 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.PutObject: calling handler &lt;function set_operation_specific_signer at 0x7f76f370b7b8&gt;
2023-11-29 08:27:51,284 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.PutObject: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7f76f15771d0&gt;&gt;
2023-11-29 08:27:51,284 - ThreadPoolExecutor-0_0 - botocore.utils - DEBUG - Using S3 path style addressing.
2023-11-29 08:27:51,285 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2023-11-29 08:27:51,285 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
PUT
/erasure/small_file

content-md5:6cwHtnX5Y8aR6SgTVcRZZg==
host:s3g:9878
x-amz-content-sha256:8298e394cce2fd2e387d4ab8e9721f18e1e4d7700ef0bbc9e3987ca07a8339ec
x-amz-date:20231129T082751Z

content-md5;host;x-amz-content-sha256;x-amz-date
8298e394cce2fd2e387d4ab8e9721f18e1e4d7700ef0bbc9e3987ca07a8339ec
2023-11-29 08:27:51,286 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20231129T082751Z
20231129/us-west-1/s3/aws4_request
b4ecd48e984ea91c36a721a7bea003fca2fa03c184599f2da18c35fb7a7d4fd1
2023-11-29 08:27:51,286 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
9d4bca634f27ccd7c44e9da416cf2cfd7bb624000f6d09f1729dc8a9d150fdb9
2023-11-29 08:27:51,286 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function signal_transferring at 0x7f76f5c341e0&gt;
2023-11-29 08:27:51,286 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function add_retry_headers at 0x7f76f3711730&gt;
2023-11-29 08:27:51,286 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=PUT, url=http://s3g:9878/erasure/small_file, headers={'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10', 'Content-MD5': b'6cwHtnX5Y8aR6SgTVcRZZg==', 'Expect': b'100-continue', 'X-Amz-Date': b'20231129T082751Z', 'X-Amz-Content-SHA256': b'8298e394cce2fd2e387d4ab8e9721f18e1e4d7700ef0bbc9e3987ca07a8339ec', 'Authorization': b'AWS4-HMAC-SHA256 Credential=dlfknslnfslf/20231129/us-west-1/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date, Signature=9d4bca634f27ccd7c44e9da416cf2cfd7bb624000f6d09f1729dc8a9d150fdb9', 'amz-sdk-invocation-id': b'07be1bc0-0ce9-42ef-a55b-d448cdb16e6d', 'amz-sdk-request': b'attempt=1', 'Content-Length': '1000000'}&gt;
2023-11-29 08:27:51,287 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2023-11-29 08:27:51,288 - ThreadPoolExecutor-0_0 - botocore.awsrequest - DEBUG - Waiting for 100 Continue response.
2023-11-29 08:27:51,289 - ThreadPoolExecutor-0_0 - botocore.awsrequest - DEBUG - 100 Continue response seen, now sending request body.
Completed 256.0 KiB/976.6 KiB (8.1 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/976.6 KiB (15.8 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/976.6 KiB (23.2 MiB/s) with 1 file(s) remaining
2023-11-29 08:27:51,375 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "PUT /erasure/small_file HTTP/1.1" 200 0
2023-11-29 08:27:51,376 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Wed, 29 Nov 2023 08:27:51 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Wed, 29 Nov 2023 08:27:51 GMT', 'Pragma': 'no-cache', 'Content-Type': 'text/plain;charset=utf-8', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': '"e9cc07b675f963c691e9281355c45966"', 'Server': 'Ozone', 'x-amz-id-2': 'eievSi8eWy', 'x-amz-request-id': '44e05c32-13c1-47c5-bb10-2d58f8a67d86', 'Content-Length': '0'}
2023-11-29 08:27:51,376 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
b''
2023-11-29 08:27:51,377 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f76f15a7da0&gt;
2023-11-29 08:27:51,377 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2023-11-29 08:27:51,377 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7f76f15a7d68&gt;&gt;
2023-11-29 08:27:51,377 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.PutObject: calling handler &lt;function enhance_error_msg at 0x7f76f1c3a598&gt;
Completed 976.6 KiB/976.6 KiB (9.7 MiB/s) with 1 file(s) remaining 
2023-11-29 08:27:51,378 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
upload: ../../tmp/small_file to s3://erasure/small_file            
2023-11-29 08:27:51,378 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20231129 08:27:51.419" endtime="20231129 08:27:51.420"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:51.421" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:51.420" endtime="20231129 08:27:51.421"/>
</kw>
<status status="PASS" starttime="20231129 08:27:50.885" endtime="20231129 08:27:51.421"/>
</kw>
<msg timestamp="20231129 08:27:51.421" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:50.884" endtime="20231129 08:27:51.421"/>
</kw>
<msg timestamp="20231129 08:27:51.422" level="INFO">${output} = 2023-11-29 08:27:51,226 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10
2023-11-29 08:27:51,227 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20231129 08:27:50.884" endtime="20231129 08:27:51.422"/>
</kw>
<msg timestamp="20231129 08:27:51.422" level="INFO">${result} = 2023-11-29 08:27:51,226 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10
2023-11-29 08:27:51,227 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20231129 08:27:50.883" endtime="20231129 08:27:51.422"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>(?i)Response header.*ETag':\ '"${file_md5_checksum}"'</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:27:51.422" endtime="20231129 08:27:51.423"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:27:50.866" endtime="20231129 08:27:51.423"/>
</test>
<test id="s1-s1-s14-t16" name="Download small file end expect ETag (MD5) in a response header" line="216">
<kw name="Execute" library="os">
<var>${file_md5_checksum}</var>
<arg>md5sum /tmp/small_file | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:51.427" level="INFO">Running command 'md5sum /tmp/small_file | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:51.431" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:51.431" level="INFO">${output} = e9cc07b675f963c691e9281355c45966</msg>
<status status="PASS" starttime="20231129 08:27:51.425" endtime="20231129 08:27:51.431"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:51.431" level="INFO">e9cc07b675f963c691e9281355c45966</msg>
<status status="PASS" starttime="20231129 08:27:51.431" endtime="20231129 08:27:51.432"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:51.432" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:51.432" endtime="20231129 08:27:51.432"/>
</kw>
<status status="PASS" starttime="20231129 08:27:51.425" endtime="20231129 08:27:51.432"/>
</kw>
<msg timestamp="20231129 08:27:51.432" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:51.425" endtime="20231129 08:27:51.432"/>
</kw>
<msg timestamp="20231129 08:27:51.433" level="INFO">${file_md5_checksum} = e9cc07b675f963c691e9281355c45966</msg>
<status status="PASS" starttime="20231129 08:27:51.424" endtime="20231129 08:27:51.433"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<var>${result}</var>
<arg>cp s3://${BUCKET}/small_file /tmp/small_file_downloaded</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:51.435" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp s3://erasure/small_file /tmp/small_file_downloaded 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:51.909" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:51.909" level="INFO">${output} = 2023-11-29 08:27:51,777 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10
2023-11-29 08:27:51,777 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20231129 08:27:51.434" endtime="20231129 08:27:51.909"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:51.910" level="INFO">2023-11-29 08:27:51,777 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10
2023-11-29 08:27:51,777 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', 's3://erasure/small_file', '/tmp/small_file_downloaded']
2023-11-29 08:27:51,777 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7f3a055799d8&gt;
2023-11-29 08:27:51,777 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7f3a0636d730&gt;
2023-11-29 08:27:51,778 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7f3a0639cae8&gt;
2023-11-29 08:27:51,778 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2023-11-29 08:27:51,781 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7f3a056a5400&gt;
2023-11-29 08:27:51,781 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7f3a05588048&gt;
2023-11-29 08:27:51,782 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3a0d2886d8&gt;
2023-11-29 08:27:51,782 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7f3a05588048&gt;
2023-11-29 08:27:51,784 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3a0d2886d8&gt;
2023-11-29 08:27:51,784 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3a0d2886d8&gt;
2023-11-29 08:27:51,784 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f3a063702b0&gt;
2023-11-29 08:27:51,784 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3a0d2886d8&gt;
2023-11-29 08:27:51,784 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f3a063702b0&gt;
2023-11-29 08:27:51,784 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3a0d2886d8&gt;
2023-11-29 08:27:51,784 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3a0d2886d8&gt;
2023-11-29 08:27:51,785 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3a0d2886d8&gt;
2023-11-29 08:27:51,785 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f3a063702b0&gt;
2023-11-29 08:27:51,785 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3a0d2886d8&gt;
2023-11-29 08:27:51,785 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3a0d2886d8&gt;
2023-11-29 08:27:51,785 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3a0d2886d8&gt;
2023-11-29 08:27:51,785 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3a0d2886d8&gt;
2023-11-29 08:27:51,785 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3a0d2886d8&gt;
2023-11-29 08:27:51,785 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3a0d2886d8&gt;
2023-11-29 08:27:51,785 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3a0d2886d8&gt;
2023-11-29 08:27:51,786 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3a0d2886d8&gt;
2023-11-29 08:27:51,786 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3a0d2886d8&gt;
2023-11-29 08:27:51,786 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3a0d2886d8&gt;
2023-11-29 08:27:51,786 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3a0d2886d8&gt;
2023-11-29 08:27:51,786 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3a0d2886d8&gt;
2023-11-29 08:27:51,786 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3a0d2886d8&gt;
2023-11-29 08:27:51,786 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3a0d2886d8&gt;
2023-11-29 08:27:51,787 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3a0d2886d8&gt;
2023-11-29 08:27:51,787 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3a0d2886d8&gt;
2023-11-29 08:27:51,787 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3a0d2886d8&gt;
2023-11-29 08:27:51,787 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3a0d2886d8&gt;
2023-11-29 08:27:51,787 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f3a063702b0&gt;
2023-11-29 08:27:51,787 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3a0d2886d8&gt;
2023-11-29 08:27:51,787 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3a0d2886d8&gt;
2023-11-29 08:27:51,787 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3a0d2886d8&gt;
2023-11-29 08:27:51,787 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f3a063702b0&gt;
2023-11-29 08:27:51,788 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3a0d2886d8&gt;
2023-11-29 08:27:51,788 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f3a063702b0&gt;
2023-11-29 08:27:51,788 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3a0d2886d8&gt;
2023-11-29 08:27:51,788 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3a0d2886d8&gt;
2023-11-29 08:27:51,788 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3a0d2886d8&gt;
2023-11-29 08:27:51,788 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3a0d2886d8&gt;
2023-11-29 08:27:51,788 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3a0d2886d8&gt;
2023-11-29 08:27:51,788 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2023-11-29 08:27:51,789 - MainThread - botocore.credentials - INFO - Found credentials in environment variables.
2023-11-29 08:27:51,789 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/endpoints.json
2023-11-29 08:27:51,802 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/sdk-default-configuration.json
2023-11-29 08:27:51,802 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f3a07031378&gt;
2023-11-29 08:27:51,803 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/s3/2006-03-01/service-2.json
2023-11-29 08:27:51,812 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f3a0730b2f0&gt;
2023-11-29 08:27:51,812 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f3a0730b0d0&gt;
2023-11-29 08:27:51,813 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-11-29 08:27:51,815 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2023-11-29 08:27:51,815 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/_retry.json
2023-11-29 08:27:51,816 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2023-11-29 08:27:51,816 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-11-29 08:27:51,817 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f3a07031378&gt;
2023-11-29 08:27:51,818 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f3a0730b2f0&gt;
2023-11-29 08:27:51,818 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f3a0730b0d0&gt;
2023-11-29 08:27:51,818 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-11-29 08:27:51,820 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2023-11-29 08:27:51,820 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2023-11-29 08:27:51,821 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-11-29 08:27:51,821 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f3a07031378&gt;
2023-11-29 08:27:51,823 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f3a0730b2f0&gt;
2023-11-29 08:27:51,823 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f3a0730b0d0&gt;
2023-11-29 08:27:51,823 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-11-29 08:27:51,825 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2023-11-29 08:27:51,825 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2023-11-29 08:27:51,826 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-11-29 08:27:51,827 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2023-11-29 08:27:51,827 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function sse_md5 at 0x7f3a0704aae8&gt;
2023-11-29 08:27:51,827 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function validate_bucket_name at 0x7f3a0704aa60&gt;
2023-11-29 08:27:51,827 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7f3a04e1e320&gt;&gt;
2023-11-29 08:27:51,827 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7f3a04e1e6d8&gt;&gt;
2023-11-29 08:27:51,827 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function generate_idempotent_uuid at 0x7f3a0704a8c8&gt;
2023-11-29 08:27:51,828 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function add_expect_header at 0x7f3a0704ad90&gt;
2023-11-29 08:27:51,828 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7f3a04e1e320&gt;&gt;
2023-11-29 08:27:51,828 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function add_recursion_detection_header at 0x7f3a0704a598&gt;
2023-11-29 08:27:51,828 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7f3a070500d0&gt;
2023-11-29 08:27:51,828 - MainThread - botocore.endpoint - DEBUG - Making request for OperationModel(name=HeadObject) with params: {'url_path': '/erasure/small_file', 'query_string': {}, 'method': 'HEAD', 'headers': {'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10'}, 'body': b'', 'url': 'http://s3g:9878/erasure/small_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f3a04ecdf98&gt;, 'has_streaming_input': False, 'auth_type': None, 'signing': {'bucket': 'erasure'}}}
2023-11-29 08:27:51,828 - MainThread - botocore.hooks - DEBUG - Event request-created.s3.HeadObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f3a04ecdf60&gt;&gt;
2023-11-29 08:27:51,828 - MainThread - botocore.hooks - DEBUG - Event choose-signer.s3.HeadObject: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7f3a04e1e748&gt;&gt;
2023-11-29 08:27:51,828 - MainThread - botocore.hooks - DEBUG - Event choose-signer.s3.HeadObject: calling handler &lt;function set_operation_specific_signer at 0x7f3a0704a7b8&gt;
2023-11-29 08:27:51,829 - MainThread - botocore.hooks - DEBUG - Event before-sign.s3.HeadObject: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7f3a04e1e748&gt;&gt;
2023-11-29 08:27:51,829 - MainThread - botocore.utils - DEBUG - Using S3 path style addressing.
2023-11-29 08:27:51,829 - MainThread - botocore.auth - DEBUG - Calculating signature using v4 auth.
2023-11-29 08:27:51,829 - MainThread - botocore.auth - DEBUG - CanonicalRequest:
HEAD
/erasure/small_file

host:s3g:9878
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20231129T082751Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2023-11-29 08:27:51,829 - MainThread - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20231129T082751Z
20231129/us-west-1/s3/aws4_request
b19a60bc9aa1e27990189456245ebc156dc0db91842074bb847e18bf32b6e562
2023-11-29 08:27:51,829 - MainThread - botocore.auth - DEBUG - Signature:
8c50dc1d713d14ff9262daeb098aac24ed3827eb6c232cabace7a806adae9602
2023-11-29 08:27:51,829 - MainThread - botocore.hooks - DEBUG - Event request-created.s3.HeadObject: calling handler &lt;function add_retry_headers at 0x7f3a07050730&gt;
2023-11-29 08:27:51,829 - MainThread - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=HEAD, url=http://s3g:9878/erasure/small_file, headers={'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10', 'X-Amz-Date': b'20231129T082751Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=dlfknslnfslf/20231129/us-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=8c50dc1d713d14ff9262daeb098aac24ed3827eb6c232cabace7a806adae9602', 'amz-sdk-invocation-id': b'42eeffa5-bb1d-42e7-90e8-829c2f3d24da', 'amz-sdk-request': b'attempt=1'}&gt;
2023-11-29 08:27:51,830 - MainThread - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2023-11-29 08:27:51,838 - MainThread - urllib3.connectionpool - DEBUG - http://s3g:9878 "HEAD /erasure/small_file HTTP/1.1" 200 0
2023-11-29 08:27:51,838 - MainThread - botocore.parsers - DEBUG - Response headers: {'Date': 'Wed, 29 Nov 2023 08:27:51 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Wed, 29 Nov 2023 08:27:51 GMT', 'Pragma': 'no-cache', 'Content-Type': 'binary/octet-stream', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': '"e9cc07b675f963c691e9281355c45966"', 'Last-Modified': 'Wed, 29 Nov 2023 08:27:51 GMT', 'Server': 'Ozone', 'x-amz-id-2': 'XNRL1lbwNS', 'x-amz-request-id': '9c03f0a1-c682-4aa0-b01c-016000d40baa', 'Content-Length': '1000000'}
2023-11-29 08:27:51,838 - MainThread - botocore.parsers - DEBUG - Response body:
b''
2023-11-29 08:27:51,839 - MainThread - botocore.hooks - DEBUG - Event needs-retry.s3.HeadObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f3a04e1e358&gt;
2023-11-29 08:27:51,839 - MainThread - botocore.retryhandler - DEBUG - No retry needed.
2023-11-29 08:27:51,839 - MainThread - botocore.hooks - DEBUG - Event needs-retry.s3.HeadObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7f3a04e1e320&gt;&gt;
2023-11-29 08:27:51,839 - MainThread - botocore.hooks - DEBUG - Event after-call.s3.HeadObject: calling handler &lt;function enhance_error_msg at 0x7f3a05579598&gt;
2023-11-29 08:27:51,840 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2023-11-29 08:27:51,841 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f3a04e45898&gt;}) about to wait for the following futures []
2023-11-29 08:27:51,841 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f3a04e45898&gt;}) done waiting for dependent futures
2023-11-29 08:27:51,841 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f3a04e45898&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f3a04ee6828&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7f3a04e1e978&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7f3a04e1e9e8&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7f3a04e1eb70&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f3a04e45898&gt;, 'io_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7f3a04e1ef60&gt;}
2023-11-29 08:27:51,842 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task ImmediatelyWriteIOGetObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'small_file', 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f3a04e1eb70&gt; for transfer request: 0.
2023-11-29 08:27:51,842 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2023-11-29 08:27:51,842 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - ImmediatelyWriteIOGetObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'small_file', 'extra_args': {}}) about to wait for the following futures []
2023-11-29 08:27:51,842 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-11-29 08:27:51,842 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - ImmediatelyWriteIOGetObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'small_file', 'extra_args': {}}) done waiting for dependent futures
2023-11-29 08:27:51,843 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task ImmediatelyWriteIOGetObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'small_file', 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f3a04ee6828&gt;, 'bucket': 'erasure', 'key': 'small_file', 'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f3a04e45c50&gt;, 'extra_args': {}, 'callbacks': [functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.ProvideSizeSubscriber object at 0x7f3a04e45ba8&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f3a04e45898&gt;), functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.DirectoryCreatorSubscriber object at 0x7f3a04e45a90&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f3a04e45898&gt;), functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.ProvideLastModifiedTimeSubscriber object at 0x7f3a04e45ac8&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f3a04e45898&gt;), functools.partial(&lt;bound method BaseResultSubscriber.on_progress of &lt;awscli.customizations.s3.results.DownloadResultSubscriber object at 0x7f3a04e45f98&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f3a04e45898&gt;)], 'max_attempts': 5, 'download_output_manager': &lt;s3transfer.download.DownloadFilenameOutputManager object at 0x7f3a04e459e8&gt;, 'io_chunksize': 262144, 'bandwidth_limiter': None}
2023-11-29 08:27:51,843 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function sse_md5 at 0x7f3a0704aae8&gt;
2023-11-29 08:27:51,843 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function validate_bucket_name at 0x7f3a0704aa60&gt;
2023-11-29 08:27:51,843 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7f3a04ee6d68&gt;&gt;
2023-11-29 08:27:51,843 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7f3a04eb6160&gt;&gt;
2023-11-29 08:27:51,843 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function generate_idempotent_uuid at 0x7f3a0704a8c8&gt;
2023-11-29 08:27:51,844 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_expect_header at 0x7f3a0704ad90&gt;
2023-11-29 08:27:51,844 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7f3a04ee6d68&gt;&gt;
2023-11-29 08:27:51,844 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_recursion_detection_header at 0x7f3a0704a598&gt;
2023-11-29 08:27:51,844 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7f3a070500d0&gt;
2023-11-29 08:27:51,844 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=GetObject) with params: {'url_path': '/erasure/small_file', 'query_string': {}, 'method': 'GET', 'headers': {'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10'}, 'body': b'', 'url': 'http://s3g:9878/erasure/small_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f3a04ee6a20&gt;, 'has_streaming_input': False, 'auth_type': None, 'signing': {'bucket': 'erasure'}}}
2023-11-29 08:27:51,844 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function signal_not_transferring at 0x7f3a09573158&gt;
2023-11-29 08:27:51,844 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f3a04ee69e8&gt;&gt;
2023-11-29 08:27:51,844 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.GetObject: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7f3a04eb61d0&gt;&gt;
2023-11-29 08:27:51,845 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.GetObject: calling handler &lt;function set_operation_specific_signer at 0x7f3a0704a7b8&gt;
2023-11-29 08:27:51,845 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.GetObject: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7f3a04eb61d0&gt;&gt;
2023-11-29 08:27:51,845 - ThreadPoolExecutor-0_0 - botocore.utils - DEBUG - Using S3 path style addressing.
2023-11-29 08:27:51,845 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2023-11-29 08:27:51,845 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
GET
/erasure/small_file

host:s3g:9878
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20231129T082751Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2023-11-29 08:27:51,845 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20231129T082751Z
20231129/us-west-1/s3/aws4_request
3e31d3bf530d66fb5e1e4c8b63b56b13cd242295e2515938b2f5a4cb148ce5ab
2023-11-29 08:27:51,845 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
53c7a6a10049eb268bc5ac6f2c72ab2f067aa63e423d4905904f8d71e098d5a6
2023-11-29 08:27:51,845 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function signal_transferring at 0x7f3a095731e0&gt;
2023-11-29 08:27:51,845 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function add_retry_headers at 0x7f3a07050730&gt;
2023-11-29 08:27:51,845 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=True, method=GET, url=http://s3g:9878/erasure/small_file, headers={'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10', 'X-Amz-Date': b'20231129T082751Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=dlfknslnfslf/20231129/us-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=53c7a6a10049eb268bc5ac6f2c72ab2f067aa63e423d4905904f8d71e098d5a6', 'amz-sdk-invocation-id': b'7db0d1b9-5598-498a-8fc8-03b2688a0499', 'amz-sdk-request': b'attempt=1'}&gt;
2023-11-29 08:27:51,846 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2023-11-29 08:27:51,863 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "GET /erasure/small_file HTTP/1.1" 200 1000000
2023-11-29 08:27:51,864 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Wed, 29 Nov 2023 08:27:51 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Wed, 29 Nov 2023 08:27:51 GMT', 'Pragma': 'no-cache', 'Content-Type': 'application/octet-stream', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': '"e9cc07b675f963c691e9281355c45966"', 'Accept-Ranges': 'bytes', 'Last-Modified': 'Wed, 29 Nov 2023 08:27:51 GMT', 'Server': 'Ozone', 'x-amz-id-2': '35lnyD1uFzi4zF', 'x-amz-request-id': '786f8159-c872-46fd-b631-76ba59646a1e', 'Content-Length': '1000000'}
2023-11-29 08:27:51,864 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
&lt;botocore.response.StreamingBody object at 0x7f3a0185eeb8&gt;
2023-11-29 08:27:51,865 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f3a04ee6da0&gt;
2023-11-29 08:27:51,865 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2023-11-29 08:27:51,865 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7f3a04ee6d68&gt;&gt;
2023-11-29 08:27:51,865 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.GetObject: calling handler &lt;function enhance_error_msg at 0x7f3a05579598&gt;
2023-11-29 08:27:51,866 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 0}) about to wait for the following futures []
2023-11-29 08:27:51,866 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 0}) done waiting for dependent futures
Completed 256.0 KiB/976.6 KiB (10.5 MiB/s) with 1 file(s) remaining
2023-11-29 08:27:51,866 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 0}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f3a04e45c50&gt;, 'offset': 0}
2023-11-29 08:27:51,867 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 262144}) about to wait for the following futures []
2023-11-29 08:27:51,867 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 262144}) done waiting for dependent futures
2023-11-29 08:27:51,867 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 262144}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f3a04e45c50&gt;, 'offset': 262144}
Completed 512.0 KiB/976.6 KiB (19.7 MiB/s) with 1 file(s) remaining
2023-11-29 08:27:51,868 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 524288}) about to wait for the following futures []
2023-11-29 08:27:51,868 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 524288}) done waiting for dependent futures
Completed 768.0 KiB/976.6 KiB (28.9 MiB/s) with 1 file(s) remaining
2023-11-29 08:27:51,868 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 524288}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f3a04e45c50&gt;, 'offset': 524288}
2023-11-29 08:27:51,868 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 786432}) about to wait for the following futures []
Completed 976.6 KiB/976.6 KiB (36.0 MiB/s) with 1 file(s) remaining
2023-11-29 08:27:51,868 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 786432}) done waiting for dependent futures
2023-11-29 08:27:51,868 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 786432}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f3a04e45c50&gt;, 'offset': 786432}
2023-11-29 08:27:51,869 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/small_file_downloaded'}) about to wait for the following futures []
2023-11-29 08:27:51,869 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/small_file_downloaded'}) done waiting for dependent futures
2023-11-29 08:27:51,869 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/small_file_downloaded'}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f3a04e45c50&gt;, 'final_filename': '/tmp/small_file_downloaded', 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7f3a04e1e9e8&gt;}
2023-11-29 08:27:51,869 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
download: s3://erasure/small_file to ../../tmp/small_file_downloaded
2023-11-29 08:27:51,870 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20231129 08:27:51.910" endtime="20231129 08:27:51.911"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:51.911" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:51.911" endtime="20231129 08:27:51.911"/>
</kw>
<status status="PASS" starttime="20231129 08:27:51.434" endtime="20231129 08:27:51.911"/>
</kw>
<msg timestamp="20231129 08:27:51.912" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:51.434" endtime="20231129 08:27:51.912"/>
</kw>
<msg timestamp="20231129 08:27:51.912" level="INFO">${output} = 2023-11-29 08:27:51,777 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10
2023-11-29 08:27:51,777 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20231129 08:27:51.433" endtime="20231129 08:27:51.912"/>
</kw>
<msg timestamp="20231129 08:27:51.913" level="INFO">${result} = 2023-11-29 08:27:51,777 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10
2023-11-29 08:27:51,777 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20231129 08:27:51.433" endtime="20231129 08:27:51.913"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>(?is)HEAD /${BUCKET}/small_file.*?Response headers.*?ETag': '"${file_md5_checksum}"'</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:27:51.913" endtime="20231129 08:27:51.914"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>(?is)GET /${BUCKET}/small_file.*?Response headers.*?ETag':\ '"${file_md5_checksum}"'</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:27:51.914" endtime="20231129 08:27:51.915"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>rm s3://${BUCKET}/small_file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:51.918" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 rm s3://erasure/small_file 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:52.354" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:52.354" level="INFO">${output} = delete: s3://erasure/small_file</msg>
<status status="PASS" starttime="20231129 08:27:51.916" endtime="20231129 08:27:52.354"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:52.355" level="INFO">delete: s3://erasure/small_file</msg>
<status status="PASS" starttime="20231129 08:27:52.354" endtime="20231129 08:27:52.355"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:52.356" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:52.355" endtime="20231129 08:27:52.356"/>
</kw>
<status status="PASS" starttime="20231129 08:27:51.916" endtime="20231129 08:27:52.356"/>
</kw>
<msg timestamp="20231129 08:27:52.356" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:51.916" endtime="20231129 08:27:52.356"/>
</kw>
<msg timestamp="20231129 08:27:52.356" level="INFO">${output} = delete: s3://erasure/small_file</msg>
<status status="PASS" starttime="20231129 08:27:51.915" endtime="20231129 08:27:52.356"/>
</kw>
<status status="PASS" starttime="20231129 08:27:51.915" endtime="20231129 08:27:52.356"/>
</kw>
<kw name="Execute" library="os">
<arg>rm /tmp/small_file_downloaded</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:52.359" level="INFO">Running command 'rm /tmp/small_file_downloaded 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:52.361" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:52.361" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:27:52.358" endtime="20231129 08:27:52.361"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:52.361" level="INFO"/>
<status status="PASS" starttime="20231129 08:27:52.361" endtime="20231129 08:27:52.361"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:52.362" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:52.362" endtime="20231129 08:27:52.362"/>
</kw>
<status status="PASS" starttime="20231129 08:27:52.357" endtime="20231129 08:27:52.362"/>
</kw>
<msg timestamp="20231129 08:27:52.362" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:52.357" endtime="20231129 08:27:52.362"/>
</kw>
<status status="PASS" starttime="20231129 08:27:52.356" endtime="20231129 08:27:52.362"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:27:51.424" endtime="20231129 08:27:52.363"/>
</test>
<test id="s1-s1-s14-t17" name="Create key with custom etag metadata and expect it won't conflict with ETag response header of HEAD request" line="225">
<kw name="Execute" library="os">
<var>${file_md5_checksum}</var>
<arg>md5sum /tmp/small_file | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:52.366" level="INFO">Running command 'md5sum /tmp/small_file | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:52.370" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:52.370" level="INFO">${output} = e9cc07b675f963c691e9281355c45966</msg>
<status status="PASS" starttime="20231129 08:27:52.365" endtime="20231129 08:27:52.370"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:52.371" level="INFO">e9cc07b675f963c691e9281355c45966</msg>
<status status="PASS" starttime="20231129 08:27:52.370" endtime="20231129 08:27:52.371"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:52.371" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:52.371" endtime="20231129 08:27:52.371"/>
</kw>
<status status="PASS" starttime="20231129 08:27:52.365" endtime="20231129 08:27:52.371"/>
</kw>
<msg timestamp="20231129 08:27:52.371" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:52.364" endtime="20231129 08:27:52.371"/>
</kw>
<msg timestamp="20231129 08:27:52.372" level="INFO">${file_md5_checksum} = e9cc07b675f963c691e9281355c45966</msg>
<status status="PASS" starttime="20231129 08:27:52.364" endtime="20231129 08:27:52.372"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<arg>cp --metadata "ETag=custom-etag-value" /tmp/small_file s3://${BUCKET}/test_file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:52.374" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp --metadata "ETag=custom-etag-value" /tmp/small_file s3://erasure/test_file 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:52.926" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:52.926" level="INFO">${output} = 2023-11-29 08:27:52,719 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10
2023-11-29 08:27:52,719 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20231129 08:27:52.373" endtime="20231129 08:27:52.927"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:52.927" level="INFO">2023-11-29 08:27:52,719 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10
2023-11-29 08:27:52,719 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', '--metadata', 'ETag=custom-etag-value', '/tmp/small_file', 's3://erasure/test_file']
2023-11-29 08:27:52,720 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7f453eadb9d8&gt;
2023-11-29 08:27:52,720 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7f453f8cf730&gt;
2023-11-29 08:27:52,720 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7f453f8feae8&gt;
2023-11-29 08:27:52,720 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2023-11-29 08:27:52,723 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7f453ec07400&gt;
2023-11-29 08:27:52,724 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7f453eaea048&gt;
2023-11-29 08:27:52,724 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f45467ea6d8&gt;
2023-11-29 08:27:52,724 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7f453eaea048&gt;
2023-11-29 08:27:52,726 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f45467ea6d8&gt;
2023-11-29 08:27:52,726 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f45467ea6d8&gt;
2023-11-29 08:27:52,726 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f453f8d22b0&gt;
2023-11-29 08:27:52,726 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f45467ea6d8&gt;
2023-11-29 08:27:52,726 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f453f8d22b0&gt;
2023-11-29 08:27:52,727 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f45467ea6d8&gt;
2023-11-29 08:27:52,727 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f45467ea6d8&gt;
2023-11-29 08:27:52,727 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f45467ea6d8&gt;
2023-11-29 08:27:52,727 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f453f8d22b0&gt;
2023-11-29 08:27:52,727 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f45467ea6d8&gt;
2023-11-29 08:27:52,727 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f45467ea6d8&gt;
2023-11-29 08:27:52,727 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f45467ea6d8&gt;
2023-11-29 08:27:52,727 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f45467ea6d8&gt;
2023-11-29 08:27:52,728 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f45467ea6d8&gt;
2023-11-29 08:27:52,728 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f45467ea6d8&gt;
2023-11-29 08:27:52,728 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f45467ea6d8&gt;
2023-11-29 08:27:52,728 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f45467ea6d8&gt;
2023-11-29 08:27:52,728 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f45467ea6d8&gt;
2023-11-29 08:27:52,728 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f45467ea6d8&gt;
2023-11-29 08:27:52,728 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f45467ea6d8&gt;
2023-11-29 08:27:52,729 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f45467ea6d8&gt;
2023-11-29 08:27:52,729 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f45467ea6d8&gt;
2023-11-29 08:27:52,729 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f45467ea6d8&gt;
2023-11-29 08:27:52,729 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f45467ea6d8&gt;
2023-11-29 08:27:52,729 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f45467ea6d8&gt;
2023-11-29 08:27:52,729 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f45467ea6d8&gt;
2023-11-29 08:27:52,729 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f45467ea6d8&gt;
2023-11-29 08:27:52,729 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f453f8d22b0&gt;
2023-11-29 08:27:52,729 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f45467ea6d8&gt;
2023-11-29 08:27:52,730 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f45467ea6d8&gt;
2023-11-29 08:27:52,730 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f45467ea6d8&gt;
2023-11-29 08:27:52,730 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f453f8d22b0&gt;
2023-11-29 08:27:52,730 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f45467ea6d8&gt;
2023-11-29 08:27:52,730 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f453f8d22b0&gt;
2023-11-29 08:27:52,730 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f45467ea6d8&gt;
2023-11-29 08:27:52,730 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f45467ea6d8&gt;
2023-11-29 08:27:52,730 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f453f8d22b0&gt;
2023-11-29 08:27:52,730 - MainThread - awscli.argprocess - DEBUG - Parsing param --metadata as shorthand
2023-11-29 08:27:52,731 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f45467ea6d8&gt;
2023-11-29 08:27:52,731 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f45467ea6d8&gt;
2023-11-29 08:27:52,731 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f45467ea6d8&gt;
2023-11-29 08:27:52,731 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2023-11-29 08:27:52,731 - MainThread - botocore.credentials - INFO - Found credentials in environment variables.
2023-11-29 08:27:52,732 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/endpoints.json
2023-11-29 08:27:52,745 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/sdk-default-configuration.json
2023-11-29 08:27:52,745 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f4540593378&gt;
2023-11-29 08:27:52,746 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/s3/2006-03-01/service-2.json
2023-11-29 08:27:52,755 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f454086d2f0&gt;
2023-11-29 08:27:52,755 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f454086d0d0&gt;
2023-11-29 08:27:52,755 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-11-29 08:27:52,758 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2023-11-29 08:27:52,758 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/_retry.json
2023-11-29 08:27:52,759 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2023-11-29 08:27:52,759 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-11-29 08:27:52,760 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f4540593378&gt;
2023-11-29 08:27:52,761 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f454086d2f0&gt;
2023-11-29 08:27:52,761 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f454086d0d0&gt;
2023-11-29 08:27:52,761 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-11-29 08:27:52,763 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2023-11-29 08:27:52,763 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2023-11-29 08:27:52,764 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-11-29 08:27:52,764 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f4540593378&gt;
2023-11-29 08:27:52,766 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f454086d2f0&gt;
2023-11-29 08:27:52,766 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f454086d0d0&gt;
2023-11-29 08:27:52,766 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-11-29 08:27:52,768 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2023-11-29 08:27:52,768 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2023-11-29 08:27:52,769 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-11-29 08:27:52,770 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2023-11-29 08:27:52,770 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2023-11-29 08:27:52,771 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f453e38c9e8&gt;}) about to wait for the following futures []
2023-11-29 08:27:52,771 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f453e38c9e8&gt;}) done waiting for dependent futures
2023-11-29 08:27:52,771 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f453e38c9e8&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f453e449898&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7f453e3819e8&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7f453e381a58&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7f453e381be0&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f453e38c9e8&gt;}
2023-11-29 08:27:52,772 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task PutObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'test_file', 'extra_args': {'Metadata': {'ETag': 'custom-etag-value'}}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f453e381be0&gt; for transfer request: 0.
2023-11-29 08:27:52,772 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2023-11-29 08:27:52,772 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - PutObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'test_file', 'extra_args': {'Metadata': {'ETag': 'custom-etag-value'}}}) about to wait for the following futures []
2023-11-29 08:27:52,773 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - PutObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'test_file', 'extra_args': {'Metadata': {'ETag': 'custom-etag-value'}}}) done waiting for dependent futures
2023-11-29 08:27:52,773 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task PutObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'test_file', 'extra_args': {'Metadata': {'ETag': 'custom-etag-value'}}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f453e449898&gt;, 'fileobj': &lt;s3transfer.utils.ReadFileChunk object at 0x7f453e38c6a0&gt;, 'bucket': 'erasure', 'key': 'test_file', 'extra_args': {'Metadata': {'ETag': 'custom-etag-value'}}}
2023-11-29 08:27:52,773 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function validate_ascii_metadata at 0x7f45405b06a8&gt;
2023-11-29 08:27:52,773 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function sse_md5 at 0x7f45405acae8&gt;
2023-11-29 08:27:52,773 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function convert_body_to_file_like_object at 0x7f45405b0f28&gt;
2023-11-29 08:27:52,773 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function validate_bucket_name at 0x7f45405aca60&gt;
2023-11-29 08:27:52,774 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7f453e449dd8&gt;&gt;
2023-11-29 08:27:52,774 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7f453e41a1d0&gt;&gt;
2023-11-29 08:27:52,774 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function generate_idempotent_uuid at 0x7f45405ac8c8&gt;
2023-11-29 08:27:52,774 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function conditionally_calculate_md5 at 0x7f4540f530d0&gt;
2023-11-29 08:27:52,774 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-11-29 08:27:52,776 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_expect_header at 0x7f45405acd90&gt;
2023-11-29 08:27:52,776 - ThreadPoolExecutor-0_0 - botocore.handlers - DEBUG - Adding expect 100 continue header to request.
2023-11-29 08:27:52,776 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7f453e449dd8&gt;&gt;
2023-11-29 08:27:52,776 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_recursion_detection_header at 0x7f45405ac598&gt;
2023-11-29 08:27:52,776 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7f45405b20d0&gt;
2023-11-29 08:27:52,777 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=PutObject) with params: {'url_path': '/erasure/test_file', 'query_string': {}, 'method': 'PUT', 'headers': {'x-amz-meta-ETag': 'custom-etag-value', 'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10', 'Content-MD5': '6cwHtnX5Y8aR6SgTVcRZZg==', 'Expect': '100-continue'}, 'body': &lt;s3transfer.utils.ReadFileChunk object at 0x7f453e38c6a0&gt;, 'url': 'http://s3g:9878/erasure/test_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f453e449a90&gt;, 'has_streaming_input': True, 'auth_type': None, 'signing': {'bucket': 'erasure'}}}
2023-11-29 08:27:52,777 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function signal_not_transferring at 0x7f4542ad5158&gt;
2023-11-29 08:27:52,777 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f453e449a58&gt;&gt;
2023-11-29 08:27:52,777 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.PutObject: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7f453e41a240&gt;&gt;
2023-11-29 08:27:52,777 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.PutObject: calling handler &lt;function set_operation_specific_signer at 0x7f45405ac7b8&gt;
2023-11-29 08:27:52,777 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.PutObject: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7f453e41a240&gt;&gt;
2023-11-29 08:27:52,777 - ThreadPoolExecutor-0_0 - botocore.utils - DEBUG - Using S3 path style addressing.
2023-11-29 08:27:52,779 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2023-11-29 08:27:52,779 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
PUT
/erasure/test_file

content-md5:6cwHtnX5Y8aR6SgTVcRZZg==
host:s3g:9878
x-amz-content-sha256:8298e394cce2fd2e387d4ab8e9721f18e1e4d7700ef0bbc9e3987ca07a8339ec
x-amz-date:20231129T082752Z
x-amz-meta-etag:custom-etag-value

content-md5;host;x-amz-content-sha256;x-amz-date;x-amz-meta-etag
8298e394cce2fd2e387d4ab8e9721f18e1e4d7700ef0bbc9e3987ca07a8339ec
2023-11-29 08:27:52,779 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20231129T082752Z
20231129/us-west-1/s3/aws4_request
99b7013c7818919ace632bc076442db532db234ace701fbf11eba91ecc57259e
2023-11-29 08:27:52,779 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
66acbda4f8b4bb85d947b9e13840fbe3bcb5cfb43b49eedaf160223aad73a566
2023-11-29 08:27:52,779 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function signal_transferring at 0x7f4542ad51e0&gt;
2023-11-29 08:27:52,779 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function add_retry_headers at 0x7f45405b2730&gt;
2023-11-29 08:27:52,779 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=PUT, url=http://s3g:9878/erasure/test_file, headers={'x-amz-meta-ETag': b'custom-etag-value', 'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10', 'Content-MD5': b'6cwHtnX5Y8aR6SgTVcRZZg==', 'Expect': b'100-continue', 'X-Amz-Date': b'20231129T082752Z', 'X-Amz-Content-SHA256': b'8298e394cce2fd2e387d4ab8e9721f18e1e4d7700ef0bbc9e3987ca07a8339ec', 'Authorization': b'AWS4-HMAC-SHA256 Credential=dlfknslnfslf/20231129/us-west-1/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date;x-amz-meta-etag, Signature=66acbda4f8b4bb85d947b9e13840fbe3bcb5cfb43b49eedaf160223aad73a566', 'amz-sdk-invocation-id': b'5c7d484f-bf96-4f19-ae32-795793ff429b', 'amz-sdk-request': b'attempt=1', 'Content-Length': '1000000'}&gt;
2023-11-29 08:27:52,780 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2023-11-29 08:27:52,781 - ThreadPoolExecutor-0_0 - botocore.awsrequest - DEBUG - Waiting for 100 Continue response.
2023-11-29 08:27:52,782 - ThreadPoolExecutor-0_0 - botocore.awsrequest - DEBUG - 100 Continue response seen, now sending request body.
Completed 256.0 KiB/976.6 KiB (7.3 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/976.6 KiB (14.3 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/976.6 KiB (21.0 MiB/s) with 1 file(s) remaining
2023-11-29 08:27:52,863 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "PUT /erasure/test_file HTTP/1.1" 200 0
2023-11-29 08:27:52,864 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Wed, 29 Nov 2023 08:27:52 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Wed, 29 Nov 2023 08:27:52 GMT', 'Pragma': 'no-cache', 'Content-Type': 'text/plain;charset=utf-8', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': '"e9cc07b675f963c691e9281355c45966"', 'Server': 'Ozone', 'x-amz-id-2': 't2igv7QXfvo8TVu', 'x-amz-request-id': '791b5232-2566-4e38-a358-e93e64672457', 'Content-Length': '0'}
2023-11-29 08:27:52,864 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
b''
2023-11-29 08:27:52,865 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f453e449e10&gt;
2023-11-29 08:27:52,865 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2023-11-29 08:27:52,865 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7f453e449dd8&gt;&gt;
2023-11-29 08:27:52,866 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.PutObject: calling handler &lt;function enhance_error_msg at 0x7f453eadb598&gt;
2023-11-29 08:27:52,866 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
Completed 976.6 KiB/976.6 KiB (10.2 MiB/s) with 1 file(s) remaining
upload: ../../tmp/small_file to s3://erasure/test_file             
2023-11-29 08:27:52,867 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20231129 08:27:52.927" endtime="20231129 08:27:52.928"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:52.928" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:52.928" endtime="20231129 08:27:52.928"/>
</kw>
<status status="PASS" starttime="20231129 08:27:52.373" endtime="20231129 08:27:52.928"/>
</kw>
<msg timestamp="20231129 08:27:52.929" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:52.373" endtime="20231129 08:27:52.929"/>
</kw>
<msg timestamp="20231129 08:27:52.929" level="INFO">${output} = 2023-11-29 08:27:52,719 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10
2023-11-29 08:27:52,719 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20231129 08:27:52.372" endtime="20231129 08:27:52.929"/>
</kw>
<status status="PASS" starttime="20231129 08:27:52.372" endtime="20231129 08:27:52.929"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<var>${result}</var>
<arg>cp s3://${BUCKET}/test_file /tmp/test_file_downloaded</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:52.932" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp s3://erasure/test_file /tmp/test_file_downloaded 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:53.477" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:53.477" level="INFO">${output} = 2023-11-29 08:27:53,281 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10
2023-11-29 08:27:53,281 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20231129 08:27:52.931" endtime="20231129 08:27:53.477"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:53.479" level="INFO">2023-11-29 08:27:53,281 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10
2023-11-29 08:27:53,281 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', 's3://erasure/test_file', '/tmp/test_file_downloaded']
2023-11-29 08:27:53,281 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7f1fd010e9d8&gt;
2023-11-29 08:27:53,281 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7f1fd0f02730&gt;
2023-11-29 08:27:53,282 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7f1fd0f31ae8&gt;
2023-11-29 08:27:53,282 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2023-11-29 08:27:53,285 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7f1fd023a400&gt;
2023-11-29 08:27:53,285 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7f1fd011d048&gt;
2023-11-29 08:27:53,286 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1fd7e1d710&gt;
2023-11-29 08:27:53,286 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7f1fd011d048&gt;
2023-11-29 08:27:53,288 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1fd7e1d710&gt;
2023-11-29 08:27:53,288 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1fd7e1d710&gt;
2023-11-29 08:27:53,288 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f1fd0f052b0&gt;
2023-11-29 08:27:53,288 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1fd7e1d710&gt;
2023-11-29 08:27:53,288 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f1fd0f052b0&gt;
2023-11-29 08:27:53,289 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1fd7e1d710&gt;
2023-11-29 08:27:53,289 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1fd7e1d710&gt;
2023-11-29 08:27:53,289 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1fd7e1d710&gt;
2023-11-29 08:27:53,289 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f1fd0f052b0&gt;
2023-11-29 08:27:53,289 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1fd7e1d710&gt;
2023-11-29 08:27:53,289 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1fd7e1d710&gt;
2023-11-29 08:27:53,289 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1fd7e1d710&gt;
2023-11-29 08:27:53,289 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1fd7e1d710&gt;
2023-11-29 08:27:53,290 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1fd7e1d710&gt;
2023-11-29 08:27:53,290 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1fd7e1d710&gt;
2023-11-29 08:27:53,290 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1fd7e1d710&gt;
2023-11-29 08:27:53,290 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1fd7e1d710&gt;
2023-11-29 08:27:53,290 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1fd7e1d710&gt;
2023-11-29 08:27:53,290 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1fd7e1d710&gt;
2023-11-29 08:27:53,290 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1fd7e1d710&gt;
2023-11-29 08:27:53,291 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1fd7e1d710&gt;
2023-11-29 08:27:53,291 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1fd7e1d710&gt;
2023-11-29 08:27:53,291 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1fd7e1d710&gt;
2023-11-29 08:27:53,291 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1fd7e1d710&gt;
2023-11-29 08:27:53,291 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1fd7e1d710&gt;
2023-11-29 08:27:53,291 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1fd7e1d710&gt;
2023-11-29 08:27:53,291 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1fd7e1d710&gt;
2023-11-29 08:27:53,291 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f1fd0f052b0&gt;
2023-11-29 08:27:53,291 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1fd7e1d710&gt;
2023-11-29 08:27:53,292 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1fd7e1d710&gt;
2023-11-29 08:27:53,292 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1fd7e1d710&gt;
2023-11-29 08:27:53,292 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f1fd0f052b0&gt;
2023-11-29 08:27:53,292 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1fd7e1d710&gt;
2023-11-29 08:27:53,292 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f1fd0f052b0&gt;
2023-11-29 08:27:53,292 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1fd7e1d710&gt;
2023-11-29 08:27:53,292 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1fd7e1d710&gt;
2023-11-29 08:27:53,292 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1fd7e1d710&gt;
2023-11-29 08:27:53,293 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1fd7e1d710&gt;
2023-11-29 08:27:53,293 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f1fd7e1d710&gt;
2023-11-29 08:27:53,293 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2023-11-29 08:27:53,293 - MainThread - botocore.credentials - INFO - Found credentials in environment variables.
2023-11-29 08:27:53,293 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/endpoints.json
2023-11-29 08:27:53,307 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/sdk-default-configuration.json
2023-11-29 08:27:53,307 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f1fd1bc6378&gt;
2023-11-29 08:27:53,308 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/s3/2006-03-01/service-2.json
2023-11-29 08:27:53,320 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f1fd1ea02f0&gt;
2023-11-29 08:27:53,320 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f1fd1ea00d0&gt;
2023-11-29 08:27:53,321 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-11-29 08:27:53,323 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2023-11-29 08:27:53,324 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/_retry.json
2023-11-29 08:27:53,324 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2023-11-29 08:27:53,325 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-11-29 08:27:53,325 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f1fd1bc6378&gt;
2023-11-29 08:27:53,326 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f1fd1ea02f0&gt;
2023-11-29 08:27:53,326 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f1fd1ea00d0&gt;
2023-11-29 08:27:53,326 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-11-29 08:27:53,328 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2023-11-29 08:27:53,329 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2023-11-29 08:27:53,329 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-11-29 08:27:53,330 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f1fd1bc6378&gt;
2023-11-29 08:27:53,331 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f1fd1ea02f0&gt;
2023-11-29 08:27:53,331 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f1fd1ea00d0&gt;
2023-11-29 08:27:53,331 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-11-29 08:27:53,333 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2023-11-29 08:27:53,334 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2023-11-29 08:27:53,334 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-11-29 08:27:53,335 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2023-11-29 08:27:53,336 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function sse_md5 at 0x7f1fd1bdfae8&gt;
2023-11-29 08:27:53,336 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function validate_bucket_name at 0x7f1fd1bdfa60&gt;
2023-11-29 08:27:53,336 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7f1fcf9b3320&gt;&gt;
2023-11-29 08:27:53,336 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7f1fcf9b36d8&gt;&gt;
2023-11-29 08:27:53,336 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function generate_idempotent_uuid at 0x7f1fd1bdf8c8&gt;
2023-11-29 08:27:53,336 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function add_expect_header at 0x7f1fd1bdfd90&gt;
2023-11-29 08:27:53,336 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7f1fcf9b3320&gt;&gt;
2023-11-29 08:27:53,336 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function add_recursion_detection_header at 0x7f1fd1bdf598&gt;
2023-11-29 08:27:53,336 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7f1fd1be50d0&gt;
2023-11-29 08:27:53,336 - MainThread - botocore.endpoint - DEBUG - Making request for OperationModel(name=HeadObject) with params: {'url_path': '/erasure/test_file', 'query_string': {}, 'method': 'HEAD', 'headers': {'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10'}, 'body': b'', 'url': 'http://s3g:9878/erasure/test_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f1fcfa62f98&gt;, 'has_streaming_input': False, 'auth_type': None, 'signing': {'bucket': 'erasure'}}}
2023-11-29 08:27:53,337 - MainThread - botocore.hooks - DEBUG - Event request-created.s3.HeadObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f1fcfa62f60&gt;&gt;
2023-11-29 08:27:53,337 - MainThread - botocore.hooks - DEBUG - Event choose-signer.s3.HeadObject: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7f1fcf9b3748&gt;&gt;
2023-11-29 08:27:53,337 - MainThread - botocore.hooks - DEBUG - Event choose-signer.s3.HeadObject: calling handler &lt;function set_operation_specific_signer at 0x7f1fd1bdf7b8&gt;
2023-11-29 08:27:53,337 - MainThread - botocore.hooks - DEBUG - Event before-sign.s3.HeadObject: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7f1fcf9b3748&gt;&gt;
2023-11-29 08:27:53,337 - MainThread - botocore.utils - DEBUG - Using S3 path style addressing.
2023-11-29 08:27:53,338 - MainThread - botocore.auth - DEBUG - Calculating signature using v4 auth.
2023-11-29 08:27:53,338 - MainThread - botocore.auth - DEBUG - CanonicalRequest:
HEAD
/erasure/test_file

host:s3g:9878
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20231129T082753Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2023-11-29 08:27:53,338 - MainThread - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20231129T082753Z
20231129/us-west-1/s3/aws4_request
d7d2b0de3f0430a587e03471e2bd6b4a57f97a982de915954bc3f1a456c7a5ca
2023-11-29 08:27:53,338 - MainThread - botocore.auth - DEBUG - Signature:
572dc0eb3ece22f880b7d6130a70084d2e90f52fe55251093f1cc2dc8a263463
2023-11-29 08:27:53,338 - MainThread - botocore.hooks - DEBUG - Event request-created.s3.HeadObject: calling handler &lt;function add_retry_headers at 0x7f1fd1be5730&gt;
2023-11-29 08:27:53,338 - MainThread - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=HEAD, url=http://s3g:9878/erasure/test_file, headers={'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10', 'X-Amz-Date': b'20231129T082753Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=dlfknslnfslf/20231129/us-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=572dc0eb3ece22f880b7d6130a70084d2e90f52fe55251093f1cc2dc8a263463', 'amz-sdk-invocation-id': b'c145cb7f-b204-4f8a-8efe-acc9fee1c03f', 'amz-sdk-request': b'attempt=1'}&gt;
2023-11-29 08:27:53,339 - MainThread - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2023-11-29 08:27:53,346 - MainThread - urllib3.connectionpool - DEBUG - http://s3g:9878 "HEAD /erasure/test_file HTTP/1.1" 200 0
2023-11-29 08:27:53,346 - MainThread - botocore.parsers - DEBUG - Response headers: {'Date': 'Wed, 29 Nov 2023 08:27:53 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Wed, 29 Nov 2023 08:27:53 GMT', 'Pragma': 'no-cache', 'Content-Type': 'binary/octet-stream', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': '"e9cc07b675f963c691e9281355c45966"', 'Last-Modified': 'Wed, 29 Nov 2023 08:27:52 GMT', 'x-amz-meta-etag': 'custom-etag-value', 'Server': 'Ozone', 'x-amz-id-2': '9EwHfbvGzx', 'x-amz-request-id': '51d8508e-812f-4d0f-8bcc-d42462f5db1c', 'Content-Length': '1000000'}
2023-11-29 08:27:53,346 - MainThread - botocore.parsers - DEBUG - Response body:
b''
2023-11-29 08:27:53,347 - MainThread - botocore.hooks - DEBUG - Event needs-retry.s3.HeadObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f1fcf9b3358&gt;
2023-11-29 08:27:53,347 - MainThread - botocore.retryhandler - DEBUG - No retry needed.
2023-11-29 08:27:53,347 - MainThread - botocore.hooks - DEBUG - Event needs-retry.s3.HeadObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7f1fcf9b3320&gt;&gt;
2023-11-29 08:27:53,347 - MainThread - botocore.hooks - DEBUG - Event after-call.s3.HeadObject: calling handler &lt;function enhance_error_msg at 0x7f1fd010e598&gt;
2023-11-29 08:27:53,348 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2023-11-29 08:27:53,348 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f1fcf9da7b8&gt;}) about to wait for the following futures []
2023-11-29 08:27:53,349 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f1fcf9da7b8&gt;}) done waiting for dependent futures
2023-11-29 08:27:53,349 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f1fcf9da7b8&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f1fcfa7b828&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7f1fcf9b3978&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7f1fcf9b39e8&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7f1fcf9b3b70&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f1fcf9da7b8&gt;, 'io_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7f1fcf9b3f60&gt;}
2023-11-29 08:27:53,349 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task ImmediatelyWriteIOGetObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'test_file', 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f1fcf9b3b70&gt; for transfer request: 0.
2023-11-29 08:27:53,350 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2023-11-29 08:27:53,350 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - ImmediatelyWriteIOGetObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'test_file', 'extra_args': {}}) about to wait for the following futures []
2023-11-29 08:27:53,350 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - ImmediatelyWriteIOGetObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'test_file', 'extra_args': {}}) done waiting for dependent futures
2023-11-29 08:27:53,350 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task ImmediatelyWriteIOGetObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'test_file', 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f1fcfa7b828&gt;, 'bucket': 'erasure', 'key': 'test_file', 'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f1fcf9dac50&gt;, 'extra_args': {}, 'callbacks': [functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.ProvideSizeSubscriber object at 0x7f1fcf9daba8&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f1fcf9da7b8&gt;), functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.DirectoryCreatorSubscriber object at 0x7f1fcf9daa90&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f1fcf9da7b8&gt;), functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.ProvideLastModifiedTimeSubscriber object at 0x7f1fcf9daac8&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f1fcf9da7b8&gt;), functools.partial(&lt;bound method BaseResultSubscriber.on_progress of &lt;awscli.customizations.s3.results.DownloadResultSubscriber object at 0x7f1fcf9da978&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7f1fcf9da7b8&gt;)], 'max_attempts': 5, 'download_output_manager': &lt;s3transfer.download.DownloadFilenameOutputManager object at 0x7f1fcf9dab38&gt;, 'io_chunksize': 262144, 'bandwidth_limiter': None}
2023-11-29 08:27:53,351 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function sse_md5 at 0x7f1fd1bdfae8&gt;
2023-11-29 08:27:53,351 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function validate_bucket_name at 0x7f1fd1bdfa60&gt;
2023-11-29 08:27:53,351 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7f1fcfa7bd68&gt;&gt;
2023-11-29 08:27:53,351 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7f1fcfa4b160&gt;&gt;
2023-11-29 08:27:53,351 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function generate_idempotent_uuid at 0x7f1fd1bdf8c8&gt;
2023-11-29 08:27:53,351 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_expect_header at 0x7f1fd1bdfd90&gt;
2023-11-29 08:27:53,352 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7f1fcfa7bd68&gt;&gt;
2023-11-29 08:27:53,352 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_recursion_detection_header at 0x7f1fd1bdf598&gt;
2023-11-29 08:27:53,352 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7f1fd1be50d0&gt;
2023-11-29 08:27:53,352 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=GetObject) with params: {'url_path': '/erasure/test_file', 'query_string': {}, 'method': 'GET', 'headers': {'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10'}, 'body': b'', 'url': 'http://s3g:9878/erasure/test_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f1fcfa7ba20&gt;, 'has_streaming_input': False, 'auth_type': None, 'signing': {'bucket': 'erasure'}}}
2023-11-29 08:27:53,352 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function signal_not_transferring at 0x7f1fd4108158&gt;
2023-11-29 08:27:53,352 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f1fcfa7b9e8&gt;&gt;
2023-11-29 08:27:53,353 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.GetObject: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7f1fcfa4b1d0&gt;&gt;
2023-11-29 08:27:53,353 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.GetObject: calling handler &lt;function set_operation_specific_signer at 0x7f1fd1bdf7b8&gt;
2023-11-29 08:27:53,353 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.GetObject: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7f1fcfa4b1d0&gt;&gt;
2023-11-29 08:27:53,353 - ThreadPoolExecutor-0_0 - botocore.utils - DEBUG - Using S3 path style addressing.
2023-11-29 08:27:53,353 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2023-11-29 08:27:53,353 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
GET
/erasure/test_file

host:s3g:9878
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20231129T082753Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2023-11-29 08:27:53,353 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20231129T082753Z
20231129/us-west-1/s3/aws4_request
88da02b5a02843580eeac090e0d3b3f55545c4fcda6b24cc63ae41ca5ee71c0e
2023-11-29 08:27:53,353 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
5f22ef9fbcb7c7f569a70695e52d33224954bdd4f548b7578f2142313a15eda5
2023-11-29 08:27:53,353 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function signal_transferring at 0x7f1fd41081e0&gt;
2023-11-29 08:27:53,354 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function add_retry_headers at 0x7f1fd1be5730&gt;
2023-11-29 08:27:53,354 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=True, method=GET, url=http://s3g:9878/erasure/test_file, headers={'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10', 'X-Amz-Date': b'20231129T082753Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=dlfknslnfslf/20231129/us-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=5f22ef9fbcb7c7f569a70695e52d33224954bdd4f548b7578f2142313a15eda5', 'amz-sdk-invocation-id': b'0fd12009-3911-463e-85ec-99aa7468fdf0', 'amz-sdk-request': b'attempt=1'}&gt;
2023-11-29 08:27:53,354 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2023-11-29 08:27:53,350 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-11-29 08:27:53,412 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "GET /erasure/test_file HTTP/1.1" 200 1000000
2023-11-29 08:27:53,412 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Wed, 29 Nov 2023 08:27:53 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Wed, 29 Nov 2023 08:27:53 GMT', 'Pragma': 'no-cache', 'Content-Type': 'application/octet-stream', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': '"e9cc07b675f963c691e9281355c45966"', 'Accept-Ranges': 'bytes', 'Last-Modified': 'Wed, 29 Nov 2023 08:27:52 GMT', 'Server': 'Ozone', 'x-amz-id-2': '4KkSDVWGuJku', 'x-amz-request-id': 'd42fc5bb-e275-4382-a2ba-b72420d16c04', 'Content-Length': '1000000'}
2023-11-29 08:27:53,412 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
&lt;botocore.response.StreamingBody object at 0x7f1fce88ceb8&gt;
2023-11-29 08:27:53,413 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f1fcfa7bda0&gt;
2023-11-29 08:27:53,413 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2023-11-29 08:27:53,414 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7f1fcfa7bd68&gt;&gt;
2023-11-29 08:27:53,414 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.GetObject: calling handler &lt;function enhance_error_msg at 0x7f1fd010e598&gt;
Completed 256.0 KiB/976.6 KiB (3.9 MiB/s) with 1 file(s) remaining
2023-11-29 08:27:53,415 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 0}) about to wait for the following futures []
2023-11-29 08:27:53,415 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 0}) done waiting for dependent futures
2023-11-29 08:27:53,415 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 0}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f1fcf9dac50&gt;, 'offset': 0}
Completed 512.0 KiB/976.6 KiB (7.5 MiB/s) with 1 file(s) remaining
2023-11-29 08:27:53,416 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 262144}) about to wait for the following futures []
2023-11-29 08:27:53,416 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 262144}) done waiting for dependent futures
2023-11-29 08:27:53,416 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 262144}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f1fcf9dac50&gt;, 'offset': 262144}
Completed 768.0 KiB/976.6 KiB (11.2 MiB/s) with 1 file(s) remaining
2023-11-29 08:27:53,417 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 524288}) about to wait for the following futures []
2023-11-29 08:27:53,417 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 524288}) done waiting for dependent futures
2023-11-29 08:27:53,417 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 524288}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f1fcf9dac50&gt;, 'offset': 524288}
2023-11-29 08:27:53,417 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 786432}) about to wait for the following futures []
2023-11-29 08:27:53,417 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 786432}) done waiting for dependent futures
2023-11-29 08:27:53,417 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 786432}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f1fcf9dac50&gt;, 'offset': 786432}
Completed 976.6 KiB/976.6 KiB (14.1 MiB/s) with 1 file(s) remaining
2023-11-29 08:27:53,418 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/test_file_downloaded'}) about to wait for the following futures []
2023-11-29 08:27:53,418 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/test_file_downloaded'}) done waiting for dependent futures
2023-11-29 08:27:53,418 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/test_file_downloaded'}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7f1fcf9dac50&gt;, 'final_filename': '/tmp/test_file_downloaded', 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7f1fcf9b39e8&gt;}
2023-11-29 08:27:53,419 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
download: s3://erasure/test_file to ../../tmp/test_file_downloaded 
2023-11-29 08:27:53,419 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20231129 08:27:53.478" endtime="20231129 08:27:53.479"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:53.480" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:53.479" endtime="20231129 08:27:53.480"/>
</kw>
<status status="PASS" starttime="20231129 08:27:52.931" endtime="20231129 08:27:53.480"/>
</kw>
<msg timestamp="20231129 08:27:53.480" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:52.930" endtime="20231129 08:27:53.480"/>
</kw>
<msg timestamp="20231129 08:27:53.481" level="INFO">${output} = 2023-11-29 08:27:53,281 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10
2023-11-29 08:27:53,281 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20231129 08:27:52.930" endtime="20231129 08:27:53.481"/>
</kw>
<msg timestamp="20231129 08:27:53.482" level="INFO">${result} = 2023-11-29 08:27:53,281 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10
2023-11-29 08:27:53,281 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20231129 08:27:52.929" endtime="20231129 08:27:53.482"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<var>${match}</var>
<var>${ETag}</var>
<var>${etagCustom}</var>
<arg>${result}</arg>
<arg>HEAD /${BUCKET}/test_file\ .*?Response headers.*?ETag':\ '"(.*?)"'.*?x-amz-meta-etag':\ '(.*?)'</arg>
<arg>flags=DOTALL</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20231129 08:27:53.483" level="INFO">${match} = HEAD /erasure/test_file HTTP/1.1" 200 0
2023-11-29 08:27:53,346 - MainThread - botocore.parsers - DEBUG - Response headers: {'Date': 'Wed, 29 Nov 2023 08:27:53 GMT', 'Cache-Control': 'no-cache', 'Expi...</msg>
<msg timestamp="20231129 08:27:53.483" level="INFO">${ETag} = e9cc07b675f963c691e9281355c45966</msg>
<msg timestamp="20231129 08:27:53.483" level="INFO">${etagCustom} = custom-etag-value</msg>
<status status="PASS" starttime="20231129 08:27:53.482" endtime="20231129 08:27:53.484"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${ETag}</arg>
<arg>${file_md5_checksum}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20231129 08:27:53.484" endtime="20231129 08:27:53.484"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etagCustom}</arg>
<arg>custom-etag-value</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20231129 08:27:53.484" endtime="20231129 08:27:53.485"/>
</kw>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<arg>${ETag}</arg>
<arg>${etagCustom}</arg>
<doc>Fails if objects are equal after converting them to strings.</doc>
<status status="PASS" starttime="20231129 08:27:53.485" endtime="20231129 08:27:53.485"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>rm s3://${BUCKET}/test_file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:53.489" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 rm s3://erasure/test_file 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:53.923" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:53.923" level="INFO">${output} = delete: s3://erasure/test_file</msg>
<status status="PASS" starttime="20231129 08:27:53.487" endtime="20231129 08:27:53.923"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:53.924" level="INFO">delete: s3://erasure/test_file</msg>
<status status="PASS" starttime="20231129 08:27:53.923" endtime="20231129 08:27:53.924"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:53.924" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:53.924" endtime="20231129 08:27:53.925"/>
</kw>
<status status="PASS" starttime="20231129 08:27:53.487" endtime="20231129 08:27:53.925"/>
</kw>
<msg timestamp="20231129 08:27:53.925" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:53.487" endtime="20231129 08:27:53.925"/>
</kw>
<msg timestamp="20231129 08:27:53.925" level="INFO">${output} = delete: s3://erasure/test_file</msg>
<status status="PASS" starttime="20231129 08:27:53.486" endtime="20231129 08:27:53.925"/>
</kw>
<status status="PASS" starttime="20231129 08:27:53.486" endtime="20231129 08:27:53.925"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -rf /tmp/small_file</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:53.928" level="INFO">Running command 'rm -rf /tmp/small_file 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:53.930" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:53.930" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:27:53.927" endtime="20231129 08:27:53.930"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:53.931" level="INFO"/>
<status status="PASS" starttime="20231129 08:27:53.930" endtime="20231129 08:27:53.931"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:53.931" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:53.931" endtime="20231129 08:27:53.931"/>
</kw>
<status status="PASS" starttime="20231129 08:27:53.926" endtime="20231129 08:27:53.931"/>
</kw>
<msg timestamp="20231129 08:27:53.932" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:53.926" endtime="20231129 08:27:53.932"/>
</kw>
<status status="PASS" starttime="20231129 08:27:53.925" endtime="20231129 08:27:53.932"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -rf /tmp/test_file_downloaded</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:53.934" level="INFO">Running command 'rm -rf /tmp/test_file_downloaded 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:53.936" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:53.936" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:27:53.933" endtime="20231129 08:27:53.936"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:53.937" level="INFO"/>
<status status="PASS" starttime="20231129 08:27:53.936" endtime="20231129 08:27:53.937"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:53.937" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:53.937" endtime="20231129 08:27:53.937"/>
</kw>
<status status="PASS" starttime="20231129 08:27:53.933" endtime="20231129 08:27:53.937"/>
</kw>
<msg timestamp="20231129 08:27:53.937" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:53.932" endtime="20231129 08:27:53.937"/>
</kw>
<status status="PASS" starttime="20231129 08:27:53.932" endtime="20231129 08:27:53.938"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:27:52.363" endtime="20231129 08:27:53.938"/>
</test>
<test id="s1-s1-s14-t18" name="Create&amp;Download big file by multipart upload and expect ETag in a file download response" line="238">
<kw name="Execute" library="os">
<arg>head -c 10MB &lt;/dev/urandom &gt; /tmp/big_file</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:53.941" level="INFO">Running command 'head -c 10MB &lt;/dev/urandom &gt; /tmp/big_file'.</msg>
<msg timestamp="20231129 08:27:53.975" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:53.975" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:27:53.940" endtime="20231129 08:27:53.975"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:53.976" level="INFO"/>
<status status="PASS" starttime="20231129 08:27:53.975" endtime="20231129 08:27:53.976"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:53.976" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:53.976" endtime="20231129 08:27:53.976"/>
</kw>
<status status="PASS" starttime="20231129 08:27:53.940" endtime="20231129 08:27:53.976"/>
</kw>
<msg timestamp="20231129 08:27:53.976" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:53.939" endtime="20231129 08:27:53.976"/>
</kw>
<status status="PASS" starttime="20231129 08:27:53.939" endtime="20231129 08:27:53.977"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<var>${result}</var>
<arg>cp /tmp/big_file s3://${BUCKET}/</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:53.979" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp /tmp/big_file s3://erasure/ 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:54.846" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:54.846" level="INFO">${output} = 2023-11-29 08:27:54,316 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10
2023-11-29 08:27:54,316 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20231129 08:27:53.978" endtime="20231129 08:27:54.846"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:54.847" level="INFO">2023-11-29 08:27:54,316 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10
2023-11-29 08:27:54,316 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', '/tmp/big_file', 's3://erasure/']
2023-11-29 08:27:54,316 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7f469ca029d8&gt;
2023-11-29 08:27:54,317 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7f469d7f6730&gt;
2023-11-29 08:27:54,317 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7f469d825ae8&gt;
2023-11-29 08:27:54,317 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2023-11-29 08:27:54,320 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7f469cb2e400&gt;
2023-11-29 08:27:54,320 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7f469ca11048&gt;
2023-11-29 08:27:54,321 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f46a47116d8&gt;
2023-11-29 08:27:54,321 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7f469ca11048&gt;
2023-11-29 08:27:54,323 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f46a47116d8&gt;
2023-11-29 08:27:54,323 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f46a47116d8&gt;
2023-11-29 08:27:54,323 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f469d7f92b0&gt;
2023-11-29 08:27:54,323 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f46a47116d8&gt;
2023-11-29 08:27:54,323 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f469d7f92b0&gt;
2023-11-29 08:27:54,323 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f46a47116d8&gt;
2023-11-29 08:27:54,323 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f46a47116d8&gt;
2023-11-29 08:27:54,324 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f46a47116d8&gt;
2023-11-29 08:27:54,324 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f469d7f92b0&gt;
2023-11-29 08:27:54,324 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f46a47116d8&gt;
2023-11-29 08:27:54,324 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f46a47116d8&gt;
2023-11-29 08:27:54,324 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f46a47116d8&gt;
2023-11-29 08:27:54,324 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f46a47116d8&gt;
2023-11-29 08:27:54,324 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f46a47116d8&gt;
2023-11-29 08:27:54,324 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f46a47116d8&gt;
2023-11-29 08:27:54,324 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f46a47116d8&gt;
2023-11-29 08:27:54,325 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f46a47116d8&gt;
2023-11-29 08:27:54,325 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f46a47116d8&gt;
2023-11-29 08:27:54,325 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f46a47116d8&gt;
2023-11-29 08:27:54,325 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f46a47116d8&gt;
2023-11-29 08:27:54,325 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f46a47116d8&gt;
2023-11-29 08:27:54,325 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f46a47116d8&gt;
2023-11-29 08:27:54,325 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f46a47116d8&gt;
2023-11-29 08:27:54,325 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f46a47116d8&gt;
2023-11-29 08:27:54,326 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f46a47116d8&gt;
2023-11-29 08:27:54,326 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f46a47116d8&gt;
2023-11-29 08:27:54,326 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f46a47116d8&gt;
2023-11-29 08:27:54,326 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f469d7f92b0&gt;
2023-11-29 08:27:54,326 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f46a47116d8&gt;
2023-11-29 08:27:54,326 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f46a47116d8&gt;
2023-11-29 08:27:54,326 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f46a47116d8&gt;
2023-11-29 08:27:54,326 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f469d7f92b0&gt;
2023-11-29 08:27:54,326 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f46a47116d8&gt;
2023-11-29 08:27:54,326 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f469d7f92b0&gt;
2023-11-29 08:27:54,326 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f46a47116d8&gt;
2023-11-29 08:27:54,327 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f46a47116d8&gt;
2023-11-29 08:27:54,327 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f46a47116d8&gt;
2023-11-29 08:27:54,327 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f46a47116d8&gt;
2023-11-29 08:27:54,327 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f46a47116d8&gt;
2023-11-29 08:27:54,327 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2023-11-29 08:27:54,327 - MainThread - botocore.credentials - INFO - Found credentials in environment variables.
2023-11-29 08:27:54,328 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/endpoints.json
2023-11-29 08:27:54,341 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/sdk-default-configuration.json
2023-11-29 08:27:54,341 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f469e4ba378&gt;
2023-11-29 08:27:54,342 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/s3/2006-03-01/service-2.json
2023-11-29 08:27:54,351 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f469e7942f0&gt;
2023-11-29 08:27:54,351 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f469e7940d0&gt;
2023-11-29 08:27:54,352 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-11-29 08:27:54,354 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2023-11-29 08:27:54,355 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/_retry.json
2023-11-29 08:27:54,355 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2023-11-29 08:27:54,356 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-11-29 08:27:54,356 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f469e4ba378&gt;
2023-11-29 08:27:54,357 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f469e7942f0&gt;
2023-11-29 08:27:54,357 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f469e7940d0&gt;
2023-11-29 08:27:54,357 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-11-29 08:27:54,359 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2023-11-29 08:27:54,360 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2023-11-29 08:27:54,361 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-11-29 08:27:54,361 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f469e4ba378&gt;
2023-11-29 08:27:54,362 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f469e7942f0&gt;
2023-11-29 08:27:54,362 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f469e7940d0&gt;
2023-11-29 08:27:54,362 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-11-29 08:27:54,364 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2023-11-29 08:27:54,365 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2023-11-29 08:27:54,366 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-11-29 08:27:54,366 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2023-11-29 08:27:54,367 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2023-11-29 08:27:54,367 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f469c2b1978&gt;}) about to wait for the following futures []
2023-11-29 08:27:54,367 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f469c2b1978&gt;}) done waiting for dependent futures
2023-11-29 08:27:54,368 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f469c2b1978&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f469c36f828&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7f469c2a7978&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7f469c2a79e8&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7f469c2a7b70&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f469c2b1978&gt;}
2023-11-29 08:27:54,368 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task CreateMultipartUploadTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f469c2a7b70&gt; for transfer request: 0.
2023-11-29 08:27:54,368 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2023-11-29 08:27:54,369 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - CreateMultipartUploadTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}) about to wait for the following futures []
2023-11-29 08:27:54,369 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task UploadPartTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'part_number': 1, 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f469c2a7b70&gt; for transfer request: 0.
2023-11-29 08:27:54,369 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - CreateMultipartUploadTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}) done waiting for dependent futures
2023-11-29 08:27:54,369 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2023-11-29 08:27:54,369 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task CreateMultipartUploadTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f469c36f828&gt;, 'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}
2023-11-29 08:27:54,370 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;function validate_ascii_metadata at 0x7f469e4d76a8&gt;
2023-11-29 08:27:54,370 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;function sse_md5 at 0x7f469e4d3ae8&gt;
2023-11-29 08:27:54,370 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;function validate_bucket_name at 0x7f469e4d3a60&gt;
2023-11-29 08:27:54,370 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7f469c36fd68&gt;&gt;
2023-11-29 08:27:54,370 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7f469c33f160&gt;&gt;
2023-11-29 08:27:54,370 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CreateMultipartUpload: calling handler &lt;function generate_idempotent_uuid at 0x7f469e4d38c8&gt;
2023-11-29 08:27:54,371 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.CreateMultipartUpload: calling handler &lt;function add_expect_header at 0x7f469e4d3d90&gt;
2023-11-29 08:27:54,371 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.CreateMultipartUpload: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7f469c36fd68&gt;&gt;
2023-11-29 08:27:54,371 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.CreateMultipartUpload: calling handler &lt;function add_recursion_detection_header at 0x7f469e4d3598&gt;
2023-11-29 08:27:54,371 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.CreateMultipartUpload: calling handler &lt;function inject_api_version_header_if_needed at 0x7f469e4d90d0&gt;
2023-11-29 08:27:54,371 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=CreateMultipartUpload) with params: {'url_path': '/erasure/big_file?uploads', 'query_string': {}, 'method': 'POST', 'headers': {'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10'}, 'body': b'', 'url': 'http://s3g:9878/erasure/big_file?uploads', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f469c36fa20&gt;, 'has_streaming_input': False, 'auth_type': None, 'signing': {'bucket': 'erasure'}}}
2023-11-29 08:27:54,371 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.CreateMultipartUpload: calling handler &lt;function signal_not_transferring at 0x7f46a09fc158&gt;
2023-11-29 08:27:54,371 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.CreateMultipartUpload: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f469c36f9e8&gt;&gt;
2023-11-29 08:27:54,371 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.CreateMultipartUpload: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7f469c33f1d0&gt;&gt;
2023-11-29 08:27:54,371 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.CreateMultipartUpload: calling handler &lt;function set_operation_specific_signer at 0x7f469e4d37b8&gt;
2023-11-29 08:27:54,372 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.CreateMultipartUpload: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7f469c33f1d0&gt;&gt;
2023-11-29 08:27:54,372 - ThreadPoolExecutor-0_0 - botocore.utils - DEBUG - Using S3 path style addressing.
2023-11-29 08:27:54,372 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2023-11-29 08:27:54,372 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
POST
/erasure/big_file
uploads=
host:s3g:9878
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20231129T082754Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2023-11-29 08:27:54,372 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20231129T082754Z
20231129/us-west-1/s3/aws4_request
c844fa47081ddb3b6cb8092c50e3697e713dd1ceb5d8cb1626975e9823215afb
2023-11-29 08:27:54,372 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
37220293d3401bda6072d481c4b850e53ae96586185f83851a81b87a51aa600a
2023-11-29 08:27:54,372 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.CreateMultipartUpload: calling handler &lt;function signal_transferring at 0x7f46a09fc1e0&gt;
2023-11-29 08:27:54,373 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.CreateMultipartUpload: calling handler &lt;function add_retry_headers at 0x7f469e4d9730&gt;
2023-11-29 08:27:54,373 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=POST, url=http://s3g:9878/erasure/big_file?uploads, headers={'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10', 'X-Amz-Date': b'20231129T082754Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=dlfknslnfslf/20231129/us-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=37220293d3401bda6072d481c4b850e53ae96586185f83851a81b87a51aa600a', 'amz-sdk-invocation-id': b'142d7a88-2c84-406c-aa12-c52dab8e40f5', 'amz-sdk-request': b'attempt=1', 'Content-Length': '0'}&gt;
2023-11-29 08:27:54,374 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2023-11-29 08:27:54,374 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'part_number': 1, 'extra_args': {}}) about to wait for the following futures [&lt;s3transfer.futures.ExecutorFuture object at 0x7f469c2ce080&gt;]
2023-11-29 08:27:54,374 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'part_number': 1, 'extra_args': {}}) about to wait for &lt;s3transfer.futures.ExecutorFuture object at 0x7f469c2ce080&gt;
2023-11-29 08:27:54,374 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task UploadPartTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'part_number': 2, 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f469c2a7b70&gt; for transfer request: 0.
2023-11-29 08:27:54,375 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2023-11-29 08:27:54,375 - ThreadPoolExecutor-0_2 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'part_number': 2, 'extra_args': {}}) about to wait for the following futures [&lt;s3transfer.futures.ExecutorFuture object at 0x7f469c2ce080&gt;]
2023-11-29 08:27:54,375 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f469c2a7b70&gt; for transfer request: 0.
2023-11-29 08:27:54,375 - ThreadPoolExecutor-0_2 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'part_number': 2, 'extra_args': {}}) about to wait for &lt;s3transfer.futures.ExecutorFuture object at 0x7f469c2ce080&gt;
2023-11-29 08:27:54,375 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2023-11-29 08:27:54,376 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}) about to wait for the following futures [&lt;s3transfer.futures.ExecutorFuture object at 0x7f469c2ce080&gt;, &lt;s3transfer.futures.ExecutorFuture object at 0x7f469815b9e8&gt;, &lt;s3transfer.futures.ExecutorFuture object at 0x7f469815bcf8&gt;]
2023-11-29 08:27:54,376 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-11-29 08:27:54,377 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}) about to wait for &lt;s3transfer.futures.ExecutorFuture object at 0x7f469c2ce080&gt;
2023-11-29 08:27:54,387 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "POST /erasure/big_file?uploads HTTP/1.1" 200 285
2023-11-29 08:27:54,387 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Wed, 29 Nov 2023 08:27:54 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Wed, 29 Nov 2023 08:27:54 GMT', 'Pragma': 'no-cache', 'Content-Type': 'application/xml', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'Server': 'Ozone', 'x-amz-id-2': 'sUBBZJ4VZAaf7z', 'x-amz-request-id': '085f117a-ea16-48ba-bcef-07ad0a511726', 'Content-Length': '285'}
2023-11-29 08:27:54,387 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
b'&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;&lt;InitiateMultipartUploadResult xmlns="http://s3.amazonaws.com/doc/2006-03-01/"&gt;&lt;Bucket&gt;erasure&lt;/Bucket&gt;&lt;Key&gt;big_file&lt;/Key&gt;&lt;UploadId&gt;9988a2be-9bee-4437-81cf-41f7ef269fc3-111492888945033293&lt;/UploadId&gt;&lt;/InitiateMultipartUploadResult&gt;'
2023-11-29 08:27:54,389 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.CreateMultipartUpload: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f469c36fda0&gt;
2023-11-29 08:27:54,389 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2023-11-29 08:27:54,389 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.CreateMultipartUpload: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7f469c36fd68&gt;&gt;
2023-11-29 08:27:54,389 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.CreateMultipartUpload: calling handler &lt;function enhance_error_msg at 0x7f469ca02598&gt;
2023-11-29 08:27:54,389 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-11-29 08:27:54,389 - ThreadPoolExecutor-0_2 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'part_number': 2, 'extra_args': {}}) done waiting for dependent futures
2023-11-29 08:27:54,390 - ThreadPoolExecutor-0_2 - s3transfer.tasks - DEBUG - Executing task UploadPartTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'part_number': 2, 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f469c36f828&gt;, 'fileobj': &lt;s3transfer.utils.ReadFileChunk object at 0x7f469815bb00&gt;, 'bucket': 'erasure', 'key': 'big_file', 'part_number': 2, 'extra_args': {}, 'upload_id': '9988a2be-9bee-4437-81cf-41f7ef269fc3-111492888945033293'}
2023-11-29 08:27:54,390 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function sse_md5 at 0x7f469e4d3ae8&gt;
2023-11-29 08:27:54,390 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function convert_body_to_file_like_object at 0x7f469e4d7f28&gt;
2023-11-29 08:27:54,390 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function validate_bucket_name at 0x7f469e4d3a60&gt;
2023-11-29 08:27:54,390 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7f469c36fd68&gt;&gt;
2023-11-29 08:27:54,390 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7f469c33f160&gt;&gt;
2023-11-29 08:27:54,390 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function generate_idempotent_uuid at 0x7f469e4d38c8&gt;
2023-11-29 08:27:54,391 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function conditionally_calculate_md5 at 0x7f469ee7a0d0&gt;
2023-11-29 08:27:54,390 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - UploadPartTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'part_number': 1, 'extra_args': {}}) done waiting for dependent futures
2023-11-29 08:27:54,390 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}) about to wait for &lt;s3transfer.futures.ExecutorFuture object at 0x7f469815b9e8&gt;
2023-11-29 08:27:54,391 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - Executing task UploadPartTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'part_number': 1, 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f469c36f828&gt;, 'fileobj': &lt;s3transfer.utils.ReadFileChunk object at 0x7f469c2ce1d0&gt;, 'bucket': 'erasure', 'key': 'big_file', 'part_number': 1, 'extra_args': {}, 'upload_id': '9988a2be-9bee-4437-81cf-41f7ef269fc3-111492888945033293'}
2023-11-29 08:27:54,391 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function sse_md5 at 0x7f469e4d3ae8&gt;
2023-11-29 08:27:54,392 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function convert_body_to_file_like_object at 0x7f469e4d7f28&gt;
2023-11-29 08:27:54,392 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function validate_bucket_name at 0x7f469e4d3a60&gt;
2023-11-29 08:27:54,392 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7f469c36fd68&gt;&gt;
2023-11-29 08:27:54,392 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7f469c33f160&gt;&gt;
2023-11-29 08:27:54,392 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.UploadPart: calling handler &lt;function generate_idempotent_uuid at 0x7f469e4d38c8&gt;
2023-11-29 08:27:54,392 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function conditionally_calculate_md5 at 0x7f469ee7a0d0&gt;
2023-11-29 08:27:54,394 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_expect_header at 0x7f469e4d3d90&gt;
2023-11-29 08:27:54,394 - ThreadPoolExecutor-0_2 - botocore.handlers - DEBUG - Adding expect 100 continue header to request.
2023-11-29 08:27:54,394 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7f469c36fd68&gt;&gt;
2023-11-29 08:27:54,394 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_recursion_detection_header at 0x7f469e4d3598&gt;
2023-11-29 08:27:54,395 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function inject_api_version_header_if_needed at 0x7f469e4d90d0&gt;
2023-11-29 08:27:54,395 - ThreadPoolExecutor-0_2 - botocore.endpoint - DEBUG - Making request for OperationModel(name=UploadPart) with params: {'url_path': '/erasure/big_file', 'query_string': {'uploadId': '9988a2be-9bee-4437-81cf-41f7ef269fc3-111492888945033293', 'partNumber': 2}, 'method': 'PUT', 'headers': {'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10', 'Content-MD5': '5/sikt0o1PuDidTMNSFZDw==', 'Expect': '100-continue'}, 'body': &lt;s3transfer.utils.ReadFileChunk object at 0x7f469815bb00&gt;, 'url': 'http://s3g:9878/erasure/big_file?uploadId=9988a2be-9bee-4437-81cf-41f7ef269fc3-111492888945033293&amp;partNumber=2', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f469c36fa20&gt;, 'has_streaming_input': True, 'auth_type': None, 'signing': {'bucket': 'erasure'}}}
2023-11-29 08:27:54,395 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function signal_not_transferring at 0x7f46a09fc158&gt;
2023-11-29 08:27:54,395 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f469c36f9e8&gt;&gt;
2023-11-29 08:27:54,395 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event choose-signer.s3.UploadPart: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7f469c33f1d0&gt;&gt;
2023-11-29 08:27:54,395 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event choose-signer.s3.UploadPart: calling handler &lt;function set_operation_specific_signer at 0x7f469e4d37b8&gt;
2023-11-29 08:27:54,395 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event before-sign.s3.UploadPart: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7f469c33f1d0&gt;&gt;
2023-11-29 08:27:54,397 - ThreadPoolExecutor-0_2 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2023-11-29 08:27:54,397 - ThreadPoolExecutor-0_2 - botocore.auth - DEBUG - CanonicalRequest:
PUT
/erasure/big_file
partNumber=2&amp;uploadId=9988a2be-9bee-4437-81cf-41f7ef269fc3-111492888945033293
content-md5:5/sikt0o1PuDidTMNSFZDw==
host:s3g:9878
x-amz-content-sha256:e0ece4613f1859d6ef4cdc808b6a45b37af5779bac11ef66fb1c23c209bf884f
x-amz-date:20231129T082754Z

content-md5;host;x-amz-content-sha256;x-amz-date
e0ece4613f1859d6ef4cdc808b6a45b37af5779bac11ef66fb1c23c209bf884f
2023-11-29 08:27:54,397 - ThreadPoolExecutor-0_2 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20231129T082754Z
20231129/us-west-1/s3/aws4_request
d8f2474dca6962b990d0aadf8238f54691b4df3cd18ea38178eb4beab16c3e1c
2023-11-29 08:27:54,397 - ThreadPoolExecutor-0_2 - botocore.auth - DEBUG - Signature:
2422a4ff6f0ade546fc4cc0ab051ee23ff951225f23e88ec8a225a0891f3070b
2023-11-29 08:27:54,397 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function signal_transferring at 0x7f46a09fc1e0&gt;
2023-11-29 08:27:54,397 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function add_retry_headers at 0x7f469e4d9730&gt;
2023-11-29 08:27:54,398 - ThreadPoolExecutor-0_2 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=PUT, url=http://s3g:9878/erasure/big_file?uploadId=9988a2be-9bee-4437-81cf-41f7ef269fc3-111492888945033293&amp;partNumber=2, headers={'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10', 'Content-MD5': b'5/sikt0o1PuDidTMNSFZDw==', 'Expect': b'100-continue', 'X-Amz-Date': b'20231129T082754Z', 'X-Amz-Content-SHA256': b'e0ece4613f1859d6ef4cdc808b6a45b37af5779bac11ef66fb1c23c209bf884f', 'Authorization': b'AWS4-HMAC-SHA256 Credential=dlfknslnfslf/20231129/us-west-1/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date, Signature=2422a4ff6f0ade546fc4cc0ab051ee23ff951225f23e88ec8a225a0891f3070b', 'amz-sdk-invocation-id': b'666f10a6-265c-4f3e-9a4e-d52c91115690', 'amz-sdk-request': b'attempt=1', 'Content-Length': '1611392'}&gt;
2023-11-29 08:27:54,398 - ThreadPoolExecutor-0_2 - botocore.awsrequest - DEBUG - Waiting for 100 Continue response.
2023-11-29 08:27:54,401 - ThreadPoolExecutor-0_2 - botocore.awsrequest - DEBUG - 100 Continue response seen, now sending request body.
2023-11-29 08:27:54,407 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_expect_header at 0x7f469e4d3d90&gt;
2023-11-29 08:27:54,408 - ThreadPoolExecutor-0_1 - botocore.handlers - DEBUG - Adding expect 100 continue header to request.
2023-11-29 08:27:54,408 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7f469c36fd68&gt;&gt;
2023-11-29 08:27:54,408 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function add_recursion_detection_header at 0x7f469e4d3598&gt;
2023-11-29 08:27:54,408 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.UploadPart: calling handler &lt;function inject_api_version_header_if_needed at 0x7f469e4d90d0&gt;
2023-11-29 08:27:54,408 - ThreadPoolExecutor-0_1 - botocore.endpoint - DEBUG - Making request for OperationModel(name=UploadPart) with params: {'url_path': '/erasure/big_file', 'query_string': {'uploadId': '9988a2be-9bee-4437-81cf-41f7ef269fc3-111492888945033293', 'partNumber': 1}, 'method': 'PUT', 'headers': {'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10', 'Content-MD5': 'SlGBICAEmpHiy0g37yNLpQ==', 'Expect': '100-continue'}, 'body': &lt;s3transfer.utils.ReadFileChunk object at 0x7f469c2ce1d0&gt;, 'url': 'http://s3g:9878/erasure/big_file?uploadId=9988a2be-9bee-4437-81cf-41f7ef269fc3-111492888945033293&amp;partNumber=1', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f469c36fa20&gt;, 'has_streaming_input': True, 'auth_type': None, 'signing': {'bucket': 'erasure'}}}
2023-11-29 08:27:54,408 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function signal_not_transferring at 0x7f46a09fc158&gt;
2023-11-29 08:27:54,408 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f469c36f9e8&gt;&gt;
2023-11-29 08:27:54,408 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event choose-signer.s3.UploadPart: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7f469c33f1d0&gt;&gt;
2023-11-29 08:27:54,408 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event choose-signer.s3.UploadPart: calling handler &lt;function set_operation_specific_signer at 0x7f469e4d37b8&gt;
2023-11-29 08:27:54,409 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-sign.s3.UploadPart: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7f469c33f1d0&gt;&gt;
2023-11-29 08:27:54,420 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2023-11-29 08:27:54,420 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - CanonicalRequest:
PUT
/erasure/big_file
partNumber=1&amp;uploadId=9988a2be-9bee-4437-81cf-41f7ef269fc3-111492888945033293
content-md5:SlGBICAEmpHiy0g37yNLpQ==
host:s3g:9878
x-amz-content-sha256:9be10579b5eb98a74209f2a5733ab171bbeec46d8b73c0b7c6ebfa54ca42e58c
x-amz-date:20231129T082754Z

content-md5;host;x-amz-content-sha256;x-amz-date
9be10579b5eb98a74209f2a5733ab171bbeec46d8b73c0b7c6ebfa54ca42e58c
2023-11-29 08:27:54,420 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20231129T082754Z
20231129/us-west-1/s3/aws4_request
5cdd6dd7b6466b5048e8ddc66c7547b2171e1920a67d7dc9fe0faa683250f8e9
2023-11-29 08:27:54,420 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - Signature:
698853891168d85cab87685095049fc54fed5269fd11d16091d913c7ca3583d9
2023-11-29 08:27:54,420 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function signal_transferring at 0x7f46a09fc1e0&gt;
2023-11-29 08:27:54,421 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.UploadPart: calling handler &lt;function add_retry_headers at 0x7f469e4d9730&gt;
2023-11-29 08:27:54,421 - ThreadPoolExecutor-0_1 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=PUT, url=http://s3g:9878/erasure/big_file?uploadId=9988a2be-9bee-4437-81cf-41f7ef269fc3-111492888945033293&amp;partNumber=1, headers={'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10', 'Content-MD5': b'SlGBICAEmpHiy0g37yNLpQ==', 'Expect': b'100-continue', 'X-Amz-Date': b'20231129T082754Z', 'X-Amz-Content-SHA256': b'9be10579b5eb98a74209f2a5733ab171bbeec46d8b73c0b7c6ebfa54ca42e58c', 'Authorization': b'AWS4-HMAC-SHA256 Credential=dlfknslnfslf/20231129/us-west-1/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date, Signature=698853891168d85cab87685095049fc54fed5269fd11d16091d913c7ca3583d9', 'amz-sdk-invocation-id': b'a0028c9d-8833-46c8-b2ed-d28cab0a05a1', 'amz-sdk-request': b'attempt=1', 'Content-Length': '8388608'}&gt;
2023-11-29 08:27:54,421 - ThreadPoolExecutor-0_1 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (2): s3g:9878
2023-11-29 08:27:54,422 - ThreadPoolExecutor-0_1 - botocore.awsrequest - DEBUG - Waiting for 100 Continue response.
Completed 256.0 KiB/9.5 MiB (4.6 MiB/s) with 1 file(s) remaining
2023-11-29 08:27:54,423 - ThreadPoolExecutor-0_1 - botocore.awsrequest - DEBUG - 100 Continue response seen, now sending request body.
Completed 512.0 KiB/9.5 MiB (8.0 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/9.5 MiB (11.6 MiB/s) with 1 file(s) remaining
Completed 1.0 MiB/9.5 MiB (15.2 MiB/s) with 1 file(s) remaining  
Completed 1.2 MiB/9.5 MiB (18.7 MiB/s) with 1 file(s) remaining  
Completed 1.5 MiB/9.5 MiB (22.2 MiB/s) with 1 file(s) remaining  
Completed 1.8 MiB/9.5 MiB (22.0 MiB/s) with 1 file(s) remaining  
Completed 2.0 MiB/9.5 MiB (24.9 MiB/s) with 1 file(s) remaining  
Completed 2.2 MiB/9.5 MiB (27.9 MiB/s) with 1 file(s) remaining  
Completed 2.5 MiB/9.5 MiB (30.8 MiB/s) with 1 file(s) remaining  
Completed 2.8 MiB/9.5 MiB (33.8 MiB/s) with 1 file(s) remaining  
Completed 3.0 MiB/9.5 MiB (36.8 MiB/s) with 1 file(s) remaining  
Completed 3.2 MiB/9.5 MiB (39.0 MiB/s) with 1 file(s) remaining  
Completed 3.5 MiB/9.5 MiB (41.5 MiB/s) with 1 file(s) remaining  
Completed 3.8 MiB/9.5 MiB (44.0 MiB/s) with 1 file(s) remaining  
Completed 4.0 MiB/9.5 MiB (46.5 MiB/s) with 1 file(s) remaining  
Completed 4.2 MiB/9.5 MiB (48.8 MiB/s) with 1 file(s) remaining  
Completed 4.5 MiB/9.5 MiB (51.2 MiB/s) with 1 file(s) remaining  
Completed 4.8 MiB/9.5 MiB (53.5 MiB/s) with 1 file(s) remaining  
Completed 5.0 MiB/9.5 MiB (55.8 MiB/s) with 1 file(s) remaining  
Completed 5.2 MiB/9.5 MiB (57.9 MiB/s) with 1 file(s) remaining  
Completed 5.5 MiB/9.5 MiB (57.8 MiB/s) with 1 file(s) remaining  
Completed 5.8 MiB/9.5 MiB (59.9 MiB/s) with 1 file(s) remaining  
Completed 6.0 MiB/9.5 MiB (62.1 MiB/s) with 1 file(s) remaining  
Completed 6.2 MiB/9.5 MiB (64.3 MiB/s) with 1 file(s) remaining  
Completed 6.5 MiB/9.5 MiB (66.5 MiB/s) with 1 file(s) remaining  
Completed 6.8 MiB/9.5 MiB (68.7 MiB/s) with 1 file(s) remaining  
Completed 7.0 MiB/9.5 MiB (70.9 MiB/s) with 1 file(s) remaining  
Completed 7.2 MiB/9.5 MiB (63.3 MiB/s) with 1 file(s) remaining  
Completed 7.5 MiB/9.5 MiB (65.1 MiB/s) with 1 file(s) remaining  
Completed 7.8 MiB/9.5 MiB (66.8 MiB/s) with 1 file(s) remaining  
Completed 8.0 MiB/9.5 MiB (68.6 MiB/s) with 1 file(s) remaining  
Completed 8.2 MiB/9.5 MiB (64.6 MiB/s) with 1 file(s) remaining  
Completed 8.5 MiB/9.5 MiB (66.0 MiB/s) with 1 file(s) remaining  
Completed 8.8 MiB/9.5 MiB (64.7 MiB/s) with 1 file(s) remaining  
Completed 9.0 MiB/9.5 MiB (66.0 MiB/s) with 1 file(s) remaining  
Completed 9.2 MiB/9.5 MiB (67.5 MiB/s) with 1 file(s) remaining  
Completed 9.5 MiB/9.5 MiB (69.1 MiB/s) with 1 file(s) remaining  
2023-11-29 08:27:54,599 - ThreadPoolExecutor-0_2 - urllib3.connectionpool - DEBUG - http://s3g:9878 "PUT /erasure/big_file?uploadId=9988a2be-9bee-4437-81cf-41f7ef269fc3-111492888945033293&amp;partNumber=2 HTTP/1.1" 200 0
2023-11-29 08:27:54,599 - ThreadPoolExecutor-0_2 - botocore.parsers - DEBUG - Response headers: {'Date': 'Wed, 29 Nov 2023 08:27:54 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Wed, 29 Nov 2023 08:27:54 GMT', 'Pragma': 'no-cache', 'Content-Type': 'text/plain;charset=utf-8', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': '/s3v/erasure/big_file-9988a2be-9bee-4437-81cf-41f7ef269fc3-111492888945033293-2', 'Server': 'Ozone', 'x-amz-id-2': 'Mi892SAcI2dh', 'x-amz-request-id': 'f5b1560a-1bec-4168-90a6-f186de8d71e7', 'Content-Length': '0'}
2023-11-29 08:27:54,599 - ThreadPoolExecutor-0_2 - botocore.parsers - DEBUG - Response body:
b''
2023-11-29 08:27:54,600 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f469c36fda0&gt;
2023-11-29 08:27:54,600 - ThreadPoolExecutor-0_2 - botocore.retryhandler - DEBUG - No retry needed.
2023-11-29 08:27:54,600 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7f469c36fd68&gt;&gt;
2023-11-29 08:27:54,600 - ThreadPoolExecutor-0_2 - botocore.hooks - DEBUG - Event after-call.s3.UploadPart: calling handler &lt;function enhance_error_msg at 0x7f469ca02598&gt;
2023-11-29 08:27:54,600 - ThreadPoolExecutor-0_2 - s3transfer.utils - DEBUG - Releasing acquire 0/None
Completed 9.5 MiB/9.5 MiB (41.2 MiB/s) with 1 file(s) remaining  
2023-11-29 08:27:54,754 - ThreadPoolExecutor-0_1 - urllib3.connectionpool - DEBUG - http://s3g:9878 "PUT /erasure/big_file?uploadId=9988a2be-9bee-4437-81cf-41f7ef269fc3-111492888945033293&amp;partNumber=1 HTTP/1.1" 200 0
2023-11-29 08:27:54,754 - ThreadPoolExecutor-0_1 - botocore.parsers - DEBUG - Response headers: {'Date': 'Wed, 29 Nov 2023 08:27:54 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Wed, 29 Nov 2023 08:27:54 GMT', 'Pragma': 'no-cache', 'Content-Type': 'text/plain;charset=utf-8', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': '/s3v/erasure/big_file-9988a2be-9bee-4437-81cf-41f7ef269fc3-111492888945033293-1', 'Server': 'Ozone', 'x-amz-id-2': 'GFJR7m40', 'x-amz-request-id': 'b5dcd60d-b652-4d7e-91d2-127681f96753', 'Content-Length': '0'}
2023-11-29 08:27:54,755 - ThreadPoolExecutor-0_1 - botocore.parsers - DEBUG - Response body:
b''
2023-11-29 08:27:54,755 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f469c36fda0&gt;
2023-11-29 08:27:54,755 - ThreadPoolExecutor-0_1 - botocore.retryhandler - DEBUG - No retry needed.
2023-11-29 08:27:54,755 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event needs-retry.s3.UploadPart: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7f469c36fd68&gt;&gt;
2023-11-29 08:27:54,755 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event after-call.s3.UploadPart: calling handler &lt;function enhance_error_msg at 0x7f469ca02598&gt;
2023-11-29 08:27:54,755 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-11-29 08:27:54,755 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}) about to wait for &lt;s3transfer.futures.ExecutorFuture object at 0x7f469815bcf8&gt;
2023-11-29 08:27:54,756 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}) done waiting for dependent futures
2023-11-29 08:27:54,756 - ThreadPoolExecutor-0_3 - s3transfer.tasks - DEBUG - Executing task CompleteMultipartUploadTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f469c36f828&gt;, 'bucket': 'erasure', 'key': 'big_file', 'extra_args': {}, 'upload_id': '9988a2be-9bee-4437-81cf-41f7ef269fc3-111492888945033293', 'parts': [{'ETag': '/s3v/erasure/big_file-9988a2be-9bee-4437-81cf-41f7ef269fc3-111492888945033293-1', 'PartNumber': 1}, {'ETag': '/s3v/erasure/big_file-9988a2be-9bee-4437-81cf-41f7ef269fc3-111492888945033293-2', 'PartNumber': 2}]}
2023-11-29 08:27:54,757 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;function validate_bucket_name at 0x7f469e4d3a60&gt;
2023-11-29 08:27:54,757 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7f469c36fd68&gt;&gt;
2023-11-29 08:27:54,757 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7f469c33f160&gt;&gt;
2023-11-29 08:27:54,757 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-parameter-build.s3.CompleteMultipartUpload: calling handler &lt;function generate_idempotent_uuid at 0x7f469e4d38c8&gt;
2023-11-29 08:27:54,758 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-call.s3.CompleteMultipartUpload: calling handler &lt;function add_expect_header at 0x7f469e4d3d90&gt;
2023-11-29 08:27:54,758 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-call.s3.CompleteMultipartUpload: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7f469c36fd68&gt;&gt;
2023-11-29 08:27:54,758 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-call.s3.CompleteMultipartUpload: calling handler &lt;function add_recursion_detection_header at 0x7f469e4d3598&gt;
2023-11-29 08:27:54,758 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-call.s3.CompleteMultipartUpload: calling handler &lt;function inject_api_version_header_if_needed at 0x7f469e4d90d0&gt;
2023-11-29 08:27:54,758 - ThreadPoolExecutor-0_3 - botocore.endpoint - DEBUG - Making request for OperationModel(name=CompleteMultipartUpload) with params: {'url_path': '/erasure/big_file', 'query_string': {'uploadId': '9988a2be-9bee-4437-81cf-41f7ef269fc3-111492888945033293'}, 'method': 'POST', 'headers': {'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10'}, 'body': b'&lt;CompleteMultipartUpload xmlns="http://s3.amazonaws.com/doc/2006-03-01/"&gt;&lt;Part&gt;&lt;ETag&gt;/s3v/erasure/big_file-9988a2be-9bee-4437-81cf-41f7ef269fc3-111492888945033293-1&lt;/ETag&gt;&lt;PartNumber&gt;1&lt;/PartNumber&gt;&lt;/Part&gt;&lt;Part&gt;&lt;ETag&gt;/s3v/erasure/big_file-9988a2be-9bee-4437-81cf-41f7ef269fc3-111492888945033293-2&lt;/ETag&gt;&lt;PartNumber&gt;2&lt;/PartNumber&gt;&lt;/Part&gt;&lt;/CompleteMultipartUpload&gt;', 'url': 'http://s3g:9878/erasure/big_file?uploadId=9988a2be-9bee-4437-81cf-41f7ef269fc3-111492888945033293', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f469c36fa20&gt;, 'has_streaming_input': False, 'auth_type': None, 'signing': {'bucket': 'erasure'}}}
2023-11-29 08:27:54,758 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event request-created.s3.CompleteMultipartUpload: calling handler &lt;function signal_not_transferring at 0x7f46a09fc158&gt;
2023-11-29 08:27:54,759 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event request-created.s3.CompleteMultipartUpload: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f469c36f9e8&gt;&gt;
2023-11-29 08:27:54,759 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event choose-signer.s3.CompleteMultipartUpload: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7f469c33f1d0&gt;&gt;
2023-11-29 08:27:54,759 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event choose-signer.s3.CompleteMultipartUpload: calling handler &lt;function set_operation_specific_signer at 0x7f469e4d37b8&gt;
2023-11-29 08:27:54,759 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event before-sign.s3.CompleteMultipartUpload: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7f469c33f1d0&gt;&gt;
2023-11-29 08:27:54,759 - ThreadPoolExecutor-0_3 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2023-11-29 08:27:54,759 - ThreadPoolExecutor-0_3 - botocore.auth - DEBUG - CanonicalRequest:
POST
/erasure/big_file
uploadId=9988a2be-9bee-4437-81cf-41f7ef269fc3-111492888945033293
host:s3g:9878
x-amz-content-sha256:3447a13217d19bbd9ddc0b09271c643663a2002e6de661fbb84717accf83e2f9
x-amz-date:20231129T082754Z

host;x-amz-content-sha256;x-amz-date
3447a13217d19bbd9ddc0b09271c643663a2002e6de661fbb84717accf83e2f9
2023-11-29 08:27:54,760 - ThreadPoolExecutor-0_3 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20231129T082754Z
20231129/us-west-1/s3/aws4_request
d5ed5132d5322cd06dca9c51c1fed4a841373d230984e53b1eb8cf5bbf5018b3
2023-11-29 08:27:54,760 - ThreadPoolExecutor-0_3 - botocore.auth - DEBUG - Signature:
707e1e62aeceed125b3d88986dee52e44ff53a85baf1ec4f827029eb11c3efd7
2023-11-29 08:27:54,760 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event request-created.s3.CompleteMultipartUpload: calling handler &lt;function signal_transferring at 0x7f46a09fc1e0&gt;
2023-11-29 08:27:54,760 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event request-created.s3.CompleteMultipartUpload: calling handler &lt;function add_retry_headers at 0x7f469e4d9730&gt;
2023-11-29 08:27:54,760 - ThreadPoolExecutor-0_3 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=POST, url=http://s3g:9878/erasure/big_file?uploadId=9988a2be-9bee-4437-81cf-41f7ef269fc3-111492888945033293, headers={'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10', 'X-Amz-Date': b'20231129T082754Z', 'X-Amz-Content-SHA256': b'3447a13217d19bbd9ddc0b09271c643663a2002e6de661fbb84717accf83e2f9', 'Authorization': b'AWS4-HMAC-SHA256 Credential=dlfknslnfslf/20231129/us-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=707e1e62aeceed125b3d88986dee52e44ff53a85baf1ec4f827029eb11c3efd7', 'amz-sdk-invocation-id': b'31d6a4a3-c3b0-4241-b801-02ce49b9f08e', 'amz-sdk-request': b'attempt=1', 'Content-Length': '361'}&gt;
2023-11-29 08:27:54,776 - ThreadPoolExecutor-0_3 - urllib3.connectionpool - DEBUG - http://s3g:9878 "POST /erasure/big_file?uploadId=9988a2be-9bee-4437-81cf-41f7ef269fc3-111492888945033293 HTTP/1.1" 200 286
2023-11-29 08:27:54,777 - ThreadPoolExecutor-0_3 - botocore.parsers - DEBUG - Response headers: {'Date': 'Wed, 29 Nov 2023 08:27:54 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Wed, 29 Nov 2023 08:27:54 GMT', 'Pragma': 'no-cache', 'Content-Type': 'application/xml', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'Server': 'Ozone', 'x-amz-id-2': '3zpaueM8', 'x-amz-request-id': '3a42b100-74af-4bf5-9ae3-5b153e63747c', 'Content-Length': '286'}
2023-11-29 08:27:54,777 - ThreadPoolExecutor-0_3 - botocore.parsers - DEBUG - Response body:
b'&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;&lt;CompleteMultipartUploadResult xmlns="http://s3.amazonaws.com/doc/2006-03-01/"&gt;&lt;Location&gt;erasure&lt;/Location&gt;&lt;Bucket&gt;erasure&lt;/Bucket&gt;&lt;Key&gt;big_file&lt;/Key&gt;&lt;ETag&gt;"3d267e5ad888a1f4f8e78f1af907b54e-2"&lt;/ETag&gt;&lt;/CompleteMultipartUploadResult&gt;'
2023-11-29 08:27:54,778 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event needs-retry.s3.CompleteMultipartUpload: calling handler &lt;function check_for_200_error at 0x7f469e4d36a8&gt;
2023-11-29 08:27:54,778 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event needs-retry.s3.CompleteMultipartUpload: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f469c36fda0&gt;
2023-11-29 08:27:54,778 - ThreadPoolExecutor-0_3 - botocore.retryhandler - DEBUG - No retry needed.
2023-11-29 08:27:54,778 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event needs-retry.s3.CompleteMultipartUpload: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7f469c36fd68&gt;&gt;
2023-11-29 08:27:54,778 - ThreadPoolExecutor-0_3 - botocore.hooks - DEBUG - Event after-call.s3.CompleteMultipartUpload: calling handler &lt;function enhance_error_msg at 0x7f469ca02598&gt;
2023-11-29 08:27:54,779 - ThreadPoolExecutor-0_3 - s3transfer.utils - DEBUG - Releasing acquire 0/None
upload: ../../tmp/big_file to s3://erasure/big_file              
2023-11-29 08:27:54,780 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20231129 08:27:54.847" endtime="20231129 08:27:54.848"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:54.849" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:54.848" endtime="20231129 08:27:54.849"/>
</kw>
<status status="PASS" starttime="20231129 08:27:53.978" endtime="20231129 08:27:54.849"/>
</kw>
<msg timestamp="20231129 08:27:54.849" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:53.978" endtime="20231129 08:27:54.850"/>
</kw>
<msg timestamp="20231129 08:27:54.851" level="INFO">${output} = 2023-11-29 08:27:54,316 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10
2023-11-29 08:27:54,316 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20231129 08:27:53.977" endtime="20231129 08:27:54.851"/>
</kw>
<msg timestamp="20231129 08:27:54.852" level="INFO">${result} = 2023-11-29 08:27:54,316 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10
2023-11-29 08:27:54,316 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20231129 08:27:53.977" endtime="20231129 08:27:54.852"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<var>${match}</var>
<var>${etag1}</var>
<arg>${result}</arg>
<arg>(?is)POST /${BUCKET}/big_file\\?uploadId=.*?Response body.*?ETag&gt;"(.*?-2)"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20231129 08:27:54.854" level="INFO">${match} = POST /erasure/big_file?uploadId=9988a2be-9bee-4437-81cf-41f7ef269fc3-111492888945033293 HTTP/1.1" 200 286
2023-11-29 08:27:54,777 - ThreadPoolExecutor-0_3 - botocore.parsers - DEBUG - Response headers...</msg>
<msg timestamp="20231129 08:27:54.854" level="INFO">${etag1} = 3d267e5ad888a1f4f8e78f1af907b54e-2</msg>
<status status="PASS" starttime="20231129 08:27:54.852" endtime="20231129 08:27:54.854"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<var>${file_download_result}</var>
<arg>cp s3://${BUCKET}/big_file /tmp/big_file_downloaded</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:54.859" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp s3://erasure/big_file /tmp/big_file_downloaded 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:55.476" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:55.477" level="INFO">${output} = 2023-11-29 08:27:55,219 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10
2023-11-29 08:27:55,220 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20231129 08:27:54.857" endtime="20231129 08:27:55.477"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:55.478" level="INFO">2023-11-29 08:27:55,219 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10
2023-11-29 08:27:55,220 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', 's3://erasure/big_file', '/tmp/big_file_downloaded']
2023-11-29 08:27:55,220 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7fa6f69709d8&gt;
2023-11-29 08:27:55,220 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7fa6f7764730&gt;
2023-11-29 08:27:55,220 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7fa6f7793ae8&gt;
2023-11-29 08:27:55,221 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2023-11-29 08:27:55,224 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7fa6f6a9c400&gt;
2023-11-29 08:27:55,224 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7fa6f697f048&gt;
2023-11-29 08:27:55,225 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa6fe67f6d8&gt;
2023-11-29 08:27:55,225 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7fa6f697f048&gt;
2023-11-29 08:27:55,226 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa6fe67f6d8&gt;
2023-11-29 08:27:55,227 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa6fe67f6d8&gt;
2023-11-29 08:27:55,227 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fa6f77672b0&gt;
2023-11-29 08:27:55,227 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa6fe67f6d8&gt;
2023-11-29 08:27:55,227 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fa6f77672b0&gt;
2023-11-29 08:27:55,227 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa6fe67f6d8&gt;
2023-11-29 08:27:55,227 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa6fe67f6d8&gt;
2023-11-29 08:27:55,227 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa6fe67f6d8&gt;
2023-11-29 08:27:55,227 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fa6f77672b0&gt;
2023-11-29 08:27:55,228 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa6fe67f6d8&gt;
2023-11-29 08:27:55,228 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa6fe67f6d8&gt;
2023-11-29 08:27:55,228 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa6fe67f6d8&gt;
2023-11-29 08:27:55,228 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa6fe67f6d8&gt;
2023-11-29 08:27:55,228 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa6fe67f6d8&gt;
2023-11-29 08:27:55,228 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa6fe67f6d8&gt;
2023-11-29 08:27:55,228 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa6fe67f6d8&gt;
2023-11-29 08:27:55,228 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa6fe67f6d8&gt;
2023-11-29 08:27:55,229 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa6fe67f6d8&gt;
2023-11-29 08:27:55,229 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa6fe67f6d8&gt;
2023-11-29 08:27:55,229 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa6fe67f6d8&gt;
2023-11-29 08:27:55,229 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa6fe67f6d8&gt;
2023-11-29 08:27:55,229 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa6fe67f6d8&gt;
2023-11-29 08:27:55,229 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa6fe67f6d8&gt;
2023-11-29 08:27:55,229 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa6fe67f6d8&gt;
2023-11-29 08:27:55,230 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa6fe67f6d8&gt;
2023-11-29 08:27:55,230 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa6fe67f6d8&gt;
2023-11-29 08:27:55,230 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa6fe67f6d8&gt;
2023-11-29 08:27:55,230 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fa6f77672b0&gt;
2023-11-29 08:27:55,230 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa6fe67f6d8&gt;
2023-11-29 08:27:55,230 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa6fe67f6d8&gt;
2023-11-29 08:27:55,230 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa6fe67f6d8&gt;
2023-11-29 08:27:55,230 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fa6f77672b0&gt;
2023-11-29 08:27:55,230 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa6fe67f6d8&gt;
2023-11-29 08:27:55,231 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7fa6f77672b0&gt;
2023-11-29 08:27:55,231 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa6fe67f6d8&gt;
2023-11-29 08:27:55,231 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa6fe67f6d8&gt;
2023-11-29 08:27:55,231 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa6fe67f6d8&gt;
2023-11-29 08:27:55,231 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa6fe67f6d8&gt;
2023-11-29 08:27:55,231 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7fa6fe67f6d8&gt;
2023-11-29 08:27:55,231 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2023-11-29 08:27:55,232 - MainThread - botocore.credentials - INFO - Found credentials in environment variables.
2023-11-29 08:27:55,232 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/endpoints.json
2023-11-29 08:27:55,245 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/sdk-default-configuration.json
2023-11-29 08:27:55,245 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7fa6f8428378&gt;
2023-11-29 08:27:55,246 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/s3/2006-03-01/service-2.json
2023-11-29 08:27:55,255 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7fa6f87022f0&gt;
2023-11-29 08:27:55,255 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7fa6f87020d0&gt;
2023-11-29 08:27:55,256 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-11-29 08:27:55,258 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2023-11-29 08:27:55,258 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/_retry.json
2023-11-29 08:27:55,259 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2023-11-29 08:27:55,260 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-11-29 08:27:55,260 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7fa6f8428378&gt;
2023-11-29 08:27:55,261 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7fa6f87022f0&gt;
2023-11-29 08:27:55,261 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7fa6f87020d0&gt;
2023-11-29 08:27:55,261 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-11-29 08:27:55,263 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2023-11-29 08:27:55,263 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2023-11-29 08:27:55,264 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-11-29 08:27:55,264 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7fa6f8428378&gt;
2023-11-29 08:27:55,266 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7fa6f87022f0&gt;
2023-11-29 08:27:55,266 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7fa6f87020d0&gt;
2023-11-29 08:27:55,266 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-11-29 08:27:55,268 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2023-11-29 08:27:55,268 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2023-11-29 08:27:55,269 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-11-29 08:27:55,270 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2023-11-29 08:27:55,270 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function sse_md5 at 0x7fa6f8441ae8&gt;
2023-11-29 08:27:55,270 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function validate_bucket_name at 0x7fa6f8441a60&gt;
2023-11-29 08:27:55,270 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7fa6f6215320&gt;&gt;
2023-11-29 08:27:55,270 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7fa6f62156d8&gt;&gt;
2023-11-29 08:27:55,270 - MainThread - botocore.hooks - DEBUG - Event before-parameter-build.s3.HeadObject: calling handler &lt;function generate_idempotent_uuid at 0x7fa6f84418c8&gt;
2023-11-29 08:27:55,271 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function add_expect_header at 0x7fa6f8441d90&gt;
2023-11-29 08:27:55,271 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7fa6f6215320&gt;&gt;
2023-11-29 08:27:55,271 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function add_recursion_detection_header at 0x7fa6f8441598&gt;
2023-11-29 08:27:55,271 - MainThread - botocore.hooks - DEBUG - Event before-call.s3.HeadObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7fa6f84470d0&gt;
2023-11-29 08:27:55,271 - MainThread - botocore.endpoint - DEBUG - Making request for OperationModel(name=HeadObject) with params: {'url_path': '/erasure/big_file', 'query_string': {}, 'method': 'HEAD', 'headers': {'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10'}, 'body': b'', 'url': 'http://s3g:9878/erasure/big_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7fa6f62c4f98&gt;, 'has_streaming_input': False, 'auth_type': None, 'signing': {'bucket': 'erasure'}}}
2023-11-29 08:27:55,271 - MainThread - botocore.hooks - DEBUG - Event request-created.s3.HeadObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7fa6f62c4f60&gt;&gt;
2023-11-29 08:27:55,272 - MainThread - botocore.hooks - DEBUG - Event choose-signer.s3.HeadObject: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7fa6f6215748&gt;&gt;
2023-11-29 08:27:55,272 - MainThread - botocore.hooks - DEBUG - Event choose-signer.s3.HeadObject: calling handler &lt;function set_operation_specific_signer at 0x7fa6f84417b8&gt;
2023-11-29 08:27:55,272 - MainThread - botocore.hooks - DEBUG - Event before-sign.s3.HeadObject: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7fa6f6215748&gt;&gt;
2023-11-29 08:27:55,272 - MainThread - botocore.utils - DEBUG - Using S3 path style addressing.
2023-11-29 08:27:55,272 - MainThread - botocore.auth - DEBUG - Calculating signature using v4 auth.
2023-11-29 08:27:55,272 - MainThread - botocore.auth - DEBUG - CanonicalRequest:
HEAD
/erasure/big_file

host:s3g:9878
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20231129T082755Z

host;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2023-11-29 08:27:55,272 - MainThread - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20231129T082755Z
20231129/us-west-1/s3/aws4_request
8e0e32d9d62c2689056d452cd485fda03730d6dc7b405927a81825399cac4107
2023-11-29 08:27:55,272 - MainThread - botocore.auth - DEBUG - Signature:
6bef599645b425e1db40f19381d5ee4a477079c54742ae3d35b0ebeec5b356a2
2023-11-29 08:27:55,272 - MainThread - botocore.hooks - DEBUG - Event request-created.s3.HeadObject: calling handler &lt;function add_retry_headers at 0x7fa6f8447730&gt;
2023-11-29 08:27:55,272 - MainThread - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=HEAD, url=http://s3g:9878/erasure/big_file, headers={'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10', 'X-Amz-Date': b'20231129T082755Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=dlfknslnfslf/20231129/us-west-1/s3/aws4_request, SignedHeaders=host;x-amz-content-sha256;x-amz-date, Signature=6bef599645b425e1db40f19381d5ee4a477079c54742ae3d35b0ebeec5b356a2', 'amz-sdk-invocation-id': b'ebd8697b-1c70-42ec-a2d5-1648e6175481', 'amz-sdk-request': b'attempt=1'}&gt;
2023-11-29 08:27:55,273 - MainThread - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2023-11-29 08:27:55,280 - MainThread - urllib3.connectionpool - DEBUG - http://s3g:9878 "HEAD /erasure/big_file HTTP/1.1" 200 0
2023-11-29 08:27:55,280 - MainThread - botocore.parsers - DEBUG - Response headers: {'Date': 'Wed, 29 Nov 2023 08:27:55 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Wed, 29 Nov 2023 08:27:55 GMT', 'Pragma': 'no-cache', 'Content-Type': 'binary/octet-stream', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': '"3d267e5ad888a1f4f8e78f1af907b54e-2"', 'Last-Modified': 'Wed, 29 Nov 2023 08:27:54 GMT', 'Server': 'Ozone', 'x-amz-id-2': 'UR1Ilx5T', 'x-amz-request-id': '454c7d1e-fc42-4cac-ade8-76d23a3989ad', 'Content-Length': '10000000'}
2023-11-29 08:27:55,280 - MainThread - botocore.parsers - DEBUG - Response body:
b''
2023-11-29 08:27:55,281 - MainThread - botocore.hooks - DEBUG - Event needs-retry.s3.HeadObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7fa6f6215358&gt;
2023-11-29 08:27:55,281 - MainThread - botocore.retryhandler - DEBUG - No retry needed.
2023-11-29 08:27:55,281 - MainThread - botocore.hooks - DEBUG - Event needs-retry.s3.HeadObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7fa6f6215320&gt;&gt;
2023-11-29 08:27:55,281 - MainThread - botocore.hooks - DEBUG - Event after-call.s3.HeadObject: calling handler &lt;function enhance_error_msg at 0x7fa6f6970598&gt;
2023-11-29 08:27:55,282 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2023-11-29 08:27:55,283 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fa6f623c7b8&gt;}) about to wait for the following futures []
2023-11-29 08:27:55,283 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fa6f623c7b8&gt;}) done waiting for dependent futures
2023-11-29 08:27:55,283 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task DownloadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fa6f623c7b8&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7fa6f62dd828&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7fa6f6215978&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7fa6f62159e8&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7fa6f6215b70&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7fa6f623c7b8&gt;, 'io_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7fa6f6215f60&gt;}
2023-11-29 08:27:55,283 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task GetObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {'Range': 'bytes=0-8388607'}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fa6f6215b70&gt; for transfer request: 0.
2023-11-29 08:27:55,283 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2023-11-29 08:27:55,284 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - GetObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {'Range': 'bytes=0-8388607'}}) about to wait for the following futures []
2023-11-29 08:27:55,284 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - GetObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {'Range': 'bytes=0-8388607'}}) done waiting for dependent futures
2023-11-29 08:27:55,284 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task GetObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {'Range': 'bytes=0-8388607'}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7fa6f62dd828&gt;, 'bucket': 'erasure', 'key': 'big_file', 'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fa6f623cbe0&gt;, 'extra_args': {'Range': 'bytes=0-8388607'}, 'callbacks': [functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.ProvideSizeSubscriber object at 0x7fa6f623cba8&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7fa6f623c7b8&gt;), functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.DirectoryCreatorSubscriber object at 0x7fa6f623ca90&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7fa6f623c7b8&gt;), functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.ProvideLastModifiedTimeSubscriber object at 0x7fa6f623cac8&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7fa6f623c7b8&gt;), functools.partial(&lt;bound method BaseResultSubscriber.on_progress of &lt;awscli.customizations.s3.results.DownloadResultSubscriber object at 0x7fa6f623cef0&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7fa6f623c7b8&gt;)], 'max_attempts': 5, 'start_index': 0, 'download_output_manager': &lt;s3transfer.download.DownloadFilenameOutputManager object at 0x7fa6f623c438&gt;, 'io_chunksize': 262144, 'bandwidth_limiter': None}
2023-11-29 08:27:55,284 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function sse_md5 at 0x7fa6f8441ae8&gt;
2023-11-29 08:27:55,284 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function validate_bucket_name at 0x7fa6f8441a60&gt;
2023-11-29 08:27:55,284 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7fa6f62ddd68&gt;&gt;
2023-11-29 08:27:55,285 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7fa6f62ad160&gt;&gt;
2023-11-29 08:27:55,285 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function generate_idempotent_uuid at 0x7fa6f84418c8&gt;
2023-11-29 08:27:55,285 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_expect_header at 0x7fa6f8441d90&gt;
2023-11-29 08:27:55,285 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7fa6f62ddd68&gt;&gt;
2023-11-29 08:27:55,285 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_recursion_detection_header at 0x7fa6f8441598&gt;
2023-11-29 08:27:55,285 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7fa6f84470d0&gt;
2023-11-29 08:27:55,285 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=GetObject) with params: {'url_path': '/erasure/big_file', 'query_string': {}, 'method': 'GET', 'headers': {'Range': 'bytes=0-8388607', 'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10'}, 'body': b'', 'url': 'http://s3g:9878/erasure/big_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7fa6f62dda20&gt;, 'has_streaming_input': False, 'auth_type': None, 'signing': {'bucket': 'erasure'}}}
2023-11-29 08:27:55,286 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function signal_not_transferring at 0x7fa6fa96a158&gt;
2023-11-29 08:27:55,286 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7fa6f62dd9e8&gt;&gt;
2023-11-29 08:27:55,286 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.GetObject: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7fa6f62ad1d0&gt;&gt;
2023-11-29 08:27:55,286 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.GetObject: calling handler &lt;function set_operation_specific_signer at 0x7fa6f84417b8&gt;
2023-11-29 08:27:55,286 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.GetObject: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7fa6f62ad1d0&gt;&gt;
2023-11-29 08:27:55,286 - ThreadPoolExecutor-0_0 - botocore.utils - DEBUG - Using S3 path style addressing.
2023-11-29 08:27:55,286 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2023-11-29 08:27:55,286 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
GET
/erasure/big_file

host:s3g:9878
range:bytes=0-8388607
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20231129T082755Z

host;range;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2023-11-29 08:27:55,286 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20231129T082755Z
20231129/us-west-1/s3/aws4_request
79251f2c8eafdbef579fa4af47be5873c3f8676e542d3b8af6331fd4b800aeb9
2023-11-29 08:27:55,287 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
766a6e8801fc570fb3fd0753869f16907d5792b0f0cbe713c15a25d9c93b7e2b
2023-11-29 08:27:55,287 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function signal_transferring at 0x7fa6fa96a1e0&gt;
2023-11-29 08:27:55,287 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function add_retry_headers at 0x7fa6f8447730&gt;
2023-11-29 08:27:55,287 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=True, method=GET, url=http://s3g:9878/erasure/big_file, headers={'Range': b'bytes=0-8388607', 'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10', 'X-Amz-Date': b'20231129T082755Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=dlfknslnfslf/20231129/us-west-1/s3/aws4_request, SignedHeaders=host;range;x-amz-content-sha256;x-amz-date, Signature=766a6e8801fc570fb3fd0753869f16907d5792b0f0cbe713c15a25d9c93b7e2b', 'amz-sdk-invocation-id': b'de1022d0-1711-446d-a88e-2f0fb48194dd', 'amz-sdk-request': b'attempt=1'}&gt;
2023-11-29 08:27:55,287 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2023-11-29 08:27:55,287 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task GetObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {'Range': 'bytes=8388608-'}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fa6f6215b70&gt; for transfer request: 0.
2023-11-29 08:27:55,288 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2023-11-29 08:27:55,288 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - GetObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {'Range': 'bytes=8388608-'}}) about to wait for the following futures []
2023-11-29 08:27:55,288 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-11-29 08:27:55,288 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - GetObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {'Range': 'bytes=8388608-'}}) done waiting for dependent futures
2023-11-29 08:27:55,289 - ThreadPoolExecutor-0_1 - s3transfer.tasks - DEBUG - Executing task GetObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'big_file', 'extra_args': {'Range': 'bytes=8388608-'}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7fa6f62dd828&gt;, 'bucket': 'erasure', 'key': 'big_file', 'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fa6f623cbe0&gt;, 'extra_args': {'Range': 'bytes=8388608-'}, 'callbacks': [functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.ProvideSizeSubscriber object at 0x7fa6f623cba8&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7fa6f623c7b8&gt;), functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.DirectoryCreatorSubscriber object at 0x7fa6f623ca90&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7fa6f623c7b8&gt;), functools.partial(&lt;bound method BaseSubscriber.on_progress of &lt;awscli.customizations.s3.utils.ProvideLastModifiedTimeSubscriber object at 0x7fa6f623cac8&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7fa6f623c7b8&gt;), functools.partial(&lt;bound method BaseResultSubscriber.on_progress of &lt;awscli.customizations.s3.results.DownloadResultSubscriber object at 0x7fa6f623cef0&gt;&gt;, future=&lt;s3transfer.futures.TransferFuture object at 0x7fa6f623c7b8&gt;)], 'max_attempts': 5, 'start_index': 8388608, 'download_output_manager': &lt;s3transfer.download.DownloadFilenameOutputManager object at 0x7fa6f623c438&gt;, 'io_chunksize': 262144, 'bandwidth_limiter': None}
2023-11-29 08:27:55,289 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function sse_md5 at 0x7fa6f8441ae8&gt;
2023-11-29 08:27:55,289 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function validate_bucket_name at 0x7fa6f8441a60&gt;
2023-11-29 08:27:55,289 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7fa6f62ddd68&gt;&gt;
2023-11-29 08:27:55,289 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7fa6f62ad160&gt;&gt;
2023-11-29 08:27:55,289 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-parameter-build.s3.GetObject: calling handler &lt;function generate_idempotent_uuid at 0x7fa6f84418c8&gt;
2023-11-29 08:27:55,289 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_expect_header at 0x7fa6f8441d90&gt;
2023-11-29 08:27:55,289 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7fa6f62ddd68&gt;&gt;
2023-11-29 08:27:55,289 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function add_recursion_detection_header at 0x7fa6f8441598&gt;
2023-11-29 08:27:55,289 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-call.s3.GetObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7fa6f84470d0&gt;
2023-11-29 08:27:55,289 - ThreadPoolExecutor-0_1 - botocore.endpoint - DEBUG - Making request for OperationModel(name=GetObject) with params: {'url_path': '/erasure/big_file', 'query_string': {}, 'method': 'GET', 'headers': {'Range': 'bytes=8388608-', 'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10'}, 'body': b'', 'url': 'http://s3g:9878/erasure/big_file', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7fa6f62dda20&gt;, 'has_streaming_input': False, 'auth_type': None, 'signing': {'bucket': 'erasure'}}}
2023-11-29 08:27:55,289 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function signal_not_transferring at 0x7fa6fa96a158&gt;
2023-11-29 08:27:55,289 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7fa6f62dd9e8&gt;&gt;
2023-11-29 08:27:55,290 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event choose-signer.s3.GetObject: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7fa6f62ad1d0&gt;&gt;
2023-11-29 08:27:55,290 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event choose-signer.s3.GetObject: calling handler &lt;function set_operation_specific_signer at 0x7fa6f84417b8&gt;
2023-11-29 08:27:55,290 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event before-sign.s3.GetObject: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7fa6f62ad1d0&gt;&gt;
2023-11-29 08:27:55,290 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2023-11-29 08:27:55,290 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - CanonicalRequest:
GET
/erasure/big_file

host:s3g:9878
range:bytes=8388608-
x-amz-content-sha256:e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
x-amz-date:20231129T082755Z

host;range;x-amz-content-sha256;x-amz-date
e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
2023-11-29 08:27:55,290 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20231129T082755Z
20231129/us-west-1/s3/aws4_request
654486527f3b55414e8b151ae1ac9fcfd64c10fd1c18cdc6bd5942818c9f8bfb
2023-11-29 08:27:55,290 - ThreadPoolExecutor-0_1 - botocore.auth - DEBUG - Signature:
f0eb8cceaf4743bb9c7a13dccf9870f664b7803cffb671a13efc5705d1c4507f
2023-11-29 08:27:55,290 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function signal_transferring at 0x7fa6fa96a1e0&gt;
2023-11-29 08:27:55,290 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event request-created.s3.GetObject: calling handler &lt;function add_retry_headers at 0x7fa6f8447730&gt;
2023-11-29 08:27:55,290 - ThreadPoolExecutor-0_1 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=True, method=GET, url=http://s3g:9878/erasure/big_file, headers={'Range': b'bytes=8388608-', 'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10', 'X-Amz-Date': b'20231129T082755Z', 'X-Amz-Content-SHA256': b'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855', 'Authorization': b'AWS4-HMAC-SHA256 Credential=dlfknslnfslf/20231129/us-west-1/s3/aws4_request, SignedHeaders=host;range;x-amz-content-sha256;x-amz-date, Signature=f0eb8cceaf4743bb9c7a13dccf9870f664b7803cffb671a13efc5705d1c4507f', 'amz-sdk-invocation-id': b'b9bc3087-d9aa-499b-9a96-f5a145afef55', 'amz-sdk-request': b'attempt=1'}&gt;
2023-11-29 08:27:55,292 - ThreadPoolExecutor-0_1 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (2): s3g:9878
2023-11-29 08:27:55,317 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "GET /erasure/big_file HTTP/1.1" 206 8388608
2023-11-29 08:27:55,317 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Wed, 29 Nov 2023 08:27:55 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Wed, 29 Nov 2023 08:27:55 GMT', 'Pragma': 'no-cache', 'Content-Type': 'application/octet-stream', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'Content-Range': 'bytes 0-8388607/10000000', 'ETag': '"3d267e5ad888a1f4f8e78f1af907b54e-2"', 'Accept-Ranges': 'bytes', 'Last-Modified': 'Wed, 29 Nov 2023 08:27:54 GMT', 'Server': 'Ozone', 'x-amz-id-2': '6oH01aa5khxT', 'x-amz-request-id': 'f0dc4a5f-77f0-4ead-91cc-ac70efc07903', 'Content-Length': '8388608'}
2023-11-29 08:27:55,318 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
&lt;botocore.response.StreamingBody object at 0x7fa6f4c5d978&gt;
2023-11-29 08:27:55,319 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7fa6f62ddda0&gt;
2023-11-29 08:27:55,319 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2023-11-29 08:27:55,319 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7fa6f62ddd68&gt;&gt;
2023-11-29 08:27:55,319 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.GetObject: calling handler &lt;function enhance_error_msg at 0x7fa6f6970598&gt;
2023-11-29 08:27:55,320 - ThreadPoolExecutor-0_1 - urllib3.connectionpool - DEBUG - http://s3g:9878 "GET /erasure/big_file HTTP/1.1" 206 1611392
2023-11-29 08:27:55,321 - ThreadPoolExecutor-0_1 - botocore.parsers - DEBUG - Response headers: {'Date': 'Wed, 29 Nov 2023 08:27:55 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Wed, 29 Nov 2023 08:27:55 GMT', 'Pragma': 'no-cache', 'Content-Type': 'application/octet-stream', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'Content-Range': 'bytes 8388608-9999999/10000000', 'ETag': '"3d267e5ad888a1f4f8e78f1af907b54e-2"', 'Accept-Ranges': 'bytes', 'Last-Modified': 'Wed, 29 Nov 2023 08:27:54 GMT', 'Server': 'Ozone', 'x-amz-id-2': 'ACrslbyVJA0n', 'x-amz-request-id': 'a13cb902-d9f7-4e54-8dd3-728019d91d2d', 'Content-Length': '1611392'}
Completed 256.0 KiB/9.5 MiB (6.6 MiB/s) with 1 file(s) remaining
2023-11-29 08:27:55,321 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 0}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fa6f6215f60&gt; for transfer request: 0.
2023-11-29 08:27:55,323 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2023-11-29 08:27:55,322 - ThreadPoolExecutor-0_1 - botocore.parsers - DEBUG - Response body:
&lt;botocore.response.StreamingBody object at 0x7fa6f4c5d630&gt;
2023-11-29 08:27:55,326 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7fa6f62ddda0&gt;
2023-11-29 08:27:55,326 - ThreadPoolExecutor-0_1 - botocore.retryhandler - DEBUG - No retry needed.
2023-11-29 08:27:55,326 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event needs-retry.s3.GetObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7fa6f62ddd68&gt;&gt;
2023-11-29 08:27:55,326 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 0}) about to wait for the following futures []
2023-11-29 08:27:55,326 - ThreadPoolExecutor-0_1 - botocore.hooks - DEBUG - Event after-call.s3.GetObject: calling handler &lt;function enhance_error_msg at 0x7fa6f6970598&gt;
Completed 512.0 KiB/9.5 MiB (11.5 MiB/s) with 1 file(s) remaining
2023-11-29 08:27:55,326 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 0}) done waiting for dependent futures
2023-11-29 08:27:55,327 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 0}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fa6f623cbe0&gt;, 'offset': 0}
2023-11-29 08:27:55,327 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 262144}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fa6f6215f60&gt; for transfer request: 0.
2023-11-29 08:27:55,328 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 768.0 KiB/9.5 MiB (16.9 MiB/s) with 1 file(s) remaining
2023-11-29 08:27:55,328 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 524288}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fa6f6215f60&gt; for transfer request: 0.
Completed 1.0 MiB/9.5 MiB (22.1 MiB/s) with 1 file(s) remaining  
2023-11-29 08:27:55,329 - ThreadPoolExecutor-0_1 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 8388608}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fa6f6215f60&gt; for transfer request: 0.
2023-11-29 08:27:55,329 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2023-11-29 08:27:55,329 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-11-29 08:27:55,329 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 262144}) about to wait for the following futures []
2023-11-29 08:27:55,329 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 262144}) done waiting for dependent futures
2023-11-29 08:27:55,330 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 262144}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fa6f623cbe0&gt;, 'offset': 262144}
Completed 1.2 MiB/9.5 MiB (27.0 MiB/s) with 1 file(s) remaining  
2023-11-29 08:27:55,330 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 786432}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fa6f6215f60&gt; for transfer request: 0.
2023-11-29 08:27:55,330 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 1.5 MiB/9.5 MiB (31.9 MiB/s) with 1 file(s) remaining  
2023-11-29 08:27:55,331 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 1048576}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fa6f6215f60&gt; for transfer request: 0.
2023-11-29 08:27:55,331 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 1.8 MiB/9.5 MiB (36.8 MiB/s) with 1 file(s) remaining  
2023-11-29 08:27:55,329 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Acquiring 0
Completed 2.0 MiB/9.5 MiB (41.7 MiB/s) with 1 file(s) remaining  
2023-11-29 08:27:55,332 - ThreadPoolExecutor-0_1 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 8650752}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fa6f6215f60&gt; for transfer request: 0.
2023-11-29 08:27:55,332 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Acquiring 0
Completed 2.2 MiB/9.5 MiB (46.3 MiB/s) with 1 file(s) remaining  
2023-11-29 08:27:55,332 - ThreadPoolExecutor-0_1 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 8912896}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fa6f6215f60&gt; for transfer request: 0.
2023-11-29 08:27:55,332 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Acquiring 0
Completed 2.5 MiB/9.5 MiB (50.9 MiB/s) with 1 file(s) remaining  
2023-11-29 08:27:55,333 - ThreadPoolExecutor-0_1 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 9175040}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fa6f6215f60&gt; for transfer request: 0.
2023-11-29 08:27:55,344 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Acquiring 0
2023-11-29 08:27:55,331 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 1310720}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fa6f6215f60&gt; for transfer request: 0.
2023-11-29 08:27:55,347 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2023-11-29 08:27:55,330 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-11-29 08:27:55,349 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 524288}) about to wait for the following futures []
2023-11-29 08:27:55,349 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 524288}) done waiting for dependent futures
2023-11-29 08:27:55,349 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 524288}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fa6f623cbe0&gt;, 'offset': 524288}
2023-11-29 08:27:55,350 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-11-29 08:27:55,350 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 786432}) about to wait for the following futures []
2023-11-29 08:27:55,350 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 786432}) done waiting for dependent futures
2023-11-29 08:27:55,350 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 786432}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fa6f623cbe0&gt;, 'offset': 786432}
2023-11-29 08:27:55,350 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-11-29 08:27:55,350 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 1048576}) about to wait for the following futures []
2023-11-29 08:27:55,351 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 1048576}) done waiting for dependent futures
2023-11-29 08:27:55,351 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 1048576}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fa6f623cbe0&gt;, 'offset': 1048576}
2023-11-29 08:27:55,351 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-11-29 08:27:55,351 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 8388608}) about to wait for the following futures []
2023-11-29 08:27:55,351 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 8388608}) done waiting for dependent futures
2023-11-29 08:27:55,351 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 8388608}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fa6f623cbe0&gt;, 'offset': 8388608}
2023-11-29 08:27:55,352 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-11-29 08:27:55,352 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 8650752}) about to wait for the following futures []
2023-11-29 08:27:55,352 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 8650752}) done waiting for dependent futures
2023-11-29 08:27:55,352 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 8650752}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fa6f623cbe0&gt;, 'offset': 8650752}
Completed 2.8 MiB/9.5 MiB (38.7 MiB/s) with 1 file(s) remaining  
2023-11-29 08:27:55,355 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 1572864}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fa6f6215f60&gt; for transfer request: 0.
2023-11-29 08:27:55,355 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 3.0 MiB/9.5 MiB (41.9 MiB/s) with 1 file(s) remaining  
2023-11-29 08:27:55,356 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 1835008}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fa6f6215f60&gt; for transfer request: 0.
2023-11-29 08:27:55,356 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2023-11-29 08:27:55,356 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-11-29 08:27:55,356 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 8912896}) about to wait for the following futures []
2023-11-29 08:27:55,356 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 8912896}) done waiting for dependent futures
2023-11-29 08:27:55,356 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 8912896}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fa6f623cbe0&gt;, 'offset': 8912896}
2023-11-29 08:27:55,357 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-11-29 08:27:55,357 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 9175040}) about to wait for the following futures []
2023-11-29 08:27:55,357 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 9175040}) done waiting for dependent futures
2023-11-29 08:27:55,357 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 9175040}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fa6f623cbe0&gt;, 'offset': 9175040}
2023-11-29 08:27:55,357 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-11-29 08:27:55,358 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 1310720}) about to wait for the following futures []
2023-11-29 08:27:55,358 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 1310720}) done waiting for dependent futures
2023-11-29 08:27:55,358 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 1310720}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fa6f623cbe0&gt;, 'offset': 1310720}
2023-11-29 08:27:55,358 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-11-29 08:27:55,358 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 1572864}) about to wait for the following futures []
2023-11-29 08:27:55,358 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 1572864}) done waiting for dependent futures
2023-11-29 08:27:55,358 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 1572864}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fa6f623cbe0&gt;, 'offset': 1572864}
2023-11-29 08:27:55,359 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-11-29 08:27:55,359 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 1835008}) about to wait for the following futures []
2023-11-29 08:27:55,359 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 1835008}) done waiting for dependent futures
2023-11-29 08:27:55,359 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 1835008}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fa6f623cbe0&gt;, 'offset': 1835008}
Completed 3.2 MiB/9.5 MiB (41.7 MiB/s) with 1 file(s) remaining  
2023-11-29 08:27:55,361 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 2097152}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fa6f6215f60&gt; for transfer request: 0.
2023-11-29 08:27:55,362 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 3.5 MiB/9.5 MiB (44.6 MiB/s) with 1 file(s) remaining  
2023-11-29 08:27:55,362 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 2359296}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fa6f6215f60&gt; for transfer request: 0.
2023-11-29 08:27:55,362 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 3.8 MiB/9.5 MiB (47.4 MiB/s) with 1 file(s) remaining  
2023-11-29 08:27:55,363 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 2621440}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fa6f6215f60&gt; for transfer request: 0.
2023-11-29 08:27:55,363 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 4.0 MiB/9.5 MiB (50.2 MiB/s) with 1 file(s) remaining  
2023-11-29 08:27:55,363 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 2883584}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fa6f6215f60&gt; for transfer request: 0.
2023-11-29 08:27:55,363 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2023-11-29 08:27:55,364 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-11-29 08:27:55,364 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 2097152}) about to wait for the following futures []
2023-11-29 08:27:55,364 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 2097152}) done waiting for dependent futures
2023-11-29 08:27:55,364 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 2097152}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fa6f623cbe0&gt;, 'offset': 2097152}
2023-11-29 08:27:55,365 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-11-29 08:27:55,365 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 2359296}) about to wait for the following futures []
2023-11-29 08:27:55,365 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 2359296}) done waiting for dependent futures
2023-11-29 08:27:55,365 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 2359296}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fa6f623cbe0&gt;, 'offset': 2359296}
2023-11-29 08:27:55,365 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-11-29 08:27:55,365 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 2621440}) about to wait for the following futures []
2023-11-29 08:27:55,366 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 2621440}) done waiting for dependent futures
2023-11-29 08:27:55,366 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 2621440}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fa6f623cbe0&gt;, 'offset': 2621440}
2023-11-29 08:27:55,366 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-11-29 08:27:55,366 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 2883584}) about to wait for the following futures []
2023-11-29 08:27:55,366 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 2883584}) done waiting for dependent futures
2023-11-29 08:27:55,366 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 2883584}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fa6f623cbe0&gt;, 'offset': 2883584}
2023-11-29 08:27:55,366 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
Completed 4.2 MiB/9.5 MiB (50.8 MiB/s) with 1 file(s) remaining  
2023-11-29 08:27:55,367 - ThreadPoolExecutor-0_1 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 9437184}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fa6f6215f60&gt; for transfer request: 0.
2023-11-29 08:27:55,367 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Acquiring 0
Completed 4.5 MiB/9.5 MiB (53.5 MiB/s) with 1 file(s) remaining  
2023-11-29 08:27:55,368 - ThreadPoolExecutor-0_1 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 9699328}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fa6f6215f60&gt; for transfer request: 0.
2023-11-29 08:27:55,368 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Acquiring 0
Completed 4.5 MiB/9.5 MiB (53.7 MiB/s) with 1 file(s) remaining  
2023-11-29 08:27:55,368 - ThreadPoolExecutor-0_1 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 9961472}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fa6f6215f60&gt; for transfer request: 0.
2023-11-29 08:27:55,368 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Acquiring 0
2023-11-29 08:27:55,369 - ThreadPoolExecutor-0_1 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-11-29 08:27:55,370 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 3145728}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fa6f6215f60&gt; for transfer request: 0.
2023-11-29 08:27:55,370 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2023-11-29 08:27:55,370 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 3407872}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fa6f6215f60&gt; for transfer request: 0.
2023-11-29 08:27:55,370 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2023-11-29 08:27:55,372 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 3670016}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fa6f6215f60&gt; for transfer request: 0.
2023-11-29 08:27:55,372 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2023-11-29 08:27:55,373 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 3932160}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fa6f6215f60&gt; for transfer request: 0.
2023-11-29 08:27:55,373 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2023-11-29 08:27:55,373 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 9437184}) about to wait for the following futures []
2023-11-29 08:27:55,373 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 9437184}) done waiting for dependent futures
2023-11-29 08:27:55,373 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 9437184}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fa6f623cbe0&gt;, 'offset': 9437184}
Completed 4.8 MiB/9.5 MiB (55.7 MiB/s) with 1 file(s) remaining  
Completed 5.0 MiB/9.5 MiB (58.4 MiB/s) with 1 file(s) remaining  
Completed 5.3 MiB/9.5 MiB (59.9 MiB/s) with 1 file(s) remaining  
Completed 5.5 MiB/9.5 MiB (62.2 MiB/s) with 1 file(s) remaining  
2023-11-29 08:27:55,377 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-11-29 08:27:55,377 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 9699328}) about to wait for the following futures []
2023-11-29 08:27:55,377 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 9699328}) done waiting for dependent futures
2023-11-29 08:27:55,377 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 9699328}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fa6f623cbe0&gt;, 'offset': 9699328}
2023-11-29 08:27:55,378 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-11-29 08:27:55,378 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 9961472}) about to wait for the following futures []
2023-11-29 08:27:55,378 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 9961472}) done waiting for dependent futures
2023-11-29 08:27:55,378 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 9961472}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fa6f623cbe0&gt;, 'offset': 9961472}
2023-11-29 08:27:55,378 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-11-29 08:27:55,378 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 3145728}) about to wait for the following futures []
2023-11-29 08:27:55,378 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 3145728}) done waiting for dependent futures
2023-11-29 08:27:55,378 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 3145728}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fa6f623cbe0&gt;, 'offset': 3145728}
2023-11-29 08:27:55,379 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-11-29 08:27:55,379 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 3407872}) about to wait for the following futures []
2023-11-29 08:27:55,379 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 3407872}) done waiting for dependent futures
2023-11-29 08:27:55,379 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 3407872}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fa6f623cbe0&gt;, 'offset': 3407872}
Completed 5.8 MiB/9.5 MiB (60.4 MiB/s) with 1 file(s) remaining  
2023-11-29 08:27:55,379 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 4194304}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fa6f6215f60&gt; for transfer request: 0.
2023-11-29 08:27:55,380 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 6.0 MiB/9.5 MiB (62.6 MiB/s) with 1 file(s) remaining  
2023-11-29 08:27:55,380 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 4456448}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fa6f6215f60&gt; for transfer request: 0.
2023-11-29 08:27:55,380 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 6.3 MiB/9.5 MiB (64.9 MiB/s) with 1 file(s) remaining  
2023-11-29 08:27:55,381 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 4718592}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fa6f6215f60&gt; for transfer request: 0.
2023-11-29 08:27:55,381 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 6.5 MiB/9.5 MiB (66.9 MiB/s) with 1 file(s) remaining  
2023-11-29 08:27:55,381 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 4980736}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fa6f6215f60&gt; for transfer request: 0.
2023-11-29 08:27:55,383 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2023-11-29 08:27:55,383 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-11-29 08:27:55,383 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 3670016}) about to wait for the following futures []
2023-11-29 08:27:55,383 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 3670016}) done waiting for dependent futures
2023-11-29 08:27:55,383 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 3670016}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fa6f623cbe0&gt;, 'offset': 3670016}
2023-11-29 08:27:55,383 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-11-29 08:27:55,384 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 3932160}) about to wait for the following futures []
2023-11-29 08:27:55,384 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 3932160}) done waiting for dependent futures
2023-11-29 08:27:55,384 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 3932160}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fa6f623cbe0&gt;, 'offset': 3932160}
2023-11-29 08:27:55,384 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-11-29 08:27:55,384 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 4194304}) about to wait for the following futures []
2023-11-29 08:27:55,384 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 4194304}) done waiting for dependent futures
2023-11-29 08:27:55,384 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 4194304}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fa6f623cbe0&gt;, 'offset': 4194304}
2023-11-29 08:27:55,385 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-11-29 08:27:55,385 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 4456448}) about to wait for the following futures []
2023-11-29 08:27:55,385 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 4456448}) done waiting for dependent futures
2023-11-29 08:27:55,385 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 4456448}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fa6f623cbe0&gt;, 'offset': 4456448}
2023-11-29 08:27:55,385 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-11-29 08:27:55,385 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 4718592}) about to wait for the following futures []
2023-11-29 08:27:55,385 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 4718592}) done waiting for dependent futures
2023-11-29 08:27:55,385 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 4718592}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fa6f623cbe0&gt;, 'offset': 4718592}
2023-11-29 08:27:55,386 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
Completed 6.8 MiB/9.5 MiB (66.4 MiB/s) with 1 file(s) remaining  
2023-11-29 08:27:55,386 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 4980736}) about to wait for the following futures []
2023-11-29 08:27:55,386 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 5242880}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fa6f6215f60&gt; for transfer request: 0.
2023-11-29 08:27:55,386 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 7.0 MiB/9.5 MiB (68.5 MiB/s) with 1 file(s) remaining  
2023-11-29 08:27:55,386 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 5505024}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fa6f6215f60&gt; for transfer request: 0.
2023-11-29 08:27:55,387 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 7.3 MiB/9.5 MiB (70.3 MiB/s) with 1 file(s) remaining  
2023-11-29 08:27:55,387 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 5767168}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fa6f6215f60&gt; for transfer request: 0.
2023-11-29 08:27:55,387 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 7.5 MiB/9.5 MiB (72.4 MiB/s) with 1 file(s) remaining  
2023-11-29 08:27:55,388 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 6029312}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fa6f6215f60&gt; for transfer request: 0.
2023-11-29 08:27:55,388 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2023-11-29 08:27:55,386 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 4980736}) done waiting for dependent futures
2023-11-29 08:27:55,389 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 4980736}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fa6f623cbe0&gt;, 'offset': 4980736}
2023-11-29 08:27:55,389 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-11-29 08:27:55,389 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 5242880}) about to wait for the following futures []
2023-11-29 08:27:55,389 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 5242880}) done waiting for dependent futures
2023-11-29 08:27:55,389 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 5242880}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fa6f623cbe0&gt;, 'offset': 5242880}
2023-11-29 08:27:55,389 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-11-29 08:27:55,390 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 5505024}) about to wait for the following futures []
2023-11-29 08:27:55,390 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 5505024}) done waiting for dependent futures
2023-11-29 08:27:55,390 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 5505024}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fa6f623cbe0&gt;, 'offset': 5505024}
2023-11-29 08:27:55,390 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-11-29 08:27:55,390 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 5767168}) about to wait for the following futures []
2023-11-29 08:27:55,390 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 5767168}) done waiting for dependent futures
2023-11-29 08:27:55,390 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 5767168}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fa6f623cbe0&gt;, 'offset': 5767168}
2023-11-29 08:27:55,390 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-11-29 08:27:55,390 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 6029312}) about to wait for the following futures []
2023-11-29 08:27:55,390 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 6029312}) done waiting for dependent futures
2023-11-29 08:27:55,391 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 6029312}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fa6f623cbe0&gt;, 'offset': 6029312}
2023-11-29 08:27:55,391 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
Completed 7.8 MiB/9.5 MiB (69.3 MiB/s) with 1 file(s) remaining  
2023-11-29 08:27:55,396 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 6291456}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fa6f6215f60&gt; for transfer request: 0.
2023-11-29 08:27:55,396 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 8.0 MiB/9.5 MiB (71.1 MiB/s) with 1 file(s) remaining  
2023-11-29 08:27:55,397 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 6553600}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fa6f6215f60&gt; for transfer request: 0.
2023-11-29 08:27:55,397 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 8.3 MiB/9.5 MiB (73.1 MiB/s) with 1 file(s) remaining  
2023-11-29 08:27:55,397 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 6815744}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fa6f6215f60&gt; for transfer request: 0.
2023-11-29 08:27:55,397 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 8.5 MiB/9.5 MiB (74.9 MiB/s) with 1 file(s) remaining  
2023-11-29 08:27:55,398 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 7077888}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fa6f6215f60&gt; for transfer request: 0.
2023-11-29 08:27:55,400 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2023-11-29 08:27:55,401 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 6291456}) about to wait for the following futures []
2023-11-29 08:27:55,402 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 6291456}) done waiting for dependent futures
2023-11-29 08:27:55,402 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 6291456}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fa6f623cbe0&gt;, 'offset': 6291456}
2023-11-29 08:27:55,402 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-11-29 08:27:55,402 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 6553600}) about to wait for the following futures []
2023-11-29 08:27:55,402 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 6553600}) done waiting for dependent futures
2023-11-29 08:27:55,402 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 6553600}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fa6f623cbe0&gt;, 'offset': 6553600}
2023-11-29 08:27:55,403 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-11-29 08:27:55,403 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 6815744}) about to wait for the following futures []
2023-11-29 08:27:55,403 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 6815744}) done waiting for dependent futures
2023-11-29 08:27:55,403 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 6815744}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fa6f623cbe0&gt;, 'offset': 6815744}
2023-11-29 08:27:55,403 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-11-29 08:27:55,403 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 7077888}) about to wait for the following futures []
2023-11-29 08:27:55,403 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 7077888}) done waiting for dependent futures
2023-11-29 08:27:55,404 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 7077888}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fa6f623cbe0&gt;, 'offset': 7077888}
2023-11-29 08:27:55,404 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
Completed 8.8 MiB/9.5 MiB (72.6 MiB/s) with 1 file(s) remaining  
2023-11-29 08:27:55,405 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 7340032}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fa6f6215f60&gt; for transfer request: 0.
2023-11-29 08:27:55,405 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 9.0 MiB/9.5 MiB (74.4 MiB/s) with 1 file(s) remaining  
2023-11-29 08:27:55,405 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 7602176}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fa6f6215f60&gt; for transfer request: 0.
2023-11-29 08:27:55,405 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 9.3 MiB/9.5 MiB (76.2 MiB/s) with 1 file(s) remaining  
2023-11-29 08:27:55,406 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 7864320}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fa6f6215f60&gt; for transfer request: 0.
2023-11-29 08:27:55,406 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
Completed 9.5 MiB/9.5 MiB (77.9 MiB/s) with 1 file(s) remaining  
2023-11-29 08:27:55,406 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IOWriteTask(transfer_id=0, {'offset': 8126464}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fa6f6215f60&gt; for transfer request: 0.
2023-11-29 08:27:55,406 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2023-11-29 08:27:55,406 - ThreadPoolExecutor-0_0 - s3transfer.futures - DEBUG - Submitting task IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/big_file_downloaded'}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7fa6f6215f60&gt; for transfer request: 0.
2023-11-29 08:27:55,407 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Acquiring 0
2023-11-29 08:27:55,407 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-11-29 08:27:55,407 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 7340032}) about to wait for the following futures []
2023-11-29 08:27:55,407 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 7340032}) done waiting for dependent futures
2023-11-29 08:27:55,407 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 7340032}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fa6f623cbe0&gt;, 'offset': 7340032}
2023-11-29 08:27:55,407 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-11-29 08:27:55,408 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 7602176}) about to wait for the following futures []
2023-11-29 08:27:55,408 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 7602176}) done waiting for dependent futures
2023-11-29 08:27:55,408 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 7602176}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fa6f623cbe0&gt;, 'offset': 7602176}
2023-11-29 08:27:55,408 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-11-29 08:27:55,408 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 7864320}) about to wait for the following futures []
2023-11-29 08:27:55,408 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 7864320}) done waiting for dependent futures
2023-11-29 08:27:55,408 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 7864320}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fa6f623cbe0&gt;, 'offset': 7864320}
2023-11-29 08:27:55,409 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-11-29 08:27:55,409 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 8126464}) about to wait for the following futures []
2023-11-29 08:27:55,409 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IOWriteTask(transfer_id=0, {'offset': 8126464}) done waiting for dependent futures
2023-11-29 08:27:55,409 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IOWriteTask(transfer_id=0, {'offset': 8126464}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fa6f623cbe0&gt;, 'offset': 8126464}
2023-11-29 08:27:55,409 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-11-29 08:27:55,409 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/big_file_downloaded'}) about to wait for the following futures []
2023-11-29 08:27:55,409 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/big_file_downloaded'}) done waiting for dependent futures
2023-11-29 08:27:55,410 - ThreadPoolExecutor-2_0 - s3transfer.tasks - DEBUG - Executing task IORenameFileTask(transfer_id=0, {'final_filename': '/tmp/big_file_downloaded'}) with kwargs {'fileobj': &lt;s3transfer.utils.DeferredOpenFile object at 0x7fa6f623cbe0&gt;, 'final_filename': '/tmp/big_file_downloaded', 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7fa6f62159e8&gt;}
download: s3://erasure/big_file to ../../tmp/big_file_downloaded 
2023-11-29 08:27:55,410 - ThreadPoolExecutor-2_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-11-29 08:27:55,417 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20231129 08:27:55.477" endtime="20231129 08:27:55.479"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:55.480" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:55.479" endtime="20231129 08:27:55.480"/>
</kw>
<status status="PASS" starttime="20231129 08:27:54.856" endtime="20231129 08:27:55.480"/>
</kw>
<msg timestamp="20231129 08:27:55.481" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:54.855" endtime="20231129 08:27:55.481"/>
</kw>
<msg timestamp="20231129 08:27:55.483" level="INFO">${output} = 2023-11-29 08:27:55,219 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10
2023-11-29 08:27:55,220 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20231129 08:27:54.855" endtime="20231129 08:27:55.483"/>
</kw>
<msg timestamp="20231129 08:27:55.484" level="INFO">${file_download_result} = 2023-11-29 08:27:55,219 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10
2023-11-29 08:27:55,220 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20231129 08:27:54.854" endtime="20231129 08:27:55.484"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<var>${match}</var>
<var>${etag2}</var>
<arg>${file_download_result}</arg>
<arg>(?is)GET /${BUCKET}/big_file.*?Response headers.*?ETag':\ '"(.*?-2)"'</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20231129 08:27:55.486" level="INFO">${match} = GET /erasure/big_file HTTP/1.1" 206 8388608
2023-11-29 08:27:55,317 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Wed, 29 Nov 2023 08:27:55 GMT', 'Cache-Control': '...</msg>
<msg timestamp="20231129 08:27:55.486" level="INFO">${etag2} = 3d267e5ad888a1f4f8e78f1af907b54e-2</msg>
<status status="PASS" starttime="20231129 08:27:55.484" endtime="20231129 08:27:55.486"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${etag1}</arg>
<arg>${etag2}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20231129 08:27:55.486" endtime="20231129 08:27:55.487"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>rm s3://${BUCKET}/big_file</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:55.491" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 rm s3://erasure/big_file 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:55.929" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:55.929" level="INFO">${output} = delete: s3://erasure/big_file</msg>
<status status="PASS" starttime="20231129 08:27:55.489" endtime="20231129 08:27:55.929"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:55.930" level="INFO">delete: s3://erasure/big_file</msg>
<status status="PASS" starttime="20231129 08:27:55.929" endtime="20231129 08:27:55.930"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:55.930" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:55.930" endtime="20231129 08:27:55.931"/>
</kw>
<status status="PASS" starttime="20231129 08:27:55.488" endtime="20231129 08:27:55.931"/>
</kw>
<msg timestamp="20231129 08:27:55.931" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:55.488" endtime="20231129 08:27:55.931"/>
</kw>
<msg timestamp="20231129 08:27:55.931" level="INFO">${output} = delete: s3://erasure/big_file</msg>
<status status="PASS" starttime="20231129 08:27:55.487" endtime="20231129 08:27:55.931"/>
</kw>
<status status="PASS" starttime="20231129 08:27:55.487" endtime="20231129 08:27:55.931"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -rf /tmp/big_file</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:55.934" level="INFO">Running command 'rm -rf /tmp/big_file 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:55.937" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:55.937" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:27:55.933" endtime="20231129 08:27:55.937"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:55.937" level="INFO"/>
<status status="PASS" starttime="20231129 08:27:55.937" endtime="20231129 08:27:55.938"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:55.938" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:55.938" endtime="20231129 08:27:55.938"/>
</kw>
<status status="PASS" starttime="20231129 08:27:55.932" endtime="20231129 08:27:55.938"/>
</kw>
<msg timestamp="20231129 08:27:55.938" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:55.932" endtime="20231129 08:27:55.938"/>
</kw>
<status status="PASS" starttime="20231129 08:27:55.931" endtime="20231129 08:27:55.938"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:27:53.938" endtime="20231129 08:27:55.939"/>
</test>
<test id="s1-s1-s14-t19" name="Create key twice with different content and expect different ETags" line="249">
<kw name="Execute" library="os">
<arg>head -c 1MiB &lt;/dev/urandom &gt; /tmp/file1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:55.942" level="INFO">Running command 'head -c 1MiB &lt;/dev/urandom &gt; /tmp/file1'.</msg>
<msg timestamp="20231129 08:27:55.947" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:55.947" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:27:55.941" endtime="20231129 08:27:55.947"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:55.948" level="INFO"/>
<status status="PASS" starttime="20231129 08:27:55.947" endtime="20231129 08:27:55.948"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:55.948" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:55.948" endtime="20231129 08:27:55.948"/>
</kw>
<status status="PASS" starttime="20231129 08:27:55.941" endtime="20231129 08:27:55.948"/>
</kw>
<msg timestamp="20231129 08:27:55.949" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:55.940" endtime="20231129 08:27:55.949"/>
</kw>
<status status="PASS" starttime="20231129 08:27:55.940" endtime="20231129 08:27:55.949"/>
</kw>
<kw name="Execute" library="os">
<arg>head -c 1MiB &lt;/dev/urandom &gt; /tmp/file2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:55.951" level="INFO">Running command 'head -c 1MiB &lt;/dev/urandom &gt; /tmp/file2'.</msg>
<msg timestamp="20231129 08:27:55.956" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:55.956" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:27:55.950" endtime="20231129 08:27:55.956"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:55.957" level="INFO"/>
<status status="PASS" starttime="20231129 08:27:55.957" endtime="20231129 08:27:55.957"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:55.957" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:55.957" endtime="20231129 08:27:55.958"/>
</kw>
<status status="PASS" starttime="20231129 08:27:55.949" endtime="20231129 08:27:55.958"/>
</kw>
<msg timestamp="20231129 08:27:55.958" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:55.949" endtime="20231129 08:27:55.958"/>
</kw>
<status status="PASS" starttime="20231129 08:27:55.949" endtime="20231129 08:27:55.958"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<var>${file1UploadResult}</var>
<arg>cp /tmp/file1 s3://${BUCKET}/test_key_to_check_etag_differences</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:55.961" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp /tmp/file1 s3://erasure/test_key_to_check_etag_differences 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:56.501" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:56.502" level="INFO">${output} = 2023-11-29 08:27:56,295 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10
2023-11-29 08:27:56,295 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20231129 08:27:55.959" endtime="20231129 08:27:56.502"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:56.503" level="INFO">2023-11-29 08:27:56,295 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10
2023-11-29 08:27:56,295 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', '/tmp/file1', 's3://erasure/test_key_to_check_etag_differences']
2023-11-29 08:27:56,295 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7f0ab35209d8&gt;
2023-11-29 08:27:56,295 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7f0ab4314730&gt;
2023-11-29 08:27:56,296 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7f0ab4343ae8&gt;
2023-11-29 08:27:56,296 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2023-11-29 08:27:56,299 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7f0ab364c400&gt;
2023-11-29 08:27:56,299 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7f0ab352f048&gt;
2023-11-29 08:27:56,300 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0abb22f6d8&gt;
2023-11-29 08:27:56,300 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7f0ab352f048&gt;
2023-11-29 08:27:56,302 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0abb22f6d8&gt;
2023-11-29 08:27:56,302 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0abb22f6d8&gt;
2023-11-29 08:27:56,302 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f0ab43172b0&gt;
2023-11-29 08:27:56,302 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0abb22f6d8&gt;
2023-11-29 08:27:56,302 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f0ab43172b0&gt;
2023-11-29 08:27:56,302 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0abb22f6d8&gt;
2023-11-29 08:27:56,302 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0abb22f6d8&gt;
2023-11-29 08:27:56,302 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0abb22f6d8&gt;
2023-11-29 08:27:56,302 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f0ab43172b0&gt;
2023-11-29 08:27:56,303 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0abb22f6d8&gt;
2023-11-29 08:27:56,303 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0abb22f6d8&gt;
2023-11-29 08:27:56,303 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0abb22f6d8&gt;
2023-11-29 08:27:56,303 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0abb22f6d8&gt;
2023-11-29 08:27:56,303 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0abb22f6d8&gt;
2023-11-29 08:27:56,303 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0abb22f6d8&gt;
2023-11-29 08:27:56,303 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0abb22f6d8&gt;
2023-11-29 08:27:56,303 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0abb22f6d8&gt;
2023-11-29 08:27:56,304 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0abb22f6d8&gt;
2023-11-29 08:27:56,304 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0abb22f6d8&gt;
2023-11-29 08:27:56,304 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0abb22f6d8&gt;
2023-11-29 08:27:56,304 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0abb22f6d8&gt;
2023-11-29 08:27:56,304 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0abb22f6d8&gt;
2023-11-29 08:27:56,304 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0abb22f6d8&gt;
2023-11-29 08:27:56,304 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0abb22f6d8&gt;
2023-11-29 08:27:56,304 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0abb22f6d8&gt;
2023-11-29 08:27:56,305 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0abb22f6d8&gt;
2023-11-29 08:27:56,305 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0abb22f6d8&gt;
2023-11-29 08:27:56,305 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f0ab43172b0&gt;
2023-11-29 08:27:56,305 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0abb22f6d8&gt;
2023-11-29 08:27:56,305 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0abb22f6d8&gt;
2023-11-29 08:27:56,305 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0abb22f6d8&gt;
2023-11-29 08:27:56,305 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f0ab43172b0&gt;
2023-11-29 08:27:56,305 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0abb22f6d8&gt;
2023-11-29 08:27:56,305 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f0ab43172b0&gt;
2023-11-29 08:27:56,305 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0abb22f6d8&gt;
2023-11-29 08:27:56,306 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0abb22f6d8&gt;
2023-11-29 08:27:56,306 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0abb22f6d8&gt;
2023-11-29 08:27:56,306 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0abb22f6d8&gt;
2023-11-29 08:27:56,306 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f0abb22f6d8&gt;
2023-11-29 08:27:56,306 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2023-11-29 08:27:56,306 - MainThread - botocore.credentials - INFO - Found credentials in environment variables.
2023-11-29 08:27:56,307 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/endpoints.json
2023-11-29 08:27:56,320 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/sdk-default-configuration.json
2023-11-29 08:27:56,320 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f0ab4fd8378&gt;
2023-11-29 08:27:56,321 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/s3/2006-03-01/service-2.json
2023-11-29 08:27:56,330 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f0ab52b12f0&gt;
2023-11-29 08:27:56,330 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f0ab52b10d0&gt;
2023-11-29 08:27:56,330 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-11-29 08:27:56,332 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2023-11-29 08:27:56,333 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/_retry.json
2023-11-29 08:27:56,333 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2023-11-29 08:27:56,334 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-11-29 08:27:56,334 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f0ab4fd8378&gt;
2023-11-29 08:27:56,335 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f0ab52b12f0&gt;
2023-11-29 08:27:56,335 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f0ab52b10d0&gt;
2023-11-29 08:27:56,335 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-11-29 08:27:56,337 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2023-11-29 08:27:56,338 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2023-11-29 08:27:56,339 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-11-29 08:27:56,339 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f0ab4fd8378&gt;
2023-11-29 08:27:56,340 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f0ab52b12f0&gt;
2023-11-29 08:27:56,340 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f0ab52b10d0&gt;
2023-11-29 08:27:56,340 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-11-29 08:27:56,342 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2023-11-29 08:27:56,343 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2023-11-29 08:27:56,344 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-11-29 08:27:56,344 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2023-11-29 08:27:56,345 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2023-11-29 08:27:56,345 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f0ab2dcf9e8&gt;}) about to wait for the following futures []
2023-11-29 08:27:56,345 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f0ab2dcf9e8&gt;}) done waiting for dependent futures
2023-11-29 08:27:56,346 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f0ab2dcf9e8&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f0ab2e8d828&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7f0ab2dc59b0&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7f0ab2dc5a20&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7f0ab2dc5ba8&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f0ab2dcf9e8&gt;}
2023-11-29 08:27:56,346 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task PutObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f0ab2dc5ba8&gt; for transfer request: 0.
2023-11-29 08:27:56,346 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2023-11-29 08:27:56,347 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - PutObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}) about to wait for the following futures []
2023-11-29 08:27:56,347 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - PutObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}) done waiting for dependent futures
2023-11-29 08:27:56,347 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task PutObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f0ab2e8d828&gt;, 'fileobj': &lt;s3transfer.utils.ReadFileChunk object at 0x7f0ab2dcfe80&gt;, 'bucket': 'erasure', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}
2023-11-29 08:27:56,348 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function validate_ascii_metadata at 0x7f0ab4ff56a8&gt;
2023-11-29 08:27:56,348 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function sse_md5 at 0x7f0ab4ff1ae8&gt;
2023-11-29 08:27:56,348 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function convert_body_to_file_like_object at 0x7f0ab4ff5f28&gt;
2023-11-29 08:27:56,348 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function validate_bucket_name at 0x7f0ab4ff1a60&gt;
2023-11-29 08:27:56,348 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7f0ab2e8dd68&gt;&gt;
2023-11-29 08:27:56,348 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7f0ab2e5d160&gt;&gt;
2023-11-29 08:27:56,348 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function generate_idempotent_uuid at 0x7f0ab4ff18c8&gt;
2023-11-29 08:27:56,349 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function conditionally_calculate_md5 at 0x7f0ab59980d0&gt;
2023-11-29 08:27:56,349 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-11-29 08:27:56,351 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_expect_header at 0x7f0ab4ff1d90&gt;
2023-11-29 08:27:56,351 - ThreadPoolExecutor-0_0 - botocore.handlers - DEBUG - Adding expect 100 continue header to request.
2023-11-29 08:27:56,351 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7f0ab2e8dd68&gt;&gt;
2023-11-29 08:27:56,351 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_recursion_detection_header at 0x7f0ab4ff1598&gt;
2023-11-29 08:27:56,351 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7f0ab4ff70d0&gt;
2023-11-29 08:27:56,351 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=PutObject) with params: {'url_path': '/erasure/test_key_to_check_etag_differences', 'query_string': {}, 'method': 'PUT', 'headers': {'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10', 'Content-MD5': 'FsPdS2XCoeK7VcHQdddysg==', 'Expect': '100-continue'}, 'body': &lt;s3transfer.utils.ReadFileChunk object at 0x7f0ab2dcfe80&gt;, 'url': 'http://s3g:9878/erasure/test_key_to_check_etag_differences', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f0ab2e8da20&gt;, 'has_streaming_input': True, 'auth_type': None, 'signing': {'bucket': 'erasure'}}}
2023-11-29 08:27:56,351 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function signal_not_transferring at 0x7f0ab751a158&gt;
2023-11-29 08:27:56,352 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f0ab2e8d9e8&gt;&gt;
2023-11-29 08:27:56,352 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.PutObject: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7f0ab2e5d1d0&gt;&gt;
2023-11-29 08:27:56,352 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.PutObject: calling handler &lt;function set_operation_specific_signer at 0x7f0ab4ff17b8&gt;
2023-11-29 08:27:56,352 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.PutObject: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7f0ab2e5d1d0&gt;&gt;
2023-11-29 08:27:56,352 - ThreadPoolExecutor-0_0 - botocore.utils - DEBUG - Using S3 path style addressing.
2023-11-29 08:27:56,353 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2023-11-29 08:27:56,353 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
PUT
/erasure/test_key_to_check_etag_differences

content-md5:FsPdS2XCoeK7VcHQdddysg==
host:s3g:9878
x-amz-content-sha256:7f8e5a53c8ca29f147e7db3248a49e45fce68d3e9932dfa9440ea000a14047a0
x-amz-date:20231129T082756Z

content-md5;host;x-amz-content-sha256;x-amz-date
7f8e5a53c8ca29f147e7db3248a49e45fce68d3e9932dfa9440ea000a14047a0
2023-11-29 08:27:56,353 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20231129T082756Z
20231129/us-west-1/s3/aws4_request
c091fff146f6d30b814d0f04575305de608e91297b9a65939fd3e1b252e49010
2023-11-29 08:27:56,353 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
e5d400fc901736b059a68fc689a78e7669b26ecf44dba5e6defec4c13a1509e6
2023-11-29 08:27:56,353 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function signal_transferring at 0x7f0ab751a1e0&gt;
2023-11-29 08:27:56,353 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function add_retry_headers at 0x7f0ab4ff7730&gt;
2023-11-29 08:27:56,354 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=PUT, url=http://s3g:9878/erasure/test_key_to_check_etag_differences, headers={'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10', 'Content-MD5': b'FsPdS2XCoeK7VcHQdddysg==', 'Expect': b'100-continue', 'X-Amz-Date': b'20231129T082756Z', 'X-Amz-Content-SHA256': b'7f8e5a53c8ca29f147e7db3248a49e45fce68d3e9932dfa9440ea000a14047a0', 'Authorization': b'AWS4-HMAC-SHA256 Credential=dlfknslnfslf/20231129/us-west-1/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date, Signature=e5d400fc901736b059a68fc689a78e7669b26ecf44dba5e6defec4c13a1509e6', 'amz-sdk-invocation-id': b'fcf617a3-68cb-4242-b501-19fe177b742b', 'amz-sdk-request': b'attempt=1', 'Content-Length': '1048576'}&gt;
2023-11-29 08:27:56,354 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2023-11-29 08:27:56,356 - ThreadPoolExecutor-0_0 - botocore.awsrequest - DEBUG - Waiting for 100 Continue response.
2023-11-29 08:27:56,357 - ThreadPoolExecutor-0_0 - botocore.awsrequest - DEBUG - 100 Continue response seen, now sending request body.
Completed 256.0 KiB/1.0 MiB (8.1 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/1.0 MiB (15.5 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/1.0 MiB (22.8 MiB/s) with 1 file(s) remaining
Completed 1.0 MiB/1.0 MiB (29.6 MiB/s) with 1 file(s) remaining  
2023-11-29 08:27:56,439 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "PUT /erasure/test_key_to_check_etag_differences HTTP/1.1" 200 0
2023-11-29 08:27:56,439 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Wed, 29 Nov 2023 08:27:56 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Wed, 29 Nov 2023 08:27:56 GMT', 'Pragma': 'no-cache', 'Content-Type': 'text/plain;charset=utf-8', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': '"16c3dd4b65c2a1e2bb55c1d075d772b2"', 'Server': 'Ozone', 'x-amz-id-2': 'urU7uSfTqNhq', 'x-amz-request-id': 'e3694999-5438-4231-8f1e-4e59484fc935', 'Content-Length': '0'}
2023-11-29 08:27:56,440 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
b''
2023-11-29 08:27:56,441 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f0ab2e8dda0&gt;
2023-11-29 08:27:56,441 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2023-11-29 08:27:56,441 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7f0ab2e8dd68&gt;&gt;
2023-11-29 08:27:56,441 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.PutObject: calling handler &lt;function enhance_error_msg at 0x7f0ab3520598&gt;
2023-11-29 08:27:56,442 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
upload: ../../tmp/file1 to s3://erasure/test_key_to_check_etag_differences
2023-11-29 08:27:56,444 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20231129 08:27:56.502" endtime="20231129 08:27:56.503"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:56.503" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:56.503" endtime="20231129 08:27:56.504"/>
</kw>
<status status="PASS" starttime="20231129 08:27:55.959" endtime="20231129 08:27:56.504"/>
</kw>
<msg timestamp="20231129 08:27:56.504" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:55.959" endtime="20231129 08:27:56.504"/>
</kw>
<msg timestamp="20231129 08:27:56.504" level="INFO">${output} = 2023-11-29 08:27:56,295 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10
2023-11-29 08:27:56,295 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20231129 08:27:55.958" endtime="20231129 08:27:56.504"/>
</kw>
<msg timestamp="20231129 08:27:56.505" level="INFO">${file1UploadResult} = 2023-11-29 08:27:56,295 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10
2023-11-29 08:27:56,295 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20231129 08:27:55.958" endtime="20231129 08:27:56.505"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<var>${match}</var>
<var>${etag1}</var>
<arg>${file1UploadResult}</arg>
<arg>PUT /${BUCKET}/test_key_to_check_etag_differences\ .*?Response headers.*?ETag':\ '"(.*?)"'</arg>
<arg>flags=DOTALL</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20231129 08:27:56.506" level="INFO">${match} = PUT /erasure/test_key_to_check_etag_differences HTTP/1.1" 200 0
2023-11-29 08:27:56,439 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Wed, 29 Nov 2023 08:27:56 GMT'...</msg>
<msg timestamp="20231129 08:27:56.506" level="INFO">${etag1} = 16c3dd4b65c2a1e2bb55c1d075d772b2</msg>
<status status="PASS" starttime="20231129 08:27:56.505" endtime="20231129 08:27:56.506"/>
</kw>
<kw name="Execute AWSS3CliDebug" library="commonawslib">
<var>${file2UploadResult}</var>
<arg>cp /tmp/file2 s3://${BUCKET}/test_key_to_check_etag_differences</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws --debug s3 --endpoint ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:56.509" level="INFO">Running command 'aws --debug s3 --endpoint http://s3g:9878 cp /tmp/file2 s3://erasure/test_key_to_check_etag_differences 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:57.012" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:57.012" level="INFO">${output} = 2023-11-29 08:27:56,853 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10
2023-11-29 08:27:56,854 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20231129 08:27:56.508" endtime="20231129 08:27:57.012"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:57.013" level="INFO">2023-11-29 08:27:56,853 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10
2023-11-29 08:27:56,854 - MainThread - awscli.clidriver - DEBUG - Arguments entered to CLI: ['--debug', 's3', '--endpoint', 'http://s3g:9878', 'cp', '/tmp/file2', 's3://erasure/test_key_to_check_etag_differences']
2023-11-29 08:27:56,854 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function add_scalar_parsers at 0x7f3eed17d9d8&gt;
2023-11-29 08:27:56,854 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function register_uri_param_handler at 0x7f3eedf71730&gt;
2023-11-29 08:27:56,854 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function inject_assume_role_provider_cache at 0x7f3eedfa0ae8&gt;
2023-11-29 08:27:56,855 - MainThread - botocore.utils - DEBUG - IMDS ENDPOINT: http://169.254.169.254/
2023-11-29 08:27:56,858 - MainThread - botocore.hooks - DEBUG - Event session-initialized: calling handler &lt;function attach_history_handler at 0x7f3eed2a9400&gt;
2023-11-29 08:27:56,858 - MainThread - botocore.hooks - DEBUG - Event building-command-table.s3: calling handler &lt;function add_waiters at 0x7f3eed18c048&gt;
2023-11-29 08:27:56,859 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.s3.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3ef4e8c6d8&gt;
2023-11-29 08:27:56,859 - MainThread - botocore.hooks - DEBUG - Event building-command-table.cp: calling handler &lt;function add_waiters at 0x7f3eed18c048&gt;
2023-11-29 08:27:56,860 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.paths: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3ef4e8c6d8&gt;
2023-11-29 08:27:56,861 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.dryrun: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3ef4e8c6d8&gt;
2023-11-29 08:27:56,861 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f3eedf742b0&gt;
2023-11-29 08:27:56,861 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.quiet: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3ef4e8c6d8&gt;
2023-11-29 08:27:56,861 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f3eedf742b0&gt;
2023-11-29 08:27:56,861 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3ef4e8c6d8&gt;
2023-11-29 08:27:56,861 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.acl: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3ef4e8c6d8&gt;
2023-11-29 08:27:56,862 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.follow-symlinks: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3ef4e8c6d8&gt;
2023-11-29 08:27:56,862 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f3eedf742b0&gt;
2023-11-29 08:27:56,862 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3ef4e8c6d8&gt;
2023-11-29 08:27:56,862 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3ef4e8c6d8&gt;
2023-11-29 08:27:56,862 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3ef4e8c6d8&gt;
2023-11-29 08:27:56,862 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3ef4e8c6d8&gt;
2023-11-29 08:27:56,862 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-kms-key-id: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3ef4e8c6d8&gt;
2023-11-29 08:27:56,862 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3ef4e8c6d8&gt;
2023-11-29 08:27:56,862 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.sse-c-copy-source-key: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3ef4e8c6d8&gt;
2023-11-29 08:27:56,863 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.storage-class: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3ef4e8c6d8&gt;
2023-11-29 08:27:56,863 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.grants: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3ef4e8c6d8&gt;
2023-11-29 08:27:56,863 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.website-redirect: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3ef4e8c6d8&gt;
2023-11-29 08:27:56,863 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-type: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3ef4e8c6d8&gt;
2023-11-29 08:27:56,863 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.cache-control: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3ef4e8c6d8&gt;
2023-11-29 08:27:56,863 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-disposition: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3ef4e8c6d8&gt;
2023-11-29 08:27:56,863 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-encoding: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3ef4e8c6d8&gt;
2023-11-29 08:27:56,864 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.content-language: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3ef4e8c6d8&gt;
2023-11-29 08:27:56,864 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expires: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3ef4e8c6d8&gt;
2023-11-29 08:27:56,864 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.source-region: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3ef4e8c6d8&gt;
2023-11-29 08:27:56,864 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.only-show-errors: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3ef4e8c6d8&gt;
2023-11-29 08:27:56,864 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f3eedf742b0&gt;
2023-11-29 08:27:56,864 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3ef4e8c6d8&gt;
2023-11-29 08:27:56,864 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.page-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3ef4e8c6d8&gt;
2023-11-29 08:27:56,864 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.ignore-glacier-warnings: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3ef4e8c6d8&gt;
2023-11-29 08:27:56,864 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f3eedf742b0&gt;
2023-11-29 08:27:56,865 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.force-glacier-transfer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3ef4e8c6d8&gt;
2023-11-29 08:27:56,865 - MainThread - botocore.hooks - DEBUG - Event process-cli-arg.custom.cp: calling handler &lt;awscli.argprocess.ParamShorthandParser object at 0x7f3eedf742b0&gt;
2023-11-29 08:27:56,865 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.request-payer: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3ef4e8c6d8&gt;
2023-11-29 08:27:56,865 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3ef4e8c6d8&gt;
2023-11-29 08:27:56,865 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.metadata-directive: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3ef4e8c6d8&gt;
2023-11-29 08:27:56,865 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.expected-size: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3ef4e8c6d8&gt;
2023-11-29 08:27:56,865 - MainThread - botocore.hooks - DEBUG - Event load-cli-arg.custom.cp.anonymous: calling handler &lt;awscli.paramfile.URIArgumentHandler object at 0x7f3ef4e8c6d8&gt;
2023-11-29 08:27:56,866 - MainThread - botocore.credentials - DEBUG - Looking for credentials via: env
2023-11-29 08:27:56,866 - MainThread - botocore.credentials - INFO - Found credentials in environment variables.
2023-11-29 08:27:56,866 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/endpoints.json
2023-11-29 08:27:56,879 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/sdk-default-configuration.json
2023-11-29 08:27:56,879 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f3eeec35378&gt;
2023-11-29 08:27:56,880 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/s3/2006-03-01/service-2.json
2023-11-29 08:27:56,889 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f3eeef0e2f0&gt;
2023-11-29 08:27:56,889 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f3eeef0e0d0&gt;
2023-11-29 08:27:56,890 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-11-29 08:27:56,892 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2023-11-29 08:27:56,893 - MainThread - botocore.loaders - DEBUG - Loading JSON file: /usr/local/lib/python3.6/site-packages/botocore/data/_retry.json
2023-11-29 08:27:56,893 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2023-11-29 08:27:56,894 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-11-29 08:27:56,894 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f3eeec35378&gt;
2023-11-29 08:27:56,895 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f3eeef0e2f0&gt;
2023-11-29 08:27:56,895 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f3eeef0e0d0&gt;
2023-11-29 08:27:56,895 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-11-29 08:27:56,897 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2023-11-29 08:27:56,898 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2023-11-29 08:27:56,899 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-11-29 08:27:56,899 - MainThread - botocore.hooks - DEBUG - Event choose-service-name: calling handler &lt;function handle_service_name_alias at 0x7f3eeec35378&gt;
2023-11-29 08:27:56,900 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_post at 0x7f3eeef0e2f0&gt;
2023-11-29 08:27:56,900 - MainThread - botocore.hooks - DEBUG - Event creating-client-class.s3: calling handler &lt;function add_generate_presigned_url at 0x7f3eeef0e0d0&gt;
2023-11-29 08:27:56,900 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-11-29 08:27:56,902 - MainThread - botocore.endpoint - DEBUG - Setting s3 timeout as (60, 60)
2023-11-29 08:27:56,903 - MainThread - botocore.client - DEBUG - Registering retry handlers for service: s3
2023-11-29 08:27:56,904 - MainThread - botocore.client - DEBUG - Switching signature version for service s3 to version s3v4 based on config file override.
2023-11-29 08:27:56,904 - MainThread - awscli.customizations.s3.s3handler - DEBUG - Using a multipart threshold of 8388608 and a part size of 8388608
2023-11-29 08:27:56,905 - MainThread - s3transfer.utils - DEBUG - Acquiring 0
2023-11-29 08:27:56,905 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f3eeca2c9e8&gt;}) about to wait for the following futures []
2023-11-29 08:27:56,905 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f3eeca2c9e8&gt;}) done waiting for dependent futures
2023-11-29 08:27:56,906 - ThreadPoolExecutor-1_0 - s3transfer.tasks - DEBUG - Executing task UploadSubmissionTask(transfer_id=0, {'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f3eeca2c9e8&gt;}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f3eecaea828&gt;, 'config': &lt;s3transfer.manager.TransferConfig object at 0x7f3eeca229b0&gt;, 'osutil': &lt;s3transfer.utils.OSUtils object at 0x7f3eeca22a20&gt;, 'request_executor': &lt;s3transfer.futures.BoundedExecutor object at 0x7f3eeca22ba8&gt;, 'transfer_future': &lt;s3transfer.futures.TransferFuture object at 0x7f3eeca2c9e8&gt;}
2023-11-29 08:27:56,906 - ThreadPoolExecutor-1_0 - s3transfer.futures - DEBUG - Submitting task PutObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}) to executor &lt;s3transfer.futures.BoundedExecutor object at 0x7f3eeca22ba8&gt; for transfer request: 0.
2023-11-29 08:27:56,907 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Acquiring 0
2023-11-29 08:27:56,907 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - PutObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}) about to wait for the following futures []
2023-11-29 08:27:56,907 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - PutObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}) done waiting for dependent futures
2023-11-29 08:27:56,907 - ThreadPoolExecutor-0_0 - s3transfer.tasks - DEBUG - Executing task PutObjectTask(transfer_id=0, {'bucket': 'erasure', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}) with kwargs {'client': &lt;botocore.client.S3 object at 0x7f3eecaea828&gt;, 'fileobj': &lt;s3transfer.utils.ReadFileChunk object at 0x7f3eeca2cef0&gt;, 'bucket': 'erasure', 'key': 'test_key_to_check_etag_differences', 'extra_args': {}}
2023-11-29 08:27:56,908 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function validate_ascii_metadata at 0x7f3eeec526a8&gt;
2023-11-29 08:27:56,908 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function sse_md5 at 0x7f3eeec4eae8&gt;
2023-11-29 08:27:56,908 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function convert_body_to_file_like_object at 0x7f3eeec52f28&gt;
2023-11-29 08:27:56,908 - ThreadPoolExecutor-1_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
2023-11-29 08:27:56,908 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function validate_bucket_name at 0x7f3eeec4ea60&gt;
2023-11-29 08:27:56,908 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_cache of &lt;botocore.utils.S3RegionRedirector object at 0x7f3eecaead68&gt;&gt;
2023-11-29 08:27:56,908 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;bound method S3ArnParamHandler.handle_arn of &lt;botocore.utils.S3ArnParamHandler object at 0x7f3eecaba160&gt;&gt;
2023-11-29 08:27:56,908 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-parameter-build.s3.PutObject: calling handler &lt;function generate_idempotent_uuid at 0x7f3eeec4e8c8&gt;
2023-11-29 08:27:56,909 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function conditionally_calculate_md5 at 0x7f3eef5f50d0&gt;
2023-11-29 08:27:56,911 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_expect_header at 0x7f3eeec4ed90&gt;
2023-11-29 08:27:56,911 - ThreadPoolExecutor-0_0 - botocore.handlers - DEBUG - Adding expect 100 continue header to request.
2023-11-29 08:27:56,911 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;bound method S3RegionRedirector.set_request_url of &lt;botocore.utils.S3RegionRedirector object at 0x7f3eecaead68&gt;&gt;
2023-11-29 08:27:56,911 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function add_recursion_detection_header at 0x7f3eeec4e598&gt;
2023-11-29 08:27:56,911 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-call.s3.PutObject: calling handler &lt;function inject_api_version_header_if_needed at 0x7f3eeec540d0&gt;
2023-11-29 08:27:56,911 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Making request for OperationModel(name=PutObject) with params: {'url_path': '/erasure/test_key_to_check_etag_differences', 'query_string': {}, 'method': 'PUT', 'headers': {'User-Agent': 'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10', 'Content-MD5': 'xW4w9m9OWOKIbIc/rLI8Rw==', 'Expect': '100-continue'}, 'body': &lt;s3transfer.utils.ReadFileChunk object at 0x7f3eeca2cef0&gt;, 'url': 'http://s3g:9878/erasure/test_key_to_check_etag_differences', 'context': {'client_region': 'us-west-1', 'client_config': &lt;botocore.config.Config object at 0x7f3eecaeaa20&gt;, 'has_streaming_input': True, 'auth_type': None, 'signing': {'bucket': 'erasure'}}}
2023-11-29 08:27:56,911 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function signal_not_transferring at 0x7f3ef1177158&gt;
2023-11-29 08:27:56,911 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;bound method RequestSigner.handler of &lt;botocore.signers.RequestSigner object at 0x7f3eecaea9e8&gt;&gt;
2023-11-29 08:27:56,911 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.PutObject: calling handler &lt;bound method S3EndpointSetter.set_signer of &lt;botocore.utils.S3EndpointSetter object at 0x7f3eecaba1d0&gt;&gt;
2023-11-29 08:27:56,912 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event choose-signer.s3.PutObject: calling handler &lt;function set_operation_specific_signer at 0x7f3eeec4e7b8&gt;
2023-11-29 08:27:56,912 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event before-sign.s3.PutObject: calling handler &lt;bound method S3EndpointSetter.set_endpoint of &lt;botocore.utils.S3EndpointSetter object at 0x7f3eecaba1d0&gt;&gt;
2023-11-29 08:27:56,912 - ThreadPoolExecutor-0_0 - botocore.utils - DEBUG - Using S3 path style addressing.
2023-11-29 08:27:56,913 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Calculating signature using v4 auth.
2023-11-29 08:27:56,913 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - CanonicalRequest:
PUT
/erasure/test_key_to_check_etag_differences

content-md5:xW4w9m9OWOKIbIc/rLI8Rw==
host:s3g:9878
x-amz-content-sha256:54ef26348e3f98a75740663ef8638786de002913e0bf27ca4b64032c69fecb64
x-amz-date:20231129T082756Z

content-md5;host;x-amz-content-sha256;x-amz-date
54ef26348e3f98a75740663ef8638786de002913e0bf27ca4b64032c69fecb64
2023-11-29 08:27:56,913 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - StringToSign:
AWS4-HMAC-SHA256
20231129T082756Z
20231129/us-west-1/s3/aws4_request
01f84125db9b1dbede5ceebf1e97c455d103623f5f26b2587181dec7085afd22
2023-11-29 08:27:56,913 - ThreadPoolExecutor-0_0 - botocore.auth - DEBUG - Signature:
15b9dceb46dd75a1b171620c91730042459e6c59c0f216a78f64190b82146290
2023-11-29 08:27:56,913 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function signal_transferring at 0x7f3ef11771e0&gt;
2023-11-29 08:27:56,913 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event request-created.s3.PutObject: calling handler &lt;function add_retry_headers at 0x7f3eeec54730&gt;
2023-11-29 08:27:56,913 - ThreadPoolExecutor-0_0 - botocore.endpoint - DEBUG - Sending http request: &lt;AWSPreparedRequest stream_output=False, method=PUT, url=http://s3g:9878/erasure/test_key_to_check_etag_differences, headers={'User-Agent': b'aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10', 'Content-MD5': b'xW4w9m9OWOKIbIc/rLI8Rw==', 'Expect': b'100-continue', 'X-Amz-Date': b'20231129T082756Z', 'X-Amz-Content-SHA256': b'54ef26348e3f98a75740663ef8638786de002913e0bf27ca4b64032c69fecb64', 'Authorization': b'AWS4-HMAC-SHA256 Credential=dlfknslnfslf/20231129/us-west-1/s3/aws4_request, SignedHeaders=content-md5;host;x-amz-content-sha256;x-amz-date, Signature=15b9dceb46dd75a1b171620c91730042459e6c59c0f216a78f64190b82146290', 'amz-sdk-invocation-id': b'631db197-73ad-413e-bb2e-efd59568c14b', 'amz-sdk-request': b'attempt=1', 'Content-Length': '1048576'}&gt;
2023-11-29 08:27:56,914 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - Starting new HTTP connection (1): s3g:9878
2023-11-29 08:27:56,915 - ThreadPoolExecutor-0_0 - botocore.awsrequest - DEBUG - Waiting for 100 Continue response.
2023-11-29 08:27:56,916 - ThreadPoolExecutor-0_0 - botocore.awsrequest - DEBUG - 100 Continue response seen, now sending request body.
Completed 256.0 KiB/1.0 MiB (8.9 MiB/s) with 1 file(s) remaining
Completed 512.0 KiB/1.0 MiB (17.3 MiB/s) with 1 file(s) remaining
Completed 768.0 KiB/1.0 MiB (25.3 MiB/s) with 1 file(s) remaining
Completed 1.0 MiB/1.0 MiB (33.2 MiB/s) with 1 file(s) remaining  
2023-11-29 08:27:56,969 - ThreadPoolExecutor-0_0 - urllib3.connectionpool - DEBUG - http://s3g:9878 "PUT /erasure/test_key_to_check_etag_differences HTTP/1.1" 200 0
2023-11-29 08:27:56,970 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Wed, 29 Nov 2023 08:27:56 GMT', 'Cache-Control': 'no-cache', 'Expires': 'Wed, 29 Nov 2023 08:27:56 GMT', 'Pragma': 'no-cache', 'Content-Type': 'text/plain;charset=utf-8', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'X-FRAME-OPTIONS': 'SAMEORIGIN', 'ETag': '"c56e30f66f4e58e2886c873facb23c47"', 'Server': 'Ozone', 'x-amz-id-2': 'RcK3fkDptkchgX', 'x-amz-request-id': 'd82269c6-3a4c-42d6-835d-6761c4e62bde', 'Content-Length': '0'}
2023-11-29 08:27:56,970 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response body:
b''
2023-11-29 08:27:56,971 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;botocore.retryhandler.RetryHandler object at 0x7f3eecaeada0&gt;
2023-11-29 08:27:56,971 - ThreadPoolExecutor-0_0 - botocore.retryhandler - DEBUG - No retry needed.
2023-11-29 08:27:56,971 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event needs-retry.s3.PutObject: calling handler &lt;bound method S3RegionRedirector.redirect_from_error of &lt;botocore.utils.S3RegionRedirector object at 0x7f3eecaead68&gt;&gt;
2023-11-29 08:27:56,971 - ThreadPoolExecutor-0_0 - botocore.hooks - DEBUG - Event after-call.s3.PutObject: calling handler &lt;function enhance_error_msg at 0x7f3eed17d598&gt;
2023-11-29 08:27:56,971 - ThreadPoolExecutor-0_0 - s3transfer.utils - DEBUG - Releasing acquire 0/None
upload: ../../tmp/file2 to s3://erasure/test_key_to_check_etag_differences
2023-11-29 08:27:56,972 - Thread-1 - awscli.customizations.s3.results - DEBUG - Shutdown request received in result processing thread, shutting down result thread.</msg>
<status status="PASS" starttime="20231129 08:27:57.012" endtime="20231129 08:27:57.013"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:57.014" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:57.013" endtime="20231129 08:27:57.014"/>
</kw>
<status status="PASS" starttime="20231129 08:27:56.507" endtime="20231129 08:27:57.014"/>
</kw>
<msg timestamp="20231129 08:27:57.014" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:56.507" endtime="20231129 08:27:57.014"/>
</kw>
<msg timestamp="20231129 08:27:57.015" level="INFO">${output} = 2023-11-29 08:27:56,853 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10
2023-11-29 08:27:56,854 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20231129 08:27:56.507" endtime="20231129 08:27:57.015"/>
</kw>
<msg timestamp="20231129 08:27:57.015" level="INFO">${file2UploadResult} = 2023-11-29 08:27:56,853 - MainThread - awscli.clidriver - DEBUG - CLI version: aws-cli/1.24.10 Python/3.6.8 Linux/5.15.0-1051-azure botocore/1.26.10
2023-11-29 08:27:56,854 - MainThread - awscli.clidr...</msg>
<status status="PASS" starttime="20231129 08:27:56.506" endtime="20231129 08:27:57.015"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<var>${match}</var>
<var>${etag2}</var>
<arg>${file2UploadResult}</arg>
<arg>PUT /${BUCKET}/test_key_to_check_etag_differences\ .*?Response headers.*?ETag':\ '"(.*?)"'</arg>
<arg>flags=DOTALL</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20231129 08:27:57.016" level="INFO">${match} = PUT /erasure/test_key_to_check_etag_differences HTTP/1.1" 200 0
2023-11-29 08:27:56,970 - ThreadPoolExecutor-0_0 - botocore.parsers - DEBUG - Response headers: {'Date': 'Wed, 29 Nov 2023 08:27:56 GMT'...</msg>
<msg timestamp="20231129 08:27:57.016" level="INFO">${etag2} = c56e30f66f4e58e2886c873facb23c47</msg>
<status status="PASS" starttime="20231129 08:27:57.015" endtime="20231129 08:27:57.016"/>
</kw>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<arg>${etag1}</arg>
<arg>${etag2}</arg>
<doc>Fails if objects are equal after converting them to strings.</doc>
<status status="PASS" starttime="20231129 08:27:57.016" endtime="20231129 08:27:57.016"/>
</kw>
<kw name="Execute AWSS3Cli" library="commonawslib">
<arg>rm s3://${BUCKET}/test_key_to_check_etag_differences</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3 --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:57.020" level="INFO">Running command 'aws s3 --endpoint-url http://s3g:9878 rm s3://erasure/test_key_to_check_etag_differences 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:57.456" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:57.456" level="INFO">${output} = delete: s3://erasure/test_key_to_check_etag_differences</msg>
<status status="PASS" starttime="20231129 08:27:57.018" endtime="20231129 08:27:57.456"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:57.457" level="INFO">delete: s3://erasure/test_key_to_check_etag_differences</msg>
<status status="PASS" starttime="20231129 08:27:57.457" endtime="20231129 08:27:57.457"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:57.458" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:57.457" endtime="20231129 08:27:57.458"/>
</kw>
<status status="PASS" starttime="20231129 08:27:57.018" endtime="20231129 08:27:57.458"/>
</kw>
<msg timestamp="20231129 08:27:57.458" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:57.017" endtime="20231129 08:27:57.458"/>
</kw>
<msg timestamp="20231129 08:27:57.458" level="INFO">${output} = delete: s3://erasure/test_key_to_check_etag_differences</msg>
<status status="PASS" starttime="20231129 08:27:57.017" endtime="20231129 08:27:57.458"/>
</kw>
<status status="PASS" starttime="20231129 08:27:57.016" endtime="20231129 08:27:57.458"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -rf /tmp/file1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:57.461" level="INFO">Running command 'rm -rf /tmp/file1 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:57.463" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:57.463" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:27:57.460" endtime="20231129 08:27:57.463"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:57.464" level="INFO"/>
<status status="PASS" starttime="20231129 08:27:57.463" endtime="20231129 08:27:57.464"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:57.464" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:57.464" endtime="20231129 08:27:57.464"/>
</kw>
<status status="PASS" starttime="20231129 08:27:57.459" endtime="20231129 08:27:57.464"/>
</kw>
<msg timestamp="20231129 08:27:57.464" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:57.459" endtime="20231129 08:27:57.465"/>
</kw>
<status status="PASS" starttime="20231129 08:27:57.459" endtime="20231129 08:27:57.465"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -rf /tmp/file2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:57.467" level="INFO">Running command 'rm -rf /tmp/file2 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:57.469" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:57.469" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:27:57.466" endtime="20231129 08:27:57.469"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:57.469" level="INFO"/>
<status status="PASS" starttime="20231129 08:27:57.469" endtime="20231129 08:27:57.469"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:57.470" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:57.470" endtime="20231129 08:27:57.470"/>
</kw>
<status status="PASS" starttime="20231129 08:27:57.465" endtime="20231129 08:27:57.470"/>
</kw>
<msg timestamp="20231129 08:27:57.470" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:57.465" endtime="20231129 08:27:57.470"/>
</kw>
<status status="PASS" starttime="20231129 08:27:57.465" endtime="20231129 08:27:57.470"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:27:55.939" endtime="20231129 08:27:57.470"/>
</test>
<doc>S3 gateway test with aws cli</doc>
<status status="PASS" starttime="20231129 08:27:32.498" endtime="20231129 08:27:57.472"/>
</suite>
<suite id="s1-s1-s15" name="S3 Getsecret" source="/opt/hadoop/smoketest/s3/s3_getsecret.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231129 08:27:57.478" endtime="20231129 08:27:57.479"/>
</kw>
<test id="s1-s1-s15-t1" name="Without OM service ID" line="32">
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>N/A</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<msg timestamp="20231129 08:27:57.479" level="INFO">Execution passed with message:
N/A</msg>
<status status="PASS" starttime="20231129 08:27:57.479" endtime="20231129 08:27:57.480"/>
</kw>
<kw name="Revoke secrets">
<status status="NOT RUN" starttime="20231129 08:27:57.480" endtime="20231129 08:27:57.480"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone s3 getsecret -u testuser2</arg>
<status status="NOT RUN" starttime="20231129 08:27:57.480" endtime="20231129 08:27:57.480"/>
</kw>
<kw name="Verify output">
<arg>${output}</arg>
<status status="NOT RUN" starttime="20231129 08:27:57.480" endtime="20231129 08:27:57.480"/>
</kw>
<kw name="Revoke secrets">
<status status="NOT RUN" starttime="20231129 08:27:57.480" endtime="20231129 08:27:57.480"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20231129 08:27:57.479" endtime="20231129 08:27:57.480">N/A</status>
</test>
<test id="s1-s1-s15-t2" name="With OM service ID" line="39">
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${OM_HA_PARAM}' == '${EMPTY}'</arg>
<arg>duplicate test in non-HA env.</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<msg timestamp="20231129 08:27:57.482" level="INFO">Execution passed with message:
duplicate test in non-HA env.</msg>
<status status="PASS" starttime="20231129 08:27:57.481" endtime="20231129 08:27:57.482"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'false'</arg>
<arg>N/A</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="NOT RUN" starttime="20231129 08:27:57.482" endtime="20231129 08:27:57.482"/>
</kw>
<kw name="Revoke secrets">
<status status="NOT RUN" starttime="20231129 08:27:57.482" endtime="20231129 08:27:57.482"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone s3 getsecret -u testuser2 ${OM_HA_PARAM}</arg>
<status status="NOT RUN" starttime="20231129 08:27:57.482" endtime="20231129 08:27:57.482"/>
</kw>
<kw name="Verify output">
<arg>${output}</arg>
<status status="NOT RUN" starttime="20231129 08:27:57.483" endtime="20231129 08:27:57.483"/>
</kw>
<kw name="Revoke secrets">
<status status="NOT RUN" starttime="20231129 08:27:57.483" endtime="20231129 08:27:57.483"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20231129 08:27:57.481" endtime="20231129 08:27:57.483">duplicate test in non-HA env.</status>
</test>
<doc>Test ozone s3 getsecret command</doc>
<status status="PASS" starttime="20231129 08:27:57.474" endtime="20231129 08:27:57.483"/>
</suite>
<suite id="s1-s1-s16" name="Secretgenerate" source="/opt/hadoop/smoketest/s3/secretgenerate.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20231129 08:27:57.492" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:57.492" endtime="20231129 08:27:57.492"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231129 08:27:57.493" endtime="20231129 08:27:57.493"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231129 08:27:57.493" endtime="20231129 08:27:57.493"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:27:57.493" endtime="20231129 08:27:57.493"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:27:57.493" endtime="20231129 08:27:57.493"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:27:57.493" endtime="20231129 08:27:57.493"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:27:57.493" endtime="20231129 08:27:57.493"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:27:57.494" endtime="20231129 08:27:57.494"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20231129 08:27:57.494" endtime="20231129 08:27:57.494"/>
</kw>
<status status="PASS" starttime="20231129 08:27:57.492" endtime="20231129 08:27:57.494"/>
</kw>
<test id="s1-s1-s16-t1" name="S3 Gateway Generate Secret" line="32">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231129 08:27:57.494" endtime="20231129 08:27:57.495"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl -X PUT --negotiate -u : -v ${ENDPOINT_URL}/secret</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:57.497" level="INFO">Running command 'curl -X PUT --negotiate -u : -v http://s3g:9878/secret 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:57.518" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:57.518" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20231129 08:27:57.496" endtime="20231129 08:27:57.518"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:57.519" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to s3g port 9878 (#0)
*   Trying 172.18.0.6...
* Connected to s3g (172.18.0.6) port 9878 (#0)
&gt; PUT /secret HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: s3g:9878
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 400 Bad Request
&lt; Date: Wed, 29 Nov 2023 08:27:57 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Wed, 29 Nov 2023 08:27:57 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/plain
&lt; X-Content-Type-Options: nosniff
&lt; X-XSS-Protection: 1; mode=block
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; Server: Ozone
&lt; x-amz-id-2: 5RJfvYsxPp3oFc
&lt; x-amz-request-id: fb90e76e-1893-4374-8df7-170d6df1e5d7
&lt; Content-Length: 31
&lt; 
{ [data not shown]

100    31  100    31    0     0   1935      0 --:--:-- --:--:-- --:--:--  2066
* Connection #0 to host s3g left intact
S3 Secret endpoint is disabled.</msg>
<status status="PASS" starttime="20231129 08:27:57.518" endtime="20231129 08:27:57.519"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:57.519" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:57.519" endtime="20231129 08:27:57.519"/>
</kw>
<status status="PASS" starttime="20231129 08:27:57.495" endtime="20231129 08:27:57.519"/>
</kw>
<msg timestamp="20231129 08:27:57.520" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:57.495" endtime="20231129 08:27:57.520"/>
</kw>
<msg timestamp="20231129 08:27:57.520" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20231129 08:27:57.495" endtime="20231129 08:27:57.520"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>HTTP/1.1 200 OK</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231129 08:27:57.520" endtime="20231129 08:27:57.520"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>&lt;awsAccessKey&gt;.*&lt;/awsAccessKey&gt;&lt;awsSecret&gt;.*&lt;/awsSecret&gt;</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="NOT RUN" starttime="20231129 08:27:57.521" endtime="20231129 08:27:57.521"/>
</kw>
<status status="NOT RUN" starttime="20231129 08:27:57.520" endtime="20231129 08:27:57.521"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3 Secret endpoint is disabled.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:27:57.521" endtime="20231129 08:27:57.521"/>
</kw>
<status status="PASS" starttime="20231129 08:27:57.521" endtime="20231129 08:27:57.521"/>
</branch>
<status status="PASS" starttime="20231129 08:27:57.520" endtime="20231129 08:27:57.521"/>
</if>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:27:57.494" endtime="20231129 08:27:57.521"/>
</test>
<test id="s1-s1-s16-t2" name="S3 Gateway Generate Secret By Username" line="42">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231129 08:27:57.523" endtime="20231129 08:27:57.523"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl -X PUT --negotiate -u : -v ${ENDPOINT_URL}/secret/testuser2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:57.526" level="INFO">Running command 'curl -X PUT --negotiate -u : -v http://s3g:9878/secret/testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:57.536" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:57.537" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20231129 08:27:57.524" endtime="20231129 08:27:57.537"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:57.537" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to s3g port 9878 (#0)
*   Trying 172.18.0.6...
* Connected to s3g (172.18.0.6) port 9878 (#0)
&gt; PUT /secret/testuser2 HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: s3g:9878
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 400 Bad Request
&lt; Date: Wed, 29 Nov 2023 08:27:57 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Wed, 29 Nov 2023 08:27:57 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/plain
&lt; X-Content-Type-Options: nosniff
&lt; X-XSS-Protection: 1; mode=block
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; Server: Ozone
&lt; x-amz-id-2: GN6PIptG
&lt; x-amz-request-id: 09963762-c32d-4c91-a139-84f511b74da1
&lt; Content-Length: 31
&lt; 
{ [data not shown]

100    31  100    31    0     0   4874      0 --:--:-- --:--:-- --:--:--  5166
* Connection #0 to host s3g left intact
S3 Secret endpoint is disabled.</msg>
<status status="PASS" starttime="20231129 08:27:57.537" endtime="20231129 08:27:57.538"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:57.538" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:57.538" endtime="20231129 08:27:57.538"/>
</kw>
<status status="PASS" starttime="20231129 08:27:57.524" endtime="20231129 08:27:57.538"/>
</kw>
<msg timestamp="20231129 08:27:57.538" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:57.524" endtime="20231129 08:27:57.538"/>
</kw>
<msg timestamp="20231129 08:27:57.539" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20231129 08:27:57.523" endtime="20231129 08:27:57.539"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>HTTP/1.1 200 OK</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231129 08:27:57.539" endtime="20231129 08:27:57.539"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>&lt;awsAccessKey&gt;.*&lt;/awsAccessKey&gt;&lt;awsSecret&gt;.*&lt;/awsSecret&gt;</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="NOT RUN" starttime="20231129 08:27:57.539" endtime="20231129 08:27:57.539"/>
</kw>
<status status="NOT RUN" starttime="20231129 08:27:57.539" endtime="20231129 08:27:57.539"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3 Secret endpoint is disabled.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:27:57.540" endtime="20231129 08:27:57.540"/>
</kw>
<status status="PASS" starttime="20231129 08:27:57.539" endtime="20231129 08:27:57.540"/>
</branch>
<status status="PASS" starttime="20231129 08:27:57.539" endtime="20231129 08:27:57.540"/>
</if>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:27:57.522" endtime="20231129 08:27:57.540"/>
</test>
<doc>S3 Secret Generate test</doc>
<status status="PASS" starttime="20231129 08:27:57.484" endtime="20231129 08:27:57.541"/>
</suite>
<suite id="s1-s1-s17" name="Secretrevoke" source="/opt/hadoop/smoketest/s3/secretrevoke.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20231129 08:27:57.551" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:57.551" endtime="20231129 08:27:57.551"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231129 08:27:57.551" endtime="20231129 08:27:57.551"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231129 08:27:57.551" endtime="20231129 08:27:57.551"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:27:57.551" endtime="20231129 08:27:57.551"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:27:57.551" endtime="20231129 08:27:57.551"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:27:57.551" endtime="20231129 08:27:57.551"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:27:57.552" endtime="20231129 08:27:57.552"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:27:57.552" endtime="20231129 08:27:57.552"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20231129 08:27:57.552" endtime="20231129 08:27:57.552"/>
</kw>
<status status="PASS" starttime="20231129 08:27:57.550" endtime="20231129 08:27:57.552"/>
</kw>
<test id="s1-s1-s17-t1" name="S3 Gateway Revoke Secret" line="33">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231129 08:27:57.553" endtime="20231129 08:27:57.553"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl -X DELETE --negotiate -u : -v ${ENDPOINT_URL}/secret</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:57.555" level="INFO">Running command 'curl -X DELETE --negotiate -u : -v http://s3g:9878/secret 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:57.566" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:57.566" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20231129 08:27:57.554" endtime="20231129 08:27:57.566"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:57.567" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to s3g port 9878 (#0)
*   Trying 172.18.0.6...
* Connected to s3g (172.18.0.6) port 9878 (#0)
&gt; DELETE /secret HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: s3g:9878
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 400 Bad Request
&lt; Date: Wed, 29 Nov 2023 08:27:57 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Wed, 29 Nov 2023 08:27:57 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/plain
&lt; X-Content-Type-Options: nosniff
&lt; X-XSS-Protection: 1; mode=block
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; Server: Ozone
&lt; x-amz-id-2: AVcJZdj94
&lt; x-amz-request-id: 368d5ef5-6b53-49f0-aefa-98f1dcfde69a
&lt; Content-Length: 31
&lt; 
{ [data not shown]

100    31  100    31    0     0   5074      0 --:--:-- --:--:-- --:--:--  5166
* Connection #0 to host s3g left intact
S3 Secret endpoint is disabled.</msg>
<status status="PASS" starttime="20231129 08:27:57.566" endtime="20231129 08:27:57.567"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:57.567" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:57.567" endtime="20231129 08:27:57.567"/>
</kw>
<status status="PASS" starttime="20231129 08:27:57.554" endtime="20231129 08:27:57.567"/>
</kw>
<msg timestamp="20231129 08:27:57.568" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:57.553" endtime="20231129 08:27:57.568"/>
</kw>
<msg timestamp="20231129 08:27:57.568" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20231129 08:27:57.553" endtime="20231129 08:27:57.568"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>HTTP/1.1 200 OK</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231129 08:27:57.568" endtime="20231129 08:27:57.568"/>
</kw>
<status status="NOT RUN" starttime="20231129 08:27:57.568" endtime="20231129 08:27:57.568"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3 Secret endpoint is disabled.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:27:57.569" endtime="20231129 08:27:57.569"/>
</kw>
<status status="PASS" starttime="20231129 08:27:57.568" endtime="20231129 08:27:57.569"/>
</branch>
<status status="PASS" starttime="20231129 08:27:57.568" endtime="20231129 08:27:57.569"/>
</if>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:27:57.552" endtime="20231129 08:27:57.569"/>
</test>
<test id="s1-s1-s17-t2" name="S3 Gateway Revoke Secret By Username" line="42">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231129 08:27:57.570" endtime="20231129 08:27:57.571"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl -X DELETE --negotiate -u : -v ${ENDPOINT_URL}/secret/testuser2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:57.573" level="INFO">Running command 'curl -X DELETE --negotiate -u : -v http://s3g:9878/secret/testuser2 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:57.583" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:57.583" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20231129 08:27:57.572" endtime="20231129 08:27:57.583"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:57.584" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to s3g port 9878 (#0)
*   Trying 172.18.0.6...
* Connected to s3g (172.18.0.6) port 9878 (#0)
&gt; DELETE /secret/testuser2 HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: s3g:9878
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 400 Bad Request
&lt; Date: Wed, 29 Nov 2023 08:27:57 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Wed, 29 Nov 2023 08:27:57 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/plain
&lt; X-Content-Type-Options: nosniff
&lt; X-XSS-Protection: 1; mode=block
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; Server: Ozone
&lt; x-amz-id-2: HLQ2uWUBg
&lt; x-amz-request-id: 87918826-1ad0-4d65-ae36-a2ee08f68c00
&lt; Content-Length: 31
&lt; 
{ [data not shown]

100    31  100    31    0     0   5114      0 --:--:-- --:--:-- --:--:--  5166
* Connection #0 to host s3g left intact
S3 Secret endpoint is disabled.</msg>
<status status="PASS" starttime="20231129 08:27:57.584" endtime="20231129 08:27:57.584"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:57.585" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:57.585" endtime="20231129 08:27:57.585"/>
</kw>
<status status="PASS" starttime="20231129 08:27:57.572" endtime="20231129 08:27:57.585"/>
</kw>
<msg timestamp="20231129 08:27:57.585" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:57.571" endtime="20231129 08:27:57.585"/>
</kw>
<msg timestamp="20231129 08:27:57.585" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20231129 08:27:57.571" endtime="20231129 08:27:57.585"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>HTTP/1.1 200 OK</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231129 08:27:57.586" endtime="20231129 08:27:57.586"/>
</kw>
<status status="NOT RUN" starttime="20231129 08:27:57.586" endtime="20231129 08:27:57.586"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>S3 Secret endpoint is disabled.</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:27:57.586" endtime="20231129 08:27:57.586"/>
</kw>
<status status="PASS" starttime="20231129 08:27:57.586" endtime="20231129 08:27:57.586"/>
</branch>
<status status="PASS" starttime="20231129 08:27:57.586" endtime="20231129 08:27:57.587"/>
</if>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:27:57.570" endtime="20231129 08:27:57.587"/>
</test>
<doc>S3 Secret Revoke test</doc>
<status status="PASS" starttime="20231129 08:27:57.542" endtime="20231129 08:27:57.587"/>
</suite>
<suite id="s1-s1-s18" name="Webui" source="/opt/hadoop/smoketest/s3/webui.robot">
<kw name="Setup s3 tests" library="commonawslib" type="SETUP">
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20231129 08:27:57.597" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:57.597" endtime="20231129 08:27:57.597"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Generate random prefix</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231129 08:27:57.597" endtime="20231129 08:27:57.597"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Install aws cli</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<status status="NOT RUN" starttime="20231129 08:27:57.597" endtime="20231129 08:27:57.597"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${OZONE_S3_SET_CREDENTIALS}' == 'true'</arg>
<arg>Setup v4 headers</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:27:57.598" endtime="20231129 08:27:57.598"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'generated'</arg>
<arg>Create generated bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:27:57.598" endtime="20231129 08:27:57.598"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'link'</arg>
<arg>Setup links for S3 tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:27:57.598" endtime="20231129 08:27:57.598"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'encrypted'</arg>
<arg>Create encrypted bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:27:57.598" endtime="20231129 08:27:57.598"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET}' == 'erasure'</arg>
<arg>Create EC bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20231129 08:27:57.598" endtime="20231129 08:27:57.598"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${OZONE_S3_TESTS_SET_UP}</arg>
<arg>${TRUE}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20231129 08:27:57.598" endtime="20231129 08:27:57.598"/>
</kw>
<status status="PASS" starttime="20231129 08:27:57.596" endtime="20231129 08:27:57.599"/>
</kw>
<test id="s1-s1-s18-t1" name="S3 Gateway Web UI" line="32">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231129 08:27:57.599" endtime="20231129 08:27:57.599"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -v ${ENDPOINT_URL}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:57.602" level="INFO">Running command 'curl --negotiate -u : -v http://s3g:9878 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:57.611" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:57.611" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20231129 08:27:57.600" endtime="20231129 08:27:57.611"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:57.612" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to s3g port 9878 (#0)
*   Trying 172.18.0.6...
* Connected to s3g (172.18.0.6) port 9878 (#0)
&gt; GET / HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: s3g:9878
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 302 Found
&lt; Date: Wed, 29 Nov 2023 08:27:57 GMT
&lt; Cache-Control: no-cache
&lt; Expires: Wed, 29 Nov 2023 08:27:57 GMT
&lt; Pragma: no-cache
&lt; Content-Type: text/plain;charset=utf-8
&lt; X-Content-Type-Options: nosniff
&lt; X-XSS-Protection: 1; mode=block
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; Location: http://s3g:9878/static/
&lt; Content-Length: 0
&lt; 

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
* Connection #0 to host s3g left intact</msg>
<status status="PASS" starttime="20231129 08:27:57.611" endtime="20231129 08:27:57.612"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:57.612" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:57.612" endtime="20231129 08:27:57.612"/>
</kw>
<status status="PASS" starttime="20231129 08:27:57.600" endtime="20231129 08:27:57.613"/>
</kw>
<msg timestamp="20231129 08:27:57.613" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:57.600" endtime="20231129 08:27:57.613"/>
</kw>
<msg timestamp="20231129 08:27:57.613" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20231129 08:27:57.599" endtime="20231129 08:27:57.613"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location:</arg>
<arg>ignore_case=True</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:27:57.613" endtime="20231129 08:27:57.614"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>/static/</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:27:57.614" endtime="20231129 08:27:57.614"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -v ${ENDPOINT_URL}/static/index.html</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:57.617" level="INFO">Running command 'curl --negotiate -u : -v http://s3g:9878/static/index.html 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:57.632" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:57.632" level="INFO">${output} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20231129 08:27:57.615" endtime="20231129 08:27:57.632"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:57.633" level="INFO">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* About to connect() to s3g port 9878 (#0)
*   Trying 172.18.0.6...
* Connected to s3g (172.18.0.6) port 9878 (#0)
&gt; GET /static/index.html HTTP/1.1
&gt; User-Agent: curl/7.29.0
&gt; Host: s3g:9878
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Wed, 29 Nov 2023 08:27:57 GMT
&lt; Content-Type: text/html
&lt; X-Content-Type-Options: nosniff
&lt; X-XSS-Protection: 1; mode=block
&lt; X-FRAME-OPTIONS: SAMEORIGIN
&lt; Last-Modified: Wed, 29 Nov 2023 08:08:36 GMT
&lt; Accept-Ranges: bytes
&lt; Content-Length: 3106
&lt; 
{ [data not shown]

100  3106  100  3106    0     0   281k      0 --:--:-- --:--:-- --:--:--  303k
* Connection #0 to host s3g left intact
&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"&gt;
&lt;!--
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
--&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="utf-8"&gt;
    &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
    &lt;meta name="viewport" content="width=device-width, initial-scale=1"&gt;
    &lt;meta http-equiv="Content-Security-Policy" content="script-src 'self';"&gt;
    &lt;!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags --&gt;
    &lt;meta name="description" content="Apache Ozone S3 gateway"&gt;

    &lt;title&gt;S3 gateway -- Apache Ozone&lt;/title&gt;

    &lt;link href="bootstrap-3.4.1/css/bootstrap.min.css" rel="stylesheet"&gt;
    &lt;link href="hadoop.css" rel="stylesheet"&gt;
    &lt;link href="ozone.css" rel="stylesheet"&gt;

&lt;/head&gt;

&lt;body&gt;

&lt;header class="navbar navbar-inverse navbar-fixed-top bs-docs-nav"&gt;
    &lt;div class="container-fluid"&gt;
        &lt;div class="navbar-header"&gt;
            &lt;button type="button" class="navbar-toggle collapsed"
                    data-toggle="collapse" data-target="#navbar"
                    aria-expanded="false" aria-controls="navbar"&gt;
                &lt;span class="sr-only"&gt;Toggle navigation&lt;/span&gt;
                &lt;span class="icon-bar"&gt;&lt;/span&gt;
                &lt;span class="icon-bar"&gt;&lt;/span&gt;
                &lt;span class="icon-bar"&gt;&lt;/span&gt;
            &lt;/button&gt;
            &lt;a class="navbar-brand" href="#"&gt;Ozone S3G&lt;/a&gt;
        &lt;/div&gt;
        &lt;div id="navbar" class="collapse navbar-collapse"&gt;
            &lt;ul class="nav navbar-nav" id="ui-tabs"&gt;
                &lt;li&gt;&lt;a href="docs"&gt;Documentation&lt;/a&gt;&lt;/li&gt;

            &lt;/ul&gt;
        &lt;/div&gt;&lt;!--/.nav-collapse --&gt;

    &lt;/div&gt;
&lt;/header&gt;


&lt;div class="container-fluid" style="margin: 12pt"&gt;

    &lt;h1&gt;S3 gateway&lt;/h1&gt;

    &lt;p&gt;This is an endpoint of Apache Ozone S3 gateway. Use it with any
        AWS S3 compatible tool
        with setting this url as an endpoint&lt;/p&gt;

    &lt;p&gt;For example with aws-cli:&lt;/p&gt;

    &lt;pre&gt;aws s3api --endpoint &lt;span id="s3gurl"&gt;&lt;/span&gt; create-bucket --bucket=wordcount&lt;/pre&gt;

    &lt;p&gt;For more information, please check the &lt;a href="docs"&gt;documentation.&lt;/a&gt;
    &lt;/p&gt;
&lt;/div&gt;&lt;!-- /.container --&gt;

&lt;script src="jquery-3.5.1.min.js"&gt;&lt;/script&gt;
&lt;script src="bootstrap-3.4.1/js/bootstrap.min.js"&gt;&lt;/script&gt;
&lt;script src="s3g.js"&gt;&lt;/script&gt;

&lt;/body&gt;
&lt;/html&gt;</msg>
<status status="PASS" starttime="20231129 08:27:57.632" endtime="20231129 08:27:57.633"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:57.633" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:57.633" endtime="20231129 08:27:57.633"/>
</kw>
<status status="PASS" starttime="20231129 08:27:57.615" endtime="20231129 08:27:57.634"/>
</kw>
<msg timestamp="20231129 08:27:57.634" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:57.615" endtime="20231129 08:27:57.634"/>
</kw>
<msg timestamp="20231129 08:27:57.634" level="INFO">${result} =   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0   ...</msg>
<status status="PASS" starttime="20231129 08:27:57.614" endtime="20231129 08:27:57.634"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Apache Ozone S3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:27:57.634" endtime="20231129 08:27:57.635"/>
</kw>
<tag>no-bucket-type</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:27:57.599" endtime="20231129 08:27:57.635"/>
</test>
<doc>S3 gateway web ui test</doc>
<status status="PASS" starttime="20231129 08:27:57.588" endtime="20231129 08:27:57.635"/>
</suite>
<status status="PASS" starttime="20231129 08:25:35.889" endtime="20231129 08:27:57.639"/>
</suite>
<suite id="s1-s2" name="Basic" source="/opt/hadoop/smoketest/ec/basic.robot">
<kw name="Prepare For Tests" library="lib" type="SETUP">
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/1mb bs=1048576 count=1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:59.690" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/1mb bs=1048576 count=1 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:59.695" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:59.695" level="INFO">${output} = 1+0 records in
1+0 records out
1048576 bytes (1.0 MB) copied, 0.00334217 s, 314 MB/s</msg>
<status status="PASS" starttime="20231129 08:27:59.688" endtime="20231129 08:27:59.695"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:59.696" level="INFO">1+0 records in
1+0 records out
1048576 bytes (1.0 MB) copied, 0.00334217 s, 314 MB/s</msg>
<status status="PASS" starttime="20231129 08:27:59.695" endtime="20231129 08:27:59.696"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:59.696" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:59.696" endtime="20231129 08:27:59.696"/>
</kw>
<status status="PASS" starttime="20231129 08:27:59.688" endtime="20231129 08:27:59.696"/>
</kw>
<msg timestamp="20231129 08:27:59.696" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:59.688" endtime="20231129 08:27:59.696"/>
</kw>
<status status="PASS" starttime="20231129 08:27:59.687" endtime="20231129 08:27:59.696"/>
</kw>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/2mb bs=1048576 count=2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:59.699" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/2mb bs=1048576 count=2 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:59.706" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:59.706" level="INFO">${output} = 2+0 records in
2+0 records out
2097152 bytes (2.1 MB) copied, 0.00632392 s, 332 MB/s</msg>
<status status="PASS" starttime="20231129 08:27:59.697" endtime="20231129 08:27:59.706"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:59.707" level="INFO">2+0 records in
2+0 records out
2097152 bytes (2.1 MB) copied, 0.00632392 s, 332 MB/s</msg>
<status status="PASS" starttime="20231129 08:27:59.707" endtime="20231129 08:27:59.707"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:59.707" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:59.707" endtime="20231129 08:27:59.708"/>
</kw>
<status status="PASS" starttime="20231129 08:27:59.697" endtime="20231129 08:27:59.708"/>
</kw>
<msg timestamp="20231129 08:27:59.708" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:59.697" endtime="20231129 08:27:59.708"/>
</kw>
<status status="PASS" starttime="20231129 08:27:59.697" endtime="20231129 08:27:59.708"/>
</kw>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/3mb bs=1048576 count=3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:59.710" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/3mb bs=1048576 count=3 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:27:59.721" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:27:59.721" level="INFO">${output} = 3+0 records in
3+0 records out
3145728 bytes (3.1 MB) copied, 0.00930974 s, 338 MB/s</msg>
<status status="PASS" starttime="20231129 08:27:59.709" endtime="20231129 08:27:59.721"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:27:59.722" level="INFO">3+0 records in
3+0 records out
3145728 bytes (3.1 MB) copied, 0.00930974 s, 338 MB/s</msg>
<status status="PASS" starttime="20231129 08:27:59.721" endtime="20231129 08:27:59.722"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:27:59.722" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:27:59.722" endtime="20231129 08:27:59.722"/>
</kw>
<status status="PASS" starttime="20231129 08:27:59.709" endtime="20231129 08:27:59.722"/>
</kw>
<msg timestamp="20231129 08:27:59.722" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:59.708" endtime="20231129 08:27:59.722"/>
</kw>
<status status="PASS" starttime="20231129 08:27:59.708" endtime="20231129 08:27:59.722"/>
</kw>
<kw name="Execute" library="os">
<arg>dd if=/dev/urandom of=/tmp/100mb bs=1048576 count=100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:27:59.725" level="INFO">Running command 'dd if=/dev/urandom of=/tmp/100mb bs=1048576 count=100 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:28:00.032" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:28:00.032" level="INFO">${output} = 100+0 records in
100+0 records out
104857600 bytes (105 MB) copied, 0.305053 s, 344 MB/s</msg>
<status status="PASS" starttime="20231129 08:27:59.723" endtime="20231129 08:28:00.032"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:28:00.032" level="INFO">100+0 records in
100+0 records out
104857600 bytes (105 MB) copied, 0.305053 s, 344 MB/s</msg>
<status status="PASS" starttime="20231129 08:28:00.032" endtime="20231129 08:28:00.032"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:28:00.033" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:28:00.033" endtime="20231129 08:28:00.033"/>
</kw>
<status status="PASS" starttime="20231129 08:27:59.723" endtime="20231129 08:28:00.033"/>
</kw>
<msg timestamp="20231129 08:28:00.033" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:27:59.723" endtime="20231129 08:28:00.033"/>
</kw>
<status status="PASS" starttime="20231129 08:27:59.723" endtime="20231129 08:28:00.033"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20231129 08:28:00.034" endtime="20231129 08:28:00.034"/>
</kw>
<status status="PASS" starttime="20231129 08:27:59.687" endtime="20231129 08:28:00.034"/>
</kw>
<test id="s1-s2-t1" name="Test Bucket Creation" line="62">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${VOLUME}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:28:00.038" level="INFO">Running command 'ozone sh volume create /vol2399 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:28:03.286" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:28:03.286" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:28:00.036" endtime="20231129 08:28:03.286"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:28:03.286" level="INFO"/>
<status status="PASS" starttime="20231129 08:28:03.286" endtime="20231129 08:28:03.287"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:28:03.287" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:28:03.287" endtime="20231129 08:28:03.287"/>
</kw>
<status status="PASS" starttime="20231129 08:28:00.036" endtime="20231129 08:28:03.287"/>
</kw>
<msg timestamp="20231129 08:28:03.287" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:28:00.036" endtime="20231129 08:28:03.287"/>
</kw>
<msg timestamp="20231129 08:28:03.287" level="INFO">${result} = </msg>
<status status="PASS" starttime="20231129 08:28:00.035" endtime="20231129 08:28:03.287"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:28:03.288" endtime="20231129 08:28:03.288"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create /${VOLUME}/default</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:28:03.291" level="INFO">Running command 'ozone sh bucket create /vol2399/default 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:28:06.456" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:28:06.456" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:28:03.289" endtime="20231129 08:28:06.456"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:28:06.457" level="INFO"/>
<status status="PASS" starttime="20231129 08:28:06.457" endtime="20231129 08:28:06.457"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:28:06.458" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:28:06.457" endtime="20231129 08:28:06.458"/>
</kw>
<status status="PASS" starttime="20231129 08:28:03.289" endtime="20231129 08:28:06.458"/>
</kw>
<msg timestamp="20231129 08:28:06.458" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:28:03.288" endtime="20231129 08:28:06.458"/>
</kw>
<msg timestamp="20231129 08:28:06.458" level="INFO">${result} = </msg>
<status status="PASS" starttime="20231129 08:28:03.288" endtime="20231129 08:28:06.458"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:28:06.458" endtime="20231129 08:28:06.458"/>
</kw>
<kw name="Verify Bucket Empty Replication Config" library="shell">
<arg>/${VOLUME}/default</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${bucket} | jq -r '.replicationConfig'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:28:06.461" level="INFO">Running command 'ozone sh bucket info /vol2399/default | jq -r '.replicationConfig' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:28:09.792" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:28:09.792" level="INFO">${output} = null</msg>
<status status="PASS" starttime="20231129 08:28:06.460" endtime="20231129 08:28:09.792"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:28:09.793" level="INFO">null</msg>
<status status="PASS" starttime="20231129 08:28:09.793" endtime="20231129 08:28:09.793"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:28:09.793" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:28:09.793" endtime="20231129 08:28:09.794"/>
</kw>
<status status="PASS" starttime="20231129 08:28:06.460" endtime="20231129 08:28:09.794"/>
</kw>
<msg timestamp="20231129 08:28:09.794" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:28:06.459" endtime="20231129 08:28:09.794"/>
</kw>
<msg timestamp="20231129 08:28:09.794" level="INFO">${result} = null</msg>
<status status="PASS" starttime="20231129 08:28:06.459" endtime="20231129 08:28:09.794"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>null</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231129 08:28:09.794" endtime="20231129 08:28:09.794"/>
</kw>
<status status="PASS" starttime="20231129 08:28:06.459" endtime="20231129 08:28:09.794"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create --replication 3 --type RATIS /${VOLUME}/ratis</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:28:09.797" level="INFO">Running command 'ozone sh bucket create --replication 3 --type RATIS /vol2399/ratis 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:28:13.161" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:28:13.161" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:28:09.796" endtime="20231129 08:28:13.161"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:28:13.161" level="INFO"/>
<status status="PASS" starttime="20231129 08:28:13.161" endtime="20231129 08:28:13.162"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:28:13.162" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:28:13.162" endtime="20231129 08:28:13.162"/>
</kw>
<status status="PASS" starttime="20231129 08:28:09.795" endtime="20231129 08:28:13.162"/>
</kw>
<msg timestamp="20231129 08:28:13.162" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:28:09.795" endtime="20231129 08:28:13.162"/>
</kw>
<msg timestamp="20231129 08:28:13.162" level="INFO">${result} = </msg>
<status status="PASS" starttime="20231129 08:28:09.795" endtime="20231129 08:28:13.162"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:28:13.163" endtime="20231129 08:28:13.163"/>
</kw>
<kw name="Verify Bucket Replica Replication Config" library="shell">
<arg>/${VOLUME}/ratis</arg>
<arg>RATIS</arg>
<arg>THREE</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${bucket} | jq -r '.replicationConfig.replicationType, .replicationConfig.replicationFactor'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:28:13.166" level="INFO">Running command 'ozone sh bucket info /vol2399/ratis | jq -r '.replicationConfig.replicationType, .replicationConfig.replicationFactor' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:28:16.498" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:28:16.498" level="INFO">${output} = RATIS
THREE</msg>
<status status="PASS" starttime="20231129 08:28:13.164" endtime="20231129 08:28:16.498"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:28:16.499" level="INFO">RATIS
THREE</msg>
<status status="PASS" starttime="20231129 08:28:16.498" endtime="20231129 08:28:16.499"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:28:16.499" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:28:16.499" endtime="20231129 08:28:16.499"/>
</kw>
<status status="PASS" starttime="20231129 08:28:13.164" endtime="20231129 08:28:16.500"/>
</kw>
<msg timestamp="20231129 08:28:16.500" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:28:13.164" endtime="20231129 08:28:16.500"/>
</kw>
<msg timestamp="20231129 08:28:16.500" level="INFO">${result} = RATIS
THREE</msg>
<status status="PASS" starttime="20231129 08:28:13.163" endtime="20231129 08:28:16.500"/>
</kw>
<kw name="Verify Replica Replication Config" library="shell">
<arg>${result}</arg>
<arg>${type}</arg>
<arg>${factor}</arg>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${type}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:28:16.501" endtime="20231129 08:28:16.501"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${factor}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:28:16.501" endtime="20231129 08:28:16.502"/>
</kw>
<status status="PASS" starttime="20231129 08:28:16.500" endtime="20231129 08:28:16.502"/>
</kw>
<status status="PASS" starttime="20231129 08:28:13.163" endtime="20231129 08:28:16.502"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create --replication rs-3-2-1024k --type EC /${VOLUME}/ecbucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:28:16.504" level="INFO">Running command 'ozone sh bucket create --replication rs-3-2-1024k --type EC /vol2399/ecbucket 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:28:19.701" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:28:19.701" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:28:16.503" endtime="20231129 08:28:19.701"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:28:19.701" level="INFO"/>
<status status="PASS" starttime="20231129 08:28:19.701" endtime="20231129 08:28:19.701"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:28:19.702" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:28:19.702" endtime="20231129 08:28:19.702"/>
</kw>
<status status="PASS" starttime="20231129 08:28:16.502" endtime="20231129 08:28:19.702"/>
</kw>
<msg timestamp="20231129 08:28:19.702" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:28:16.502" endtime="20231129 08:28:19.702"/>
</kw>
<msg timestamp="20231129 08:28:19.702" level="INFO">${result} = </msg>
<status status="PASS" starttime="20231129 08:28:16.502" endtime="20231129 08:28:19.702"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:28:19.703" endtime="20231129 08:28:19.703"/>
</kw>
<kw name="Verify Bucket EC Replication Config" library="shell">
<arg>/${VOLUME}/ecbucket</arg>
<arg>RS</arg>
<arg>3</arg>
<arg>2</arg>
<arg>1048576</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${bucket} | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:28:19.706" level="INFO">Running command 'ozone sh bucket info /vol2399/ecbucket | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:28:23.115" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:28:23.115" level="INFO">${output} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20231129 08:28:19.705" endtime="20231129 08:28:23.115"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:28:23.116" level="INFO">EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20231129 08:28:23.116" endtime="20231129 08:28:23.116"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:28:23.117" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:28:23.116" endtime="20231129 08:28:23.117"/>
</kw>
<status status="PASS" starttime="20231129 08:28:19.704" endtime="20231129 08:28:23.117"/>
</kw>
<msg timestamp="20231129 08:28:23.117" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:28:19.704" endtime="20231129 08:28:23.117"/>
</kw>
<msg timestamp="20231129 08:28:23.117" level="INFO">${result} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20231129 08:28:19.703" endtime="20231129 08:28:23.117"/>
</kw>
<kw name="Verify EC Replication Config" library="shell">
<arg>${result}</arg>
<arg>${encoding}</arg>
<arg>${data}</arg>
<arg>${parity}</arg>
<arg>${chunksize}</arg>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)EC$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:28:23.118" endtime="20231129 08:28:23.119"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${encoding}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:28:23.119" endtime="20231129 08:28:23.119"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${data}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:28:23.119" endtime="20231129 08:28:23.120"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${parity}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:28:23.120" endtime="20231129 08:28:23.120"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${chunksize}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:28:23.120" endtime="20231129 08:28:23.120"/>
</kw>
<status status="PASS" starttime="20231129 08:28:23.117" endtime="20231129 08:28:23.121"/>
</kw>
<status status="PASS" starttime="20231129 08:28:19.703" endtime="20231129 08:28:23.121"/>
</kw>
<status status="PASS" starttime="20231129 08:28:00.034" endtime="20231129 08:28:23.121"/>
</test>
<test id="s1-s2-t2" name="Create 1MB Key In EC Bucket" line="75">
<kw name="Create Key In EC Bucket">
<arg>1mb</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${dir}</var>
<arg>/${VOLUME}/ecbucket/dir</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:28:23.122" level="INFO">${dir} = /vol2399/ecbucket/dir</msg>
<status status="PASS" starttime="20231129 08:28:23.122" endtime="20231129 08:28:23.122"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${dir}/${size}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:28:23.123" level="INFO">${key} = /vol2399/ecbucket/dir/1mb</msg>
<status status="PASS" starttime="20231129 08:28:23.122" endtime="20231129 08:28:23.123"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${file}</var>
<arg>/tmp/${size}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:28:23.123" level="INFO">${file} = /tmp/1mb</msg>
<status status="PASS" starttime="20231129 08:28:23.123" endtime="20231129 08:28:23.123"/>
</kw>
<kw name="Create Key" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put ${args} ${key} ${file}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:28:23.127" level="INFO">Running command 'ozone sh key put  /vol2399/ecbucket/dir/1mb /tmp/1mb 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:28:28.212" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:28:28.212" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:28:23.125" endtime="20231129 08:28:28.213"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:28:28.213" level="INFO"/>
<status status="PASS" starttime="20231129 08:28:28.213" endtime="20231129 08:28:28.213"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:28:28.214" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:28:28.213" endtime="20231129 08:28:28.214"/>
</kw>
<status status="PASS" starttime="20231129 08:28:23.125" endtime="20231129 08:28:28.214"/>
</kw>
<msg timestamp="20231129 08:28:28.214" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:28:23.124" endtime="20231129 08:28:28.214"/>
</kw>
<msg timestamp="20231129 08:28:28.214" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:28:23.124" endtime="20231129 08:28:28.214"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:28:28.214" endtime="20231129 08:28:28.215"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Uploaded ${file} to ${key}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:28:28.215" level="INFO">Uploaded /tmp/1mb to /vol2399/ecbucket/dir/1mb</msg>
<status status="PASS" starttime="20231129 08:28:28.215" endtime="20231129 08:28:28.215"/>
</kw>
<status status="PASS" starttime="20231129 08:28:23.123" endtime="20231129 08:28:28.215"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231129 08:28:28.217" level="INFO">${postfix} = 20567</msg>
<status status="PASS" starttime="20231129 08:28:28.216" endtime="20231129 08:28:28.217"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:28:28.217" level="INFO">${tmpfile} = /tmp/tempkey-20567</msg>
<status status="PASS" starttime="20231129 08:28:28.217" endtime="20231129 08:28:28.217"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:28:28.220" level="INFO">Running command 'ozone sh key get /vol2399/ecbucket/dir/1mb /tmp/tempkey-20567 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:28:33.028" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:28:33.028" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:28:28.218" endtime="20231129 08:28:33.028"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:28:33.029" level="INFO"/>
<status status="PASS" starttime="20231129 08:28:33.029" endtime="20231129 08:28:33.029"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:28:33.029" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:28:33.029" endtime="20231129 08:28:33.029"/>
</kw>
<status status="PASS" starttime="20231129 08:28:28.218" endtime="20231129 08:28:33.030"/>
</kw>
<msg timestamp="20231129 08:28:33.030" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:28:28.217" endtime="20231129 08:28:33.030"/>
</kw>
<status status="PASS" starttime="20231129 08:28:28.217" endtime="20231129 08:28:33.030"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20231129 08:28:33.031" level="INFO">Running command 'diff -q /tmp/1mb /tmp/tempkey-20567 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:28:33.033" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20231129 08:28:33.030" endtime="20231129 08:28:33.033"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:28:33.036" level="INFO">Running command 'rm -f /tmp/tempkey-20567 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:28:33.037" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:28:33.038" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:28:33.035" endtime="20231129 08:28:33.038"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:28:33.038" level="INFO"/>
<status status="PASS" starttime="20231129 08:28:33.038" endtime="20231129 08:28:33.038"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:28:33.039" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:28:33.038" endtime="20231129 08:28:33.039"/>
</kw>
<status status="PASS" starttime="20231129 08:28:33.034" endtime="20231129 08:28:33.039"/>
</kw>
<msg timestamp="20231129 08:28:33.039" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:28:33.034" endtime="20231129 08:28:33.039"/>
</kw>
<status status="PASS" starttime="20231129 08:28:33.034" endtime="20231129 08:28:33.039"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20231129 08:28:33.040" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20231129 08:28:33.039" endtime="20231129 08:28:33.040"/>
</kw>
<msg timestamp="20231129 08:28:33.040" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20231129 08:28:28.216" endtime="20231129 08:28:33.040"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20231129 08:28:33.040" endtime="20231129 08:28:33.040"/>
</kw>
<status status="PASS" starttime="20231129 08:28:28.215" endtime="20231129 08:28:33.040"/>
</kw>
<kw name="Verify Key EC Replication Config" library="shell">
<arg>${key}</arg>
<arg>RS</arg>
<arg>3</arg>
<arg>2</arg>
<arg>1048576</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${key} | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:28:33.043" level="INFO">Running command 'ozone sh key info /vol2399/ecbucket/dir/1mb | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:28:36.438" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:28:36.438" level="INFO">${output} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20231129 08:28:33.042" endtime="20231129 08:28:36.438"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:28:36.439" level="INFO">EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20231129 08:28:36.438" endtime="20231129 08:28:36.439"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:28:36.439" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:28:36.439" endtime="20231129 08:28:36.439"/>
</kw>
<status status="PASS" starttime="20231129 08:28:33.041" endtime="20231129 08:28:36.439"/>
</kw>
<msg timestamp="20231129 08:28:36.439" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:28:33.041" endtime="20231129 08:28:36.440"/>
</kw>
<msg timestamp="20231129 08:28:36.440" level="INFO">${result} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20231129 08:28:33.041" endtime="20231129 08:28:36.440"/>
</kw>
<kw name="Verify EC Replication Config" library="shell">
<arg>${result}</arg>
<arg>${encoding}</arg>
<arg>${data}</arg>
<arg>${parity}</arg>
<arg>${chunksize}</arg>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)EC$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:28:36.441" endtime="20231129 08:28:36.441"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${encoding}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:28:36.441" endtime="20231129 08:28:36.441"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${data}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:28:36.441" endtime="20231129 08:28:36.442"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${parity}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:28:36.442" endtime="20231129 08:28:36.442"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${chunksize}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:28:36.442" endtime="20231129 08:28:36.442"/>
</kw>
<status status="PASS" starttime="20231129 08:28:36.440" endtime="20231129 08:28:36.442"/>
</kw>
<status status="PASS" starttime="20231129 08:28:33.040" endtime="20231129 08:28:36.442"/>
</kw>
<kw name="Verify Key EC Replication Config" library="shell">
<arg>${dir}</arg>
<arg>RS</arg>
<arg>3</arg>
<arg>2</arg>
<arg>1048576</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${key} | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:28:36.445" level="INFO">Running command 'ozone sh key info /vol2399/ecbucket/dir | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:28:39.573" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:28:39.573" level="INFO">${output} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20231129 08:28:36.444" endtime="20231129 08:28:39.573"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:28:39.574" level="INFO">EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20231129 08:28:39.574" endtime="20231129 08:28:39.574"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:28:39.574" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:28:39.574" endtime="20231129 08:28:39.575"/>
</kw>
<status status="PASS" starttime="20231129 08:28:36.443" endtime="20231129 08:28:39.575"/>
</kw>
<msg timestamp="20231129 08:28:39.575" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:28:36.443" endtime="20231129 08:28:39.575"/>
</kw>
<msg timestamp="20231129 08:28:39.575" level="INFO">${result} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20231129 08:28:36.443" endtime="20231129 08:28:39.575"/>
</kw>
<kw name="Verify EC Replication Config" library="shell">
<arg>${result}</arg>
<arg>${encoding}</arg>
<arg>${data}</arg>
<arg>${parity}</arg>
<arg>${chunksize}</arg>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)EC$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:28:39.576" endtime="20231129 08:28:39.576"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${encoding}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:28:39.576" endtime="20231129 08:28:39.576"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${data}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:28:39.576" endtime="20231129 08:28:39.577"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${parity}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:28:39.577" endtime="20231129 08:28:39.577"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${chunksize}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:28:39.577" endtime="20231129 08:28:39.577"/>
</kw>
<status status="PASS" starttime="20231129 08:28:39.575" endtime="20231129 08:28:39.577"/>
</kw>
<status status="PASS" starttime="20231129 08:28:36.442" endtime="20231129 08:28:39.577"/>
</kw>
<status status="PASS" starttime="20231129 08:28:23.122" endtime="20231129 08:28:39.577"/>
</kw>
<status status="PASS" starttime="20231129 08:28:23.121" endtime="20231129 08:28:39.578"/>
</test>
<test id="s1-s2-t3" name="Create 2MB Key In EC Bucket" line="78">
<kw name="Create Key In EC Bucket">
<arg>2mb</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${dir}</var>
<arg>/${VOLUME}/ecbucket/dir</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:28:39.579" level="INFO">${dir} = /vol2399/ecbucket/dir</msg>
<status status="PASS" starttime="20231129 08:28:39.579" endtime="20231129 08:28:39.579"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${dir}/${size}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:28:39.579" level="INFO">${key} = /vol2399/ecbucket/dir/2mb</msg>
<status status="PASS" starttime="20231129 08:28:39.579" endtime="20231129 08:28:39.579"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${file}</var>
<arg>/tmp/${size}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:28:39.580" level="INFO">${file} = /tmp/2mb</msg>
<status status="PASS" starttime="20231129 08:28:39.580" endtime="20231129 08:28:39.580"/>
</kw>
<kw name="Create Key" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put ${args} ${key} ${file}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:28:39.583" level="INFO">Running command 'ozone sh key put  /vol2399/ecbucket/dir/2mb /tmp/2mb 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:28:44.706" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:28:44.706" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:28:39.582" endtime="20231129 08:28:44.706"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:28:44.707" level="INFO"/>
<status status="PASS" starttime="20231129 08:28:44.707" endtime="20231129 08:28:44.707"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:28:44.708" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:28:44.707" endtime="20231129 08:28:44.708"/>
</kw>
<status status="PASS" starttime="20231129 08:28:39.582" endtime="20231129 08:28:44.708"/>
</kw>
<msg timestamp="20231129 08:28:44.708" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:28:39.581" endtime="20231129 08:28:44.708"/>
</kw>
<msg timestamp="20231129 08:28:44.708" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:28:39.581" endtime="20231129 08:28:44.708"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:28:44.708" endtime="20231129 08:28:44.709"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Uploaded ${file} to ${key}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:28:44.709" level="INFO">Uploaded /tmp/2mb to /vol2399/ecbucket/dir/2mb</msg>
<status status="PASS" starttime="20231129 08:28:44.709" endtime="20231129 08:28:44.709"/>
</kw>
<status status="PASS" starttime="20231129 08:28:39.580" endtime="20231129 08:28:44.709"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231129 08:28:44.710" level="INFO">${postfix} = 71277</msg>
<status status="PASS" starttime="20231129 08:28:44.710" endtime="20231129 08:28:44.710"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:28:44.711" level="INFO">${tmpfile} = /tmp/tempkey-71277</msg>
<status status="PASS" starttime="20231129 08:28:44.711" endtime="20231129 08:28:44.711"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:28:44.714" level="INFO">Running command 'ozone sh key get /vol2399/ecbucket/dir/2mb /tmp/tempkey-71277 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:28:49.525" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:28:49.525" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:28:44.712" endtime="20231129 08:28:49.525"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:28:49.526" level="INFO"/>
<status status="PASS" starttime="20231129 08:28:49.526" endtime="20231129 08:28:49.526"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:28:49.527" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:28:49.526" endtime="20231129 08:28:49.527"/>
</kw>
<status status="PASS" starttime="20231129 08:28:44.712" endtime="20231129 08:28:49.527"/>
</kw>
<msg timestamp="20231129 08:28:49.527" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:28:44.711" endtime="20231129 08:28:49.527"/>
</kw>
<status status="PASS" starttime="20231129 08:28:44.711" endtime="20231129 08:28:49.527"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20231129 08:28:49.529" level="INFO">Running command 'diff -q /tmp/2mb /tmp/tempkey-71277 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:28:49.531" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20231129 08:28:49.527" endtime="20231129 08:28:49.531"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:28:49.534" level="INFO">Running command 'rm -f /tmp/tempkey-71277 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:28:49.535" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:28:49.535" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:28:49.533" endtime="20231129 08:28:49.535"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:28:49.536" level="INFO"/>
<status status="PASS" starttime="20231129 08:28:49.536" endtime="20231129 08:28:49.536"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:28:49.536" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:28:49.536" endtime="20231129 08:28:49.536"/>
</kw>
<status status="PASS" starttime="20231129 08:28:49.532" endtime="20231129 08:28:49.537"/>
</kw>
<msg timestamp="20231129 08:28:49.537" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:28:49.532" endtime="20231129 08:28:49.537"/>
</kw>
<status status="PASS" starttime="20231129 08:28:49.531" endtime="20231129 08:28:49.537"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20231129 08:28:49.537" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20231129 08:28:49.537" endtime="20231129 08:28:49.537"/>
</kw>
<msg timestamp="20231129 08:28:49.538" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20231129 08:28:44.710" endtime="20231129 08:28:49.538"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20231129 08:28:49.538" endtime="20231129 08:28:49.538"/>
</kw>
<status status="PASS" starttime="20231129 08:28:44.709" endtime="20231129 08:28:49.538"/>
</kw>
<kw name="Verify Key EC Replication Config" library="shell">
<arg>${key}</arg>
<arg>RS</arg>
<arg>3</arg>
<arg>2</arg>
<arg>1048576</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${key} | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:28:49.541" level="INFO">Running command 'ozone sh key info /vol2399/ecbucket/dir/2mb | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:28:52.687" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:28:52.687" level="INFO">${output} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20231129 08:28:49.539" endtime="20231129 08:28:52.687"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:28:52.688" level="INFO">EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20231129 08:28:52.687" endtime="20231129 08:28:52.688"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:28:52.688" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:28:52.688" endtime="20231129 08:28:52.688"/>
</kw>
<status status="PASS" starttime="20231129 08:28:49.539" endtime="20231129 08:28:52.688"/>
</kw>
<msg timestamp="20231129 08:28:52.688" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:28:49.539" endtime="20231129 08:28:52.689"/>
</kw>
<msg timestamp="20231129 08:28:52.689" level="INFO">${result} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20231129 08:28:49.539" endtime="20231129 08:28:52.689"/>
</kw>
<kw name="Verify EC Replication Config" library="shell">
<arg>${result}</arg>
<arg>${encoding}</arg>
<arg>${data}</arg>
<arg>${parity}</arg>
<arg>${chunksize}</arg>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)EC$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:28:52.690" endtime="20231129 08:28:52.690"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${encoding}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:28:52.690" endtime="20231129 08:28:52.690"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${data}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:28:52.690" endtime="20231129 08:28:52.691"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${parity}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:28:52.691" endtime="20231129 08:28:52.691"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${chunksize}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:28:52.691" endtime="20231129 08:28:52.691"/>
</kw>
<status status="PASS" starttime="20231129 08:28:52.689" endtime="20231129 08:28:52.691"/>
</kw>
<status status="PASS" starttime="20231129 08:28:49.538" endtime="20231129 08:28:52.691"/>
</kw>
<kw name="Verify Key EC Replication Config" library="shell">
<arg>${dir}</arg>
<arg>RS</arg>
<arg>3</arg>
<arg>2</arg>
<arg>1048576</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${key} | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:28:52.695" level="INFO">Running command 'ozone sh key info /vol2399/ecbucket/dir | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:28:55.977" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:28:55.977" level="INFO">${output} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20231129 08:28:52.693" endtime="20231129 08:28:55.977"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:28:55.978" level="INFO">EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20231129 08:28:55.978" endtime="20231129 08:28:55.978"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:28:55.978" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:28:55.978" endtime="20231129 08:28:55.979"/>
</kw>
<status status="PASS" starttime="20231129 08:28:52.693" endtime="20231129 08:28:55.979"/>
</kw>
<msg timestamp="20231129 08:28:55.979" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:28:52.692" endtime="20231129 08:28:55.979"/>
</kw>
<msg timestamp="20231129 08:28:55.979" level="INFO">${result} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20231129 08:28:52.692" endtime="20231129 08:28:55.979"/>
</kw>
<kw name="Verify EC Replication Config" library="shell">
<arg>${result}</arg>
<arg>${encoding}</arg>
<arg>${data}</arg>
<arg>${parity}</arg>
<arg>${chunksize}</arg>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)EC$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:28:55.980" endtime="20231129 08:28:55.980"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${encoding}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:28:55.980" endtime="20231129 08:28:55.980"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${data}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:28:55.981" endtime="20231129 08:28:55.981"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${parity}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:28:55.981" endtime="20231129 08:28:55.981"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${chunksize}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:28:55.981" endtime="20231129 08:28:55.981"/>
</kw>
<status status="PASS" starttime="20231129 08:28:55.979" endtime="20231129 08:28:55.981"/>
</kw>
<status status="PASS" starttime="20231129 08:28:52.692" endtime="20231129 08:28:55.982"/>
</kw>
<status status="PASS" starttime="20231129 08:28:39.579" endtime="20231129 08:28:55.982"/>
</kw>
<status status="PASS" starttime="20231129 08:28:39.578" endtime="20231129 08:28:55.982"/>
</test>
<test id="s1-s2-t4" name="Create 3MB Key In EC Bucket" line="81">
<kw name="Create Key In EC Bucket">
<arg>3mb</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${dir}</var>
<arg>/${VOLUME}/ecbucket/dir</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:28:55.985" level="INFO">${dir} = /vol2399/ecbucket/dir</msg>
<status status="PASS" starttime="20231129 08:28:55.984" endtime="20231129 08:28:55.985"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${dir}/${size}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:28:55.985" level="INFO">${key} = /vol2399/ecbucket/dir/3mb</msg>
<status status="PASS" starttime="20231129 08:28:55.985" endtime="20231129 08:28:55.985"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${file}</var>
<arg>/tmp/${size}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:28:55.985" level="INFO">${file} = /tmp/3mb</msg>
<status status="PASS" starttime="20231129 08:28:55.985" endtime="20231129 08:28:55.985"/>
</kw>
<kw name="Create Key" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put ${args} ${key} ${file}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:28:55.989" level="INFO">Running command 'ozone sh key put  /vol2399/ecbucket/dir/3mb /tmp/3mb 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:29:00.948" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:29:00.948" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:28:55.987" endtime="20231129 08:29:00.949"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:29:00.949" level="INFO"/>
<status status="PASS" starttime="20231129 08:29:00.949" endtime="20231129 08:29:00.949"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:29:00.950" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:29:00.949" endtime="20231129 08:29:00.950"/>
</kw>
<status status="PASS" starttime="20231129 08:28:55.987" endtime="20231129 08:29:00.950"/>
</kw>
<msg timestamp="20231129 08:29:00.950" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:28:55.987" endtime="20231129 08:29:00.950"/>
</kw>
<msg timestamp="20231129 08:29:00.950" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:28:55.986" endtime="20231129 08:29:00.950"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:29:00.950" endtime="20231129 08:29:00.951"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Uploaded ${file} to ${key}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:29:00.951" level="INFO">Uploaded /tmp/3mb to /vol2399/ecbucket/dir/3mb</msg>
<status status="PASS" starttime="20231129 08:29:00.951" endtime="20231129 08:29:00.951"/>
</kw>
<status status="PASS" starttime="20231129 08:28:55.985" endtime="20231129 08:29:00.951"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231129 08:29:00.952" level="INFO">${postfix} = 57099</msg>
<status status="PASS" starttime="20231129 08:29:00.952" endtime="20231129 08:29:00.952"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:29:00.953" level="INFO">${tmpfile} = /tmp/tempkey-57099</msg>
<status status="PASS" starttime="20231129 08:29:00.953" endtime="20231129 08:29:00.953"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:29:00.956" level="INFO">Running command 'ozone sh key get /vol2399/ecbucket/dir/3mb /tmp/tempkey-57099 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:29:05.742" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:29:05.742" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:29:00.954" endtime="20231129 08:29:05.742"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:29:05.743" level="INFO"/>
<status status="PASS" starttime="20231129 08:29:05.743" endtime="20231129 08:29:05.743"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:29:05.743" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:29:05.743" endtime="20231129 08:29:05.743"/>
</kw>
<status status="PASS" starttime="20231129 08:29:00.954" endtime="20231129 08:29:05.744"/>
</kw>
<msg timestamp="20231129 08:29:05.744" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:29:00.953" endtime="20231129 08:29:05.744"/>
</kw>
<status status="PASS" starttime="20231129 08:29:00.953" endtime="20231129 08:29:05.744"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20231129 08:29:05.746" level="INFO">Running command 'diff -q /tmp/3mb /tmp/tempkey-57099 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:29:05.748" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20231129 08:29:05.744" endtime="20231129 08:29:05.748"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:29:05.751" level="INFO">Running command 'rm -f /tmp/tempkey-57099 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:29:05.752" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:29:05.753" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:29:05.750" endtime="20231129 08:29:05.753"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:29:05.753" level="INFO"/>
<status status="PASS" starttime="20231129 08:29:05.753" endtime="20231129 08:29:05.753"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:29:05.754" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:29:05.753" endtime="20231129 08:29:05.754"/>
</kw>
<status status="PASS" starttime="20231129 08:29:05.749" endtime="20231129 08:29:05.754"/>
</kw>
<msg timestamp="20231129 08:29:05.754" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:29:05.749" endtime="20231129 08:29:05.754"/>
</kw>
<status status="PASS" starttime="20231129 08:29:05.748" endtime="20231129 08:29:05.754"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20231129 08:29:05.754" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20231129 08:29:05.754" endtime="20231129 08:29:05.755"/>
</kw>
<msg timestamp="20231129 08:29:05.755" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20231129 08:29:00.952" endtime="20231129 08:29:05.755"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20231129 08:29:05.755" endtime="20231129 08:29:05.755"/>
</kw>
<status status="PASS" starttime="20231129 08:29:00.951" endtime="20231129 08:29:05.755"/>
</kw>
<kw name="Verify Key EC Replication Config" library="shell">
<arg>${key}</arg>
<arg>RS</arg>
<arg>3</arg>
<arg>2</arg>
<arg>1048576</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${key} | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:29:05.758" level="INFO">Running command 'ozone sh key info /vol2399/ecbucket/dir/3mb | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:29:08.912" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:29:08.913" level="INFO">${output} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20231129 08:29:05.757" endtime="20231129 08:29:08.913"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:29:08.913" level="INFO">EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20231129 08:29:08.913" endtime="20231129 08:29:08.913"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:29:08.914" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:29:08.914" endtime="20231129 08:29:08.914"/>
</kw>
<status status="PASS" starttime="20231129 08:29:05.756" endtime="20231129 08:29:08.914"/>
</kw>
<msg timestamp="20231129 08:29:08.914" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:29:05.756" endtime="20231129 08:29:08.914"/>
</kw>
<msg timestamp="20231129 08:29:08.914" level="INFO">${result} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20231129 08:29:05.756" endtime="20231129 08:29:08.914"/>
</kw>
<kw name="Verify EC Replication Config" library="shell">
<arg>${result}</arg>
<arg>${encoding}</arg>
<arg>${data}</arg>
<arg>${parity}</arg>
<arg>${chunksize}</arg>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)EC$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:29:08.915" endtime="20231129 08:29:08.915"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${encoding}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:29:08.916" endtime="20231129 08:29:08.916"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${data}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:29:08.916" endtime="20231129 08:29:08.916"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${parity}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:29:08.916" endtime="20231129 08:29:08.917"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${chunksize}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:29:08.917" endtime="20231129 08:29:08.917"/>
</kw>
<status status="PASS" starttime="20231129 08:29:08.915" endtime="20231129 08:29:08.917"/>
</kw>
<status status="PASS" starttime="20231129 08:29:05.755" endtime="20231129 08:29:08.917"/>
</kw>
<kw name="Verify Key EC Replication Config" library="shell">
<arg>${dir}</arg>
<arg>RS</arg>
<arg>3</arg>
<arg>2</arg>
<arg>1048576</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${key} | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:29:08.920" level="INFO">Running command 'ozone sh key info /vol2399/ecbucket/dir | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:29:12.218" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:29:12.218" level="INFO">${output} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20231129 08:29:08.919" endtime="20231129 08:29:12.218"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:29:12.219" level="INFO">EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20231129 08:29:12.219" endtime="20231129 08:29:12.219"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:29:12.220" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:29:12.220" endtime="20231129 08:29:12.220"/>
</kw>
<status status="PASS" starttime="20231129 08:29:08.918" endtime="20231129 08:29:12.220"/>
</kw>
<msg timestamp="20231129 08:29:12.220" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:29:08.918" endtime="20231129 08:29:12.220"/>
</kw>
<msg timestamp="20231129 08:29:12.220" level="INFO">${result} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20231129 08:29:08.918" endtime="20231129 08:29:12.220"/>
</kw>
<kw name="Verify EC Replication Config" library="shell">
<arg>${result}</arg>
<arg>${encoding}</arg>
<arg>${data}</arg>
<arg>${parity}</arg>
<arg>${chunksize}</arg>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)EC$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:29:12.221" endtime="20231129 08:29:12.221"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${encoding}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:29:12.221" endtime="20231129 08:29:12.222"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${data}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:29:12.222" endtime="20231129 08:29:12.222"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${parity}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:29:12.222" endtime="20231129 08:29:12.222"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${chunksize}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:29:12.223" endtime="20231129 08:29:12.223"/>
</kw>
<status status="PASS" starttime="20231129 08:29:12.220" endtime="20231129 08:29:12.223"/>
</kw>
<status status="PASS" starttime="20231129 08:29:08.917" endtime="20231129 08:29:12.223"/>
</kw>
<status status="PASS" starttime="20231129 08:28:55.984" endtime="20231129 08:29:12.223"/>
</kw>
<status status="PASS" starttime="20231129 08:28:55.983" endtime="20231129 08:29:12.223"/>
</test>
<test id="s1-s2-t5" name="Create 100MB Key In EC Bucket" line="84">
<kw name="Create Key In EC Bucket">
<arg>100mb</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${dir}</var>
<arg>/${VOLUME}/ecbucket/dir</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:29:12.225" level="INFO">${dir} = /vol2399/ecbucket/dir</msg>
<status status="PASS" starttime="20231129 08:29:12.224" endtime="20231129 08:29:12.225"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${dir}/${size}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:29:12.225" level="INFO">${key} = /vol2399/ecbucket/dir/100mb</msg>
<status status="PASS" starttime="20231129 08:29:12.225" endtime="20231129 08:29:12.225"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${file}</var>
<arg>/tmp/${size}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:29:12.225" level="INFO">${file} = /tmp/100mb</msg>
<status status="PASS" starttime="20231129 08:29:12.225" endtime="20231129 08:29:12.225"/>
</kw>
<kw name="Create Key" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put ${args} ${key} ${file}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:29:12.229" level="INFO">Running command 'ozone sh key put  /vol2399/ecbucket/dir/100mb /tmp/100mb 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:29:20.085" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:29:20.086" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:29:12.227" endtime="20231129 08:29:20.086"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:29:20.086" level="INFO"/>
<status status="PASS" starttime="20231129 08:29:20.086" endtime="20231129 08:29:20.086"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:29:20.087" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:29:20.087" endtime="20231129 08:29:20.087"/>
</kw>
<status status="PASS" starttime="20231129 08:29:12.227" endtime="20231129 08:29:20.087"/>
</kw>
<msg timestamp="20231129 08:29:20.087" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:29:12.227" endtime="20231129 08:29:20.087"/>
</kw>
<msg timestamp="20231129 08:29:20.087" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:29:12.226" endtime="20231129 08:29:20.087"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:29:20.088" endtime="20231129 08:29:20.088"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Uploaded ${file} to ${key}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:29:20.088" level="INFO">Uploaded /tmp/100mb to /vol2399/ecbucket/dir/100mb</msg>
<status status="PASS" starttime="20231129 08:29:20.088" endtime="20231129 08:29:20.088"/>
</kw>
<status status="PASS" starttime="20231129 08:29:12.226" endtime="20231129 08:29:20.088"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231129 08:29:20.090" level="INFO">${postfix} = 60716</msg>
<status status="PASS" starttime="20231129 08:29:20.089" endtime="20231129 08:29:20.090"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:29:20.090" level="INFO">${tmpfile} = /tmp/tempkey-60716</msg>
<status status="PASS" starttime="20231129 08:29:20.090" endtime="20231129 08:29:20.090"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:29:20.093" level="INFO">Running command 'ozone sh key get /vol2399/ecbucket/dir/100mb /tmp/tempkey-60716 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:29:26.334" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:29:26.334" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:29:20.091" endtime="20231129 08:29:26.334"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:29:26.335" level="INFO"/>
<status status="PASS" starttime="20231129 08:29:26.334" endtime="20231129 08:29:26.335"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:29:26.335" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:29:26.335" endtime="20231129 08:29:26.335"/>
</kw>
<status status="PASS" starttime="20231129 08:29:20.091" endtime="20231129 08:29:26.335"/>
</kw>
<msg timestamp="20231129 08:29:26.335" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:29:20.091" endtime="20231129 08:29:26.336"/>
</kw>
<status status="PASS" starttime="20231129 08:29:20.090" endtime="20231129 08:29:26.336"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20231129 08:29:26.337" level="INFO">Running command 'diff -q /tmp/100mb /tmp/tempkey-60716 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:29:26.374" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20231129 08:29:26.336" endtime="20231129 08:29:26.374"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:29:26.377" level="INFO">Running command 'rm -f /tmp/tempkey-60716 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:29:26.389" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:29:26.389" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:29:26.376" endtime="20231129 08:29:26.389"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:29:26.389" level="INFO"/>
<status status="PASS" starttime="20231129 08:29:26.389" endtime="20231129 08:29:26.389"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:29:26.390" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:29:26.389" endtime="20231129 08:29:26.390"/>
</kw>
<status status="PASS" starttime="20231129 08:29:26.376" endtime="20231129 08:29:26.390"/>
</kw>
<msg timestamp="20231129 08:29:26.390" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:29:26.375" endtime="20231129 08:29:26.390"/>
</kw>
<status status="PASS" starttime="20231129 08:29:26.375" endtime="20231129 08:29:26.390"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20231129 08:29:26.391" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20231129 08:29:26.390" endtime="20231129 08:29:26.391"/>
</kw>
<msg timestamp="20231129 08:29:26.391" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20231129 08:29:20.089" endtime="20231129 08:29:26.391"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20231129 08:29:26.391" endtime="20231129 08:29:26.391"/>
</kw>
<status status="PASS" starttime="20231129 08:29:20.088" endtime="20231129 08:29:26.391"/>
</kw>
<kw name="Verify Key EC Replication Config" library="shell">
<arg>${key}</arg>
<arg>RS</arg>
<arg>3</arg>
<arg>2</arg>
<arg>1048576</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${key} | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:29:26.394" level="INFO">Running command 'ozone sh key info /vol2399/ecbucket/dir/100mb | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:29:29.832" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:29:29.832" level="INFO">${output} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20231129 08:29:26.393" endtime="20231129 08:29:29.832"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:29:29.833" level="INFO">EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20231129 08:29:29.832" endtime="20231129 08:29:29.833"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:29:29.833" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:29:29.833" endtime="20231129 08:29:29.833"/>
</kw>
<status status="PASS" starttime="20231129 08:29:26.393" endtime="20231129 08:29:29.833"/>
</kw>
<msg timestamp="20231129 08:29:29.834" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:29:26.392" endtime="20231129 08:29:29.834"/>
</kw>
<msg timestamp="20231129 08:29:29.834" level="INFO">${result} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20231129 08:29:26.392" endtime="20231129 08:29:29.834"/>
</kw>
<kw name="Verify EC Replication Config" library="shell">
<arg>${result}</arg>
<arg>${encoding}</arg>
<arg>${data}</arg>
<arg>${parity}</arg>
<arg>${chunksize}</arg>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)EC$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:29:29.835" endtime="20231129 08:29:29.835"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${encoding}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:29:29.835" endtime="20231129 08:29:29.835"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${data}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:29:29.835" endtime="20231129 08:29:29.836"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${parity}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:29:29.836" endtime="20231129 08:29:29.836"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${chunksize}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:29:29.836" endtime="20231129 08:29:29.836"/>
</kw>
<status status="PASS" starttime="20231129 08:29:29.834" endtime="20231129 08:29:29.836"/>
</kw>
<status status="PASS" starttime="20231129 08:29:26.391" endtime="20231129 08:29:29.836"/>
</kw>
<kw name="Verify Key EC Replication Config" library="shell">
<arg>${dir}</arg>
<arg>RS</arg>
<arg>3</arg>
<arg>2</arg>
<arg>1048576</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${key} | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:29:29.840" level="INFO">Running command 'ozone sh key info /vol2399/ecbucket/dir | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:29:33.139" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:29:33.139" level="INFO">${output} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20231129 08:29:29.838" endtime="20231129 08:29:33.139"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:29:33.140" level="INFO">EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20231129 08:29:33.140" endtime="20231129 08:29:33.140"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:29:33.141" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:29:33.140" endtime="20231129 08:29:33.141"/>
</kw>
<status status="PASS" starttime="20231129 08:29:29.838" endtime="20231129 08:29:33.141"/>
</kw>
<msg timestamp="20231129 08:29:33.141" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:29:29.837" endtime="20231129 08:29:33.141"/>
</kw>
<msg timestamp="20231129 08:29:33.141" level="INFO">${result} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20231129 08:29:29.837" endtime="20231129 08:29:33.141"/>
</kw>
<kw name="Verify EC Replication Config" library="shell">
<arg>${result}</arg>
<arg>${encoding}</arg>
<arg>${data}</arg>
<arg>${parity}</arg>
<arg>${chunksize}</arg>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)EC$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:29:33.142" endtime="20231129 08:29:33.142"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${encoding}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:29:33.142" endtime="20231129 08:29:33.143"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${data}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:29:33.143" endtime="20231129 08:29:33.143"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${parity}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:29:33.143" endtime="20231129 08:29:33.143"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${chunksize}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:29:33.143" endtime="20231129 08:29:33.144"/>
</kw>
<status status="PASS" starttime="20231129 08:29:33.141" endtime="20231129 08:29:33.144"/>
</kw>
<status status="PASS" starttime="20231129 08:29:29.837" endtime="20231129 08:29:33.144"/>
</kw>
<status status="PASS" starttime="20231129 08:29:12.224" endtime="20231129 08:29:33.144"/>
</kw>
<status status="PASS" starttime="20231129 08:29:12.224" endtime="20231129 08:29:33.144"/>
</test>
<test id="s1-s2-t6" name="Create Key in Default Bucket" line="87">
<kw name="Set Variable" library="BuiltIn">
<var>${size}</var>
<arg>1mb</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:29:33.145" level="INFO">${size} = 1mb</msg>
<status status="PASS" starttime="20231129 08:29:33.145" endtime="20231129 08:29:33.145"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${dir}</var>
<arg>/${VOLUME}/default/dir</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:29:33.146" level="INFO">${dir} = /vol2399/default/dir</msg>
<status status="PASS" starttime="20231129 08:29:33.145" endtime="20231129 08:29:33.146"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${dir}/${size}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:29:33.146" level="INFO">${key} = /vol2399/default/dir/1mb</msg>
<status status="PASS" starttime="20231129 08:29:33.146" endtime="20231129 08:29:33.146"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${file}</var>
<arg>/tmp/${size}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:29:33.146" level="INFO">${file} = /tmp/1mb</msg>
<status status="PASS" starttime="20231129 08:29:33.146" endtime="20231129 08:29:33.146"/>
</kw>
<kw name="Create Key" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put ${args} ${key} ${file}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:29:33.150" level="INFO">Running command 'ozone sh key put  /vol2399/default/dir/1mb /tmp/1mb 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:29:38.033" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:29:38.033" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:29:33.148" endtime="20231129 08:29:38.033"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:29:38.034" level="INFO"/>
<status status="PASS" starttime="20231129 08:29:38.034" endtime="20231129 08:29:38.034"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:29:38.035" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:29:38.034" endtime="20231129 08:29:38.035"/>
</kw>
<status status="PASS" starttime="20231129 08:29:33.148" endtime="20231129 08:29:38.035"/>
</kw>
<msg timestamp="20231129 08:29:38.035" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:29:33.148" endtime="20231129 08:29:38.035"/>
</kw>
<msg timestamp="20231129 08:29:38.035" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:29:33.147" endtime="20231129 08:29:38.035"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:29:38.035" endtime="20231129 08:29:38.036"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Uploaded ${file} to ${key}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:29:38.036" level="INFO">Uploaded /tmp/1mb to /vol2399/default/dir/1mb</msg>
<status status="PASS" starttime="20231129 08:29:38.036" endtime="20231129 08:29:38.036"/>
</kw>
<status status="PASS" starttime="20231129 08:29:33.146" endtime="20231129 08:29:38.036"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231129 08:29:38.037" level="INFO">${postfix} = 78851</msg>
<status status="PASS" starttime="20231129 08:29:38.037" endtime="20231129 08:29:38.037"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:29:38.038" level="INFO">${tmpfile} = /tmp/tempkey-78851</msg>
<status status="PASS" starttime="20231129 08:29:38.038" endtime="20231129 08:29:38.038"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:29:38.041" level="INFO">Running command 'ozone sh key get /vol2399/default/dir/1mb /tmp/tempkey-78851 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:29:43.037" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:29:43.037" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:29:38.039" endtime="20231129 08:29:43.037"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:29:43.038" level="INFO"/>
<status status="PASS" starttime="20231129 08:29:43.038" endtime="20231129 08:29:43.038"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:29:43.039" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:29:43.038" endtime="20231129 08:29:43.039"/>
</kw>
<status status="PASS" starttime="20231129 08:29:38.039" endtime="20231129 08:29:43.039"/>
</kw>
<msg timestamp="20231129 08:29:43.039" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:29:38.038" endtime="20231129 08:29:43.039"/>
</kw>
<status status="PASS" starttime="20231129 08:29:38.038" endtime="20231129 08:29:43.039"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20231129 08:29:43.041" level="INFO">Running command 'diff -q /tmp/1mb /tmp/tempkey-78851 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:29:43.042" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20231129 08:29:43.039" endtime="20231129 08:29:43.042"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:29:43.045" level="INFO">Running command 'rm -f /tmp/tempkey-78851 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:29:43.047" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:29:43.047" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:29:43.044" endtime="20231129 08:29:43.047"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:29:43.047" level="INFO"/>
<status status="PASS" starttime="20231129 08:29:43.047" endtime="20231129 08:29:43.047"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:29:43.048" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:29:43.048" endtime="20231129 08:29:43.048"/>
</kw>
<status status="PASS" starttime="20231129 08:29:43.044" endtime="20231129 08:29:43.048"/>
</kw>
<msg timestamp="20231129 08:29:43.048" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:29:43.043" endtime="20231129 08:29:43.048"/>
</kw>
<status status="PASS" starttime="20231129 08:29:43.043" endtime="20231129 08:29:43.048"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20231129 08:29:43.049" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20231129 08:29:43.048" endtime="20231129 08:29:43.049"/>
</kw>
<msg timestamp="20231129 08:29:43.049" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20231129 08:29:38.037" endtime="20231129 08:29:43.049"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20231129 08:29:43.049" endtime="20231129 08:29:43.049"/>
</kw>
<status status="PASS" starttime="20231129 08:29:38.036" endtime="20231129 08:29:43.049"/>
</kw>
<kw name="Verify Key Replica Replication Config" library="shell">
<arg>${key}</arg>
<arg>RATIS</arg>
<arg>THREE</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${key} | jq -r '.replicationConfig.replicationType, .replicationConfig.replicationFactor'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:29:43.052" level="INFO">Running command 'ozone sh key info /vol2399/default/dir/1mb | jq -r '.replicationConfig.replicationType, .replicationConfig.replicationFactor' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:29:46.393" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:29:46.393" level="INFO">${output} = RATIS
THREE</msg>
<status status="PASS" starttime="20231129 08:29:43.051" endtime="20231129 08:29:46.393"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:29:46.394" level="INFO">RATIS
THREE</msg>
<status status="PASS" starttime="20231129 08:29:46.394" endtime="20231129 08:29:46.394"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:29:46.395" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:29:46.394" endtime="20231129 08:29:46.395"/>
</kw>
<status status="PASS" starttime="20231129 08:29:43.051" endtime="20231129 08:29:46.395"/>
</kw>
<msg timestamp="20231129 08:29:46.395" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:29:43.050" endtime="20231129 08:29:46.395"/>
</kw>
<msg timestamp="20231129 08:29:46.395" level="INFO">${result} = RATIS
THREE</msg>
<status status="PASS" starttime="20231129 08:29:43.050" endtime="20231129 08:29:46.395"/>
</kw>
<kw name="Verify Replica Replication Config" library="shell">
<arg>${result}</arg>
<arg>${type}</arg>
<arg>${factor}</arg>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${type}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:29:46.396" endtime="20231129 08:29:46.396"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${factor}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:29:46.396" endtime="20231129 08:29:46.397"/>
</kw>
<status status="PASS" starttime="20231129 08:29:46.395" endtime="20231129 08:29:46.397"/>
</kw>
<status status="PASS" starttime="20231129 08:29:43.050" endtime="20231129 08:29:46.397"/>
</kw>
<kw name="Verify Key Replica Replication Config" library="shell">
<arg>${dir}</arg>
<arg>RATIS</arg>
<arg>THREE</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${key} | jq -r '.replicationConfig.replicationType, .replicationConfig.replicationFactor'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:29:46.400" level="INFO">Running command 'ozone sh key info /vol2399/default/dir | jq -r '.replicationConfig.replicationType, .replicationConfig.replicationFactor' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:29:49.823" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:29:49.823" level="INFO">${output} = RATIS
THREE</msg>
<status status="PASS" starttime="20231129 08:29:46.398" endtime="20231129 08:29:49.823"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:29:49.824" level="INFO">RATIS
THREE</msg>
<status status="PASS" starttime="20231129 08:29:49.823" endtime="20231129 08:29:49.824"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:29:49.824" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:29:49.824" endtime="20231129 08:29:49.825"/>
</kw>
<status status="PASS" starttime="20231129 08:29:46.398" endtime="20231129 08:29:49.825"/>
</kw>
<msg timestamp="20231129 08:29:49.825" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:29:46.398" endtime="20231129 08:29:49.825"/>
</kw>
<msg timestamp="20231129 08:29:49.825" level="INFO">${result} = RATIS
THREE</msg>
<status status="PASS" starttime="20231129 08:29:46.397" endtime="20231129 08:29:49.825"/>
</kw>
<kw name="Verify Replica Replication Config" library="shell">
<arg>${result}</arg>
<arg>${type}</arg>
<arg>${factor}</arg>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${type}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:29:49.826" endtime="20231129 08:29:49.826"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${factor}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:29:49.826" endtime="20231129 08:29:49.828"/>
</kw>
<status status="PASS" starttime="20231129 08:29:49.825" endtime="20231129 08:29:49.828"/>
</kw>
<status status="PASS" starttime="20231129 08:29:46.397" endtime="20231129 08:29:49.828"/>
</kw>
<status status="PASS" starttime="20231129 08:29:33.144" endtime="20231129 08:29:49.828"/>
</test>
<test id="s1-s2-t7" name="Create Key in Ratis Bucket" line="97">
<kw name="Set Variable" library="BuiltIn">
<var>${size}</var>
<arg>1mb</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:29:49.829" level="INFO">${size} = 1mb</msg>
<status status="PASS" starttime="20231129 08:29:49.829" endtime="20231129 08:29:49.829"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${dir}</var>
<arg>/${VOLUME}/ratis/dir</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:29:49.829" level="INFO">${dir} = /vol2399/ratis/dir</msg>
<status status="PASS" starttime="20231129 08:29:49.829" endtime="20231129 08:29:49.829"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${dir}/${size}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:29:49.830" level="INFO">${key} = /vol2399/ratis/dir/1mb</msg>
<status status="PASS" starttime="20231129 08:29:49.830" endtime="20231129 08:29:49.830"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${file}</var>
<arg>/tmp/${size}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:29:49.830" level="INFO">${file} = /tmp/1mb</msg>
<status status="PASS" starttime="20231129 08:29:49.830" endtime="20231129 08:29:49.830"/>
</kw>
<kw name="Create Key" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put ${args} ${key} ${file}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:29:49.834" level="INFO">Running command 'ozone sh key put  /vol2399/ratis/dir/1mb /tmp/1mb 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:29:54.720" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:29:54.721" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:29:49.832" endtime="20231129 08:29:54.721"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:29:54.721" level="INFO"/>
<status status="PASS" starttime="20231129 08:29:54.721" endtime="20231129 08:29:54.721"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:29:54.722" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:29:54.722" endtime="20231129 08:29:54.722"/>
</kw>
<status status="PASS" starttime="20231129 08:29:49.832" endtime="20231129 08:29:54.722"/>
</kw>
<msg timestamp="20231129 08:29:54.722" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:29:49.832" endtime="20231129 08:29:54.722"/>
</kw>
<msg timestamp="20231129 08:29:54.722" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:29:49.831" endtime="20231129 08:29:54.722"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:29:54.722" endtime="20231129 08:29:54.723"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Uploaded ${file} to ${key}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:29:54.723" level="INFO">Uploaded /tmp/1mb to /vol2399/ratis/dir/1mb</msg>
<status status="PASS" starttime="20231129 08:29:54.723" endtime="20231129 08:29:54.723"/>
</kw>
<status status="PASS" starttime="20231129 08:29:49.830" endtime="20231129 08:29:54.723"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231129 08:29:54.725" level="INFO">${postfix} = 89876</msg>
<status status="PASS" starttime="20231129 08:29:54.724" endtime="20231129 08:29:54.725"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:29:54.725" level="INFO">${tmpfile} = /tmp/tempkey-89876</msg>
<status status="PASS" starttime="20231129 08:29:54.725" endtime="20231129 08:29:54.725"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:29:54.727" level="INFO">Running command 'ozone sh key get /vol2399/ratis/dir/1mb /tmp/tempkey-89876 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:29:59.539" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:29:59.539" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:29:54.726" endtime="20231129 08:29:59.539"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:29:59.540" level="INFO"/>
<status status="PASS" starttime="20231129 08:29:59.539" endtime="20231129 08:29:59.540"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:29:59.540" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:29:59.540" endtime="20231129 08:29:59.540"/>
</kw>
<status status="PASS" starttime="20231129 08:29:54.726" endtime="20231129 08:29:59.540"/>
</kw>
<msg timestamp="20231129 08:29:59.540" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:29:54.725" endtime="20231129 08:29:59.540"/>
</kw>
<status status="PASS" starttime="20231129 08:29:54.725" endtime="20231129 08:29:59.541"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20231129 08:29:59.542" level="INFO">Running command 'diff -q /tmp/1mb /tmp/tempkey-89876 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:29:59.544" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20231129 08:29:59.541" endtime="20231129 08:29:59.544"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:29:59.556" level="INFO">Running command 'rm -f /tmp/tempkey-89876 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:29:59.558" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:29:59.558" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:29:59.555" endtime="20231129 08:29:59.558"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:29:59.558" level="INFO"/>
<status status="PASS" starttime="20231129 08:29:59.558" endtime="20231129 08:29:59.558"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:29:59.559" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:29:59.559" endtime="20231129 08:29:59.559"/>
</kw>
<status status="PASS" starttime="20231129 08:29:59.545" endtime="20231129 08:29:59.559"/>
</kw>
<msg timestamp="20231129 08:29:59.559" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:29:59.545" endtime="20231129 08:29:59.559"/>
</kw>
<status status="PASS" starttime="20231129 08:29:59.544" endtime="20231129 08:29:59.559"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20231129 08:29:59.560" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20231129 08:29:59.560" endtime="20231129 08:29:59.560"/>
</kw>
<msg timestamp="20231129 08:29:59.560" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20231129 08:29:54.724" endtime="20231129 08:29:59.560"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20231129 08:29:59.560" endtime="20231129 08:29:59.561"/>
</kw>
<status status="PASS" starttime="20231129 08:29:54.723" endtime="20231129 08:29:59.561"/>
</kw>
<kw name="Verify Key Replica Replication Config" library="shell">
<arg>${key}</arg>
<arg>RATIS</arg>
<arg>THREE</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${key} | jq -r '.replicationConfig.replicationType, .replicationConfig.replicationFactor'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:29:59.563" level="INFO">Running command 'ozone sh key info /vol2399/ratis/dir/1mb | jq -r '.replicationConfig.replicationType, .replicationConfig.replicationFactor' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:30:02.903" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:30:02.903" level="INFO">${output} = RATIS
THREE</msg>
<status status="PASS" starttime="20231129 08:29:59.562" endtime="20231129 08:30:02.903"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:30:02.904" level="INFO">RATIS
THREE</msg>
<status status="PASS" starttime="20231129 08:30:02.903" endtime="20231129 08:30:02.904"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:30:02.904" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:30:02.904" endtime="20231129 08:30:02.904"/>
</kw>
<status status="PASS" starttime="20231129 08:29:59.562" endtime="20231129 08:30:02.904"/>
</kw>
<msg timestamp="20231129 08:30:02.905" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:29:59.562" endtime="20231129 08:30:02.905"/>
</kw>
<msg timestamp="20231129 08:30:02.905" level="INFO">${result} = RATIS
THREE</msg>
<status status="PASS" starttime="20231129 08:29:59.561" endtime="20231129 08:30:02.905"/>
</kw>
<kw name="Verify Replica Replication Config" library="shell">
<arg>${result}</arg>
<arg>${type}</arg>
<arg>${factor}</arg>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${type}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:30:02.905" endtime="20231129 08:30:02.906"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${factor}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:30:02.906" endtime="20231129 08:30:02.906"/>
</kw>
<status status="PASS" starttime="20231129 08:30:02.905" endtime="20231129 08:30:02.906"/>
</kw>
<status status="PASS" starttime="20231129 08:29:59.561" endtime="20231129 08:30:02.906"/>
</kw>
<kw name="Verify Key Replica Replication Config" library="shell">
<arg>${dir}</arg>
<arg>RATIS</arg>
<arg>THREE</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${key} | jq -r '.replicationConfig.replicationType, .replicationConfig.replicationFactor'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:30:02.909" level="INFO">Running command 'ozone sh key info /vol2399/ratis/dir | jq -r '.replicationConfig.replicationType, .replicationConfig.replicationFactor' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:30:06.143" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:30:06.143" level="INFO">${output} = RATIS
THREE</msg>
<status status="PASS" starttime="20231129 08:30:02.908" endtime="20231129 08:30:06.143"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:30:06.144" level="INFO">RATIS
THREE</msg>
<status status="PASS" starttime="20231129 08:30:06.144" endtime="20231129 08:30:06.144"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:30:06.145" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:30:06.145" endtime="20231129 08:30:06.145"/>
</kw>
<status status="PASS" starttime="20231129 08:30:02.907" endtime="20231129 08:30:06.145"/>
</kw>
<msg timestamp="20231129 08:30:06.145" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:30:02.907" endtime="20231129 08:30:06.145"/>
</kw>
<msg timestamp="20231129 08:30:06.145" level="INFO">${result} = RATIS
THREE</msg>
<status status="PASS" starttime="20231129 08:30:02.907" endtime="20231129 08:30:06.145"/>
</kw>
<kw name="Verify Replica Replication Config" library="shell">
<arg>${result}</arg>
<arg>${type}</arg>
<arg>${factor}</arg>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${type}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:30:06.146" endtime="20231129 08:30:06.146"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${factor}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:30:06.146" endtime="20231129 08:30:06.147"/>
</kw>
<status status="PASS" starttime="20231129 08:30:06.145" endtime="20231129 08:30:06.147"/>
</kw>
<status status="PASS" starttime="20231129 08:30:02.906" endtime="20231129 08:30:06.147"/>
</kw>
<status status="PASS" starttime="20231129 08:29:49.828" endtime="20231129 08:30:06.147"/>
</test>
<test id="s1-s2-t8" name="Create Ratis Key In EC Bucket" line="107">
<kw name="Set Variable" library="BuiltIn">
<var>${size}</var>
<arg>1mb</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:30:06.148" level="INFO">${size} = 1mb</msg>
<status status="PASS" starttime="20231129 08:30:06.148" endtime="20231129 08:30:06.148"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${dir}</var>
<arg>/${VOLUME}/ecbucket/dir2</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:30:06.149" level="INFO">${dir} = /vol2399/ecbucket/dir2</msg>
<status status="PASS" starttime="20231129 08:30:06.148" endtime="20231129 08:30:06.149"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${dir}/${size}Ratis</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:30:06.149" level="INFO">${key} = /vol2399/ecbucket/dir2/1mbRatis</msg>
<status status="PASS" starttime="20231129 08:30:06.149" endtime="20231129 08:30:06.149"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${file}</var>
<arg>/tmp/${size}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:30:06.149" level="INFO">${file} = /tmp/1mb</msg>
<status status="PASS" starttime="20231129 08:30:06.149" endtime="20231129 08:30:06.150"/>
</kw>
<kw name="Create Key" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<arg>--replication=THREE --type=RATIS</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put ${args} ${key} ${file}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:30:06.153" level="INFO">Running command 'ozone sh key put --replication=THREE --type=RATIS /vol2399/ecbucket/dir2/1mbRatis /tmp/1mb 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:30:10.988" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:30:10.988" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:30:06.151" endtime="20231129 08:30:10.989"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:30:10.989" level="INFO"/>
<status status="PASS" starttime="20231129 08:30:10.989" endtime="20231129 08:30:10.989"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:30:10.990" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:30:10.989" endtime="20231129 08:30:10.990"/>
</kw>
<status status="PASS" starttime="20231129 08:30:06.151" endtime="20231129 08:30:10.990"/>
</kw>
<msg timestamp="20231129 08:30:10.990" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:30:06.151" endtime="20231129 08:30:10.990"/>
</kw>
<msg timestamp="20231129 08:30:10.990" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:30:06.150" endtime="20231129 08:30:10.990"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:30:10.991" endtime="20231129 08:30:10.991"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Uploaded ${file} to ${key}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:30:10.991" level="INFO">Uploaded /tmp/1mb to /vol2399/ecbucket/dir2/1mbRatis</msg>
<status status="PASS" starttime="20231129 08:30:10.991" endtime="20231129 08:30:10.991"/>
</kw>
<status status="PASS" starttime="20231129 08:30:06.150" endtime="20231129 08:30:10.991"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231129 08:30:10.993" level="INFO">${postfix} = 94184</msg>
<status status="PASS" starttime="20231129 08:30:10.993" endtime="20231129 08:30:10.993"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:30:10.994" level="INFO">${tmpfile} = /tmp/tempkey-94184</msg>
<status status="PASS" starttime="20231129 08:30:10.994" endtime="20231129 08:30:10.994"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:30:10.998" level="INFO">Running command 'ozone sh key get /vol2399/ecbucket/dir2/1mbRatis /tmp/tempkey-94184 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:30:15.532" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:30:15.532" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:30:10.996" endtime="20231129 08:30:15.532"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:30:15.533" level="INFO"/>
<status status="PASS" starttime="20231129 08:30:15.533" endtime="20231129 08:30:15.533"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:30:15.534" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:30:15.533" endtime="20231129 08:30:15.534"/>
</kw>
<status status="PASS" starttime="20231129 08:30:10.995" endtime="20231129 08:30:15.534"/>
</kw>
<msg timestamp="20231129 08:30:15.534" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:30:10.995" endtime="20231129 08:30:15.534"/>
</kw>
<status status="PASS" starttime="20231129 08:30:10.994" endtime="20231129 08:30:15.534"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20231129 08:30:15.536" level="INFO">Running command 'diff -q /tmp/1mb /tmp/tempkey-94184 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:30:15.538" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20231129 08:30:15.534" endtime="20231129 08:30:15.538"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:30:15.541" level="INFO">Running command 'rm -f /tmp/tempkey-94184 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:30:15.542" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:30:15.542" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:30:15.539" endtime="20231129 08:30:15.542"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:30:15.543" level="INFO"/>
<status status="PASS" starttime="20231129 08:30:15.542" endtime="20231129 08:30:15.543"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:30:15.543" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:30:15.543" endtime="20231129 08:30:15.543"/>
</kw>
<status status="PASS" starttime="20231129 08:30:15.539" endtime="20231129 08:30:15.543"/>
</kw>
<msg timestamp="20231129 08:30:15.543" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:30:15.539" endtime="20231129 08:30:15.544"/>
</kw>
<status status="PASS" starttime="20231129 08:30:15.538" endtime="20231129 08:30:15.544"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20231129 08:30:15.544" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20231129 08:30:15.544" endtime="20231129 08:30:15.544"/>
</kw>
<msg timestamp="20231129 08:30:15.544" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20231129 08:30:10.992" endtime="20231129 08:30:15.544"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20231129 08:30:15.544" endtime="20231129 08:30:15.545"/>
</kw>
<status status="PASS" starttime="20231129 08:30:10.992" endtime="20231129 08:30:15.545"/>
</kw>
<kw name="Verify Key Replica Replication Config" library="shell">
<arg>${key}</arg>
<arg>RATIS</arg>
<arg>THREE</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${key} | jq -r '.replicationConfig.replicationType, .replicationConfig.replicationFactor'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:30:15.547" level="INFO">Running command 'ozone sh key info /vol2399/ecbucket/dir2/1mbRatis | jq -r '.replicationConfig.replicationType, .replicationConfig.replicationFactor' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:30:18.830" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:30:18.830" level="INFO">${output} = RATIS
THREE</msg>
<status status="PASS" starttime="20231129 08:30:15.546" endtime="20231129 08:30:18.830"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:30:18.831" level="INFO">RATIS
THREE</msg>
<status status="PASS" starttime="20231129 08:30:18.830" endtime="20231129 08:30:18.831"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:30:18.831" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:30:18.831" endtime="20231129 08:30:18.831"/>
</kw>
<status status="PASS" starttime="20231129 08:30:15.546" endtime="20231129 08:30:18.832"/>
</kw>
<msg timestamp="20231129 08:30:18.832" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:30:15.546" endtime="20231129 08:30:18.832"/>
</kw>
<msg timestamp="20231129 08:30:18.832" level="INFO">${result} = RATIS
THREE</msg>
<status status="PASS" starttime="20231129 08:30:15.545" endtime="20231129 08:30:18.832"/>
</kw>
<kw name="Verify Replica Replication Config" library="shell">
<arg>${result}</arg>
<arg>${type}</arg>
<arg>${factor}</arg>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${type}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:30:18.833" endtime="20231129 08:30:18.833"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${factor}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:30:18.834" endtime="20231129 08:30:18.834"/>
</kw>
<status status="PASS" starttime="20231129 08:30:18.832" endtime="20231129 08:30:18.834"/>
</kw>
<status status="PASS" starttime="20231129 08:30:15.545" endtime="20231129 08:30:18.834"/>
</kw>
<kw name="Verify Key EC Replication Config" library="shell">
<arg>${dir}</arg>
<arg>RS</arg>
<arg>3</arg>
<arg>2</arg>
<arg>1048576</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${key} | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:30:18.838" level="INFO">Running command 'ozone sh key info /vol2399/ecbucket/dir2 | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:30:22.115" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:30:22.115" level="INFO">${output} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20231129 08:30:18.836" endtime="20231129 08:30:22.115"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:30:22.116" level="INFO">EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20231129 08:30:22.115" endtime="20231129 08:30:22.116"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:30:22.116" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:30:22.116" endtime="20231129 08:30:22.116"/>
</kw>
<status status="PASS" starttime="20231129 08:30:18.836" endtime="20231129 08:30:22.116"/>
</kw>
<msg timestamp="20231129 08:30:22.116" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:30:18.835" endtime="20231129 08:30:22.117"/>
</kw>
<msg timestamp="20231129 08:30:22.117" level="INFO">${result} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20231129 08:30:18.835" endtime="20231129 08:30:22.117"/>
</kw>
<kw name="Verify EC Replication Config" library="shell">
<arg>${result}</arg>
<arg>${encoding}</arg>
<arg>${data}</arg>
<arg>${parity}</arg>
<arg>${chunksize}</arg>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)EC$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:30:22.117" endtime="20231129 08:30:22.118"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${encoding}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:30:22.118" endtime="20231129 08:30:22.118"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${data}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:30:22.118" endtime="20231129 08:30:22.119"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${parity}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:30:22.119" endtime="20231129 08:30:22.119"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${chunksize}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:30:22.119" endtime="20231129 08:30:22.119"/>
</kw>
<status status="PASS" starttime="20231129 08:30:22.117" endtime="20231129 08:30:22.119"/>
</kw>
<status status="PASS" starttime="20231129 08:30:18.834" endtime="20231129 08:30:22.120"/>
</kw>
<status status="PASS" starttime="20231129 08:30:06.147" endtime="20231129 08:30:22.120"/>
</test>
<test id="s1-s2-t9" name="Create EC Key In Ratis Bucket" line="117">
<kw name="Set Variable" library="BuiltIn">
<var>${size}</var>
<arg>1mb</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:30:22.121" level="INFO">${size} = 1mb</msg>
<status status="PASS" starttime="20231129 08:30:22.121" endtime="20231129 08:30:22.121"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${dir}</var>
<arg>/${VOLUME}/ratis/dir2</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:30:22.121" level="INFO">${dir} = /vol2399/ratis/dir2</msg>
<status status="PASS" starttime="20231129 08:30:22.121" endtime="20231129 08:30:22.121"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>${dir}/${size}EC</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:30:22.122" level="INFO">${key} = /vol2399/ratis/dir2/1mbEC</msg>
<status status="PASS" starttime="20231129 08:30:22.121" endtime="20231129 08:30:22.122"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${file}</var>
<arg>/tmp/${size}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:30:22.122" level="INFO">${file} = /tmp/1mb</msg>
<status status="PASS" starttime="20231129 08:30:22.122" endtime="20231129 08:30:22.122"/>
</kw>
<kw name="Create Key" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<arg>--replication=rs-3-2-1024k --type=EC</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put ${args} ${key} ${file}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:30:22.125" level="INFO">Running command 'ozone sh key put --replication=rs-3-2-1024k --type=EC /vol2399/ratis/dir2/1mbEC /tmp/1mb 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:30:27.186" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:30:27.186" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:30:22.124" endtime="20231129 08:30:27.186"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:30:27.187" level="INFO"/>
<status status="PASS" starttime="20231129 08:30:27.187" endtime="20231129 08:30:27.187"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:30:27.188" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:30:27.187" endtime="20231129 08:30:27.188"/>
</kw>
<status status="PASS" starttime="20231129 08:30:22.123" endtime="20231129 08:30:27.188"/>
</kw>
<msg timestamp="20231129 08:30:27.188" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:30:22.123" endtime="20231129 08:30:27.188"/>
</kw>
<msg timestamp="20231129 08:30:27.188" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:30:22.123" endtime="20231129 08:30:27.188"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:30:27.188" endtime="20231129 08:30:27.189"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Uploaded ${file} to ${key}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:30:27.189" level="INFO">Uploaded /tmp/1mb to /vol2399/ratis/dir2/1mbEC</msg>
<status status="PASS" starttime="20231129 08:30:27.189" endtime="20231129 08:30:27.189"/>
</kw>
<status status="PASS" starttime="20231129 08:30:22.122" endtime="20231129 08:30:27.189"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231129 08:30:27.190" level="INFO">${postfix} = 56645</msg>
<status status="PASS" starttime="20231129 08:30:27.190" endtime="20231129 08:30:27.190"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:30:27.191" level="INFO">${tmpfile} = /tmp/tempkey-56645</msg>
<status status="PASS" starttime="20231129 08:30:27.190" endtime="20231129 08:30:27.191"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:30:27.193" level="INFO">Running command 'ozone sh key get /vol2399/ratis/dir2/1mbEC /tmp/tempkey-56645 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:30:32.098" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:30:32.098" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:30:27.192" endtime="20231129 08:30:32.098"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:30:32.099" level="INFO"/>
<status status="PASS" starttime="20231129 08:30:32.099" endtime="20231129 08:30:32.099"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:30:32.100" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:30:32.099" endtime="20231129 08:30:32.100"/>
</kw>
<status status="PASS" starttime="20231129 08:30:27.191" endtime="20231129 08:30:32.100"/>
</kw>
<msg timestamp="20231129 08:30:32.100" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:30:27.191" endtime="20231129 08:30:32.100"/>
</kw>
<status status="PASS" starttime="20231129 08:30:27.191" endtime="20231129 08:30:32.100"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20231129 08:30:32.102" level="INFO">Running command 'diff -q /tmp/1mb /tmp/tempkey-56645 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:30:32.103" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20231129 08:30:32.100" endtime="20231129 08:30:32.103"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:30:32.106" level="INFO">Running command 'rm -f /tmp/tempkey-56645 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:30:32.108" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:30:32.108" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:30:32.105" endtime="20231129 08:30:32.108"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:30:32.108" level="INFO"/>
<status status="PASS" starttime="20231129 08:30:32.108" endtime="20231129 08:30:32.109"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:30:32.109" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:30:32.109" endtime="20231129 08:30:32.109"/>
</kw>
<status status="PASS" starttime="20231129 08:30:32.105" endtime="20231129 08:30:32.109"/>
</kw>
<msg timestamp="20231129 08:30:32.109" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:30:32.104" endtime="20231129 08:30:32.109"/>
</kw>
<status status="PASS" starttime="20231129 08:30:32.104" endtime="20231129 08:30:32.109"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20231129 08:30:32.110" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20231129 08:30:32.110" endtime="20231129 08:30:32.110"/>
</kw>
<msg timestamp="20231129 08:30:32.110" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20231129 08:30:27.190" endtime="20231129 08:30:32.110"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20231129 08:30:32.110" endtime="20231129 08:30:32.111"/>
</kw>
<status status="PASS" starttime="20231129 08:30:27.189" endtime="20231129 08:30:32.111"/>
</kw>
<kw name="Verify Key EC Replication Config" library="shell">
<arg>${key}</arg>
<arg>RS</arg>
<arg>3</arg>
<arg>2</arg>
<arg>1048576</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${key} | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:30:32.113" level="INFO">Running command 'ozone sh key info /vol2399/ratis/dir2/1mbEC | jq -r '.replicationConfig.replicationType, .replicationConfig.codec, .replicationConfig.data, .replicationConfig.parity, .replicationConfig.ecChunkSize' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:30:35.712" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:30:35.712" level="INFO">${output} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20231129 08:30:32.112" endtime="20231129 08:30:35.712"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:30:35.713" level="INFO">EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20231129 08:30:35.713" endtime="20231129 08:30:35.713"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:30:35.714" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:30:35.713" endtime="20231129 08:30:35.714"/>
</kw>
<status status="PASS" starttime="20231129 08:30:32.112" endtime="20231129 08:30:35.714"/>
</kw>
<msg timestamp="20231129 08:30:35.714" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:30:32.112" endtime="20231129 08:30:35.714"/>
</kw>
<msg timestamp="20231129 08:30:35.714" level="INFO">${result} = EC
RS
3
2
1048576</msg>
<status status="PASS" starttime="20231129 08:30:32.111" endtime="20231129 08:30:35.714"/>
</kw>
<kw name="Verify EC Replication Config" library="shell">
<arg>${result}</arg>
<arg>${encoding}</arg>
<arg>${data}</arg>
<arg>${parity}</arg>
<arg>${chunksize}</arg>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)EC$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:30:35.715" endtime="20231129 08:30:35.715"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${encoding}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:30:35.715" endtime="20231129 08:30:35.715"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${data}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:30:35.716" endtime="20231129 08:30:35.716"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${parity}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:30:35.716" endtime="20231129 08:30:35.716"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${chunksize}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:30:35.716" endtime="20231129 08:30:35.716"/>
</kw>
<status status="PASS" starttime="20231129 08:30:35.714" endtime="20231129 08:30:35.717"/>
</kw>
<status status="PASS" starttime="20231129 08:30:32.111" endtime="20231129 08:30:35.717"/>
</kw>
<kw name="Verify Key Replica Replication Config" library="shell">
<arg>${dir}</arg>
<arg>RATIS</arg>
<arg>THREE</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${key} | jq -r '.replicationConfig.replicationType, .replicationConfig.replicationFactor'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:30:35.720" level="INFO">Running command 'ozone sh key info /vol2399/ratis/dir2 | jq -r '.replicationConfig.replicationType, .replicationConfig.replicationFactor' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:30:38.747" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:30:38.747" level="INFO">${output} = RATIS
THREE</msg>
<status status="PASS" starttime="20231129 08:30:35.718" endtime="20231129 08:30:38.747"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:30:38.747" level="INFO">RATIS
THREE</msg>
<status status="PASS" starttime="20231129 08:30:38.747" endtime="20231129 08:30:38.748"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:30:38.748" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:30:38.748" endtime="20231129 08:30:38.748"/>
</kw>
<status status="PASS" starttime="20231129 08:30:35.718" endtime="20231129 08:30:38.748"/>
</kw>
<msg timestamp="20231129 08:30:38.748" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:30:35.718" endtime="20231129 08:30:38.748"/>
</kw>
<msg timestamp="20231129 08:30:38.748" level="INFO">${result} = RATIS
THREE</msg>
<status status="PASS" starttime="20231129 08:30:35.717" endtime="20231129 08:30:38.749"/>
</kw>
<kw name="Verify Replica Replication Config" library="shell">
<arg>${result}</arg>
<arg>${type}</arg>
<arg>${factor}</arg>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${type}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:30:38.749" endtime="20231129 08:30:38.749"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>^(?m)${factor}$</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20231129 08:30:38.750" endtime="20231129 08:30:38.750"/>
</kw>
<status status="PASS" starttime="20231129 08:30:38.749" endtime="20231129 08:30:38.750"/>
</kw>
<status status="PASS" starttime="20231129 08:30:35.717" endtime="20231129 08:30:38.750"/>
</kw>
<status status="PASS" starttime="20231129 08:30:22.120" endtime="20231129 08:30:38.750"/>
</test>
<test id="s1-s2-t10" name="Test Invalid Replication Parameters" line="127">
<kw name="Execute And Ignore Error" library="os">
<var>${message}</var>
<arg>ozone sh bucket create --replication=rs-3-2-1024k --type=RATIS /${VOLUME}/foo</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:30:38.753" level="INFO">Running command 'ozone sh bucket create --replication=rs-3-2-1024k --type=RATIS /vol2399/foo 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:30:41.922" level="INFO">${rc} = 255</msg>
<msg timestamp="20231129 08:30:41.922" level="INFO">${output} = rs-3-2-1024k is not supported for RATIS replication type</msg>
<status status="PASS" starttime="20231129 08:30:38.752" endtime="20231129 08:30:41.922"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:30:41.923" level="INFO">rs-3-2-1024k is not supported for RATIS replication type</msg>
<status status="PASS" starttime="20231129 08:30:41.923" endtime="20231129 08:30:41.923"/>
</kw>
<msg timestamp="20231129 08:30:41.924" level="INFO">${message} = rs-3-2-1024k is not supported for RATIS replication type</msg>
<status status="PASS" starttime="20231129 08:30:38.751" endtime="20231129 08:30:41.924"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${message}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:30:41.924" endtime="20231129 08:30:41.924"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${message}</arg>
<arg>rs-3-2-1024k</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:30:41.924" endtime="20231129 08:30:41.924"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${message}</arg>
<arg>not supported</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:30:41.925" endtime="20231129 08:30:41.925"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${message}</var>
<arg>ozone sh key put --replication=rs-6-3-1024k --type=RATIS /${VOLUME}/foo/bar /tmp/1mb</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:30:41.927" level="INFO">Running command 'ozone sh key put --replication=rs-6-3-1024k --type=RATIS /vol2399/foo/bar /tmp/1mb 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:30:44.961" level="INFO">${rc} = 255</msg>
<msg timestamp="20231129 08:30:44.962" level="INFO">${output} = rs-6-3-1024k is not supported for RATIS replication type</msg>
<status status="PASS" starttime="20231129 08:30:41.925" endtime="20231129 08:30:44.962"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:30:44.962" level="INFO">rs-6-3-1024k is not supported for RATIS replication type</msg>
<status status="PASS" starttime="20231129 08:30:44.962" endtime="20231129 08:30:44.962"/>
</kw>
<msg timestamp="20231129 08:30:44.963" level="INFO">${message} = rs-6-3-1024k is not supported for RATIS replication type</msg>
<status status="PASS" starttime="20231129 08:30:41.925" endtime="20231129 08:30:44.963"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${message}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:30:44.963" endtime="20231129 08:30:44.963"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${message}</arg>
<arg>rs-6-3-1024k</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:30:44.963" endtime="20231129 08:30:44.963"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${message}</arg>
<arg>not supported</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:30:44.963" endtime="20231129 08:30:44.964"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${message}</var>
<arg>ozone sh bucket create --replication=rs-6-3-1024k --type=STAND_ALONE /${VOLUME}/foo</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:30:44.966" level="INFO">Running command 'ozone sh bucket create --replication=rs-6-3-1024k --type=STAND_ALONE /vol2399/foo 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:30:46.929" level="INFO">${rc} = 2</msg>
<msg timestamp="20231129 08:30:46.929" level="INFO">${output} = Could not invoke public void org.apache.hadoop.ozone.shell.ShellReplicationOptions.setType(java.lang.String) with STAND_ALONE (java.lang.IllegalArgumentException: Invalid value 'STAND_ALONE' for optio...</msg>
<status status="PASS" starttime="20231129 08:30:44.964" endtime="20231129 08:30:46.929"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:30:46.930" level="INFO">Could not invoke public void org.apache.hadoop.ozone.shell.ShellReplicationOptions.setType(java.lang.String) with STAND_ALONE (java.lang.IllegalArgumentException: Invalid value 'STAND_ALONE' for option '--type'. Unsupported replication type STAND_ALONE. Supported values are: RATIS, EC.)
Usage: ozone sh bucket create [-ghV] [-k=&lt;bekName&gt;] [-l=&lt;allowedBucketLayout&gt;]
                              [--namespace-quota=&lt;quotaInNamespace&gt;]
                              [--quota=&lt;quotaInBytes&gt;] [-r=&lt;replication&gt;]
                              [-t=&lt;type&gt;] [-u=&lt;ownerName&gt;] &lt;value&gt;
creates a bucket in a given volume
      &lt;value&gt;              URI of the volume/bucket.
                           Ozone URI could either be a full URI or short URI.
                           Full URI should start with o3://, in case of non-HA
                           clusters it should be followed by the host name and
                           optionally the port number. In case of HA clusters
                           the service id should be used. Service id provides a
                           logical name for multiple hosts and it is defined
                           in the property ozone.om.service.ids.
                           Example of a full URI with host name and port number
                           for a key:
                           o3://omhostname:9862/vol1/bucket1/key1
                           With a service id for a volume:
                           o3://omserviceid/vol1/
                           Short URI should start from the volume.
                           Example of a short URI for a bucket:
                           vol1/bucket1
                           Any unspecified information will be identified from
                           the config files.

  -g, --enforcegdpr        if true, indicates GDPR enforced bucket,
                             false/unspecified indicates otherwise
  -h, --help               Show this help message and exit.
  -k, --bucketkey=&lt;bekName&gt;
                           bucket encryption key name
  -l, --layout=&lt;allowedBucketLayout&gt;
                           Allowed Bucket Layouts: FILE_SYSTEM_OPTIMIZED,
                             OBJECT_STORE, LEGACY
      --namespace-quota=&lt;quotaInNamespace&gt;
                           For volume this parameter represents the number of
                             buckets, and for buckets represents the number of
                             keys (eg. 5)
      --quota, --space-quota=&lt;quotaInBytes&gt;
                           The maximum space quota can be used (eg. 1GB)
  -r, --replication=&lt;replication&gt;
                           Replication definition. Valid values are replication
                             type-specific.  For RATIS: ONE or THREE. In case
                             of EC, pass CODEC-DATA-PARITY-CHUNKSIZE,  e.g.
                             rs-3-2-1024k, rs-6-3-1024k, rs-10-4-1024k
  -t, --type, --replication-type=&lt;type&gt;
                           Replication type. Supported types are: RATIS, EC
  -u, --user=&lt;ownerName&gt;   Owner of the bucket. Defaults to current user if not
                             specified
  -V, --version            Print version information and exit.</msg>
<status status="PASS" starttime="20231129 08:30:46.929" endtime="20231129 08:30:46.930"/>
</kw>
<msg timestamp="20231129 08:30:46.930" level="INFO">${message} = Could not invoke public void org.apache.hadoop.ozone.shell.ShellReplicationOptions.setType(java.lang.String) with STAND_ALONE (java.lang.IllegalArgumentException: Invalid value 'STAND_ALONE' for optio...</msg>
<status status="PASS" starttime="20231129 08:30:44.964" endtime="20231129 08:30:46.930"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${message}</arg>
<arg>STAND_ALONE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:30:46.930" endtime="20231129 08:30:46.930"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${message}</arg>
<arg>Invalid value</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:30:46.930" endtime="20231129 08:30:46.931"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${message}</var>
<arg>ozone sh key put --replication=rs-3-2-1024k --type=STAND_ALONE /${VOLUME}/foo/bar /tmp/1mb</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:30:46.933" level="INFO">Running command 'ozone sh key put --replication=rs-3-2-1024k --type=STAND_ALONE /vol2399/foo/bar /tmp/1mb 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:30:48.877" level="INFO">${rc} = 2</msg>
<msg timestamp="20231129 08:30:48.878" level="INFO">${output} = Could not invoke public void org.apache.hadoop.ozone.shell.ShellReplicationOptions.setType(java.lang.String) with STAND_ALONE (java.lang.IllegalArgumentException: Invalid value 'STAND_ALONE' for optio...</msg>
<status status="PASS" starttime="20231129 08:30:46.931" endtime="20231129 08:30:48.878"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:30:48.878" level="INFO">Could not invoke public void org.apache.hadoop.ozone.shell.ShellReplicationOptions.setType(java.lang.String) with STAND_ALONE (java.lang.IllegalArgumentException: Invalid value 'STAND_ALONE' for option '--type'. Unsupported replication type STAND_ALONE. Supported values are: RATIS, EC.)
Usage: ozone sh key put [-hV] [--stream] [-r=&lt;replication&gt;] [-t=&lt;type&gt;] &lt;value&gt;
                        &lt;fileName&gt;
creates or overwrites an existing key
      &lt;value&gt;      URI of the volume/bucket/key.
                   Ozone URI could either be a full URI or short URI.
                   Full URI should start with o3://, in case of non-HA
                   clusters it should be followed by the host name and
                   optionally the port number. In case of HA clusters
                   the service id should be used. Service id provides a
                   logical name for multiple hosts and it is defined
                   in the property ozone.om.service.ids.
                   Example of a full URI with host name and port number
                   for a key:
                   o3://omhostname:9862/vol1/bucket1/key1
                   With a service id for a volume:
                   o3://omserviceid/vol1/
                   Short URI should start from the volume.
                   Example of a short URI for a bucket:
                   vol1/bucket1
                   Any unspecified information will be identified from
                   the config files.

      &lt;fileName&gt;   File to upload
  -h, --help       Show this help message and exit.
  -r, --replication=&lt;replication&gt;
                   Replication definition. Valid values are replication
                     type-specific.  For RATIS: ONE or THREE. In case of EC,
                     pass CODEC-DATA-PARITY-CHUNKSIZE,  e.g. rs-3-2-1024k,
                     rs-6-3-1024k, rs-10-4-1024k
      --stream
  -t, --type, --replication-type=&lt;type&gt;
                   Replication type. Supported types are: RATIS, EC
  -V, --version    Print version information and exit.</msg>
<status status="PASS" starttime="20231129 08:30:48.878" endtime="20231129 08:30:48.879"/>
</kw>
<msg timestamp="20231129 08:30:48.879" level="INFO">${message} = Could not invoke public void org.apache.hadoop.ozone.shell.ShellReplicationOptions.setType(java.lang.String) with STAND_ALONE (java.lang.IllegalArgumentException: Invalid value 'STAND_ALONE' for optio...</msg>
<status status="PASS" starttime="20231129 08:30:46.931" endtime="20231129 08:30:48.879"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${message}</arg>
<arg>STAND_ALONE</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:30:48.879" endtime="20231129 08:30:48.879"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${message}</arg>
<arg>Invalid value</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:30:48.879" endtime="20231129 08:30:48.879"/>
</kw>
<status status="PASS" starttime="20231129 08:30:38.751" endtime="20231129 08:30:48.880"/>
</test>
<test id="s1-s2-t11" name="Invalid Replication With Misconfigured Client" line="143">
<kw name="Execute And Ignore Error" library="os">
<var>${message}</var>
<arg>ozone sh -Dozone.replication.allowed-configs="" bucket create --replication=rs-2-1-1024k --type=EC /${VOLUME}/invalid</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:30:48.882" level="INFO">Running command 'ozone sh -Dozone.replication.allowed-configs="" bucket create --replication=rs-2-1-1024k --type=EC /vol2399/invalid 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:30:52.125" level="INFO">${rc} = 255</msg>
<msg timestamp="20231129 08:30:52.125" level="INFO">${output} = INVALID_REQUEST Invalid replication config: EC{rs-2-1-1024k}</msg>
<status status="PASS" starttime="20231129 08:30:48.881" endtime="20231129 08:30:52.125"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:30:52.126" level="INFO">INVALID_REQUEST Invalid replication config: EC{rs-2-1-1024k}</msg>
<status status="PASS" starttime="20231129 08:30:52.125" endtime="20231129 08:30:52.126"/>
</kw>
<msg timestamp="20231129 08:30:52.126" level="INFO">${message} = INVALID_REQUEST Invalid replication config: EC{rs-2-1-1024k}</msg>
<status status="PASS" starttime="20231129 08:30:48.881" endtime="20231129 08:30:52.126"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${message}</arg>
<arg>INVALID_REQUEST Invalid replication config</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:30:52.126" endtime="20231129 08:30:52.126"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${message}</var>
<arg>ozone sh -Dozone.replication.allowed-configs="" key put --replication=rs-3-2-1024 --type=EC /${VOLUME}/ecbucket/invalid /tmp/1mb</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:30:52.128" level="INFO">Running command 'ozone sh -Dozone.replication.allowed-configs="" key put --replication=rs-3-2-1024 --type=EC /vol2399/ecbucket/invalid /tmp/1mb 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:30:55.352" level="INFO">${rc} = 255</msg>
<msg timestamp="20231129 08:30:55.352" level="INFO">${output} = INVALID_REQUEST Invalid replication config: EC{rs-3-2-1k}</msg>
<status status="PASS" starttime="20231129 08:30:52.127" endtime="20231129 08:30:55.352"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:30:55.353" level="INFO">INVALID_REQUEST Invalid replication config: EC{rs-3-2-1k}</msg>
<status status="PASS" starttime="20231129 08:30:55.352" endtime="20231129 08:30:55.353"/>
</kw>
<msg timestamp="20231129 08:30:55.353" level="INFO">${message} = INVALID_REQUEST Invalid replication config: EC{rs-3-2-1k}</msg>
<status status="PASS" starttime="20231129 08:30:52.126" endtime="20231129 08:30:55.353"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${message}</arg>
<arg>INVALID_REQUEST Invalid replication config</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:30:55.353" endtime="20231129 08:30:55.353"/>
</kw>
<status status="PASS" starttime="20231129 08:30:48.880" endtime="20231129 08:30:55.354"/>
</test>
<test id="s1-s2-t12" name="Check disk usage after create a file which uses EC replication type" line="152">
<kw name="Generate Random String" library="String">
<var>${vol}</var>
<arg>8</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231129 08:30:55.355" level="INFO">${vol} = bcymmnrr</msg>
<status status="PASS" starttime="20231129 08:30:55.355" endtime="20231129 08:30:55.355"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${bucket}</var>
<arg>8</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231129 08:30:55.355" level="INFO">${bucket} = dskdqwzt</msg>
<status status="PASS" starttime="20231129 08:30:55.355" endtime="20231129 08:30:55.355"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${vol}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:30:55.358" level="INFO">Running command 'ozone sh volume create /bcymmnrr 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:30:58.445" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:30:58.445" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:30:55.357" endtime="20231129 08:30:58.445"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:30:58.446" level="INFO"/>
<status status="PASS" starttime="20231129 08:30:58.446" endtime="20231129 08:30:58.446"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:30:58.447" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:30:58.446" endtime="20231129 08:30:58.447"/>
</kw>
<status status="PASS" starttime="20231129 08:30:55.356" endtime="20231129 08:30:58.447"/>
</kw>
<msg timestamp="20231129 08:30:58.447" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:30:55.356" endtime="20231129 08:30:58.447"/>
</kw>
<status status="PASS" starttime="20231129 08:30:55.356" endtime="20231129 08:30:58.447"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${vol}/${bucket} --type EC --replication rs-3-2-1024k</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:30:58.450" level="INFO">Running command 'ozone sh bucket create /bcymmnrr/dskdqwzt --type EC --replication rs-3-2-1024k 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:31:01.550" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:31:01.550" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:30:58.448" endtime="20231129 08:31:01.550"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:31:01.551" level="INFO"/>
<status status="PASS" starttime="20231129 08:31:01.550" endtime="20231129 08:31:01.551"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:31:01.551" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:31:01.551" endtime="20231129 08:31:01.551"/>
</kw>
<status status="PASS" starttime="20231129 08:30:58.448" endtime="20231129 08:31:01.551"/>
</kw>
<msg timestamp="20231129 08:31:01.551" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:30:58.448" endtime="20231129 08:31:01.552"/>
</kw>
<status status="PASS" starttime="20231129 08:30:58.447" endtime="20231129 08:31:01.552"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -put NOTICE.txt /${vol}/${bucket}/PUTFILE2.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:31:01.554" level="INFO">Running command 'ozone fs -put NOTICE.txt /bcymmnrr/dskdqwzt/PUTFILE2.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:31:05.904" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:31:05.905" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:31:01.553" endtime="20231129 08:31:05.905"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:31:05.905" level="INFO"/>
<status status="PASS" starttime="20231129 08:31:05.905" endtime="20231129 08:31:05.905"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:31:05.906" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:31:05.906" endtime="20231129 08:31:05.906"/>
</kw>
<status status="PASS" starttime="20231129 08:31:01.553" endtime="20231129 08:31:05.906"/>
</kw>
<msg timestamp="20231129 08:31:05.906" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:31:01.552" endtime="20231129 08:31:05.906"/>
</kw>
<status status="PASS" starttime="20231129 08:31:01.552" endtime="20231129 08:31:05.906"/>
</kw>
<kw name="Execute" library="os">
<var>${expectedFileLength}</var>
<arg>stat -c %s NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:31:05.909" level="INFO">Running command 'stat -c %s NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:31:05.911" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:31:05.911" level="INFO">${output} = 17289</msg>
<status status="PASS" starttime="20231129 08:31:05.908" endtime="20231129 08:31:05.911"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:31:05.912" level="INFO">17289</msg>
<status status="PASS" starttime="20231129 08:31:05.912" endtime="20231129 08:31:05.912"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:31:05.913" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:31:05.912" endtime="20231129 08:31:05.913"/>
</kw>
<status status="PASS" starttime="20231129 08:31:05.907" endtime="20231129 08:31:05.913"/>
</kw>
<msg timestamp="20231129 08:31:05.913" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:31:05.907" endtime="20231129 08:31:05.913"/>
</kw>
<msg timestamp="20231129 08:31:05.913" level="INFO">${expectedFileLength} = 17289</msg>
<status status="PASS" starttime="20231129 08:31:05.907" endtime="20231129 08:31:05.913"/>
</kw>
<kw name="Get Disk Usage of File with EC RS Replication">
<var>${expectedDiskUsage}</var>
<arg>${expectedFileLength}</arg>
<arg>3</arg>
<arg>2</arg>
<arg>1024</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${ecChunkSize}</var>
<arg>${ecChunkSize} * 1024</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20231129 08:31:05.914" level="INFO">${ecChunkSize} = 1048576</msg>
<status status="PASS" starttime="20231129 08:31:05.914" endtime="20231129 08:31:05.914"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${dataStripeSize}</var>
<arg>${dataChunkCount} * ${ecChunkSize} * 1024</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20231129 08:31:05.915" level="INFO">${dataStripeSize} = 3221225472</msg>
<status status="PASS" starttime="20231129 08:31:05.914" endtime="20231129 08:31:05.915"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${fullStripes}</var>
<arg>${fileLength}/${dataStripeSize}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20231129 08:31:05.915" level="INFO">${fullStripes} = 5.367211997509003e-06</msg>
<status status="PASS" starttime="20231129 08:31:05.915" endtime="20231129 08:31:05.915"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${fullStripes}</var>
<arg>${fullStripes}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20231129 08:31:05.915" level="INFO">${fullStripes} = 0</msg>
<status status="PASS" starttime="20231129 08:31:05.915" endtime="20231129 08:31:05.916"/>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<var>${fullStripes}</var>
<arg>${fullStripes}</arg>
<arg>0</arg>
<doc>Converts the given item to a floating point number.</doc>
<msg timestamp="20231129 08:31:05.916" level="INFO">${fullStripes} = 0.0</msg>
<status status="PASS" starttime="20231129 08:31:05.916" endtime="20231129 08:31:05.916"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${partialFirstChunk}</var>
<arg>${fileLength} % ${dataStripeSize}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20231129 08:31:05.916" level="INFO">${partialFirstChunk} = 17289</msg>
<status status="PASS" starttime="20231129 08:31:05.916" endtime="20231129 08:31:05.916"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${ecChunkSize}</var>
<arg>${ecChunkSize}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20231129 08:31:05.917" level="INFO">${ecChunkSize} = 1048576</msg>
<status status="PASS" starttime="20231129 08:31:05.917" endtime="20231129 08:31:05.917"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${partialFirstChunk}</var>
<arg>${partialFirstChunk}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20231129 08:31:05.917" level="INFO">${partialFirstChunk} = 17289</msg>
<status status="PASS" starttime="20231129 08:31:05.917" endtime="20231129 08:31:05.917"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${partialFirstChunkOptions}</var>
<arg>${ecChunkSize}</arg>
<arg>${partialFirstChunk}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20231129 08:31:05.918" level="INFO">${partialFirstChunkOptions} = [1048576, 17289]</msg>
<status status="PASS" starttime="20231129 08:31:05.917" endtime="20231129 08:31:05.918"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${partialFirstChunk}</var>
<arg>min(${partialFirstChunkOptions})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20231129 08:31:05.918" level="INFO">${partialFirstChunk} = 17289</msg>
<status status="PASS" starttime="20231129 08:31:05.918" endtime="20231129 08:31:05.918"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${replicationOverhead}</var>
<arg>${fullStripes} * 2 * 1024 * 1024 + ${partialFirstChunk} * 2</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20231129 08:31:05.919" level="INFO">${replicationOverhead} = 34578.0</msg>
<status status="PASS" starttime="20231129 08:31:05.918" endtime="20231129 08:31:05.919"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${expectedDiskUsage}</var>
<arg>${fileLength} + ${replicationOverhead}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20231129 08:31:05.919" level="INFO">${expectedDiskUsage} = 51867.0</msg>
<status status="PASS" starttime="20231129 08:31:05.919" endtime="20231129 08:31:05.919"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${expectedDiskUsage}</var>
<arg>${expectedDiskUsage}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20231129 08:31:05.920" level="INFO">${expectedDiskUsage} = 51867</msg>
<status status="PASS" starttime="20231129 08:31:05.919" endtime="20231129 08:31:05.920"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${expectedDiskUsage}</var>
<arg>${expectedDiskUsage}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20231129 08:31:05.920" level="INFO">${expectedDiskUsage} = 51867</msg>
<status status="PASS" starttime="20231129 08:31:05.920" endtime="20231129 08:31:05.920"/>
</kw>
<msg timestamp="20231129 08:31:05.920" level="INFO">${expectedDiskUsage} = 51867</msg>
<status status="PASS" starttime="20231129 08:31:05.913" endtime="20231129 08:31:05.920"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone fs -du /${vol}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:31:05.923" level="INFO">Running command 'ozone fs -du /bcymmnrr/dskdqwzt 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:31:08.968" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:31:08.968" level="INFO">${output} = 17289  51867  /bcymmnrr/dskdqwzt/PUTFILE2.txt</msg>
<status status="PASS" starttime="20231129 08:31:05.921" endtime="20231129 08:31:08.968"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:31:08.969" level="INFO">17289  51867  /bcymmnrr/dskdqwzt/PUTFILE2.txt</msg>
<status status="PASS" starttime="20231129 08:31:08.968" endtime="20231129 08:31:08.969"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:31:08.969" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:31:08.969" endtime="20231129 08:31:08.969"/>
</kw>
<status status="PASS" starttime="20231129 08:31:05.921" endtime="20231129 08:31:08.969"/>
</kw>
<msg timestamp="20231129 08:31:08.969" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:31:05.921" endtime="20231129 08:31:08.969"/>
</kw>
<msg timestamp="20231129 08:31:08.970" level="INFO">${result} = 17289  51867  /bcymmnrr/dskdqwzt/PUTFILE2.txt</msg>
<status status="PASS" starttime="20231129 08:31:05.920" endtime="20231129 08:31:08.970"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PUTFILE2.txt</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:31:08.970" endtime="20231129 08:31:08.970"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expectedFileLength}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:31:08.970" endtime="20231129 08:31:08.970"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expectedDiskUsage}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231129 08:31:08.970" endtime="20231129 08:31:08.971"/>
</kw>
<status status="PASS" starttime="20231129 08:30:55.354" endtime="20231129 08:31:08.971"/>
</test>
<doc>Test EC shell commands</doc>
<status status="PASS" starttime="20231129 08:27:59.637" endtime="20231129 08:31:08.972"/>
</suite>
<suite id="s1-s3" name="read-4-datanodes" source="/opt/hadoop/smoketest/ec/read.robot">
<test id="s1-s3-t1" name="Read 1MB EC Key" line="25">
<kw name="Key Should Match Local File" library="shell">
<arg>/${VOLUME}/ecbucket/dir/1mb</arg>
<arg>/tmp/1mb</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231129 08:31:14.603" level="INFO">${postfix} = 41536</msg>
<status status="PASS" starttime="20231129 08:31:14.603" endtime="20231129 08:31:14.603"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:31:14.604" level="INFO">${tmpfile} = /tmp/tempkey-41536</msg>
<status status="PASS" starttime="20231129 08:31:14.603" endtime="20231129 08:31:14.604"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:31:14.606" level="INFO">Running command 'ozone sh key get /vol2399/ecbucket/dir/1mb /tmp/tempkey-41536 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:31:19.370" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:31:19.370" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:31:14.605" endtime="20231129 08:31:19.370"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:31:19.371" level="INFO"/>
<status status="PASS" starttime="20231129 08:31:19.370" endtime="20231129 08:31:19.371"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:31:19.371" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:31:19.371" endtime="20231129 08:31:19.371"/>
</kw>
<status status="PASS" starttime="20231129 08:31:14.605" endtime="20231129 08:31:19.371"/>
</kw>
<msg timestamp="20231129 08:31:19.371" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:31:14.604" endtime="20231129 08:31:19.371"/>
</kw>
<status status="PASS" starttime="20231129 08:31:14.604" endtime="20231129 08:31:19.372"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20231129 08:31:19.373" level="INFO">Running command 'diff -q /tmp/1mb /tmp/tempkey-41536 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:31:19.375" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20231129 08:31:19.372" endtime="20231129 08:31:19.375"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:31:19.378" level="INFO">Running command 'rm -f /tmp/tempkey-41536 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:31:19.379" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:31:19.379" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:31:19.377" endtime="20231129 08:31:19.379"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:31:19.380" level="INFO"/>
<status status="PASS" starttime="20231129 08:31:19.380" endtime="20231129 08:31:19.380"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:31:19.380" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:31:19.380" endtime="20231129 08:31:19.380"/>
</kw>
<status status="PASS" starttime="20231129 08:31:19.376" endtime="20231129 08:31:19.380"/>
</kw>
<msg timestamp="20231129 08:31:19.381" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:31:19.376" endtime="20231129 08:31:19.381"/>
</kw>
<status status="PASS" starttime="20231129 08:31:19.375" endtime="20231129 08:31:19.381"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20231129 08:31:19.381" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20231129 08:31:19.381" endtime="20231129 08:31:19.381"/>
</kw>
<msg timestamp="20231129 08:31:19.381" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20231129 08:31:14.603" endtime="20231129 08:31:19.381"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20231129 08:31:19.382" endtime="20231129 08:31:19.382"/>
</kw>
<status status="PASS" starttime="20231129 08:31:14.602" endtime="20231129 08:31:19.382"/>
</kw>
<status status="PASS" starttime="20231129 08:31:14.602" endtime="20231129 08:31:19.382"/>
</test>
<test id="s1-s3-t2" name="Read 2MB EC Key" line="28">
<kw name="Key Should Match Local File" library="shell">
<arg>/${VOLUME}/ecbucket/dir/2mb</arg>
<arg>/tmp/2mb</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231129 08:31:19.384" level="INFO">${postfix} = 02653</msg>
<status status="PASS" starttime="20231129 08:31:19.384" endtime="20231129 08:31:19.384"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:31:19.384" level="INFO">${tmpfile} = /tmp/tempkey-02653</msg>
<status status="PASS" starttime="20231129 08:31:19.384" endtime="20231129 08:31:19.385"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:31:19.387" level="INFO">Running command 'ozone sh key get /vol2399/ecbucket/dir/2mb /tmp/tempkey-02653 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:31:24.195" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:31:24.195" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:31:19.386" endtime="20231129 08:31:24.195"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:31:24.196" level="INFO"/>
<status status="PASS" starttime="20231129 08:31:24.195" endtime="20231129 08:31:24.196"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:31:24.196" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:31:24.196" endtime="20231129 08:31:24.196"/>
</kw>
<status status="PASS" starttime="20231129 08:31:19.385" endtime="20231129 08:31:24.196"/>
</kw>
<msg timestamp="20231129 08:31:24.196" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:31:19.385" endtime="20231129 08:31:24.196"/>
</kw>
<status status="PASS" starttime="20231129 08:31:19.385" endtime="20231129 08:31:24.197"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20231129 08:31:24.198" level="INFO">Running command 'diff -q /tmp/2mb /tmp/tempkey-02653 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:31:24.200" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20231129 08:31:24.197" endtime="20231129 08:31:24.201"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:31:24.203" level="INFO">Running command 'rm -f /tmp/tempkey-02653 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:31:24.205" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:31:24.205" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:31:24.202" endtime="20231129 08:31:24.205"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:31:24.205" level="INFO"/>
<status status="PASS" starttime="20231129 08:31:24.205" endtime="20231129 08:31:24.205"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:31:24.206" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:31:24.206" endtime="20231129 08:31:24.206"/>
</kw>
<status status="PASS" starttime="20231129 08:31:24.202" endtime="20231129 08:31:24.206"/>
</kw>
<msg timestamp="20231129 08:31:24.206" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:31:24.201" endtime="20231129 08:31:24.206"/>
</kw>
<status status="PASS" starttime="20231129 08:31:24.201" endtime="20231129 08:31:24.206"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20231129 08:31:24.207" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20231129 08:31:24.206" endtime="20231129 08:31:24.207"/>
</kw>
<msg timestamp="20231129 08:31:24.207" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20231129 08:31:19.383" endtime="20231129 08:31:24.207"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20231129 08:31:24.207" endtime="20231129 08:31:24.207"/>
</kw>
<status status="PASS" starttime="20231129 08:31:19.383" endtime="20231129 08:31:24.207"/>
</kw>
<status status="PASS" starttime="20231129 08:31:19.382" endtime="20231129 08:31:24.207"/>
</test>
<test id="s1-s3-t3" name="Read 3MB EC Key" line="31">
<kw name="Key Should Match Local File" library="shell">
<arg>/${VOLUME}/ecbucket/dir/3mb</arg>
<arg>/tmp/3mb</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231129 08:31:24.209" level="INFO">${postfix} = 40847</msg>
<status status="PASS" starttime="20231129 08:31:24.209" endtime="20231129 08:31:24.209"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:31:24.210" level="INFO">${tmpfile} = /tmp/tempkey-40847</msg>
<status status="PASS" starttime="20231129 08:31:24.209" endtime="20231129 08:31:24.210"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:31:24.212" level="INFO">Running command 'ozone sh key get /vol2399/ecbucket/dir/3mb /tmp/tempkey-40847 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:31:53.905" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:31:53.905" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:31:24.211" endtime="20231129 08:31:53.905"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:31:53.906" level="INFO"/>
<status status="PASS" starttime="20231129 08:31:53.906" endtime="20231129 08:31:53.906"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:31:53.906" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:31:53.906" endtime="20231129 08:31:53.906"/>
</kw>
<status status="PASS" starttime="20231129 08:31:24.210" endtime="20231129 08:31:53.907"/>
</kw>
<msg timestamp="20231129 08:31:53.907" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:31:24.210" endtime="20231129 08:31:53.907"/>
</kw>
<status status="PASS" starttime="20231129 08:31:24.210" endtime="20231129 08:31:53.907"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20231129 08:31:53.908" level="INFO">Running command 'diff -q /tmp/3mb /tmp/tempkey-40847 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:31:53.911" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20231129 08:31:53.907" endtime="20231129 08:31:53.911"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:31:53.914" level="INFO">Running command 'rm -f /tmp/tempkey-40847 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:31:53.915" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:31:53.915" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:31:53.913" endtime="20231129 08:31:53.915"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:31:53.916" level="INFO"/>
<status status="PASS" starttime="20231129 08:31:53.916" endtime="20231129 08:31:53.916"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:31:53.916" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:31:53.916" endtime="20231129 08:31:53.916"/>
</kw>
<status status="PASS" starttime="20231129 08:31:53.912" endtime="20231129 08:31:53.917"/>
</kw>
<msg timestamp="20231129 08:31:53.917" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:31:53.912" endtime="20231129 08:31:53.917"/>
</kw>
<status status="PASS" starttime="20231129 08:31:53.911" endtime="20231129 08:31:53.917"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20231129 08:31:53.917" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20231129 08:31:53.917" endtime="20231129 08:31:53.917"/>
</kw>
<msg timestamp="20231129 08:31:53.917" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20231129 08:31:24.209" endtime="20231129 08:31:53.917"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20231129 08:31:53.918" endtime="20231129 08:31:53.918"/>
</kw>
<status status="PASS" starttime="20231129 08:31:24.208" endtime="20231129 08:31:53.918"/>
</kw>
<status status="PASS" starttime="20231129 08:31:24.208" endtime="20231129 08:31:53.918"/>
</test>
<test id="s1-s3-t4" name="Read 100MB EC Key" line="34">
<kw name="Key Should Match Local File" library="shell">
<arg>/${VOLUME}/ecbucket/dir/100mb</arg>
<arg>/tmp/100mb</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231129 08:31:53.920" level="INFO">${postfix} = 14695</msg>
<status status="PASS" starttime="20231129 08:31:53.920" endtime="20231129 08:31:53.920"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:31:53.920" level="INFO">${tmpfile} = /tmp/tempkey-14695</msg>
<status status="PASS" starttime="20231129 08:31:53.920" endtime="20231129 08:31:53.920"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:31:53.923" level="INFO">Running command 'ozone sh key get /vol2399/ecbucket/dir/100mb /tmp/tempkey-14695 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:32:10.764" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:32:10.764" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:31:53.921" endtime="20231129 08:32:10.764"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:32:10.765" level="INFO"/>
<status status="PASS" starttime="20231129 08:32:10.764" endtime="20231129 08:32:10.765"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:32:10.765" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:32:10.765" endtime="20231129 08:32:10.765"/>
</kw>
<status status="PASS" starttime="20231129 08:31:53.921" endtime="20231129 08:32:10.765"/>
</kw>
<msg timestamp="20231129 08:32:10.765" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:31:53.921" endtime="20231129 08:32:10.765"/>
</kw>
<status status="PASS" starttime="20231129 08:31:53.921" endtime="20231129 08:32:10.765"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20231129 08:32:10.767" level="INFO">Running command 'diff -q /tmp/100mb /tmp/tempkey-14695 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:32:10.805" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20231129 08:32:10.766" endtime="20231129 08:32:10.805"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:32:10.808" level="INFO">Running command 'rm -f /tmp/tempkey-14695 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:32:10.820" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:32:10.820" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:32:10.807" endtime="20231129 08:32:10.820"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:32:10.820" level="INFO"/>
<status status="PASS" starttime="20231129 08:32:10.820" endtime="20231129 08:32:10.820"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:32:10.821" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:32:10.821" endtime="20231129 08:32:10.822"/>
</kw>
<status status="PASS" starttime="20231129 08:32:10.806" endtime="20231129 08:32:10.822"/>
</kw>
<msg timestamp="20231129 08:32:10.822" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:32:10.806" endtime="20231129 08:32:10.822"/>
</kw>
<status status="PASS" starttime="20231129 08:32:10.805" endtime="20231129 08:32:10.822"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20231129 08:32:10.823" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20231129 08:32:10.822" endtime="20231129 08:32:10.823"/>
</kw>
<msg timestamp="20231129 08:32:10.823" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20231129 08:31:53.919" endtime="20231129 08:32:10.823"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20231129 08:32:10.823" endtime="20231129 08:32:10.823"/>
</kw>
<status status="PASS" starttime="20231129 08:31:53.919" endtime="20231129 08:32:10.823"/>
</kw>
<status status="PASS" starttime="20231129 08:31:53.918" endtime="20231129 08:32:10.823"/>
</test>
<test id="s1-s3-t5" name="Read EC Key in Ratis Bucket" line="37">
<kw name="Key Should Match Local File" library="shell">
<arg>/${VOLUME}/ratis/dir2/1mbEC</arg>
<arg>/tmp/1mb</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231129 08:32:10.825" level="INFO">${postfix} = 67507</msg>
<status status="PASS" starttime="20231129 08:32:10.825" endtime="20231129 08:32:10.825"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:32:10.826" level="INFO">${tmpfile} = /tmp/tempkey-67507</msg>
<status status="PASS" starttime="20231129 08:32:10.825" endtime="20231129 08:32:10.826"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:32:10.828" level="INFO">Running command 'ozone sh key get /vol2399/ratis/dir2/1mbEC /tmp/tempkey-67507 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:32:15.825" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:32:15.825" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:32:10.827" endtime="20231129 08:32:15.825"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:32:15.826" level="INFO"/>
<status status="PASS" starttime="20231129 08:32:15.826" endtime="20231129 08:32:15.826"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:32:15.827" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:32:15.826" endtime="20231129 08:32:15.827"/>
</kw>
<status status="PASS" starttime="20231129 08:32:10.826" endtime="20231129 08:32:15.827"/>
</kw>
<msg timestamp="20231129 08:32:15.827" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:32:10.826" endtime="20231129 08:32:15.827"/>
</kw>
<status status="PASS" starttime="20231129 08:32:10.826" endtime="20231129 08:32:15.827"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20231129 08:32:15.829" level="INFO">Running command 'diff -q /tmp/1mb /tmp/tempkey-67507 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:32:15.831" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20231129 08:32:15.827" endtime="20231129 08:32:15.831"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:32:15.833" level="INFO">Running command 'rm -f /tmp/tempkey-67507 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:32:15.835" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:32:15.835" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:32:15.832" endtime="20231129 08:32:15.835"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:32:15.836" level="INFO"/>
<status status="PASS" starttime="20231129 08:32:15.835" endtime="20231129 08:32:15.836"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:32:15.836" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:32:15.836" endtime="20231129 08:32:15.836"/>
</kw>
<status status="PASS" starttime="20231129 08:32:15.832" endtime="20231129 08:32:15.836"/>
</kw>
<msg timestamp="20231129 08:32:15.836" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:32:15.831" endtime="20231129 08:32:15.836"/>
</kw>
<status status="PASS" starttime="20231129 08:32:15.831" endtime="20231129 08:32:15.836"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20231129 08:32:15.837" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20231129 08:32:15.837" endtime="20231129 08:32:15.837"/>
</kw>
<msg timestamp="20231129 08:32:15.837" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20231129 08:32:10.825" endtime="20231129 08:32:15.837"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20231129 08:32:15.837" endtime="20231129 08:32:15.837"/>
</kw>
<status status="PASS" starttime="20231129 08:32:10.824" endtime="20231129 08:32:15.838"/>
</kw>
<status status="PASS" starttime="20231129 08:32:10.824" endtime="20231129 08:32:15.838"/>
</test>
<doc>Test reading EC keys</doc>
<status status="PASS" starttime="20231129 08:31:14.558" endtime="20231129 08:32:15.839"/>
</suite>
<suite id="s1-s4" name="read-3-datanodes" source="/opt/hadoop/smoketest/ec/read.robot">
<test id="s1-s4-t1" name="Read 1MB EC Key" line="25">
<kw name="Key Should Match Local File" library="shell">
<arg>/${VOLUME}/ecbucket/dir/1mb</arg>
<arg>/tmp/1mb</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231129 08:32:21.713" level="INFO">${postfix} = 47587</msg>
<status status="PASS" starttime="20231129 08:32:21.713" endtime="20231129 08:32:21.713"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:32:21.714" level="INFO">${tmpfile} = /tmp/tempkey-47587</msg>
<status status="PASS" starttime="20231129 08:32:21.713" endtime="20231129 08:32:21.714"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:32:21.716" level="INFO">Running command 'ozone sh key get /vol2399/ecbucket/dir/1mb /tmp/tempkey-47587 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:33:02.751" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:33:02.751" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:32:21.715" endtime="20231129 08:33:02.751"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:33:02.751" level="INFO"/>
<status status="PASS" starttime="20231129 08:33:02.751" endtime="20231129 08:33:02.751"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:33:02.752" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:33:02.752" endtime="20231129 08:33:02.752"/>
</kw>
<status status="PASS" starttime="20231129 08:32:21.714" endtime="20231129 08:33:02.752"/>
</kw>
<msg timestamp="20231129 08:33:02.752" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:32:21.714" endtime="20231129 08:33:02.752"/>
</kw>
<status status="PASS" starttime="20231129 08:32:21.714" endtime="20231129 08:33:02.752"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20231129 08:33:02.754" level="INFO">Running command 'diff -q /tmp/1mb /tmp/tempkey-47587 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:33:02.756" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20231129 08:33:02.752" endtime="20231129 08:33:02.756"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:33:02.758" level="INFO">Running command 'rm -f /tmp/tempkey-47587 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:33:02.760" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:33:02.760" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:33:02.757" endtime="20231129 08:33:02.760"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:33:02.761" level="INFO"/>
<status status="PASS" starttime="20231129 08:33:02.760" endtime="20231129 08:33:02.761"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:33:02.761" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:33:02.761" endtime="20231129 08:33:02.761"/>
</kw>
<status status="PASS" starttime="20231129 08:33:02.757" endtime="20231129 08:33:02.761"/>
</kw>
<msg timestamp="20231129 08:33:02.761" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:33:02.757" endtime="20231129 08:33:02.761"/>
</kw>
<status status="PASS" starttime="20231129 08:33:02.756" endtime="20231129 08:33:02.762"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20231129 08:33:02.762" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20231129 08:33:02.762" endtime="20231129 08:33:02.762"/>
</kw>
<msg timestamp="20231129 08:33:02.762" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20231129 08:32:21.713" endtime="20231129 08:33:02.762"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20231129 08:33:02.762" endtime="20231129 08:33:02.763"/>
</kw>
<status status="PASS" starttime="20231129 08:32:21.712" endtime="20231129 08:33:02.763"/>
</kw>
<status status="PASS" starttime="20231129 08:32:21.712" endtime="20231129 08:33:02.763"/>
</test>
<test id="s1-s4-t2" name="Read 2MB EC Key" line="28">
<kw name="Key Should Match Local File" library="shell">
<arg>/${VOLUME}/ecbucket/dir/2mb</arg>
<arg>/tmp/2mb</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231129 08:33:02.765" level="INFO">${postfix} = 92342</msg>
<status status="PASS" starttime="20231129 08:33:02.765" endtime="20231129 08:33:02.765"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:33:02.765" level="INFO">${tmpfile} = /tmp/tempkey-92342</msg>
<status status="PASS" starttime="20231129 08:33:02.765" endtime="20231129 08:33:02.765"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:33:02.768" level="INFO">Running command 'ozone sh key get /vol2399/ecbucket/dir/2mb /tmp/tempkey-92342 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:33:17.001" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:33:17.001" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:33:02.766" endtime="20231129 08:33:17.001"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:33:17.002" level="INFO"/>
<status status="PASS" starttime="20231129 08:33:17.002" endtime="20231129 08:33:17.002"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:33:17.003" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:33:17.002" endtime="20231129 08:33:17.003"/>
</kw>
<status status="PASS" starttime="20231129 08:33:02.766" endtime="20231129 08:33:17.003"/>
</kw>
<msg timestamp="20231129 08:33:17.003" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:33:02.766" endtime="20231129 08:33:17.003"/>
</kw>
<status status="PASS" starttime="20231129 08:33:02.766" endtime="20231129 08:33:17.003"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20231129 08:33:17.005" level="INFO">Running command 'diff -q /tmp/2mb /tmp/tempkey-92342 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:33:17.007" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20231129 08:33:17.003" endtime="20231129 08:33:17.007"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:33:17.009" level="INFO">Running command 'rm -f /tmp/tempkey-92342 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:33:17.012" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:33:17.012" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:33:17.008" endtime="20231129 08:33:17.012"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:33:17.012" level="INFO"/>
<status status="PASS" starttime="20231129 08:33:17.012" endtime="20231129 08:33:17.012"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:33:17.013" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:33:17.012" endtime="20231129 08:33:17.013"/>
</kw>
<status status="PASS" starttime="20231129 08:33:17.008" endtime="20231129 08:33:17.013"/>
</kw>
<msg timestamp="20231129 08:33:17.013" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:33:17.008" endtime="20231129 08:33:17.013"/>
</kw>
<status status="PASS" starttime="20231129 08:33:17.007" endtime="20231129 08:33:17.013"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20231129 08:33:17.014" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20231129 08:33:17.013" endtime="20231129 08:33:17.014"/>
</kw>
<msg timestamp="20231129 08:33:17.014" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20231129 08:33:02.764" endtime="20231129 08:33:17.014"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20231129 08:33:17.014" endtime="20231129 08:33:17.014"/>
</kw>
<status status="PASS" starttime="20231129 08:33:02.764" endtime="20231129 08:33:17.014"/>
</kw>
<status status="PASS" starttime="20231129 08:33:02.763" endtime="20231129 08:33:17.014"/>
</test>
<test id="s1-s4-t3" name="Read 3MB EC Key" line="31">
<kw name="Key Should Match Local File" library="shell">
<arg>/${VOLUME}/ecbucket/dir/3mb</arg>
<arg>/tmp/3mb</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231129 08:33:17.016" level="INFO">${postfix} = 88970</msg>
<status status="PASS" starttime="20231129 08:33:17.016" endtime="20231129 08:33:17.016"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:33:17.017" level="INFO">${tmpfile} = /tmp/tempkey-88970</msg>
<status status="PASS" starttime="20231129 08:33:17.016" endtime="20231129 08:33:17.017"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:33:17.019" level="INFO">Running command 'ozone sh key get /vol2399/ecbucket/dir/3mb /tmp/tempkey-88970 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:33:25.076" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:33:25.076" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:33:17.018" endtime="20231129 08:33:25.076"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:33:25.077" level="INFO"/>
<status status="PASS" starttime="20231129 08:33:25.076" endtime="20231129 08:33:25.077"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:33:25.077" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:33:25.077" endtime="20231129 08:33:25.077"/>
</kw>
<status status="PASS" starttime="20231129 08:33:17.017" endtime="20231129 08:33:25.077"/>
</kw>
<msg timestamp="20231129 08:33:25.077" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:33:17.017" endtime="20231129 08:33:25.077"/>
</kw>
<status status="PASS" starttime="20231129 08:33:17.017" endtime="20231129 08:33:25.078"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20231129 08:33:25.079" level="INFO">Running command 'diff -q /tmp/3mb /tmp/tempkey-88970 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:33:25.082" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20231129 08:33:25.078" endtime="20231129 08:33:25.082"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:33:25.084" level="INFO">Running command 'rm -f /tmp/tempkey-88970 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:33:25.086" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:33:25.086" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:33:25.083" endtime="20231129 08:33:25.086"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:33:25.087" level="INFO"/>
<status status="PASS" starttime="20231129 08:33:25.086" endtime="20231129 08:33:25.087"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:33:25.087" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:33:25.087" endtime="20231129 08:33:25.087"/>
</kw>
<status status="PASS" starttime="20231129 08:33:25.083" endtime="20231129 08:33:25.087"/>
</kw>
<msg timestamp="20231129 08:33:25.087" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:33:25.083" endtime="20231129 08:33:25.088"/>
</kw>
<status status="PASS" starttime="20231129 08:33:25.082" endtime="20231129 08:33:25.088"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20231129 08:33:25.088" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20231129 08:33:25.088" endtime="20231129 08:33:25.088"/>
</kw>
<msg timestamp="20231129 08:33:25.088" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20231129 08:33:17.016" endtime="20231129 08:33:25.088"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20231129 08:33:25.088" endtime="20231129 08:33:25.089"/>
</kw>
<status status="PASS" starttime="20231129 08:33:17.015" endtime="20231129 08:33:25.089"/>
</kw>
<status status="PASS" starttime="20231129 08:33:17.015" endtime="20231129 08:33:25.089"/>
</test>
<test id="s1-s4-t4" name="Read 100MB EC Key" line="34">
<kw name="Key Should Match Local File" library="shell">
<arg>/${VOLUME}/ecbucket/dir/100mb</arg>
<arg>/tmp/100mb</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231129 08:33:25.091" level="INFO">${postfix} = 56379</msg>
<status status="PASS" starttime="20231129 08:33:25.091" endtime="20231129 08:33:25.091"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:33:25.091" level="INFO">${tmpfile} = /tmp/tempkey-56379</msg>
<status status="PASS" starttime="20231129 08:33:25.091" endtime="20231129 08:33:25.091"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:33:25.094" level="INFO">Running command 'ozone sh key get /vol2399/ecbucket/dir/100mb /tmp/tempkey-56379 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:33:35.953" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:33:35.954" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:33:25.092" endtime="20231129 08:33:35.954"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:33:35.954" level="INFO"/>
<status status="PASS" starttime="20231129 08:33:35.954" endtime="20231129 08:33:35.954"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:33:35.955" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:33:35.955" endtime="20231129 08:33:35.955"/>
</kw>
<status status="PASS" starttime="20231129 08:33:25.092" endtime="20231129 08:33:35.955"/>
</kw>
<msg timestamp="20231129 08:33:35.955" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:33:25.092" endtime="20231129 08:33:35.955"/>
</kw>
<status status="PASS" starttime="20231129 08:33:25.091" endtime="20231129 08:33:35.955"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20231129 08:33:35.957" level="INFO">Running command 'diff -q /tmp/100mb /tmp/tempkey-56379 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:33:35.994" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20231129 08:33:35.955" endtime="20231129 08:33:35.994"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:33:35.997" level="INFO">Running command 'rm -f /tmp/tempkey-56379 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:33:36.010" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:33:36.010" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:33:35.996" endtime="20231129 08:33:36.010"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:33:36.011" level="INFO"/>
<status status="PASS" starttime="20231129 08:33:36.010" endtime="20231129 08:33:36.011"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:33:36.011" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:33:36.011" endtime="20231129 08:33:36.012"/>
</kw>
<status status="PASS" starttime="20231129 08:33:35.995" endtime="20231129 08:33:36.012"/>
</kw>
<msg timestamp="20231129 08:33:36.012" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:33:35.995" endtime="20231129 08:33:36.012"/>
</kw>
<status status="PASS" starttime="20231129 08:33:35.995" endtime="20231129 08:33:36.012"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20231129 08:33:36.013" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20231129 08:33:36.013" endtime="20231129 08:33:36.013"/>
</kw>
<msg timestamp="20231129 08:33:36.013" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20231129 08:33:25.090" endtime="20231129 08:33:36.013"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20231129 08:33:36.013" endtime="20231129 08:33:36.013"/>
</kw>
<status status="PASS" starttime="20231129 08:33:25.090" endtime="20231129 08:33:36.013"/>
</kw>
<status status="PASS" starttime="20231129 08:33:25.089" endtime="20231129 08:33:36.014"/>
</test>
<test id="s1-s4-t5" name="Read EC Key in Ratis Bucket" line="37">
<kw name="Key Should Match Local File" library="shell">
<arg>/${VOLUME}/ratis/dir2/1mbEC</arg>
<arg>/tmp/1mb</arg>
<kw name="Compare Key With Local File" library="shell">
<var>${matches}</var>
<arg>${key}</arg>
<arg>${file}</arg>
<kw name="Generate Random String" library="String">
<var>${postfix}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231129 08:33:36.016" level="INFO">${postfix} = 74404</msg>
<status status="PASS" starttime="20231129 08:33:36.015" endtime="20231129 08:33:36.016"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${tmpfile}</var>
<arg>/tmp/tempkey-${postfix}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231129 08:33:36.016" level="INFO">${tmpfile} = /tmp/tempkey-74404</msg>
<status status="PASS" starttime="20231129 08:33:36.016" endtime="20231129 08:33:36.016"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${key} ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:33:36.018" level="INFO">Running command 'ozone sh key get /vol2399/ratis/dir2/1mbEC /tmp/tempkey-74404 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:33:40.890" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:33:40.890" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:33:36.017" endtime="20231129 08:33:40.890"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:33:40.891" level="INFO"/>
<status status="PASS" starttime="20231129 08:33:40.890" endtime="20231129 08:33:40.891"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:33:40.891" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:33:40.891" endtime="20231129 08:33:40.891"/>
</kw>
<status status="PASS" starttime="20231129 08:33:36.017" endtime="20231129 08:33:40.891"/>
</kw>
<msg timestamp="20231129 08:33:40.891" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:33:36.016" endtime="20231129 08:33:40.891"/>
</kw>
<status status="PASS" starttime="20231129 08:33:36.016" endtime="20231129 08:33:40.891"/>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<var>${rc}</var>
<arg>diff -q ${file} ${tmpfile}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20231129 08:33:40.893" level="INFO">Running command 'diff -q /tmp/1mb /tmp/tempkey-74404 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:33:40.895" level="INFO">${rc} = 0</msg>
<status status="PASS" starttime="20231129 08:33:40.892" endtime="20231129 08:33:40.895"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f ${tmpfile}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:33:40.898" level="INFO">Running command 'rm -f /tmp/tempkey-74404 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:33:40.900" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:33:40.900" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231129 08:33:40.897" endtime="20231129 08:33:40.900"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:33:40.900" level="INFO"/>
<status status="PASS" starttime="20231129 08:33:40.900" endtime="20231129 08:33:40.900"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:33:40.901" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:33:40.900" endtime="20231129 08:33:40.901"/>
</kw>
<status status="PASS" starttime="20231129 08:33:40.896" endtime="20231129 08:33:40.901"/>
</kw>
<msg timestamp="20231129 08:33:40.901" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:33:40.896" endtime="20231129 08:33:40.901"/>
</kw>
<status status="PASS" starttime="20231129 08:33:40.895" endtime="20231129 08:33:40.901"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20231129 08:33:40.902" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20231129 08:33:40.901" endtime="20231129 08:33:40.902"/>
</kw>
<msg timestamp="20231129 08:33:40.902" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20231129 08:33:36.015" endtime="20231129 08:33:40.902"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${matches}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20231129 08:33:40.902" endtime="20231129 08:33:40.902"/>
</kw>
<status status="PASS" starttime="20231129 08:33:36.014" endtime="20231129 08:33:40.902"/>
</kw>
<status status="PASS" starttime="20231129 08:33:36.014" endtime="20231129 08:33:40.902"/>
</test>
<doc>Test reading EC keys</doc>
<status status="PASS" starttime="20231129 08:32:21.667" endtime="20231129 08:33:40.903"/>
</suite>
<suite id="s1-s5" name="EC-recovery" source="/opt/hadoop/smoketest/replication/wait.robot">
<test id="s1-s5-t1" name="Wait Until Container Replicated" line="32">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>5min</arg>
<arg>10sec</arg>
<arg>Check Container Replicated</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check Container Replicated">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info --json "${container}" | jq '.pipeline.nodes | length'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:33:44.764" level="INFO">Running command 'ozone admin container info --json "1" | jq '.pipeline.nodes | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:33:53.779" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:33:53.780" level="INFO">${output} = 3</msg>
<status status="PASS" starttime="20231129 08:33:44.759" endtime="20231129 08:33:53.780"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:33:53.781" level="INFO">3</msg>
<status status="PASS" starttime="20231129 08:33:53.780" endtime="20231129 08:33:53.781"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:33:53.781" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:33:53.781" endtime="20231129 08:33:53.781"/>
</kw>
<status status="PASS" starttime="20231129 08:33:44.758" endtime="20231129 08:33:53.781"/>
</kw>
<msg timestamp="20231129 08:33:53.782" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:33:44.758" endtime="20231129 08:33:53.782"/>
</kw>
<msg timestamp="20231129 08:33:53.782" level="INFO">${output} = 3</msg>
<status status="PASS" starttime="20231129 08:33:44.757" endtime="20231129 08:33:53.782"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${count}</arg>
<doc>Fails if the given objects are unequal.</doc>
<msg timestamp="20231129 08:33:53.783" level="FAIL">3 != 5</msg>
<status status="FAIL" starttime="20231129 08:33:53.782" endtime="20231129 08:33:53.783"/>
</kw>
<status status="FAIL" starttime="20231129 08:33:44.757" endtime="20231129 08:33:53.783"/>
</kw>
<kw name="Check Container Replicated">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info --json "${container}" | jq '.pipeline.nodes | length'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:34:03.787" level="INFO">Running command 'ozone admin container info --json "1" | jq '.pipeline.nodes | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:34:09.178" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:34:09.178" level="INFO">${output} = 3</msg>
<status status="PASS" starttime="20231129 08:34:03.785" endtime="20231129 08:34:09.178"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:34:09.179" level="INFO">3</msg>
<status status="PASS" starttime="20231129 08:34:09.178" endtime="20231129 08:34:09.179"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:34:09.185" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:34:09.179" endtime="20231129 08:34:09.185"/>
</kw>
<status status="PASS" starttime="20231129 08:34:03.785" endtime="20231129 08:34:09.185"/>
</kw>
<msg timestamp="20231129 08:34:09.185" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:34:03.784" endtime="20231129 08:34:09.185"/>
</kw>
<msg timestamp="20231129 08:34:09.186" level="INFO">${output} = 3</msg>
<status status="PASS" starttime="20231129 08:34:03.784" endtime="20231129 08:34:09.186"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${count}</arg>
<doc>Fails if the given objects are unequal.</doc>
<msg timestamp="20231129 08:34:09.187" level="FAIL">3 != 5</msg>
<status status="FAIL" starttime="20231129 08:34:09.186" endtime="20231129 08:34:09.187"/>
</kw>
<status status="FAIL" starttime="20231129 08:34:03.783" endtime="20231129 08:34:09.187"/>
</kw>
<kw name="Check Container Replicated">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin container info --json "${container}" | jq '.pipeline.nodes | length'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231129 08:34:19.191" level="INFO">Running command 'ozone admin container info --json "1" | jq '.pipeline.nodes | length' 2&gt;&amp;1'.</msg>
<msg timestamp="20231129 08:34:22.040" level="INFO">${rc} = 0</msg>
<msg timestamp="20231129 08:34:22.040" level="INFO">${output} = 5</msg>
<status status="PASS" starttime="20231129 08:34:19.189" endtime="20231129 08:34:22.040"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231129 08:34:22.041" level="INFO">5</msg>
<status status="PASS" starttime="20231129 08:34:22.040" endtime="20231129 08:34:22.041"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231129 08:34:22.041" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231129 08:34:22.041" endtime="20231129 08:34:22.041"/>
</kw>
<status status="PASS" starttime="20231129 08:34:19.189" endtime="20231129 08:34:22.041"/>
</kw>
<msg timestamp="20231129 08:34:22.041" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231129 08:34:19.188" endtime="20231129 08:34:22.041"/>
</kw>
<msg timestamp="20231129 08:34:22.042" level="INFO">${output} = 5</msg>
<status status="PASS" starttime="20231129 08:34:19.188" endtime="20231129 08:34:22.042"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${count}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231129 08:34:22.042" endtime="20231129 08:34:22.042"/>
</kw>
<status status="PASS" starttime="20231129 08:34:19.187" endtime="20231129 08:34:22.042"/>
</kw>
<status status="PASS" starttime="20231129 08:33:44.756" endtime="20231129 08:34:22.042"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231129 08:33:44.755" endtime="20231129 08:34:22.042"/>
</test>
<doc>Wait for replication to succeed</doc>
<status status="PASS" starttime="20231129 08:33:44.686" endtime="20231129 08:34:22.043"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="508959"/>
</suite>
<statistics>
<total>
<stat pass="95" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="13" fail="0" skip="0">no-bucket-type</stat>
</tag>
<suite>
<stat pass="95" fail="0" skip="0" id="s1" name="ozone-ec">ozone-ec</stat>
<stat pass="72" fail="0" skip="0" id="s1-s1" name="S3">ozone-ec.S3</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1-s1" name="Awss3">ozone-ec.S3.Awss3</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s2" name="Boto3">ozone-ec.S3.Boto3</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s3" name="Bucketcreate">ozone-ec.S3.Bucketcreate</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s4" name="Bucketdelete">ozone-ec.S3.Bucketdelete</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1-s5" name="Buckethead">ozone-ec.S3.Buckethead</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s6" name="Bucketlist">ozone-ec.S3.Bucketlist</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s7" name="Freon">ozone-ec.S3.Freon</stat>
<stat pass="14" fail="0" skip="0" id="s1-s1-s8" name="MultipartUpload">ozone-ec.S3.MultipartUpload</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s9" name="Objectcopy">ozone-ec.S3.Objectcopy</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s10" name="Objectcopys3A">ozone-ec.S3.Objectcopys3A</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s11" name="Objectdelete">ozone-ec.S3.Objectdelete</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1-s12" name="Objecthead">ozone-ec.S3.Objecthead</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s13" name="Objectmultidelete">ozone-ec.S3.Objectmultidelete</stat>
<stat pass="19" fail="0" skip="0" id="s1-s1-s14" name="Objectputget">ozone-ec.S3.Objectputget</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1-s15" name="S3 Getsecret">ozone-ec.S3.S3 Getsecret</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1-s16" name="Secretgenerate">ozone-ec.S3.Secretgenerate</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1-s17" name="Secretrevoke">ozone-ec.S3.Secretrevoke</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s18" name="Webui">ozone-ec.S3.Webui</stat>
<stat pass="12" fail="0" skip="0" id="s1-s2" name="Basic">ozone-ec.Basic</stat>
<stat pass="5" fail="0" skip="0" id="s1-s3" name="read-4-datanodes">ozone-ec.read-4-datanodes</stat>
<stat pass="5" fail="0" skip="0" id="s1-s4" name="read-3-datanodes">ozone-ec.read-3-datanodes</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5" name="EC-recovery">ozone-ec.EC-recovery</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
