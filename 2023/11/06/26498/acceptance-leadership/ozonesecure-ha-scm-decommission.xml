<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20231106 23:38:34.231" rpa="false" schemaversion="4">
<suite id="s1" name="ozonesecure-ha-scm-decommission">
<suite id="s1-s1" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s1-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/' | sed 's/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231106 23:29:43.329" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' | sed 's/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231106 23:29:43.370" level="INFO">${rc} = 0</msg>
<msg timestamp="20231106 23:29:43.370" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231106 23:29:43.324" endtime="20231106 23:29:43.370"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231106 23:29:43.373" level="INFO">scm</msg>
<status status="PASS" starttime="20231106 23:29:43.371" endtime="20231106 23:29:43.373"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231106 23:29:43.375" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231106 23:29:43.374" endtime="20231106 23:29:43.375"/>
</kw>
<status status="PASS" starttime="20231106 23:29:43.323" endtime="20231106 23:29:43.376"/>
</kw>
<msg timestamp="20231106 23:29:43.376" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231106 23:29:43.322" endtime="20231106 23:29:43.376"/>
</kw>
<msg timestamp="20231106 23:29:43.376" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231106 23:29:43.321" endtime="20231106 23:29:43.377"/>
</kw>
<msg timestamp="20231106 23:29:43.377" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231106 23:29:43.320" endtime="20231106 23:29:43.377"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231106 23:29:43.387" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231106 23:29:43.378" endtime="20231106 23:29:43.387"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231106 23:29:43.427" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231106 23:29:43.673" level="INFO">${rc} = 0</msg>
<msg timestamp="20231106 23:29:43.673" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231106 23:29:43.408" endtime="20231106 23:29:43.673"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231106 23:29:43.676" level="INFO"/>
<status status="PASS" starttime="20231106 23:29:43.674" endtime="20231106 23:29:43.676"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231106 23:29:43.684" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231106 23:29:43.679" endtime="20231106 23:29:43.684"/>
</kw>
<status status="PASS" starttime="20231106 23:29:43.400" endtime="20231106 23:29:43.690"/>
</kw>
<msg timestamp="20231106 23:29:43.693" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231106 23:29:43.397" endtime="20231106 23:29:43.693"/>
</kw>
<status status="PASS" starttime="20231106 23:29:43.394" endtime="20231106 23:29:43.702"/>
</kw>
<status status="PASS" starttime="20231106 23:29:43.389" endtime="20231106 23:29:43.702"/>
</kw>
<status status="PASS" starttime="20231106 23:29:43.318" endtime="20231106 23:29:43.702"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20231106 23:29:43.317" endtime="20231106 23:29:43.717"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20231106 23:29:43.116" endtime="20231106 23:29:43.729"/>
</suite>
<suite id="s1-s2" name="Primordial-Scm" source="/opt/hadoop/smoketest/scmha/primordial-scm.robot">
<test id="s1-s2-t1" name="Verify SCM Count" line="33">
<kw name="Get SCM Node Count">
<var>${scm_count}</var>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm roles --service-id=scmservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231106 23:30:02.288" level="INFO">Running command 'ozone admin scm roles --service-id=scmservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231106 23:30:12.074" level="INFO">${rc} = 0</msg>
<msg timestamp="20231106 23:30:12.075" level="INFO">${output} = scm3.org:9894:FOLLOWER:06b07224-3166-4961-ae74-6b03fdaa51d3:172.25.0.118
scm1.org:9894:LEADER:331a0938-d6f1-42a9-a4ae-109f456b4b33:172.25.0.116
scm2.org:9894:FOLLOWER:1be38a04-9c47-40de-8329-a7f0281e7...</msg>
<status status="PASS" starttime="20231106 23:30:02.284" endtime="20231106 23:30:12.075"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231106 23:30:12.076" level="INFO">scm3.org:9894:FOLLOWER:06b07224-3166-4961-ae74-6b03fdaa51d3:172.25.0.118
scm1.org:9894:LEADER:331a0938-d6f1-42a9-a4ae-109f456b4b33:172.25.0.116
scm2.org:9894:FOLLOWER:1be38a04-9c47-40de-8329-a7f0281e7ddf:172.25.0.117
scm4.org:9894:FOLLOWER:1a30b843-dd19-4ea2-bff2-e54853fb8bbd:172.25.0.120</msg>
<status status="PASS" starttime="20231106 23:30:12.075" endtime="20231106 23:30:12.076"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231106 23:30:12.079" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231106 23:30:12.077" endtime="20231106 23:30:12.079"/>
</kw>
<status status="PASS" starttime="20231106 23:30:02.282" endtime="20231106 23:30:12.080"/>
</kw>
<msg timestamp="20231106 23:30:12.080" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231106 23:30:02.281" endtime="20231106 23:30:12.080"/>
</kw>
<msg timestamp="20231106 23:30:12.080" level="INFO">${result} = scm3.org:9894:FOLLOWER:06b07224-3166-4961-ae74-6b03fdaa51d3:172.25.0.118
scm1.org:9894:LEADER:331a0938-d6f1-42a9-a4ae-109f456b4b33:172.25.0.116
scm2.org:9894:FOLLOWER:1be38a04-9c47-40de-8329-a7f0281e7...</msg>
<status status="PASS" starttime="20231106 23:30:02.280" endtime="20231106 23:30:12.080"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231106 23:30:12.081" level="INFO">scm3.org:9894:FOLLOWER:06b07224-3166-4961-ae74-6b03fdaa51d3:172.25.0.118
scm1.org:9894:LEADER:331a0938-d6f1-42a9-a4ae-109f456b4b33:172.25.0.116
scm2.org:9894:FOLLOWER:1be38a04-9c47-40de-8329-a7f0281e7ddf:172.25.0.117
scm4.org:9894:FOLLOWER:1a30b843-dd19-4ea2-bff2-e54853fb8bbd:172.25.0.120</msg>
<status status="PASS" starttime="20231106 23:30:12.081" endtime="20231106 23:30:12.081"/>
</kw>
<kw name="Get Line Count" library="String">
<var>${scm_count}</var>
<arg>${result}</arg>
<doc>Returns and logs the number of lines in the given string.</doc>
<msg timestamp="20231106 23:30:12.082" level="INFO">4 lines</msg>
<msg timestamp="20231106 23:30:12.082" level="INFO">${scm_count} = 4</msg>
<status status="PASS" starttime="20231106 23:30:12.081" endtime="20231106 23:30:12.082"/>
</kw>
<msg timestamp="20231106 23:30:12.082" level="INFO">${scm_count} = 4</msg>
<status status="PASS" starttime="20231106 23:30:02.280" endtime="20231106 23:30:12.082"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>SCM Instance Count: ${scm_count}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231106 23:30:12.083" level="INFO">SCM Instance Count: 4</msg>
<status status="PASS" starttime="20231106 23:30:12.083" endtime="20231106 23:30:12.083"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${scm_count}</var>
<arg>${scm_count}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20231106 23:30:12.084" level="INFO">${scm_count} = 4</msg>
<status status="PASS" starttime="20231106 23:30:12.083" endtime="20231106 23:30:12.084"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>4</arg>
<arg>${scm_count}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231106 23:30:12.084" endtime="20231106 23:30:12.085"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231106 23:30:02.276" endtime="20231106 23:30:12.085"/>
</test>
<test id="s1-s2-t2" name="Transfer Leader to SCM4" line="39">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm roles --service-id=scmservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231106 23:30:12.093" level="INFO">Running command 'ozone admin scm roles --service-id=scmservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231106 23:30:21.144" level="INFO">${rc} = 0</msg>
<msg timestamp="20231106 23:30:21.144" level="INFO">${output} = scm3.org:9894:FOLLOWER:06b07224-3166-4961-ae74-6b03fdaa51d3:172.25.0.118
scm1.org:9894:LEADER:331a0938-d6f1-42a9-a4ae-109f456b4b33:172.25.0.116
scm2.org:9894:FOLLOWER:1be38a04-9c47-40de-8329-a7f0281e7...</msg>
<status status="PASS" starttime="20231106 23:30:12.090" endtime="20231106 23:30:21.144"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231106 23:30:21.146" level="INFO">scm3.org:9894:FOLLOWER:06b07224-3166-4961-ae74-6b03fdaa51d3:172.25.0.118
scm1.org:9894:LEADER:331a0938-d6f1-42a9-a4ae-109f456b4b33:172.25.0.116
scm2.org:9894:FOLLOWER:1be38a04-9c47-40de-8329-a7f0281e7ddf:172.25.0.117
scm4.org:9894:FOLLOWER:1a30b843-dd19-4ea2-bff2-e54853fb8bbd:172.25.0.120</msg>
<status status="PASS" starttime="20231106 23:30:21.145" endtime="20231106 23:30:21.146"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231106 23:30:21.147" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231106 23:30:21.147" endtime="20231106 23:30:21.148"/>
</kw>
<status status="PASS" starttime="20231106 23:30:12.089" endtime="20231106 23:30:21.148"/>
</kw>
<msg timestamp="20231106 23:30:21.148" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231106 23:30:12.089" endtime="20231106 23:30:21.148"/>
</kw>
<msg timestamp="20231106 23:30:21.148" level="INFO">${result} = scm3.org:9894:FOLLOWER:06b07224-3166-4961-ae74-6b03fdaa51d3:172.25.0.118
scm1.org:9894:LEADER:331a0938-d6f1-42a9-a4ae-109f456b4b33:172.25.0.116
scm2.org:9894:FOLLOWER:1be38a04-9c47-40de-8329-a7f0281e7...</msg>
<status status="PASS" starttime="20231106 23:30:12.088" endtime="20231106 23:30:21.148"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231106 23:30:21.149" level="INFO">scm3.org:9894:FOLLOWER:06b07224-3166-4961-ae74-6b03fdaa51d3:172.25.0.118
scm1.org:9894:LEADER:331a0938-d6f1-42a9-a4ae-109f456b4b33:172.25.0.116
scm2.org:9894:FOLLOWER:1be38a04-9c47-40de-8329-a7f0281e7ddf:172.25.0.117
scm4.org:9894:FOLLOWER:1a30b843-dd19-4ea2-bff2-e54853fb8bbd:172.25.0.120</msg>
<status status="PASS" starttime="20231106 23:30:21.149" endtime="20231106 23:30:21.149"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${scm4_line}</var>
<arg>${result}</arg>
<arg>scm4.org</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20231106 23:30:21.150" level="INFO">1 out of 4 lines matched</msg>
<msg timestamp="20231106 23:30:21.150" level="INFO">${scm4_line} = scm4.org:9894:FOLLOWER:1a30b843-dd19-4ea2-bff2-e54853fb8bbd:172.25.0.120</msg>
<status status="PASS" starttime="20231106 23:30:21.150" endtime="20231106 23:30:21.150"/>
</kw>
<kw name="Split String" library="String">
<var>${scm4_split}</var>
<arg>${scm4_line}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231106 23:30:21.151" level="INFO">${scm4_split} = ['scm4.org', '9894', 'FOLLOWER', '1a30b843-dd19-4ea2-bff2-e54853fb8bbd', '172.25.0.120']</msg>
<status status="PASS" starttime="20231106 23:30:21.151" endtime="20231106 23:30:21.151"/>
</kw>
<kw name="Strip String" library="String">
<var>${scm4_uuid}</var>
<arg>${scm4_split[3]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20231106 23:30:21.155" level="INFO">${scm4_uuid} = 1a30b843-dd19-4ea2-bff2-e54853fb8bbd</msg>
<status status="PASS" starttime="20231106 23:30:21.152" endtime="20231106 23:30:21.155"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm transfer --service-id=scmservice -n ${scm4_uuid}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231106 23:30:21.160" level="INFO">Running command 'ozone admin scm transfer --service-id=scmservice -n 1a30b843-dd19-4ea2-bff2-e54853fb8bbd 2&gt;&amp;1'.</msg>
<msg timestamp="20231106 23:30:37.078" level="INFO">${rc} = 0</msg>
<msg timestamp="20231106 23:30:37.078" level="INFO">${output} = Transfer leadership successfully to 1a30b843-dd19-4ea2-bff2-e54853fb8bbd.</msg>
<status status="PASS" starttime="20231106 23:30:21.157" endtime="20231106 23:30:37.079"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231106 23:30:37.082" level="INFO">Transfer leadership successfully to 1a30b843-dd19-4ea2-bff2-e54853fb8bbd.</msg>
<status status="PASS" starttime="20231106 23:30:37.080" endtime="20231106 23:30:37.082"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231106 23:30:37.082" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231106 23:30:37.082" endtime="20231106 23:30:37.083"/>
</kw>
<status status="PASS" starttime="20231106 23:30:21.156" endtime="20231106 23:30:37.083"/>
</kw>
<msg timestamp="20231106 23:30:37.083" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231106 23:30:21.156" endtime="20231106 23:30:37.083"/>
</kw>
<msg timestamp="20231106 23:30:37.083" level="INFO">${result} = Transfer leadership successfully to 1a30b843-dd19-4ea2-bff2-e54853fb8bbd.</msg>
<status status="PASS" starttime="20231106 23:30:21.155" endtime="20231106 23:30:37.083"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231106 23:30:37.084" level="INFO">Transfer leadership successfully to 1a30b843-dd19-4ea2-bff2-e54853fb8bbd.</msg>
<status status="PASS" starttime="20231106 23:30:37.084" endtime="20231106 23:30:37.084"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Transfer leadership successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231106 23:30:37.085" endtime="20231106 23:30:37.085"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231106 23:30:12.087" endtime="20231106 23:30:37.086"/>
</test>
<test id="s1-s2-t3" name="Verify SCM4 Certificate" line="50">
<kw name="Execute" library="os">
<var>${root_ca_output}</var>
<arg>ozone admin cert list -c 1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231106 23:30:37.093" level="INFO">Running command 'ozone admin cert list -c 1 2&gt;&amp;1'.</msg>
<msg timestamp="20231106 23:30:49.516" level="INFO">${rc} = 0</msg>
<msg timestamp="20231106 23:30:49.517" level="INFO">${output} = The certificate list could be longer than the batch size: 1. Please use the "-c" option to see more certificates.
Certificate list:(Type=VALID, BatchSize=1, CertCount=1)
SerialNumber      Valid From  ...</msg>
<status status="PASS" starttime="20231106 23:30:37.090" endtime="20231106 23:30:49.517"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231106 23:30:49.519" level="INFO">The certificate list could be longer than the batch size: 1. Please use the "-c" option to see more certificates.
Certificate list:(Type=VALID, BatchSize=1, CertCount=1)
SerialNumber      Valid From                     Expiry                         Subject                                                                                                        Issuer                                                                                                        
1                 Mon Nov 06 23:24:45 UTC 2023   Thu Dec 14 23:24:45 UTC 2028   CN=scm@scm1.org,OU=331a0938-d6f1-42a9-a4ae-109f456b4b33,O=CID-9874be73-7265-41b3-ade4-9de0136887b0,SERIALNUMBER=1 CN=scm@scm1.org,OU=331a0938-d6f1-42a9-a4ae-109f456b4b33,O=CID-9874be73-7265-41b3-ade4-9de0136887b0,SERIALNUMBER=1</msg>
<status status="PASS" starttime="20231106 23:30:49.518" endtime="20231106 23:30:49.520"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231106 23:30:49.526" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231106 23:30:49.524" endtime="20231106 23:30:49.526"/>
</kw>
<status status="PASS" starttime="20231106 23:30:37.090" endtime="20231106 23:30:49.529"/>
</kw>
<msg timestamp="20231106 23:30:49.529" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231106 23:30:37.089" endtime="20231106 23:30:49.530"/>
</kw>
<msg timestamp="20231106 23:30:49.530" level="INFO">${root_ca_output} = The certificate list could be longer than the batch size: 1. Please use the "-c" option to see more certificates.
Certificate list:(Type=VALID, BatchSize=1, CertCount=1)
SerialNumber      Valid From  ...</msg>
<status status="PASS" starttime="20231106 23:30:37.088" endtime="20231106 23:30:49.530"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${root_ca_cert}</var>
<arg>${root_ca_output}</arg>
<arg>scm1.org</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20231106 23:30:49.533" level="INFO">1 out of 4 lines matched</msg>
<msg timestamp="20231106 23:30:49.533" level="INFO">${root_ca_cert} = 1                 Mon Nov 06 23:24:45 UTC 2023   Thu Dec 14 23:24:45 UTC 2028   CN=scm@scm1.org,OU=331a0938-d6f1-42a9-a4ae-109f456b4b33,O=CID-9874be73-7265-41b3-ade4-9de0136887b0,SERIALNUMBER=1 CN=scm...</msg>
<status status="PASS" starttime="20231106 23:30:49.533" endtime="20231106 23:30:49.535"/>
</kw>
<kw name="Split String" library="String">
<var>${root_ca_cert_split}</var>
<arg>${root_ca_cert}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231106 23:30:49.536" level="INFO">${root_ca_cert_split} = ['1', 'Mon', 'Nov', '06', '23:24:45', 'UTC', '2023', 'Thu', 'Dec', '14', '23:24:45', 'UTC', '2028', 'CN=scm@scm1.org,OU=331a0938-d6f1-42a9-a4ae-109f456b4b33,O=CID-9874be73-7265-41b3-ade4-9de0136887b0,...</msg>
<status status="PASS" starttime="20231106 23:30:49.535" endtime="20231106 23:30:49.536"/>
</kw>
<kw name="Strip String" library="String">
<var>${root_ca_cert_subject}</var>
<arg>${root_ca_cert_split[3]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20231106 23:30:49.541" level="INFO">${root_ca_cert_subject} = 06</msg>
<status status="PASS" starttime="20231106 23:30:49.536" endtime="20231106 23:30:49.541"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone admin cert list -c 1000000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231106 23:30:49.553" level="INFO">Running command 'ozone admin cert list -c 1000000 2&gt;&amp;1'.</msg>
<msg timestamp="20231106 23:31:00.851" level="INFO">${rc} = 0</msg>
<msg timestamp="20231106 23:31:00.852" level="INFO">${output} = Certificate list:(Type=VALID, BatchSize=1000000, CertCount=12)
SerialNumber      Valid From                     Expiry                         Subject                                                  ...</msg>
<status status="PASS" starttime="20231106 23:30:49.546" endtime="20231106 23:31:00.852"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231106 23:31:00.856" level="INFO">Certificate list:(Type=VALID, BatchSize=1000000, CertCount=12)
SerialNumber      Valid From                     Expiry                         Subject                                                                                                        Issuer                                                                                                        
1                 Mon Nov 06 23:24:45 UTC 2023   Thu Dec 14 23:24:45 UTC 2028   CN=scm@scm1.org,OU=331a0938-d6f1-42a9-a4ae-109f456b4b33,O=CID-9874be73-7265-41b3-ade4-9de0136887b0,SERIALNUMBER=1 CN=scm@scm1.org,OU=331a0938-d6f1-42a9-a4ae-109f456b4b33,O=CID-9874be73-7265-41b3-ade4-9de0136887b0,SERIALNUMBER=1
2                 Mon Nov 06 23:24:46 UTC 2023   Thu Dec 14 23:24:46 UTC 2028   CN=scm-sub@scm1.org,OU=331a0938-d6f1-42a9-a4ae-109f456b4b33,O=CID-9874be73-7265-41b3-ade4-9de0136887b0,SERIALNUMBER=2 CN=scm@scm1.org,OU=331a0938-d6f1-42a9-a4ae-109f456b4b33,O=CID-9874be73-7265-41b3-ade4-9de0136887b0,SERIALNUMBER=1
3                 Mon Nov 06 23:25:18 UTC 2023   Tue Nov 05 23:25:18 UTC 2024   CN=recon@recon,OU=331a0938-d6f1-42a9-a4ae-109f456b4b33,O=CID-9874be73-7265-41b3-ade4-9de0136887b0,SERIALNUMBER=3 CN=scm-sub@scm1.org,OU=331a0938-d6f1-42a9-a4ae-109f456b4b33,O=CID-9874be73-7265-41b3-ade4-9de0136887b0,SERIALNUMBER=2
4                 Mon Nov 06 23:25:22 UTC 2023   Thu Dec 14 23:25:22 UTC 2028   CN=scm-sub@scm2.org,OU=1be38a04-9c47-40de-8329-a7f0281e7ddf,O=CID-9874be73-7265-41b3-ade4-9de0136887b0,SERIALNUMBER=4 CN=scm@scm1.org,OU=331a0938-d6f1-42a9-a4ae-109f456b4b33,O=CID-9874be73-7265-41b3-ade4-9de0136887b0,SERIALNUMBER=1
5                 Mon Nov 06 23:25:51 UTC 2023   Thu Dec 14 23:25:51 UTC 2028   CN=scm-sub@scm3.org,OU=06b07224-3166-4961-ae74-6b03fdaa51d3,O=CID-9874be73-7265-41b3-ade4-9de0136887b0,SERIALNUMBER=5 CN=scm@scm1.org,OU=331a0938-d6f1-42a9-a4ae-109f456b4b33,O=CID-9874be73-7265-41b3-ade4-9de0136887b0,SERIALNUMBER=1
6                 Mon Nov 06 23:26:48 UTC 2023   Tue Nov 05 23:26:48 UTC 2024   CN=dn@8b13f68a7f10,OU=331a0938-d6f1-42a9-a4ae-109f456b4b33,O=CID-9874be73-7265-41b3-ade4-9de0136887b0,SERIALNUMBER=6 CN=scm-sub@scm1.org,OU=331a0938-d6f1-42a9-a4ae-109f456b4b33,O=CID-9874be73-7265-41b3-ade4-9de0136887b0,SERIALNUMBER=2
7                 Mon Nov 06 23:26:51 UTC 2023   Tue Nov 05 23:26:51 UTC 2024   CN=dn@2511d202b51b,OU=331a0938-d6f1-42a9-a4ae-109f456b4b33,O=CID-9874be73-7265-41b3-ade4-9de0136887b0,SERIALNUMBER=7 CN=scm-sub@scm1.org,OU=331a0938-d6f1-42a9-a4ae-109f456b4b33,O=CID-9874be73-7265-41b3-ade4-9de0136887b0,SERIALNUMBER=2
8                 Mon Nov 06 23:26:53 UTC 2023   Tue Nov 05 23:26:53 UTC 2024   CN=dn@f4009ab8b3e1,OU=331a0938-d6f1-42a9-a4ae-109f456b4b33,O=CID-9874be73-7265-41b3-ade4-9de0136887b0,SERIALNUMBER=8 CN=scm-sub@scm1.org,OU=331a0938-d6f1-42a9-a4ae-109f456b4b33,O=CID-9874be73-7265-41b3-ade4-9de0136887b0,SERIALNUMBER=2
9                 Mon Nov 06 23:26:54 UTC 2023   Tue Nov 05 23:26:54 UTC 2024   CN=om1,OU=331a0938-d6f1-42a9-a4ae-109f456b4b33,O=CID-9874be73-7265-41b3-ade4-9de0136887b0,SERIALNUMBER=9       CN=scm-sub@scm1.org,OU=331a0938-d6f1-42a9-a4ae-109f456b4b33,O=CID-9874be73-7265-41b3-ade4-9de0136887b0,SERIALNUMBER=2
10                Mon Nov 06 23:26:57 UTC 2023   Tue Nov 05 23:26:57 UTC 2024   CN=om2,OU=331a0938-d6f1-42a9-a4ae-109f456b4b33,O=CID-9874be73-7265-41b3-ade4-9de0136887b0,SERIALNUMBER=10      CN=scm-sub@scm1.org,OU=331a0938-d6f1-42a9-a4ae-109f456b4b33,O=CID-9874be73-7265-41b3-ade4-9de0136887b0,SERIALNUMBER=2
11                Mon Nov 06 23:26:59 UTC 2023   Tue Nov 05 23:26:59 UTC 2024   CN=om3,OU=331a0938-d6f1-42a9-a4ae-109f456b4b33,O=CID-9874be73-7265-41b3-ade4-9de0136887b0,SERIALNUMBER=11      CN=scm-sub@scm1.org,OU=331a0938-d6f1-42a9-a4ae-109f456b4b33,O=CID-9874be73-7265-41b3-ade4-9de0136887b0,SERIALNUMBER=2
12                Mon Nov 06 23:29:15 UTC 2023   Thu Dec 14 23:29:15 UTC 2028   CN=scm-sub@scm4.org,OU=1a30b843-dd19-4ea2-bff2-e54853fb8bbd,O=CID-9874be73-7265-41b3-ade4-9de0136887b0,SERIALNUMBER=12 CN=scm@scm1.org,OU=331a0938-d6f1-42a9-a4ae-109f456b4b33,O=CID-9874be73-7265-41b3-ade4-9de0136887b0,SERIALNUMBER=1</msg>
<status status="PASS" starttime="20231106 23:31:00.854" endtime="20231106 23:31:00.856"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231106 23:31:00.857" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231106 23:31:00.856" endtime="20231106 23:31:00.857"/>
</kw>
<status status="PASS" starttime="20231106 23:30:49.543" endtime="20231106 23:31:00.858"/>
</kw>
<msg timestamp="20231106 23:31:00.858" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231106 23:30:49.542" endtime="20231106 23:31:00.859"/>
</kw>
<msg timestamp="20231106 23:31:00.859" level="INFO">${output} = Certificate list:(Type=VALID, BatchSize=1000000, CertCount=12)
SerialNumber      Valid From                     Expiry                         Subject                                                  ...</msg>
<status status="PASS" starttime="20231106 23:30:49.541" endtime="20231106 23:31:00.859"/>
</kw>
<kw name="Get Lines Containing String" library="String">
<var>${scm4_cert}</var>
<arg>${output}</arg>
<arg>scm4.org</arg>
<doc>Returns lines of the given ``string`` that contain the ``pattern``.</doc>
<msg timestamp="20231106 23:31:00.862" level="INFO">1 out of 14 lines matched</msg>
<msg timestamp="20231106 23:31:00.862" level="INFO">${scm4_cert} = 12                Mon Nov 06 23:29:15 UTC 2023   Thu Dec 14 23:29:15 UTC 2028   CN=scm-sub@scm4.org,OU=1a30b843-dd19-4ea2-bff2-e54853fb8bbd,O=CID-9874be73-7265-41b3-ade4-9de0136887b0,SERIALNUMBER=12 C...</msg>
<status status="PASS" starttime="20231106 23:31:00.860" endtime="20231106 23:31:00.862"/>
</kw>
<kw name="Split String" library="String">
<var>${scm4_cert_split}</var>
<arg>${scm4_cert}</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231106 23:31:00.863" level="INFO">${scm4_cert_split} = ['12', 'Mon', 'Nov', '06', '23:29:15', 'UTC', '2023', 'Thu', 'Dec', '14', '23:29:15', 'UTC', '2028', 'CN=scm-sub@scm4.org,OU=1a30b843-dd19-4ea2-bff2-e54853fb8bbd,O=CID-9874be73-7265-41b3-ade4-9de01368...</msg>
<status status="PASS" starttime="20231106 23:31:00.862" endtime="20231106 23:31:00.863"/>
</kw>
<kw name="Strip String" library="String">
<var>${scm4_cert_issuer}</var>
<arg>${scm4_cert_split[4]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20231106 23:31:00.865" level="INFO">${scm4_cert_issuer} = 23:29:15</msg>
<status status="PASS" starttime="20231106 23:31:00.863" endtime="20231106 23:31:00.866"/>
</kw>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<arg>${scm4_cert_issuer}</arg>
<arg>${root_ca_cert_subject}</arg>
<doc>Fails if objects are equal after converting them to strings.</doc>
<status status="PASS" starttime="20231106 23:31:00.866" endtime="20231106 23:31:00.867"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231106 23:30:37.087" endtime="20231106 23:31:00.867"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20231106 23:30:02.158" endtime="20231106 23:31:00.870"/>
</suite>
<suite id="s1-s3" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s3-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/' | sed 's/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231106 23:32:38.130" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' | sed 's/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231106 23:32:38.139" level="INFO">${rc} = 0</msg>
<msg timestamp="20231106 23:32:38.139" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231106 23:32:38.127" endtime="20231106 23:32:38.139"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231106 23:32:38.140" level="INFO">scm</msg>
<status status="PASS" starttime="20231106 23:32:38.139" endtime="20231106 23:32:38.140"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231106 23:32:38.141" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231106 23:32:38.141" endtime="20231106 23:32:38.142"/>
</kw>
<status status="PASS" starttime="20231106 23:32:38.126" endtime="20231106 23:32:38.142"/>
</kw>
<msg timestamp="20231106 23:32:38.142" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231106 23:32:38.126" endtime="20231106 23:32:38.142"/>
</kw>
<msg timestamp="20231106 23:32:38.143" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231106 23:32:38.125" endtime="20231106 23:32:38.143"/>
</kw>
<msg timestamp="20231106 23:32:38.143" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231106 23:32:38.124" endtime="20231106 23:32:38.143"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231106 23:32:38.144" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231106 23:32:38.143" endtime="20231106 23:32:38.144"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231106 23:32:38.151" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231106 23:32:38.337" level="INFO">${rc} = 0</msg>
<msg timestamp="20231106 23:32:38.337" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231106 23:32:38.147" endtime="20231106 23:32:38.337"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231106 23:32:38.340" level="INFO"/>
<status status="PASS" starttime="20231106 23:32:38.339" endtime="20231106 23:32:38.340"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231106 23:32:38.341" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231106 23:32:38.340" endtime="20231106 23:32:38.341"/>
</kw>
<status status="PASS" starttime="20231106 23:32:38.146" endtime="20231106 23:32:38.342"/>
</kw>
<msg timestamp="20231106 23:32:38.342" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231106 23:32:38.146" endtime="20231106 23:32:38.342"/>
</kw>
<status status="PASS" starttime="20231106 23:32:38.145" endtime="20231106 23:32:38.342"/>
</kw>
<status status="PASS" starttime="20231106 23:32:38.144" endtime="20231106 23:32:38.342"/>
</kw>
<status status="PASS" starttime="20231106 23:32:38.122" endtime="20231106 23:32:38.343"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20231106 23:32:38.121" endtime="20231106 23:32:38.343"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20231106 23:32:38.018" endtime="20231106 23:32:38.345"/>
</suite>
<suite id="s1-s4" name="Scm-Decommission" source="/opt/hadoop/smoketest/scmha/scm-decommission.robot">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/' | sed 's/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231106 23:32:53.332" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' | sed 's/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231106 23:32:53.339" level="INFO">${rc} = 0</msg>
<msg timestamp="20231106 23:32:53.339" level="INFO">${output} = s3g</msg>
<status status="PASS" starttime="20231106 23:32:53.328" endtime="20231106 23:32:53.339"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231106 23:32:53.340" level="INFO">s3g</msg>
<status status="PASS" starttime="20231106 23:32:53.339" endtime="20231106 23:32:53.340"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231106 23:32:53.341" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231106 23:32:53.340" endtime="20231106 23:32:53.341"/>
</kw>
<status status="PASS" starttime="20231106 23:32:53.327" endtime="20231106 23:32:53.341"/>
</kw>
<msg timestamp="20231106 23:32:53.341" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231106 23:32:53.327" endtime="20231106 23:32:53.342"/>
</kw>
<msg timestamp="20231106 23:32:53.342" level="INFO">${instance} = s3g</msg>
<status status="PASS" starttime="20231106 23:32:53.326" endtime="20231106 23:32:53.342"/>
</kw>
<msg timestamp="20231106 23:32:53.342" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231106 23:32:53.326" endtime="20231106 23:32:53.342"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231106 23:32:53.343" level="INFO">${TEST_USER} = testuser/s3g@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231106 23:32:53.343" endtime="20231106 23:32:53.343"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231106 23:32:53.348" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/s3g@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231106 23:32:53.433" level="INFO">${rc} = 0</msg>
<msg timestamp="20231106 23:32:53.434" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231106 23:32:53.346" endtime="20231106 23:32:53.434"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231106 23:32:53.436" level="INFO"/>
<status status="PASS" starttime="20231106 23:32:53.435" endtime="20231106 23:32:53.436"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231106 23:32:53.437" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231106 23:32:53.436" endtime="20231106 23:32:53.437"/>
</kw>
<status status="PASS" starttime="20231106 23:32:53.345" endtime="20231106 23:32:53.438"/>
</kw>
<msg timestamp="20231106 23:32:53.438" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231106 23:32:53.345" endtime="20231106 23:32:53.438"/>
</kw>
<status status="PASS" starttime="20231106 23:32:53.344" endtime="20231106 23:32:53.438"/>
</kw>
<status status="PASS" starttime="20231106 23:32:53.343" endtime="20231106 23:32:53.438"/>
</kw>
<status status="PASS" starttime="20231106 23:32:53.325" endtime="20231106 23:32:53.438"/>
</kw>
<status status="PASS" starttime="20231106 23:32:53.324" endtime="20231106 23:32:53.439"/>
</kw>
<test id="s1-s4-t1" name="Decommission SCM Primordial Node" line="66">
<kw name="Get Primordial SCM ID">
<var>${primordial_scm_id}</var>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm roles --service-id=scmservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231106 23:32:53.448" level="INFO">Running command 'ozone admin scm roles --service-id=scmservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231106 23:33:00.659" level="INFO">${rc} = 0</msg>
<msg timestamp="20231106 23:33:00.659" level="INFO">${output} = scm3.org:9894:FOLLOWER:06b07224-3166-4961-ae74-6b03fdaa51d3:172.25.0.118
scm1.org:9894:LEADER:331a0938-d6f1-42a9-a4ae-109f456b4b33:172.25.0.116
scm2.org:9894:FOLLOWER:1be38a04-9c47-40de-8329-a7f0281e7...</msg>
<status status="PASS" starttime="20231106 23:32:53.444" endtime="20231106 23:33:00.659"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231106 23:33:00.661" level="INFO">scm3.org:9894:FOLLOWER:06b07224-3166-4961-ae74-6b03fdaa51d3:172.25.0.118
scm1.org:9894:LEADER:331a0938-d6f1-42a9-a4ae-109f456b4b33:172.25.0.116
scm2.org:9894:FOLLOWER:1be38a04-9c47-40de-8329-a7f0281e7ddf:172.25.0.117</msg>
<status status="PASS" starttime="20231106 23:33:00.660" endtime="20231106 23:33:00.661"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231106 23:33:00.662" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231106 23:33:00.661" endtime="20231106 23:33:00.662"/>
</kw>
<status status="PASS" starttime="20231106 23:32:53.444" endtime="20231106 23:33:00.662"/>
</kw>
<msg timestamp="20231106 23:33:00.663" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231106 23:32:53.443" endtime="20231106 23:33:00.663"/>
</kw>
<msg timestamp="20231106 23:33:00.663" level="INFO">${result} = scm3.org:9894:FOLLOWER:06b07224-3166-4961-ae74-6b03fdaa51d3:172.25.0.118
scm1.org:9894:LEADER:331a0938-d6f1-42a9-a4ae-109f456b4b33:172.25.0.116
scm2.org:9894:FOLLOWER:1be38a04-9c47-40de-8329-a7f0281e7...</msg>
<status status="PASS" starttime="20231106 23:32:53.442" endtime="20231106 23:33:00.663"/>
</kw>
<kw name="Get Lines Matching Pattern" library="String">
<var>${primordial_node}</var>
<arg>${result}</arg>
<arg>scm[1234].org:9894:LEADER*</arg>
<doc>Returns lines of the given ``string`` that match the ``pattern``.</doc>
<msg timestamp="20231106 23:33:00.664" level="INFO">1 out of 3 lines matched</msg>
<msg timestamp="20231106 23:33:00.664" level="INFO">${primordial_node} = scm1.org:9894:LEADER:331a0938-d6f1-42a9-a4ae-109f456b4b33:172.25.0.116</msg>
<status status="PASS" starttime="20231106 23:33:00.663" endtime="20231106 23:33:00.664"/>
</kw>
<kw name="Split String" library="String">
<var>${primordial_split}</var>
<arg>${primordial_node}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231106 23:33:00.665" level="INFO">${primordial_split} = ['scm1.org', '9894', 'LEADER', '331a0938-d6f1-42a9-a4ae-109f456b4b33', '172.25.0.116']</msg>
<status status="PASS" starttime="20231106 23:33:00.665" endtime="20231106 23:33:00.665"/>
</kw>
<kw name="Strip String" library="String">
<var>${primordial_scmId}</var>
<arg>${primordial_split[3]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20231106 23:33:00.667" level="INFO">${primordial_scmId} = 331a0938-d6f1-42a9-a4ae-109f456b4b33</msg>
<status status="PASS" starttime="20231106 23:33:00.666" endtime="20231106 23:33:00.667"/>
</kw>
<msg timestamp="20231106 23:33:00.668" level="INFO">${primordial_scm_id} = 331a0938-d6f1-42a9-a4ae-109f456b4b33</msg>
<status status="PASS" starttime="20231106 23:32:53.441" endtime="20231106 23:33:00.668"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Primordial scm id : ${primordial_scm_id}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231106 23:33:00.668" level="INFO">Primordial scm id : 331a0938-d6f1-42a9-a4ae-109f456b4b33</msg>
<status status="PASS" starttime="20231106 23:33:00.668" endtime="20231106 23:33:00.669"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${decomm_output}</var>
<arg>ozone admin scm decommission --nodeid=${primordial_scm_id}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231106 23:33:00.674" level="INFO">Running command 'ozone admin scm decommission --nodeid=331a0938-d6f1-42a9-a4ae-109f456b4b33 2&gt;&amp;1'.</msg>
<msg timestamp="20231106 23:33:08.245" level="INFO">${rc} = 255</msg>
<msg timestamp="20231106 23:33:08.246" level="INFO">${output} = Error decommissioning Scm 331a0938-d6f1-42a9-a4ae-109f456b4b33, Cannot remove current leader.</msg>
<status status="PASS" starttime="20231106 23:33:00.670" endtime="20231106 23:33:08.246"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231106 23:33:08.247" level="INFO">Error decommissioning Scm 331a0938-d6f1-42a9-a4ae-109f456b4b33, Cannot remove current leader.</msg>
<status status="PASS" starttime="20231106 23:33:08.246" endtime="20231106 23:33:08.247"/>
</kw>
<msg timestamp="20231106 23:33:08.247" level="INFO">${decomm_output} = Error decommissioning Scm 331a0938-d6f1-42a9-a4ae-109f456b4b33, Cannot remove current leader.</msg>
<status status="PASS" starttime="20231106 23:33:00.669" endtime="20231106 23:33:08.247"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${decomm_output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231106 23:33:08.248" level="INFO">Error decommissioning Scm 331a0938-d6f1-42a9-a4ae-109f456b4b33, Cannot remove current leader.</msg>
<status status="PASS" starttime="20231106 23:33:08.248" endtime="20231106 23:33:08.248"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${decomm_output}</arg>
<arg>Cannot remove current leader</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231106 23:33:08.248" endtime="20231106 23:33:08.249"/>
</kw>
<kw name="Create volume bucket and put key">
<var>${md5sum}</var>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${VOLUME}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231106 23:33:08.255" level="INFO">Running command 'ozone sh volume create /decom-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20231106 23:33:18.082" level="INFO">${rc} = 0</msg>
<msg timestamp="20231106 23:33:18.082" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231106 23:33:08.252" endtime="20231106 23:33:18.082"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231106 23:33:18.085" level="INFO"/>
<status status="PASS" starttime="20231106 23:33:18.084" endtime="20231106 23:33:18.085"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231106 23:33:18.088" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231106 23:33:18.085" endtime="20231106 23:33:18.088"/>
</kw>
<status status="PASS" starttime="20231106 23:33:08.251" endtime="20231106 23:33:18.088"/>
</kw>
<msg timestamp="20231106 23:33:18.088" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231106 23:33:08.251" endtime="20231106 23:33:18.089"/>
</kw>
<status status="PASS" starttime="20231106 23:33:08.250" endtime="20231106 23:33:18.089"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${VOLUME}/${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231106 23:33:18.103" level="INFO">Running command 'ozone sh bucket create /decom-volume/decom-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20231106 23:33:27.851" level="INFO">${rc} = 0</msg>
<msg timestamp="20231106 23:33:27.851" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231106 23:33:18.094" endtime="20231106 23:33:27.851"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231106 23:33:27.853" level="INFO"/>
<status status="PASS" starttime="20231106 23:33:27.852" endtime="20231106 23:33:27.853"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231106 23:33:27.854" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231106 23:33:27.853" endtime="20231106 23:33:27.854"/>
</kw>
<status status="PASS" starttime="20231106 23:33:18.093" endtime="20231106 23:33:27.855"/>
</kw>
<msg timestamp="20231106 23:33:27.855" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231106 23:33:18.092" endtime="20231106 23:33:27.855"/>
</kw>
<status status="PASS" starttime="20231106 23:33:18.090" endtime="20231106 23:33:27.855"/>
</kw>
<kw name="Create File" library="OperatingSystem">
<arg>/tmp/${TESTFILE}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<msg timestamp="20231106 23:33:27.856" level="INFO" html="true">Created file '&lt;a href="file:///tmp/testfiledecomm"&gt;/tmp/testfiledecomm&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20231106 23:33:27.855" endtime="20231106 23:33:27.856"/>
</kw>
<kw name="Execute" library="os">
<arg>echo "This is a decommissioning test" &gt; /tmp/${TESTFILE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231106 23:33:27.862" level="INFO">Running command 'echo "This is a decommissioning test" &gt; /tmp/testfiledecomm'.</msg>
<msg timestamp="20231106 23:33:27.865" level="INFO">${rc} = 0</msg>
<msg timestamp="20231106 23:33:27.865" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231106 23:33:27.859" endtime="20231106 23:33:27.865"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231106 23:33:27.866" level="INFO"/>
<status status="PASS" starttime="20231106 23:33:27.866" endtime="20231106 23:33:27.867"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231106 23:33:27.867" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231106 23:33:27.867" endtime="20231106 23:33:27.868"/>
</kw>
<status status="PASS" starttime="20231106 23:33:27.858" endtime="20231106 23:33:27.868"/>
</kw>
<msg timestamp="20231106 23:33:27.868" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231106 23:33:27.857" endtime="20231106 23:33:27.868"/>
</kw>
<status status="PASS" starttime="20231106 23:33:27.856" endtime="20231106 23:33:27.868"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum}</var>
<arg>md5sum /tmp/${TESTFILE} | awk '{print $1}'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231106 23:33:27.874" level="INFO">Running command 'md5sum /tmp/testfiledecomm | awk '{print $1}' 2&gt;&amp;1'.</msg>
<msg timestamp="20231106 23:33:27.885" level="INFO">${rc} = 0</msg>
<msg timestamp="20231106 23:33:27.885" level="INFO">${output} = ce98d686e952355ef42e64f4b0dcf65f</msg>
<status status="PASS" starttime="20231106 23:33:27.871" endtime="20231106 23:33:27.885"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231106 23:33:27.887" level="INFO">ce98d686e952355ef42e64f4b0dcf65f</msg>
<status status="PASS" starttime="20231106 23:33:27.886" endtime="20231106 23:33:27.887"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231106 23:33:27.888" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231106 23:33:27.887" endtime="20231106 23:33:27.888"/>
</kw>
<status status="PASS" starttime="20231106 23:33:27.870" endtime="20231106 23:33:27.888"/>
</kw>
<msg timestamp="20231106 23:33:27.888" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231106 23:33:27.869" endtime="20231106 23:33:27.888"/>
</kw>
<msg timestamp="20231106 23:33:27.889" level="INFO">${md5sum} = ce98d686e952355ef42e64f4b0dcf65f</msg>
<status status="PASS" starttime="20231106 23:33:27.868" endtime="20231106 23:33:27.889"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${VOLUME}/${BUCKET}/${TESTFILE} /tmp/${TESTFILE}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231106 23:33:27.895" level="INFO">Running command 'ozone sh key put /decom-volume/decom-bucket/testfiledecomm /tmp/testfiledecomm 2&gt;&amp;1'.</msg>
<msg timestamp="20231106 23:33:46.948" level="INFO">${rc} = 0</msg>
<msg timestamp="20231106 23:33:46.948" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231106 23:33:27.892" endtime="20231106 23:33:46.948"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231106 23:33:46.950" level="INFO"/>
<status status="PASS" starttime="20231106 23:33:46.948" endtime="20231106 23:33:46.950"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231106 23:33:46.951" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231106 23:33:46.950" endtime="20231106 23:33:46.951"/>
</kw>
<status status="PASS" starttime="20231106 23:33:27.891" endtime="20231106 23:33:46.951"/>
</kw>
<msg timestamp="20231106 23:33:46.951" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231106 23:33:27.890" endtime="20231106 23:33:46.951"/>
</kw>
<status status="PASS" starttime="20231106 23:33:27.889" endtime="20231106 23:33:46.951"/>
</kw>
<msg timestamp="20231106 23:33:46.952" level="INFO">${md5sum} = ce98d686e952355ef42e64f4b0dcf65f</msg>
<status status="PASS" starttime="20231106 23:33:08.249" endtime="20231106 23:33:46.952"/>
</kw>
<kw name="Transfer Leader to non-primordial node Follower">
<var>${transfer_result}</var>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm roles --service-id=scmservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231106 23:33:46.958" level="INFO">Running command 'ozone admin scm roles --service-id=scmservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231106 23:33:53.986" level="INFO">${rc} = 0</msg>
<msg timestamp="20231106 23:33:53.987" level="INFO">${output} = scm3.org:9894:FOLLOWER:06b07224-3166-4961-ae74-6b03fdaa51d3:172.25.0.118
scm1.org:9894:LEADER:331a0938-d6f1-42a9-a4ae-109f456b4b33:172.25.0.116
scm2.org:9894:FOLLOWER:1be38a04-9c47-40de-8329-a7f0281e7...</msg>
<status status="PASS" starttime="20231106 23:33:46.954" endtime="20231106 23:33:53.987"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231106 23:33:53.989" level="INFO">scm3.org:9894:FOLLOWER:06b07224-3166-4961-ae74-6b03fdaa51d3:172.25.0.118
scm1.org:9894:LEADER:331a0938-d6f1-42a9-a4ae-109f456b4b33:172.25.0.116
scm2.org:9894:FOLLOWER:1be38a04-9c47-40de-8329-a7f0281e7ddf:172.25.0.117</msg>
<status status="PASS" starttime="20231106 23:33:53.988" endtime="20231106 23:33:53.989"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231106 23:33:53.990" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231106 23:33:53.990" endtime="20231106 23:33:53.991"/>
</kw>
<status status="PASS" starttime="20231106 23:33:46.954" endtime="20231106 23:33:53.991"/>
</kw>
<msg timestamp="20231106 23:33:53.991" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231106 23:33:46.953" endtime="20231106 23:33:53.991"/>
</kw>
<msg timestamp="20231106 23:33:53.992" level="INFO">${result} = scm3.org:9894:FOLLOWER:06b07224-3166-4961-ae74-6b03fdaa51d3:172.25.0.118
scm1.org:9894:LEADER:331a0938-d6f1-42a9-a4ae-109f456b4b33:172.25.0.116
scm2.org:9894:FOLLOWER:1be38a04-9c47-40de-8329-a7f0281e7...</msg>
<status status="PASS" starttime="20231106 23:33:46.953" endtime="20231106 23:33:53.992"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231106 23:33:53.992" level="INFO">scm3.org:9894:FOLLOWER:06b07224-3166-4961-ae74-6b03fdaa51d3:172.25.0.118
scm1.org:9894:LEADER:331a0938-d6f1-42a9-a4ae-109f456b4b33:172.25.0.116
scm2.org:9894:FOLLOWER:1be38a04-9c47-40de-8329-a7f0281e7ddf:172.25.0.117</msg>
<status status="PASS" starttime="20231106 23:33:53.992" endtime="20231106 23:33:53.992"/>
</kw>
<kw name="Get Lines Matching Pattern" library="String">
<var>${follower_nodes}</var>
<arg>${result}</arg>
<arg>scm[1234].org:9894:FOLLOWER*</arg>
<doc>Returns lines of the given ``string`` that match the ``pattern``.</doc>
<msg timestamp="20231106 23:33:53.994" level="INFO">2 out of 3 lines matched</msg>
<msg timestamp="20231106 23:33:53.994" level="INFO">${follower_nodes} = scm3.org:9894:FOLLOWER:06b07224-3166-4961-ae74-6b03fdaa51d3:172.25.0.118
scm2.org:9894:FOLLOWER:1be38a04-9c47-40de-8329-a7f0281e7ddf:172.25.0.117</msg>
<status status="PASS" starttime="20231106 23:33:53.993" endtime="20231106 23:33:53.994"/>
</kw>
<kw name="Get Line" library="String">
<var>${follower_node}</var>
<arg>${follower_nodes}</arg>
<arg>0</arg>
<doc>Returns the specified line from the given ``string``.</doc>
<msg timestamp="20231106 23:33:53.995" level="INFO">${follower_node} = scm3.org:9894:FOLLOWER:06b07224-3166-4961-ae74-6b03fdaa51d3:172.25.0.118</msg>
<status status="PASS" starttime="20231106 23:33:53.994" endtime="20231106 23:33:53.995"/>
</kw>
<kw name="Split String" library="String">
<var>${follower_split}</var>
<arg>${follower_node}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20231106 23:33:53.996" level="INFO">${follower_split} = ['scm3.org', '9894', 'FOLLOWER', '06b07224-3166-4961-ae74-6b03fdaa51d3', '172.25.0.118']</msg>
<status status="PASS" starttime="20231106 23:33:53.995" endtime="20231106 23:33:53.996"/>
</kw>
<kw name="Strip String" library="String">
<var>${follower_scmId}</var>
<arg>${follower_split[3]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20231106 23:33:53.997" level="INFO">${follower_scmId} = 06b07224-3166-4961-ae74-6b03fdaa51d3</msg>
<status status="PASS" starttime="20231106 23:33:53.996" endtime="20231106 23:33:53.997"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm transfer --service-id=scmservice -n ${follower_scmId}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231106 23:33:54.003" level="INFO">Running command 'ozone admin scm transfer --service-id=scmservice -n 06b07224-3166-4961-ae74-6b03fdaa51d3 2&gt;&amp;1'.</msg>
<msg timestamp="20231106 23:34:07.023" level="INFO">${rc} = 0</msg>
<msg timestamp="20231106 23:34:07.023" level="INFO">${output} = Transfer leadership successfully to 06b07224-3166-4961-ae74-6b03fdaa51d3.</msg>
<status status="PASS" starttime="20231106 23:33:53.999" endtime="20231106 23:34:07.023"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231106 23:34:07.025" level="INFO">Transfer leadership successfully to 06b07224-3166-4961-ae74-6b03fdaa51d3.</msg>
<status status="PASS" starttime="20231106 23:34:07.024" endtime="20231106 23:34:07.025"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231106 23:34:07.027" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231106 23:34:07.026" endtime="20231106 23:34:07.027"/>
</kw>
<status status="PASS" starttime="20231106 23:33:53.999" endtime="20231106 23:34:07.027"/>
</kw>
<msg timestamp="20231106 23:34:07.027" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231106 23:33:53.999" endtime="20231106 23:34:07.027"/>
</kw>
<msg timestamp="20231106 23:34:07.028" level="INFO">${result} = Transfer leadership successfully to 06b07224-3166-4961-ae74-6b03fdaa51d3.</msg>
<status status="PASS" starttime="20231106 23:33:53.998" endtime="20231106 23:34:07.028"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231106 23:34:07.028" level="INFO">Transfer leadership successfully to 06b07224-3166-4961-ae74-6b03fdaa51d3.</msg>
<status status="PASS" starttime="20231106 23:34:07.028" endtime="20231106 23:34:07.028"/>
</kw>
<msg timestamp="20231106 23:34:07.029" level="INFO">${transfer_result} = Transfer leadership successfully to 06b07224-3166-4961-ae74-6b03fdaa51d3.</msg>
<status status="PASS" starttime="20231106 23:33:46.952" endtime="20231106 23:34:07.029"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${transfer_result}</arg>
<arg>Transfer leadership successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231106 23:34:07.029" endtime="20231106 23:34:07.030"/>
</kw>
<kw name="Get SCM Node count">
<var>${node_count}</var>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm roles --service-id=scmservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231106 23:34:07.036" level="INFO">Running command 'ozone admin scm roles --service-id=scmservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231106 23:34:17.416" level="INFO">${rc} = 0</msg>
<msg timestamp="20231106 23:34:17.416" level="INFO">${output} = scm3.org:9894:LEADER:06b07224-3166-4961-ae74-6b03fdaa51d3:172.25.0.118
scm1.org:9894:FOLLOWER:331a0938-d6f1-42a9-a4ae-109f456b4b33:172.25.0.116
scm2.org:9894:FOLLOWER:1be38a04-9c47-40de-8329-a7f0281e7...</msg>
<status status="PASS" starttime="20231106 23:34:07.032" endtime="20231106 23:34:17.416"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231106 23:34:17.418" level="INFO">scm3.org:9894:LEADER:06b07224-3166-4961-ae74-6b03fdaa51d3:172.25.0.118
scm1.org:9894:FOLLOWER:331a0938-d6f1-42a9-a4ae-109f456b4b33:172.25.0.116
scm2.org:9894:FOLLOWER:1be38a04-9c47-40de-8329-a7f0281e7ddf:172.25.0.117</msg>
<status status="PASS" starttime="20231106 23:34:17.416" endtime="20231106 23:34:17.418"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231106 23:34:17.419" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231106 23:34:17.418" endtime="20231106 23:34:17.419"/>
</kw>
<status status="PASS" starttime="20231106 23:34:07.031" endtime="20231106 23:34:17.420"/>
</kw>
<msg timestamp="20231106 23:34:17.420" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231106 23:34:07.031" endtime="20231106 23:34:17.420"/>
</kw>
<msg timestamp="20231106 23:34:17.421" level="INFO">${result} = scm3.org:9894:LEADER:06b07224-3166-4961-ae74-6b03fdaa51d3:172.25.0.118
scm1.org:9894:FOLLOWER:331a0938-d6f1-42a9-a4ae-109f456b4b33:172.25.0.116
scm2.org:9894:FOLLOWER:1be38a04-9c47-40de-8329-a7f0281e7...</msg>
<status status="PASS" starttime="20231106 23:34:07.030" endtime="20231106 23:34:17.421"/>
</kw>
<kw name="Get Lines Matching Pattern" library="String">
<var>${nodes_in_quorum}</var>
<arg>${result}</arg>
<arg>scm[1234].org:9894:*</arg>
<doc>Returns lines of the given ``string`` that match the ``pattern``.</doc>
<msg timestamp="20231106 23:34:17.422" level="INFO">3 out of 3 lines matched</msg>
<msg timestamp="20231106 23:34:17.422" level="INFO">${nodes_in_quorum} = scm3.org:9894:LEADER:06b07224-3166-4961-ae74-6b03fdaa51d3:172.25.0.118
scm1.org:9894:FOLLOWER:331a0938-d6f1-42a9-a4ae-109f456b4b33:172.25.0.116
scm2.org:9894:FOLLOWER:1be38a04-9c47-40de-8329-a7f0281e7...</msg>
<status status="PASS" starttime="20231106 23:34:17.421" endtime="20231106 23:34:17.422"/>
</kw>
<kw name="Get Line Count" library="String">
<var>${node_count}</var>
<arg>${nodes_in_quorum}</arg>
<doc>Returns and logs the number of lines in the given string.</doc>
<msg timestamp="20231106 23:34:17.423" level="INFO">3 lines</msg>
<msg timestamp="20231106 23:34:17.423" level="INFO">${node_count} = 3</msg>
<status status="PASS" starttime="20231106 23:34:17.423" endtime="20231106 23:34:17.423"/>
</kw>
<msg timestamp="20231106 23:34:17.423" level="INFO">${node_count} = 3</msg>
<status status="PASS" starttime="20231106 23:34:07.030" endtime="20231106 23:34:17.423"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${node_count_pre}</var>
<arg>${node_count}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20231106 23:34:17.424" level="INFO">${node_count_pre} = 3</msg>
<status status="PASS" starttime="20231106 23:34:17.424" endtime="20231106 23:34:17.424"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${n}</var>
<arg>${node_count}-1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20231106 23:34:17.425" level="INFO">${n} = 2</msg>
<status status="PASS" starttime="20231106 23:34:17.425" endtime="20231106 23:34:17.425"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${node_count_expect}</var>
<arg>${n}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20231106 23:34:17.426" level="INFO">${node_count_expect} = 2</msg>
<status status="PASS" starttime="20231106 23:34:17.426" endtime="20231106 23:34:17.426"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>SCM Instance Count before SCM Decommission: ${node_count_pre}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231106 23:34:17.427" level="INFO">SCM Instance Count before SCM Decommission: 3</msg>
<status status="PASS" starttime="20231106 23:34:17.426" endtime="20231106 23:34:17.427"/>
</kw>
<kw name="Execute" library="os">
<var>${decommission_res}</var>
<arg>ozone admin scm decommission --nodeid=${primordial_scm_id}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231106 23:34:17.433" level="INFO">Running command 'ozone admin scm decommission --nodeid=331a0938-d6f1-42a9-a4ae-109f456b4b33 2&gt;&amp;1'.</msg>
<msg timestamp="20231106 23:34:26.845" level="INFO">${rc} = 0</msg>
<msg timestamp="20231106 23:34:26.845" level="INFO">${output} = Decommissioned Scm 331a0938-d6f1-42a9-a4ae-109f456b4b33</msg>
<status status="PASS" starttime="20231106 23:34:17.429" endtime="20231106 23:34:26.845"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231106 23:34:26.848" level="INFO">Decommissioned Scm 331a0938-d6f1-42a9-a4ae-109f456b4b33</msg>
<status status="PASS" starttime="20231106 23:34:26.846" endtime="20231106 23:34:26.849"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231106 23:34:26.850" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231106 23:34:26.849" endtime="20231106 23:34:26.850"/>
</kw>
<status status="PASS" starttime="20231106 23:34:17.428" endtime="20231106 23:34:26.851"/>
</kw>
<msg timestamp="20231106 23:34:26.851" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231106 23:34:17.428" endtime="20231106 23:34:26.851"/>
</kw>
<msg timestamp="20231106 23:34:26.851" level="INFO">${decommission_res} = Decommissioned Scm 331a0938-d6f1-42a9-a4ae-109f456b4b33</msg>
<status status="PASS" starttime="20231106 23:34:17.427" endtime="20231106 23:34:26.851"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${decommission_res}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231106 23:34:26.852" level="INFO">Decommissioned Scm 331a0938-d6f1-42a9-a4ae-109f456b4b33</msg>
<status status="PASS" starttime="20231106 23:34:26.851" endtime="20231106 23:34:26.852"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${decommission_res}</arg>
<arg>Decommissioned</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20231106 23:34:26.853" endtime="20231106 23:34:26.853"/>
</kw>
<kw name="Get SCM Node count">
<var>${node_count}</var>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm roles --service-id=scmservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231106 23:34:26.860" level="INFO">Running command 'ozone admin scm roles --service-id=scmservice 2&gt;&amp;1'.</msg>
<msg timestamp="20231106 23:37:53.441" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20231106 23:34:26.856" endtime="20231106 23:37:53.441"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20231106 23:37:53.442" endtime="20231106 23:37:53.442"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20231106 23:37:53.442" endtime="20231106 23:37:53.442"/>
</kw>
<status status="FAIL" starttime="20231106 23:34:26.855" endtime="20231106 23:37:53.443"/>
</kw>
<msg timestamp="20231106 23:37:53.443" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20231106 23:34:26.855" endtime="20231106 23:37:53.443"/>
</kw>
<status status="FAIL" starttime="20231106 23:34:26.854" endtime="20231106 23:37:53.443"/>
</kw>
<kw name="Get Lines Matching Pattern" library="String">
<var>${nodes_in_quorum}</var>
<arg>${result}</arg>
<arg>scm[1234].org:9894:*</arg>
<doc>Returns lines of the given ``string`` that match the ``pattern``.</doc>
<status status="NOT RUN" starttime="20231106 23:37:53.443" endtime="20231106 23:37:53.443"/>
</kw>
<kw name="Get Line Count" library="String">
<var>${node_count}</var>
<arg>${nodes_in_quorum}</arg>
<doc>Returns and logs the number of lines in the given string.</doc>
<status status="NOT RUN" starttime="20231106 23:37:53.443" endtime="20231106 23:37:53.443"/>
</kw>
<status status="FAIL" starttime="20231106 23:34:26.854" endtime="20231106 23:37:53.444"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${node_count_post}</var>
<arg>${node_count}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="NOT RUN" starttime="20231106 23:37:53.444" endtime="20231106 23:37:53.444"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>SCM Instance Count after SCM Decommission: ${node_count_post}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20231106 23:37:53.444" endtime="20231106 23:37:53.444"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${node_count_expect}</arg>
<arg>${node_count_post}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20231106 23:37:53.444" endtime="20231106 23:37:53.444"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get /${VOLUME}/${BUCKET}/${TESTFILE} /tmp/getdecomfile</arg>
<status status="NOT RUN" starttime="20231106 23:37:53.445" endtime="20231106 23:37:53.445"/>
</kw>
<kw name="Execute" library="os">
<var>${md5sum_new}</var>
<arg>md5sum /tmp/getdecomfile | awk '{print $1}'</arg>
<status status="NOT RUN" starttime="20231106 23:37:53.445" endtime="20231106 23:37:53.445"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${md5sum}</arg>
<arg>${md5sum_new}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20231106 23:37:53.445" endtime="20231106 23:37:53.445"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20231106 23:32:53.439" endtime="20231106 23:37:53.446">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test Ozone SCM Decommissioning</doc>
<status status="FAIL" starttime="20231106 23:32:53.232" endtime="20231106 23:37:53.449"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="359869"/>
</suite>
<statistics>
<total>
<stat pass="5" fail="1" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="5" fail="1" skip="0" id="s1" name="ozonesecure-ha-scm-decommission">ozonesecure-ha-scm-decommission</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Kinit">ozonesecure-ha-scm-decommission.Kinit</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Primordial-Scm">ozonesecure-ha-scm-decommission.Primordial-Scm</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="Kinit">ozonesecure-ha-scm-decommission.Kinit</stat>
<stat pass="0" fail="1" skip="0" id="s1-s4" name="Scm-Decommission">ozonesecure-ha-scm-decommission.Scm-Decommission</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
