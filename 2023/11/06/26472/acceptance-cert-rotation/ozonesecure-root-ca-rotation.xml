<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20231106 09:24:37.969" rpa="false" schemaversion="4">
<suite id="s1" name="ozonesecure-root-ca-rotation">
<suite id="s1-s1" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s1-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/' | sed 's/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231106 09:22:38.359" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' | sed 's/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231106 09:22:38.529" level="INFO">${rc} = 0</msg>
<msg timestamp="20231106 09:22:38.529" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20231106 09:22:38.330" endtime="20231106 09:22:38.529"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231106 09:22:38.563" level="INFO">scm</msg>
<status status="PASS" starttime="20231106 09:22:38.530" endtime="20231106 09:22:38.563"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231106 09:22:38.567" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231106 09:22:38.566" endtime="20231106 09:22:38.567"/>
</kw>
<status status="PASS" starttime="20231106 09:22:38.329" endtime="20231106 09:22:38.576"/>
</kw>
<msg timestamp="20231106 09:22:38.576" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231106 09:22:38.329" endtime="20231106 09:22:38.576"/>
</kw>
<msg timestamp="20231106 09:22:38.577" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20231106 09:22:38.328" endtime="20231106 09:22:38.577"/>
</kw>
<msg timestamp="20231106 09:22:38.597" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231106 09:22:38.328" endtime="20231106 09:22:38.597"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231106 09:22:38.604" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231106 09:22:38.603" endtime="20231106 09:22:38.604"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231106 09:22:38.717" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231106 09:22:38.869" level="INFO">${rc} = 0</msg>
<msg timestamp="20231106 09:22:38.869" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231106 09:22:38.635" endtime="20231106 09:22:38.869"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231106 09:22:38.874" level="INFO"/>
<status status="PASS" starttime="20231106 09:22:38.873" endtime="20231106 09:22:38.875"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231106 09:22:38.875" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231106 09:22:38.875" endtime="20231106 09:22:38.878"/>
</kw>
<status status="PASS" starttime="20231106 09:22:38.634" endtime="20231106 09:22:38.878"/>
</kw>
<msg timestamp="20231106 09:22:38.878" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231106 09:22:38.619" endtime="20231106 09:22:38.878"/>
</kw>
<status status="PASS" starttime="20231106 09:22:38.605" endtime="20231106 09:22:38.879"/>
</kw>
<status status="PASS" starttime="20231106 09:22:38.604" endtime="20231106 09:22:38.879"/>
</kw>
<status status="PASS" starttime="20231106 09:22:38.327" endtime="20231106 09:22:38.879"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20231106 09:22:38.320" endtime="20231106 09:22:38.879"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20231106 09:22:37.417" endtime="20231106 09:22:38.892"/>
</suite>
<suite id="s1-s2" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s2-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/' | sed 's/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231106 09:22:56.579" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' | sed 's/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231106 09:22:56.584" level="INFO">${rc} = 0</msg>
<msg timestamp="20231106 09:22:56.584" level="INFO">${output} = dn</msg>
<status status="PASS" starttime="20231106 09:22:56.576" endtime="20231106 09:22:56.584"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231106 09:22:56.586" level="INFO">dn</msg>
<status status="PASS" starttime="20231106 09:22:56.585" endtime="20231106 09:22:56.586"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231106 09:22:56.587" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231106 09:22:56.586" endtime="20231106 09:22:56.587"/>
</kw>
<status status="PASS" starttime="20231106 09:22:56.576" endtime="20231106 09:22:56.587"/>
</kw>
<msg timestamp="20231106 09:22:56.587" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231106 09:22:56.575" endtime="20231106 09:22:56.587"/>
</kw>
<msg timestamp="20231106 09:22:56.587" level="INFO">${instance} = dn</msg>
<status status="PASS" starttime="20231106 09:22:56.575" endtime="20231106 09:22:56.587"/>
</kw>
<msg timestamp="20231106 09:22:56.588" level="INFO">${TEST_USER} = testuser/dn@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231106 09:22:56.574" endtime="20231106 09:22:56.588"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231106 09:22:56.588" level="INFO">${TEST_USER} = testuser/dn@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231106 09:22:56.588" endtime="20231106 09:22:56.588"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231106 09:22:56.593" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/dn@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231106 09:22:56.620" level="INFO">${rc} = 0</msg>
<msg timestamp="20231106 09:22:56.620" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231106 09:22:56.591" endtime="20231106 09:22:56.620"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231106 09:22:56.622" level="INFO"/>
<status status="PASS" starttime="20231106 09:22:56.621" endtime="20231106 09:22:56.622"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231106 09:22:56.623" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231106 09:22:56.622" endtime="20231106 09:22:56.623"/>
</kw>
<status status="PASS" starttime="20231106 09:22:56.590" endtime="20231106 09:22:56.623"/>
</kw>
<msg timestamp="20231106 09:22:56.623" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231106 09:22:56.590" endtime="20231106 09:22:56.624"/>
</kw>
<status status="PASS" starttime="20231106 09:22:56.589" endtime="20231106 09:22:56.624"/>
</kw>
<status status="PASS" starttime="20231106 09:22:56.588" endtime="20231106 09:22:56.624"/>
</kw>
<status status="PASS" starttime="20231106 09:22:56.573" endtime="20231106 09:22:56.624"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20231106 09:22:56.572" endtime="20231106 09:22:56.624"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20231106 09:22:56.504" endtime="20231106 09:22:56.626"/>
</suite>
<suite id="s1-s3" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s3-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/' | sed 's/om[0-9]/om/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231106 09:23:10.792" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' | sed 's/om[0-9]/om/' 2&gt;&amp;1'.</msg>
<msg timestamp="20231106 09:23:10.798" level="INFO">${rc} = 0</msg>
<msg timestamp="20231106 09:23:10.798" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20231106 09:23:10.789" endtime="20231106 09:23:10.798"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231106 09:23:10.799" level="INFO">om</msg>
<status status="PASS" starttime="20231106 09:23:10.798" endtime="20231106 09:23:10.799"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231106 09:23:10.800" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231106 09:23:10.799" endtime="20231106 09:23:10.800"/>
</kw>
<status status="PASS" starttime="20231106 09:23:10.788" endtime="20231106 09:23:10.800"/>
</kw>
<msg timestamp="20231106 09:23:10.801" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231106 09:23:10.788" endtime="20231106 09:23:10.801"/>
</kw>
<msg timestamp="20231106 09:23:10.801" level="INFO">${instance} = om</msg>
<status status="PASS" starttime="20231106 09:23:10.787" endtime="20231106 09:23:10.801"/>
</kw>
<msg timestamp="20231106 09:23:10.801" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231106 09:23:10.786" endtime="20231106 09:23:10.801"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231106 09:23:10.802" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20231106 09:23:10.802" endtime="20231106 09:23:10.802"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231106 09:23:10.808" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/om@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20231106 09:23:10.928" level="INFO">${rc} = 0</msg>
<msg timestamp="20231106 09:23:10.928" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231106 09:23:10.805" endtime="20231106 09:23:10.928"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231106 09:23:10.930" level="INFO"/>
<status status="PASS" starttime="20231106 09:23:10.929" endtime="20231106 09:23:10.930"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231106 09:23:10.931" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231106 09:23:10.930" endtime="20231106 09:23:10.931"/>
</kw>
<status status="PASS" starttime="20231106 09:23:10.804" endtime="20231106 09:23:10.932"/>
</kw>
<msg timestamp="20231106 09:23:10.932" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231106 09:23:10.804" endtime="20231106 09:23:10.932"/>
</kw>
<status status="PASS" starttime="20231106 09:23:10.803" endtime="20231106 09:23:10.932"/>
</kw>
<status status="PASS" starttime="20231106 09:23:10.802" endtime="20231106 09:23:10.932"/>
</kw>
<status status="PASS" starttime="20231106 09:23:10.785" endtime="20231106 09:23:10.932"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20231106 09:23:10.784" endtime="20231106 09:23:10.933"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20231106 09:23:10.707" endtime="20231106 09:23:10.935"/>
</suite>
<suite id="s1-s4" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s4-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231106 09:23:23.002" level="INFO">Running command 'ozone sh volume create rootca-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20231106 09:23:30.121" level="INFO">${rc} = 0</msg>
<msg timestamp="20231106 09:23:30.122" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231106 09:23:22.999" endtime="20231106 09:23:30.122"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231106 09:23:30.133" level="INFO"/>
<status status="PASS" starttime="20231106 09:23:30.131" endtime="20231106 09:23:30.133"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231106 09:23:30.134" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231106 09:23:30.133" endtime="20231106 09:23:30.134"/>
</kw>
<status status="PASS" starttime="20231106 09:23:22.998" endtime="20231106 09:23:30.134"/>
</kw>
<msg timestamp="20231106 09:23:30.134" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231106 09:23:22.998" endtime="20231106 09:23:30.134"/>
</kw>
<msg timestamp="20231106 09:23:30.135" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231106 09:23:22.997" endtime="20231106 09:23:30.135"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231106 09:23:30.135" endtime="20231106 09:23:30.136"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231106 09:23:30.143" level="INFO">Running command 'ozone sh bucket create /rootca-volume/rootca-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20231106 09:23:39.092" level="INFO">${rc} = 0</msg>
<msg timestamp="20231106 09:23:39.093" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231106 09:23:30.138" endtime="20231106 09:23:39.093"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231106 09:23:39.094" level="INFO"/>
<status status="PASS" starttime="20231106 09:23:39.093" endtime="20231106 09:23:39.094"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231106 09:23:39.095" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231106 09:23:39.095" endtime="20231106 09:23:39.095"/>
</kw>
<status status="PASS" starttime="20231106 09:23:30.137" endtime="20231106 09:23:39.096"/>
</kw>
<msg timestamp="20231106 09:23:39.096" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231106 09:23:30.137" endtime="20231106 09:23:39.096"/>
</kw>
<msg timestamp="20231106 09:23:39.096" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231106 09:23:30.136" endtime="20231106 09:23:39.096"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231106 09:23:39.096" endtime="20231106 09:23:39.097"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231106 09:23:22.996" endtime="20231106 09:23:39.097"/>
</test>
<test id="s1-s4-t2" name="Create key" line="34">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231106 09:23:39.104" level="INFO">Running command 'echo "rootca: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20231106 09:23:39.106" level="INFO">${rc} = 0</msg>
<msg timestamp="20231106 09:23:39.107" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231106 09:23:39.101" endtime="20231106 09:23:39.107"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231106 09:23:39.108" level="INFO"/>
<status status="PASS" starttime="20231106 09:23:39.107" endtime="20231106 09:23:39.108"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231106 09:23:39.109" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231106 09:23:39.108" endtime="20231106 09:23:39.109"/>
</kw>
<status status="PASS" starttime="20231106 09:23:39.100" endtime="20231106 09:23:39.109"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231106 09:23:39.116" level="INFO">Running command 'ozone sh key put /rootca-volume/rootca-bucket/rootca-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231106 09:23:54.150" level="INFO">${rc} = 0</msg>
<msg timestamp="20231106 09:23:54.150" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231106 09:23:39.112" endtime="20231106 09:23:54.150"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231106 09:23:54.153" level="INFO"/>
<status status="PASS" starttime="20231106 09:23:54.151" endtime="20231106 09:23:54.153"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231106 09:23:54.154" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231106 09:23:54.153" endtime="20231106 09:23:54.154"/>
</kw>
<status status="PASS" starttime="20231106 09:23:39.111" endtime="20231106 09:23:54.154"/>
</kw>
<msg timestamp="20231106 09:23:54.154" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20231106 09:23:39.111" endtime="20231106 09:23:54.155"/>
</kw>
<msg timestamp="20231106 09:23:54.155" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231106 09:23:39.110" endtime="20231106 09:23:54.155"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20231106 09:23:54.155" endtime="20231106 09:23:54.156"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231106 09:23:54.160" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20231106 09:23:54.168" level="INFO">${rc} = 0</msg>
<msg timestamp="20231106 09:23:54.168" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231106 09:23:54.156" endtime="20231106 09:23:54.168"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231106 09:23:54.170" level="INFO"/>
<status status="PASS" starttime="20231106 09:23:54.169" endtime="20231106 09:23:54.170"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231106 09:23:54.171" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20231106 09:23:54.170" endtime="20231106 09:23:54.171"/>
</kw>
<status status="PASS" starttime="20231106 09:23:54.156" endtime="20231106 09:23:54.171"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20231106 09:23:39.099" endtime="20231106 09:23:54.172"/>
</test>
<test id="s1-s4-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20231106 09:23:54.176" level="INFO">${random} = 72061</msg>
<status status="PASS" starttime="20231106 09:23:54.175" endtime="20231106 09:23:54.176"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231106 09:23:54.181" level="INFO">Running command 'ozone sh key get /rootca-volume/rootca-bucket/rootca-key /tmp/key-72061 2&gt;&amp;1'.</msg>
<msg timestamp="20231106 09:24:10.846" level="INFO">${rc} = 255</msg>
<msg timestamp="20231106 09:24:10.846" level="INFO">${output} = java.util.concurrent.ExecutionException: org.apache.ratis.thirdparty.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception</msg>
<status status="PASS" starttime="20231106 09:23:54.178" endtime="20231106 09:24:10.846"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231106 09:24:10.848" level="INFO">java.util.concurrent.ExecutionException: org.apache.ratis.thirdparty.io.grpc.StatusRuntimeException: UNAVAILABLE: io exception</msg>
<status status="PASS" starttime="20231106 09:24:10.847" endtime="20231106 09:24:10.848"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20231106 09:24:10.849" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20231106 09:24:10.850" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20231106 09:24:10.849" endtime="20231106 09:24:10.850"/>
</kw>
<status status="FAIL" starttime="20231106 09:23:54.177" endtime="20231106 09:24:10.851"/>
</kw>
<msg timestamp="20231106 09:24:10.851" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20231106 09:23:54.177" endtime="20231106 09:24:10.851"/>
</kw>
<status status="FAIL" starttime="20231106 09:23:54.176" endtime="20231106 09:24:10.851"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231106 09:24:10.851" endtime="20231106 09:24:10.851"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<status status="NOT RUN" starttime="20231106 09:24:10.852" endtime="20231106 09:24:10.852"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20231106 09:24:10.852" endtime="20231106 09:24:10.852"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<status status="NOT RUN" starttime="20231106 09:24:10.853" endtime="20231106 09:24:10.853"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20231106 09:23:54.174" endtime="20231106 09:24:10.853">255 != 0</status>
</test>
<doc>Generate data</doc>
<status status="FAIL" starttime="20231106 09:23:22.874" endtime="20231106 09:24:10.856"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="49807"/>
</suite>
<statistics>
<total>
<stat pass="5" fail="1" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">create-volume-and-bucket</stat>
</tag>
<suite>
<stat pass="5" fail="1" skip="0" id="s1" name="ozonesecure-root-ca-rotation">ozonesecure-root-ca-rotation</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Kinit">ozonesecure-root-ca-rotation.Kinit</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Kinit">ozonesecure-root-ca-rotation.Kinit</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="Kinit">ozonesecure-root-ca-rotation.Kinit</stat>
<stat pass="2" fail="1" skip="0" id="s1-s4" name="Root-Ca-Rotation-Client-Checks">ozonesecure-root-ca-rotation.Root-Ca-Rotation-Client-Checks</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
