<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.0.2 (Python 3.8.10 on linux)" generated="20230527 11:02:44.505" rpa="false" schemaversion="3">
<suite id="s1" name="upgrade">
<suite id="s1-s1" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s1-t1" name="Create a volume and bucket" line="28">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230527 10:54:45.592" level="INFO">Running command 'ozone sh volume create old1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230527 10:54:48.004" level="INFO">${rc} = 0</msg>
<msg timestamp="20230527 10:54:48.005" level="INFO">${output} = 2023-05-27 10:54:47,878 [main] INFO rpc.RpcClient: Creating Volume: old1-volume, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20230527 10:54:45.587" endtime="20230527 10:54:48.005"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230527 10:54:48.006" level="INFO">2023-05-27 10:54:47,878 [main] INFO rpc.RpcClient: Creating Volume: old1-volume, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20230527 10:54:48.005" endtime="20230527 10:54:48.006"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230527 10:54:48.007" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230527 10:54:48.006" endtime="20230527 10:54:48.007"/>
</kw>
<status status="PASS" starttime="20230527 10:54:45.587" endtime="20230527 10:54:48.007"/>
</kw>
<msg timestamp="20230527 10:54:48.007" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230527 10:54:45.587" endtime="20230527 10:54:48.009"/>
</kw>
<msg timestamp="20230527 10:54:48.010" level="INFO">${output} = 2023-05-27 10:54:47,878 [main] INFO rpc.RpcClient: Creating Volume: old1-volume, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20230527 10:54:45.586" endtime="20230527 10:54:48.010"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230527 10:54:48.010" endtime="20230527 10:54:48.011"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230527 10:54:48.019" level="INFO">Running command 'ozone sh bucket create /old1-volume/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230527 10:54:50.909" level="INFO">${rc} = 0</msg>
<msg timestamp="20230527 10:54:50.909" level="INFO">${output} = 2023-05-27 10:54:50,848 [main] INFO rpc.RpcClient: Creating Bucket: old1-volume/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Enc...</msg>
<status status="PASS" starttime="20230527 10:54:48.012" endtime="20230527 10:54:50.909"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230527 10:54:50.912" level="INFO">2023-05-27 10:54:50,848 [main] INFO rpc.RpcClient: Creating Bucket: old1-volume/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false </msg>
<status status="PASS" starttime="20230527 10:54:50.910" endtime="20230527 10:54:50.912"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230527 10:54:50.913" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230527 10:54:50.912" endtime="20230527 10:54:50.913"/>
</kw>
<status status="PASS" starttime="20230527 10:54:48.012" endtime="20230527 10:54:50.913"/>
</kw>
<msg timestamp="20230527 10:54:50.913" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230527 10:54:48.011" endtime="20230527 10:54:50.914"/>
</kw>
<msg timestamp="20230527 10:54:50.914" level="INFO">${output} = 2023-05-27 10:54:50,848 [main] INFO rpc.RpcClient: Creating Bucket: old1-volume/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Enc...</msg>
<status status="PASS" starttime="20230527 10:54:48.011" endtime="20230527 10:54:50.914"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230527 10:54:50.914" endtime="20230527 10:54:50.915"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230527 10:54:45.585" endtime="20230527 10:54:50.915"/>
</test>
<test id="s1-s1-t2" name="Create key" line="35">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230527 10:54:50.920" level="INFO">Running command 'echo "old1: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230527 10:54:50.921" level="INFO">${rc} = 0</msg>
<msg timestamp="20230527 10:54:50.922" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230527 10:54:50.918" endtime="20230527 10:54:50.922"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230527 10:54:50.923" level="INFO"/>
<status status="PASS" starttime="20230527 10:54:50.922" endtime="20230527 10:54:50.923"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230527 10:54:50.923" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230527 10:54:50.923" endtime="20230527 10:54:50.924"/>
</kw>
<status status="PASS" starttime="20230527 10:54:50.917" endtime="20230527 10:54:50.924"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230527 10:54:50.927" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230527 10:54:56.542" level="INFO">${rc} = 0</msg>
<msg timestamp="20230527 10:54:56.542" level="INFO">${output} = 2023-05-27 10:54:54,226 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-05-27 10:54:54,293 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230527 10:54:50.926" endtime="20230527 10:54:56.543"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230527 10:54:56.544" level="INFO">2023-05-27 10:54:54,226 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-05-27 10:54:54,293 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-05-27 10:54:54,293 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2023-05-27 10:54:54,691 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20230527 10:54:56.543" endtime="20230527 10:54:56.544"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230527 10:54:56.545" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230527 10:54:56.544" endtime="20230527 10:54:56.545"/>
</kw>
<status status="PASS" starttime="20230527 10:54:50.925" endtime="20230527 10:54:56.545"/>
</kw>
<msg timestamp="20230527 10:54:56.545" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230527 10:54:50.925" endtime="20230527 10:54:56.545"/>
</kw>
<msg timestamp="20230527 10:54:56.546" level="INFO">${output} = 2023-05-27 10:54:54,226 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-05-27 10:54:54,293 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230527 10:54:50.924" endtime="20230527 10:54:56.546"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230527 10:54:56.546" endtime="20230527 10:54:56.546"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230527 10:54:56.549" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230527 10:54:56.551" level="INFO">${rc} = 0</msg>
<msg timestamp="20230527 10:54:56.551" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230527 10:54:56.547" endtime="20230527 10:54:56.552"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230527 10:54:56.552" level="INFO"/>
<status status="PASS" starttime="20230527 10:54:56.552" endtime="20230527 10:54:56.553"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230527 10:54:56.553" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230527 10:54:56.553" endtime="20230527 10:54:56.553"/>
</kw>
<status status="PASS" starttime="20230527 10:54:56.546" endtime="20230527 10:54:56.553"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230527 10:54:50.916" endtime="20230527 10:54:56.554"/>
</test>
<test id="s1-s1-t3" name="Create a bucket in s3v volume" line="41">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /s3v/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230527 10:54:56.558" level="INFO">Running command 'ozone sh bucket create /s3v/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230527 10:54:59.114" level="INFO">${rc} = 0</msg>
<msg timestamp="20230527 10:54:59.114" level="INFO">${output} = 2023-05-27 10:54:59,069 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption ...</msg>
<status status="PASS" starttime="20230527 10:54:56.557" endtime="20230527 10:54:59.114"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230527 10:54:59.115" level="INFO">2023-05-27 10:54:59,069 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false </msg>
<status status="PASS" starttime="20230527 10:54:59.114" endtime="20230527 10:54:59.115"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230527 10:54:59.120" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230527 10:54:59.116" endtime="20230527 10:54:59.120"/>
</kw>
<status status="PASS" starttime="20230527 10:54:56.556" endtime="20230527 10:54:59.120"/>
</kw>
<msg timestamp="20230527 10:54:59.120" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230527 10:54:56.556" endtime="20230527 10:54:59.120"/>
</kw>
<msg timestamp="20230527 10:54:59.121" level="INFO">${output} = 2023-05-27 10:54:59,069 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption ...</msg>
<status status="PASS" starttime="20230527 10:54:56.555" endtime="20230527 10:54:59.121"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230527 10:54:59.121" endtime="20230527 10:54:59.121"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230527 10:54:56.554" endtime="20230527 10:54:59.121"/>
</test>
<test id="s1-s1-t4" name="Create key in the bucket in s3v volume" line="46">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: another key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230527 10:54:59.131" level="INFO">Running command 'echo "old1: another key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230527 10:54:59.133" level="INFO">${rc} = 0</msg>
<msg timestamp="20230527 10:54:59.133" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230527 10:54:59.128" endtime="20230527 10:54:59.133"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230527 10:54:59.134" level="INFO"/>
<status status="PASS" starttime="20230527 10:54:59.133" endtime="20230527 10:54:59.134"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230527 10:54:59.135" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230527 10:54:59.134" endtime="20230527 10:54:59.135"/>
</kw>
<status status="PASS" starttime="20230527 10:54:59.127" endtime="20230527 10:54:59.135"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /s3v/${PREFIX}-bucket/key1-shell /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230527 10:54:59.145" level="INFO">Running command 'ozone sh key put /s3v/old1-bucket/key1-shell /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230527 10:55:03.622" level="INFO">${rc} = 0</msg>
<msg timestamp="20230527 10:55:03.622" level="INFO">${output} = 2023-05-27 10:55:02,162 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-05-27 10:55:02,231 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230527 10:54:59.137" endtime="20230527 10:55:03.622"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230527 10:55:03.624" level="INFO">2023-05-27 10:55:02,162 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-05-27 10:55:02,231 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-05-27 10:55:02,231 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2023-05-27 10:55:02,483 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20230527 10:55:03.623" endtime="20230527 10:55:03.624"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230527 10:55:03.624" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230527 10:55:03.624" endtime="20230527 10:55:03.625"/>
</kw>
<status status="PASS" starttime="20230527 10:54:59.136" endtime="20230527 10:55:03.625"/>
</kw>
<msg timestamp="20230527 10:55:03.625" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230527 10:54:59.136" endtime="20230527 10:55:03.625"/>
</kw>
<msg timestamp="20230527 10:55:03.625" level="INFO">${output} = 2023-05-27 10:55:02,162 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-05-27 10:55:02,231 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230527 10:54:59.135" endtime="20230527 10:55:03.626"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230527 10:55:03.626" endtime="20230527 10:55:03.626"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230527 10:55:03.629" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230527 10:55:03.631" level="INFO">${rc} = 0</msg>
<msg timestamp="20230527 10:55:03.631" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230527 10:55:03.627" endtime="20230527 10:55:03.631"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230527 10:55:03.632" level="INFO"/>
<status status="PASS" starttime="20230527 10:55:03.632" endtime="20230527 10:55:03.632"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230527 10:55:03.633" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230527 10:55:03.633" endtime="20230527 10:55:03.633"/>
</kw>
<status status="PASS" starttime="20230527 10:55:03.626" endtime="20230527 10:55:03.633"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230527 10:54:59.126" endtime="20230527 10:55:03.634"/>
</test>
<test id="s1-s1-t5" name="Setup credentials for S3" line="52">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230527 10:55:03.639" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230527 10:55:04.271" level="INFO">${rc} = 0</msg>
<msg timestamp="20230527 10:55:04.271" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230527 10:55:03.637" endtime="20230527 10:55:04.271"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230527 10:55:04.272" level="INFO"/>
<status status="PASS" starttime="20230527 10:55:04.271" endtime="20230527 10:55:04.272"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230527 10:55:04.273" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230527 10:55:04.272" endtime="20230527 10:55:04.273"/>
</kw>
<status status="PASS" starttime="20230527 10:55:03.637" endtime="20230527 10:55:04.273"/>
</kw>
<msg timestamp="20230527 10:55:04.273" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230527 10:55:03.637" endtime="20230527 10:55:04.274"/>
</kw>
<status status="PASS" starttime="20230527 10:55:03.636" endtime="20230527 10:55:04.274"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230527 10:55:04.285" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230527 10:55:04.745" level="INFO">${rc} = 0</msg>
<msg timestamp="20230527 10:55:04.745" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230527 10:55:04.275" endtime="20230527 10:55:04.746"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230527 10:55:04.747" level="INFO"/>
<status status="PASS" starttime="20230527 10:55:04.746" endtime="20230527 10:55:04.747"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230527 10:55:04.747" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230527 10:55:04.747" endtime="20230527 10:55:04.747"/>
</kw>
<status status="PASS" starttime="20230527 10:55:04.275" endtime="20230527 10:55:04.748"/>
</kw>
<msg timestamp="20230527 10:55:04.748" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230527 10:55:04.274" endtime="20230527 10:55:04.748"/>
</kw>
<status status="PASS" starttime="20230527 10:55:04.274" endtime="20230527 10:55:04.748"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230527 10:55:04.752" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230527 10:55:05.209" level="INFO">${rc} = 0</msg>
<msg timestamp="20230527 10:55:05.209" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230527 10:55:04.750" endtime="20230527 10:55:05.209"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230527 10:55:05.210" level="INFO"/>
<status status="PASS" starttime="20230527 10:55:05.210" endtime="20230527 10:55:05.211"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230527 10:55:05.211" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230527 10:55:05.211" endtime="20230527 10:55:05.211"/>
</kw>
<status status="PASS" starttime="20230527 10:55:04.749" endtime="20230527 10:55:05.212"/>
</kw>
<msg timestamp="20230527 10:55:05.212" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230527 10:55:04.749" endtime="20230527 10:55:05.212"/>
</kw>
<status status="PASS" starttime="20230527 10:55:04.749" endtime="20230527 10:55:05.212"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230527 10:55:05.216" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230527 10:55:05.677" level="INFO">${rc} = 0</msg>
<msg timestamp="20230527 10:55:05.677" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230527 10:55:05.214" endtime="20230527 10:55:05.677"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230527 10:55:05.678" level="INFO"/>
<status status="PASS" starttime="20230527 10:55:05.677" endtime="20230527 10:55:05.678"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230527 10:55:05.679" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230527 10:55:05.678" endtime="20230527 10:55:05.679"/>
</kw>
<status status="PASS" starttime="20230527 10:55:05.213" endtime="20230527 10:55:05.679"/>
</kw>
<msg timestamp="20230527 10:55:05.679" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230527 10:55:05.213" endtime="20230527 10:55:05.680"/>
</kw>
<status status="PASS" starttime="20230527 10:55:05.212" endtime="20230527 10:55:05.680"/>
</kw>
<status status="PASS" starttime="20230527 10:55:03.636" endtime="20230527 10:55:05.680"/>
</kw>
<status status="PASS" starttime="20230527 10:55:03.636" endtime="20230527 10:55:05.680"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230527 10:55:03.635" endtime="20230527 10:55:05.680"/>
</test>
<test id="s1-s1-t6" name="Try to create a bucket using S3 API" line="56">
<kw name="Create bucket with name" library="commonawslib">
<var>${output}</var>
<arg>${PREFIX}-bucket</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230527 10:55:05.686" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230527 10:55:07.588" level="INFO">${rc} = 0</msg>
<msg timestamp="20230527 10:55:07.588" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230527 10:55:05.684" endtime="20230527 10:55:07.588"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230527 10:55:07.589" level="INFO">{
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230527 10:55:07.588" endtime="20230527 10:55:07.589"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230527 10:55:07.590" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230527 10:55:07.589" endtime="20230527 10:55:07.590"/>
</kw>
<status status="PASS" starttime="20230527 10:55:05.683" endtime="20230527 10:55:07.590"/>
</kw>
<msg timestamp="20230527 10:55:07.590" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230527 10:55:05.683" endtime="20230527 10:55:07.591"/>
</kw>
<msg timestamp="20230527 10:55:07.591" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230527 10:55:05.683" endtime="20230527 10:55:07.591"/>
</kw>
<msg timestamp="20230527 10:55:07.591" level="INFO">${result} = {
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230527 10:55:05.682" endtime="20230527 10:55:07.591"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230527 10:55:07.592" endtime="20230527 10:55:07.592"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230527 10:55:07.592" endtime="20230527 10:55:07.593"/>
</kw>
<msg timestamp="20230527 10:55:07.593" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20230527 10:55:05.682" endtime="20230527 10:55:07.593"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230527 10:55:07.593" endtime="20230527 10:55:07.593"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230527 10:55:05.681" endtime="20230527 10:55:07.594"/>
</test>
<test id="s1-s1-t7" name="Create key using S3 API" line="61">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using S3 API" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230527 10:55:07.599" level="INFO">Running command 'echo "old1: key created using S3 API" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230527 10:55:07.601" level="INFO">${rc} = 0</msg>
<msg timestamp="20230527 10:55:07.601" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230527 10:55:07.597" endtime="20230527 10:55:07.601"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230527 10:55:07.603" level="INFO"/>
<status status="PASS" starttime="20230527 10:55:07.602" endtime="20230527 10:55:07.603"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230527 10:55:07.603" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230527 10:55:07.603" endtime="20230527 10:55:07.603"/>
</kw>
<status status="PASS" starttime="20230527 10:55:07.596" endtime="20230527 10:55:07.604"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>put-object --bucket ${PREFIX}-bucket --key key2-s3api --body /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230527 10:55:07.608" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket old1-bucket --key key2-s3api --body /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230527 10:55:09.180" level="INFO">${rc} = 0</msg>
<msg timestamp="20230527 10:55:09.180" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230527 10:55:07.606" endtime="20230527 10:55:09.180"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230527 10:55:09.182" level="INFO"/>
<status status="PASS" starttime="20230527 10:55:09.181" endtime="20230527 10:55:09.182"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230527 10:55:09.182" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230527 10:55:09.182" endtime="20230527 10:55:09.183"/>
</kw>
<msg timestamp="20230527 10:55:09.183" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230527 10:55:07.605" endtime="20230527 10:55:09.183"/>
</kw>
<msg timestamp="20230527 10:55:09.183" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230527 10:55:07.604" endtime="20230527 10:55:09.183"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230527 10:55:09.183" endtime="20230527 10:55:09.184"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230527 10:55:09.187" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230527 10:55:09.189" level="INFO">${rc} = 0</msg>
<msg timestamp="20230527 10:55:09.189" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230527 10:55:09.184" endtime="20230527 10:55:09.189"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230527 10:55:09.190" level="INFO"/>
<status status="PASS" starttime="20230527 10:55:09.189" endtime="20230527 10:55:09.190"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230527 10:55:09.191" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230527 10:55:09.190" endtime="20230527 10:55:09.191"/>
</kw>
<status status="PASS" starttime="20230527 10:55:09.184" endtime="20230527 10:55:09.191"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230527 10:55:07.595" endtime="20230527 10:55:09.191"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230527 10:54:45.487" endtime="20230527 10:55:09.193"/>
</suite>
<suite id="s1-s2" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s2-t1" name="Read data from previously created key" line="28">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230527 10:55:12.852" level="INFO">${random} = 17250</msg>
<status status="PASS" starttime="20230527 10:55:12.852" endtime="20230527 10:55:12.852"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230527 10:55:12.858" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-17250 2&gt;&amp;1'.</msg>
<msg timestamp="20230527 10:55:17.254" level="INFO">${rc} = 0</msg>
<msg timestamp="20230527 10:55:17.254" level="INFO">${output} = 2023-05-27 10:55:15,990 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-05-27 10:55:16,131 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230527 10:55:12.854" endtime="20230527 10:55:17.254"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230527 10:55:17.256" level="INFO">2023-05-27 10:55:15,990 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-05-27 10:55:16,131 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-05-27 10:55:16,131 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started</msg>
<status status="PASS" starttime="20230527 10:55:17.255" endtime="20230527 10:55:17.256"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230527 10:55:17.257" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230527 10:55:17.256" endtime="20230527 10:55:17.257"/>
</kw>
<status status="PASS" starttime="20230527 10:55:12.854" endtime="20230527 10:55:17.257"/>
</kw>
<msg timestamp="20230527 10:55:17.257" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230527 10:55:12.853" endtime="20230527 10:55:17.258"/>
</kw>
<msg timestamp="20230527 10:55:17.258" level="INFO">${output} = 2023-05-27 10:55:15,990 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-05-27 10:55:16,131 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230527 10:55:12.852" endtime="20230527 10:55:17.258"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230527 10:55:17.259" endtime="20230527 10:55:17.259"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230527 10:55:17.262" level="INFO">Running command 'cat /tmp/key-17250 2&gt;&amp;1'.</msg>
<msg timestamp="20230527 10:55:17.264" level="INFO">${rc} = 0</msg>
<msg timestamp="20230527 10:55:17.264" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230527 10:55:17.260" endtime="20230527 10:55:17.264"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230527 10:55:17.265" level="INFO">old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230527 10:55:17.264" endtime="20230527 10:55:17.265"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230527 10:55:17.266" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230527 10:55:17.265" endtime="20230527 10:55:17.266"/>
</kw>
<msg timestamp="20230527 10:55:17.266" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230527 10:55:17.259" endtime="20230527 10:55:17.266"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230527 10:55:17.266" endtime="20230527 10:55:17.267"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230527 10:55:17.269" level="INFO">Running command 'rm /tmp/key-17250 2&gt;&amp;1'.</msg>
<msg timestamp="20230527 10:55:17.272" level="INFO">${rc} = 0</msg>
<msg timestamp="20230527 10:55:17.272" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230527 10:55:17.268" endtime="20230527 10:55:17.272"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230527 10:55:17.273" level="INFO"/>
<status status="PASS" starttime="20230527 10:55:17.272" endtime="20230527 10:55:17.273"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230527 10:55:17.273" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230527 10:55:17.273" endtime="20230527 10:55:17.273"/>
</kw>
<status status="PASS" starttime="20230527 10:55:17.267" endtime="20230527 10:55:17.274"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230527 10:55:12.851" endtime="20230527 10:55:17.274"/>
</test>
<test id="s1-s2-t2" name="Setup credentials for S3" line="36">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230527 10:55:17.280" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230527 10:55:17.730" level="INFO">${rc} = 0</msg>
<msg timestamp="20230527 10:55:17.730" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230527 10:55:17.278" endtime="20230527 10:55:17.730"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230527 10:55:17.731" level="INFO"/>
<status status="PASS" starttime="20230527 10:55:17.730" endtime="20230527 10:55:17.731"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230527 10:55:17.731" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230527 10:55:17.731" endtime="20230527 10:55:17.732"/>
</kw>
<status status="PASS" starttime="20230527 10:55:17.278" endtime="20230527 10:55:17.732"/>
</kw>
<msg timestamp="20230527 10:55:17.732" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230527 10:55:17.277" endtime="20230527 10:55:17.732"/>
</kw>
<status status="PASS" starttime="20230527 10:55:17.277" endtime="20230527 10:55:17.733"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230527 10:55:17.736" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230527 10:55:18.186" level="INFO">${rc} = 0</msg>
<msg timestamp="20230527 10:55:18.186" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230527 10:55:17.734" endtime="20230527 10:55:18.186"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230527 10:55:18.187" level="INFO"/>
<status status="PASS" starttime="20230527 10:55:18.187" endtime="20230527 10:55:18.187"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230527 10:55:18.188" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230527 10:55:18.188" endtime="20230527 10:55:18.188"/>
</kw>
<status status="PASS" starttime="20230527 10:55:17.733" endtime="20230527 10:55:18.188"/>
</kw>
<msg timestamp="20230527 10:55:18.188" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230527 10:55:17.733" endtime="20230527 10:55:18.189"/>
</kw>
<status status="PASS" starttime="20230527 10:55:17.733" endtime="20230527 10:55:18.189"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230527 10:55:18.192" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230527 10:55:18.649" level="INFO">${rc} = 0</msg>
<msg timestamp="20230527 10:55:18.649" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230527 10:55:18.190" endtime="20230527 10:55:18.649"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230527 10:55:18.650" level="INFO"/>
<status status="PASS" starttime="20230527 10:55:18.649" endtime="20230527 10:55:18.650"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230527 10:55:18.651" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230527 10:55:18.650" endtime="20230527 10:55:18.651"/>
</kw>
<status status="PASS" starttime="20230527 10:55:18.190" endtime="20230527 10:55:18.651"/>
</kw>
<msg timestamp="20230527 10:55:18.651" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230527 10:55:18.190" endtime="20230527 10:55:18.652"/>
</kw>
<status status="PASS" starttime="20230527 10:55:18.189" endtime="20230527 10:55:18.652"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230527 10:55:18.656" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230527 10:55:19.107" level="INFO">${rc} = 0</msg>
<msg timestamp="20230527 10:55:19.107" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230527 10:55:18.653" endtime="20230527 10:55:19.107"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230527 10:55:19.108" level="INFO"/>
<status status="PASS" starttime="20230527 10:55:19.107" endtime="20230527 10:55:19.108"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230527 10:55:19.108" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230527 10:55:19.108" endtime="20230527 10:55:19.109"/>
</kw>
<status status="PASS" starttime="20230527 10:55:18.653" endtime="20230527 10:55:19.109"/>
</kw>
<msg timestamp="20230527 10:55:19.109" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230527 10:55:18.652" endtime="20230527 10:55:19.109"/>
</kw>
<status status="PASS" starttime="20230527 10:55:18.652" endtime="20230527 10:55:19.109"/>
</kw>
<status status="PASS" starttime="20230527 10:55:17.276" endtime="20230527 10:55:19.110"/>
</kw>
<status status="PASS" starttime="20230527 10:55:17.276" endtime="20230527 10:55:19.110"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230527 10:55:17.275" endtime="20230527 10:55:19.110"/>
</test>
<test id="s1-s2-t3" name="Read key created with Ozone Shell using S3 API" line="40">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230527 10:55:19.115" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230527 10:55:19.822" level="INFO">${rc} = 0</msg>
<msg timestamp="20230527 10:55:19.822" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sat, 27 May 2023 10:55:03 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230527 10:55:19.113" endtime="20230527 10:55:19.822"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230527 10:55:19.824" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Sat, 27 May 2023 10:55:03 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Sat, 27 May 2023 10:55:19 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230527 10:55:19.823" endtime="20230527 10:55:19.824"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230527 10:55:19.824" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230527 10:55:19.824" endtime="20230527 10:55:19.825"/>
</kw>
<msg timestamp="20230527 10:55:19.825" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sat, 27 May 2023 10:55:03 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230527 10:55:19.112" endtime="20230527 10:55:19.825"/>
</kw>
<msg timestamp="20230527 10:55:19.825" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sat, 27 May 2023 10:55:03 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230527 10:55:19.111" endtime="20230527 10:55:19.825"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230527 10:55:19.825" endtime="20230527 10:55:19.826"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230527 10:55:19.829" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230527 10:55:19.832" level="INFO">${rc} = 0</msg>
<msg timestamp="20230527 10:55:19.832" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230527 10:55:19.826" endtime="20230527 10:55:19.832"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230527 10:55:19.833" level="INFO">old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230527 10:55:19.832" endtime="20230527 10:55:19.833"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230527 10:55:19.833" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230527 10:55:19.833" endtime="20230527 10:55:19.833"/>
</kw>
<msg timestamp="20230527 10:55:19.834" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230527 10:55:19.826" endtime="20230527 10:55:19.834"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230527 10:55:19.834" endtime="20230527 10:55:19.834"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230527 10:55:19.837" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230527 10:55:19.840" level="INFO">${rc} = 0</msg>
<msg timestamp="20230527 10:55:19.840" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230527 10:55:19.835" endtime="20230527 10:55:19.840"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230527 10:55:19.841" level="INFO"/>
<status status="PASS" starttime="20230527 10:55:19.840" endtime="20230527 10:55:19.841"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230527 10:55:19.841" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230527 10:55:19.841" endtime="20230527 10:55:19.842"/>
</kw>
<status status="PASS" starttime="20230527 10:55:19.835" endtime="20230527 10:55:19.842"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230527 10:55:19.111" endtime="20230527 10:55:19.842"/>
</test>
<test id="s1-s2-t4" name="Read key created with S3 API using S3 API" line="47">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230527 10:55:19.848" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230527 10:55:20.456" level="INFO">${rc} = 0</msg>
<msg timestamp="20230527 10:55:20.456" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sat, 27 May 2023 10:55:09 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230527 10:55:19.846" endtime="20230527 10:55:20.456"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230527 10:55:20.457" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Sat, 27 May 2023 10:55:09 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Sat, 27 May 2023 10:55:20 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230527 10:55:20.457" endtime="20230527 10:55:20.458"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230527 10:55:20.458" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230527 10:55:20.458" endtime="20230527 10:55:20.458"/>
</kw>
<msg timestamp="20230527 10:55:20.458" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sat, 27 May 2023 10:55:09 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230527 10:55:19.845" endtime="20230527 10:55:20.459"/>
</kw>
<msg timestamp="20230527 10:55:20.459" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sat, 27 May 2023 10:55:09 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230527 10:55:19.845" endtime="20230527 10:55:20.459"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230527 10:55:20.459" endtime="20230527 10:55:20.459"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230527 10:55:20.462" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230527 10:55:20.465" level="INFO">${rc} = 0</msg>
<msg timestamp="20230527 10:55:20.465" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20230527 10:55:20.460" endtime="20230527 10:55:20.465"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230527 10:55:20.466" level="INFO">old1: key created using S3 API</msg>
<status status="PASS" starttime="20230527 10:55:20.465" endtime="20230527 10:55:20.466"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230527 10:55:20.467" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230527 10:55:20.466" endtime="20230527 10:55:20.467"/>
</kw>
<msg timestamp="20230527 10:55:20.467" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20230527 10:55:20.460" endtime="20230527 10:55:20.467"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230527 10:55:20.467" endtime="20230527 10:55:20.468"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230527 10:55:20.470" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230527 10:55:20.473" level="INFO">${rc} = 0</msg>
<msg timestamp="20230527 10:55:20.473" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230527 10:55:20.469" endtime="20230527 10:55:20.473"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230527 10:55:20.474" level="INFO"/>
<status status="PASS" starttime="20230527 10:55:20.473" endtime="20230527 10:55:20.474"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230527 10:55:20.474" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230527 10:55:20.474" endtime="20230527 10:55:20.475"/>
</kw>
<status status="PASS" starttime="20230527 10:55:20.468" endtime="20230527 10:55:20.475"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230527 10:55:19.844" endtime="20230527 10:55:20.475"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230527 10:55:12.777" endtime="20230527 10:55:20.477"/>
</suite>
<suite id="s1-s3" name="Prepare" source="/opt/ozone/smoketest/upgrade/prepare.robot">
<test id="s1-s3-t1" name="Prepare Ozone Manager" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230527 10:55:24.199" endtime="20230527 10:55:24.199"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM prepare is skipped for version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230527 10:55:24.199" endtime="20230527 10:55:24.200"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230527 10:55:24.204" level="INFO">Running command 'ozone admin om prepare -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230527 11:00:24.199" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20230527 10:55:24.201" endtime="20230527 11:00:24.199"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230527 11:00:24.200" endtime="20230527 11:00:24.200"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20230527 11:00:24.200" endtime="20230527 11:00:24.200"/>
</kw>
<status status="FAIL" starttime="20230527 10:55:24.200" endtime="20230527 11:00:24.200"/>
</kw>
<msg timestamp="20230527 11:00:24.201" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20230527 10:55:24.200" endtime="20230527 11:00:24.202"/>
</kw>
<status status="FAIL" starttime="20230527 10:55:24.200" endtime="20230527 11:00:24.202"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20230527 11:00:24.202" endtime="20230527 11:00:24.203"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20230527 10:55:24.198" endtime="20230527 11:00:24.203">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Prepares OMs</doc>
<status status="FAIL" starttime="20230527 10:55:24.152" endtime="20230527 11:00:24.205"/>
</suite>
<suite id="s1-s4" name="Check-Finalization" source="/opt/ozone/smoketest/upgrade/check-finalization.robot">
<test id="s1-s4-t1" name="Check OM Finalized" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230527 10:54:36.749" endtime="20230527 10:54:36.750"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>env</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230527 10:54:36.757" level="INFO">Running command 'env 2&gt;&amp;1'.</msg>
<msg timestamp="20230527 10:54:36.759" level="INFO">${rc} = 0</msg>
<msg timestamp="20230527 10:54:36.759" level="INFO">${output} = OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=12c269037144
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/ha...</msg>
<status status="PASS" starttime="20230527 10:54:36.752" endtime="20230527 10:54:36.759"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230527 10:54:36.760" level="INFO">OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=12c269037144
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/hadoop
LD_LIBRARY_PATH=/usr/local/lib
OZONE-SITE.XML_ozone.replication=3
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
ENSURE_SCM_INITIALIZED=/data/metadata/scm/current/VERSION
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OM_SERVICE_ID=omservice
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin
PWD=/opt/hadoop
OZONE-SITE.XML_ozone.scm.container.size=1GB
JAVA_HOME=/usr/lib/jvm/jre/
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE_UPGRADE_FROM=1.3.0
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
SHLVL=1
HOME=/opt/hadoop
OZONE_CONF_DIR=/etc/hadoop
OZONE-SITE.XML_ozone.om.ratis.enable=true
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
OZONE_UPGRADE_TO=1.4.0
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_ozone.scm.ratis.enable=true
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3
_=/usr/bin/env</msg>
<status status="PASS" starttime="20230527 10:54:36.759" endtime="20230527 10:54:36.760"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230527 10:54:36.760" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230527 10:54:36.760" endtime="20230527 10:54:36.761"/>
</kw>
<status status="PASS" starttime="20230527 10:54:36.751" endtime="20230527 10:54:36.761"/>
</kw>
<msg timestamp="20230527 10:54:36.761" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230527 10:54:36.751" endtime="20230527 10:54:36.762"/>
</kw>
<msg timestamp="20230527 10:54:36.762" level="INFO">${result} = OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=12c269037144
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/ha...</msg>
<status status="PASS" starttime="20230527 10:54:36.750" endtime="20230527 10:54:36.762"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230527 10:54:36.763" level="INFO">OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=12c269037144
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/hadoop
LD_LIBRARY_PATH=/usr/local/lib
OZONE-SITE.XML_ozone.replication=3
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
ENSURE_SCM_INITIALIZED=/data/metadata/scm/current/VERSION
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OM_SERVICE_ID=omservice
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin
PWD=/opt/hadoop
OZONE-SITE.XML_ozone.scm.container.size=1GB
JAVA_HOME=/usr/lib/jvm/jre/
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE_UPGRADE_FROM=1.3.0
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
SHLVL=1
HOME=/opt/hadoop
OZONE_CONF_DIR=/etc/hadoop
OZONE-SITE.XML_ozone.om.ratis.enable=true
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
OZONE_UPGRADE_TO=1.4.0
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_ozone.scm.ratis.enable=true
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3
_=/usr/bin/env</msg>
<status status="PASS" starttime="20230527 10:54:36.763" endtime="20230527 10:54:36.763"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230527 10:54:36.763" endtime="20230527 10:54:36.763"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230527 10:54:36.766" level="INFO">Running command 'ozone admin om finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20230527 10:54:39.349" level="INFO">${rc} = 0</msg>
<msg timestamp="20230527 10:54:39.349" level="INFO">${output} = ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20230527 10:54:36.765" endtime="20230527 10:54:39.349"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230527 10:54:39.350" level="INFO">ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20230527 10:54:39.349" endtime="20230527 10:54:39.350"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230527 10:54:39.351" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230527 10:54:39.350" endtime="20230527 10:54:39.351"/>
</kw>
<status status="PASS" starttime="20230527 10:54:36.764" endtime="20230527 10:54:39.351"/>
</kw>
<msg timestamp="20230527 10:54:39.351" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230527 10:54:36.764" endtime="20230527 10:54:39.351"/>
</kw>
<msg timestamp="20230527 10:54:39.352" level="INFO">${result} = ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20230527 10:54:36.763" endtime="20230527 10:54:39.352"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230527 10:54:39.352" level="INFO">ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20230527 10:54:39.352" endtime="20230527 10:54:39.352"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20230527 10:54:39.352" endtime="20230527 10:54:39.353"/>
</kw>
<tag>finalized</tag>
<tag>om</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230527 10:54:36.748" endtime="20230527 10:54:39.353"/>
</test>
<test id="s1-s4-t2" name="Check SCM Finalized" line="32">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230527 10:54:39.355" endtime="20230527 10:54:39.355"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>HDDS finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230527 10:54:39.355" endtime="20230527 10:54:39.355"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230527 10:54:39.359" level="INFO">Running command 'ozone admin scm finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20230527 10:54:41.798" level="INFO">${rc} = 0</msg>
<msg timestamp="20230527 10:54:41.798" level="INFO">${output} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230527 10:54:39.357" endtime="20230527 10:54:41.798"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230527 10:54:41.799" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230527 10:54:41.799" endtime="20230527 10:54:41.800"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230527 10:54:41.800" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230527 10:54:41.800" endtime="20230527 10:54:41.800"/>
</kw>
<status status="PASS" starttime="20230527 10:54:39.356" endtime="20230527 10:54:41.800"/>
</kw>
<msg timestamp="20230527 10:54:41.801" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230527 10:54:39.356" endtime="20230527 10:54:41.801"/>
</kw>
<msg timestamp="20230527 10:54:41.801" level="INFO">${result} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230527 10:54:39.356" endtime="20230527 10:54:41.801"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230527 10:54:41.802" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230527 10:54:41.801" endtime="20230527 10:54:41.802"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20230527 10:54:41.802" endtime="20230527 10:54:41.802"/>
</kw>
<tag>finalized</tag>
<tag>scm</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230527 10:54:39.354" endtime="20230527 10:54:41.803"/>
</test>
<doc>Finalize Upgrade of the Ozone cluster</doc>
<status status="PASS" starttime="20230527 10:54:36.700" endtime="20230527 10:54:41.804"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="336563"/>
</suite>
<statistics>
<total>
<stat pass="13" fail="1" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="2" fail="0" skip="0">create-volume-and-bucket</stat>
<stat pass="2" fail="0" skip="0">finalized</stat>
<stat pass="1" fail="0" skip="0">om</stat>
<stat pass="1" fail="0" skip="0">scm</stat>
</tag>
<suite>
<stat pass="13" fail="1" skip="0" id="s1" name="upgrade">upgrade</stat>
<stat pass="7" fail="0" skip="0" id="s1-s1" name="Generate">upgrade.Generate</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2" name="Validate">upgrade.Validate</stat>
<stat pass="0" fail="1" skip="0" id="s1-s3" name="Prepare">upgrade.Prepare</stat>
<stat pass="2" fail="0" skip="0" id="s1-s4" name="Check-Finalization">upgrade.Check-Finalization</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
