<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.0.2 (Python 3.8.10 on linux)" generated="20230519 07:16:43.640" rpa="false" schemaversion="3">
<suite id="s1" name="upgrade">
<suite id="s1-s1" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s1-t1" name="Create a volume and bucket" line="28">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230519 07:10:23.616" level="INFO">Running command 'ozone sh volume create old1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230519 07:10:26.917" level="INFO">${rc} = 0</msg>
<msg timestamp="20230519 07:10:26.917" level="INFO">${output} = 2023-05-19 07:10:26,774 [main] INFO rpc.RpcClient: Creating Volume: old1-volume, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20230519 07:10:23.611" endtime="20230519 07:10:26.917"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230519 07:10:26.918" level="INFO">2023-05-19 07:10:26,774 [main] INFO rpc.RpcClient: Creating Volume: old1-volume, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20230519 07:10:26.917" endtime="20230519 07:10:26.919"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230519 07:10:26.919" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230519 07:10:26.919" endtime="20230519 07:10:26.920"/>
</kw>
<status status="PASS" starttime="20230519 07:10:23.610" endtime="20230519 07:10:26.920"/>
</kw>
<msg timestamp="20230519 07:10:26.920" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230519 07:10:23.610" endtime="20230519 07:10:26.922"/>
</kw>
<msg timestamp="20230519 07:10:26.923" level="INFO">${output} = 2023-05-19 07:10:26,774 [main] INFO rpc.RpcClient: Creating Volume: old1-volume, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20230519 07:10:23.609" endtime="20230519 07:10:26.923"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230519 07:10:26.923" endtime="20230519 07:10:26.923"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230519 07:10:26.940" level="INFO">Running command 'ozone sh bucket create /old1-volume/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230519 07:10:30.530" level="INFO">${rc} = 0</msg>
<msg timestamp="20230519 07:10:30.530" level="INFO">${output} = 2023-05-19 07:10:30,440 [main] INFO rpc.RpcClient: Creating Bucket: old1-volume/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Enc...</msg>
<status status="PASS" starttime="20230519 07:10:26.936" endtime="20230519 07:10:30.530"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230519 07:10:30.532" level="INFO">2023-05-19 07:10:30,440 [main] INFO rpc.RpcClient: Creating Bucket: old1-volume/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false </msg>
<status status="PASS" starttime="20230519 07:10:30.531" endtime="20230519 07:10:30.532"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230519 07:10:30.533" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230519 07:10:30.532" endtime="20230519 07:10:30.533"/>
</kw>
<status status="PASS" starttime="20230519 07:10:26.935" endtime="20230519 07:10:30.533"/>
</kw>
<msg timestamp="20230519 07:10:30.533" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230519 07:10:26.934" endtime="20230519 07:10:30.534"/>
</kw>
<msg timestamp="20230519 07:10:30.534" level="INFO">${output} = 2023-05-19 07:10:30,440 [main] INFO rpc.RpcClient: Creating Bucket: old1-volume/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Enc...</msg>
<status status="PASS" starttime="20230519 07:10:26.923" endtime="20230519 07:10:30.534"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230519 07:10:30.535" endtime="20230519 07:10:30.535"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230519 07:10:23.608" endtime="20230519 07:10:30.535"/>
</test>
<test id="s1-s1-t2" name="Create key" line="35">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230519 07:10:30.541" level="INFO">Running command 'echo "old1: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230519 07:10:30.543" level="INFO">${rc} = 0</msg>
<msg timestamp="20230519 07:10:30.543" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230519 07:10:30.538" endtime="20230519 07:10:30.543"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230519 07:10:30.545" level="INFO"/>
<status status="PASS" starttime="20230519 07:10:30.544" endtime="20230519 07:10:30.545"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230519 07:10:30.545" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230519 07:10:30.545" endtime="20230519 07:10:30.546"/>
</kw>
<status status="PASS" starttime="20230519 07:10:30.537" endtime="20230519 07:10:30.546"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230519 07:10:30.551" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230519 07:10:38.033" level="INFO">${rc} = 0</msg>
<msg timestamp="20230519 07:10:38.033" level="INFO">${output} = 2023-05-19 07:10:35,089 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-05-19 07:10:35,187 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230519 07:10:30.548" endtime="20230519 07:10:38.033"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230519 07:10:38.035" level="INFO">2023-05-19 07:10:35,089 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-05-19 07:10:35,187 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-05-19 07:10:35,188 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2023-05-19 07:10:35,527 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20230519 07:10:38.034" endtime="20230519 07:10:38.035"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230519 07:10:38.036" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230519 07:10:38.035" endtime="20230519 07:10:38.036"/>
</kw>
<status status="PASS" starttime="20230519 07:10:30.548" endtime="20230519 07:10:38.036"/>
</kw>
<msg timestamp="20230519 07:10:38.036" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230519 07:10:30.547" endtime="20230519 07:10:38.037"/>
</kw>
<msg timestamp="20230519 07:10:38.037" level="INFO">${output} = 2023-05-19 07:10:35,089 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-05-19 07:10:35,187 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230519 07:10:30.546" endtime="20230519 07:10:38.037"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230519 07:10:38.037" endtime="20230519 07:10:38.038"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230519 07:10:38.041" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230519 07:10:38.045" level="INFO">${rc} = 0</msg>
<msg timestamp="20230519 07:10:38.045" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230519 07:10:38.039" endtime="20230519 07:10:38.046"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230519 07:10:38.047" level="INFO"/>
<status status="PASS" starttime="20230519 07:10:38.046" endtime="20230519 07:10:38.047"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230519 07:10:38.048" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230519 07:10:38.047" endtime="20230519 07:10:38.048"/>
</kw>
<status status="PASS" starttime="20230519 07:10:38.038" endtime="20230519 07:10:38.048"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230519 07:10:30.536" endtime="20230519 07:10:38.048"/>
</test>
<test id="s1-s1-t3" name="Create a bucket in s3v volume" line="41">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /s3v/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230519 07:10:38.055" level="INFO">Running command 'ozone sh bucket create /s3v/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230519 07:10:41.449" level="INFO">${rc} = 0</msg>
<msg timestamp="20230519 07:10:41.449" level="INFO">${output} = 2023-05-19 07:10:41,394 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption ...</msg>
<status status="PASS" starttime="20230519 07:10:38.053" endtime="20230519 07:10:41.449"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230519 07:10:41.450" level="INFO">2023-05-19 07:10:41,394 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false </msg>
<status status="PASS" starttime="20230519 07:10:41.449" endtime="20230519 07:10:41.450"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230519 07:10:41.452" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230519 07:10:41.451" endtime="20230519 07:10:41.452"/>
</kw>
<status status="PASS" starttime="20230519 07:10:38.052" endtime="20230519 07:10:41.453"/>
</kw>
<msg timestamp="20230519 07:10:41.453" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230519 07:10:38.052" endtime="20230519 07:10:41.453"/>
</kw>
<msg timestamp="20230519 07:10:41.454" level="INFO">${output} = 2023-05-19 07:10:41,394 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption ...</msg>
<status status="PASS" starttime="20230519 07:10:38.051" endtime="20230519 07:10:41.454"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230519 07:10:41.454" endtime="20230519 07:10:41.455"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230519 07:10:38.050" endtime="20230519 07:10:41.456"/>
</test>
<test id="s1-s1-t4" name="Create key in the bucket in s3v volume" line="46">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: another key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230519 07:10:41.463" level="INFO">Running command 'echo "old1: another key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230519 07:10:41.465" level="INFO">${rc} = 0</msg>
<msg timestamp="20230519 07:10:41.466" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230519 07:10:41.459" endtime="20230519 07:10:41.466"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230519 07:10:41.468" level="INFO"/>
<status status="PASS" starttime="20230519 07:10:41.467" endtime="20230519 07:10:41.468"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230519 07:10:41.469" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230519 07:10:41.468" endtime="20230519 07:10:41.469"/>
</kw>
<status status="PASS" starttime="20230519 07:10:41.458" endtime="20230519 07:10:41.470"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /s3v/${PREFIX}-bucket/key1-shell /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230519 07:10:41.480" level="INFO">Running command 'ozone sh key put /s3v/old1-bucket/key1-shell /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230519 07:10:47.847" level="INFO">${rc} = 0</msg>
<msg timestamp="20230519 07:10:47.847" level="INFO">${output} = 2023-05-19 07:10:45,635 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-05-19 07:10:45,836 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230519 07:10:41.477" endtime="20230519 07:10:47.847"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230519 07:10:47.848" level="INFO">2023-05-19 07:10:45,635 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-05-19 07:10:45,836 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-05-19 07:10:45,836 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2023-05-19 07:10:46,279 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20230519 07:10:47.847" endtime="20230519 07:10:47.849"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230519 07:10:47.850" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230519 07:10:47.849" endtime="20230519 07:10:47.850"/>
</kw>
<status status="PASS" starttime="20230519 07:10:41.476" endtime="20230519 07:10:47.850"/>
</kw>
<msg timestamp="20230519 07:10:47.850" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230519 07:10:41.475" endtime="20230519 07:10:47.851"/>
</kw>
<msg timestamp="20230519 07:10:47.851" level="INFO">${output} = 2023-05-19 07:10:45,635 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-05-19 07:10:45,836 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230519 07:10:41.471" endtime="20230519 07:10:47.851"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230519 07:10:47.851" endtime="20230519 07:10:47.852"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230519 07:10:47.856" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230519 07:10:47.859" level="INFO">${rc} = 0</msg>
<msg timestamp="20230519 07:10:47.859" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230519 07:10:47.853" endtime="20230519 07:10:47.859"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230519 07:10:47.860" level="INFO"/>
<status status="PASS" starttime="20230519 07:10:47.859" endtime="20230519 07:10:47.860"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230519 07:10:47.861" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230519 07:10:47.860" endtime="20230519 07:10:47.861"/>
</kw>
<status status="PASS" starttime="20230519 07:10:47.852" endtime="20230519 07:10:47.862"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230519 07:10:41.457" endtime="20230519 07:10:47.862"/>
</test>
<test id="s1-s1-t5" name="Setup credentials for S3" line="52">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230519 07:10:47.870" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230519 07:10:48.786" level="INFO">${rc} = 0</msg>
<msg timestamp="20230519 07:10:48.787" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230519 07:10:47.868" endtime="20230519 07:10:48.787"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230519 07:10:48.789" level="INFO"/>
<status status="PASS" starttime="20230519 07:10:48.788" endtime="20230519 07:10:48.789"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230519 07:10:48.790" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230519 07:10:48.789" endtime="20230519 07:10:48.790"/>
</kw>
<status status="PASS" starttime="20230519 07:10:47.867" endtime="20230519 07:10:48.791"/>
</kw>
<msg timestamp="20230519 07:10:48.791" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230519 07:10:47.867" endtime="20230519 07:10:48.791"/>
</kw>
<status status="PASS" starttime="20230519 07:10:47.866" endtime="20230519 07:10:48.792"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230519 07:10:48.797" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230519 07:10:49.450" level="INFO">${rc} = 0</msg>
<msg timestamp="20230519 07:10:49.450" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230519 07:10:48.794" endtime="20230519 07:10:49.450"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230519 07:10:49.451" level="INFO"/>
<status status="PASS" starttime="20230519 07:10:49.450" endtime="20230519 07:10:49.452"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230519 07:10:49.452" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230519 07:10:49.452" endtime="20230519 07:10:49.453"/>
</kw>
<status status="PASS" starttime="20230519 07:10:48.793" endtime="20230519 07:10:49.453"/>
</kw>
<msg timestamp="20230519 07:10:49.453" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230519 07:10:48.793" endtime="20230519 07:10:49.454"/>
</kw>
<status status="PASS" starttime="20230519 07:10:48.792" endtime="20230519 07:10:49.454"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230519 07:10:49.461" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230519 07:10:50.144" level="INFO">${rc} = 0</msg>
<msg timestamp="20230519 07:10:50.144" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230519 07:10:49.457" endtime="20230519 07:10:50.144"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230519 07:10:50.146" level="INFO"/>
<status status="PASS" starttime="20230519 07:10:50.145" endtime="20230519 07:10:50.146"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230519 07:10:50.146" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230519 07:10:50.146" endtime="20230519 07:10:50.147"/>
</kw>
<status status="PASS" starttime="20230519 07:10:49.456" endtime="20230519 07:10:50.147"/>
</kw>
<msg timestamp="20230519 07:10:50.147" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230519 07:10:49.456" endtime="20230519 07:10:50.148"/>
</kw>
<status status="PASS" starttime="20230519 07:10:49.455" endtime="20230519 07:10:50.148"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230519 07:10:50.153" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230519 07:10:50.736" level="INFO">${rc} = 0</msg>
<msg timestamp="20230519 07:10:50.737" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230519 07:10:50.150" endtime="20230519 07:10:50.737"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230519 07:10:50.738" level="INFO"/>
<status status="PASS" starttime="20230519 07:10:50.737" endtime="20230519 07:10:50.738"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230519 07:10:50.739" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230519 07:10:50.738" endtime="20230519 07:10:50.739"/>
</kw>
<status status="PASS" starttime="20230519 07:10:50.149" endtime="20230519 07:10:50.739"/>
</kw>
<msg timestamp="20230519 07:10:50.740" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230519 07:10:50.149" endtime="20230519 07:10:50.740"/>
</kw>
<status status="PASS" starttime="20230519 07:10:50.148" endtime="20230519 07:10:50.740"/>
</kw>
<status status="PASS" starttime="20230519 07:10:47.865" endtime="20230519 07:10:50.741"/>
</kw>
<status status="PASS" starttime="20230519 07:10:47.865" endtime="20230519 07:10:50.741"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230519 07:10:47.863" endtime="20230519 07:10:50.741"/>
</test>
<test id="s1-s1-t6" name="Try to create a bucket using S3 API" line="56">
<kw name="Create bucket with name" library="commonawslib">
<var>${output}</var>
<arg>${PREFIX}-bucket</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230519 07:10:50.750" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230519 07:10:53.144" level="INFO">${rc} = 0</msg>
<msg timestamp="20230519 07:10:53.144" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230519 07:10:50.747" endtime="20230519 07:10:53.145"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230519 07:10:53.146" level="INFO">{
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230519 07:10:53.145" endtime="20230519 07:10:53.146"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230519 07:10:53.147" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230519 07:10:53.146" endtime="20230519 07:10:53.147"/>
</kw>
<status status="PASS" starttime="20230519 07:10:50.746" endtime="20230519 07:10:53.147"/>
</kw>
<msg timestamp="20230519 07:10:53.148" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230519 07:10:50.745" endtime="20230519 07:10:53.148"/>
</kw>
<msg timestamp="20230519 07:10:53.149" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230519 07:10:50.744" endtime="20230519 07:10:53.149"/>
</kw>
<msg timestamp="20230519 07:10:53.149" level="INFO">${result} = {
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230519 07:10:50.744" endtime="20230519 07:10:53.149"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230519 07:10:53.150" endtime="20230519 07:10:53.150"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230519 07:10:53.150" endtime="20230519 07:10:53.151"/>
</kw>
<msg timestamp="20230519 07:10:53.151" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20230519 07:10:50.743" endtime="20230519 07:10:53.151"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230519 07:10:53.151" endtime="20230519 07:10:53.152"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230519 07:10:50.742" endtime="20230519 07:10:53.153"/>
</test>
<test id="s1-s1-t7" name="Create key using S3 API" line="61">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using S3 API" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230519 07:10:53.158" level="INFO">Running command 'echo "old1: key created using S3 API" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230519 07:10:53.160" level="INFO">${rc} = 0</msg>
<msg timestamp="20230519 07:10:53.160" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230519 07:10:53.155" endtime="20230519 07:10:53.160"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230519 07:10:53.162" level="INFO"/>
<status status="PASS" starttime="20230519 07:10:53.161" endtime="20230519 07:10:53.162"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230519 07:10:53.162" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230519 07:10:53.162" endtime="20230519 07:10:53.163"/>
</kw>
<status status="PASS" starttime="20230519 07:10:53.155" endtime="20230519 07:10:53.163"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>put-object --bucket ${PREFIX}-bucket --key key2-s3api --body /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230519 07:10:53.168" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket old1-bucket --key key2-s3api --body /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230519 07:10:55.161" level="INFO">${rc} = 0</msg>
<msg timestamp="20230519 07:10:55.162" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230519 07:10:53.166" endtime="20230519 07:10:55.162"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230519 07:10:55.163" level="INFO"/>
<status status="PASS" starttime="20230519 07:10:55.163" endtime="20230519 07:10:55.163"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230519 07:10:55.165" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230519 07:10:55.164" endtime="20230519 07:10:55.165"/>
</kw>
<msg timestamp="20230519 07:10:55.166" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230519 07:10:53.164" endtime="20230519 07:10:55.166"/>
</kw>
<msg timestamp="20230519 07:10:55.166" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230519 07:10:53.163" endtime="20230519 07:10:55.166"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230519 07:10:55.167" endtime="20230519 07:10:55.167"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230519 07:10:55.172" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230519 07:10:55.175" level="INFO">${rc} = 0</msg>
<msg timestamp="20230519 07:10:55.175" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230519 07:10:55.169" endtime="20230519 07:10:55.175"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230519 07:10:55.176" level="INFO"/>
<status status="PASS" starttime="20230519 07:10:55.175" endtime="20230519 07:10:55.176"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230519 07:10:55.177" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230519 07:10:55.176" endtime="20230519 07:10:55.177"/>
</kw>
<status status="PASS" starttime="20230519 07:10:55.168" endtime="20230519 07:10:55.178"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230519 07:10:53.154" endtime="20230519 07:10:55.178"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230519 07:10:23.503" endtime="20230519 07:10:55.180"/>
</suite>
<suite id="s1-s2" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s2-t1" name="Read data from previously created key" line="28">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230519 07:10:59.994" level="INFO">${random} = 33242</msg>
<status status="PASS" starttime="20230519 07:10:59.993" endtime="20230519 07:10:59.994"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230519 07:11:00.001" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-33242 2&gt;&amp;1'.</msg>
<msg timestamp="20230519 07:11:05.766" level="INFO">${rc} = 0</msg>
<msg timestamp="20230519 07:11:05.766" level="INFO">${output} = 2023-05-19 07:11:04,118 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-05-19 07:11:04,282 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230519 07:10:59.997" endtime="20230519 07:11:05.766"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230519 07:11:05.768" level="INFO">2023-05-19 07:11:04,118 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-05-19 07:11:04,282 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-05-19 07:11:04,282 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started</msg>
<status status="PASS" starttime="20230519 07:11:05.767" endtime="20230519 07:11:05.768"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230519 07:11:05.769" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230519 07:11:05.768" endtime="20230519 07:11:05.769"/>
</kw>
<status status="PASS" starttime="20230519 07:10:59.996" endtime="20230519 07:11:05.769"/>
</kw>
<msg timestamp="20230519 07:11:05.769" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230519 07:10:59.995" endtime="20230519 07:11:05.771"/>
</kw>
<msg timestamp="20230519 07:11:05.771" level="INFO">${output} = 2023-05-19 07:11:04,118 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-05-19 07:11:04,282 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230519 07:10:59.994" endtime="20230519 07:11:05.771"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230519 07:11:05.771" endtime="20230519 07:11:05.772"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230519 07:11:05.775" level="INFO">Running command 'cat /tmp/key-33242 2&gt;&amp;1'.</msg>
<msg timestamp="20230519 07:11:05.779" level="INFO">${rc} = 0</msg>
<msg timestamp="20230519 07:11:05.779" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230519 07:11:05.773" endtime="20230519 07:11:05.779"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230519 07:11:05.781" level="INFO">old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230519 07:11:05.779" endtime="20230519 07:11:05.781"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230519 07:11:05.782" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230519 07:11:05.781" endtime="20230519 07:11:05.782"/>
</kw>
<msg timestamp="20230519 07:11:05.783" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230519 07:11:05.772" endtime="20230519 07:11:05.783"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230519 07:11:05.784" endtime="20230519 07:11:05.784"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230519 07:11:05.789" level="INFO">Running command 'rm /tmp/key-33242 2&gt;&amp;1'.</msg>
<msg timestamp="20230519 07:11:05.792" level="INFO">${rc} = 0</msg>
<msg timestamp="20230519 07:11:05.792" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230519 07:11:05.786" endtime="20230519 07:11:05.793"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230519 07:11:05.794" level="INFO"/>
<status status="PASS" starttime="20230519 07:11:05.793" endtime="20230519 07:11:05.794"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230519 07:11:05.794" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230519 07:11:05.794" endtime="20230519 07:11:05.795"/>
</kw>
<status status="PASS" starttime="20230519 07:11:05.785" endtime="20230519 07:11:05.795"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230519 07:10:59.992" endtime="20230519 07:11:05.795"/>
</test>
<test id="s1-s2-t2" name="Setup credentials for S3" line="36">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230519 07:11:05.804" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230519 07:11:06.448" level="INFO">${rc} = 0</msg>
<msg timestamp="20230519 07:11:06.448" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230519 07:11:05.801" endtime="20230519 07:11:06.448"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230519 07:11:06.455" level="INFO"/>
<status status="PASS" starttime="20230519 07:11:06.454" endtime="20230519 07:11:06.455"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230519 07:11:06.456" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230519 07:11:06.456" endtime="20230519 07:11:06.456"/>
</kw>
<status status="PASS" starttime="20230519 07:11:05.801" endtime="20230519 07:11:06.457"/>
</kw>
<msg timestamp="20230519 07:11:06.457" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230519 07:11:05.800" endtime="20230519 07:11:06.457"/>
</kw>
<status status="PASS" starttime="20230519 07:11:05.800" endtime="20230519 07:11:06.458"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230519 07:11:06.462" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230519 07:11:07.032" level="INFO">${rc} = 0</msg>
<msg timestamp="20230519 07:11:07.032" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230519 07:11:06.460" endtime="20230519 07:11:07.032"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230519 07:11:07.034" level="INFO"/>
<status status="PASS" starttime="20230519 07:11:07.033" endtime="20230519 07:11:07.034"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230519 07:11:07.035" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230519 07:11:07.034" endtime="20230519 07:11:07.035"/>
</kw>
<status status="PASS" starttime="20230519 07:11:06.459" endtime="20230519 07:11:07.035"/>
</kw>
<msg timestamp="20230519 07:11:07.035" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230519 07:11:06.459" endtime="20230519 07:11:07.036"/>
</kw>
<status status="PASS" starttime="20230519 07:11:06.458" endtime="20230519 07:11:07.036"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230519 07:11:07.040" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230519 07:11:07.644" level="INFO">${rc} = 0</msg>
<msg timestamp="20230519 07:11:07.644" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230519 07:11:07.038" endtime="20230519 07:11:07.644"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230519 07:11:07.646" level="INFO"/>
<status status="PASS" starttime="20230519 07:11:07.645" endtime="20230519 07:11:07.646"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230519 07:11:07.646" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230519 07:11:07.646" endtime="20230519 07:11:07.647"/>
</kw>
<status status="PASS" starttime="20230519 07:11:07.037" endtime="20230519 07:11:07.647"/>
</kw>
<msg timestamp="20230519 07:11:07.647" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230519 07:11:07.037" endtime="20230519 07:11:07.648"/>
</kw>
<status status="PASS" starttime="20230519 07:11:07.036" endtime="20230519 07:11:07.648"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230519 07:11:07.653" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230519 07:11:08.244" level="INFO">${rc} = 0</msg>
<msg timestamp="20230519 07:11:08.244" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230519 07:11:07.650" endtime="20230519 07:11:08.244"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230519 07:11:08.245" level="INFO"/>
<status status="PASS" starttime="20230519 07:11:08.244" endtime="20230519 07:11:08.245"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230519 07:11:08.246" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230519 07:11:08.245" endtime="20230519 07:11:08.246"/>
</kw>
<status status="PASS" starttime="20230519 07:11:07.649" endtime="20230519 07:11:08.246"/>
</kw>
<msg timestamp="20230519 07:11:08.247" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230519 07:11:07.649" endtime="20230519 07:11:08.247"/>
</kw>
<status status="PASS" starttime="20230519 07:11:07.648" endtime="20230519 07:11:08.247"/>
</kw>
<status status="PASS" starttime="20230519 07:11:05.799" endtime="20230519 07:11:08.248"/>
</kw>
<status status="PASS" starttime="20230519 07:11:05.798" endtime="20230519 07:11:08.248"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230519 07:11:05.797" endtime="20230519 07:11:08.248"/>
</test>
<test id="s1-s2-t3" name="Read key created with Ozone Shell using S3 API" line="40">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230519 07:11:08.254" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230519 07:11:09.171" level="INFO">${rc} = 0</msg>
<msg timestamp="20230519 07:11:09.171" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 19 May 2023 07:10:47 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230519 07:11:08.252" endtime="20230519 07:11:09.171"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230519 07:11:09.172" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 19 May 2023 07:10:47 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 19 May 2023 07:11:08 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230519 07:11:09.172" endtime="20230519 07:11:09.173"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230519 07:11:09.173" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230519 07:11:09.173" endtime="20230519 07:11:09.174"/>
</kw>
<msg timestamp="20230519 07:11:09.174" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 19 May 2023 07:10:47 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230519 07:11:08.251" endtime="20230519 07:11:09.174"/>
</kw>
<msg timestamp="20230519 07:11:09.174" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 19 May 2023 07:10:47 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230519 07:11:08.250" endtime="20230519 07:11:09.175"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230519 07:11:09.175" endtime="20230519 07:11:09.175"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230519 07:11:09.178" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230519 07:11:09.181" level="INFO">${rc} = 0</msg>
<msg timestamp="20230519 07:11:09.181" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230519 07:11:09.176" endtime="20230519 07:11:09.181"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230519 07:11:09.182" level="INFO">old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230519 07:11:09.182" endtime="20230519 07:11:09.183"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230519 07:11:09.183" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230519 07:11:09.183" endtime="20230519 07:11:09.183"/>
</kw>
<msg timestamp="20230519 07:11:09.184" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230519 07:11:09.175" endtime="20230519 07:11:09.184"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230519 07:11:09.184" endtime="20230519 07:11:09.185"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230519 07:11:09.188" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230519 07:11:09.191" level="INFO">${rc} = 0</msg>
<msg timestamp="20230519 07:11:09.191" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230519 07:11:09.186" endtime="20230519 07:11:09.191"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230519 07:11:09.192" level="INFO"/>
<status status="PASS" starttime="20230519 07:11:09.191" endtime="20230519 07:11:09.192"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230519 07:11:09.193" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230519 07:11:09.193" endtime="20230519 07:11:09.193"/>
</kw>
<status status="PASS" starttime="20230519 07:11:09.185" endtime="20230519 07:11:09.194"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230519 07:11:08.249" endtime="20230519 07:11:09.194"/>
</test>
<test id="s1-s2-t4" name="Read key created with S3 API using S3 API" line="47">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230519 07:11:09.200" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230519 07:11:09.978" level="INFO">${rc} = 0</msg>
<msg timestamp="20230519 07:11:09.979" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 19 May 2023 07:10:55 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230519 07:11:09.198" endtime="20230519 07:11:09.979"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230519 07:11:09.980" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 19 May 2023 07:10:55 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Fri, 19 May 2023 07:11:09 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230519 07:11:09.979" endtime="20230519 07:11:09.981"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230519 07:11:09.981" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230519 07:11:09.981" endtime="20230519 07:11:09.982"/>
</kw>
<msg timestamp="20230519 07:11:09.982" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 19 May 2023 07:10:55 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230519 07:11:09.197" endtime="20230519 07:11:09.982"/>
</kw>
<msg timestamp="20230519 07:11:09.983" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Fri, 19 May 2023 07:10:55 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230519 07:11:09.196" endtime="20230519 07:11:09.983"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230519 07:11:09.983" endtime="20230519 07:11:09.984"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230519 07:11:09.987" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230519 07:11:09.990" level="INFO">${rc} = 0</msg>
<msg timestamp="20230519 07:11:09.990" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20230519 07:11:09.985" endtime="20230519 07:11:09.990"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230519 07:11:09.991" level="INFO">old1: key created using S3 API</msg>
<status status="PASS" starttime="20230519 07:11:09.990" endtime="20230519 07:11:09.991"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230519 07:11:09.992" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230519 07:11:09.991" endtime="20230519 07:11:09.992"/>
</kw>
<msg timestamp="20230519 07:11:09.992" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20230519 07:11:09.984" endtime="20230519 07:11:09.992"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230519 07:11:09.993" endtime="20230519 07:11:09.993"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230519 07:11:09.996" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230519 07:11:09.998" level="INFO">${rc} = 0</msg>
<msg timestamp="20230519 07:11:09.999" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230519 07:11:09.994" endtime="20230519 07:11:09.999"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230519 07:11:10.000" level="INFO"/>
<status status="PASS" starttime="20230519 07:11:09.999" endtime="20230519 07:11:10.000"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230519 07:11:10.001" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230519 07:11:10.000" endtime="20230519 07:11:10.001"/>
</kw>
<status status="PASS" starttime="20230519 07:11:09.994" endtime="20230519 07:11:10.001"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230519 07:11:09.195" endtime="20230519 07:11:10.002"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230519 07:10:59.880" endtime="20230519 07:11:10.004"/>
</suite>
<suite id="s1-s3" name="Prepare" source="/opt/ozone/smoketest/upgrade/prepare.robot">
<test id="s1-s3-t1" name="Prepare Ozone Manager" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230519 07:11:14.657" endtime="20230519 07:11:14.658"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM prepare is skipped for version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230519 07:11:14.658" endtime="20230519 07:11:14.658"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230519 07:11:14.667" level="INFO">Running command 'ozone admin om prepare -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230519 07:16:14.658" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20230519 07:11:14.660" endtime="20230519 07:16:14.658"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230519 07:16:14.660" endtime="20230519 07:16:14.660"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20230519 07:16:14.660" endtime="20230519 07:16:14.660"/>
</kw>
<status status="FAIL" starttime="20230519 07:11:14.659" endtime="20230519 07:16:14.661"/>
</kw>
<msg timestamp="20230519 07:16:14.661" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20230519 07:11:14.659" endtime="20230519 07:16:14.663"/>
</kw>
<status status="FAIL" starttime="20230519 07:11:14.658" endtime="20230519 07:16:14.663"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20230519 07:16:14.663" endtime="20230519 07:16:14.664"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20230519 07:11:14.656" endtime="20230519 07:16:14.664">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Prepares OMs</doc>
<status status="FAIL" starttime="20230519 07:11:14.593" endtime="20230519 07:16:14.667"/>
</suite>
<suite id="s1-s4" name="Check-Finalization" source="/opt/ozone/smoketest/upgrade/check-finalization.robot">
<test id="s1-s4-t1" name="Check OM Finalized" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230519 07:10:11.763" endtime="20230519 07:10:11.763"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>env</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230519 07:10:11.771" level="INFO">Running command 'env 2&gt;&amp;1'.</msg>
<msg timestamp="20230519 07:10:11.774" level="INFO">${rc} = 0</msg>
<msg timestamp="20230519 07:10:11.774" level="INFO">${output} = OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=85c08b8775e5
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/ha...</msg>
<status status="PASS" starttime="20230519 07:10:11.765" endtime="20230519 07:10:11.774"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230519 07:10:11.775" level="INFO">OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=85c08b8775e5
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/hadoop
LD_LIBRARY_PATH=/usr/local/lib
OZONE-SITE.XML_ozone.replication=3
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
ENSURE_SCM_INITIALIZED=/data/metadata/scm/current/VERSION
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OM_SERVICE_ID=omservice
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin
PWD=/opt/hadoop
OZONE-SITE.XML_ozone.scm.container.size=1GB
JAVA_HOME=/usr/lib/jvm/jre/
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE_UPGRADE_FROM=1.3.0
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
SHLVL=1
HOME=/opt/hadoop
OZONE_CONF_DIR=/etc/hadoop
OZONE-SITE.XML_ozone.om.ratis.enable=true
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
OZONE_UPGRADE_TO=1.4.0
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_ozone.scm.ratis.enable=true
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3
_=/usr/bin/env</msg>
<status status="PASS" starttime="20230519 07:10:11.774" endtime="20230519 07:10:11.775"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230519 07:10:11.776" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230519 07:10:11.776" endtime="20230519 07:10:11.777"/>
</kw>
<status status="PASS" starttime="20230519 07:10:11.764" endtime="20230519 07:10:11.777"/>
</kw>
<msg timestamp="20230519 07:10:11.777" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230519 07:10:11.764" endtime="20230519 07:10:11.779"/>
</kw>
<msg timestamp="20230519 07:10:11.779" level="INFO">${result} = OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=85c08b8775e5
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/ha...</msg>
<status status="PASS" starttime="20230519 07:10:11.763" endtime="20230519 07:10:11.779"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230519 07:10:11.780" level="INFO">OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=85c08b8775e5
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/hadoop
LD_LIBRARY_PATH=/usr/local/lib
OZONE-SITE.XML_ozone.replication=3
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
ENSURE_SCM_INITIALIZED=/data/metadata/scm/current/VERSION
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OM_SERVICE_ID=omservice
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin
PWD=/opt/hadoop
OZONE-SITE.XML_ozone.scm.container.size=1GB
JAVA_HOME=/usr/lib/jvm/jre/
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE_UPGRADE_FROM=1.3.0
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
SHLVL=1
HOME=/opt/hadoop
OZONE_CONF_DIR=/etc/hadoop
OZONE-SITE.XML_ozone.om.ratis.enable=true
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
OZONE_UPGRADE_TO=1.4.0
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_ozone.scm.ratis.enable=true
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3
_=/usr/bin/env</msg>
<status status="PASS" starttime="20230519 07:10:11.779" endtime="20230519 07:10:11.780"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230519 07:10:11.780" endtime="20230519 07:10:11.781"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230519 07:10:11.786" level="INFO">Running command 'ozone admin om finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20230519 07:10:15.241" level="INFO">${rc} = 0</msg>
<msg timestamp="20230519 07:10:15.241" level="INFO">${output} = ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20230519 07:10:11.783" endtime="20230519 07:10:15.241"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230519 07:10:15.243" level="INFO">ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20230519 07:10:15.241" endtime="20230519 07:10:15.243"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230519 07:10:15.244" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230519 07:10:15.243" endtime="20230519 07:10:15.244"/>
</kw>
<status status="PASS" starttime="20230519 07:10:11.782" endtime="20230519 07:10:15.244"/>
</kw>
<msg timestamp="20230519 07:10:15.245" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230519 07:10:11.781" endtime="20230519 07:10:15.245"/>
</kw>
<msg timestamp="20230519 07:10:15.246" level="INFO">${result} = ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20230519 07:10:11.781" endtime="20230519 07:10:15.246"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230519 07:10:15.247" level="INFO">ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20230519 07:10:15.247" endtime="20230519 07:10:15.247"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20230519 07:10:15.247" endtime="20230519 07:10:15.248"/>
</kw>
<tag>finalized</tag>
<tag>om</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230519 07:10:11.761" endtime="20230519 07:10:15.248"/>
</test>
<test id="s1-s4-t2" name="Check SCM Finalized" line="32">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230519 07:10:15.251" endtime="20230519 07:10:15.251"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>HDDS finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230519 07:10:15.252" endtime="20230519 07:10:15.252"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230519 07:10:15.258" level="INFO">Running command 'ozone admin scm finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20230519 07:10:18.817" level="INFO">${rc} = 0</msg>
<msg timestamp="20230519 07:10:18.817" level="INFO">${output} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230519 07:10:15.255" endtime="20230519 07:10:18.817"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230519 07:10:18.819" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230519 07:10:18.818" endtime="20230519 07:10:18.819"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230519 07:10:18.820" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230519 07:10:18.819" endtime="20230519 07:10:18.820"/>
</kw>
<status status="PASS" starttime="20230519 07:10:15.254" endtime="20230519 07:10:18.820"/>
</kw>
<msg timestamp="20230519 07:10:18.820" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230519 07:10:15.253" endtime="20230519 07:10:18.821"/>
</kw>
<msg timestamp="20230519 07:10:18.822" level="INFO">${result} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230519 07:10:15.253" endtime="20230519 07:10:18.822"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230519 07:10:18.822" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230519 07:10:18.822" endtime="20230519 07:10:18.822"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20230519 07:10:18.822" endtime="20230519 07:10:18.823"/>
</kw>
<tag>finalized</tag>
<tag>scm</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230519 07:10:15.249" endtime="20230519 07:10:18.823"/>
</test>
<doc>Finalize Upgrade of the Ozone cluster</doc>
<status status="PASS" starttime="20230519 07:10:11.693" endtime="20230519 07:10:18.826"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="349008"/>
</suite>
<statistics>
<total>
<stat pass="13" fail="1" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="2" fail="0" skip="0">create-volume-and-bucket</stat>
<stat pass="2" fail="0" skip="0">finalized</stat>
<stat pass="1" fail="0" skip="0">om</stat>
<stat pass="1" fail="0" skip="0">scm</stat>
</tag>
<suite>
<stat pass="13" fail="1" skip="0" id="s1" name="upgrade">upgrade</stat>
<stat pass="7" fail="0" skip="0" id="s1-s1" name="Generate">upgrade.Generate</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2" name="Validate">upgrade.Validate</stat>
<stat pass="0" fail="1" skip="0" id="s1-s3" name="Prepare">upgrade.Prepare</stat>
<stat pass="2" fail="0" skip="0" id="s1-s4" name="Check-Finalization">upgrade.Check-Finalization</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
