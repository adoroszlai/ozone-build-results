<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.0.2 (Python 3.8.10 on linux)" generated="20230531 08:36:52.449" rpa="false" schemaversion="3">
<suite id="s1" name="ozone-legacy-bucket" source="/opt/hadoop/smoketest/recon/recon-nssummary.robot">
<test id="s1-t1" name="Check volume creation" line="99">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230531 08:36:04.448" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230531 08:36:04.452" level="INFO">${rc} = 0</msg>
<msg timestamp="20230531 08:36:04.452" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230531 08:36:04.444" endtime="20230531 08:36:04.452"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230531 08:36:04.454" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230531 08:36:04.453" endtime="20230531 08:36:04.454"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230531 08:36:04.454" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230531 08:36:04.454" endtime="20230531 08:36:04.454"/>
</kw>
<status status="PASS" starttime="20230531 08:36:04.443" endtime="20230531 08:36:04.455"/>
</kw>
<msg timestamp="20230531 08:36:04.455" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230531 08:36:04.443" endtime="20230531 08:36:04.456"/>
</kw>
<status status="PASS" starttime="20230531 08:36:04.442" endtime="20230531 08:36:04.456"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230531 08:36:04.457" endtime="20230531 08:36:04.457"/>
</kw>
<status status="PASS" starttime="20230531 08:36:04.456" endtime="20230531 08:36:04.458"/>
</kw>
<kw name="Create volume">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230531 08:36:04.459" level="INFO">${random} = ypfrg</msg>
<status status="PASS" starttime="20230531 08:36:04.459" endtime="20230531 08:36:04.459"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${VOLUME}</arg>
<arg>vol-${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230531 08:36:04.460" level="INFO">${VOLUME} = vol-ypfrg</msg>
<status status="PASS" starttime="20230531 08:36:04.459" endtime="20230531 08:36:04.460"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${VOLUME}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230531 08:36:04.464" level="INFO">Running command 'ozone sh volume create /vol-ypfrg 2&gt;&amp;1'.</msg>
<msg timestamp="20230531 08:36:13.077" level="INFO">${rc} = 0</msg>
<msg timestamp="20230531 08:36:13.077" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230531 08:36:04.462" endtime="20230531 08:36:13.077"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230531 08:36:13.078" level="INFO"/>
<status status="PASS" starttime="20230531 08:36:13.078" endtime="20230531 08:36:13.078"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230531 08:36:13.081" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230531 08:36:13.079" endtime="20230531 08:36:13.081"/>
</kw>
<status status="PASS" starttime="20230531 08:36:04.461" endtime="20230531 08:36:13.082"/>
</kw>
<msg timestamp="20230531 08:36:13.082" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230531 08:36:04.461" endtime="20230531 08:36:13.082"/>
</kw>
<msg timestamp="20230531 08:36:13.083" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230531 08:36:04.460" endtime="20230531 08:36:13.083"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230531 08:36:13.083" endtime="20230531 08:36:13.083"/>
</kw>
<status status="PASS" starttime="20230531 08:36:04.458" endtime="20230531 08:36:13.083"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230531 08:36:04.441" endtime="20230531 08:36:13.084"/>
</test>
<test id="s1-t2" name="Check bucket creation" line="104">
<kw name="Create bucket">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[LOWER]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230531 08:36:13.086" level="INFO">${random} = bkhdp</msg>
<status status="PASS" starttime="20230531 08:36:13.085" endtime="20230531 08:36:13.086"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BUCKET}</arg>
<arg>buc-${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230531 08:36:13.087" level="INFO">${BUCKET} = buc-bkhdp</msg>
<status status="PASS" starttime="20230531 08:36:13.086" endtime="20230531 08:36:13.087"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket create -l ${BUCKET_LAYOUT} /${VOLUME}/${BUCKET}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230531 08:36:13.091" level="INFO">Running command 'ozone sh bucket create -l LEGACY /vol-ypfrg/buc-bkhdp 2&gt;&amp;1'.</msg>
<msg timestamp="20230531 08:36:17.798" level="INFO">${rc} = 0</msg>
<msg timestamp="20230531 08:36:17.798" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230531 08:36:13.088" endtime="20230531 08:36:17.798"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230531 08:36:17.799" level="INFO"/>
<status status="PASS" starttime="20230531 08:36:17.798" endtime="20230531 08:36:17.799"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230531 08:36:17.800" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230531 08:36:17.799" endtime="20230531 08:36:17.800"/>
</kw>
<status status="PASS" starttime="20230531 08:36:13.088" endtime="20230531 08:36:17.801"/>
</kw>
<msg timestamp="20230531 08:36:17.801" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230531 08:36:13.087" endtime="20230531 08:36:17.801"/>
</kw>
<msg timestamp="20230531 08:36:17.801" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230531 08:36:13.087" endtime="20230531 08:36:17.801"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230531 08:36:17.802" endtime="20230531 08:36:17.802"/>
</kw>
<status status="PASS" starttime="20230531 08:36:13.085" endtime="20230531 08:36:17.802"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230531 08:36:13.084" endtime="20230531 08:36:17.802"/>
</test>
<test id="s1-t3" name="Check keys creation" line="107">
<kw name="Create keys">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${VOLUME}/${BUCKET}/file1 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230531 08:36:17.808" level="INFO">Running command 'ozone sh key put /vol-ypfrg/buc-bkhdp/file1 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20230531 08:36:27.682" level="INFO">${rc} = 0</msg>
<msg timestamp="20230531 08:36:27.682" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230531 08:36:17.805" endtime="20230531 08:36:27.682"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230531 08:36:27.684" level="INFO"/>
<status status="PASS" starttime="20230531 08:36:27.683" endtime="20230531 08:36:27.684"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230531 08:36:27.684" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230531 08:36:27.684" endtime="20230531 08:36:27.684"/>
</kw>
<status status="PASS" starttime="20230531 08:36:17.805" endtime="20230531 08:36:27.684"/>
</kw>
<msg timestamp="20230531 08:36:27.685" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230531 08:36:17.804" endtime="20230531 08:36:27.685"/>
</kw>
<msg timestamp="20230531 08:36:27.685" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230531 08:36:17.804" endtime="20230531 08:36:27.685"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230531 08:36:27.685" endtime="20230531 08:36:27.686"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${VOLUME}/${BUCKET}/dir1/dir2/file2 HISTORY.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230531 08:36:27.689" level="INFO">Running command 'ozone sh key put /vol-ypfrg/buc-bkhdp/dir1/dir2/file2 HISTORY.md 2&gt;&amp;1'.</msg>
<msg timestamp="20230531 08:36:35.350" level="INFO">${rc} = 0</msg>
<msg timestamp="20230531 08:36:35.351" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230531 08:36:27.687" endtime="20230531 08:36:35.351"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230531 08:36:35.352" level="INFO"/>
<status status="PASS" starttime="20230531 08:36:35.351" endtime="20230531 08:36:35.352"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230531 08:36:35.352" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230531 08:36:35.352" endtime="20230531 08:36:35.352"/>
</kw>
<status status="PASS" starttime="20230531 08:36:27.687" endtime="20230531 08:36:35.353"/>
</kw>
<msg timestamp="20230531 08:36:35.353" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230531 08:36:27.686" endtime="20230531 08:36:35.353"/>
</kw>
<msg timestamp="20230531 08:36:35.353" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230531 08:36:27.686" endtime="20230531 08:36:35.354"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230531 08:36:35.354" endtime="20230531 08:36:35.354"/>
</kw>
<status status="PASS" starttime="20230531 08:36:17.804" endtime="20230531 08:36:35.354"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230531 08:36:17.803" endtime="20230531 08:36:35.354"/>
</test>
<test id="s1-t4" name="Check Summary api access" line="110">
<kw name="Check Access">
<arg>${SUMMARY_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230531 08:36:35.362" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230531 08:36:35.369" level="INFO">${rc} = 0</msg>
<msg timestamp="20230531 08:36:35.369" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230531 08:36:35.359" endtime="20230531 08:36:35.369"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230531 08:36:35.371" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230531 08:36:35.370" endtime="20230531 08:36:35.371"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230531 08:36:35.371" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230531 08:36:35.371" endtime="20230531 08:36:35.372"/>
</kw>
<status status="PASS" starttime="20230531 08:36:35.359" endtime="20230531 08:36:35.372"/>
</kw>
<msg timestamp="20230531 08:36:35.372" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230531 08:36:35.358" endtime="20230531 08:36:35.373"/>
</kw>
<status status="PASS" starttime="20230531 08:36:35.358" endtime="20230531 08:36:35.373"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230531 08:36:35.377" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230531 08:36:35.654" level="INFO">${rc} = 0</msg>
<msg timestamp="20230531 08:36:35.654" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230531 08:36:35.375" endtime="20230531 08:36:35.654"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230531 08:36:35.655" level="INFO">200</msg>
<status status="PASS" starttime="20230531 08:36:35.654" endtime="20230531 08:36:35.655"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230531 08:36:35.656" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230531 08:36:35.655" endtime="20230531 08:36:35.656"/>
</kw>
<status status="PASS" starttime="20230531 08:36:35.374" endtime="20230531 08:36:35.656"/>
</kw>
<msg timestamp="20230531 08:36:35.656" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230531 08:36:35.374" endtime="20230531 08:36:35.657"/>
</kw>
<msg timestamp="20230531 08:36:35.657" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230531 08:36:35.373" endtime="20230531 08:36:35.657"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230531 08:36:35.658" endtime="20230531 08:36:35.658"/>
</kw>
<status status="NOT RUN" starttime="20230531 08:36:35.657" endtime="20230531 08:36:35.658"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230531 08:36:35.658" endtime="20230531 08:36:35.658"/>
</kw>
<status status="PASS" starttime="20230531 08:36:35.658" endtime="20230531 08:36:35.658"/>
</branch>
<status status="PASS" starttime="20230531 08:36:35.657" endtime="20230531 08:36:35.658"/>
</if>
<status status="PASS" starttime="20230531 08:36:35.373" endtime="20230531 08:36:35.658"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230531 08:36:35.659" endtime="20230531 08:36:35.659"/>
</kw>
<status status="PASS" starttime="20230531 08:36:35.658" endtime="20230531 08:36:35.659"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230531 08:36:35.665" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230531 08:36:35.682" level="INFO">${rc} = 0</msg>
<msg timestamp="20230531 08:36:35.682" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230531 08:36:35.662" endtime="20230531 08:36:35.682"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230531 08:36:35.684" level="INFO">200</msg>
<status status="PASS" starttime="20230531 08:36:35.683" endtime="20230531 08:36:35.684"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230531 08:36:35.684" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230531 08:36:35.684" endtime="20230531 08:36:35.684"/>
</kw>
<status status="PASS" starttime="20230531 08:36:35.662" endtime="20230531 08:36:35.685"/>
</kw>
<msg timestamp="20230531 08:36:35.685" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230531 08:36:35.662" endtime="20230531 08:36:35.685"/>
</kw>
<msg timestamp="20230531 08:36:35.686" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230531 08:36:35.661" endtime="20230531 08:36:35.686"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230531 08:36:35.686" endtime="20230531 08:36:35.686"/>
</kw>
<status status="NOT RUN" starttime="20230531 08:36:35.686" endtime="20230531 08:36:35.686"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230531 08:36:35.686" endtime="20230531 08:36:35.687"/>
</kw>
<status status="PASS" starttime="20230531 08:36:35.686" endtime="20230531 08:36:35.688"/>
</branch>
<status status="PASS" starttime="20230531 08:36:35.686" endtime="20230531 08:36:35.688"/>
</if>
<status status="PASS" starttime="20230531 08:36:35.659" endtime="20230531 08:36:35.688"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230531 08:36:35.688" endtime="20230531 08:36:35.690"/>
</kw>
<status status="PASS" starttime="20230531 08:36:35.688" endtime="20230531 08:36:35.690"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230531 08:36:35.695" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230531 08:36:35.720" level="INFO">${rc} = 0</msg>
<msg timestamp="20230531 08:36:35.720" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230531 08:36:35.692" endtime="20230531 08:36:35.720"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230531 08:36:35.721" level="INFO">200</msg>
<status status="PASS" starttime="20230531 08:36:35.721" endtime="20230531 08:36:35.722"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230531 08:36:35.722" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230531 08:36:35.722" endtime="20230531 08:36:35.722"/>
</kw>
<status status="PASS" starttime="20230531 08:36:35.692" endtime="20230531 08:36:35.723"/>
</kw>
<msg timestamp="20230531 08:36:35.723" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230531 08:36:35.691" endtime="20230531 08:36:35.723"/>
</kw>
<msg timestamp="20230531 08:36:35.728" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230531 08:36:35.691" endtime="20230531 08:36:35.728"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230531 08:36:35.728" endtime="20230531 08:36:35.728"/>
</kw>
<status status="NOT RUN" starttime="20230531 08:36:35.728" endtime="20230531 08:36:35.728"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230531 08:36:35.729" endtime="20230531 08:36:35.729"/>
</kw>
<status status="PASS" starttime="20230531 08:36:35.728" endtime="20230531 08:36:35.729"/>
</branch>
<status status="PASS" starttime="20230531 08:36:35.728" endtime="20230531 08:36:35.729"/>
</if>
<status status="PASS" starttime="20230531 08:36:35.690" endtime="20230531 08:36:35.731"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230531 08:36:35.732" endtime="20230531 08:36:35.732"/>
</kw>
<status status="PASS" starttime="20230531 08:36:35.731" endtime="20230531 08:36:35.732"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230531 08:36:35.741" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230531 08:36:35.760" level="INFO">${rc} = 0</msg>
<msg timestamp="20230531 08:36:35.760" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230531 08:36:35.738" endtime="20230531 08:36:35.760"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230531 08:36:35.763" level="INFO">200</msg>
<status status="PASS" starttime="20230531 08:36:35.761" endtime="20230531 08:36:35.765"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230531 08:36:35.765" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230531 08:36:35.765" endtime="20230531 08:36:35.765"/>
</kw>
<status status="PASS" starttime="20230531 08:36:35.733" endtime="20230531 08:36:35.766"/>
</kw>
<msg timestamp="20230531 08:36:35.766" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230531 08:36:35.733" endtime="20230531 08:36:35.766"/>
</kw>
<msg timestamp="20230531 08:36:35.766" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230531 08:36:35.733" endtime="20230531 08:36:35.767"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230531 08:36:35.767" endtime="20230531 08:36:35.767"/>
</kw>
<status status="NOT RUN" starttime="20230531 08:36:35.767" endtime="20230531 08:36:35.767"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230531 08:36:35.767" endtime="20230531 08:36:35.768"/>
</kw>
<status status="PASS" starttime="20230531 08:36:35.767" endtime="20230531 08:36:35.768"/>
</branch>
<status status="PASS" starttime="20230531 08:36:35.767" endtime="20230531 08:36:35.768"/>
</if>
<status status="PASS" starttime="20230531 08:36:35.732" endtime="20230531 08:36:35.768"/>
</kw>
<status status="PASS" starttime="20230531 08:36:35.357" endtime="20230531 08:36:35.768"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230531 08:36:35.356" endtime="20230531 08:36:35.768"/>
</test>
<test id="s1-t5" name="Check Disk Usage api access" line="113">
<kw name="Check Access">
<arg>${DISK_USAGE_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230531 08:36:35.775" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230531 08:36:35.779" level="INFO">${rc} = 0</msg>
<msg timestamp="20230531 08:36:35.779" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230531 08:36:35.773" endtime="20230531 08:36:35.779"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230531 08:36:35.780" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230531 08:36:35.779" endtime="20230531 08:36:35.781"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230531 08:36:35.781" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230531 08:36:35.781" endtime="20230531 08:36:35.781"/>
</kw>
<status status="PASS" starttime="20230531 08:36:35.772" endtime="20230531 08:36:35.782"/>
</kw>
<msg timestamp="20230531 08:36:35.782" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230531 08:36:35.772" endtime="20230531 08:36:35.782"/>
</kw>
<status status="PASS" starttime="20230531 08:36:35.772" endtime="20230531 08:36:35.782"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230531 08:36:35.786" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230531 08:36:35.807" level="INFO">${rc} = 0</msg>
<msg timestamp="20230531 08:36:35.807" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230531 08:36:35.784" endtime="20230531 08:36:35.807"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230531 08:36:35.808" level="INFO">200</msg>
<status status="PASS" starttime="20230531 08:36:35.808" endtime="20230531 08:36:35.809"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230531 08:36:35.809" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230531 08:36:35.809" endtime="20230531 08:36:35.809"/>
</kw>
<status status="PASS" starttime="20230531 08:36:35.784" endtime="20230531 08:36:35.810"/>
</kw>
<msg timestamp="20230531 08:36:35.810" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230531 08:36:35.783" endtime="20230531 08:36:35.811"/>
</kw>
<msg timestamp="20230531 08:36:35.811" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230531 08:36:35.783" endtime="20230531 08:36:35.811"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230531 08:36:35.811" endtime="20230531 08:36:35.811"/>
</kw>
<status status="NOT RUN" starttime="20230531 08:36:35.811" endtime="20230531 08:36:35.811"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230531 08:36:35.817" endtime="20230531 08:36:35.818"/>
</kw>
<status status="PASS" starttime="20230531 08:36:35.812" endtime="20230531 08:36:35.818"/>
</branch>
<status status="PASS" starttime="20230531 08:36:35.811" endtime="20230531 08:36:35.818"/>
</if>
<status status="PASS" starttime="20230531 08:36:35.782" endtime="20230531 08:36:35.818"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230531 08:36:35.818" endtime="20230531 08:36:35.819"/>
</kw>
<status status="PASS" starttime="20230531 08:36:35.818" endtime="20230531 08:36:35.819"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230531 08:36:35.823" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230531 08:36:35.839" level="INFO">${rc} = 0</msg>
<msg timestamp="20230531 08:36:35.839" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230531 08:36:35.821" endtime="20230531 08:36:35.839"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230531 08:36:35.840" level="INFO">200</msg>
<status status="PASS" starttime="20230531 08:36:35.839" endtime="20230531 08:36:35.840"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230531 08:36:35.841" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230531 08:36:35.841" endtime="20230531 08:36:35.841"/>
</kw>
<status status="PASS" starttime="20230531 08:36:35.820" endtime="20230531 08:36:35.841"/>
</kw>
<msg timestamp="20230531 08:36:35.842" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230531 08:36:35.820" endtime="20230531 08:36:35.842"/>
</kw>
<msg timestamp="20230531 08:36:35.842" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230531 08:36:35.819" endtime="20230531 08:36:35.842"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230531 08:36:35.843" endtime="20230531 08:36:35.843"/>
</kw>
<status status="NOT RUN" starttime="20230531 08:36:35.843" endtime="20230531 08:36:35.843"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230531 08:36:35.843" endtime="20230531 08:36:35.844"/>
</kw>
<status status="PASS" starttime="20230531 08:36:35.843" endtime="20230531 08:36:35.844"/>
</branch>
<status status="PASS" starttime="20230531 08:36:35.843" endtime="20230531 08:36:35.844"/>
</if>
<status status="PASS" starttime="20230531 08:36:35.819" endtime="20230531 08:36:35.844"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230531 08:36:35.844" endtime="20230531 08:36:35.845"/>
</kw>
<status status="PASS" starttime="20230531 08:36:35.844" endtime="20230531 08:36:35.845"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230531 08:36:35.849" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230531 08:36:35.864" level="INFO">${rc} = 0</msg>
<msg timestamp="20230531 08:36:35.864" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230531 08:36:35.847" endtime="20230531 08:36:35.864"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230531 08:36:35.865" level="INFO">200</msg>
<status status="PASS" starttime="20230531 08:36:35.865" endtime="20230531 08:36:35.865"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230531 08:36:35.866" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230531 08:36:35.865" endtime="20230531 08:36:35.866"/>
</kw>
<status status="PASS" starttime="20230531 08:36:35.846" endtime="20230531 08:36:35.866"/>
</kw>
<msg timestamp="20230531 08:36:35.866" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230531 08:36:35.846" endtime="20230531 08:36:35.867"/>
</kw>
<msg timestamp="20230531 08:36:35.867" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230531 08:36:35.846" endtime="20230531 08:36:35.867"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230531 08:36:35.868" endtime="20230531 08:36:35.868"/>
</kw>
<status status="NOT RUN" starttime="20230531 08:36:35.867" endtime="20230531 08:36:35.868"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230531 08:36:35.868" endtime="20230531 08:36:35.869"/>
</kw>
<status status="PASS" starttime="20230531 08:36:35.868" endtime="20230531 08:36:35.869"/>
</branch>
<status status="PASS" starttime="20230531 08:36:35.867" endtime="20230531 08:36:35.869"/>
</if>
<status status="PASS" starttime="20230531 08:36:35.845" endtime="20230531 08:36:35.869"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230531 08:36:35.870" endtime="20230531 08:36:35.870"/>
</kw>
<status status="PASS" starttime="20230531 08:36:35.869" endtime="20230531 08:36:35.870"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230531 08:36:35.874" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/du?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230531 08:36:35.888" level="INFO">${rc} = 0</msg>
<msg timestamp="20230531 08:36:35.888" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230531 08:36:35.872" endtime="20230531 08:36:35.888"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230531 08:36:35.890" level="INFO">200</msg>
<status status="PASS" starttime="20230531 08:36:35.889" endtime="20230531 08:36:35.890"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230531 08:36:35.890" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230531 08:36:35.890" endtime="20230531 08:36:35.891"/>
</kw>
<status status="PASS" starttime="20230531 08:36:35.872" endtime="20230531 08:36:35.891"/>
</kw>
<msg timestamp="20230531 08:36:35.891" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230531 08:36:35.871" endtime="20230531 08:36:35.891"/>
</kw>
<msg timestamp="20230531 08:36:35.892" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230531 08:36:35.871" endtime="20230531 08:36:35.892"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230531 08:36:35.892" endtime="20230531 08:36:35.892"/>
</kw>
<status status="NOT RUN" starttime="20230531 08:36:35.892" endtime="20230531 08:36:35.892"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230531 08:36:35.892" endtime="20230531 08:36:35.893"/>
</kw>
<status status="PASS" starttime="20230531 08:36:35.892" endtime="20230531 08:36:35.893"/>
</branch>
<status status="PASS" starttime="20230531 08:36:35.892" endtime="20230531 08:36:35.893"/>
</if>
<status status="PASS" starttime="20230531 08:36:35.870" endtime="20230531 08:36:35.893"/>
</kw>
<status status="PASS" starttime="20230531 08:36:35.771" endtime="20230531 08:36:35.893"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230531 08:36:35.770" endtime="20230531 08:36:35.893"/>
</test>
<test id="s1-t6" name="Check Quota Usage api access" line="116">
<kw name="Check Access">
<arg>${QUOTA_USAGE_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230531 08:36:35.900" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230531 08:36:35.903" level="INFO">${rc} = 0</msg>
<msg timestamp="20230531 08:36:35.903" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230531 08:36:35.897" endtime="20230531 08:36:35.903"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230531 08:36:35.904" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230531 08:36:35.904" endtime="20230531 08:36:35.904"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230531 08:36:35.905" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230531 08:36:35.904" endtime="20230531 08:36:35.905"/>
</kw>
<status status="PASS" starttime="20230531 08:36:35.897" endtime="20230531 08:36:35.905"/>
</kw>
<msg timestamp="20230531 08:36:35.905" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230531 08:36:35.896" endtime="20230531 08:36:35.906"/>
</kw>
<status status="PASS" starttime="20230531 08:36:35.896" endtime="20230531 08:36:35.906"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230531 08:36:35.911" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230531 08:36:35.936" level="INFO">${rc} = 0</msg>
<msg timestamp="20230531 08:36:35.936" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230531 08:36:35.909" endtime="20230531 08:36:35.936"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230531 08:36:35.937" level="INFO">200</msg>
<status status="PASS" starttime="20230531 08:36:35.936" endtime="20230531 08:36:35.937"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230531 08:36:35.938" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230531 08:36:35.937" endtime="20230531 08:36:35.938"/>
</kw>
<status status="PASS" starttime="20230531 08:36:35.907" endtime="20230531 08:36:35.938"/>
</kw>
<msg timestamp="20230531 08:36:35.938" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230531 08:36:35.907" endtime="20230531 08:36:35.939"/>
</kw>
<msg timestamp="20230531 08:36:35.939" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230531 08:36:35.907" endtime="20230531 08:36:35.939"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230531 08:36:35.939" endtime="20230531 08:36:35.940"/>
</kw>
<status status="NOT RUN" starttime="20230531 08:36:35.939" endtime="20230531 08:36:35.940"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230531 08:36:35.940" endtime="20230531 08:36:35.940"/>
</kw>
<status status="PASS" starttime="20230531 08:36:35.940" endtime="20230531 08:36:35.940"/>
</branch>
<status status="PASS" starttime="20230531 08:36:35.939" endtime="20230531 08:36:35.940"/>
</if>
<status status="PASS" starttime="20230531 08:36:35.906" endtime="20230531 08:36:35.940"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230531 08:36:35.941" endtime="20230531 08:36:35.941"/>
</kw>
<status status="PASS" starttime="20230531 08:36:35.940" endtime="20230531 08:36:35.941"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230531 08:36:35.945" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230531 08:36:35.960" level="INFO">${rc} = 0</msg>
<msg timestamp="20230531 08:36:35.960" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230531 08:36:35.943" endtime="20230531 08:36:35.960"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230531 08:36:35.962" level="INFO">200</msg>
<status status="PASS" starttime="20230531 08:36:35.961" endtime="20230531 08:36:35.962"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230531 08:36:35.962" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230531 08:36:35.962" endtime="20230531 08:36:35.962"/>
</kw>
<status status="PASS" starttime="20230531 08:36:35.942" endtime="20230531 08:36:35.963"/>
</kw>
<msg timestamp="20230531 08:36:35.963" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230531 08:36:35.942" endtime="20230531 08:36:35.963"/>
</kw>
<msg timestamp="20230531 08:36:35.964" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230531 08:36:35.942" endtime="20230531 08:36:35.964"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230531 08:36:35.964" endtime="20230531 08:36:35.964"/>
</kw>
<status status="NOT RUN" starttime="20230531 08:36:35.964" endtime="20230531 08:36:35.964"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230531 08:36:35.964" endtime="20230531 08:36:35.965"/>
</kw>
<status status="PASS" starttime="20230531 08:36:35.964" endtime="20230531 08:36:35.965"/>
</branch>
<status status="PASS" starttime="20230531 08:36:35.964" endtime="20230531 08:36:35.965"/>
</if>
<status status="PASS" starttime="20230531 08:36:35.941" endtime="20230531 08:36:35.965"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230531 08:36:35.966" endtime="20230531 08:36:35.966"/>
</kw>
<status status="PASS" starttime="20230531 08:36:35.965" endtime="20230531 08:36:35.966"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230531 08:36:35.970" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230531 08:36:35.985" level="INFO">${rc} = 0</msg>
<msg timestamp="20230531 08:36:35.985" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230531 08:36:35.968" endtime="20230531 08:36:35.985"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230531 08:36:35.987" level="INFO">200</msg>
<status status="PASS" starttime="20230531 08:36:35.986" endtime="20230531 08:36:35.987"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230531 08:36:35.987" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230531 08:36:35.987" endtime="20230531 08:36:35.987"/>
</kw>
<status status="PASS" starttime="20230531 08:36:35.968" endtime="20230531 08:36:35.987"/>
</kw>
<msg timestamp="20230531 08:36:35.987" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230531 08:36:35.967" endtime="20230531 08:36:35.988"/>
</kw>
<msg timestamp="20230531 08:36:35.988" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230531 08:36:35.967" endtime="20230531 08:36:35.988"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230531 08:36:35.989" endtime="20230531 08:36:35.989"/>
</kw>
<status status="NOT RUN" starttime="20230531 08:36:35.989" endtime="20230531 08:36:35.989"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230531 08:36:35.989" endtime="20230531 08:36:35.989"/>
</kw>
<status status="PASS" starttime="20230531 08:36:35.989" endtime="20230531 08:36:35.989"/>
</branch>
<status status="PASS" starttime="20230531 08:36:35.988" endtime="20230531 08:36:35.989"/>
</if>
<status status="PASS" starttime="20230531 08:36:35.966" endtime="20230531 08:36:35.990"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230531 08:36:35.990" endtime="20230531 08:36:35.990"/>
</kw>
<status status="PASS" starttime="20230531 08:36:35.990" endtime="20230531 08:36:35.991"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230531 08:36:35.995" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/quota?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230531 08:36:36.010" level="INFO">${rc} = 0</msg>
<msg timestamp="20230531 08:36:36.010" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230531 08:36:35.993" endtime="20230531 08:36:36.010"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230531 08:36:36.011" level="INFO">200</msg>
<status status="PASS" starttime="20230531 08:36:36.010" endtime="20230531 08:36:36.011"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230531 08:36:36.012" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230531 08:36:36.012" endtime="20230531 08:36:36.012"/>
</kw>
<status status="PASS" starttime="20230531 08:36:35.992" endtime="20230531 08:36:36.012"/>
</kw>
<msg timestamp="20230531 08:36:36.013" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230531 08:36:35.992" endtime="20230531 08:36:36.013"/>
</kw>
<msg timestamp="20230531 08:36:36.013" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230531 08:36:35.991" endtime="20230531 08:36:36.013"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230531 08:36:36.014" endtime="20230531 08:36:36.014"/>
</kw>
<status status="NOT RUN" starttime="20230531 08:36:36.014" endtime="20230531 08:36:36.014"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230531 08:36:36.014" endtime="20230531 08:36:36.014"/>
</kw>
<status status="PASS" starttime="20230531 08:36:36.014" endtime="20230531 08:36:36.015"/>
</branch>
<status status="PASS" starttime="20230531 08:36:36.014" endtime="20230531 08:36:36.015"/>
</if>
<status status="PASS" starttime="20230531 08:36:35.991" endtime="20230531 08:36:36.015"/>
</kw>
<status status="PASS" starttime="20230531 08:36:35.895" endtime="20230531 08:36:36.015"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230531 08:36:35.895" endtime="20230531 08:36:36.015"/>
</test>
<test id="s1-t7" name="Check File Size Distribution api access" line="119">
<kw name="Check Access">
<arg>${FILE_SIZE_DIST_URL}?path=/</arg>
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230531 08:36:36.021" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20230531 08:36:36.024" level="INFO">${rc} = 0</msg>
<msg timestamp="20230531 08:36:36.024" level="INFO">${output} = kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230531 08:36:36.019" endtime="20230531 08:36:36.024"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230531 08:36:36.025" level="INFO">kdestroy: No credentials cache found while destroying cache</msg>
<status status="PASS" starttime="20230531 08:36:36.025" endtime="20230531 08:36:36.025"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230531 08:36:36.026" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230531 08:36:36.025" endtime="20230531 08:36:36.026"/>
</kw>
<status status="PASS" starttime="20230531 08:36:36.018" endtime="20230531 08:36:36.026"/>
</kw>
<msg timestamp="20230531 08:36:36.026" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230531 08:36:36.018" endtime="20230531 08:36:36.027"/>
</kw>
<status status="PASS" starttime="20230531 08:36:36.018" endtime="20230531 08:36:36.027"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>401</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230531 08:36:36.031" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230531 08:36:36.051" level="INFO">${rc} = 0</msg>
<msg timestamp="20230531 08:36:36.051" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230531 08:36:36.029" endtime="20230531 08:36:36.051"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230531 08:36:36.052" level="INFO">200</msg>
<status status="PASS" starttime="20230531 08:36:36.051" endtime="20230531 08:36:36.052"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230531 08:36:36.053" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230531 08:36:36.052" endtime="20230531 08:36:36.053"/>
</kw>
<status status="PASS" starttime="20230531 08:36:36.028" endtime="20230531 08:36:36.053"/>
</kw>
<msg timestamp="20230531 08:36:36.053" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230531 08:36:36.028" endtime="20230531 08:36:36.054"/>
</kw>
<msg timestamp="20230531 08:36:36.054" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230531 08:36:36.028" endtime="20230531 08:36:36.054"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230531 08:36:36.055" endtime="20230531 08:36:36.055"/>
</kw>
<status status="NOT RUN" starttime="20230531 08:36:36.054" endtime="20230531 08:36:36.055"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230531 08:36:36.055" endtime="20230531 08:36:36.055"/>
</kw>
<status status="PASS" starttime="20230531 08:36:36.055" endtime="20230531 08:36:36.055"/>
</branch>
<status status="PASS" starttime="20230531 08:36:36.054" endtime="20230531 08:36:36.055"/>
</if>
<status status="PASS" starttime="20230531 08:36:36.027" endtime="20230531 08:36:36.055"/>
</kw>
<kw name="Kinit as non admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>scm</arg>
<arg>scm.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230531 08:36:36.056" endtime="20230531 08:36:36.056"/>
</kw>
<status status="PASS" starttime="20230531 08:36:36.056" endtime="20230531 08:36:36.056"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>403</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230531 08:36:36.060" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230531 08:36:36.074" level="INFO">${rc} = 0</msg>
<msg timestamp="20230531 08:36:36.074" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230531 08:36:36.058" endtime="20230531 08:36:36.074"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230531 08:36:36.075" level="INFO">200</msg>
<status status="PASS" starttime="20230531 08:36:36.074" endtime="20230531 08:36:36.075"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230531 08:36:36.076" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230531 08:36:36.075" endtime="20230531 08:36:36.076"/>
</kw>
<status status="PASS" starttime="20230531 08:36:36.058" endtime="20230531 08:36:36.076"/>
</kw>
<msg timestamp="20230531 08:36:36.076" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230531 08:36:36.057" endtime="20230531 08:36:36.077"/>
</kw>
<msg timestamp="20230531 08:36:36.077" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230531 08:36:36.057" endtime="20230531 08:36:36.077"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230531 08:36:36.078" endtime="20230531 08:36:36.078"/>
</kw>
<status status="NOT RUN" starttime="20230531 08:36:36.078" endtime="20230531 08:36:36.078"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230531 08:36:36.078" endtime="20230531 08:36:36.078"/>
</kw>
<status status="PASS" starttime="20230531 08:36:36.078" endtime="20230531 08:36:36.078"/>
</branch>
<status status="PASS" starttime="20230531 08:36:36.077" endtime="20230531 08:36:36.078"/>
</if>
<status status="PASS" starttime="20230531 08:36:36.057" endtime="20230531 08:36:36.079"/>
</kw>
<kw name="Kinit as ozone admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230531 08:36:36.079" endtime="20230531 08:36:36.079"/>
</kw>
<status status="PASS" starttime="20230531 08:36:36.079" endtime="20230531 08:36:36.080"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230531 08:36:36.083" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230531 08:36:36.100" level="INFO">${rc} = 0</msg>
<msg timestamp="20230531 08:36:36.100" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230531 08:36:36.081" endtime="20230531 08:36:36.100"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230531 08:36:36.101" level="INFO">200</msg>
<status status="PASS" starttime="20230531 08:36:36.101" endtime="20230531 08:36:36.102"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230531 08:36:36.104" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230531 08:36:36.102" endtime="20230531 08:36:36.104"/>
</kw>
<status status="PASS" starttime="20230531 08:36:36.081" endtime="20230531 08:36:36.105"/>
</kw>
<msg timestamp="20230531 08:36:36.105" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230531 08:36:36.081" endtime="20230531 08:36:36.105"/>
</kw>
<msg timestamp="20230531 08:36:36.106" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230531 08:36:36.080" endtime="20230531 08:36:36.106"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230531 08:36:36.106" endtime="20230531 08:36:36.106"/>
</kw>
<status status="NOT RUN" starttime="20230531 08:36:36.106" endtime="20230531 08:36:36.106"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230531 08:36:36.106" endtime="20230531 08:36:36.107"/>
</kw>
<status status="PASS" starttime="20230531 08:36:36.106" endtime="20230531 08:36:36.107"/>
</branch>
<status status="PASS" starttime="20230531 08:36:36.106" endtime="20230531 08:36:36.107"/>
</if>
<status status="PASS" starttime="20230531 08:36:36.080" endtime="20230531 08:36:36.107"/>
</kw>
<kw name="Kinit as recon admin">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230531 08:36:36.107" endtime="20230531 08:36:36.108"/>
</kw>
<status status="PASS" starttime="20230531 08:36:36.107" endtime="20230531 08:36:36.108"/>
</kw>
<kw name="Check http return code">
<arg>${url}</arg>
<arg>200</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : --write-out '\%{http_code}\n' --silent --show-error --output /dev/null ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230531 08:36:36.111" level="INFO">Running command 'curl --negotiate -u : --write-out '%{http_code}
' --silent --show-error --output /dev/null http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230531 08:36:36.126" level="INFO">${rc} = 0</msg>
<msg timestamp="20230531 08:36:36.126" level="INFO">${output} = 200</msg>
<status status="PASS" starttime="20230531 08:36:36.109" endtime="20230531 08:36:36.126"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230531 08:36:36.127" level="INFO">200</msg>
<status status="PASS" starttime="20230531 08:36:36.126" endtime="20230531 08:36:36.127"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230531 08:36:36.127" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230531 08:36:36.127" endtime="20230531 08:36:36.128"/>
</kw>
<status status="PASS" starttime="20230531 08:36:36.109" endtime="20230531 08:36:36.128"/>
</kw>
<msg timestamp="20230531 08:36:36.128" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230531 08:36:36.109" endtime="20230531 08:36:36.128"/>
</kw>
<msg timestamp="20230531 08:36:36.129" level="INFO">${result} = 200</msg>
<status status="PASS" starttime="20230531 08:36:36.108" endtime="20230531 08:36:36.129"/>
</kw>
<if>
<branch type="IF" condition="'${SECURITY_ENABLED}' == 'true'">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected_code}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230531 08:36:36.129" endtime="20230531 08:36:36.129"/>
</kw>
<status status="NOT RUN" starttime="20230531 08:36:36.129" endtime="20230531 08:36:36.129"/>
</branch>
<branch type="ELSE">
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230531 08:36:36.130" endtime="20230531 08:36:36.130"/>
</kw>
<status status="PASS" starttime="20230531 08:36:36.130" endtime="20230531 08:36:36.130"/>
</branch>
<status status="PASS" starttime="20230531 08:36:36.129" endtime="20230531 08:36:36.130"/>
</if>
<status status="PASS" starttime="20230531 08:36:36.108" endtime="20230531 08:36:36.130"/>
</kw>
<status status="PASS" starttime="20230531 08:36:36.017" endtime="20230531 08:36:36.130"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230531 08:36:36.016" endtime="20230531 08:36:36.131"/>
</test>
<test id="s1-t8" name="Check Recon Namespace Summary Root" line="122">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/</arg>
<arg>ROOT</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230531 08:36:36.138" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230531 08:36:36.152" level="INFO">${rc} = 0</msg>
<msg timestamp="20230531 08:36:36.152" level="INFO">${output} = {"path":"","type":"ROOT","countStats":{"numVolume":2,"numBucket":1,"numDir":2,"numKey":1},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTim...</msg>
<status status="PASS" starttime="20230531 08:36:36.136" endtime="20230531 08:36:36.153"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230531 08:36:36.154" level="INFO">{"path":"","type":"ROOT","countStats":{"numVolume":2,"numBucket":1,"numDir":2,"numKey":1},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":0,"modificationTime":0,"acls":null},"status":"OK"}</msg>
<status status="PASS" starttime="20230531 08:36:36.153" endtime="20230531 08:36:36.154"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230531 08:36:36.154" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230531 08:36:36.154" endtime="20230531 08:36:36.154"/>
</kw>
<status status="PASS" starttime="20230531 08:36:36.135" endtime="20230531 08:36:36.155"/>
</kw>
<msg timestamp="20230531 08:36:36.155" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230531 08:36:36.135" endtime="20230531 08:36:36.155"/>
</kw>
<msg timestamp="20230531 08:36:36.156" level="INFO">${result} = {"path":"","type":"ROOT","countStats":{"numVolume":2,"numBucket":1,"numDir":2,"numKey":1},"objectInfo":{"metadata":null,"name":null,"quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTim...</msg>
<status status="PASS" starttime="20230531 08:36:36.135" endtime="20230531 08:36:36.156"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230531 08:36:36.156" endtime="20230531 08:36:36.156"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230531 08:36:36.156" endtime="20230531 08:36:36.157"/>
</kw>
<status status="PASS" starttime="20230531 08:36:36.134" endtime="20230531 08:36:36.157"/>
</kw>
<status status="PASS" starttime="20230531 08:36:36.134" endtime="20230531 08:36:36.157"/>
</kw>
<status status="PASS" starttime="20230531 08:36:36.133" endtime="20230531 08:36:36.157"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230531 08:36:36.132" endtime="20230531 08:36:36.157"/>
</test>
<test id="s1-t9" name="Check Recon Namespace Summary Volume" line="125">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}</arg>
<arg>VOLUME</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230531 08:36:36.164" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-ypfrg 2&gt;&amp;1'.</msg>
<msg timestamp="20230531 08:36:36.187" level="INFO">${rc} = 0</msg>
<msg timestamp="20230531 08:36:36.187" level="INFO">${output} = {"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":2,"numKey":1},"objectInfo":{"metadata":{},"name":"vol-ypfrg","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"c...</msg>
<status status="PASS" starttime="20230531 08:36:36.162" endtime="20230531 08:36:36.187"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230531 08:36:36.189" level="INFO">{"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":2,"numKey":1},"objectInfo":{"metadata":{},"name":"vol-ypfrg","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"creationTime":1685522172829,"modificationTime":1685522172829,"acls":[{"type":"USER","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]}],"admin":"hadoop","owner":"hadoop","volume":"vol-ypfrg"},"status":"OK"}</msg>
<status status="PASS" starttime="20230531 08:36:36.188" endtime="20230531 08:36:36.189"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230531 08:36:36.189" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230531 08:36:36.189" endtime="20230531 08:36:36.189"/>
</kw>
<status status="PASS" starttime="20230531 08:36:36.161" endtime="20230531 08:36:36.190"/>
</kw>
<msg timestamp="20230531 08:36:36.190" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230531 08:36:36.161" endtime="20230531 08:36:36.190"/>
</kw>
<msg timestamp="20230531 08:36:36.191" level="INFO">${result} = {"path":"","type":"VOLUME","countStats":{"numVolume":-1,"numBucket":1,"numDir":2,"numKey":1},"objectInfo":{"metadata":{},"name":"vol-ypfrg","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":1,"c...</msg>
<status status="PASS" starttime="20230531 08:36:36.161" endtime="20230531 08:36:36.191"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230531 08:36:36.191" endtime="20230531 08:36:36.191"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230531 08:36:36.191" endtime="20230531 08:36:36.193"/>
</kw>
<status status="PASS" starttime="20230531 08:36:36.160" endtime="20230531 08:36:36.193"/>
</kw>
<status status="PASS" starttime="20230531 08:36:36.160" endtime="20230531 08:36:36.193"/>
</kw>
<status status="PASS" starttime="20230531 08:36:36.159" endtime="20230531 08:36:36.193"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230531 08:36:36.159" endtime="20230531 08:36:36.194"/>
</test>
<test id="s1-t10" name="Check Recon Namespace Summary Bucket" line="128">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}</arg>
<arg>BUCKET</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230531 08:36:36.202" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-ypfrg/buc-bkhdp 2&gt;&amp;1'.</msg>
<msg timestamp="20230531 08:36:36.225" level="INFO">${rc} = 0</msg>
<msg timestamp="20230531 08:36:36.225" level="INFO">${output} = {"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":2,"numKey":1},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-bkhdp","quotaInBytes":-1,"quotaInNamespa...</msg>
<status status="PASS" starttime="20230531 08:36:36.199" endtime="20230531 08:36:36.225"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230531 08:36:36.226" level="INFO">{"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":2,"numKey":1},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-bkhdp","quotaInBytes":-1,"quotaInNamespace":-1,"usedNamespace":3,"creationTime":1685522177564,"modificationTime":1685522177564,"acls":[{"type":"USER","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]}],"volumeName":"vol-ypfrg","storageType":"DISK","versioning":false,"usedBytes":null,"encryptionInfo":null,"replicationConfigInfo":null,"sourceVolume":null,"sourceBucket":null,"bucketLayout":"LEGACY","owner":"hadoop"},"status":"OK"}</msg>
<status status="PASS" starttime="20230531 08:36:36.225" endtime="20230531 08:36:36.226"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230531 08:36:36.227" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230531 08:36:36.226" endtime="20230531 08:36:36.227"/>
</kw>
<status status="PASS" starttime="20230531 08:36:36.198" endtime="20230531 08:36:36.227"/>
</kw>
<msg timestamp="20230531 08:36:36.227" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230531 08:36:36.198" endtime="20230531 08:36:36.227"/>
</kw>
<msg timestamp="20230531 08:36:36.228" level="INFO">${result} = {"path":"","type":"BUCKET","countStats":{"numVolume":-1,"numBucket":-1,"numDir":2,"numKey":1},"objectInfo":{"versioningEnabled":false,"metadata":{},"name":"buc-bkhdp","quotaInBytes":-1,"quotaInNamespa...</msg>
<status status="PASS" starttime="20230531 08:36:36.198" endtime="20230531 08:36:36.228"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230531 08:36:36.228" endtime="20230531 08:36:36.228"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230531 08:36:36.228" endtime="20230531 08:36:36.229"/>
</kw>
<status status="PASS" starttime="20230531 08:36:36.197" endtime="20230531 08:36:36.229"/>
</kw>
<status status="PASS" starttime="20230531 08:36:36.196" endtime="20230531 08:36:36.229"/>
</kw>
<status status="PASS" starttime="20230531 08:36:36.196" endtime="20230531 08:36:36.229"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230531 08:36:36.195" endtime="20230531 08:36:36.229"/>
</test>
<test id="s1-t11" name="Check Recon Namespace Summary Key" line="131">
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/file1</arg>
<arg>KEY</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230531 08:36:36.243" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-ypfrg/buc-bkhdp/file1 2&gt;&amp;1'.</msg>
<msg timestamp="20230531 08:36:36.291" level="INFO">${rc} = 0</msg>
<msg timestamp="20230531 08:36:36.291" level="INFO">${output} = {"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":false,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespac...</msg>
<status status="PASS" starttime="20230531 08:36:36.240" endtime="20230531 08:36:36.291"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230531 08:36:36.292" level="INFO">{"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":false,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":1685522182352,"modificationTime":1685522186955,"acls":[{"type":"USER","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]},{"type":"GROUP","name":"hadoop","aclScope":"ACCESS","aclList":["ALL"]}],"volumeName":"vol-ypfrg","bucketName":"buc-bkhdp","keyName":"file1","dataSize":4068,"keyLocationVersions":[{"version":0,"locationList":[{"blockID":{"containerBlockID":{"containerID":1,"localID":111677748019200001},"blockCommitSequenceId":2,"containerID":1,"localID":111677748019200001},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"containerID":1,"localID":111677748019200001,"blockCommitSequenceId":2}],"multipartKey":false,"blocksLatestVersionOnly":[{"blockID":{"containerBlockID":{"containerID":1,"localID":111677748019200001},"blockCommitSequenceId":2,"containerID":1,"localID":111677748019200001},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"containerID":1,"localID":111677748019200001,"blockCommitSequenceId":2}],"locationLists":[[{"blockID":{"containerBlockID":{"containerID":1,"localID":111677748019200001},"blockCommitSequenceId":2,"containerID":1,"localID":111677748019200001},"length":4068,"offset":0,"token":null,"createVersion":0,"pipeline":null,"partNumber":0,"containerID":1,"localID":111677748019200001,"blockCommitSequenceId":2}]],"locationListCount":1}],"replicationConfig":{"replicationFactor":"THREE","requiredNodes":3,"replicationType":"RATIS"},"encInfo":null},"status":"OK"}</msg>
<status status="PASS" starttime="20230531 08:36:36.291" endtime="20230531 08:36:36.292"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230531 08:36:36.293" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230531 08:36:36.292" endtime="20230531 08:36:36.293"/>
</kw>
<status status="PASS" starttime="20230531 08:36:36.239" endtime="20230531 08:36:36.293"/>
</kw>
<msg timestamp="20230531 08:36:36.293" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230531 08:36:36.239" endtime="20230531 08:36:36.294"/>
</kw>
<msg timestamp="20230531 08:36:36.294" level="INFO">${result} = {"path":"","type":"KEY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":-1,"numKey":0},"objectInfo":{"fileName":"file1","file":false,"metadata":{},"name":"file1","quotaInBytes":0,"quotaInNamespac...</msg>
<status status="PASS" starttime="20230531 08:36:36.238" endtime="20230531 08:36:36.294"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230531 08:36:36.294" endtime="20230531 08:36:36.294"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230531 08:36:36.295" endtime="20230531 08:36:36.295"/>
</kw>
<status status="PASS" starttime="20230531 08:36:36.238" endtime="20230531 08:36:36.295"/>
</kw>
<status status="PASS" starttime="20230531 08:36:36.238" endtime="20230531 08:36:36.295"/>
</kw>
<status status="PASS" starttime="20230531 08:36:36.236" endtime="20230531 08:36:36.295"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230531 08:36:36.235" endtime="20230531 08:36:36.295"/>
</test>
<test id="s1-t12" name="Check Recon Namespace Summary Directory" line="134">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET_LAYOUT}' == 'LEGACY'</arg>
<arg>Wait For Summary</arg>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2/</arg>
<arg>DIRECTORY</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Wait For Summary">
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2/</arg>
<arg>DIRECTORY</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230531 08:36:36.304" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/summary?path=/vol-ypfrg/buc-bkhdp/dir1/dir2/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230531 08:36:36.324" level="INFO">${rc} = 0</msg>
<msg timestamp="20230531 08:36:36.324" level="INFO">${output} = {"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":0},"objectInfo":{"metadata":{},"name":"dir1","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"crea...</msg>
<status status="PASS" starttime="20230531 08:36:36.302" endtime="20230531 08:36:36.324"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230531 08:36:36.325" level="INFO">{"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":0},"objectInfo":{"metadata":{},"name":"dir1","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"creationTime":0,"modificationTime":0,"acls":[]},"status":"OK"}</msg>
<status status="PASS" starttime="20230531 08:36:36.325" endtime="20230531 08:36:36.325"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230531 08:36:36.326" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230531 08:36:36.326" endtime="20230531 08:36:36.326"/>
</kw>
<status status="PASS" starttime="20230531 08:36:36.302" endtime="20230531 08:36:36.327"/>
</kw>
<msg timestamp="20230531 08:36:36.327" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230531 08:36:36.301" endtime="20230531 08:36:36.327"/>
</kw>
<msg timestamp="20230531 08:36:36.328" level="INFO">${result} = {"path":"","type":"DIRECTORY","countStats":{"numVolume":-1,"numBucket":-1,"numDir":0,"numKey":0},"objectInfo":{"metadata":{},"name":"dir1","quotaInBytes":0,"quotaInNamespace":0,"usedNamespace":0,"crea...</msg>
<status status="PASS" starttime="20230531 08:36:36.301" endtime="20230531 08:36:36.328"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230531 08:36:36.328" endtime="20230531 08:36:36.328"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230531 08:36:36.328" endtime="20230531 08:36:36.329"/>
</kw>
<status status="PASS" starttime="20230531 08:36:36.300" endtime="20230531 08:36:36.329"/>
</kw>
<status status="PASS" starttime="20230531 08:36:36.300" endtime="20230531 08:36:36.329"/>
</kw>
<status status="PASS" starttime="20230531 08:36:36.299" endtime="20230531 08:36:36.329"/>
</kw>
<status status="PASS" starttime="20230531 08:36:36.298" endtime="20230531 08:36:36.329"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${BUCKET_LAYOUT}' == 'FILE_SYSTEM_OPTIMIZED'</arg>
<arg>Wait For Summary</arg>
<arg>${SUMMARY_URL}?path=/${VOLUME}/${BUCKET}/dir1/dir2</arg>
<arg>DIRECTORY</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230531 08:36:36.329" endtime="20230531 08:36:36.330"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230531 08:36:36.297" endtime="20230531 08:36:36.330"/>
</test>
<test id="s1-t13" name="Check Recon Namespace Disk Usage" line="138">
<kw name="Wait For Summary">
<arg>${DISK_USAGE_URL}?path=/${VOLUME}/${BUCKET}&amp;files=true&amp;replica=true</arg>
<arg>\"sizeWithReplica\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230531 08:36:36.337" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/du?path=/vol-ypfrg/buc-bkhdp&amp;files=true&amp;replica=true 2&gt;&amp;1'.</msg>
<msg timestamp="20230531 08:36:36.363" level="INFO">${rc} = 0</msg>
<msg timestamp="20230531 08:36:36.363" level="INFO">${output} = {"status":"OK","path":"/vol-ypfrg/buc-bkhdp","size":4068,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-ypfrg/buc-bkhdp/dir1","size":0,"sizeWithReplica":-1,"isKey":false}]...</msg>
<status status="PASS" starttime="20230531 08:36:36.335" endtime="20230531 08:36:36.363"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230531 08:36:36.364" level="INFO">{"status":"OK","path":"/vol-ypfrg/buc-bkhdp","size":4068,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-ypfrg/buc-bkhdp/dir1","size":0,"sizeWithReplica":-1,"isKey":false}],"sizeDirectKey":4068}</msg>
<status status="PASS" starttime="20230531 08:36:36.364" endtime="20230531 08:36:36.365"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230531 08:36:36.365" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230531 08:36:36.365" endtime="20230531 08:36:36.365"/>
</kw>
<status status="PASS" starttime="20230531 08:36:36.334" endtime="20230531 08:36:36.367"/>
</kw>
<msg timestamp="20230531 08:36:36.367" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230531 08:36:36.334" endtime="20230531 08:36:36.368"/>
</kw>
<msg timestamp="20230531 08:36:36.368" level="INFO">${result} = {"status":"OK","path":"/vol-ypfrg/buc-bkhdp","size":4068,"sizeWithReplica":-1,"subPathCount":1,"subPaths":[{"key":false,"path":"/vol-ypfrg/buc-bkhdp/dir1","size":0,"sizeWithReplica":-1,"isKey":false}]...</msg>
<status status="PASS" starttime="20230531 08:36:36.333" endtime="20230531 08:36:36.368"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230531 08:36:36.368" endtime="20230531 08:36:36.369"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230531 08:36:36.369" endtime="20230531 08:36:36.369"/>
</kw>
<status status="PASS" starttime="20230531 08:36:36.333" endtime="20230531 08:36:36.370"/>
</kw>
<status status="PASS" starttime="20230531 08:36:36.333" endtime="20230531 08:36:36.370"/>
</kw>
<status status="PASS" starttime="20230531 08:36:36.332" endtime="20230531 08:36:36.370"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230531 08:36:36.331" endtime="20230531 08:36:36.370"/>
</test>
<test id="s1-t14" name="Check Recon Namespace Volume Quota Usage" line="141">
<kw name="Wait For Summary">
<arg>${QUOTA_USAGE_URL}?path=/${VOLUME}</arg>
<arg>\"used\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230531 08:36:36.377" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/quota?path=/vol-ypfrg 2&gt;&amp;1'.</msg>
<msg timestamp="20230531 08:36:36.392" level="INFO">${rc} = 0</msg>
<msg timestamp="20230531 08:36:36.392" level="INFO">${output} = {"allowed":-1,"used":4068,"status":"OK"}</msg>
<status status="PASS" starttime="20230531 08:36:36.375" endtime="20230531 08:36:36.392"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230531 08:36:36.393" level="INFO">{"allowed":-1,"used":4068,"status":"OK"}</msg>
<status status="PASS" starttime="20230531 08:36:36.392" endtime="20230531 08:36:36.393"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230531 08:36:36.394" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230531 08:36:36.393" endtime="20230531 08:36:36.394"/>
</kw>
<status status="PASS" starttime="20230531 08:36:36.374" endtime="20230531 08:36:36.394"/>
</kw>
<msg timestamp="20230531 08:36:36.394" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230531 08:36:36.374" endtime="20230531 08:36:36.395"/>
</kw>
<msg timestamp="20230531 08:36:36.395" level="INFO">${result} = {"allowed":-1,"used":4068,"status":"OK"}</msg>
<status status="PASS" starttime="20230531 08:36:36.373" endtime="20230531 08:36:36.395"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230531 08:36:36.395" endtime="20230531 08:36:36.396"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230531 08:36:36.396" endtime="20230531 08:36:36.396"/>
</kw>
<status status="PASS" starttime="20230531 08:36:36.373" endtime="20230531 08:36:36.397"/>
</kw>
<status status="PASS" starttime="20230531 08:36:36.372" endtime="20230531 08:36:36.397"/>
</kw>
<status status="PASS" starttime="20230531 08:36:36.372" endtime="20230531 08:36:36.397"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230531 08:36:36.371" endtime="20230531 08:36:36.397"/>
</test>
<test id="s1-t15" name="Check Recon Namespace Bucket Quota Usage" line="144">
<kw name="Wait For Summary">
<arg>${QUOTA_USAGE_URL}?path=/${VOLUME}/${BUCKET}</arg>
<arg>\"used\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230531 08:36:36.404" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/quota?path=/vol-ypfrg/buc-bkhdp 2&gt;&amp;1'.</msg>
<msg timestamp="20230531 08:36:36.420" level="INFO">${rc} = 0</msg>
<msg timestamp="20230531 08:36:36.420" level="INFO">${output} = {"allowed":-1,"used":4068,"status":"OK"}</msg>
<status status="PASS" starttime="20230531 08:36:36.402" endtime="20230531 08:36:36.420"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230531 08:36:36.422" level="INFO">{"allowed":-1,"used":4068,"status":"OK"}</msg>
<status status="PASS" starttime="20230531 08:36:36.421" endtime="20230531 08:36:36.422"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230531 08:36:36.422" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230531 08:36:36.422" endtime="20230531 08:36:36.422"/>
</kw>
<status status="PASS" starttime="20230531 08:36:36.401" endtime="20230531 08:36:36.422"/>
</kw>
<msg timestamp="20230531 08:36:36.423" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230531 08:36:36.401" endtime="20230531 08:36:36.423"/>
</kw>
<msg timestamp="20230531 08:36:36.423" level="INFO">${result} = {"allowed":-1,"used":4068,"status":"OK"}</msg>
<status status="PASS" starttime="20230531 08:36:36.400" endtime="20230531 08:36:36.423"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230531 08:36:36.423" endtime="20230531 08:36:36.424"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230531 08:36:36.424" endtime="20230531 08:36:36.424"/>
</kw>
<status status="PASS" starttime="20230531 08:36:36.400" endtime="20230531 08:36:36.424"/>
</kw>
<status status="PASS" starttime="20230531 08:36:36.399" endtime="20230531 08:36:36.424"/>
</kw>
<status status="PASS" starttime="20230531 08:36:36.399" endtime="20230531 08:36:36.425"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230531 08:36:36.398" endtime="20230531 08:36:36.425"/>
</test>
<test id="s1-t16" name="Check Recon Namespace File Size Distribution Root" line="147">
<kw name="Wait For Summary">
<arg>${FILE_SIZE_DIST_URL}?path=/</arg>
<arg>\"dist\"</arg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>90sec</arg>
<arg>10sec</arg>
<arg>Test Summary</arg>
<arg>${url}</arg>
<arg>${expected}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Test Summary">
<arg>${url}</arg>
<arg>${expected}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -LSs ${url}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230531 08:36:36.433" level="INFO">Running command 'curl --negotiate -u : -LSs http://recon:9888/api/v1/namespace/dist?path=/ 2&gt;&amp;1'.</msg>
<msg timestamp="20230531 08:36:36.448" level="INFO">${rc} = 0</msg>
<msg timestamp="20230531 08:36:36.448" level="INFO">${output} = {"dist":[0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20230531 08:36:36.430" endtime="20230531 08:36:36.448"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230531 08:36:36.449" level="INFO">{"dist":[0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20230531 08:36:36.448" endtime="20230531 08:36:36.449"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230531 08:36:36.449" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230531 08:36:36.449" endtime="20230531 08:36:36.450"/>
</kw>
<status status="PASS" starttime="20230531 08:36:36.429" endtime="20230531 08:36:36.450"/>
</kw>
<msg timestamp="20230531 08:36:36.450" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230531 08:36:36.429" endtime="20230531 08:36:36.451"/>
</kw>
<msg timestamp="20230531 08:36:36.451" level="INFO">${result} = {"dist":[0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"status":"OK"}</msg>
<status status="PASS" starttime="20230531 08:36:36.429" endtime="20230531 08:36:36.451"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"status\":\"OK\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230531 08:36:36.451" endtime="20230531 08:36:36.452"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${expected}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230531 08:36:36.452" endtime="20230531 08:36:36.452"/>
</kw>
<status status="PASS" starttime="20230531 08:36:36.428" endtime="20230531 08:36:36.452"/>
</kw>
<status status="PASS" starttime="20230531 08:36:36.428" endtime="20230531 08:36:36.452"/>
</kw>
<status status="PASS" starttime="20230531 08:36:36.427" endtime="20230531 08:36:36.452"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230531 08:36:36.426" endtime="20230531 08:36:36.453"/>
</test>
<doc>Smoke test for Recon Namespace Summary Endpoint for LEGACY buckets.</doc>
<status status="PASS" starttime="20230531 08:36:04.373" endtime="20230531 08:36:36.454"/>
</suite>
<statistics>
<total>
<stat pass="16" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="16" fail="0" skip="0" id="s1" name="ozone-legacy-bucket">ozone-legacy-bucket</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
