<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.0.2 (Python 3.8.10 on linux)" generated="20230416 17:40:53.818" rpa="false" schemaversion="3">
<suite id="s1" name="upgrade">
<suite id="s1-s1" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s1-t1" name="Create a volume and bucket" line="28">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230416 17:34:49.706" level="INFO">Running command 'ozone sh volume create old1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230416 17:34:52.332" level="INFO">${rc} = 0</msg>
<msg timestamp="20230416 17:34:52.332" level="INFO">${output} = 2023-04-16 17:34:52,142 [main] INFO rpc.RpcClient: Creating Volume: old1-volume, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20230416 17:34:49.703" endtime="20230416 17:34:52.332"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230416 17:34:52.333" level="INFO">2023-04-16 17:34:52,142 [main] INFO rpc.RpcClient: Creating Volume: old1-volume, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20230416 17:34:52.332" endtime="20230416 17:34:52.333"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230416 17:34:52.334" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230416 17:34:52.333" endtime="20230416 17:34:52.334"/>
</kw>
<status status="PASS" starttime="20230416 17:34:49.702" endtime="20230416 17:34:52.334"/>
</kw>
<msg timestamp="20230416 17:34:52.334" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230416 17:34:49.702" endtime="20230416 17:34:52.336"/>
</kw>
<msg timestamp="20230416 17:34:52.336" level="INFO">${output} = 2023-04-16 17:34:52,142 [main] INFO rpc.RpcClient: Creating Volume: old1-volume, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20230416 17:34:49.701" endtime="20230416 17:34:52.336"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230416 17:34:52.336" endtime="20230416 17:34:52.337"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230416 17:34:52.353" level="INFO">Running command 'ozone sh bucket create /old1-volume/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230416 17:34:55.279" level="INFO">${rc} = 0</msg>
<msg timestamp="20230416 17:34:55.279" level="INFO">${output} = 2023-04-16 17:34:55,217 [main] INFO rpc.RpcClient: Creating Bucket: old1-volume/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Enc...</msg>
<status status="PASS" starttime="20230416 17:34:52.338" endtime="20230416 17:34:55.279"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230416 17:34:55.280" level="INFO">2023-04-16 17:34:55,217 [main] INFO rpc.RpcClient: Creating Bucket: old1-volume/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false </msg>
<status status="PASS" starttime="20230416 17:34:55.280" endtime="20230416 17:34:55.281"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230416 17:34:55.281" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230416 17:34:55.281" endtime="20230416 17:34:55.281"/>
</kw>
<status status="PASS" starttime="20230416 17:34:52.337" endtime="20230416 17:34:55.282"/>
</kw>
<msg timestamp="20230416 17:34:55.282" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230416 17:34:52.337" endtime="20230416 17:34:55.282"/>
</kw>
<msg timestamp="20230416 17:34:55.282" level="INFO">${output} = 2023-04-16 17:34:55,217 [main] INFO rpc.RpcClient: Creating Bucket: old1-volume/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Enc...</msg>
<status status="PASS" starttime="20230416 17:34:52.337" endtime="20230416 17:34:55.282"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230416 17:34:55.283" endtime="20230416 17:34:55.283"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230416 17:34:49.700" endtime="20230416 17:34:55.283"/>
</test>
<test id="s1-s1-t2" name="Create key" line="35">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230416 17:34:55.288" level="INFO">Running command 'echo "old1: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230416 17:34:55.289" level="INFO">${rc} = 0</msg>
<msg timestamp="20230416 17:34:55.289" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230416 17:34:55.285" endtime="20230416 17:34:55.289"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230416 17:34:55.290" level="INFO"/>
<status status="PASS" starttime="20230416 17:34:55.290" endtime="20230416 17:34:55.290"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230416 17:34:55.291" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230416 17:34:55.290" endtime="20230416 17:34:55.291"/>
</kw>
<status status="PASS" starttime="20230416 17:34:55.285" endtime="20230416 17:34:55.291"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230416 17:34:55.295" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230416 17:35:00.945" level="INFO">${rc} = 0</msg>
<msg timestamp="20230416 17:35:00.945" level="INFO">${output} = 2023-04-16 17:34:58,786 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-04-16 17:34:58,897 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230416 17:34:55.293" endtime="20230416 17:35:00.945"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230416 17:35:00.946" level="INFO">2023-04-16 17:34:58,786 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-04-16 17:34:58,897 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-04-16 17:34:58,897 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2023-04-16 17:34:59,189 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20230416 17:35:00.945" endtime="20230416 17:35:00.946"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230416 17:35:00.947" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230416 17:35:00.946" endtime="20230416 17:35:00.947"/>
</kw>
<status status="PASS" starttime="20230416 17:34:55.292" endtime="20230416 17:35:00.947"/>
</kw>
<msg timestamp="20230416 17:35:00.947" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230416 17:34:55.292" endtime="20230416 17:35:00.948"/>
</kw>
<msg timestamp="20230416 17:35:00.948" level="INFO">${output} = 2023-04-16 17:34:58,786 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-04-16 17:34:58,897 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230416 17:34:55.291" endtime="20230416 17:35:00.948"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230416 17:35:00.948" endtime="20230416 17:35:00.948"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230416 17:35:00.952" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230416 17:35:00.954" level="INFO">${rc} = 0</msg>
<msg timestamp="20230416 17:35:00.954" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230416 17:35:00.949" endtime="20230416 17:35:00.954"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230416 17:35:00.955" level="INFO"/>
<status status="PASS" starttime="20230416 17:35:00.955" endtime="20230416 17:35:00.956"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230416 17:35:00.956" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230416 17:35:00.956" endtime="20230416 17:35:00.956"/>
</kw>
<status status="PASS" starttime="20230416 17:35:00.949" endtime="20230416 17:35:00.956"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230416 17:34:55.284" endtime="20230416 17:35:00.957"/>
</test>
<test id="s1-s1-t3" name="Create a bucket in s3v volume" line="41">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /s3v/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230416 17:35:00.962" level="INFO">Running command 'ozone sh bucket create /s3v/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230416 17:35:03.730" level="INFO">${rc} = 0</msg>
<msg timestamp="20230416 17:35:03.730" level="INFO">${output} = 2023-04-16 17:35:03,673 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption ...</msg>
<status status="PASS" starttime="20230416 17:35:00.960" endtime="20230416 17:35:03.730"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230416 17:35:03.731" level="INFO">2023-04-16 17:35:03,673 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false </msg>
<status status="PASS" starttime="20230416 17:35:03.730" endtime="20230416 17:35:03.731"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230416 17:35:03.731" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230416 17:35:03.731" endtime="20230416 17:35:03.732"/>
</kw>
<status status="PASS" starttime="20230416 17:35:00.960" endtime="20230416 17:35:03.732"/>
</kw>
<msg timestamp="20230416 17:35:03.732" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230416 17:35:00.960" endtime="20230416 17:35:03.732"/>
</kw>
<msg timestamp="20230416 17:35:03.733" level="INFO">${output} = 2023-04-16 17:35:03,673 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption ...</msg>
<status status="PASS" starttime="20230416 17:35:00.959" endtime="20230416 17:35:03.733"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230416 17:35:03.733" endtime="20230416 17:35:03.733"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230416 17:35:00.958" endtime="20230416 17:35:03.733"/>
</test>
<test id="s1-s1-t4" name="Create key in the bucket in s3v volume" line="46">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: another key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230416 17:35:03.738" level="INFO">Running command 'echo "old1: another key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230416 17:35:03.739" level="INFO">${rc} = 0</msg>
<msg timestamp="20230416 17:35:03.739" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230416 17:35:03.736" endtime="20230416 17:35:03.740"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230416 17:35:03.741" level="INFO"/>
<status status="PASS" starttime="20230416 17:35:03.740" endtime="20230416 17:35:03.741"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230416 17:35:03.741" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230416 17:35:03.741" endtime="20230416 17:35:03.741"/>
</kw>
<status status="PASS" starttime="20230416 17:35:03.735" endtime="20230416 17:35:03.742"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /s3v/${PREFIX}-bucket/key1-shell /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230416 17:35:03.746" level="INFO">Running command 'ozone sh key put /s3v/old1-bucket/key1-shell /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230416 17:35:08.674" level="INFO">${rc} = 0</msg>
<msg timestamp="20230416 17:35:08.674" level="INFO">${output} = 2023-04-16 17:35:07,063 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-04-16 17:35:07,191 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230416 17:35:03.744" endtime="20230416 17:35:08.674"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230416 17:35:08.676" level="INFO">2023-04-16 17:35:07,063 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-04-16 17:35:07,191 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-04-16 17:35:07,191 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2023-04-16 17:35:07,491 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20230416 17:35:08.675" endtime="20230416 17:35:08.676"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230416 17:35:08.676" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230416 17:35:08.676" endtime="20230416 17:35:08.676"/>
</kw>
<status status="PASS" starttime="20230416 17:35:03.743" endtime="20230416 17:35:08.676"/>
</kw>
<msg timestamp="20230416 17:35:08.677" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230416 17:35:03.742" endtime="20230416 17:35:08.677"/>
</kw>
<msg timestamp="20230416 17:35:08.677" level="INFO">${output} = 2023-04-16 17:35:07,063 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-04-16 17:35:07,191 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230416 17:35:03.742" endtime="20230416 17:35:08.677"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230416 17:35:08.677" endtime="20230416 17:35:08.678"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230416 17:35:08.680" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230416 17:35:08.682" level="INFO">${rc} = 0</msg>
<msg timestamp="20230416 17:35:08.683" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230416 17:35:08.678" endtime="20230416 17:35:08.683"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230416 17:35:08.684" level="INFO"/>
<status status="PASS" starttime="20230416 17:35:08.683" endtime="20230416 17:35:08.684"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230416 17:35:08.684" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230416 17:35:08.684" endtime="20230416 17:35:08.684"/>
</kw>
<status status="PASS" starttime="20230416 17:35:08.678" endtime="20230416 17:35:08.684"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230416 17:35:03.734" endtime="20230416 17:35:08.685"/>
</test>
<test id="s1-s1-t5" name="Setup credentials for S3" line="52">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230416 17:35:08.690" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230416 17:35:09.372" level="INFO">${rc} = 0</msg>
<msg timestamp="20230416 17:35:09.372" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230416 17:35:08.688" endtime="20230416 17:35:09.372"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230416 17:35:09.373" level="INFO"/>
<status status="PASS" starttime="20230416 17:35:09.372" endtime="20230416 17:35:09.373"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230416 17:35:09.374" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230416 17:35:09.373" endtime="20230416 17:35:09.374"/>
</kw>
<status status="PASS" starttime="20230416 17:35:08.687" endtime="20230416 17:35:09.374"/>
</kw>
<msg timestamp="20230416 17:35:09.374" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230416 17:35:08.687" endtime="20230416 17:35:09.375"/>
</kw>
<status status="PASS" starttime="20230416 17:35:08.687" endtime="20230416 17:35:09.375"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230416 17:35:09.378" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230416 17:35:09.857" level="INFO">${rc} = 0</msg>
<msg timestamp="20230416 17:35:09.857" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230416 17:35:09.376" endtime="20230416 17:35:09.857"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230416 17:35:09.859" level="INFO"/>
<status status="PASS" starttime="20230416 17:35:09.858" endtime="20230416 17:35:09.859"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230416 17:35:09.859" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230416 17:35:09.859" endtime="20230416 17:35:09.859"/>
</kw>
<status status="PASS" starttime="20230416 17:35:09.376" endtime="20230416 17:35:09.860"/>
</kw>
<msg timestamp="20230416 17:35:09.860" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230416 17:35:09.375" endtime="20230416 17:35:09.860"/>
</kw>
<status status="PASS" starttime="20230416 17:35:09.375" endtime="20230416 17:35:09.860"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230416 17:35:09.864" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230416 17:35:10.329" level="INFO">${rc} = 0</msg>
<msg timestamp="20230416 17:35:10.329" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230416 17:35:09.862" endtime="20230416 17:35:10.329"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230416 17:35:10.330" level="INFO"/>
<status status="PASS" starttime="20230416 17:35:10.329" endtime="20230416 17:35:10.330"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230416 17:35:10.330" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230416 17:35:10.330" endtime="20230416 17:35:10.331"/>
</kw>
<status status="PASS" starttime="20230416 17:35:09.861" endtime="20230416 17:35:10.331"/>
</kw>
<msg timestamp="20230416 17:35:10.331" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230416 17:35:09.861" endtime="20230416 17:35:10.331"/>
</kw>
<status status="PASS" starttime="20230416 17:35:09.861" endtime="20230416 17:35:10.332"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230416 17:35:10.335" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230416 17:35:10.789" level="INFO">${rc} = 0</msg>
<msg timestamp="20230416 17:35:10.789" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230416 17:35:10.333" endtime="20230416 17:35:10.789"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230416 17:35:10.790" level="INFO"/>
<status status="PASS" starttime="20230416 17:35:10.789" endtime="20230416 17:35:10.790"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230416 17:35:10.790" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230416 17:35:10.790" endtime="20230416 17:35:10.790"/>
</kw>
<status status="PASS" starttime="20230416 17:35:10.332" endtime="20230416 17:35:10.791"/>
</kw>
<msg timestamp="20230416 17:35:10.791" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230416 17:35:10.332" endtime="20230416 17:35:10.791"/>
</kw>
<status status="PASS" starttime="20230416 17:35:10.332" endtime="20230416 17:35:10.791"/>
</kw>
<status status="PASS" starttime="20230416 17:35:08.686" endtime="20230416 17:35:10.792"/>
</kw>
<status status="PASS" starttime="20230416 17:35:08.686" endtime="20230416 17:35:10.792"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230416 17:35:08.685" endtime="20230416 17:35:10.792"/>
</test>
<test id="s1-s1-t6" name="Try to create a bucket using S3 API" line="56">
<kw name="Create bucket with name" library="commonawslib">
<var>${output}</var>
<arg>${PREFIX}-bucket</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230416 17:35:10.797" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230416 17:35:12.699" level="INFO">${rc} = 0</msg>
<msg timestamp="20230416 17:35:12.699" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230416 17:35:10.795" endtime="20230416 17:35:12.699"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230416 17:35:12.700" level="INFO">{
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230416 17:35:12.699" endtime="20230416 17:35:12.700"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230416 17:35:12.701" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230416 17:35:12.700" endtime="20230416 17:35:12.701"/>
</kw>
<status status="PASS" starttime="20230416 17:35:10.795" endtime="20230416 17:35:12.701"/>
</kw>
<msg timestamp="20230416 17:35:12.701" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230416 17:35:10.794" endtime="20230416 17:35:12.702"/>
</kw>
<msg timestamp="20230416 17:35:12.702" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230416 17:35:10.794" endtime="20230416 17:35:12.702"/>
</kw>
<msg timestamp="20230416 17:35:12.702" level="INFO">${result} = {
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230416 17:35:10.794" endtime="20230416 17:35:12.702"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230416 17:35:12.702" endtime="20230416 17:35:12.703"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230416 17:35:12.703" endtime="20230416 17:35:12.703"/>
</kw>
<msg timestamp="20230416 17:35:12.704" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20230416 17:35:10.793" endtime="20230416 17:35:12.704"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230416 17:35:12.704" endtime="20230416 17:35:12.704"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230416 17:35:10.792" endtime="20230416 17:35:12.705"/>
</test>
<test id="s1-s1-t7" name="Create key using S3 API" line="61">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using S3 API" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230416 17:35:12.708" level="INFO">Running command 'echo "old1: key created using S3 API" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230416 17:35:12.710" level="INFO">${rc} = 0</msg>
<msg timestamp="20230416 17:35:12.710" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230416 17:35:12.706" endtime="20230416 17:35:12.710"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230416 17:35:12.712" level="INFO"/>
<status status="PASS" starttime="20230416 17:35:12.711" endtime="20230416 17:35:12.712"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230416 17:35:12.712" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230416 17:35:12.712" endtime="20230416 17:35:12.712"/>
</kw>
<status status="PASS" starttime="20230416 17:35:12.706" endtime="20230416 17:35:12.713"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>put-object --bucket ${PREFIX}-bucket --key key2-s3api --body /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230416 17:35:12.716" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket old1-bucket --key key2-s3api --body /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230416 17:35:14.301" level="INFO">${rc} = 0</msg>
<msg timestamp="20230416 17:35:14.301" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230416 17:35:12.714" endtime="20230416 17:35:14.301"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230416 17:35:14.302" level="INFO"/>
<status status="PASS" starttime="20230416 17:35:14.301" endtime="20230416 17:35:14.302"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230416 17:35:14.303" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230416 17:35:14.302" endtime="20230416 17:35:14.303"/>
</kw>
<msg timestamp="20230416 17:35:14.303" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230416 17:35:12.713" endtime="20230416 17:35:14.303"/>
</kw>
<msg timestamp="20230416 17:35:14.303" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230416 17:35:12.713" endtime="20230416 17:35:14.303"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230416 17:35:14.303" endtime="20230416 17:35:14.304"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230416 17:35:14.307" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230416 17:35:14.309" level="INFO">${rc} = 0</msg>
<msg timestamp="20230416 17:35:14.309" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230416 17:35:14.305" endtime="20230416 17:35:14.309"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230416 17:35:14.310" level="INFO"/>
<status status="PASS" starttime="20230416 17:35:14.310" endtime="20230416 17:35:14.310"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230416 17:35:14.311" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230416 17:35:14.310" endtime="20230416 17:35:14.311"/>
</kw>
<status status="PASS" starttime="20230416 17:35:14.304" endtime="20230416 17:35:14.311"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230416 17:35:12.705" endtime="20230416 17:35:14.312"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230416 17:34:49.623" endtime="20230416 17:35:14.313"/>
</suite>
<suite id="s1-s2" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s2-t1" name="Read data from previously created key" line="28">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230416 17:35:18.025" level="INFO">${random} = 00813</msg>
<status status="PASS" starttime="20230416 17:35:18.025" endtime="20230416 17:35:18.025"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230416 17:35:18.031" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-00813 2&gt;&amp;1'.</msg>
<msg timestamp="20230416 17:35:22.257" level="INFO">${rc} = 0</msg>
<msg timestamp="20230416 17:35:22.258" level="INFO">${output} = 2023-04-16 17:35:21,096 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-04-16 17:35:21,164 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230416 17:35:18.027" endtime="20230416 17:35:22.258"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230416 17:35:22.259" level="INFO">2023-04-16 17:35:21,096 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-04-16 17:35:21,164 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-04-16 17:35:21,164 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started</msg>
<status status="PASS" starttime="20230416 17:35:22.258" endtime="20230416 17:35:22.259"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230416 17:35:22.259" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230416 17:35:22.259" endtime="20230416 17:35:22.260"/>
</kw>
<status status="PASS" starttime="20230416 17:35:18.027" endtime="20230416 17:35:22.260"/>
</kw>
<msg timestamp="20230416 17:35:22.260" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230416 17:35:18.026" endtime="20230416 17:35:22.261"/>
</kw>
<msg timestamp="20230416 17:35:22.261" level="INFO">${output} = 2023-04-16 17:35:21,096 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-04-16 17:35:21,164 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230416 17:35:18.026" endtime="20230416 17:35:22.261"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230416 17:35:22.261" endtime="20230416 17:35:22.262"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230416 17:35:22.265" level="INFO">Running command 'cat /tmp/key-00813 2&gt;&amp;1'.</msg>
<msg timestamp="20230416 17:35:22.267" level="INFO">${rc} = 0</msg>
<msg timestamp="20230416 17:35:22.267" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230416 17:35:22.263" endtime="20230416 17:35:22.267"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230416 17:35:22.268" level="INFO">old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230416 17:35:22.268" endtime="20230416 17:35:22.268"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230416 17:35:22.269" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230416 17:35:22.269" endtime="20230416 17:35:22.269"/>
</kw>
<msg timestamp="20230416 17:35:22.269" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230416 17:35:22.262" endtime="20230416 17:35:22.269"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230416 17:35:22.270" endtime="20230416 17:35:22.270"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230416 17:35:22.273" level="INFO">Running command 'rm /tmp/key-00813 2&gt;&amp;1'.</msg>
<msg timestamp="20230416 17:35:22.275" level="INFO">${rc} = 0</msg>
<msg timestamp="20230416 17:35:22.275" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230416 17:35:22.271" endtime="20230416 17:35:22.275"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230416 17:35:22.276" level="INFO"/>
<status status="PASS" starttime="20230416 17:35:22.275" endtime="20230416 17:35:22.276"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230416 17:35:22.277" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230416 17:35:22.276" endtime="20230416 17:35:22.277"/>
</kw>
<status status="PASS" starttime="20230416 17:35:22.270" endtime="20230416 17:35:22.277"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230416 17:35:18.024" endtime="20230416 17:35:22.277"/>
</test>
<test id="s1-s2-t2" name="Setup credentials for S3" line="36">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230416 17:35:22.282" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230416 17:35:22.736" level="INFO">${rc} = 0</msg>
<msg timestamp="20230416 17:35:22.736" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230416 17:35:22.281" endtime="20230416 17:35:22.736"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230416 17:35:22.738" level="INFO"/>
<status status="PASS" starttime="20230416 17:35:22.737" endtime="20230416 17:35:22.738"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230416 17:35:22.738" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230416 17:35:22.738" endtime="20230416 17:35:22.738"/>
</kw>
<status status="PASS" starttime="20230416 17:35:22.280" endtime="20230416 17:35:22.739"/>
</kw>
<msg timestamp="20230416 17:35:22.739" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230416 17:35:22.280" endtime="20230416 17:35:22.739"/>
</kw>
<status status="PASS" starttime="20230416 17:35:22.280" endtime="20230416 17:35:22.739"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230416 17:35:22.743" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230416 17:35:23.225" level="INFO">${rc} = 0</msg>
<msg timestamp="20230416 17:35:23.225" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230416 17:35:22.740" endtime="20230416 17:35:23.225"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230416 17:35:23.226" level="INFO"/>
<status status="PASS" starttime="20230416 17:35:23.225" endtime="20230416 17:35:23.226"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230416 17:35:23.227" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230416 17:35:23.226" endtime="20230416 17:35:23.227"/>
</kw>
<status status="PASS" starttime="20230416 17:35:22.740" endtime="20230416 17:35:23.227"/>
</kw>
<msg timestamp="20230416 17:35:23.227" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230416 17:35:22.740" endtime="20230416 17:35:23.228"/>
</kw>
<status status="PASS" starttime="20230416 17:35:22.739" endtime="20230416 17:35:23.228"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230416 17:35:23.231" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230416 17:35:23.683" level="INFO">${rc} = 0</msg>
<msg timestamp="20230416 17:35:23.683" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230416 17:35:23.229" endtime="20230416 17:35:23.683"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230416 17:35:23.684" level="INFO"/>
<status status="PASS" starttime="20230416 17:35:23.684" endtime="20230416 17:35:23.684"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230416 17:35:23.685" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230416 17:35:23.684" endtime="20230416 17:35:23.685"/>
</kw>
<status status="PASS" starttime="20230416 17:35:23.229" endtime="20230416 17:35:23.685"/>
</kw>
<msg timestamp="20230416 17:35:23.685" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230416 17:35:23.228" endtime="20230416 17:35:23.686"/>
</kw>
<status status="PASS" starttime="20230416 17:35:23.228" endtime="20230416 17:35:23.686"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230416 17:35:23.689" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230416 17:35:24.133" level="INFO">${rc} = 0</msg>
<msg timestamp="20230416 17:35:24.133" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230416 17:35:23.687" endtime="20230416 17:35:24.133"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230416 17:35:24.134" level="INFO"/>
<status status="PASS" starttime="20230416 17:35:24.133" endtime="20230416 17:35:24.134"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230416 17:35:24.135" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230416 17:35:24.134" endtime="20230416 17:35:24.135"/>
</kw>
<status status="PASS" starttime="20230416 17:35:23.687" endtime="20230416 17:35:24.135"/>
</kw>
<msg timestamp="20230416 17:35:24.135" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230416 17:35:23.686" endtime="20230416 17:35:24.135"/>
</kw>
<status status="PASS" starttime="20230416 17:35:23.686" endtime="20230416 17:35:24.136"/>
</kw>
<status status="PASS" starttime="20230416 17:35:22.279" endtime="20230416 17:35:24.136"/>
</kw>
<status status="PASS" starttime="20230416 17:35:22.279" endtime="20230416 17:35:24.136"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230416 17:35:22.278" endtime="20230416 17:35:24.136"/>
</test>
<test id="s1-s2-t3" name="Read key created with Ozone Shell using S3 API" line="40">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230416 17:35:24.140" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230416 17:35:24.861" level="INFO">${rc} = 0</msg>
<msg timestamp="20230416 17:35:24.861" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 16 Apr 2023 17:35:08 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230416 17:35:24.138" endtime="20230416 17:35:24.861"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230416 17:35:24.862" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 16 Apr 2023 17:35:08 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Sun, 16 Apr 2023 17:35:24 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230416 17:35:24.862" endtime="20230416 17:35:24.862"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230416 17:35:24.863" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230416 17:35:24.863" endtime="20230416 17:35:24.863"/>
</kw>
<msg timestamp="20230416 17:35:24.863" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 16 Apr 2023 17:35:08 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230416 17:35:24.138" endtime="20230416 17:35:24.863"/>
</kw>
<msg timestamp="20230416 17:35:24.864" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 16 Apr 2023 17:35:08 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230416 17:35:24.137" endtime="20230416 17:35:24.864"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230416 17:35:24.864" endtime="20230416 17:35:24.864"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230416 17:35:24.867" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230416 17:35:24.869" level="INFO">${rc} = 0</msg>
<msg timestamp="20230416 17:35:24.870" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230416 17:35:24.865" endtime="20230416 17:35:24.870"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230416 17:35:24.871" level="INFO">old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230416 17:35:24.870" endtime="20230416 17:35:24.871"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230416 17:35:24.871" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230416 17:35:24.871" endtime="20230416 17:35:24.871"/>
</kw>
<msg timestamp="20230416 17:35:24.872" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230416 17:35:24.865" endtime="20230416 17:35:24.872"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230416 17:35:24.872" endtime="20230416 17:35:24.872"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230416 17:35:24.875" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230416 17:35:24.877" level="INFO">${rc} = 0</msg>
<msg timestamp="20230416 17:35:24.877" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230416 17:35:24.873" endtime="20230416 17:35:24.877"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230416 17:35:24.878" level="INFO"/>
<status status="PASS" starttime="20230416 17:35:24.877" endtime="20230416 17:35:24.878"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230416 17:35:24.878" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230416 17:35:24.878" endtime="20230416 17:35:24.878"/>
</kw>
<status status="PASS" starttime="20230416 17:35:24.872" endtime="20230416 17:35:24.879"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230416 17:35:24.137" endtime="20230416 17:35:24.879"/>
</test>
<test id="s1-s2-t4" name="Read key created with S3 API using S3 API" line="47">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230416 17:35:24.883" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230416 17:35:25.471" level="INFO">${rc} = 0</msg>
<msg timestamp="20230416 17:35:25.471" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 16 Apr 2023 17:35:14 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230416 17:35:24.882" endtime="20230416 17:35:25.471"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230416 17:35:25.472" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 16 Apr 2023 17:35:14 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Sun, 16 Apr 2023 17:35:25 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230416 17:35:25.471" endtime="20230416 17:35:25.472"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230416 17:35:25.473" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230416 17:35:25.472" endtime="20230416 17:35:25.473"/>
</kw>
<msg timestamp="20230416 17:35:25.473" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 16 Apr 2023 17:35:14 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230416 17:35:24.881" endtime="20230416 17:35:25.473"/>
</kw>
<msg timestamp="20230416 17:35:25.473" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Sun, 16 Apr 2023 17:35:14 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230416 17:35:24.881" endtime="20230416 17:35:25.473"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230416 17:35:25.474" endtime="20230416 17:35:25.474"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230416 17:35:25.477" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230416 17:35:25.479" level="INFO">${rc} = 0</msg>
<msg timestamp="20230416 17:35:25.479" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20230416 17:35:25.475" endtime="20230416 17:35:25.479"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230416 17:35:25.480" level="INFO">old1: key created using S3 API</msg>
<status status="PASS" starttime="20230416 17:35:25.480" endtime="20230416 17:35:25.480"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230416 17:35:25.481" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230416 17:35:25.481" endtime="20230416 17:35:25.481"/>
</kw>
<msg timestamp="20230416 17:35:25.481" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20230416 17:35:25.474" endtime="20230416 17:35:25.481"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230416 17:35:25.481" endtime="20230416 17:35:25.482"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230416 17:35:25.484" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230416 17:35:25.487" level="INFO">${rc} = 0</msg>
<msg timestamp="20230416 17:35:25.487" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230416 17:35:25.482" endtime="20230416 17:35:25.487"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230416 17:35:25.488" level="INFO"/>
<status status="PASS" starttime="20230416 17:35:25.487" endtime="20230416 17:35:25.488"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230416 17:35:25.488" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230416 17:35:25.488" endtime="20230416 17:35:25.488"/>
</kw>
<status status="PASS" starttime="20230416 17:35:25.482" endtime="20230416 17:35:25.489"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230416 17:35:24.880" endtime="20230416 17:35:25.489"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230416 17:35:17.952" endtime="20230416 17:35:25.490"/>
</suite>
<suite id="s1-s3" name="Prepare" source="/opt/ozone/smoketest/upgrade/prepare.robot">
<test id="s1-s3-t1" name="Prepare Ozone Manager" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230416 17:35:29.249" endtime="20230416 17:35:29.249"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM prepare is skipped for version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230416 17:35:29.249" endtime="20230416 17:35:29.250"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230416 17:35:29.254" level="INFO">Running command 'ozone admin om prepare -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230416 17:40:29.249" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20230416 17:35:29.251" endtime="20230416 17:40:29.249"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230416 17:40:29.249" endtime="20230416 17:40:29.250"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20230416 17:40:29.250" endtime="20230416 17:40:29.250"/>
</kw>
<status status="FAIL" starttime="20230416 17:35:29.250" endtime="20230416 17:40:29.250"/>
</kw>
<msg timestamp="20230416 17:40:29.250" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20230416 17:35:29.250" endtime="20230416 17:40:29.252"/>
</kw>
<status status="FAIL" starttime="20230416 17:35:29.250" endtime="20230416 17:40:29.252"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20230416 17:40:29.252" endtime="20230416 17:40:29.252"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20230416 17:35:29.248" endtime="20230416 17:40:29.253">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Prepares OMs</doc>
<status status="FAIL" starttime="20230416 17:35:29.204" endtime="20230416 17:40:29.254"/>
</suite>
<suite id="s1-s4" name="Check-Finalization" source="/opt/ozone/smoketest/upgrade/check-finalization.robot">
<test id="s1-s4-t1" name="Check OM Finalized" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230416 17:34:40.463" endtime="20230416 17:34:40.464"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>env</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230416 17:34:40.469" level="INFO">Running command 'env 2&gt;&amp;1'.</msg>
<msg timestamp="20230416 17:34:40.471" level="INFO">${rc} = 0</msg>
<msg timestamp="20230416 17:34:40.471" level="INFO">${output} = OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=ce3c5c6da52c
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/ha...</msg>
<status status="PASS" starttime="20230416 17:34:40.465" endtime="20230416 17:34:40.471"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230416 17:34:40.472" level="INFO">OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=ce3c5c6da52c
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/hadoop
LD_LIBRARY_PATH=/usr/local/lib
OZONE-SITE.XML_ozone.replication=3
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
ENSURE_SCM_INITIALIZED=/data/metadata/scm/current/VERSION
OM_SERVICE_ID=omservice
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin
PWD=/opt/hadoop
OZONE-SITE.XML_ozone.scm.container.size=1GB
JAVA_HOME=/usr/lib/jvm/jre/
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE_UPGRADE_FROM=1.3.0
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
SHLVL=1
HOME=/opt/hadoop
OZONE_CONF_DIR=/etc/hadoop
OZONE-SITE.XML_ozone.om.ratis.enable=true
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
OZONE_UPGRADE_TO=1.4.0
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_ozone.scm.ratis.enable=true
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3
_=/usr/bin/env</msg>
<status status="PASS" starttime="20230416 17:34:40.472" endtime="20230416 17:34:40.472"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230416 17:34:40.473" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230416 17:34:40.472" endtime="20230416 17:34:40.473"/>
</kw>
<status status="PASS" starttime="20230416 17:34:40.465" endtime="20230416 17:34:40.473"/>
</kw>
<msg timestamp="20230416 17:34:40.473" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230416 17:34:40.464" endtime="20230416 17:34:40.474"/>
</kw>
<msg timestamp="20230416 17:34:40.475" level="INFO">${result} = OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=ce3c5c6da52c
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/ha...</msg>
<status status="PASS" starttime="20230416 17:34:40.464" endtime="20230416 17:34:40.475"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230416 17:34:40.475" level="INFO">OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=ce3c5c6da52c
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/hadoop
LD_LIBRARY_PATH=/usr/local/lib
OZONE-SITE.XML_ozone.replication=3
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
ENSURE_SCM_INITIALIZED=/data/metadata/scm/current/VERSION
OM_SERVICE_ID=omservice
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin
PWD=/opt/hadoop
OZONE-SITE.XML_ozone.scm.container.size=1GB
JAVA_HOME=/usr/lib/jvm/jre/
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE_UPGRADE_FROM=1.3.0
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
SHLVL=1
HOME=/opt/hadoop
OZONE_CONF_DIR=/etc/hadoop
OZONE-SITE.XML_ozone.om.ratis.enable=true
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
OZONE_UPGRADE_TO=1.4.0
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_ozone.scm.ratis.enable=true
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3
_=/usr/bin/env</msg>
<status status="PASS" starttime="20230416 17:34:40.475" endtime="20230416 17:34:40.475"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230416 17:34:40.475" endtime="20230416 17:34:40.476"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230416 17:34:40.480" level="INFO">Running command 'ozone admin om finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20230416 17:34:43.229" level="INFO">${rc} = 0</msg>
<msg timestamp="20230416 17:34:43.230" level="INFO">${output} = ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20230416 17:34:40.477" endtime="20230416 17:34:43.230"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230416 17:34:43.231" level="INFO">ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20230416 17:34:43.230" endtime="20230416 17:34:43.231"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230416 17:34:43.231" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230416 17:34:43.231" endtime="20230416 17:34:43.231"/>
</kw>
<status status="PASS" starttime="20230416 17:34:40.476" endtime="20230416 17:34:43.232"/>
</kw>
<msg timestamp="20230416 17:34:43.232" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230416 17:34:40.476" endtime="20230416 17:34:43.232"/>
</kw>
<msg timestamp="20230416 17:34:43.232" level="INFO">${result} = ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20230416 17:34:40.476" endtime="20230416 17:34:43.232"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230416 17:34:43.233" level="INFO">ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20230416 17:34:43.233" endtime="20230416 17:34:43.233"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20230416 17:34:43.233" endtime="20230416 17:34:43.233"/>
</kw>
<tag>finalized</tag>
<tag>om</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230416 17:34:40.463" endtime="20230416 17:34:43.233"/>
</test>
<test id="s1-s4-t2" name="Check SCM Finalized" line="32">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230416 17:34:43.235" endtime="20230416 17:34:43.236"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>HDDS finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230416 17:34:43.236" endtime="20230416 17:34:43.236"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230416 17:34:43.240" level="INFO">Running command 'ozone admin scm finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20230416 17:34:45.842" level="INFO">${rc} = 0</msg>
<msg timestamp="20230416 17:34:45.842" level="INFO">${output} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230416 17:34:43.238" endtime="20230416 17:34:45.842"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230416 17:34:45.843" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230416 17:34:45.843" endtime="20230416 17:34:45.843"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230416 17:34:45.844" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230416 17:34:45.843" endtime="20230416 17:34:45.844"/>
</kw>
<status status="PASS" starttime="20230416 17:34:43.237" endtime="20230416 17:34:45.844"/>
</kw>
<msg timestamp="20230416 17:34:45.844" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230416 17:34:43.237" endtime="20230416 17:34:45.845"/>
</kw>
<msg timestamp="20230416 17:34:45.845" level="INFO">${result} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230416 17:34:43.236" endtime="20230416 17:34:45.845"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230416 17:34:45.845" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230416 17:34:45.845" endtime="20230416 17:34:45.845"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20230416 17:34:45.846" endtime="20230416 17:34:45.846"/>
</kw>
<tag>finalized</tag>
<tag>scm</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230416 17:34:43.235" endtime="20230416 17:34:45.846"/>
</test>
<doc>Finalize Upgrade of the Ozone cluster</doc>
<status status="PASS" starttime="20230416 17:34:40.416" endtime="20230416 17:34:45.848"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="337710"/>
</suite>
<statistics>
<total>
<stat pass="13" fail="1" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="2" fail="0" skip="0">create-volume-and-bucket</stat>
<stat pass="2" fail="0" skip="0">finalized</stat>
<stat pass="1" fail="0" skip="0">om</stat>
<stat pass="1" fail="0" skip="0">scm</stat>
</tag>
<suite>
<stat pass="13" fail="1" skip="0" id="s1" name="upgrade">upgrade</stat>
<stat pass="7" fail="0" skip="0" id="s1-s1" name="Generate">upgrade.Generate</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2" name="Validate">upgrade.Validate</stat>
<stat pass="0" fail="1" skip="0" id="s1-s3" name="Prepare">upgrade.Prepare</stat>
<stat pass="2" fail="0" skip="0" id="s1-s4" name="Check-Finalization">upgrade.Check-Finalization</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
