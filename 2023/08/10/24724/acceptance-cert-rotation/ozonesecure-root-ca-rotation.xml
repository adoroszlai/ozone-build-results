<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20230810 23:29:05.406" rpa="false" schemaversion="4">
<suite id="s1" name="ozonesecure-root-ca-rotation">
<suite id="s1-s1" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s1-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230810 23:26:03.216" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230810 23:26:03.220" level="INFO">${rc} = 0</msg>
<msg timestamp="20230810 23:26:03.220" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230810 23:26:03.213" endtime="20230810 23:26:03.220"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230810 23:26:03.222" level="INFO">scm</msg>
<status status="PASS" starttime="20230810 23:26:03.221" endtime="20230810 23:26:03.222"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230810 23:26:03.222" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230810 23:26:03.222" endtime="20230810 23:26:03.223"/>
</kw>
<status status="PASS" starttime="20230810 23:26:03.212" endtime="20230810 23:26:03.223"/>
</kw>
<msg timestamp="20230810 23:26:03.223" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230810 23:26:03.212" endtime="20230810 23:26:03.223"/>
</kw>
<msg timestamp="20230810 23:26:03.223" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230810 23:26:03.211" endtime="20230810 23:26:03.223"/>
</kw>
<msg timestamp="20230810 23:26:03.224" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230810 23:26:03.211" endtime="20230810 23:26:03.224"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230810 23:26:03.224" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230810 23:26:03.224" endtime="20230810 23:26:03.224"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230810 23:26:03.229" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230810 23:26:03.258" level="INFO">${rc} = 0</msg>
<msg timestamp="20230810 23:26:03.258" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230810 23:26:03.227" endtime="20230810 23:26:03.258"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230810 23:26:03.259" level="INFO"/>
<status status="PASS" starttime="20230810 23:26:03.258" endtime="20230810 23:26:03.259"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230810 23:26:03.260" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230810 23:26:03.260" endtime="20230810 23:26:03.260"/>
</kw>
<status status="PASS" starttime="20230810 23:26:03.226" endtime="20230810 23:26:03.261"/>
</kw>
<msg timestamp="20230810 23:26:03.261" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230810 23:26:03.226" endtime="20230810 23:26:03.261"/>
</kw>
<status status="PASS" starttime="20230810 23:26:03.225" endtime="20230810 23:26:03.261"/>
</kw>
<status status="PASS" starttime="20230810 23:26:03.225" endtime="20230810 23:26:03.261"/>
</kw>
<status status="PASS" starttime="20230810 23:26:03.210" endtime="20230810 23:26:03.261"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230810 23:26:03.209" endtime="20230810 23:26:03.261"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20230810 23:26:03.146" endtime="20230810 23:26:03.263"/>
</suite>
<suite id="s1-s2" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s2-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230810 23:26:27.829" level="INFO">Running command 'ozone sh volume create rootca-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230810 23:26:33.694" level="INFO">${rc} = 0</msg>
<msg timestamp="20230810 23:26:33.694" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230810 23:26:27.826" endtime="20230810 23:26:33.694"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230810 23:26:33.696" level="INFO"/>
<status status="PASS" starttime="20230810 23:26:33.695" endtime="20230810 23:26:33.696"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230810 23:26:33.697" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230810 23:26:33.696" endtime="20230810 23:26:33.697"/>
</kw>
<status status="PASS" starttime="20230810 23:26:27.825" endtime="20230810 23:26:33.697"/>
</kw>
<msg timestamp="20230810 23:26:33.697" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230810 23:26:27.825" endtime="20230810 23:26:33.698"/>
</kw>
<msg timestamp="20230810 23:26:33.698" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230810 23:26:27.824" endtime="20230810 23:26:33.698"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230810 23:26:33.698" endtime="20230810 23:26:33.698"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230810 23:26:33.709" level="INFO">Running command 'ozone sh bucket create /rootca-volume/rootca-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230810 23:26:42.339" level="INFO">${rc} = 0</msg>
<msg timestamp="20230810 23:26:42.339" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230810 23:26:33.700" endtime="20230810 23:26:42.340"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230810 23:26:42.341" level="INFO"/>
<status status="PASS" starttime="20230810 23:26:42.340" endtime="20230810 23:26:42.341"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230810 23:26:42.342" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230810 23:26:42.341" endtime="20230810 23:26:42.342"/>
</kw>
<status status="PASS" starttime="20230810 23:26:33.700" endtime="20230810 23:26:42.342"/>
</kw>
<msg timestamp="20230810 23:26:42.342" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230810 23:26:33.699" endtime="20230810 23:26:42.342"/>
</kw>
<msg timestamp="20230810 23:26:42.343" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230810 23:26:33.699" endtime="20230810 23:26:42.343"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230810 23:26:42.343" endtime="20230810 23:26:42.343"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230810 23:26:27.823" endtime="20230810 23:26:42.343"/>
</test>
<test id="s1-s2-t2" name="Create key" line="34">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230810 23:26:42.349" level="INFO">Running command 'echo "rootca: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230810 23:26:42.352" level="INFO">${rc} = 0</msg>
<msg timestamp="20230810 23:26:42.352" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230810 23:26:42.346" endtime="20230810 23:26:42.352"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230810 23:26:42.353" level="INFO"/>
<status status="PASS" starttime="20230810 23:26:42.352" endtime="20230810 23:26:42.353"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230810 23:26:42.354" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230810 23:26:42.353" endtime="20230810 23:26:42.354"/>
</kw>
<status status="PASS" starttime="20230810 23:26:42.346" endtime="20230810 23:26:42.354"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230810 23:26:42.359" level="INFO">Running command 'ozone sh key put /rootca-volume/rootca-bucket/rootca-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230810 23:26:54.611" level="INFO">${rc} = 0</msg>
<msg timestamp="20230810 23:26:54.611" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230810 23:26:42.356" endtime="20230810 23:26:54.611"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230810 23:26:54.612" level="INFO"/>
<status status="PASS" starttime="20230810 23:26:54.611" endtime="20230810 23:26:54.612"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230810 23:26:54.613" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230810 23:26:54.612" endtime="20230810 23:26:54.613"/>
</kw>
<status status="PASS" starttime="20230810 23:26:42.355" endtime="20230810 23:26:54.613"/>
</kw>
<msg timestamp="20230810 23:26:54.614" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230810 23:26:42.355" endtime="20230810 23:26:54.614"/>
</kw>
<msg timestamp="20230810 23:26:54.614" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230810 23:26:42.354" endtime="20230810 23:26:54.614"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230810 23:26:54.614" endtime="20230810 23:26:54.614"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230810 23:26:54.618" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230810 23:26:54.622" level="INFO">${rc} = 0</msg>
<msg timestamp="20230810 23:26:54.622" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230810 23:26:54.615" endtime="20230810 23:26:54.622"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230810 23:26:54.625" level="INFO"/>
<status status="PASS" starttime="20230810 23:26:54.622" endtime="20230810 23:26:54.625"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230810 23:26:54.625" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230810 23:26:54.625" endtime="20230810 23:26:54.626"/>
</kw>
<status status="PASS" starttime="20230810 23:26:54.615" endtime="20230810 23:26:54.626"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230810 23:26:42.345" endtime="20230810 23:26:54.626"/>
</test>
<test id="s1-s2-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230810 23:26:54.629" level="INFO">${random} = 05412</msg>
<status status="PASS" starttime="20230810 23:26:54.629" endtime="20230810 23:26:54.630"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230810 23:26:54.634" level="INFO">Running command 'ozone sh key get /rootca-volume/rootca-bucket/rootca-key /tmp/key-05412 2&gt;&amp;1'.</msg>
<msg timestamp="20230810 23:27:04.350" level="INFO">${rc} = 0</msg>
<msg timestamp="20230810 23:27:04.351" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230810 23:26:54.631" endtime="20230810 23:27:04.351"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230810 23:27:04.353" level="INFO"/>
<status status="PASS" starttime="20230810 23:27:04.352" endtime="20230810 23:27:04.353"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230810 23:27:04.354" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230810 23:27:04.353" endtime="20230810 23:27:04.354"/>
</kw>
<status status="PASS" starttime="20230810 23:26:54.631" endtime="20230810 23:27:04.354"/>
</kw>
<msg timestamp="20230810 23:27:04.354" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230810 23:26:54.630" endtime="20230810 23:27:04.354"/>
</kw>
<msg timestamp="20230810 23:27:04.355" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230810 23:26:54.630" endtime="20230810 23:27:04.355"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230810 23:27:04.355" endtime="20230810 23:27:04.356"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230810 23:27:04.360" level="INFO">Running command 'cat /tmp/key-05412 2&gt;&amp;1'.</msg>
<msg timestamp="20230810 23:27:04.363" level="INFO">${rc} = 0</msg>
<msg timestamp="20230810 23:27:04.363" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230810 23:27:04.357" endtime="20230810 23:27:04.363"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230810 23:27:04.365" level="INFO">rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230810 23:27:04.364" endtime="20230810 23:27:04.365"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230810 23:27:04.365" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230810 23:27:04.365" endtime="20230810 23:27:04.366"/>
</kw>
<msg timestamp="20230810 23:27:04.366" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230810 23:27:04.356" endtime="20230810 23:27:04.366"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230810 23:27:04.366" endtime="20230810 23:27:04.367"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230810 23:27:04.370" level="INFO">Running command 'rm /tmp/key-05412 2&gt;&amp;1'.</msg>
<msg timestamp="20230810 23:27:04.373" level="INFO">${rc} = 0</msg>
<msg timestamp="20230810 23:27:04.373" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230810 23:27:04.367" endtime="20230810 23:27:04.373"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230810 23:27:04.375" level="INFO"/>
<status status="PASS" starttime="20230810 23:27:04.374" endtime="20230810 23:27:04.375"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230810 23:27:04.376" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230810 23:27:04.375" endtime="20230810 23:27:04.376"/>
</kw>
<status status="PASS" starttime="20230810 23:27:04.367" endtime="20230810 23:27:04.376"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230810 23:26:54.627" endtime="20230810 23:27:04.376"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230810 23:26:27.766" endtime="20230810 23:27:04.378"/>
</suite>
<suite id="s1-s3" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s3-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230810 23:28:06.650" level="INFO">Running command 'ozone sh volume create rootca2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230810 23:28:13.732" level="INFO">${rc} = 0</msg>
<msg timestamp="20230810 23:28:13.732" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230810 23:28:06.646" endtime="20230810 23:28:13.732"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230810 23:28:13.733" level="INFO"/>
<status status="PASS" starttime="20230810 23:28:13.732" endtime="20230810 23:28:13.733"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230810 23:28:13.734" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230810 23:28:13.733" endtime="20230810 23:28:13.734"/>
</kw>
<status status="PASS" starttime="20230810 23:28:06.646" endtime="20230810 23:28:13.734"/>
</kw>
<msg timestamp="20230810 23:28:13.734" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230810 23:28:06.646" endtime="20230810 23:28:13.734"/>
</kw>
<msg timestamp="20230810 23:28:13.734" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230810 23:28:06.645" endtime="20230810 23:28:13.734"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230810 23:28:13.735" endtime="20230810 23:28:13.735"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230810 23:28:13.740" level="INFO">Running command 'ozone sh bucket create /rootca2-volume/rootca2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230810 23:28:20.064" level="INFO">${rc} = 0</msg>
<msg timestamp="20230810 23:28:20.064" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230810 23:28:13.737" endtime="20230810 23:28:20.064"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230810 23:28:20.065" level="INFO"/>
<status status="PASS" starttime="20230810 23:28:20.064" endtime="20230810 23:28:20.065"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230810 23:28:20.066" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230810 23:28:20.065" endtime="20230810 23:28:20.066"/>
</kw>
<status status="PASS" starttime="20230810 23:28:13.736" endtime="20230810 23:28:20.066"/>
</kw>
<msg timestamp="20230810 23:28:20.066" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230810 23:28:13.736" endtime="20230810 23:28:20.066"/>
</kw>
<msg timestamp="20230810 23:28:20.066" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230810 23:28:13.735" endtime="20230810 23:28:20.066"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230810 23:28:20.067" endtime="20230810 23:28:20.067"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230810 23:28:06.644" endtime="20230810 23:28:20.067"/>
</test>
<test id="s1-s3-t2" name="Create key" line="34">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230810 23:28:20.073" level="INFO">Running command 'echo "rootca2: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230810 23:28:20.075" level="INFO">${rc} = 0</msg>
<msg timestamp="20230810 23:28:20.076" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230810 23:28:20.070" endtime="20230810 23:28:20.076"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230810 23:28:20.077" level="INFO"/>
<status status="PASS" starttime="20230810 23:28:20.076" endtime="20230810 23:28:20.077"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230810 23:28:20.078" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230810 23:28:20.077" endtime="20230810 23:28:20.078"/>
</kw>
<status status="PASS" starttime="20230810 23:28:20.069" endtime="20230810 23:28:20.078"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230810 23:28:20.083" level="INFO">Running command 'ozone sh key put /rootca2-volume/rootca2-bucket/rootca2-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230810 23:28:30.823" level="INFO">${rc} = 0</msg>
<msg timestamp="20230810 23:28:30.823" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230810 23:28:20.080" endtime="20230810 23:28:30.823"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230810 23:28:30.825" level="INFO"/>
<status status="PASS" starttime="20230810 23:28:30.824" endtime="20230810 23:28:30.825"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230810 23:28:30.826" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230810 23:28:30.825" endtime="20230810 23:28:30.826"/>
</kw>
<status status="PASS" starttime="20230810 23:28:20.079" endtime="20230810 23:28:30.826"/>
</kw>
<msg timestamp="20230810 23:28:30.827" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230810 23:28:20.079" endtime="20230810 23:28:30.827"/>
</kw>
<msg timestamp="20230810 23:28:30.827" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230810 23:28:20.078" endtime="20230810 23:28:30.827"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230810 23:28:30.827" endtime="20230810 23:28:30.828"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230810 23:28:30.831" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230810 23:28:30.835" level="INFO">${rc} = 0</msg>
<msg timestamp="20230810 23:28:30.835" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230810 23:28:30.828" endtime="20230810 23:28:30.835"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230810 23:28:30.836" level="INFO"/>
<status status="PASS" starttime="20230810 23:28:30.835" endtime="20230810 23:28:30.836"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230810 23:28:30.837" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230810 23:28:30.837" endtime="20230810 23:28:30.837"/>
</kw>
<status status="PASS" starttime="20230810 23:28:30.828" endtime="20230810 23:28:30.838"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230810 23:28:20.068" endtime="20230810 23:28:30.838"/>
</test>
<test id="s1-s3-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230810 23:28:30.840" level="INFO">${random} = 91723</msg>
<status status="PASS" starttime="20230810 23:28:30.840" endtime="20230810 23:28:30.840"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230810 23:28:30.845" level="INFO">Running command 'ozone sh key get /rootca2-volume/rootca2-bucket/rootca2-key /tmp/key-91723 2&gt;&amp;1'.</msg>
<msg timestamp="20230810 23:28:38.786" level="INFO">${rc} = 0</msg>
<msg timestamp="20230810 23:28:38.786" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230810 23:28:30.842" endtime="20230810 23:28:38.786"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230810 23:28:38.787" level="INFO"/>
<status status="PASS" starttime="20230810 23:28:38.786" endtime="20230810 23:28:38.787"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230810 23:28:38.788" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230810 23:28:38.787" endtime="20230810 23:28:38.788"/>
</kw>
<status status="PASS" starttime="20230810 23:28:30.842" endtime="20230810 23:28:38.788"/>
</kw>
<msg timestamp="20230810 23:28:38.788" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230810 23:28:30.841" endtime="20230810 23:28:38.789"/>
</kw>
<msg timestamp="20230810 23:28:38.789" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230810 23:28:30.841" endtime="20230810 23:28:38.789"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230810 23:28:38.789" endtime="20230810 23:28:38.790"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230810 23:28:38.794" level="INFO">Running command 'cat /tmp/key-91723 2&gt;&amp;1'.</msg>
<msg timestamp="20230810 23:28:38.797" level="INFO">${rc} = 0</msg>
<msg timestamp="20230810 23:28:38.797" level="INFO">${output} = rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230810 23:28:38.791" endtime="20230810 23:28:38.797"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230810 23:28:38.798" level="INFO">rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230810 23:28:38.798" endtime="20230810 23:28:38.799"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230810 23:28:38.800" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230810 23:28:38.799" endtime="20230810 23:28:38.800"/>
</kw>
<msg timestamp="20230810 23:28:38.800" level="INFO">${output} = rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230810 23:28:38.790" endtime="20230810 23:28:38.800"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230810 23:28:38.800" endtime="20230810 23:28:38.801"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230810 23:28:38.804" level="INFO">Running command 'rm /tmp/key-91723 2&gt;&amp;1'.</msg>
<msg timestamp="20230810 23:28:38.809" level="INFO">${rc} = 0</msg>
<msg timestamp="20230810 23:28:38.809" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230810 23:28:38.801" endtime="20230810 23:28:38.809"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230810 23:28:38.810" level="INFO"/>
<status status="PASS" starttime="20230810 23:28:38.809" endtime="20230810 23:28:38.810"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230810 23:28:38.811" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230810 23:28:38.810" endtime="20230810 23:28:38.811"/>
</kw>
<status status="PASS" starttime="20230810 23:28:38.801" endtime="20230810 23:28:38.811"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230810 23:28:30.839" endtime="20230810 23:28:38.811"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230810 23:28:06.587" endtime="20230810 23:28:38.813"/>
</suite>
<suite id="s1-s4" name="Root-Ca-Rotation" source="/opt/hadoop/smoketest/scmha/root-ca-rotation.robot">
<test id="s1-s4-t1" name="Verify root CA rotation metrics" line="26">
<kw name="Execute" library="os">
<var>${successRotationLine}</var>
<arg>curl -sS 'http://localhost:9876/jmx' | grep NumSuccessRotation</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230810 23:28:43.157" level="INFO">Running command 'curl -sS 'http://localhost:9876/jmx' | grep NumSuccessRotation 2&gt;&amp;1'.</msg>
<msg timestamp="20230810 23:28:43.796" level="INFO">${rc} = 0</msg>
<msg timestamp="20230810 23:28:43.796" level="INFO">${output} =     "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230810 23:28:43.154" endtime="20230810 23:28:43.796"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230810 23:28:43.798" level="INFO">    "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230810 23:28:43.797" endtime="20230810 23:28:43.798"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230810 23:28:43.799" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230810 23:28:43.798" endtime="20230810 23:28:43.799"/>
</kw>
<status status="PASS" starttime="20230810 23:28:43.153" endtime="20230810 23:28:43.799"/>
</kw>
<msg timestamp="20230810 23:28:43.799" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230810 23:28:43.153" endtime="20230810 23:28:43.800"/>
</kw>
<msg timestamp="20230810 23:28:43.800" level="INFO">${successRotationLine} =     "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230810 23:28:43.152" endtime="20230810 23:28:43.800"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${successRotationLine}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230810 23:28:43.800" level="INFO">    "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230810 23:28:43.800" endtime="20230810 23:28:43.800"/>
</kw>
<kw name="Split String" library="String">
<var>${temp_1}</var>
<arg>${successRotationLine}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230810 23:28:43.801" level="INFO">${temp_1} = ['    "NumSuccessRotation" ', ' 2,']</msg>
<status status="PASS" starttime="20230810 23:28:43.801" endtime="20230810 23:28:43.801"/>
</kw>
<kw name="Strip String" library="String">
<var>${temp_2}</var>
<arg>${temp_1[1]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230810 23:28:43.805" level="INFO">${temp_2} = 2,</msg>
<status status="PASS" starttime="20230810 23:28:43.801" endtime="20230810 23:28:43.805"/>
</kw>
<kw name="Split String" library="String">
<var>${temp_3}</var>
<arg>${temp_2}</arg>
<arg>,</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230810 23:28:43.806" level="INFO">${temp_3} = ['2', '']</msg>
<status status="PASS" starttime="20230810 23:28:43.805" endtime="20230810 23:28:43.806"/>
</kw>
<kw name="Strip String" library="String">
<var>${successRotation}</var>
<arg>${temp_3[0]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230810 23:28:43.808" level="INFO">${successRotation} = 2</msg>
<status status="PASS" starttime="20230810 23:28:43.806" endtime="20230810 23:28:43.808"/>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<var>${successRotation}</var>
<arg>${successRotation}</arg>
<doc>Converts the given item to a floating point number.</doc>
<msg timestamp="20230810 23:28:43.809" level="INFO">${successRotation} = 2.0</msg>
<status status="PASS" starttime="20230810 23:28:43.808" endtime="20230810 23:28:43.809"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${successRotation} &gt;= 1</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230810 23:28:43.809" endtime="20230810 23:28:43.809"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230810 23:28:43.151" endtime="20230810 23:28:43.810"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230810 23:28:43.094" endtime="20230810 23:28:43.821"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="69682"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="2" fail="0" skip="0">create-volume-and-bucket</stat>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="ozonesecure-root-ca-rotation">ozonesecure-root-ca-rotation</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Kinit">ozonesecure-root-ca-rotation.Kinit</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Root-Ca-Rotation-Client-Checks">ozonesecure-root-ca-rotation.Root-Ca-Rotation-Client-Checks</stat>
<stat pass="3" fail="0" skip="0" id="s1-s3" name="Root-Ca-Rotation-Client-Checks">ozonesecure-root-ca-rotation.Root-Ca-Rotation-Client-Checks</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Root-Ca-Rotation">ozonesecure-root-ca-rotation.Root-Ca-Rotation</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
