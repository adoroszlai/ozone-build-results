<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20230818 06:09:41.923" rpa="false" schemaversion="4">
<suite id="s1" name="ozone-om-prepare">
<suite id="s1-s1" name="Om-Prepare" source="/opt/hadoop/smoketest/omha/om-prepare.robot">
<kw name="Create Specific OM data for prepare" type="SETUP">
<kw name="Freon OCKG" library="freon">
<arg>prefix=om-prepare</arg>
<arg>n=100</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230818 06:01:37.954" level="INFO">Running command 'ozone freon ockg --om-service-id=omservice -t 1 -n100 -p om-prepare  2&gt;&amp;1'.</msg>
<msg timestamp="20230818 06:02:04.373" level="INFO">${rc} = 0</msg>
<msg timestamp="20230818 06:02:04.373" level="INFO">${output} = 2023-08-18 06:01:40,467 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-18 06:01:40,687 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230818 06:01:37.952" endtime="20230818 06:02:04.373"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230818 06:02:04.374" level="INFO">2023-08-18 06:01:40,467 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-18 06:01:40,687 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-08-18 06:01:40,687 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-08-18 06:01:40,798 [main] INFO freon.BaseFreonGenerator: Executing test with prefix om-prepare and number-of-tests 100
2023-08-18 06:01:40,877 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-08-18 06:01:41,881 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-08-18 06:01:41,940 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2023-08-18 06:01:42,291 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false, Replication Type set to server-side default replication type, Namespace Quota set to -1, Space Quota set to -1 
2023-08-18 06:01:42,882 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-08-18 06:01:43,776 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-08-18 06:01:43,882 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-08-18 06:01:44,226 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-08-18 06:01:44,882 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-08-18 06:01:45,883 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-08-18 06:01:46,885 [Thread-3] INFO freon.ProgressBar: Progress: 1.00 % (1 out of 100)
2023-08-18 06:01:47,886 [Thread-3] INFO freon.ProgressBar: Progress: 5.00 % (5 out of 100)
2023-08-18 06:01:48,886 [Thread-3] INFO freon.ProgressBar: Progress: 9.00 % (9 out of 100)
2023-08-18 06:01:49,887 [Thread-3] INFO freon.ProgressBar: Progress: 15.00 % (15 out of 100)
2023-08-18 06:01:50,887 [Thread-3] INFO freon.ProgressBar: Progress: 19.00 % (19 out of 100)
2023-08-18 06:01:51,888 [Thread-3] INFO freon.ProgressBar: Progress: 24.00 % (24 out of 100)
2023-08-18 06:01:52,889 [Thread-3] INFO freon.ProgressBar: Progress: 30.00 % (30 out of 100)
2023-08-18 06:01:53,889 [Thread-3] INFO freon.ProgressBar: Progress: 36.00 % (36 out of 100)
2023-08-18 06:01:54,890 [Thread-3] INFO freon.ProgressBar: Progress: 42.00 % (42 out of 100)
2023-08-18 06:01:55,890 [Thread-3] INFO freon.ProgressBar: Progress: 48.00 % (48 out of 100)
2023-08-18 06:01:56,891 [Thread-3] INFO freon.ProgressBar: Progress: 55.00 % (55 out of 100)
2023-08-18 06:01:57,898 [Thread-3] INFO freon.ProgressBar: Progress: 62.00 % (62 out of 100)
2023-08-18 06:01:58,916 [Thread-3] INFO freon.ProgressBar: Progress: 69.00 % (69 out of 100)
2023-08-18 06:01:59,919 [Thread-3] INFO freon.ProgressBar: Progress: 76.00 % (76 out of 100)
2023-08-18 06:02:00,923 [Thread-3] INFO freon.ProgressBar: Progress: 83.00 % (83 out of 100)
2023-08-18 06:02:01,924 [Thread-3] INFO freon.ProgressBar: Progress: 90.00 % (90 out of 100)
2023-08-18 06:02:02,924 [Thread-3] INFO freon.ProgressBar: Progress: 97.00 % (97 out of 100)
2023-08-18 06:02:03,925 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2023-08-18 06:02:03,985 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=100, min=107.019051, max=4103.578408, mean=199.8429111930374, stddev=367.98596935859894, median=157.57057, p75=183.042114, p95=251.853491, p98=329.58002, p99=373.570163, p999=4103.578408, mean_rate=4.642013943438613, m1=1.8226393024975223, m5=0.8672077840328213, m15=0.6904233622759931, rate_unit=events/second, duration_unit=milliseconds
2023-08-18 06:02:03,985 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 23
2023-08-18 06:02:03,986 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-08-18 06:02:03,986 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20230818 06:02:04.373" endtime="20230818 06:02:04.374"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230818 06:02:04.375" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230818 06:02:04.374" endtime="20230818 06:02:04.375"/>
</kw>
<status status="PASS" starttime="20230818 06:01:37.951" endtime="20230818 06:02:04.375"/>
</kw>
<msg timestamp="20230818 06:02:04.375" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230818 06:01:37.951" endtime="20230818 06:02:04.375"/>
</kw>
<msg timestamp="20230818 06:02:04.376" level="INFO">${result} = 2023-08-18 06:01:40,467 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-18 06:01:40,687 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230818 06:01:37.950" endtime="20230818 06:02:04.376"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230818 06:02:04.376" endtime="20230818 06:02:04.377"/>
</kw>
<status status="PASS" starttime="20230818 06:01:37.949" endtime="20230818 06:02:04.377"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230818 06:02:04.378" level="INFO">${random} = 94099</msg>
<status status="PASS" starttime="20230818 06:02:04.377" endtime="20230818 06:02:04.378"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230818 06:02:04.380" level="INFO">${volume_name} = 94099-volume-for-prepare</msg>
<status status="PASS" starttime="20230818 06:02:04.378" endtime="20230818 06:02:04.380"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${bucket_name}</arg>
<arg>${random}-bucket-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230818 06:02:04.382" level="INFO">${bucket_name} = 94099-bucket-for-prepare</msg>
<status status="PASS" starttime="20230818 06:02:04.381" endtime="20230818 06:02:04.382"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${volume_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230818 06:02:04.386" level="INFO">Running command 'ozone sh volume create /94099-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20230818 06:02:08.593" level="INFO">${rc} = 0</msg>
<msg timestamp="20230818 06:02:08.593" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230818 06:02:04.384" endtime="20230818 06:02:08.593"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230818 06:02:08.594" level="INFO"/>
<status status="PASS" starttime="20230818 06:02:08.594" endtime="20230818 06:02:08.594"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230818 06:02:08.595" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230818 06:02:08.595" endtime="20230818 06:02:08.595"/>
</kw>
<status status="PASS" starttime="20230818 06:02:04.383" endtime="20230818 06:02:08.596"/>
</kw>
<msg timestamp="20230818 06:02:08.596" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230818 06:02:04.383" endtime="20230818 06:02:08.596"/>
</kw>
<status status="PASS" starttime="20230818 06:02:04.382" endtime="20230818 06:02:08.596"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume_name}/${bucket_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230818 06:02:08.601" level="INFO">Running command 'ozone sh bucket create /94099-volume-for-prepare/94099-bucket-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20230818 06:02:13.018" level="INFO">${rc} = 0</msg>
<msg timestamp="20230818 06:02:13.018" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230818 06:02:08.598" endtime="20230818 06:02:13.018"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230818 06:02:13.019" level="INFO"/>
<status status="PASS" starttime="20230818 06:02:13.019" endtime="20230818 06:02:13.020"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230818 06:02:13.020" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230818 06:02:13.020" endtime="20230818 06:02:13.020"/>
</kw>
<status status="PASS" starttime="20230818 06:02:08.597" endtime="20230818 06:02:13.021"/>
</kw>
<msg timestamp="20230818 06:02:13.021" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230818 06:02:08.597" endtime="20230818 06:02:13.021"/>
</kw>
<status status="PASS" starttime="20230818 06:02:08.596" endtime="20230818 06:02:13.021"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230818 06:02:13.026" level="INFO">Running command 'ozone sh key put /94099-volume-for-prepare/94099-bucket-for-prepare/prepare-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230818 06:02:20.710" level="INFO">${rc} = 0</msg>
<msg timestamp="20230818 06:02:20.710" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230818 06:02:13.023" endtime="20230818 06:02:20.710"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230818 06:02:20.711" level="INFO"/>
<status status="PASS" starttime="20230818 06:02:20.711" endtime="20230818 06:02:20.712"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230818 06:02:20.712" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230818 06:02:20.712" endtime="20230818 06:02:20.712"/>
</kw>
<status status="PASS" starttime="20230818 06:02:13.022" endtime="20230818 06:02:20.713"/>
</kw>
<msg timestamp="20230818 06:02:20.713" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230818 06:02:13.022" endtime="20230818 06:02:20.713"/>
</kw>
<status status="PASS" starttime="20230818 06:02:13.021" endtime="20230818 06:02:20.713"/>
</kw>
<status status="PASS" starttime="20230818 06:01:37.948" endtime="20230818 06:02:20.713"/>
</kw>
<test id="s1-s1-t1" name="Prepare Ozone Manager" line="39">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230818 06:02:20.715" endtime="20230818 06:02:20.715"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id=omservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230818 06:02:20.721" level="INFO">Running command 'ozone admin om prepare -id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230818 06:02:35.121" level="INFO">${rc} = 0</msg>
<msg timestamp="20230818 06:02:35.121" level="INFO">${output} = Ozone Manager Prepare Request successfully returned with Transaction Id : [413].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20230818 06:02:20.718" endtime="20230818 06:02:35.122"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230818 06:02:35.123" level="INFO">Ozone Manager Prepare Request successfully returned with Transaction Id : [413].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [413]
OM : [om3], Prepare Status : [NOT_PREPARED], Current Transaction Id : [-1]
OM : [om2], Prepare Status : [NOT_PREPARED], Current Transaction Id : [-1]
Waiting for 10 seconds before retrying...
OM : [om3], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [413]
OM : [om2], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [413]

OM Preparation successful! 
All OMs are prepared
No new write requests will be allowed until preparation is cancelled or upgrade/downgrade is done.</msg>
<status status="PASS" starttime="20230818 06:02:35.122" endtime="20230818 06:02:35.123"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230818 06:02:35.124" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230818 06:02:35.123" endtime="20230818 06:02:35.124"/>
</kw>
<status status="PASS" starttime="20230818 06:02:20.717" endtime="20230818 06:02:35.125"/>
</kw>
<msg timestamp="20230818 06:02:35.125" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230818 06:02:20.717" endtime="20230818 06:02:35.125"/>
</kw>
<msg timestamp="20230818 06:02:35.125" level="INFO">${result} = Ozone Manager Prepare Request successfully returned with Transaction Id : [413].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20230818 06:02:20.716" endtime="20230818 06:02:35.125"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230818 06:02:35.126" endtime="20230818 06:02:35.127"/>
</kw>
<status status="PASS" starttime="20230818 06:02:35.126" endtime="20230818 06:02:35.127"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230818 06:02:20.714" endtime="20230818 06:02:35.127"/>
</test>
<test id="s1-s1-t2" name="Checks if the expected data is present in OM" line="43">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230818 06:02:35.130" endtime="20230818 06:02:35.131"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230818 06:02:35.137" level="INFO">Running command 'ozone sh key info /94099-volume-for-prepare/94099-bucket-for-prepare/prepare-key 2&gt;&amp;1'.</msg>
<msg timestamp="20230818 06:02:39.724" level="INFO">${rc} = 0</msg>
<msg timestamp="20230818 06:02:39.725" level="INFO">${output} = {
  "volumeName" : "94099-volume-for-prepare",
  "bucketName" : "94099-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17289,
  "creationTime" : "2023-08-18T06:02:17.490Z",
  "modificati...</msg>
<status status="PASS" starttime="20230818 06:02:35.134" endtime="20230818 06:02:39.725"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230818 06:02:39.726" level="INFO">{
  "volumeName" : "94099-volume-for-prepare",
  "bucketName" : "94099-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17289,
  "creationTime" : "2023-08-18T06:02:17.490Z",
  "modificationTime" : "2023-08-18T06:02:20.285Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "ozoneKeyLocations" : [ {
    "containerID" : 2,
    "localID" : 111677748019200101,
    "length" : 17289,
    "offset" : 0,
    "keyOffset" : 0
  } ],
  "file" : true
}</msg>
<status status="PASS" starttime="20230818 06:02:39.725" endtime="20230818 06:02:39.726"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230818 06:02:39.727" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230818 06:02:39.726" endtime="20230818 06:02:39.727"/>
</kw>
<status status="PASS" starttime="20230818 06:02:35.133" endtime="20230818 06:02:39.727"/>
</kw>
<msg timestamp="20230818 06:02:39.727" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230818 06:02:35.132" endtime="20230818 06:02:39.728"/>
</kw>
<msg timestamp="20230818 06:02:39.728" level="INFO">${result} = {
  "volumeName" : "94099-volume-for-prepare",
  "bucketName" : "94099-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17289,
  "creationTime" : "2023-08-18T06:02:17.490Z",
  "modificati...</msg>
<status status="PASS" starttime="20230818 06:02:35.132" endtime="20230818 06:02:39.728"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"name\" : \"prepare-key\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230818 06:02:39.728" endtime="20230818 06:02:39.729"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230818 06:02:35.129" endtime="20230818 06:02:39.729"/>
</test>
<test id="s1-s1-t3" name="Test write operation fails" line="47">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230818 06:02:39.732" endtime="20230818 06:02:39.732"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key2 /opt/hadoop/NOTICE.txt</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230818 06:02:39.737" level="INFO">Running command 'ozone sh key put /94099-volume-for-prepare/94099-bucket-for-prepare/prepare-key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230818 06:02:44.448" level="INFO">${rc} = 255</msg>
<msg timestamp="20230818 06:02:44.448" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230818 06:02:39.734" endtime="20230818 06:02:44.448"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230818 06:02:44.450" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230818 06:02:44.449" endtime="20230818 06:02:44.450"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230818 06:02:44.451" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230818 06:02:44.451" endtime="20230818 06:02:44.452"/>
</kw>
<msg timestamp="20230818 06:02:44.452" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230818 06:02:39.733" endtime="20230818 06:02:44.452"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230818 06:02:44.452" endtime="20230818 06:02:44.453"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key2</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230818 06:02:44.456" level="INFO">Running command 'ozone sh key info /94099-volume-for-prepare/94099-bucket-for-prepare/prepare-key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230818 06:02:48.419" level="INFO">${rc} = 255</msg>
<msg timestamp="20230818 06:02:48.420" level="INFO">${output} = KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20230818 06:02:44.454" endtime="20230818 06:02:48.420"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230818 06:02:48.421" level="INFO">KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20230818 06:02:48.420" endtime="20230818 06:02:48.421"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230818 06:02:48.422" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230818 06:02:48.421" endtime="20230818 06:02:48.422"/>
</kw>
<status status="PASS" starttime="20230818 06:02:44.453" endtime="20230818 06:02:48.423"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230818 06:02:39.731" endtime="20230818 06:02:48.423"/>
</test>
<doc>Smoke test to test preparing OMs in an OM HA cluster.</doc>
<status status="PASS" starttime="20230818 06:01:37.842" endtime="20230818 06:02:48.425"/>
</suite>
<suite id="s1-s2" name="Om-Cancel-Prepare" source="/opt/hadoop/smoketest/omha/om-cancel-prepare.robot">
<kw name="Generate volume and bucket names" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230818 06:02:51.941" level="INFO">${random} = 51341</msg>
<status status="PASS" starttime="20230818 06:02:51.940" endtime="20230818 06:02:51.941"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-cancel</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230818 06:02:51.943" level="INFO">${volume_name} = 51341-volume-for-cancel</msg>
<status status="PASS" starttime="20230818 06:02:51.941" endtime="20230818 06:02:51.943"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${bucket_name}</arg>
<arg>${random}-bucket-for-cancel</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230818 06:02:51.945" level="INFO">${bucket_name} = 51341-bucket-for-cancel</msg>
<status status="PASS" starttime="20230818 06:02:51.944" endtime="20230818 06:02:51.945"/>
</kw>
<status status="PASS" starttime="20230818 06:02:51.939" endtime="20230818 06:02:51.946"/>
</kw>
<test id="s1-s2-t1" name="Cancel Ozone Manager Prepare" line="33">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230818 06:02:51.947" endtime="20230818 06:02:51.947"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om cancelprepare -id=omservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230818 06:02:51.952" level="INFO">Running command 'ozone admin om cancelprepare -id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230818 06:02:56.681" level="INFO">${rc} = 0</msg>
<msg timestamp="20230818 06:02:56.681" level="INFO">${output} = Cancel prepare succeeded, cluster can now accept write requests.</msg>
<status status="PASS" starttime="20230818 06:02:51.949" endtime="20230818 06:02:56.681"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230818 06:02:56.682" level="INFO">Cancel prepare succeeded, cluster can now accept write requests.</msg>
<status status="PASS" starttime="20230818 06:02:56.681" endtime="20230818 06:02:56.682"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230818 06:02:56.683" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230818 06:02:56.683" endtime="20230818 06:02:56.684"/>
</kw>
<status status="PASS" starttime="20230818 06:02:51.948" endtime="20230818 06:02:56.684"/>
</kw>
<msg timestamp="20230818 06:02:56.684" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230818 06:02:51.948" endtime="20230818 06:02:56.684"/>
</kw>
<msg timestamp="20230818 06:02:56.684" level="INFO">${result} = Cancel prepare succeeded, cluster can now accept write requests.</msg>
<status status="PASS" starttime="20230818 06:02:51.948" endtime="20230818 06:02:56.684"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>5sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Cancel prepare succeeded</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Cancel prepare succeeded</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230818 06:02:56.685" endtime="20230818 06:02:56.686"/>
</kw>
<status status="PASS" starttime="20230818 06:02:56.685" endtime="20230818 06:02:56.686"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230818 06:02:51.946" endtime="20230818 06:02:56.686"/>
</test>
<test id="s1-s2-t2" name="Test write operations" line="37">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230818 06:02:56.688" endtime="20230818 06:02:56.689"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${volume_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230818 06:02:56.694" level="INFO">Running command 'ozone sh volume create /51341-volume-for-cancel 2&gt;&amp;1'.</msg>
<msg timestamp="20230818 06:03:00.743" level="INFO">${rc} = 0</msg>
<msg timestamp="20230818 06:03:00.743" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230818 06:02:56.691" endtime="20230818 06:03:00.743"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230818 06:03:00.745" level="INFO"/>
<status status="PASS" starttime="20230818 06:03:00.744" endtime="20230818 06:03:00.745"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230818 06:03:00.746" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230818 06:03:00.745" endtime="20230818 06:03:00.746"/>
</kw>
<status status="PASS" starttime="20230818 06:02:56.690" endtime="20230818 06:03:00.746"/>
</kw>
<msg timestamp="20230818 06:03:00.746" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230818 06:02:56.690" endtime="20230818 06:03:00.746"/>
</kw>
<status status="PASS" starttime="20230818 06:02:56.689" endtime="20230818 06:03:00.746"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume_name}/${bucket_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230818 06:03:00.752" level="INFO">Running command 'ozone sh bucket create /51341-volume-for-cancel/51341-bucket-for-cancel 2&gt;&amp;1'.</msg>
<msg timestamp="20230818 06:03:04.847" level="INFO">${rc} = 0</msg>
<msg timestamp="20230818 06:03:04.847" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230818 06:03:00.749" endtime="20230818 06:03:04.847"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230818 06:03:04.849" level="INFO"/>
<status status="PASS" starttime="20230818 06:03:04.848" endtime="20230818 06:03:04.849"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230818 06:03:04.849" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230818 06:03:04.849" endtime="20230818 06:03:04.850"/>
</kw>
<status status="PASS" starttime="20230818 06:03:00.748" endtime="20230818 06:03:04.850"/>
</kw>
<msg timestamp="20230818 06:03:04.850" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230818 06:03:00.748" endtime="20230818 06:03:04.850"/>
</kw>
<status status="PASS" starttime="20230818 06:03:00.747" endtime="20230818 06:03:04.850"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key put /${volume_name}/${bucket_name}/cancel-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230818 06:03:04.860" level="INFO">Running command 'ozone sh key put /51341-volume-for-cancel/51341-bucket-for-cancel/cancel-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230818 06:03:12.716" level="INFO">${rc} = 0</msg>
<msg timestamp="20230818 06:03:12.716" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230818 06:03:04.853" endtime="20230818 06:03:12.716"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230818 06:03:12.718" level="INFO"/>
<status status="PASS" starttime="20230818 06:03:12.717" endtime="20230818 06:03:12.718"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230818 06:03:12.718" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230818 06:03:12.718" endtime="20230818 06:03:12.719"/>
</kw>
<status status="PASS" starttime="20230818 06:03:04.853" endtime="20230818 06:03:12.719"/>
</kw>
<msg timestamp="20230818 06:03:12.719" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230818 06:03:04.852" endtime="20230818 06:03:12.719"/>
</kw>
<msg timestamp="20230818 06:03:12.719" level="INFO">${result} = </msg>
<status status="PASS" starttime="20230818 06:03:04.851" endtime="20230818 06:03:12.720"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume_name}/${bucket_name}/cancel-key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230818 06:03:12.725" level="INFO">Running command 'ozone sh key info /51341-volume-for-cancel/51341-bucket-for-cancel/cancel-key 2&gt;&amp;1'.</msg>
<msg timestamp="20230818 06:03:17.462" level="INFO">${rc} = 0</msg>
<msg timestamp="20230818 06:03:17.462" level="INFO">${output} = {
  "volumeName" : "51341-volume-for-cancel",
  "bucketName" : "51341-bucket-for-cancel",
  "name" : "cancel-key",
  "dataSize" : 17289,
  "creationTime" : "2023-08-18T06:03:09.493Z",
  "modificationT...</msg>
<status status="PASS" starttime="20230818 06:03:12.722" endtime="20230818 06:03:17.462"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230818 06:03:17.464" level="INFO">{
  "volumeName" : "51341-volume-for-cancel",
  "bucketName" : "51341-bucket-for-cancel",
  "name" : "cancel-key",
  "dataSize" : 17289,
  "creationTime" : "2023-08-18T06:03:09.493Z",
  "modificationTime" : "2023-08-18T06:03:12.250Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "ozoneKeyLocations" : [ {
    "containerID" : 4,
    "localID" : 111677748019200103,
    "length" : 17289,
    "offset" : 0,
    "keyOffset" : 0
  } ],
  "file" : true
}</msg>
<status status="PASS" starttime="20230818 06:03:17.463" endtime="20230818 06:03:17.464"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230818 06:03:17.465" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230818 06:03:17.464" endtime="20230818 06:03:17.465"/>
</kw>
<status status="PASS" starttime="20230818 06:03:12.721" endtime="20230818 06:03:17.465"/>
</kw>
<msg timestamp="20230818 06:03:17.466" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230818 06:03:12.721" endtime="20230818 06:03:17.466"/>
</kw>
<msg timestamp="20230818 06:03:17.466" level="INFO">${result} = {
  "volumeName" : "51341-volume-for-cancel",
  "bucketName" : "51341-bucket-for-cancel",
  "name" : "cancel-key",
  "dataSize" : 17289,
  "creationTime" : "2023-08-18T06:03:09.493Z",
  "modificationT...</msg>
<status status="PASS" starttime="20230818 06:03:12.720" endtime="20230818 06:03:17.466"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"name\" : \"cancel-key\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230818 06:03:17.466" endtime="20230818 06:03:17.467"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230818 06:02:56.687" endtime="20230818 06:03:17.467"/>
</test>
<doc>Smoke test for ozone manager cancel prepare</doc>
<status status="PASS" starttime="20230818 06:02:51.856" endtime="20230818 06:03:17.469"/>
</suite>
<suite id="s1-s3" name="Om-Prepare" source="/opt/hadoop/smoketest/omha/om-prepare.robot">
<kw name="Create Specific OM data for prepare" type="SETUP">
<kw name="Freon OCKG" library="freon">
<arg>prefix=om-prepare</arg>
<arg>n=100</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230818 06:03:21.005" level="INFO">Running command 'ozone freon ockg --om-service-id=omservice -t 1 -n100 -p om-prepare  2&gt;&amp;1'.</msg>
<msg timestamp="20230818 06:03:41.436" level="INFO">${rc} = 0</msg>
<msg timestamp="20230818 06:03:41.436" level="INFO">${output} = 2023-08-18 06:03:23,391 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-18 06:03:23,675 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230818 06:03:21.002" endtime="20230818 06:03:41.436"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230818 06:03:41.437" level="INFO">2023-08-18 06:03:23,391 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-18 06:03:23,675 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-08-18 06:03:23,675 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-08-18 06:03:23,822 [main] INFO freon.BaseFreonGenerator: Executing test with prefix om-prepare and number-of-tests 100
2023-08-18 06:03:23,901 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-08-18 06:03:24,903 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-08-18 06:03:25,718 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-08-18 06:03:25,904 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-08-18 06:03:26,093 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-08-18 06:03:26,904 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 100)
2023-08-18 06:03:27,911 [Thread-3] INFO freon.ProgressBar: Progress: 4.00 % (4 out of 100)
2023-08-18 06:03:28,914 [Thread-3] INFO freon.ProgressBar: Progress: 12.00 % (12 out of 100)
2023-08-18 06:03:29,914 [Thread-3] INFO freon.ProgressBar: Progress: 19.00 % (19 out of 100)
2023-08-18 06:03:30,920 [Thread-3] INFO freon.ProgressBar: Progress: 25.00 % (25 out of 100)
2023-08-18 06:03:31,921 [Thread-3] INFO freon.ProgressBar: Progress: 30.00 % (30 out of 100)
2023-08-18 06:03:32,922 [Thread-3] INFO freon.ProgressBar: Progress: 39.00 % (39 out of 100)
2023-08-18 06:03:33,923 [Thread-3] INFO freon.ProgressBar: Progress: 45.00 % (45 out of 100)
2023-08-18 06:03:34,925 [Thread-3] INFO freon.ProgressBar: Progress: 53.00 % (53 out of 100)
2023-08-18 06:03:35,925 [Thread-3] INFO freon.ProgressBar: Progress: 60.00 % (60 out of 100)
2023-08-18 06:03:36,926 [Thread-3] INFO freon.ProgressBar: Progress: 68.00 % (68 out of 100)
2023-08-18 06:03:37,927 [Thread-3] INFO freon.ProgressBar: Progress: 77.00 % (77 out of 100)
2023-08-18 06:03:38,930 [Thread-3] INFO freon.ProgressBar: Progress: 86.00 % (86 out of 100)
2023-08-18 06:03:39,931 [Thread-3] INFO freon.ProgressBar: Progress: 94.00 % (94 out of 100)
2023-08-18 06:03:40,931 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (100 out of 100)
2023-08-18 06:03:41,067 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=100, min=72.409538, max=2251.985924, mean=150.8530254221794, stddev=203.43523985308457, median=125.62567, p75=151.7985, p95=197.715439, p98=220.902146, p99=306.41261, p999=2251.985924, mean_rate=6.213536070172268, m1=4.543067568951622, m5=4.114989521867874, m15=4.038701261426989, rate_unit=events/second, duration_unit=milliseconds
2023-08-18 06:03:41,068 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 17
2023-08-18 06:03:41,069 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-08-18 06:03:41,069 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 100</msg>
<status status="PASS" starttime="20230818 06:03:41.437" endtime="20230818 06:03:41.438"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230818 06:03:41.438" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230818 06:03:41.438" endtime="20230818 06:03:41.438"/>
</kw>
<status status="PASS" starttime="20230818 06:03:21.002" endtime="20230818 06:03:41.439"/>
</kw>
<msg timestamp="20230818 06:03:41.439" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230818 06:03:21.001" endtime="20230818 06:03:41.439"/>
</kw>
<msg timestamp="20230818 06:03:41.439" level="INFO">${result} = 2023-08-18 06:03:23,391 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-18 06:03:23,675 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230818 06:03:21.000" endtime="20230818 06:03:41.439"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230818 06:03:41.440" endtime="20230818 06:03:41.440"/>
</kw>
<status status="PASS" starttime="20230818 06:03:20.998" endtime="20230818 06:03:41.441"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230818 06:03:41.441" level="INFO">${random} = 91526</msg>
<status status="PASS" starttime="20230818 06:03:41.441" endtime="20230818 06:03:41.441"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230818 06:03:41.444" level="INFO">${volume_name} = 91526-volume-for-prepare</msg>
<status status="PASS" starttime="20230818 06:03:41.442" endtime="20230818 06:03:41.445"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${bucket_name}</arg>
<arg>${random}-bucket-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230818 06:03:41.448" level="INFO">${bucket_name} = 91526-bucket-for-prepare</msg>
<status status="PASS" starttime="20230818 06:03:41.445" endtime="20230818 06:03:41.448"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create /${volume_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230818 06:03:41.456" level="INFO">Running command 'ozone sh volume create /91526-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20230818 06:03:45.931" level="INFO">${rc} = 0</msg>
<msg timestamp="20230818 06:03:45.931" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230818 06:03:41.450" endtime="20230818 06:03:45.931"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230818 06:03:45.932" level="INFO"/>
<status status="PASS" starttime="20230818 06:03:45.932" endtime="20230818 06:03:45.932"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230818 06:03:45.933" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230818 06:03:45.932" endtime="20230818 06:03:45.933"/>
</kw>
<status status="PASS" starttime="20230818 06:03:41.449" endtime="20230818 06:03:45.933"/>
</kw>
<msg timestamp="20230818 06:03:45.933" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230818 06:03:41.449" endtime="20230818 06:03:45.933"/>
</kw>
<status status="PASS" starttime="20230818 06:03:41.448" endtime="20230818 06:03:45.934"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume_name}/${bucket_name}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230818 06:03:45.939" level="INFO">Running command 'ozone sh bucket create /91526-volume-for-prepare/91526-bucket-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20230818 06:03:50.454" level="INFO">${rc} = 0</msg>
<msg timestamp="20230818 06:03:50.454" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230818 06:03:45.936" endtime="20230818 06:03:50.454"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230818 06:03:50.455" level="INFO"/>
<status status="PASS" starttime="20230818 06:03:50.455" endtime="20230818 06:03:50.456"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230818 06:03:50.456" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230818 06:03:50.456" endtime="20230818 06:03:50.456"/>
</kw>
<status status="PASS" starttime="20230818 06:03:45.935" endtime="20230818 06:03:50.457"/>
</kw>
<msg timestamp="20230818 06:03:50.457" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230818 06:03:45.934" endtime="20230818 06:03:50.457"/>
</kw>
<status status="PASS" starttime="20230818 06:03:45.934" endtime="20230818 06:03:50.457"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230818 06:03:50.462" level="INFO">Running command 'ozone sh key put /91526-volume-for-prepare/91526-bucket-for-prepare/prepare-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230818 06:03:57.710" level="INFO">${rc} = 0</msg>
<msg timestamp="20230818 06:03:57.710" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230818 06:03:50.459" endtime="20230818 06:03:57.710"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230818 06:03:57.712" level="INFO"/>
<status status="PASS" starttime="20230818 06:03:57.711" endtime="20230818 06:03:57.712"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230818 06:03:57.713" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230818 06:03:57.712" endtime="20230818 06:03:57.713"/>
</kw>
<status status="PASS" starttime="20230818 06:03:50.458" endtime="20230818 06:03:57.713"/>
</kw>
<msg timestamp="20230818 06:03:57.713" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230818 06:03:50.458" endtime="20230818 06:03:57.713"/>
</kw>
<status status="PASS" starttime="20230818 06:03:50.457" endtime="20230818 06:03:57.713"/>
</kw>
<status status="PASS" starttime="20230818 06:03:20.998" endtime="20230818 06:03:57.714"/>
</kw>
<test id="s1-s3-t1" name="Prepare Ozone Manager" line="39">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230818 06:03:57.716" endtime="20230818 06:03:57.716"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id=omservice</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230818 06:03:57.722" level="INFO">Running command 'ozone admin om prepare -id=omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230818 06:04:07.396" level="INFO">${rc} = 0</msg>
<msg timestamp="20230818 06:04:07.396" level="INFO">${output} = Ozone Manager Prepare Request successfully returned with Transaction Id : [833].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20230818 06:03:57.719" endtime="20230818 06:04:07.397"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230818 06:04:07.398" level="INFO">Ozone Manager Prepare Request successfully returned with Transaction Id : [833].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [833]
OM : [om3], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [833]
OM : [om2], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [833]

OM Preparation successful! 
All OMs are prepared
No new write requests will be allowed until preparation is cancelled or upgrade/downgrade is done.</msg>
<status status="PASS" starttime="20230818 06:04:07.397" endtime="20230818 06:04:07.398"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230818 06:04:07.399" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230818 06:04:07.398" endtime="20230818 06:04:07.399"/>
</kw>
<status status="PASS" starttime="20230818 06:03:57.718" endtime="20230818 06:04:07.399"/>
</kw>
<msg timestamp="20230818 06:04:07.399" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230818 06:03:57.717" endtime="20230818 06:04:07.400"/>
</kw>
<msg timestamp="20230818 06:04:07.400" level="INFO">${result} = Ozone Manager Prepare Request successfully returned with Transaction Id : [833].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], C...</msg>
<status status="PASS" starttime="20230818 06:03:57.717" endtime="20230818 06:04:07.400"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230818 06:04:07.401" endtime="20230818 06:04:07.401"/>
</kw>
<status status="PASS" starttime="20230818 06:04:07.400" endtime="20230818 06:04:07.402"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230818 06:03:57.714" endtime="20230818 06:04:07.402"/>
</test>
<test id="s1-s3-t2" name="Checks if the expected data is present in OM" line="43">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230818 06:04:07.404" endtime="20230818 06:04:07.405"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230818 06:04:07.410" level="INFO">Running command 'ozone sh key info /91526-volume-for-prepare/91526-bucket-for-prepare/prepare-key 2&gt;&amp;1'.</msg>
<msg timestamp="20230818 06:04:12.389" level="INFO">${rc} = 0</msg>
<msg timestamp="20230818 06:04:12.389" level="INFO">${output} = {
  "volumeName" : "91526-volume-for-prepare",
  "bucketName" : "91526-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17289,
  "creationTime" : "2023-08-18T06:03:54.524Z",
  "modificati...</msg>
<status status="PASS" starttime="20230818 06:04:07.407" endtime="20230818 06:04:12.389"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230818 06:04:12.390" level="INFO">{
  "volumeName" : "91526-volume-for-prepare",
  "bucketName" : "91526-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17289,
  "creationTime" : "2023-08-18T06:03:54.524Z",
  "modificationTime" : "2023-08-18T06:03:57.190Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "metadata" : { },
  "ozoneKeyLocations" : [ {
    "containerID" : 1,
    "localID" : 111677748019200204,
    "length" : 17289,
    "offset" : 0,
    "keyOffset" : 0
  } ],
  "file" : true
}</msg>
<status status="PASS" starttime="20230818 06:04:12.390" endtime="20230818 06:04:12.391"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230818 06:04:12.391" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230818 06:04:12.391" endtime="20230818 06:04:12.391"/>
</kw>
<status status="PASS" starttime="20230818 06:04:07.406" endtime="20230818 06:04:12.392"/>
</kw>
<msg timestamp="20230818 06:04:12.392" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230818 06:04:07.406" endtime="20230818 06:04:12.392"/>
</kw>
<msg timestamp="20230818 06:04:12.392" level="INFO">${result} = {
  "volumeName" : "91526-volume-for-prepare",
  "bucketName" : "91526-bucket-for-prepare",
  "name" : "prepare-key",
  "dataSize" : 17289,
  "creationTime" : "2023-08-18T06:03:54.524Z",
  "modificati...</msg>
<status status="PASS" starttime="20230818 06:04:07.405" endtime="20230818 06:04:12.392"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>\"name\" : \"prepare-key\"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230818 06:04:12.392" endtime="20230818 06:04:12.393"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230818 06:04:07.403" endtime="20230818 06:04:12.393"/>
</test>
<test id="s1-s3-t3" name="Test write operation fails" line="47">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230818 06:04:12.395" endtime="20230818 06:04:12.395"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh key put /${volume_name}/${bucket_name}/prepare-key2 /opt/hadoop/NOTICE.txt</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230818 06:04:12.400" level="INFO">Running command 'ozone sh key put /91526-volume-for-prepare/91526-bucket-for-prepare/prepare-key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230818 06:04:16.392" level="INFO">${rc} = 255</msg>
<msg timestamp="20230818 06:04:16.392" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230818 06:04:12.396" endtime="20230818 06:04:16.392"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230818 06:04:16.394" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230818 06:04:16.393" endtime="20230818 06:04:16.394"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230818 06:04:16.395" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230818 06:04:16.394" endtime="20230818 06:04:16.395"/>
</kw>
<msg timestamp="20230818 06:04:16.395" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateKey when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230818 06:04:12.396" endtime="20230818 06:04:16.395"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230818 06:04:16.396" endtime="20230818 06:04:16.396"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>ozone sh key info /${volume_name}/${bucket_name}/prepare-key2</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230818 06:04:16.400" level="INFO">Running command 'ozone sh key info /91526-volume-for-prepare/91526-bucket-for-prepare/prepare-key2 2&gt;&amp;1'.</msg>
<msg timestamp="20230818 06:04:21.434" level="INFO">${rc} = 255</msg>
<msg timestamp="20230818 06:04:21.434" level="INFO">${output} = KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20230818 06:04:16.397" endtime="20230818 06:04:21.435"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230818 06:04:21.436" level="INFO">KEY_NOT_FOUND Key:prepare-key2 not found</msg>
<status status="PASS" starttime="20230818 06:04:21.435" endtime="20230818 06:04:21.436"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230818 06:04:21.437" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230818 06:04:21.436" endtime="20230818 06:04:21.437"/>
</kw>
<status status="PASS" starttime="20230818 06:04:16.396" endtime="20230818 06:04:21.437"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230818 06:04:12.394" endtime="20230818 06:04:21.438"/>
</test>
<doc>Smoke test to test preparing OMs in an OM HA cluster.</doc>
<status status="PASS" starttime="20230818 06:03:20.896" endtime="20230818 06:04:21.439"/>
</suite>
<suite id="s1-s4" name="Om-Prepared" source="/opt/hadoop/smoketest/omha/om-prepared.robot">
<test id="s1-s4-t1" name="Test create volume fails" line="26">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230818 06:04:25.045" endtime="20230818 06:04:25.045"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230818 06:04:25.046" level="INFO">${random} = 42029</msg>
<status status="PASS" starttime="20230818 06:04:25.045" endtime="20230818 06:04:25.046"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230818 06:04:25.048" level="INFO">${volume_name} = 42029-volume-for-prepare</msg>
<status status="PASS" starttime="20230818 06:04:25.046" endtime="20230818 06:04:25.048"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230818 06:04:25.052" level="INFO">Running command 'ozone sh volume create /42029-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20230818 06:04:29.273" level="INFO">${rc} = 255</msg>
<msg timestamp="20230818 06:04:29.273" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230818 06:04:25.049" endtime="20230818 06:04:29.273"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230818 06:04:29.275" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230818 06:04:29.274" endtime="20230818 06:04:29.275"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230818 06:04:29.276" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230818 06:04:29.275" endtime="20230818 06:04:29.276"/>
</kw>
<msg timestamp="20230818 06:04:29.276" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230818 06:04:25.049" endtime="20230818 06:04:29.277"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230818 06:04:29.277" endtime="20230818 06:04:29.277"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume info /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230818 06:04:29.283" level="INFO">Running command 'ozone sh volume info /42029-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20230818 06:04:33.451" level="INFO">${rc} = 255</msg>
<msg timestamp="20230818 06:04:33.451" level="INFO">${output} = VOLUME_NOT_FOUND Volume 42029-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20230818 06:04:29.279" endtime="20230818 06:04:33.452"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230818 06:04:33.453" level="INFO">VOLUME_NOT_FOUND Volume 42029-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20230818 06:04:33.452" endtime="20230818 06:04:33.453"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230818 06:04:33.454" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230818 06:04:33.454" endtime="20230818 06:04:33.454"/>
</kw>
<msg timestamp="20230818 06:04:33.456" level="INFO">${result} = VOLUME_NOT_FOUND Volume 42029-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20230818 06:04:29.278" endtime="20230818 06:04:33.456"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230818 06:04:33.456" endtime="20230818 06:04:33.460"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230818 06:04:25.044" endtime="20230818 06:04:33.460"/>
</test>
<test id="s1-s4-t2" name="Test list volumes succeeds" line="34">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230818 06:04:33.463" endtime="20230818 06:04:33.464"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230818 06:04:33.470" level="INFO">Running command 'ozone sh volume list 2&gt;&amp;1'.</msg>
<msg timestamp="20230818 06:04:38.170" level="INFO">${rc} = 0</msg>
<msg timestamp="20230818 06:04:38.170" level="INFO">${output} = [ {
  "metadata" : { },
  "name" : "51341-volume-for-cancel",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2...</msg>
<status status="PASS" starttime="20230818 06:04:33.467" endtime="20230818 06:04:38.170"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230818 06:04:38.172" level="INFO">[ {
  "metadata" : { },
  "name" : "51341-volume-for-cancel",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-08-18T06:03:00.681Z",
  "modificationTime" : "2023-08-18T06:03:00.681Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "91526-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-08-18T06:03:45.891Z",
  "modificationTime" : "2023-08-18T06:03:45.891Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "s3v",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 0,
  "creationTime" : "2023-08-18T06:01:08.061Z",
  "modificationTime" : "2023-08-18T06:01:08.061Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "vol1",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-08-18T06:01:41.959Z",
  "modificationTime" : "2023-08-18T06:01:41.959Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "94099-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-08-18T06:02:08.539Z",
  "modificationTime" : "2023-08-18T06:02:08.539Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
} ]</msg>
<status status="PASS" starttime="20230818 06:04:38.171" endtime="20230818 06:04:38.172"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230818 06:04:38.173" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230818 06:04:38.172" endtime="20230818 06:04:38.173"/>
</kw>
<status status="PASS" starttime="20230818 06:04:33.465" endtime="20230818 06:04:38.173"/>
</kw>
<msg timestamp="20230818 06:04:38.173" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230818 06:04:33.464" endtime="20230818 06:04:38.174"/>
</kw>
<msg timestamp="20230818 06:04:38.174" level="INFO">${result} = [ {
  "metadata" : { },
  "name" : "51341-volume-for-cancel",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2...</msg>
<status status="PASS" starttime="20230818 06:04:33.464" endtime="20230818 06:04:38.174"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230818 06:04:33.462" endtime="20230818 06:04:38.174"/>
</test>
<doc>Smoke test to test that OMs are prepared in an OM HA cluster.</doc>
<status status="PASS" starttime="20230818 06:04:24.964" endtime="20230818 06:04:38.176"/>
</suite>
<suite id="s1-s5" name="Om-Prepared" source="/opt/hadoop/smoketest/omha/om-prepared.robot">
<test id="s1-s5-t1" name="Test create volume fails" line="26">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230818 06:06:40.109" endtime="20230818 06:06:40.110"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230818 06:06:40.111" level="INFO">${random} = 21004</msg>
<status status="PASS" starttime="20230818 06:06:40.110" endtime="20230818 06:06:40.111"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${volume_name}</arg>
<arg>${random}-volume-for-prepare</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230818 06:06:40.113" level="INFO">${volume_name} = 21004-volume-for-prepare</msg>
<status status="PASS" starttime="20230818 06:06:40.111" endtime="20230818 06:06:40.113"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230818 06:06:40.117" level="INFO">Running command 'ozone sh volume create /21004-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20230818 06:06:44.538" level="INFO">${rc} = 255</msg>
<msg timestamp="20230818 06:06:44.538" level="INFO">${output} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230818 06:06:40.114" endtime="20230818 06:06:44.538"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230818 06:06:44.539" level="INFO">NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230818 06:06:44.538" endtime="20230818 06:06:44.539"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230818 06:06:44.540" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230818 06:06:44.540" endtime="20230818 06:06:44.541"/>
</kw>
<msg timestamp="20230818 06:06:44.541" level="INFO">${result} = NOT_SUPPORTED_OPERATION_WHEN_PREPARED Cannot apply write request CreateVolume when OM is in prepare mode.</msg>
<status status="PASS" starttime="20230818 06:06:40.113" endtime="20230818 06:06:44.541"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM is in prepare mode</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230818 06:06:44.541" endtime="20230818 06:06:44.542"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone sh volume info /${volume_name}</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230818 06:06:44.546" level="INFO">Running command 'ozone sh volume info /21004-volume-for-prepare 2&gt;&amp;1'.</msg>
<msg timestamp="20230818 06:06:49.380" level="INFO">${rc} = 255</msg>
<msg timestamp="20230818 06:06:49.380" level="INFO">${output} = VOLUME_NOT_FOUND Volume 21004-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20230818 06:06:44.543" endtime="20230818 06:06:49.380"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230818 06:06:49.381" level="INFO">VOLUME_NOT_FOUND Volume 21004-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20230818 06:06:49.381" endtime="20230818 06:06:49.382"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230818 06:06:49.382" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230818 06:06:49.382" endtime="20230818 06:06:49.383"/>
</kw>
<msg timestamp="20230818 06:06:49.383" level="INFO">${result} = VOLUME_NOT_FOUND Volume 21004-volume-for-prepare is not found</msg>
<status status="PASS" starttime="20230818 06:06:44.542" endtime="20230818 06:06:49.383"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230818 06:06:49.383" endtime="20230818 06:06:49.384"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230818 06:06:40.108" endtime="20230818 06:06:49.384"/>
</test>
<test id="s1-s5-t2" name="Test list volumes succeeds" line="34">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230818 06:06:49.386" endtime="20230818 06:06:49.386"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230818 06:06:49.391" level="INFO">Running command 'ozone sh volume list 2&gt;&amp;1'.</msg>
<msg timestamp="20230818 06:06:54.418" level="INFO">${rc} = 0</msg>
<msg timestamp="20230818 06:06:54.418" level="INFO">${output} = [ {
  "metadata" : { },
  "name" : "51341-volume-for-cancel",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2...</msg>
<status status="PASS" starttime="20230818 06:06:49.388" endtime="20230818 06:06:54.418"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230818 06:06:54.419" level="INFO">[ {
  "metadata" : { },
  "name" : "51341-volume-for-cancel",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-08-18T06:03:00.681Z",
  "modificationTime" : "2023-08-18T06:03:00.681Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "91526-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-08-18T06:03:45.891Z",
  "modificationTime" : "2023-08-18T06:03:45.891Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "s3v",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 0,
  "creationTime" : "2023-08-18T06:01:08.771Z",
  "modificationTime" : "2023-08-18T06:01:08.771Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "vol1",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-08-18T06:01:41.959Z",
  "modificationTime" : "2023-08-18T06:01:41.959Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
}, {
  "metadata" : { },
  "name" : "94099-volume-for-prepare",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2023-08-18T06:02:08.539Z",
  "modificationTime" : "2023-08-18T06:02:08.539Z",
  "acls" : [ {
    "type" : "USER",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "hadoop",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "refCount" : 0
} ]</msg>
<status status="PASS" starttime="20230818 06:06:54.418" endtime="20230818 06:06:54.419"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230818 06:06:54.420" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230818 06:06:54.420" endtime="20230818 06:06:54.420"/>
</kw>
<status status="PASS" starttime="20230818 06:06:49.388" endtime="20230818 06:06:54.421"/>
</kw>
<msg timestamp="20230818 06:06:54.421" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230818 06:06:49.387" endtime="20230818 06:06:54.421"/>
</kw>
<msg timestamp="20230818 06:06:54.421" level="INFO">${result} = [ {
  "metadata" : { },
  "name" : "51341-volume-for-cancel",
  "admin" : "hadoop",
  "owner" : "hadoop",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "usedNamespace" : 1,
  "creationTime" : "2...</msg>
<status status="PASS" starttime="20230818 06:06:49.387" endtime="20230818 06:06:54.421"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230818 06:06:49.385" endtime="20230818 06:06:54.421"/>
</test>
<doc>Smoke test to test that OMs are prepared in an OM HA cluster.</doc>
<status status="PASS" starttime="20230818 06:06:40.013" endtime="20230818 06:06:54.423"/>
</suite>
<suite id="s1-s6" name="Loaddata" source="/opt/hadoop/smoketest/topology/loaddata.robot">
<test id="s1-s6-t1" name="Create a volume, bucket and key" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create topvol1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230818 06:08:54.959" level="INFO">Running command 'ozone sh volume create topvol1 2&gt;&amp;1'.</msg>
<msg timestamp="20230818 06:08:59.834" level="INFO">${rc} = 0</msg>
<msg timestamp="20230818 06:08:59.834" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230818 06:08:54.956" endtime="20230818 06:08:59.834"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230818 06:08:59.837" level="INFO"/>
<status status="PASS" starttime="20230818 06:08:59.834" endtime="20230818 06:08:59.837"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230818 06:08:59.837" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230818 06:08:59.837" endtime="20230818 06:08:59.838"/>
</kw>
<status status="PASS" starttime="20230818 06:08:54.955" endtime="20230818 06:08:59.847"/>
</kw>
<msg timestamp="20230818 06:08:59.847" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230818 06:08:54.954" endtime="20230818 06:08:59.847"/>
</kw>
<msg timestamp="20230818 06:08:59.847" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230818 06:08:54.954" endtime="20230818 06:08:59.847"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230818 06:08:59.848" endtime="20230818 06:08:59.856"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /topvol1/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230818 06:08:59.886" level="INFO">Running command 'ozone sh bucket create /topvol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20230818 06:09:05.484" level="INFO">${rc} = 0</msg>
<msg timestamp="20230818 06:09:05.484" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230818 06:08:59.860" endtime="20230818 06:09:05.484"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230818 06:09:05.486" level="INFO"/>
<status status="PASS" starttime="20230818 06:09:05.485" endtime="20230818 06:09:05.486"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230818 06:09:05.486" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230818 06:09:05.486" endtime="20230818 06:09:05.487"/>
</kw>
<status status="PASS" starttime="20230818 06:08:59.859" endtime="20230818 06:09:05.487"/>
</kw>
<msg timestamp="20230818 06:09:05.487" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230818 06:08:59.859" endtime="20230818 06:09:05.487"/>
</kw>
<msg timestamp="20230818 06:09:05.487" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230818 06:08:59.856" endtime="20230818 06:09:05.488"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230818 06:09:05.488" endtime="20230818 06:09:05.488"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230818 06:09:05.493" level="INFO">Running command 'ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20230818 06:09:14.382" level="INFO">${rc} = 0</msg>
<msg timestamp="20230818 06:09:14.382" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230818 06:09:05.490" endtime="20230818 06:09:14.382"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230818 06:09:14.383" level="INFO"/>
<status status="PASS" starttime="20230818 06:09:14.382" endtime="20230818 06:09:14.383"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230818 06:09:14.384" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230818 06:09:14.384" endtime="20230818 06:09:14.384"/>
</kw>
<status status="PASS" starttime="20230818 06:09:05.489" endtime="20230818 06:09:14.384"/>
</kw>
<msg timestamp="20230818 06:09:14.385" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230818 06:09:05.489" endtime="20230818 06:09:14.385"/>
</kw>
<msg timestamp="20230818 06:09:14.385" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230818 06:09:05.488" endtime="20230818 06:09:14.385"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230818 06:09:14.385" endtime="20230818 06:09:14.386"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230818 06:08:54.953" endtime="20230818 06:09:14.386"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230818 06:08:54.881" endtime="20230818 06:09:14.388"/>
</suite>
<suite id="s1-s7" name="Readdata" source="/opt/hadoop/smoketest/topology/readdata.robot">
<test id="s1-s7-t1" name="Read data from previously created key" line="27">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230818 06:09:18.061" level="INFO">${random} = 38290</msg>
<status status="PASS" starttime="20230818 06:09:18.060" endtime="20230818 06:09:18.061"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230818 06:09:18.066" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-38290 2&gt;&amp;1'.</msg>
<msg timestamp="20230818 06:09:25.055" level="INFO">${rc} = 0</msg>
<msg timestamp="20230818 06:09:25.055" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230818 06:09:18.063" endtime="20230818 06:09:25.056"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230818 06:09:25.057" level="INFO"/>
<status status="PASS" starttime="20230818 06:09:25.056" endtime="20230818 06:09:25.057"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230818 06:09:25.058" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230818 06:09:25.057" endtime="20230818 06:09:25.058"/>
</kw>
<status status="PASS" starttime="20230818 06:09:18.063" endtime="20230818 06:09:25.058"/>
</kw>
<msg timestamp="20230818 06:09:25.058" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230818 06:09:18.062" endtime="20230818 06:09:25.058"/>
</kw>
<msg timestamp="20230818 06:09:25.059" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230818 06:09:18.061" endtime="20230818 06:09:25.059"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230818 06:09:25.059" endtime="20230818 06:09:25.060"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230818 06:09:18.060" endtime="20230818 06:09:25.060"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230818 06:09:17.983" endtime="20230818 06:09:25.062"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="210947"/>
</suite>
<statistics>
<total>
<stat pass="14" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="14" fail="0" skip="0" id="s1" name="ozone-om-prepare">ozone-om-prepare</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1" name="Om-Prepare">ozone-om-prepare.Om-Prepare</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2" name="Om-Cancel-Prepare">ozone-om-prepare.Om-Cancel-Prepare</stat>
<stat pass="3" fail="0" skip="0" id="s1-s3" name="Om-Prepare">ozone-om-prepare.Om-Prepare</stat>
<stat pass="2" fail="0" skip="0" id="s1-s4" name="Om-Prepared">ozone-om-prepare.Om-Prepared</stat>
<stat pass="2" fail="0" skip="0" id="s1-s5" name="Om-Prepared">ozone-om-prepare.Om-Prepared</stat>
<stat pass="1" fail="0" skip="0" id="s1-s6" name="Loaddata">ozone-om-prepare.Loaddata</stat>
<stat pass="1" fail="0" skip="0" id="s1-s7" name="Readdata">ozone-om-prepare.Readdata</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
