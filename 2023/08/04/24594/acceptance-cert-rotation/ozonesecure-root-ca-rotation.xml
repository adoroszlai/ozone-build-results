<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20230804 02:29:53.554" rpa="false" schemaversion="4">
<suite id="s1" name="ozonesecure-root-ca-rotation">
<suite id="s1-s1" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s1-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230804 02:27:05.721" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230804 02:27:05.725" level="INFO">${rc} = 0</msg>
<msg timestamp="20230804 02:27:05.725" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230804 02:27:05.719" endtime="20230804 02:27:05.725"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230804 02:27:05.726" level="INFO">scm</msg>
<status status="PASS" starttime="20230804 02:27:05.726" endtime="20230804 02:27:05.727"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230804 02:27:05.727" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230804 02:27:05.727" endtime="20230804 02:27:05.727"/>
</kw>
<status status="PASS" starttime="20230804 02:27:05.718" endtime="20230804 02:27:05.727"/>
</kw>
<msg timestamp="20230804 02:27:05.728" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230804 02:27:05.718" endtime="20230804 02:27:05.728"/>
</kw>
<msg timestamp="20230804 02:27:05.728" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230804 02:27:05.717" endtime="20230804 02:27:05.728"/>
</kw>
<msg timestamp="20230804 02:27:05.728" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230804 02:27:05.717" endtime="20230804 02:27:05.728"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230804 02:27:05.729" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230804 02:27:05.728" endtime="20230804 02:27:05.729"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230804 02:27:05.733" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230804 02:27:05.832" level="INFO">${rc} = 0</msg>
<msg timestamp="20230804 02:27:05.832" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230804 02:27:05.731" endtime="20230804 02:27:05.833"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230804 02:27:05.835" level="INFO"/>
<status status="PASS" starttime="20230804 02:27:05.833" endtime="20230804 02:27:05.835"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230804 02:27:05.838" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230804 02:27:05.835" endtime="20230804 02:27:05.840"/>
</kw>
<status status="PASS" starttime="20230804 02:27:05.730" endtime="20230804 02:27:05.841"/>
</kw>
<msg timestamp="20230804 02:27:05.841" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230804 02:27:05.730" endtime="20230804 02:27:05.842"/>
</kw>
<status status="PASS" starttime="20230804 02:27:05.729" endtime="20230804 02:27:05.842"/>
</kw>
<status status="PASS" starttime="20230804 02:27:05.729" endtime="20230804 02:27:05.842"/>
</kw>
<status status="PASS" starttime="20230804 02:27:05.716" endtime="20230804 02:27:05.842"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230804 02:27:05.715" endtime="20230804 02:27:05.842"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20230804 02:27:05.663" endtime="20230804 02:27:05.846"/>
</suite>
<suite id="s1-s2" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s2-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230804 02:27:34.520" level="INFO">Running command 'ozone sh volume create rootca-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230804 02:27:40.244" level="INFO">${rc} = 0</msg>
<msg timestamp="20230804 02:27:40.244" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230804 02:27:34.517" endtime="20230804 02:27:40.244"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230804 02:27:40.245" level="INFO"/>
<status status="PASS" starttime="20230804 02:27:40.245" endtime="20230804 02:27:40.246"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230804 02:27:40.246" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230804 02:27:40.246" endtime="20230804 02:27:40.246"/>
</kw>
<status status="PASS" starttime="20230804 02:27:34.517" endtime="20230804 02:27:40.247"/>
</kw>
<msg timestamp="20230804 02:27:40.247" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230804 02:27:34.517" endtime="20230804 02:27:40.247"/>
</kw>
<msg timestamp="20230804 02:27:40.247" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230804 02:27:34.516" endtime="20230804 02:27:40.247"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230804 02:27:40.247" endtime="20230804 02:27:40.248"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230804 02:27:40.253" level="INFO">Running command 'ozone sh bucket create /rootca-volume/rootca-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230804 02:27:47.365" level="INFO">${rc} = 0</msg>
<msg timestamp="20230804 02:27:47.366" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230804 02:27:40.249" endtime="20230804 02:27:47.366"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230804 02:27:47.367" level="INFO"/>
<status status="PASS" starttime="20230804 02:27:47.366" endtime="20230804 02:27:47.367"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230804 02:27:47.368" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230804 02:27:47.367" endtime="20230804 02:27:47.368"/>
</kw>
<status status="PASS" starttime="20230804 02:27:40.249" endtime="20230804 02:27:47.368"/>
</kw>
<msg timestamp="20230804 02:27:47.368" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230804 02:27:40.249" endtime="20230804 02:27:47.368"/>
</kw>
<msg timestamp="20230804 02:27:47.369" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230804 02:27:40.248" endtime="20230804 02:27:47.369"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230804 02:27:47.369" endtime="20230804 02:27:47.369"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230804 02:27:34.515" endtime="20230804 02:27:47.369"/>
</test>
<test id="s1-s2-t2" name="Create key" line="34">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230804 02:27:47.375" level="INFO">Running command 'echo "rootca: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230804 02:27:47.377" level="INFO">${rc} = 0</msg>
<msg timestamp="20230804 02:27:47.377" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230804 02:27:47.372" endtime="20230804 02:27:47.377"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230804 02:27:47.378" level="INFO"/>
<status status="PASS" starttime="20230804 02:27:47.377" endtime="20230804 02:27:47.378"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230804 02:27:47.378" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230804 02:27:47.378" endtime="20230804 02:27:47.378"/>
</kw>
<status status="PASS" starttime="20230804 02:27:47.371" endtime="20230804 02:27:47.379"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230804 02:27:47.383" level="INFO">Running command 'ozone sh key put /rootca-volume/rootca-bucket/rootca-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230804 02:27:57.278" level="INFO">${rc} = 0</msg>
<msg timestamp="20230804 02:27:57.278" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230804 02:27:47.381" endtime="20230804 02:27:57.278"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230804 02:27:57.279" level="INFO"/>
<status status="PASS" starttime="20230804 02:27:57.279" endtime="20230804 02:27:57.279"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230804 02:27:57.280" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230804 02:27:57.280" endtime="20230804 02:27:57.280"/>
</kw>
<status status="PASS" starttime="20230804 02:27:47.380" endtime="20230804 02:27:57.280"/>
</kw>
<msg timestamp="20230804 02:27:57.281" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230804 02:27:47.380" endtime="20230804 02:27:57.281"/>
</kw>
<msg timestamp="20230804 02:27:57.281" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230804 02:27:47.379" endtime="20230804 02:27:57.281"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230804 02:27:57.281" endtime="20230804 02:27:57.281"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230804 02:27:57.285" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230804 02:27:57.288" level="INFO">${rc} = 0</msg>
<msg timestamp="20230804 02:27:57.288" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230804 02:27:57.282" endtime="20230804 02:27:57.288"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230804 02:27:57.289" level="INFO"/>
<status status="PASS" starttime="20230804 02:27:57.289" endtime="20230804 02:27:57.289"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230804 02:27:57.290" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230804 02:27:57.289" endtime="20230804 02:27:57.290"/>
</kw>
<status status="PASS" starttime="20230804 02:27:57.282" endtime="20230804 02:27:57.290"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230804 02:27:47.370" endtime="20230804 02:27:57.290"/>
</test>
<test id="s1-s2-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230804 02:27:57.293" level="INFO">${random} = 69616</msg>
<status status="PASS" starttime="20230804 02:27:57.292" endtime="20230804 02:27:57.293"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230804 02:27:57.297" level="INFO">Running command 'ozone sh key get /rootca-volume/rootca-bucket/rootca-key /tmp/key-69616 2&gt;&amp;1'.</msg>
<msg timestamp="20230804 02:28:05.990" level="INFO">${rc} = 0</msg>
<msg timestamp="20230804 02:28:05.990" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230804 02:27:57.294" endtime="20230804 02:28:05.990"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230804 02:28:05.991" level="INFO"/>
<status status="PASS" starttime="20230804 02:28:05.991" endtime="20230804 02:28:05.991"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230804 02:28:05.992" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230804 02:28:05.992" endtime="20230804 02:28:05.992"/>
</kw>
<status status="PASS" starttime="20230804 02:27:57.294" endtime="20230804 02:28:05.992"/>
</kw>
<msg timestamp="20230804 02:28:05.992" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230804 02:27:57.294" endtime="20230804 02:28:05.993"/>
</kw>
<msg timestamp="20230804 02:28:05.993" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230804 02:27:57.293" endtime="20230804 02:28:05.993"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230804 02:28:05.993" endtime="20230804 02:28:05.993"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230804 02:28:05.997" level="INFO">Running command 'cat /tmp/key-69616 2&gt;&amp;1'.</msg>
<msg timestamp="20230804 02:28:06.000" level="INFO">${rc} = 0</msg>
<msg timestamp="20230804 02:28:06.000" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230804 02:28:05.994" endtime="20230804 02:28:06.000"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230804 02:28:06.001" level="INFO">rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230804 02:28:06.000" endtime="20230804 02:28:06.001"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230804 02:28:06.002" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230804 02:28:06.001" endtime="20230804 02:28:06.002"/>
</kw>
<msg timestamp="20230804 02:28:06.002" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230804 02:28:05.994" endtime="20230804 02:28:06.002"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230804 02:28:06.002" endtime="20230804 02:28:06.003"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230804 02:28:06.006" level="INFO">Running command 'rm /tmp/key-69616 2&gt;&amp;1'.</msg>
<msg timestamp="20230804 02:28:06.009" level="INFO">${rc} = 0</msg>
<msg timestamp="20230804 02:28:06.009" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230804 02:28:06.003" endtime="20230804 02:28:06.009"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230804 02:28:06.010" level="INFO"/>
<status status="PASS" starttime="20230804 02:28:06.009" endtime="20230804 02:28:06.010"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230804 02:28:06.011" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230804 02:28:06.010" endtime="20230804 02:28:06.011"/>
</kw>
<status status="PASS" starttime="20230804 02:28:06.003" endtime="20230804 02:28:06.011"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230804 02:27:57.292" endtime="20230804 02:28:06.011"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230804 02:27:34.466" endtime="20230804 02:28:06.013"/>
</suite>
<suite id="s1-s3" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s3-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230804 02:29:02.031" level="INFO">Running command 'ozone sh volume create rootca2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230804 02:29:07.430" level="INFO">${rc} = 0</msg>
<msg timestamp="20230804 02:29:07.430" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230804 02:29:02.028" endtime="20230804 02:29:07.430"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230804 02:29:07.432" level="INFO"/>
<status status="PASS" starttime="20230804 02:29:07.431" endtime="20230804 02:29:07.432"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230804 02:29:07.432" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230804 02:29:07.432" endtime="20230804 02:29:07.432"/>
</kw>
<status status="PASS" starttime="20230804 02:29:02.027" endtime="20230804 02:29:07.433"/>
</kw>
<msg timestamp="20230804 02:29:07.433" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230804 02:29:02.027" endtime="20230804 02:29:07.433"/>
</kw>
<msg timestamp="20230804 02:29:07.433" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230804 02:29:02.026" endtime="20230804 02:29:07.433"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230804 02:29:07.433" endtime="20230804 02:29:07.433"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230804 02:29:07.438" level="INFO">Running command 'ozone sh bucket create /rootca2-volume/rootca2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230804 02:29:13.075" level="INFO">${rc} = 0</msg>
<msg timestamp="20230804 02:29:13.075" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230804 02:29:07.435" endtime="20230804 02:29:13.075"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230804 02:29:13.076" level="INFO"/>
<status status="PASS" starttime="20230804 02:29:13.075" endtime="20230804 02:29:13.077"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230804 02:29:13.077" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230804 02:29:13.077" endtime="20230804 02:29:13.077"/>
</kw>
<status status="PASS" starttime="20230804 02:29:07.434" endtime="20230804 02:29:13.078"/>
</kw>
<msg timestamp="20230804 02:29:13.078" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230804 02:29:07.434" endtime="20230804 02:29:13.078"/>
</kw>
<msg timestamp="20230804 02:29:13.078" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230804 02:29:07.434" endtime="20230804 02:29:13.078"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230804 02:29:13.078" endtime="20230804 02:29:13.079"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230804 02:29:02.026" endtime="20230804 02:29:13.079"/>
</test>
<test id="s1-s3-t2" name="Create key" line="34">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230804 02:29:13.085" level="INFO">Running command 'echo "rootca2: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230804 02:29:13.087" level="INFO">${rc} = 0</msg>
<msg timestamp="20230804 02:29:13.087" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230804 02:29:13.082" endtime="20230804 02:29:13.087"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230804 02:29:13.089" level="INFO"/>
<status status="PASS" starttime="20230804 02:29:13.088" endtime="20230804 02:29:13.089"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230804 02:29:13.089" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230804 02:29:13.089" endtime="20230804 02:29:13.090"/>
</kw>
<status status="PASS" starttime="20230804 02:29:13.081" endtime="20230804 02:29:13.090"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230804 02:29:13.094" level="INFO">Running command 'ozone sh key put /rootca2-volume/rootca2-bucket/rootca2-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230804 02:29:21.447" level="INFO">${rc} = 0</msg>
<msg timestamp="20230804 02:29:21.447" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230804 02:29:13.092" endtime="20230804 02:29:21.447"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230804 02:29:21.449" level="INFO"/>
<status status="PASS" starttime="20230804 02:29:21.448" endtime="20230804 02:29:21.449"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230804 02:29:21.450" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230804 02:29:21.449" endtime="20230804 02:29:21.450"/>
</kw>
<status status="PASS" starttime="20230804 02:29:13.091" endtime="20230804 02:29:21.450"/>
</kw>
<msg timestamp="20230804 02:29:21.450" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230804 02:29:13.091" endtime="20230804 02:29:21.450"/>
</kw>
<msg timestamp="20230804 02:29:21.450" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230804 02:29:13.090" endtime="20230804 02:29:21.451"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230804 02:29:21.451" endtime="20230804 02:29:21.451"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230804 02:29:21.455" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230804 02:29:21.458" level="INFO">${rc} = 0</msg>
<msg timestamp="20230804 02:29:21.458" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230804 02:29:21.452" endtime="20230804 02:29:21.458"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230804 02:29:21.459" level="INFO"/>
<status status="PASS" starttime="20230804 02:29:21.458" endtime="20230804 02:29:21.459"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230804 02:29:21.460" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230804 02:29:21.459" endtime="20230804 02:29:21.460"/>
</kw>
<status status="PASS" starttime="20230804 02:29:21.451" endtime="20230804 02:29:21.460"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230804 02:29:13.080" endtime="20230804 02:29:21.460"/>
</test>
<test id="s1-s3-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230804 02:29:21.462" level="INFO">${random} = 10923</msg>
<status status="PASS" starttime="20230804 02:29:21.462" endtime="20230804 02:29:21.462"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230804 02:29:21.467" level="INFO">Running command 'ozone sh key get /rootca2-volume/rootca2-bucket/rootca2-key /tmp/key-10923 2&gt;&amp;1'.</msg>
<msg timestamp="20230804 02:29:29.512" level="INFO">${rc} = 0</msg>
<msg timestamp="20230804 02:29:29.512" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230804 02:29:21.464" endtime="20230804 02:29:29.512"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230804 02:29:29.513" level="INFO"/>
<status status="PASS" starttime="20230804 02:29:29.512" endtime="20230804 02:29:29.513"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230804 02:29:29.514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230804 02:29:29.513" endtime="20230804 02:29:29.514"/>
</kw>
<status status="PASS" starttime="20230804 02:29:21.463" endtime="20230804 02:29:29.514"/>
</kw>
<msg timestamp="20230804 02:29:29.514" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230804 02:29:21.463" endtime="20230804 02:29:29.514"/>
</kw>
<msg timestamp="20230804 02:29:29.514" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230804 02:29:21.462" endtime="20230804 02:29:29.514"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230804 02:29:29.515" endtime="20230804 02:29:29.515"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230804 02:29:29.519" level="INFO">Running command 'cat /tmp/key-10923 2&gt;&amp;1'.</msg>
<msg timestamp="20230804 02:29:29.522" level="INFO">${rc} = 0</msg>
<msg timestamp="20230804 02:29:29.522" level="INFO">${output} = rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230804 02:29:29.516" endtime="20230804 02:29:29.522"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230804 02:29:29.524" level="INFO">rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230804 02:29:29.523" endtime="20230804 02:29:29.524"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230804 02:29:29.524" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230804 02:29:29.524" endtime="20230804 02:29:29.524"/>
</kw>
<msg timestamp="20230804 02:29:29.525" level="INFO">${output} = rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230804 02:29:29.515" endtime="20230804 02:29:29.525"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230804 02:29:29.525" endtime="20230804 02:29:29.525"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230804 02:29:29.529" level="INFO">Running command 'rm /tmp/key-10923 2&gt;&amp;1'.</msg>
<msg timestamp="20230804 02:29:29.532" level="INFO">${rc} = 0</msg>
<msg timestamp="20230804 02:29:29.532" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230804 02:29:29.526" endtime="20230804 02:29:29.532"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230804 02:29:29.533" level="INFO"/>
<status status="PASS" starttime="20230804 02:29:29.533" endtime="20230804 02:29:29.533"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230804 02:29:29.534" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230804 02:29:29.534" endtime="20230804 02:29:29.534"/>
</kw>
<status status="PASS" starttime="20230804 02:29:29.526" endtime="20230804 02:29:29.535"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230804 02:29:21.461" endtime="20230804 02:29:29.535"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230804 02:29:01.975" endtime="20230804 02:29:29.536"/>
</suite>
<suite id="s1-s4" name="Root-Ca-Rotation" source="/opt/hadoop/smoketest/scmha/root-ca-rotation.robot">
<test id="s1-s4-t1" name="Verify root CA rotation metrics" line="26">
<kw name="Execute" library="os">
<var>${successRotationLine}</var>
<arg>curl -sS 'http://localhost:9876/jmx' | grep NumSuccessRotation</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230804 02:29:33.196" level="INFO">Running command 'curl -sS 'http://localhost:9876/jmx' | grep NumSuccessRotation 2&gt;&amp;1'.</msg>
<msg timestamp="20230804 02:29:33.744" level="INFO">${rc} = 0</msg>
<msg timestamp="20230804 02:29:33.744" level="INFO">${output} =     "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230804 02:29:33.193" endtime="20230804 02:29:33.744"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230804 02:29:33.745" level="INFO">    "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230804 02:29:33.745" endtime="20230804 02:29:33.745"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230804 02:29:33.746" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230804 02:29:33.746" endtime="20230804 02:29:33.746"/>
</kw>
<status status="PASS" starttime="20230804 02:29:33.192" endtime="20230804 02:29:33.746"/>
</kw>
<msg timestamp="20230804 02:29:33.746" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230804 02:29:33.192" endtime="20230804 02:29:33.746"/>
</kw>
<msg timestamp="20230804 02:29:33.747" level="INFO">${successRotationLine} =     "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230804 02:29:33.191" endtime="20230804 02:29:33.747"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${successRotationLine}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230804 02:29:33.747" level="INFO">    "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230804 02:29:33.747" endtime="20230804 02:29:33.747"/>
</kw>
<kw name="Split String" library="String">
<var>${temp_1}</var>
<arg>${successRotationLine}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230804 02:29:33.748" level="INFO">${temp_1} = ['    "NumSuccessRotation" ', ' 2,']</msg>
<status status="PASS" starttime="20230804 02:29:33.747" endtime="20230804 02:29:33.748"/>
</kw>
<kw name="Strip String" library="String">
<var>${temp_2}</var>
<arg>${temp_1[1]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230804 02:29:33.749" level="INFO">${temp_2} = 2,</msg>
<status status="PASS" starttime="20230804 02:29:33.748" endtime="20230804 02:29:33.749"/>
</kw>
<kw name="Split String" library="String">
<var>${temp_3}</var>
<arg>${temp_2}</arg>
<arg>,</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230804 02:29:33.750" level="INFO">${temp_3} = ['2', '']</msg>
<status status="PASS" starttime="20230804 02:29:33.749" endtime="20230804 02:29:33.750"/>
</kw>
<kw name="Strip String" library="String">
<var>${successRotation}</var>
<arg>${temp_3[0]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230804 02:29:33.751" level="INFO">${successRotation} = 2</msg>
<status status="PASS" starttime="20230804 02:29:33.750" endtime="20230804 02:29:33.751"/>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<var>${successRotation}</var>
<arg>${successRotation}</arg>
<doc>Converts the given item to a floating point number.</doc>
<msg timestamp="20230804 02:29:33.752" level="INFO">${successRotation} = 2.0</msg>
<status status="PASS" starttime="20230804 02:29:33.751" endtime="20230804 02:29:33.752"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${successRotation} &gt;= 1</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230804 02:29:33.752" endtime="20230804 02:29:33.752"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230804 02:29:33.191" endtime="20230804 02:29:33.753"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230804 02:29:33.142" endtime="20230804 02:29:33.754"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="59903"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="2" fail="0" skip="0">create-volume-and-bucket</stat>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="ozonesecure-root-ca-rotation">ozonesecure-root-ca-rotation</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Kinit">ozonesecure-root-ca-rotation.Kinit</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Root-Ca-Rotation-Client-Checks">ozonesecure-root-ca-rotation.Root-Ca-Rotation-Client-Checks</stat>
<stat pass="3" fail="0" skip="0" id="s1-s3" name="Root-Ca-Rotation-Client-Checks">ozonesecure-root-ca-rotation.Root-Ca-Rotation-Client-Checks</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Root-Ca-Rotation">ozonesecure-root-ca-rotation.Root-Ca-Rotation</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
