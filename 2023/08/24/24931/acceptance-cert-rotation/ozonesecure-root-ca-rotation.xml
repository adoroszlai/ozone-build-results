<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20230824 21:37:08.716" rpa="false" schemaversion="4">
<suite id="s1" name="ozonesecure-root-ca-rotation">
<suite id="s1-s1" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s1-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230824 21:34:13.285" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230824 21:34:13.294" level="INFO">${rc} = 0</msg>
<msg timestamp="20230824 21:34:13.294" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230824 21:34:13.279" endtime="20230824 21:34:13.294"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230824 21:34:13.297" level="INFO">scm</msg>
<status status="PASS" starttime="20230824 21:34:13.295" endtime="20230824 21:34:13.297"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230824 21:34:13.298" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230824 21:34:13.297" endtime="20230824 21:34:13.298"/>
</kw>
<status status="PASS" starttime="20230824 21:34:13.278" endtime="20230824 21:34:13.299"/>
</kw>
<msg timestamp="20230824 21:34:13.299" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230824 21:34:13.277" endtime="20230824 21:34:13.300"/>
</kw>
<msg timestamp="20230824 21:34:13.300" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230824 21:34:13.276" endtime="20230824 21:34:13.300"/>
</kw>
<msg timestamp="20230824 21:34:13.301" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230824 21:34:13.274" endtime="20230824 21:34:13.301"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230824 21:34:13.302" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230824 21:34:13.301" endtime="20230824 21:34:13.302"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230824 21:34:13.312" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230824 21:34:13.439" level="INFO">${rc} = 0</msg>
<msg timestamp="20230824 21:34:13.439" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230824 21:34:13.306" endtime="20230824 21:34:13.439"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230824 21:34:13.441" level="INFO"/>
<status status="PASS" starttime="20230824 21:34:13.440" endtime="20230824 21:34:13.442"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230824 21:34:13.443" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230824 21:34:13.443" endtime="20230824 21:34:13.444"/>
</kw>
<status status="PASS" starttime="20230824 21:34:13.306" endtime="20230824 21:34:13.444"/>
</kw>
<msg timestamp="20230824 21:34:13.444" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230824 21:34:13.305" endtime="20230824 21:34:13.445"/>
</kw>
<status status="PASS" starttime="20230824 21:34:13.304" endtime="20230824 21:34:13.447"/>
</kw>
<status status="PASS" starttime="20230824 21:34:13.303" endtime="20230824 21:34:13.447"/>
</kw>
<status status="PASS" starttime="20230824 21:34:13.272" endtime="20230824 21:34:13.447"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230824 21:34:13.265" endtime="20230824 21:34:13.447"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20230824 21:34:13.075" endtime="20230824 21:34:13.449"/>
</suite>
<suite id="s1-s2" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s2-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230824 21:34:34.349" level="INFO">Running command 'ozone sh volume create rootca-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230824 21:34:44.135" level="INFO">${rc} = 0</msg>
<msg timestamp="20230824 21:34:44.135" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230824 21:34:34.346" endtime="20230824 21:34:44.135"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230824 21:34:44.137" level="INFO"/>
<status status="PASS" starttime="20230824 21:34:44.136" endtime="20230824 21:34:44.137"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230824 21:34:44.138" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230824 21:34:44.137" endtime="20230824 21:34:44.138"/>
</kw>
<status status="PASS" starttime="20230824 21:34:34.345" endtime="20230824 21:34:44.139"/>
</kw>
<msg timestamp="20230824 21:34:44.139" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230824 21:34:34.345" endtime="20230824 21:34:44.139"/>
</kw>
<msg timestamp="20230824 21:34:44.139" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230824 21:34:34.344" endtime="20230824 21:34:44.139"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230824 21:34:44.139" endtime="20230824 21:34:44.140"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230824 21:34:44.145" level="INFO">Running command 'ozone sh bucket create /rootca-volume/rootca-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230824 21:34:52.741" level="INFO">${rc} = 0</msg>
<msg timestamp="20230824 21:34:52.741" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230824 21:34:44.143" endtime="20230824 21:34:52.741"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230824 21:34:52.743" level="INFO"/>
<status status="PASS" starttime="20230824 21:34:52.742" endtime="20230824 21:34:52.743"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230824 21:34:52.744" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230824 21:34:52.744" endtime="20230824 21:34:52.744"/>
</kw>
<status status="PASS" starttime="20230824 21:34:44.142" endtime="20230824 21:34:52.745"/>
</kw>
<msg timestamp="20230824 21:34:52.745" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230824 21:34:44.141" endtime="20230824 21:34:52.745"/>
</kw>
<msg timestamp="20230824 21:34:52.745" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230824 21:34:44.140" endtime="20230824 21:34:52.745"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230824 21:34:52.746" endtime="20230824 21:34:52.747"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230824 21:34:34.343" endtime="20230824 21:34:52.747"/>
</test>
<test id="s1-s2-t2" name="Create key" line="34">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230824 21:34:52.762" level="INFO">Running command 'echo "rootca: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230824 21:34:52.766" level="INFO">${rc} = 0</msg>
<msg timestamp="20230824 21:34:52.766" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230824 21:34:52.752" endtime="20230824 21:34:52.766"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230824 21:34:52.771" level="INFO"/>
<status status="PASS" starttime="20230824 21:34:52.767" endtime="20230824 21:34:52.771"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230824 21:34:52.772" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230824 21:34:52.771" endtime="20230824 21:34:52.772"/>
</kw>
<status status="PASS" starttime="20230824 21:34:52.751" endtime="20230824 21:34:52.772"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230824 21:34:52.778" level="INFO">Running command 'ozone sh key put /rootca-volume/rootca-bucket/rootca-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230824 21:35:07.228" level="INFO">${rc} = 0</msg>
<msg timestamp="20230824 21:35:07.229" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230824 21:34:52.775" endtime="20230824 21:35:07.229"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230824 21:35:07.233" level="INFO"/>
<status status="PASS" starttime="20230824 21:35:07.229" endtime="20230824 21:35:07.235"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230824 21:35:07.236" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230824 21:35:07.235" endtime="20230824 21:35:07.236"/>
</kw>
<status status="PASS" starttime="20230824 21:34:52.774" endtime="20230824 21:35:07.237"/>
</kw>
<msg timestamp="20230824 21:35:07.237" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230824 21:34:52.773" endtime="20230824 21:35:07.237"/>
</kw>
<msg timestamp="20230824 21:35:07.238" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230824 21:34:52.772" endtime="20230824 21:35:07.238"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230824 21:35:07.239" endtime="20230824 21:35:07.241"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230824 21:35:07.255" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230824 21:35:07.260" level="INFO">${rc} = 0</msg>
<msg timestamp="20230824 21:35:07.260" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230824 21:35:07.246" endtime="20230824 21:35:07.260"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230824 21:35:07.262" level="INFO"/>
<status status="PASS" starttime="20230824 21:35:07.261" endtime="20230824 21:35:07.262"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230824 21:35:07.264" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230824 21:35:07.262" endtime="20230824 21:35:07.264"/>
</kw>
<status status="PASS" starttime="20230824 21:35:07.243" endtime="20230824 21:35:07.264"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230824 21:34:52.749" endtime="20230824 21:35:07.266"/>
</test>
<test id="s1-s2-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230824 21:35:07.275" level="INFO">${random} = 00885</msg>
<status status="PASS" starttime="20230824 21:35:07.274" endtime="20230824 21:35:07.275"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230824 21:35:07.288" level="INFO">Running command 'ozone sh key get /rootca-volume/rootca-bucket/rootca-key /tmp/key-00885 2&gt;&amp;1'.</msg>
<msg timestamp="20230824 21:35:19.133" level="INFO">${rc} = 0</msg>
<msg timestamp="20230824 21:35:19.133" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230824 21:35:07.281" endtime="20230824 21:35:19.133"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230824 21:35:19.134" level="INFO"/>
<status status="PASS" starttime="20230824 21:35:19.133" endtime="20230824 21:35:19.134"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230824 21:35:19.135" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230824 21:35:19.135" endtime="20230824 21:35:19.135"/>
</kw>
<status status="PASS" starttime="20230824 21:35:07.277" endtime="20230824 21:35:19.135"/>
</kw>
<msg timestamp="20230824 21:35:19.136" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230824 21:35:07.276" endtime="20230824 21:35:19.136"/>
</kw>
<msg timestamp="20230824 21:35:19.136" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230824 21:35:07.275" endtime="20230824 21:35:19.136"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230824 21:35:19.136" endtime="20230824 21:35:19.137"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230824 21:35:19.141" level="INFO">Running command 'cat /tmp/key-00885 2&gt;&amp;1'.</msg>
<msg timestamp="20230824 21:35:19.144" level="INFO">${rc} = 0</msg>
<msg timestamp="20230824 21:35:19.144" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230824 21:35:19.138" endtime="20230824 21:35:19.144"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230824 21:35:19.146" level="INFO">rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230824 21:35:19.145" endtime="20230824 21:35:19.146"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230824 21:35:19.147" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230824 21:35:19.146" endtime="20230824 21:35:19.147"/>
</kw>
<msg timestamp="20230824 21:35:19.147" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230824 21:35:19.137" endtime="20230824 21:35:19.147"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230824 21:35:19.147" endtime="20230824 21:35:19.148"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230824 21:35:19.152" level="INFO">Running command 'rm /tmp/key-00885 2&gt;&amp;1'.</msg>
<msg timestamp="20230824 21:35:19.155" level="INFO">${rc} = 0</msg>
<msg timestamp="20230824 21:35:19.155" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230824 21:35:19.149" endtime="20230824 21:35:19.155"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230824 21:35:19.156" level="INFO"/>
<status status="PASS" starttime="20230824 21:35:19.156" endtime="20230824 21:35:19.156"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230824 21:35:19.157" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230824 21:35:19.157" endtime="20230824 21:35:19.157"/>
</kw>
<status status="PASS" starttime="20230824 21:35:19.148" endtime="20230824 21:35:19.158"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230824 21:35:07.271" endtime="20230824 21:35:19.158"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230824 21:34:34.271" endtime="20230824 21:35:19.161"/>
</suite>
<suite id="s1-s3" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s3-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230824 21:36:02.331" level="INFO">Running command 'ozone sh volume create rootca2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230824 21:36:10.654" level="INFO">${rc} = 0</msg>
<msg timestamp="20230824 21:36:10.654" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230824 21:36:02.328" endtime="20230824 21:36:10.654"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230824 21:36:10.656" level="INFO"/>
<status status="PASS" starttime="20230824 21:36:10.655" endtime="20230824 21:36:10.656"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230824 21:36:10.657" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230824 21:36:10.656" endtime="20230824 21:36:10.657"/>
</kw>
<status status="PASS" starttime="20230824 21:36:02.328" endtime="20230824 21:36:10.657"/>
</kw>
<msg timestamp="20230824 21:36:10.660" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230824 21:36:02.327" endtime="20230824 21:36:10.660"/>
</kw>
<msg timestamp="20230824 21:36:10.660" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230824 21:36:02.326" endtime="20230824 21:36:10.660"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230824 21:36:10.661" endtime="20230824 21:36:10.661"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230824 21:36:10.666" level="INFO">Running command 'ozone sh bucket create /rootca2-volume/rootca2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230824 21:36:18.686" level="INFO">${rc} = 0</msg>
<msg timestamp="20230824 21:36:18.686" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230824 21:36:10.663" endtime="20230824 21:36:18.687"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230824 21:36:18.689" level="INFO"/>
<status status="PASS" starttime="20230824 21:36:18.688" endtime="20230824 21:36:18.689"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230824 21:36:18.690" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230824 21:36:18.690" endtime="20230824 21:36:18.690"/>
</kw>
<status status="PASS" starttime="20230824 21:36:10.663" endtime="20230824 21:36:18.691"/>
</kw>
<msg timestamp="20230824 21:36:18.691" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230824 21:36:10.662" endtime="20230824 21:36:18.691"/>
</kw>
<msg timestamp="20230824 21:36:18.691" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230824 21:36:10.661" endtime="20230824 21:36:18.691"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230824 21:36:18.691" endtime="20230824 21:36:18.692"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230824 21:36:02.325" endtime="20230824 21:36:18.692"/>
</test>
<test id="s1-s3-t2" name="Create key" line="34">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230824 21:36:18.699" level="INFO">Running command 'echo "rootca2: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230824 21:36:18.701" level="INFO">${rc} = 0</msg>
<msg timestamp="20230824 21:36:18.701" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230824 21:36:18.695" endtime="20230824 21:36:18.701"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230824 21:36:18.703" level="INFO"/>
<status status="PASS" starttime="20230824 21:36:18.702" endtime="20230824 21:36:18.703"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230824 21:36:18.704" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230824 21:36:18.704" endtime="20230824 21:36:18.704"/>
</kw>
<status status="PASS" starttime="20230824 21:36:18.695" endtime="20230824 21:36:18.705"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230824 21:36:18.711" level="INFO">Running command 'ozone sh key put /rootca2-volume/rootca2-bucket/rootca2-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230824 21:36:30.163" level="INFO">${rc} = 0</msg>
<msg timestamp="20230824 21:36:30.163" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230824 21:36:18.707" endtime="20230824 21:36:30.163"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230824 21:36:30.164" level="INFO"/>
<status status="PASS" starttime="20230824 21:36:30.163" endtime="20230824 21:36:30.164"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230824 21:36:30.165" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230824 21:36:30.164" endtime="20230824 21:36:30.168"/>
</kw>
<status status="PASS" starttime="20230824 21:36:18.706" endtime="20230824 21:36:30.168"/>
</kw>
<msg timestamp="20230824 21:36:30.168" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230824 21:36:18.706" endtime="20230824 21:36:30.169"/>
</kw>
<msg timestamp="20230824 21:36:30.170" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230824 21:36:18.705" endtime="20230824 21:36:30.170"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230824 21:36:30.171" endtime="20230824 21:36:30.171"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230824 21:36:30.176" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230824 21:36:30.181" level="INFO">${rc} = 0</msg>
<msg timestamp="20230824 21:36:30.181" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230824 21:36:30.172" endtime="20230824 21:36:30.181"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230824 21:36:30.182" level="INFO"/>
<status status="PASS" starttime="20230824 21:36:30.181" endtime="20230824 21:36:30.183"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230824 21:36:30.184" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230824 21:36:30.183" endtime="20230824 21:36:30.184"/>
</kw>
<status status="PASS" starttime="20230824 21:36:30.171" endtime="20230824 21:36:30.184"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230824 21:36:18.694" endtime="20230824 21:36:30.184"/>
</test>
<test id="s1-s3-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230824 21:36:30.188" level="INFO">${random} = 23980</msg>
<status status="PASS" starttime="20230824 21:36:30.187" endtime="20230824 21:36:30.188"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230824 21:36:30.194" level="INFO">Running command 'ozone sh key get /rootca2-volume/rootca2-bucket/rootca2-key /tmp/key-23980 2&gt;&amp;1'.</msg>
<msg timestamp="20230824 21:36:42.129" level="INFO">${rc} = 0</msg>
<msg timestamp="20230824 21:36:42.129" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230824 21:36:30.191" endtime="20230824 21:36:42.129"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230824 21:36:42.131" level="INFO"/>
<status status="PASS" starttime="20230824 21:36:42.130" endtime="20230824 21:36:42.131"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230824 21:36:42.132" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230824 21:36:42.132" endtime="20230824 21:36:42.132"/>
</kw>
<status status="PASS" starttime="20230824 21:36:30.190" endtime="20230824 21:36:42.133"/>
</kw>
<msg timestamp="20230824 21:36:42.133" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230824 21:36:30.189" endtime="20230824 21:36:42.133"/>
</kw>
<msg timestamp="20230824 21:36:42.133" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230824 21:36:30.188" endtime="20230824 21:36:42.133"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230824 21:36:42.133" endtime="20230824 21:36:42.134"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230824 21:36:42.140" level="INFO">Running command 'cat /tmp/key-23980 2&gt;&amp;1'.</msg>
<msg timestamp="20230824 21:36:42.143" level="INFO">${rc} = 0</msg>
<msg timestamp="20230824 21:36:42.143" level="INFO">${output} = rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230824 21:36:42.135" endtime="20230824 21:36:42.143"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230824 21:36:42.145" level="INFO">rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230824 21:36:42.144" endtime="20230824 21:36:42.145"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230824 21:36:42.146" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230824 21:36:42.145" endtime="20230824 21:36:42.146"/>
</kw>
<msg timestamp="20230824 21:36:42.146" level="INFO">${output} = rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230824 21:36:42.134" endtime="20230824 21:36:42.147"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230824 21:36:42.147" endtime="20230824 21:36:42.147"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230824 21:36:42.151" level="INFO">Running command 'rm /tmp/key-23980 2&gt;&amp;1'.</msg>
<msg timestamp="20230824 21:36:42.155" level="INFO">${rc} = 0</msg>
<msg timestamp="20230824 21:36:42.155" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230824 21:36:42.149" endtime="20230824 21:36:42.155"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230824 21:36:42.156" level="INFO"/>
<status status="PASS" starttime="20230824 21:36:42.155" endtime="20230824 21:36:42.156"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230824 21:36:42.157" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230824 21:36:42.157" endtime="20230824 21:36:42.157"/>
</kw>
<status status="PASS" starttime="20230824 21:36:42.148" endtime="20230824 21:36:42.158"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230824 21:36:30.186" endtime="20230824 21:36:42.158"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230824 21:36:02.245" endtime="20230824 21:36:42.160"/>
</suite>
<suite id="s1-s4" name="Root-Ca-Rotation" source="/opt/hadoop/smoketest/scmha/root-ca-rotation.robot">
<test id="s1-s4-t1" name="Verify root CA rotation metrics" line="26">
<kw name="Execute" library="os">
<var>${successRotationLine}</var>
<arg>curl -sS 'http://localhost:9876/jmx' | grep NumSuccessRotation</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230824 21:36:46.423" level="INFO">Running command 'curl -sS 'http://localhost:9876/jmx' | grep NumSuccessRotation 2&gt;&amp;1'.</msg>
<msg timestamp="20230824 21:36:47.198" level="INFO">${rc} = 0</msg>
<msg timestamp="20230824 21:36:47.199" level="INFO">${output} =     "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230824 21:36:46.420" endtime="20230824 21:36:47.199"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230824 21:36:47.200" level="INFO">    "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230824 21:36:47.199" endtime="20230824 21:36:47.201"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230824 21:36:47.202" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230824 21:36:47.201" endtime="20230824 21:36:47.202"/>
</kw>
<status status="PASS" starttime="20230824 21:36:46.419" endtime="20230824 21:36:47.202"/>
</kw>
<msg timestamp="20230824 21:36:47.202" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230824 21:36:46.419" endtime="20230824 21:36:47.203"/>
</kw>
<msg timestamp="20230824 21:36:47.203" level="INFO">${successRotationLine} =     "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230824 21:36:46.418" endtime="20230824 21:36:47.203"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${successRotationLine}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230824 21:36:47.204" level="INFO">    "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230824 21:36:47.203" endtime="20230824 21:36:47.204"/>
</kw>
<kw name="Split String" library="String">
<var>${temp_1}</var>
<arg>${successRotationLine}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230824 21:36:47.205" level="INFO">${temp_1} = ['    "NumSuccessRotation" ', ' 2,']</msg>
<status status="PASS" starttime="20230824 21:36:47.204" endtime="20230824 21:36:47.205"/>
</kw>
<kw name="Strip String" library="String">
<var>${temp_2}</var>
<arg>${temp_1[1]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230824 21:36:47.208" level="INFO">${temp_2} = 2,</msg>
<status status="PASS" starttime="20230824 21:36:47.206" endtime="20230824 21:36:47.208"/>
</kw>
<kw name="Split String" library="String">
<var>${temp_3}</var>
<arg>${temp_2}</arg>
<arg>,</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230824 21:36:47.209" level="INFO">${temp_3} = ['2', '']</msg>
<status status="PASS" starttime="20230824 21:36:47.208" endtime="20230824 21:36:47.209"/>
</kw>
<kw name="Strip String" library="String">
<var>${successRotation}</var>
<arg>${temp_3[0]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230824 21:36:47.211" level="INFO">${successRotation} = 2</msg>
<status status="PASS" starttime="20230824 21:36:47.209" endtime="20230824 21:36:47.211"/>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<var>${successRotation}</var>
<arg>${successRotation}</arg>
<doc>Converts the given item to a floating point number.</doc>
<msg timestamp="20230824 21:36:47.212" level="INFO">${successRotation} = 2.0</msg>
<status status="PASS" starttime="20230824 21:36:47.211" endtime="20230824 21:36:47.212"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${successRotation} &gt;= 1</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230824 21:36:47.212" endtime="20230824 21:36:47.213"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230824 21:36:46.417" endtime="20230824 21:36:47.214"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230824 21:36:46.346" endtime="20230824 21:36:47.216"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="86049"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="2" fail="0" skip="0">create-volume-and-bucket</stat>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="ozonesecure-root-ca-rotation">ozonesecure-root-ca-rotation</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Kinit">ozonesecure-root-ca-rotation.Kinit</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Root-Ca-Rotation-Client-Checks">ozonesecure-root-ca-rotation.Root-Ca-Rotation-Client-Checks</stat>
<stat pass="3" fail="0" skip="0" id="s1-s3" name="Root-Ca-Rotation-Client-Checks">ozonesecure-root-ca-rotation.Root-Ca-Rotation-Client-Checks</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Root-Ca-Rotation">ozonesecure-root-ca-rotation.Root-Ca-Rotation</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
