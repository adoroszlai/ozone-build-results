<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20230823 11:23:55.429" rpa="false" schemaversion="4">
<suite id="s1" name="ozonesecure-root-ca-rotation">
<suite id="s1-s1" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s1-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230823 11:20:57.269" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230823 11:20:57.280" level="INFO">${rc} = 0</msg>
<msg timestamp="20230823 11:20:57.281" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230823 11:20:57.250" endtime="20230823 11:20:57.281"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230823 11:20:57.282" level="INFO">scm</msg>
<status status="PASS" starttime="20230823 11:20:57.281" endtime="20230823 11:20:57.283"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230823 11:20:57.283" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230823 11:20:57.283" endtime="20230823 11:20:57.284"/>
</kw>
<status status="PASS" starttime="20230823 11:20:57.248" endtime="20230823 11:20:57.284"/>
</kw>
<msg timestamp="20230823 11:20:57.284" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230823 11:20:57.247" endtime="20230823 11:20:57.284"/>
</kw>
<msg timestamp="20230823 11:20:57.285" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230823 11:20:57.245" endtime="20230823 11:20:57.285"/>
</kw>
<msg timestamp="20230823 11:20:57.285" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230823 11:20:57.243" endtime="20230823 11:20:57.285"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230823 11:20:57.286" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230823 11:20:57.285" endtime="20230823 11:20:57.286"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230823 11:20:57.292" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230823 11:20:57.334" level="INFO">${rc} = 0</msg>
<msg timestamp="20230823 11:20:57.334" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230823 11:20:57.289" endtime="20230823 11:20:57.334"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230823 11:20:57.336" level="INFO"/>
<status status="PASS" starttime="20230823 11:20:57.335" endtime="20230823 11:20:57.336"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230823 11:20:57.337" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230823 11:20:57.336" endtime="20230823 11:20:57.337"/>
</kw>
<status status="PASS" starttime="20230823 11:20:57.288" endtime="20230823 11:20:57.338"/>
</kw>
<msg timestamp="20230823 11:20:57.338" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230823 11:20:57.288" endtime="20230823 11:20:57.338"/>
</kw>
<status status="PASS" starttime="20230823 11:20:57.287" endtime="20230823 11:20:57.338"/>
</kw>
<status status="PASS" starttime="20230823 11:20:57.286" endtime="20230823 11:20:57.338"/>
</kw>
<status status="PASS" starttime="20230823 11:20:57.241" endtime="20230823 11:20:57.338"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230823 11:20:57.240" endtime="20230823 11:20:57.339"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20230823 11:20:56.923" endtime="20230823 11:20:57.340"/>
</suite>
<suite id="s1-s2" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s2-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230823 11:21:20.073" level="INFO">Running command 'ozone sh volume create rootca-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230823 11:21:27.237" level="INFO">${rc} = 0</msg>
<msg timestamp="20230823 11:21:27.238" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230823 11:21:20.069" endtime="20230823 11:21:27.238"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230823 11:21:27.244" level="INFO"/>
<status status="PASS" starttime="20230823 11:21:27.238" endtime="20230823 11:21:27.244"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230823 11:21:27.250" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230823 11:21:27.249" endtime="20230823 11:21:27.250"/>
</kw>
<status status="PASS" starttime="20230823 11:21:20.069" endtime="20230823 11:21:27.256"/>
</kw>
<msg timestamp="20230823 11:21:27.256" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230823 11:21:20.068" endtime="20230823 11:21:27.256"/>
</kw>
<msg timestamp="20230823 11:21:27.256" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230823 11:21:20.067" endtime="20230823 11:21:27.256"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230823 11:21:27.260" endtime="20230823 11:21:27.266"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230823 11:21:27.271" level="INFO">Running command 'ozone sh bucket create /rootca-volume/rootca-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230823 11:21:35.738" level="INFO">${rc} = 0</msg>
<msg timestamp="20230823 11:21:35.738" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230823 11:21:27.268" endtime="20230823 11:21:35.738"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230823 11:21:35.740" level="INFO"/>
<status status="PASS" starttime="20230823 11:21:35.739" endtime="20230823 11:21:35.740"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230823 11:21:35.741" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230823 11:21:35.740" endtime="20230823 11:21:35.741"/>
</kw>
<status status="PASS" starttime="20230823 11:21:27.267" endtime="20230823 11:21:35.741"/>
</kw>
<msg timestamp="20230823 11:21:35.741" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230823 11:21:27.267" endtime="20230823 11:21:35.742"/>
</kw>
<msg timestamp="20230823 11:21:35.742" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230823 11:21:27.266" endtime="20230823 11:21:35.742"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230823 11:21:35.742" endtime="20230823 11:21:35.742"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230823 11:21:20.066" endtime="20230823 11:21:35.743"/>
</test>
<test id="s1-s2-t2" name="Create key" line="34">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230823 11:21:35.755" level="INFO">Running command 'echo "rootca: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230823 11:21:35.758" level="INFO">${rc} = 0</msg>
<msg timestamp="20230823 11:21:35.758" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230823 11:21:35.746" endtime="20230823 11:21:35.758"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230823 11:21:35.759" level="INFO"/>
<status status="PASS" starttime="20230823 11:21:35.758" endtime="20230823 11:21:35.759"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230823 11:21:35.760" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230823 11:21:35.759" endtime="20230823 11:21:35.760"/>
</kw>
<status status="PASS" starttime="20230823 11:21:35.745" endtime="20230823 11:21:35.760"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230823 11:21:35.765" level="INFO">Running command 'ozone sh key put /rootca-volume/rootca-bucket/rootca-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230823 11:21:51.625" level="INFO">${rc} = 0</msg>
<msg timestamp="20230823 11:21:51.626" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230823 11:21:35.763" endtime="20230823 11:21:51.626"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230823 11:21:51.628" level="INFO"/>
<status status="PASS" starttime="20230823 11:21:51.627" endtime="20230823 11:21:51.628"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230823 11:21:51.629" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230823 11:21:51.628" endtime="20230823 11:21:51.629"/>
</kw>
<status status="PASS" starttime="20230823 11:21:35.762" endtime="20230823 11:21:51.629"/>
</kw>
<msg timestamp="20230823 11:21:51.629" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230823 11:21:35.761" endtime="20230823 11:21:51.629"/>
</kw>
<msg timestamp="20230823 11:21:51.629" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230823 11:21:35.761" endtime="20230823 11:21:51.629"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230823 11:21:51.630" endtime="20230823 11:21:51.630"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230823 11:21:51.633" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230823 11:21:51.637" level="INFO">${rc} = 0</msg>
<msg timestamp="20230823 11:21:51.637" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230823 11:21:51.631" endtime="20230823 11:21:51.637"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230823 11:21:51.639" level="INFO"/>
<status status="PASS" starttime="20230823 11:21:51.638" endtime="20230823 11:21:51.639"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230823 11:21:51.640" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230823 11:21:51.639" endtime="20230823 11:21:51.640"/>
</kw>
<status status="PASS" starttime="20230823 11:21:51.630" endtime="20230823 11:21:51.641"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230823 11:21:35.744" endtime="20230823 11:21:51.641"/>
</test>
<test id="s1-s2-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230823 11:21:51.644" level="INFO">${random} = 06262</msg>
<status status="PASS" starttime="20230823 11:21:51.643" endtime="20230823 11:21:51.644"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230823 11:21:51.648" level="INFO">Running command 'ozone sh key get /rootca-volume/rootca-bucket/rootca-key /tmp/key-06262 2&gt;&amp;1'.</msg>
<msg timestamp="20230823 11:22:03.676" level="INFO">${rc} = 0</msg>
<msg timestamp="20230823 11:22:03.676" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230823 11:21:51.646" endtime="20230823 11:22:03.676"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230823 11:22:03.678" level="INFO"/>
<status status="PASS" starttime="20230823 11:22:03.677" endtime="20230823 11:22:03.678"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230823 11:22:03.679" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230823 11:22:03.678" endtime="20230823 11:22:03.679"/>
</kw>
<status status="PASS" starttime="20230823 11:21:51.645" endtime="20230823 11:22:03.679"/>
</kw>
<msg timestamp="20230823 11:22:03.679" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230823 11:21:51.645" endtime="20230823 11:22:03.679"/>
</kw>
<msg timestamp="20230823 11:22:03.679" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230823 11:21:51.644" endtime="20230823 11:22:03.680"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230823 11:22:03.680" endtime="20230823 11:22:03.681"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230823 11:22:03.685" level="INFO">Running command 'cat /tmp/key-06262 2&gt;&amp;1'.</msg>
<msg timestamp="20230823 11:22:03.688" level="INFO">${rc} = 0</msg>
<msg timestamp="20230823 11:22:03.688" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230823 11:22:03.682" endtime="20230823 11:22:03.688"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230823 11:22:03.690" level="INFO">rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230823 11:22:03.689" endtime="20230823 11:22:03.690"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230823 11:22:03.690" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230823 11:22:03.690" endtime="20230823 11:22:03.690"/>
</kw>
<msg timestamp="20230823 11:22:03.691" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230823 11:22:03.681" endtime="20230823 11:22:03.691"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230823 11:22:03.691" endtime="20230823 11:22:03.691"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230823 11:22:03.698" level="INFO">Running command 'rm /tmp/key-06262 2&gt;&amp;1'.</msg>
<msg timestamp="20230823 11:22:03.701" level="INFO">${rc} = 0</msg>
<msg timestamp="20230823 11:22:03.701" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230823 11:22:03.695" endtime="20230823 11:22:03.701"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230823 11:22:03.703" level="INFO"/>
<status status="PASS" starttime="20230823 11:22:03.702" endtime="20230823 11:22:03.703"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230823 11:22:03.704" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230823 11:22:03.703" endtime="20230823 11:22:03.704"/>
</kw>
<status status="PASS" starttime="20230823 11:22:03.692" endtime="20230823 11:22:03.704"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230823 11:21:51.642" endtime="20230823 11:22:03.705"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230823 11:21:19.995" endtime="20230823 11:22:03.707"/>
</suite>
<suite id="s1-s3" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s3-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230823 11:22:50.950" level="INFO">Running command 'ozone sh volume create rootca2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230823 11:22:57.953" level="INFO">${rc} = 0</msg>
<msg timestamp="20230823 11:22:57.954" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230823 11:22:50.947" endtime="20230823 11:22:57.954"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230823 11:22:57.956" level="INFO"/>
<status status="PASS" starttime="20230823 11:22:57.954" endtime="20230823 11:22:57.956"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230823 11:22:57.957" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230823 11:22:57.956" endtime="20230823 11:22:57.957"/>
</kw>
<status status="PASS" starttime="20230823 11:22:50.946" endtime="20230823 11:22:57.958"/>
</kw>
<msg timestamp="20230823 11:22:57.958" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230823 11:22:50.946" endtime="20230823 11:22:57.958"/>
</kw>
<msg timestamp="20230823 11:22:57.958" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230823 11:22:50.945" endtime="20230823 11:22:57.958"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230823 11:22:57.959" endtime="20230823 11:22:57.959"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230823 11:22:57.965" level="INFO">Running command 'ozone sh bucket create /rootca2-volume/rootca2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230823 11:23:06.614" level="INFO">${rc} = 0</msg>
<msg timestamp="20230823 11:23:06.614" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230823 11:22:57.962" endtime="20230823 11:23:06.614"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230823 11:23:06.616" level="INFO"/>
<status status="PASS" starttime="20230823 11:23:06.615" endtime="20230823 11:23:06.616"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230823 11:23:06.617" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230823 11:23:06.617" endtime="20230823 11:23:06.617"/>
</kw>
<status status="PASS" starttime="20230823 11:22:57.962" endtime="20230823 11:23:06.618"/>
</kw>
<msg timestamp="20230823 11:23:06.618" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230823 11:22:57.961" endtime="20230823 11:23:06.618"/>
</kw>
<msg timestamp="20230823 11:23:06.618" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230823 11:22:57.960" endtime="20230823 11:23:06.618"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230823 11:23:06.619" endtime="20230823 11:23:06.619"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230823 11:22:50.944" endtime="20230823 11:23:06.620"/>
</test>
<test id="s1-s3-t2" name="Create key" line="34">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230823 11:23:06.627" level="INFO">Running command 'echo "rootca2: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230823 11:23:06.630" level="INFO">${rc} = 0</msg>
<msg timestamp="20230823 11:23:06.630" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230823 11:23:06.624" endtime="20230823 11:23:06.630"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230823 11:23:06.632" level="INFO"/>
<status status="PASS" starttime="20230823 11:23:06.631" endtime="20230823 11:23:06.632"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230823 11:23:06.633" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230823 11:23:06.632" endtime="20230823 11:23:06.633"/>
</kw>
<status status="PASS" starttime="20230823 11:23:06.623" endtime="20230823 11:23:06.633"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230823 11:23:06.638" level="INFO">Running command 'ozone sh key put /rootca2-volume/rootca2-bucket/rootca2-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230823 11:23:18.449" level="INFO">${rc} = 0</msg>
<msg timestamp="20230823 11:23:18.449" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230823 11:23:06.636" endtime="20230823 11:23:18.449"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230823 11:23:18.451" level="INFO"/>
<status status="PASS" starttime="20230823 11:23:18.450" endtime="20230823 11:23:18.451"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230823 11:23:18.452" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230823 11:23:18.451" endtime="20230823 11:23:18.453"/>
</kw>
<status status="PASS" starttime="20230823 11:23:06.635" endtime="20230823 11:23:18.453"/>
</kw>
<msg timestamp="20230823 11:23:18.453" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230823 11:23:06.634" endtime="20230823 11:23:18.453"/>
</kw>
<msg timestamp="20230823 11:23:18.453" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230823 11:23:06.633" endtime="20230823 11:23:18.453"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230823 11:23:18.454" endtime="20230823 11:23:18.454"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230823 11:23:18.459" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230823 11:23:18.462" level="INFO">${rc} = 0</msg>
<msg timestamp="20230823 11:23:18.462" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230823 11:23:18.455" endtime="20230823 11:23:18.462"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230823 11:23:18.463" level="INFO"/>
<status status="PASS" starttime="20230823 11:23:18.463" endtime="20230823 11:23:18.463"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230823 11:23:18.464" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230823 11:23:18.464" endtime="20230823 11:23:18.464"/>
</kw>
<status status="PASS" starttime="20230823 11:23:18.454" endtime="20230823 11:23:18.464"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230823 11:23:06.622" endtime="20230823 11:23:18.465"/>
</test>
<test id="s1-s3-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230823 11:23:18.470" level="INFO">${random} = 47978</msg>
<status status="PASS" starttime="20230823 11:23:18.469" endtime="20230823 11:23:18.470"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230823 11:23:18.475" level="INFO">Running command 'ozone sh key get /rootca2-volume/rootca2-bucket/rootca2-key /tmp/key-47978 2&gt;&amp;1'.</msg>
<msg timestamp="20230823 11:23:27.987" level="INFO">${rc} = 0</msg>
<msg timestamp="20230823 11:23:27.988" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230823 11:23:18.472" endtime="20230823 11:23:27.988"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230823 11:23:27.989" level="INFO"/>
<status status="PASS" starttime="20230823 11:23:27.988" endtime="20230823 11:23:27.990"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230823 11:23:27.990" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230823 11:23:27.990" endtime="20230823 11:23:27.991"/>
</kw>
<status status="PASS" starttime="20230823 11:23:18.471" endtime="20230823 11:23:27.991"/>
</kw>
<msg timestamp="20230823 11:23:27.991" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230823 11:23:18.471" endtime="20230823 11:23:27.991"/>
</kw>
<msg timestamp="20230823 11:23:27.992" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230823 11:23:18.470" endtime="20230823 11:23:27.992"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230823 11:23:27.992" endtime="20230823 11:23:27.992"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230823 11:23:27.996" level="INFO">Running command 'cat /tmp/key-47978 2&gt;&amp;1'.</msg>
<msg timestamp="20230823 11:23:27.999" level="INFO">${rc} = 0</msg>
<msg timestamp="20230823 11:23:27.999" level="INFO">${output} = rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230823 11:23:27.993" endtime="20230823 11:23:27.999"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230823 11:23:28.000" level="INFO">rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230823 11:23:27.999" endtime="20230823 11:23:28.000"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230823 11:23:28.001" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230823 11:23:28.000" endtime="20230823 11:23:28.001"/>
</kw>
<msg timestamp="20230823 11:23:28.001" level="INFO">${output} = rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230823 11:23:27.992" endtime="20230823 11:23:28.001"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230823 11:23:28.002" endtime="20230823 11:23:28.002"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230823 11:23:28.005" level="INFO">Running command 'rm /tmp/key-47978 2&gt;&amp;1'.</msg>
<msg timestamp="20230823 11:23:28.008" level="INFO">${rc} = 0</msg>
<msg timestamp="20230823 11:23:28.009" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230823 11:23:28.003" endtime="20230823 11:23:28.009"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230823 11:23:28.010" level="INFO"/>
<status status="PASS" starttime="20230823 11:23:28.009" endtime="20230823 11:23:28.010"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230823 11:23:28.011" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230823 11:23:28.010" endtime="20230823 11:23:28.011"/>
</kw>
<status status="PASS" starttime="20230823 11:23:28.002" endtime="20230823 11:23:28.011"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230823 11:23:18.468" endtime="20230823 11:23:28.012"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230823 11:22:50.877" endtime="20230823 11:23:28.013"/>
</suite>
<suite id="s1-s4" name="Root-Ca-Rotation" source="/opt/hadoop/smoketest/scmha/root-ca-rotation.robot">
<test id="s1-s4-t1" name="Verify root CA rotation metrics" line="26">
<kw name="Execute" library="os">
<var>${successRotationLine}</var>
<arg>curl -sS 'http://localhost:9876/jmx' | grep NumSuccessRotation</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230823 11:23:32.666" level="INFO">Running command 'curl -sS 'http://localhost:9876/jmx' | grep NumSuccessRotation 2&gt;&amp;1'.</msg>
<msg timestamp="20230823 11:23:33.338" level="INFO">${rc} = 0</msg>
<msg timestamp="20230823 11:23:33.338" level="INFO">${output} =     "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230823 11:23:32.663" endtime="20230823 11:23:33.338"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230823 11:23:33.340" level="INFO">    "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230823 11:23:33.339" endtime="20230823 11:23:33.340"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230823 11:23:33.341" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230823 11:23:33.341" endtime="20230823 11:23:33.341"/>
</kw>
<status status="PASS" starttime="20230823 11:23:32.663" endtime="20230823 11:23:33.341"/>
</kw>
<msg timestamp="20230823 11:23:33.342" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230823 11:23:32.662" endtime="20230823 11:23:33.342"/>
</kw>
<msg timestamp="20230823 11:23:33.342" level="INFO">${successRotationLine} =     "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230823 11:23:32.662" endtime="20230823 11:23:33.342"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${successRotationLine}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230823 11:23:33.343" level="INFO">    "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230823 11:23:33.342" endtime="20230823 11:23:33.343"/>
</kw>
<kw name="Split String" library="String">
<var>${temp_1}</var>
<arg>${successRotationLine}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230823 11:23:33.344" level="INFO">${temp_1} = ['    "NumSuccessRotation" ', ' 2,']</msg>
<status status="PASS" starttime="20230823 11:23:33.343" endtime="20230823 11:23:33.344"/>
</kw>
<kw name="Strip String" library="String">
<var>${temp_2}</var>
<arg>${temp_1[1]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230823 11:23:33.345" level="INFO">${temp_2} = 2,</msg>
<status status="PASS" starttime="20230823 11:23:33.344" endtime="20230823 11:23:33.345"/>
</kw>
<kw name="Split String" library="String">
<var>${temp_3}</var>
<arg>${temp_2}</arg>
<arg>,</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230823 11:23:33.346" level="INFO">${temp_3} = ['2', '']</msg>
<status status="PASS" starttime="20230823 11:23:33.345" endtime="20230823 11:23:33.346"/>
</kw>
<kw name="Strip String" library="String">
<var>${successRotation}</var>
<arg>${temp_3[0]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230823 11:23:33.348" level="INFO">${successRotation} = 2</msg>
<status status="PASS" starttime="20230823 11:23:33.346" endtime="20230823 11:23:33.348"/>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<var>${successRotation}</var>
<arg>${successRotation}</arg>
<doc>Converts the given item to a floating point number.</doc>
<msg timestamp="20230823 11:23:33.348" level="INFO">${successRotation} = 2.0</msg>
<status status="PASS" starttime="20230823 11:23:33.348" endtime="20230823 11:23:33.348"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${successRotation} &gt;= 1</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230823 11:23:33.349" endtime="20230823 11:23:33.349"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230823 11:23:32.661" endtime="20230823 11:23:33.350"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230823 11:23:32.593" endtime="20230823 11:23:33.351"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="82023"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="2" fail="0" skip="0">create-volume-and-bucket</stat>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="ozonesecure-root-ca-rotation">ozonesecure-root-ca-rotation</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Kinit">ozonesecure-root-ca-rotation.Kinit</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Root-Ca-Rotation-Client-Checks">ozonesecure-root-ca-rotation.Root-Ca-Rotation-Client-Checks</stat>
<stat pass="3" fail="0" skip="0" id="s1-s3" name="Root-Ca-Rotation-Client-Checks">ozonesecure-root-ca-rotation.Root-Ca-Rotation-Client-Checks</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Root-Ca-Rotation">ozonesecure-root-ca-rotation.Root-Ca-Rotation</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
