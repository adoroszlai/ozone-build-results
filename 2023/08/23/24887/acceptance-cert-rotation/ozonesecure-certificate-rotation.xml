<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20230823 11:18:26.816" rpa="false" schemaversion="4">
<suite id="s1" name="ozonesecure-certificate-rotation" source="/opt/hadoop/smoketest/certrotation">
<suite id="s1-s1" name="Cert-Rotation" source="/opt/hadoop/smoketest/certrotation/cert-rotation.robot">
<kw name="Setup Test" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230823 11:16:25.342" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230823 11:16:25.357" level="INFO">${rc} = 0</msg>
<msg timestamp="20230823 11:16:25.358" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230823 11:16:25.330" endtime="20230823 11:16:25.358"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230823 11:16:25.366" level="INFO">scm</msg>
<status status="PASS" starttime="20230823 11:16:25.362" endtime="20230823 11:16:25.366"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230823 11:16:25.366" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230823 11:16:25.366" endtime="20230823 11:16:25.367"/>
</kw>
<status status="PASS" starttime="20230823 11:16:25.325" endtime="20230823 11:16:25.367"/>
</kw>
<msg timestamp="20230823 11:16:25.367" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230823 11:16:25.322" endtime="20230823 11:16:25.367"/>
</kw>
<msg timestamp="20230823 11:16:25.371" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230823 11:16:25.322" endtime="20230823 11:16:25.371"/>
</kw>
<msg timestamp="20230823 11:16:25.371" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230823 11:16:25.320" endtime="20230823 11:16:25.372"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230823 11:16:25.376" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230823 11:16:25.376" endtime="20230823 11:16:25.378"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230823 11:16:25.394" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230823 11:16:25.495" level="INFO">${rc} = 0</msg>
<msg timestamp="20230823 11:16:25.495" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230823 11:16:25.386" endtime="20230823 11:16:25.495"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230823 11:16:25.496" level="INFO"/>
<status status="PASS" starttime="20230823 11:16:25.495" endtime="20230823 11:16:25.496"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230823 11:16:25.497" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230823 11:16:25.496" endtime="20230823 11:16:25.497"/>
</kw>
<status status="PASS" starttime="20230823 11:16:25.384" endtime="20230823 11:16:25.497"/>
</kw>
<msg timestamp="20230823 11:16:25.497" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230823 11:16:25.383" endtime="20230823 11:16:25.497"/>
</kw>
<status status="PASS" starttime="20230823 11:16:25.380" endtime="20230823 11:16:25.498"/>
</kw>
<status status="PASS" starttime="20230823 11:16:25.378" endtime="20230823 11:16:25.498"/>
</kw>
<status status="PASS" starttime="20230823 11:16:25.319" endtime="20230823 11:16:25.498"/>
</kw>
<status status="PASS" starttime="20230823 11:16:25.315" endtime="20230823 11:16:25.498"/>
</kw>
<status status="PASS" starttime="20230823 11:16:25.311" endtime="20230823 11:16:25.498"/>
</kw>
<test id="s1-s1-t1" name="Test datanode functions before and after certificate rotation" line="55">
<kw name="Basic key generation and validation">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>10</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230823 11:16:25.515" level="INFO">${random} = m7PobzqYkJ</msg>
<status status="PASS" starttime="20230823 11:16:25.514" endtime="20230823 11:16:25.515"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230823 11:16:25.546" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p m7PobzqYkJ  2&gt;&amp;1'.</msg>
<msg timestamp="20230823 11:16:47.925" level="INFO">${rc} = 0</msg>
<msg timestamp="20230823 11:16:47.925" level="INFO">${output} = 2023-08-23 11:16:33,925 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-23 11:16:34,128 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230823 11:16:25.533" endtime="20230823 11:16:47.925"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230823 11:16:47.927" level="INFO">2023-08-23 11:16:33,925 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-23 11:16:34,128 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-08-23 11:16:34,128 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-08-23 11:16:34,248 [main] INFO freon.BaseFreonGenerator: Executing test with prefix m7PobzqYkJ and number-of-tests 1
2023-08-23 11:16:34,352 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-23 11:16:35,370 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-23 11:16:36,371 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-23 11:16:37,372 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-23 11:16:38,002 [main] INFO rpc.RpcClient: Creating Volume: vol1, with testuser as owner and space quota set to -1 bytes, counts quota set to -1
2023-08-23 11:16:38,372 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-23 11:16:38,443 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and Encryption set to false, Replication Type set to server-side default replication type, Namespace Quota set to -1, Space Quota set to -1 
2023-08-23 11:16:39,254 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-08-23 11:16:39,347 [pool-2-thread-1] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig0-
2023-08-23 11:16:39,372 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-23 11:16:39,781 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-08-23 11:16:40,374 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-23 11:16:41,378 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-23 11:16:42,378 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-23 11:16:43,379 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-23 11:16:44,382 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-23 11:16:45,393 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-23 11:16:46,393 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-23 11:16:47,394 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-08-23 11:16:47,480 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=8008.877626, max=8008.877626, mean=8008.877626, stddev=0.0, median=8008.877626, p75=8008.877626, p95=8008.877626, p98=8008.877626, p99=8008.877626, p999=8008.877626, mean_rate=0.11201151763717047, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-08-23 11:16:47,481 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 13
2023-08-23 11:16:47,482 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-08-23 11:16:47,482 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230823 11:16:47.926" endtime="20230823 11:16:47.928"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230823 11:16:47.928" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230823 11:16:47.928" endtime="20230823 11:16:47.928"/>
</kw>
<status status="PASS" starttime="20230823 11:16:25.529" endtime="20230823 11:16:47.929"/>
</kw>
<msg timestamp="20230823 11:16:47.929" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230823 11:16:25.529" endtime="20230823 11:16:47.929"/>
</kw>
<msg timestamp="20230823 11:16:47.929" level="INFO">${result} = 2023-08-23 11:16:33,925 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-23 11:16:34,128 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230823 11:16:25.528" endtime="20230823 11:16:47.929"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230823 11:16:47.929" endtime="20230823 11:16:47.930"/>
</kw>
<status status="PASS" starttime="20230823 11:16:25.515" endtime="20230823 11:16:47.930"/>
</kw>
<kw name="Freon OCKV" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230823 11:16:47.938" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p m7PobzqYkJ  2&gt;&amp;1'.</msg>
<msg timestamp="20230823 11:16:59.168" level="INFO">${rc} = 0</msg>
<msg timestamp="20230823 11:16:59.168" level="INFO">${output} = 2023-08-23 11:16:51,567 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-23 11:16:51,763 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230823 11:16:47.934" endtime="20230823 11:16:59.168"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230823 11:16:59.169" level="INFO">2023-08-23 11:16:51,567 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-23 11:16:51,763 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-08-23 11:16:51,763 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-08-23 11:16:51,899 [main] INFO freon.BaseFreonGenerator: Executing test with prefix m7PobzqYkJ and number-of-tests 1
2023-08-23 11:16:51,984 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-23 11:16:52,987 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-23 11:16:53,987 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-23 11:16:54,988 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-23 11:16:55,721 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-08-23 11:16:55,988 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-23 11:16:56,989 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-23 11:16:57,994 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-08-23 11:16:58,778 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=99.182867, max=99.182867, mean=99.182867, stddev=0.0, median=99.182867, p75=99.182867, p95=99.182867, p98=99.182867, p99=99.182867, p999=99.182867, mean_rate=0.8587047815217991, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-08-23 11:16:58,782 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 7
2023-08-23 11:16:58,783 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-08-23 11:16:58,783 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230823 11:16:59.169" endtime="20230823 11:16:59.169"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230823 11:16:59.170" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230823 11:16:59.170" endtime="20230823 11:16:59.170"/>
</kw>
<status status="PASS" starttime="20230823 11:16:47.933" endtime="20230823 11:16:59.171"/>
</kw>
<msg timestamp="20230823 11:16:59.171" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230823 11:16:47.933" endtime="20230823 11:16:59.171"/>
</kw>
<msg timestamp="20230823 11:16:59.171" level="INFO">${result} = 2023-08-23 11:16:51,567 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-23 11:16:51,763 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230823 11:16:47.932" endtime="20230823 11:16:59.171"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230823 11:16:59.172" endtime="20230823 11:16:59.172"/>
</kw>
<status status="PASS" starttime="20230823 11:16:47.930" endtime="20230823 11:16:59.172"/>
</kw>
<status status="PASS" starttime="20230823 11:16:25.513" endtime="20230823 11:16:59.172"/>
</kw>
<kw name="Find certificate duration">
<var>${certDuration}</var>
<kw name="Execute" library="os">
<var>${waitTime}</var>
<arg>ozone getconf confKey hdds.x509.default.duration | sed 's/PT//'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230823 11:16:59.182" level="INFO">Running command 'ozone getconf confKey hdds.x509.default.duration | sed 's/PT//' 2&gt;&amp;1'.</msg>
<msg timestamp="20230823 11:17:01.747" level="INFO">${rc} = 0</msg>
<msg timestamp="20230823 11:17:01.747" level="INFO">${output} = 40s</msg>
<status status="PASS" starttime="20230823 11:16:59.175" endtime="20230823 11:17:01.747"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230823 11:17:01.749" level="INFO">40s</msg>
<status status="PASS" starttime="20230823 11:17:01.748" endtime="20230823 11:17:01.749"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230823 11:17:01.750" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230823 11:17:01.750" endtime="20230823 11:17:01.750"/>
</kw>
<status status="PASS" starttime="20230823 11:16:59.174" endtime="20230823 11:17:01.751"/>
</kw>
<msg timestamp="20230823 11:17:01.751" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230823 11:16:59.174" endtime="20230823 11:17:01.751"/>
</kw>
<msg timestamp="20230823 11:17:01.751" level="INFO">${waitTime} = 40s</msg>
<status status="PASS" starttime="20230823 11:16:59.173" endtime="20230823 11:17:01.751"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>"${waitTime}" != "${EMPTY}"</arg>
<arg>${waitTime}</arg>
<arg>0s</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230823 11:17:01.753" level="INFO">${result} = 40s</msg>
<status status="PASS" starttime="20230823 11:17:01.752" endtime="20230823 11:17:01.753"/>
</kw>
<msg timestamp="20230823 11:17:01.753" level="INFO">${certDuration} = 40s</msg>
<status status="PASS" starttime="20230823 11:16:59.173" endtime="20230823 11:17:01.753"/>
</kw>
<kw name="Double duration">
<var>${doubleDuration}</var>
<arg>${certDuration}</arg>
<kw name="Add Time To Time" library="DateTime">
<var>${doubleDuration}</var>
<arg>${duration}</arg>
<arg>${duration}</arg>
<doc>Adds time to another time and returns the resulting time.</doc>
<msg timestamp="20230823 11:17:01.755" level="INFO">${doubleDuration} = 80.0</msg>
<status status="PASS" starttime="20230823 11:17:01.754" endtime="20230823 11:17:01.755"/>
</kw>
<msg timestamp="20230823 11:17:01.755" level="INFO">${doubleDuration} = 80.0</msg>
<status status="PASS" starttime="20230823 11:17:01.753" endtime="20230823 11:17:01.755"/>
</kw>
<kw name="Get datanode cert serial">
<var>${certId1}</var>
<kw name="Execute" library="os">
<var>${certSerial}</var>
<arg>openssl s_client -connect "${datanode}":"${port}" -showcerts | openssl x509 -noout -serial | grep serial | sed 's/serial=//'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230823 11:17:01.761" level="INFO">Running command 'openssl s_client -connect "datanode":"9859" -showcerts | openssl x509 -noout -serial | grep serial | sed 's/serial=//' 2&gt;&amp;1'.</msg>
<msg timestamp="20230823 11:17:01.908" level="INFO">${rc} = 0</msg>
<msg timestamp="20230823 11:17:01.908" level="INFO">${output} = 012DE15F6046</msg>
<status status="PASS" starttime="20230823 11:17:01.758" endtime="20230823 11:17:01.908"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230823 11:17:01.914" level="INFO">012DE15F6046</msg>
<status status="PASS" starttime="20230823 11:17:01.913" endtime="20230823 11:17:01.914"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230823 11:17:01.915" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230823 11:17:01.914" endtime="20230823 11:17:01.915"/>
</kw>
<status status="PASS" starttime="20230823 11:17:01.757" endtime="20230823 11:17:01.915"/>
</kw>
<msg timestamp="20230823 11:17:01.916" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230823 11:17:01.756" endtime="20230823 11:17:01.916"/>
</kw>
<msg timestamp="20230823 11:17:01.916" level="INFO">${certSerial} = 012DE15F6046</msg>
<status status="PASS" starttime="20230823 11:17:01.756" endtime="20230823 11:17:01.916"/>
</kw>
<msg timestamp="20230823 11:17:01.916" level="INFO">${certId1} = 012DE15F6046</msg>
<status status="PASS" starttime="20230823 11:17:01.755" endtime="20230823 11:17:01.916"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${doubleDuration}</arg>
<arg>5sec</arg>
<arg>Datanode has new certificate</arg>
<arg>${certId1}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Datanode has new certificate">
<arg>${certId1}</arg>
<kw name="Get datanode cert serial">
<var>${newCertId}</var>
<kw name="Execute" library="os">
<var>${certSerial}</var>
<arg>openssl s_client -connect "${datanode}":"${port}" -showcerts | openssl x509 -noout -serial | grep serial | sed 's/serial=//'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230823 11:17:01.928" level="INFO">Running command 'openssl s_client -connect "datanode":"9859" -showcerts | openssl x509 -noout -serial | grep serial | sed 's/serial=//' 2&gt;&amp;1'.</msg>
<msg timestamp="20230823 11:17:02.050" level="INFO">${rc} = 0</msg>
<msg timestamp="20230823 11:17:02.050" level="INFO">${output} = 012E0DF8EFE1</msg>
<status status="PASS" starttime="20230823 11:17:01.924" endtime="20230823 11:17:02.050"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230823 11:17:02.052" level="INFO">012E0DF8EFE1</msg>
<status status="PASS" starttime="20230823 11:17:02.051" endtime="20230823 11:17:02.052"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230823 11:17:02.053" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230823 11:17:02.052" endtime="20230823 11:17:02.053"/>
</kw>
<status status="PASS" starttime="20230823 11:17:01.923" endtime="20230823 11:17:02.053"/>
</kw>
<msg timestamp="20230823 11:17:02.053" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230823 11:17:01.923" endtime="20230823 11:17:02.054"/>
</kw>
<msg timestamp="20230823 11:17:02.054" level="INFO">${certSerial} = 012E0DF8EFE1</msg>
<status status="PASS" starttime="20230823 11:17:01.921" endtime="20230823 11:17:02.054"/>
</kw>
<msg timestamp="20230823 11:17:02.054" level="INFO">${newCertId} = 012E0DF8EFE1</msg>
<status status="PASS" starttime="20230823 11:17:01.920" endtime="20230823 11:17:02.054"/>
</kw>
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${certId}</arg>
<arg>${newCertId}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="PASS" starttime="20230823 11:17:02.055" endtime="20230823 11:17:02.055"/>
</kw>
<status status="PASS" starttime="20230823 11:17:01.919" endtime="20230823 11:17:02.055"/>
</kw>
<status status="PASS" starttime="20230823 11:17:01.918" endtime="20230823 11:17:02.055"/>
</kw>
<kw name="Basic key generation and validation">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>10</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230823 11:17:02.057" level="INFO">${random} = 2VX7qzdSGD</msg>
<status status="PASS" starttime="20230823 11:17:02.057" endtime="20230823 11:17:02.057"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230823 11:17:02.065" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p 2VX7qzdSGD  2&gt;&amp;1'.</msg>
<msg timestamp="20230823 11:17:14.623" level="INFO">${rc} = 0</msg>
<msg timestamp="20230823 11:17:14.623" level="INFO">${output} = 2023-08-23 11:17:07,239 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-23 11:17:07,479 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230823 11:17:02.062" endtime="20230823 11:17:14.623"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230823 11:17:14.625" level="INFO">2023-08-23 11:17:07,239 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-23 11:17:07,479 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-08-23 11:17:07,479 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-08-23 11:17:07,605 [main] INFO freon.BaseFreonGenerator: Executing test with prefix 2VX7qzdSGD and number-of-tests 1
2023-08-23 11:17:07,687 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-23 11:17:08,692 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-23 11:17:09,692 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-23 11:17:10,693 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-23 11:17:11,275 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-08-23 11:17:11,352 [pool-2-thread-1] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig0-
2023-08-23 11:17:11,669 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-08-23 11:17:11,693 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-23 11:17:12,696 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-23 11:17:13,696 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-08-23 11:17:14,213 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=2608.440459, max=2608.440459, mean=2608.440459, stddev=0.0, median=2608.440459, p75=2608.440459, p95=2608.440459, p98=2608.440459, p99=2608.440459, p999=2608.440459, mean_rate=0.29227955133571354, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-08-23 11:17:14,218 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 7
2023-08-23 11:17:14,219 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-08-23 11:17:14,219 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230823 11:17:14.624" endtime="20230823 11:17:14.625"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230823 11:17:14.626" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230823 11:17:14.625" endtime="20230823 11:17:14.626"/>
</kw>
<status status="PASS" starttime="20230823 11:17:02.061" endtime="20230823 11:17:14.626"/>
</kw>
<msg timestamp="20230823 11:17:14.626" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230823 11:17:02.060" endtime="20230823 11:17:14.626"/>
</kw>
<msg timestamp="20230823 11:17:14.627" level="INFO">${result} = 2023-08-23 11:17:07,239 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-23 11:17:07,479 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230823 11:17:02.059" endtime="20230823 11:17:14.627"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230823 11:17:14.627" endtime="20230823 11:17:14.627"/>
</kw>
<status status="PASS" starttime="20230823 11:17:02.058" endtime="20230823 11:17:14.628"/>
</kw>
<kw name="Freon OCKV" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230823 11:17:14.634" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p 2VX7qzdSGD  2&gt;&amp;1'.</msg>
<msg timestamp="20230823 11:17:27.097" level="INFO">${rc} = 0</msg>
<msg timestamp="20230823 11:17:27.097" level="INFO">${output} = 2023-08-23 11:17:18,349 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-23 11:17:18,584 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230823 11:17:14.631" endtime="20230823 11:17:27.097"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230823 11:17:27.098" level="INFO">2023-08-23 11:17:18,349 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-23 11:17:18,584 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-08-23 11:17:18,584 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-08-23 11:17:18,712 [main] INFO freon.BaseFreonGenerator: Executing test with prefix 2VX7qzdSGD and number-of-tests 1
2023-08-23 11:17:18,788 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-23 11:17:19,793 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-23 11:17:20,794 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-23 11:17:21,795 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-23 11:17:22,414 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-08-23 11:17:22,795 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-23 11:17:23,796 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-23 11:17:24,796 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-23 11:17:25,797 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-08-23 11:17:26,738 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=77.111689, max=77.111689, mean=77.111689, stddev=0.0, median=77.111689, p75=77.111689, p95=77.111689, p98=77.111689, p99=77.111689, p999=77.111689, mean_rate=0.9046847874058556, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-08-23 11:17:26,739 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 8
2023-08-23 11:17:26,740 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-08-23 11:17:26,740 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230823 11:17:27.097" endtime="20230823 11:17:27.099"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230823 11:17:27.100" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230823 11:17:27.099" endtime="20230823 11:17:27.100"/>
</kw>
<status status="PASS" starttime="20230823 11:17:14.630" endtime="20230823 11:17:27.100"/>
</kw>
<msg timestamp="20230823 11:17:27.100" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230823 11:17:14.630" endtime="20230823 11:17:27.100"/>
</kw>
<msg timestamp="20230823 11:17:27.101" level="INFO">${result} = 2023-08-23 11:17:18,349 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-23 11:17:18,584 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230823 11:17:14.629" endtime="20230823 11:17:27.101"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230823 11:17:27.101" endtime="20230823 11:17:27.102"/>
</kw>
<status status="PASS" starttime="20230823 11:17:14.628" endtime="20230823 11:17:27.102"/>
</kw>
<status status="PASS" starttime="20230823 11:17:02.056" endtime="20230823 11:17:27.102"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230823 11:16:25.498" endtime="20230823 11:17:27.102"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230823 11:16:25.031" endtime="20230823 11:17:27.104"/>
</suite>
<suite id="s1-s2" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s2-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230823 11:17:27.122" level="INFO">Running command 'ozone sh volume create rootca-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230823 11:17:35.182" level="INFO">${rc} = 0</msg>
<msg timestamp="20230823 11:17:35.182" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230823 11:17:27.119" endtime="20230823 11:17:35.182"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230823 11:17:35.184" level="INFO"/>
<status status="PASS" starttime="20230823 11:17:35.183" endtime="20230823 11:17:35.184"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230823 11:17:35.185" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230823 11:17:35.184" endtime="20230823 11:17:35.185"/>
</kw>
<status status="PASS" starttime="20230823 11:17:27.118" endtime="20230823 11:17:35.185"/>
</kw>
<msg timestamp="20230823 11:17:35.185" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230823 11:17:27.118" endtime="20230823 11:17:35.185"/>
</kw>
<msg timestamp="20230823 11:17:35.186" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230823 11:17:27.117" endtime="20230823 11:17:35.186"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230823 11:17:35.186" endtime="20230823 11:17:35.186"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230823 11:17:35.192" level="INFO">Running command 'ozone sh bucket create /rootca-volume/rootca-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230823 11:17:42.548" level="INFO">${rc} = 0</msg>
<msg timestamp="20230823 11:17:42.548" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230823 11:17:35.188" endtime="20230823 11:17:42.548"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230823 11:17:42.550" level="INFO"/>
<status status="PASS" starttime="20230823 11:17:42.549" endtime="20230823 11:17:42.550"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230823 11:17:42.551" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230823 11:17:42.550" endtime="20230823 11:17:42.551"/>
</kw>
<status status="PASS" starttime="20230823 11:17:35.188" endtime="20230823 11:17:42.551"/>
</kw>
<msg timestamp="20230823 11:17:42.551" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230823 11:17:35.187" endtime="20230823 11:17:42.551"/>
</kw>
<msg timestamp="20230823 11:17:42.551" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230823 11:17:35.187" endtime="20230823 11:17:42.551"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230823 11:17:42.552" endtime="20230823 11:17:42.552"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230823 11:17:27.116" endtime="20230823 11:17:42.552"/>
</test>
<test id="s1-s2-t2" name="Create key" line="34">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230823 11:17:42.558" level="INFO">Running command 'echo "rootca: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230823 11:17:42.561" level="INFO">${rc} = 0</msg>
<msg timestamp="20230823 11:17:42.561" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230823 11:17:42.556" endtime="20230823 11:17:42.561"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230823 11:17:42.562" level="INFO"/>
<status status="PASS" starttime="20230823 11:17:42.561" endtime="20230823 11:17:42.562"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230823 11:17:42.563" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230823 11:17:42.562" endtime="20230823 11:17:42.563"/>
</kw>
<status status="PASS" starttime="20230823 11:17:42.555" endtime="20230823 11:17:42.563"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230823 11:17:42.568" level="INFO">Running command 'ozone sh key put /rootca-volume/rootca-bucket/rootca-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230823 11:17:55.696" level="INFO">${rc} = 0</msg>
<msg timestamp="20230823 11:17:55.696" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230823 11:17:42.566" endtime="20230823 11:17:55.696"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230823 11:17:55.697" level="INFO"/>
<status status="PASS" starttime="20230823 11:17:55.697" endtime="20230823 11:17:55.697"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230823 11:17:55.698" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230823 11:17:55.698" endtime="20230823 11:17:55.698"/>
</kw>
<status status="PASS" starttime="20230823 11:17:42.565" endtime="20230823 11:17:55.698"/>
</kw>
<msg timestamp="20230823 11:17:55.699" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230823 11:17:42.564" endtime="20230823 11:17:55.699"/>
</kw>
<msg timestamp="20230823 11:17:55.699" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230823 11:17:42.564" endtime="20230823 11:17:55.699"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230823 11:17:55.699" endtime="20230823 11:17:55.700"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230823 11:17:55.703" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230823 11:17:55.707" level="INFO">${rc} = 0</msg>
<msg timestamp="20230823 11:17:55.707" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230823 11:17:55.701" endtime="20230823 11:17:55.707"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230823 11:17:55.709" level="INFO"/>
<status status="PASS" starttime="20230823 11:17:55.708" endtime="20230823 11:17:55.709"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230823 11:17:55.709" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230823 11:17:55.709" endtime="20230823 11:17:55.710"/>
</kw>
<status status="PASS" starttime="20230823 11:17:55.700" endtime="20230823 11:17:55.710"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230823 11:17:42.554" endtime="20230823 11:17:55.710"/>
</test>
<test id="s1-s2-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230823 11:17:55.713" level="INFO">${random} = 74828</msg>
<status status="PASS" starttime="20230823 11:17:55.712" endtime="20230823 11:17:55.713"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230823 11:17:55.717" level="INFO">Running command 'ozone sh key get /rootca-volume/rootca-bucket/rootca-key /tmp/key-74828 2&gt;&amp;1'.</msg>
<msg timestamp="20230823 11:18:07.468" level="INFO">${rc} = 0</msg>
<msg timestamp="20230823 11:18:07.468" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230823 11:17:55.715" endtime="20230823 11:18:07.468"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230823 11:18:07.469" level="INFO"/>
<status status="PASS" starttime="20230823 11:18:07.469" endtime="20230823 11:18:07.470"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230823 11:18:07.470" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230823 11:18:07.470" endtime="20230823 11:18:07.470"/>
</kw>
<status status="PASS" starttime="20230823 11:17:55.714" endtime="20230823 11:18:07.471"/>
</kw>
<msg timestamp="20230823 11:18:07.471" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230823 11:17:55.714" endtime="20230823 11:18:07.471"/>
</kw>
<msg timestamp="20230823 11:18:07.471" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230823 11:17:55.713" endtime="20230823 11:18:07.471"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230823 11:18:07.472" endtime="20230823 11:18:07.472"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230823 11:18:07.476" level="INFO">Running command 'cat /tmp/key-74828 2&gt;&amp;1'.</msg>
<msg timestamp="20230823 11:18:07.480" level="INFO">${rc} = 0</msg>
<msg timestamp="20230823 11:18:07.480" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230823 11:18:07.473" endtime="20230823 11:18:07.480"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230823 11:18:07.481" level="INFO">rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230823 11:18:07.481" endtime="20230823 11:18:07.481"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230823 11:18:07.482" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230823 11:18:07.482" endtime="20230823 11:18:07.482"/>
</kw>
<msg timestamp="20230823 11:18:07.483" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230823 11:18:07.472" endtime="20230823 11:18:07.483"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230823 11:18:07.483" endtime="20230823 11:18:07.484"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230823 11:18:07.487" level="INFO">Running command 'rm /tmp/key-74828 2&gt;&amp;1'.</msg>
<msg timestamp="20230823 11:18:07.490" level="INFO">${rc} = 0</msg>
<msg timestamp="20230823 11:18:07.491" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230823 11:18:07.485" endtime="20230823 11:18:07.491"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230823 11:18:07.492" level="INFO"/>
<status status="PASS" starttime="20230823 11:18:07.491" endtime="20230823 11:18:07.492"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230823 11:18:07.493" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230823 11:18:07.492" endtime="20230823 11:18:07.493"/>
</kw>
<status status="PASS" starttime="20230823 11:18:07.484" endtime="20230823 11:18:07.493"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230823 11:17:55.711" endtime="20230823 11:18:07.493"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230823 11:17:27.107" endtime="20230823 11:18:07.495"/>
</suite>
<status status="PASS" starttime="20230823 11:16:24.877" endtime="20230823 11:18:07.499"/>
</suite>
<statistics>
<total>
<stat pass="4" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">create-volume-and-bucket</stat>
</tag>
<suite>
<stat pass="4" fail="0" skip="0" id="s1" name="ozonesecure-certificate-rotation">ozonesecure-certificate-rotation</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Cert-Rotation">ozonesecure-certificate-rotation.Cert-Rotation</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Root-Ca-Rotation-Client-Checks">ozonesecure-certificate-rotation.Root-Ca-Rotation-Client-Checks</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
