<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20230831 18:08:49.282" rpa="false" schemaversion="4">
<suite id="s1" name="upgrade">
<suite id="s1-s1" name="Check-Finalization" source="/opt/ozone/smoketest/upgrade/check-finalization.robot">
<test id="s1-s1-t1" name="Check OM Finalized" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230831 18:01:58.581" endtime="20230831 18:01:58.582"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>env</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 18:01:58.587" level="INFO">Running command 'env 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 18:01:58.590" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 18:01:58.590" level="INFO">${output} = OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=a98b9f044841
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/ha...</msg>
<status status="PASS" starttime="20230831 18:01:58.583" endtime="20230831 18:01:58.590"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 18:01:58.591" level="INFO">OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=a98b9f044841
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/hadoop
LD_LIBRARY_PATH=/usr/local/lib
OZONE-SITE.XML_ozone.replication=3
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
ENSURE_SCM_INITIALIZED=/data/metadata/scm/current/VERSION
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OM_SERVICE_ID=omservice
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin
PWD=/opt/hadoop
OZONE-SITE.XML_ozone.scm.container.size=1GB
JAVA_HOME=/usr/lib/jvm/jre/
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE_UPGRADE_FROM=1.3.0
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
SHLVL=1
HOME=/opt/hadoop
OZONE_CONF_DIR=/etc/hadoop
OZONE-SITE.XML_ozone.om.ratis.enable=true
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
OZONE_UPGRADE_TO=1.4.0
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_ozone.scm.ratis.enable=true
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3
_=/usr/bin/env</msg>
<status status="PASS" starttime="20230831 18:01:58.590" endtime="20230831 18:01:58.591"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 18:01:58.592" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 18:01:58.591" endtime="20230831 18:01:58.592"/>
</kw>
<status status="PASS" starttime="20230831 18:01:58.582" endtime="20230831 18:01:58.592"/>
</kw>
<msg timestamp="20230831 18:01:58.592" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 18:01:58.582" endtime="20230831 18:01:58.593"/>
</kw>
<msg timestamp="20230831 18:01:58.594" level="INFO">${result} = OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=a98b9f044841
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/ha...</msg>
<status status="PASS" starttime="20230831 18:01:58.582" endtime="20230831 18:01:58.594"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 18:01:58.594" level="INFO">OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=a98b9f044841
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/hadoop
LD_LIBRARY_PATH=/usr/local/lib
OZONE-SITE.XML_ozone.replication=3
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
ENSURE_SCM_INITIALIZED=/data/metadata/scm/current/VERSION
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OM_SERVICE_ID=omservice
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin
PWD=/opt/hadoop
OZONE-SITE.XML_ozone.scm.container.size=1GB
JAVA_HOME=/usr/lib/jvm/jre/
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE_UPGRADE_FROM=1.3.0
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
SHLVL=1
HOME=/opt/hadoop
OZONE_CONF_DIR=/etc/hadoop
OZONE-SITE.XML_ozone.om.ratis.enable=true
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
OZONE_UPGRADE_TO=1.4.0
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_ozone.scm.ratis.enable=true
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3
_=/usr/bin/env</msg>
<status status="PASS" starttime="20230831 18:01:58.594" endtime="20230831 18:01:58.594"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230831 18:01:58.594" endtime="20230831 18:01:58.595"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 18:01:58.598" level="INFO">Running command 'ozone admin om finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 18:02:02.224" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 18:02:02.224" level="INFO">${output} = ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20230831 18:01:58.596" endtime="20230831 18:02:02.224"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 18:02:02.225" level="INFO">ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20230831 18:02:02.224" endtime="20230831 18:02:02.225"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 18:02:02.228" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 18:02:02.225" endtime="20230831 18:02:02.228"/>
</kw>
<status status="PASS" starttime="20230831 18:01:58.595" endtime="20230831 18:02:02.229"/>
</kw>
<msg timestamp="20230831 18:02:02.229" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 18:01:58.595" endtime="20230831 18:02:02.229"/>
</kw>
<msg timestamp="20230831 18:02:02.230" level="INFO">${result} = ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20230831 18:01:58.595" endtime="20230831 18:02:02.230"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 18:02:02.230" level="INFO">ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20230831 18:02:02.230" endtime="20230831 18:02:02.230"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20230831 18:02:02.230" endtime="20230831 18:02:02.233"/>
</kw>
<tag>finalized</tag>
<tag>om</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230831 18:01:58.580" endtime="20230831 18:02:02.234"/>
</test>
<test id="s1-s1-t2" name="Check SCM Finalized" line="32">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230831 18:02:02.237" endtime="20230831 18:02:02.237"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>HDDS finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230831 18:02:02.238" endtime="20230831 18:02:02.238"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 18:02:02.245" level="INFO">Running command 'ozone admin scm finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 18:02:05.241" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 18:02:05.241" level="INFO">${output} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230831 18:02:02.240" endtime="20230831 18:02:05.241"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 18:02:05.242" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230831 18:02:05.241" endtime="20230831 18:02:05.242"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 18:02:05.243" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 18:02:05.242" endtime="20230831 18:02:05.243"/>
</kw>
<status status="PASS" starttime="20230831 18:02:02.239" endtime="20230831 18:02:05.243"/>
</kw>
<msg timestamp="20230831 18:02:05.243" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 18:02:02.239" endtime="20230831 18:02:05.244"/>
</kw>
<msg timestamp="20230831 18:02:05.244" level="INFO">${result} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230831 18:02:02.238" endtime="20230831 18:02:05.244"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 18:02:05.244" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230831 18:02:05.244" endtime="20230831 18:02:05.245"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20230831 18:02:05.245" endtime="20230831 18:02:05.245"/>
</kw>
<tag>finalized</tag>
<tag>scm</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230831 18:02:02.235" endtime="20230831 18:02:05.245"/>
</test>
<doc>Finalize Upgrade of the Ozone cluster</doc>
<status status="PASS" starttime="20230831 18:01:58.520" endtime="20230831 18:02:05.247"/>
</suite>
<suite id="s1-s2" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s2-t1" name="Read data from previously created key" line="28">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230831 18:02:08.155" level="INFO">${random} = 34348</msg>
<status status="PASS" starttime="20230831 18:02:08.155" endtime="20230831 18:02:08.155"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 18:02:08.161" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-34348 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 18:02:12.830" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 18:02:12.830" level="INFO">${output} = 2023-08-31 18:02:11,573 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-31 18:02:11,651 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230831 18:02:08.158" endtime="20230831 18:02:12.830"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 18:02:12.832" level="INFO">2023-08-31 18:02:11,573 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-31 18:02:11,651 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-08-31 18:02:11,651 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started</msg>
<status status="PASS" starttime="20230831 18:02:12.831" endtime="20230831 18:02:12.832"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 18:02:12.832" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 18:02:12.832" endtime="20230831 18:02:12.832"/>
</kw>
<status status="PASS" starttime="20230831 18:02:08.157" endtime="20230831 18:02:12.833"/>
</kw>
<msg timestamp="20230831 18:02:12.833" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 18:02:08.156" endtime="20230831 18:02:12.834"/>
</kw>
<msg timestamp="20230831 18:02:12.834" level="INFO">${output} = 2023-08-31 18:02:11,573 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-31 18:02:11,651 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230831 18:02:08.155" endtime="20230831 18:02:12.834"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 18:02:12.834" endtime="20230831 18:02:12.835"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 18:02:12.838" level="INFO">Running command 'cat /tmp/key-34348 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 18:02:12.841" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 18:02:12.841" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230831 18:02:12.835" endtime="20230831 18:02:12.841"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 18:02:12.842" level="INFO">old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230831 18:02:12.841" endtime="20230831 18:02:12.842"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 18:02:12.842" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 18:02:12.842" endtime="20230831 18:02:12.843"/>
</kw>
<msg timestamp="20230831 18:02:12.843" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230831 18:02:12.835" endtime="20230831 18:02:12.843"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 18:02:12.843" endtime="20230831 18:02:12.843"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 18:02:12.846" level="INFO">Running command 'rm /tmp/key-34348 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 18:02:12.849" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 18:02:12.849" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 18:02:12.844" endtime="20230831 18:02:12.849"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 18:02:12.850" level="INFO"/>
<status status="PASS" starttime="20230831 18:02:12.849" endtime="20230831 18:02:12.850"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 18:02:12.851" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 18:02:12.850" endtime="20230831 18:02:12.851"/>
</kw>
<status status="PASS" starttime="20230831 18:02:12.844" endtime="20230831 18:02:12.851"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230831 18:02:08.154" endtime="20230831 18:02:12.851"/>
</test>
<test id="s1-s2-t2" name="Setup credentials for S3" line="36">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 18:02:12.857" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 18:02:13.499" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 18:02:13.499" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 18:02:12.855" endtime="20230831 18:02:13.499"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 18:02:13.500" level="INFO"/>
<status status="PASS" starttime="20230831 18:02:13.500" endtime="20230831 18:02:13.500"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 18:02:13.501" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 18:02:13.501" endtime="20230831 18:02:13.501"/>
</kw>
<status status="PASS" starttime="20230831 18:02:12.854" endtime="20230831 18:02:13.501"/>
</kw>
<msg timestamp="20230831 18:02:13.502" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 18:02:12.854" endtime="20230831 18:02:13.502"/>
</kw>
<status status="PASS" starttime="20230831 18:02:12.854" endtime="20230831 18:02:13.502"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 18:02:13.506" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 18:02:13.999" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 18:02:13.999" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 18:02:13.504" endtime="20230831 18:02:13.999"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 18:02:14.000" level="INFO"/>
<status status="PASS" starttime="20230831 18:02:13.999" endtime="20230831 18:02:14.000"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 18:02:14.001" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 18:02:14.000" endtime="20230831 18:02:14.001"/>
</kw>
<status status="PASS" starttime="20230831 18:02:13.503" endtime="20230831 18:02:14.001"/>
</kw>
<msg timestamp="20230831 18:02:14.001" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 18:02:13.503" endtime="20230831 18:02:14.002"/>
</kw>
<status status="PASS" starttime="20230831 18:02:13.502" endtime="20230831 18:02:14.002"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 18:02:14.005" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 18:02:14.485" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 18:02:14.485" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 18:02:14.003" endtime="20230831 18:02:14.485"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 18:02:14.486" level="INFO"/>
<status status="PASS" starttime="20230831 18:02:14.486" endtime="20230831 18:02:14.487"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 18:02:14.487" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 18:02:14.487" endtime="20230831 18:02:14.487"/>
</kw>
<status status="PASS" starttime="20230831 18:02:14.003" endtime="20230831 18:02:14.487"/>
</kw>
<msg timestamp="20230831 18:02:14.488" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 18:02:14.003" endtime="20230831 18:02:14.488"/>
</kw>
<status status="PASS" starttime="20230831 18:02:14.002" endtime="20230831 18:02:14.488"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 18:02:14.493" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 18:02:14.969" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 18:02:14.969" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 18:02:14.490" endtime="20230831 18:02:14.969"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 18:02:14.970" level="INFO"/>
<status status="PASS" starttime="20230831 18:02:14.969" endtime="20230831 18:02:14.970"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 18:02:14.971" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 18:02:14.970" endtime="20230831 18:02:14.971"/>
</kw>
<status status="PASS" starttime="20230831 18:02:14.489" endtime="20230831 18:02:14.971"/>
</kw>
<msg timestamp="20230831 18:02:14.971" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 18:02:14.489" endtime="20230831 18:02:14.972"/>
</kw>
<status status="PASS" starttime="20230831 18:02:14.488" endtime="20230831 18:02:14.972"/>
</kw>
<status status="PASS" starttime="20230831 18:02:12.853" endtime="20230831 18:02:14.972"/>
</kw>
<status status="PASS" starttime="20230831 18:02:12.853" endtime="20230831 18:02:14.972"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230831 18:02:12.852" endtime="20230831 18:02:14.972"/>
</test>
<test id="s1-s2-t3" name="Read key created with Ozone Shell using S3 API" line="40">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 18:02:14.977" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 18:02:17.835" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 18:02:17.835" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 31 Aug 2023 17:58:09 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230831 18:02:14.975" endtime="20230831 18:02:17.835"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 18:02:17.837" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 31 Aug 2023 17:58:09 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 31 Aug 2023 18:02:15 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230831 18:02:17.836" endtime="20230831 18:02:17.837"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 18:02:17.837" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 18:02:17.837" endtime="20230831 18:02:17.838"/>
</kw>
<msg timestamp="20230831 18:02:17.838" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 31 Aug 2023 17:58:09 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230831 18:02:14.974" endtime="20230831 18:02:17.838"/>
</kw>
<msg timestamp="20230831 18:02:17.838" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 31 Aug 2023 17:58:09 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230831 18:02:14.974" endtime="20230831 18:02:17.838"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 18:02:17.839" endtime="20230831 18:02:17.839"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 18:02:17.842" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 18:02:17.844" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 18:02:17.844" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230831 18:02:17.840" endtime="20230831 18:02:17.844"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 18:02:17.845" level="INFO">old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230831 18:02:17.845" endtime="20230831 18:02:17.845"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 18:02:17.846" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 18:02:17.846" endtime="20230831 18:02:17.846"/>
</kw>
<msg timestamp="20230831 18:02:17.846" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230831 18:02:17.839" endtime="20230831 18:02:17.846"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 18:02:17.847" endtime="20230831 18:02:17.847"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 18:02:17.850" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 18:02:17.852" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 18:02:17.852" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 18:02:17.848" endtime="20230831 18:02:17.852"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 18:02:17.853" level="INFO"/>
<status status="PASS" starttime="20230831 18:02:17.853" endtime="20230831 18:02:17.853"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 18:02:17.854" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 18:02:17.853" endtime="20230831 18:02:17.854"/>
</kw>
<status status="PASS" starttime="20230831 18:02:17.847" endtime="20230831 18:02:17.854"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230831 18:02:14.973" endtime="20230831 18:02:17.854"/>
</test>
<test id="s1-s2-t4" name="Read key created with S3 API using S3 API" line="47">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 18:02:17.859" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 18:02:18.541" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 18:02:18.541" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 31 Aug 2023 17:58:14 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230831 18:02:17.857" endtime="20230831 18:02:18.541"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 18:02:18.542" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 31 Aug 2023 17:58:14 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 31 Aug 2023 18:02:18 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230831 18:02:18.542" endtime="20230831 18:02:18.543"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 18:02:18.543" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 18:02:18.543" endtime="20230831 18:02:18.543"/>
</kw>
<msg timestamp="20230831 18:02:18.544" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 31 Aug 2023 17:58:14 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230831 18:02:17.857" endtime="20230831 18:02:18.544"/>
</kw>
<msg timestamp="20230831 18:02:18.544" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 31 Aug 2023 17:58:14 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230831 18:02:17.856" endtime="20230831 18:02:18.544"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 18:02:18.544" endtime="20230831 18:02:18.545"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 18:02:18.548" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 18:02:18.550" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 18:02:18.550" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20230831 18:02:18.545" endtime="20230831 18:02:18.550"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 18:02:18.551" level="INFO">old1: key created using S3 API</msg>
<status status="PASS" starttime="20230831 18:02:18.551" endtime="20230831 18:02:18.551"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 18:02:18.552" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 18:02:18.552" endtime="20230831 18:02:18.552"/>
</kw>
<msg timestamp="20230831 18:02:18.552" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20230831 18:02:18.545" endtime="20230831 18:02:18.552"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 18:02:18.553" endtime="20230831 18:02:18.553"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 18:02:18.556" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 18:02:18.558" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 18:02:18.558" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 18:02:18.554" endtime="20230831 18:02:18.558"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 18:02:18.559" level="INFO"/>
<status status="PASS" starttime="20230831 18:02:18.559" endtime="20230831 18:02:18.559"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 18:02:18.560" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 18:02:18.560" endtime="20230831 18:02:18.560"/>
</kw>
<status status="PASS" starttime="20230831 18:02:18.553" endtime="20230831 18:02:18.560"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230831 18:02:17.855" endtime="20230831 18:02:18.561"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230831 18:02:08.077" endtime="20230831 18:02:18.562"/>
</suite>
<suite id="s1-s3" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s3-t1" name="Read data from previously created key" line="28">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230831 18:02:21.590" level="INFO">${random} = 49808</msg>
<status status="PASS" starttime="20230831 18:02:21.589" endtime="20230831 18:02:21.590"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 18:02:21.596" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-49808 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 18:02:25.772" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 18:02:25.772" level="INFO">${output} = 2023-08-31 18:02:24,602 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-31 18:02:24,696 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230831 18:02:21.592" endtime="20230831 18:02:25.773"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 18:02:25.774" level="INFO">2023-08-31 18:02:24,602 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-31 18:02:24,696 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-08-31 18:02:24,696 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started</msg>
<status status="PASS" starttime="20230831 18:02:25.773" endtime="20230831 18:02:25.774"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 18:02:25.774" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 18:02:25.774" endtime="20230831 18:02:25.775"/>
</kw>
<status status="PASS" starttime="20230831 18:02:21.592" endtime="20230831 18:02:25.775"/>
</kw>
<msg timestamp="20230831 18:02:25.775" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 18:02:21.591" endtime="20230831 18:02:25.776"/>
</kw>
<msg timestamp="20230831 18:02:25.776" level="INFO">${output} = 2023-08-31 18:02:24,602 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-31 18:02:24,696 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230831 18:02:21.590" endtime="20230831 18:02:25.776"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 18:02:25.776" endtime="20230831 18:02:25.777"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 18:02:25.780" level="INFO">Running command 'cat /tmp/key-49808 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 18:02:25.782" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 18:02:25.782" level="INFO">${output} = new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230831 18:02:25.778" endtime="20230831 18:02:25.783"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 18:02:25.784" level="INFO">new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230831 18:02:25.783" endtime="20230831 18:02:25.784"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 18:02:25.784" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 18:02:25.784" endtime="20230831 18:02:25.784"/>
</kw>
<msg timestamp="20230831 18:02:25.785" level="INFO">${output} = new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230831 18:02:25.777" endtime="20230831 18:02:25.785"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 18:02:25.785" endtime="20230831 18:02:25.785"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 18:02:25.788" level="INFO">Running command 'rm /tmp/key-49808 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 18:02:25.791" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 18:02:25.791" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 18:02:25.786" endtime="20230831 18:02:25.791"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 18:02:25.792" level="INFO"/>
<status status="PASS" starttime="20230831 18:02:25.791" endtime="20230831 18:02:25.792"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 18:02:25.793" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 18:02:25.792" endtime="20230831 18:02:25.793"/>
</kw>
<status status="PASS" starttime="20230831 18:02:25.785" endtime="20230831 18:02:25.793"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230831 18:02:21.588" endtime="20230831 18:02:25.794"/>
</test>
<test id="s1-s3-t2" name="Setup credentials for S3" line="36">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 18:02:25.799" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 18:02:26.280" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 18:02:26.280" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 18:02:25.797" endtime="20230831 18:02:26.280"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 18:02:26.282" level="INFO"/>
<status status="PASS" starttime="20230831 18:02:26.281" endtime="20230831 18:02:26.282"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 18:02:26.282" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 18:02:26.282" endtime="20230831 18:02:26.282"/>
</kw>
<status status="PASS" starttime="20230831 18:02:25.797" endtime="20230831 18:02:26.283"/>
</kw>
<msg timestamp="20230831 18:02:26.283" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 18:02:25.796" endtime="20230831 18:02:26.283"/>
</kw>
<status status="PASS" starttime="20230831 18:02:25.796" endtime="20230831 18:02:26.283"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 18:02:26.287" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 18:02:26.765" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 18:02:26.765" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 18:02:26.285" endtime="20230831 18:02:26.765"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 18:02:26.766" level="INFO"/>
<status status="PASS" starttime="20230831 18:02:26.766" endtime="20230831 18:02:26.766"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 18:02:26.767" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 18:02:26.767" endtime="20230831 18:02:26.767"/>
</kw>
<status status="PASS" starttime="20230831 18:02:26.284" endtime="20230831 18:02:26.767"/>
</kw>
<msg timestamp="20230831 18:02:26.767" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 18:02:26.284" endtime="20230831 18:02:26.768"/>
</kw>
<status status="PASS" starttime="20230831 18:02:26.283" endtime="20230831 18:02:26.768"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 18:02:26.772" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 18:02:27.263" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 18:02:27.263" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 18:02:26.769" endtime="20230831 18:02:27.263"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 18:02:27.265" level="INFO"/>
<status status="PASS" starttime="20230831 18:02:27.264" endtime="20230831 18:02:27.265"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 18:02:27.265" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 18:02:27.265" endtime="20230831 18:02:27.265"/>
</kw>
<status status="PASS" starttime="20230831 18:02:26.769" endtime="20230831 18:02:27.266"/>
</kw>
<msg timestamp="20230831 18:02:27.266" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 18:02:26.769" endtime="20230831 18:02:27.266"/>
</kw>
<status status="PASS" starttime="20230831 18:02:26.768" endtime="20230831 18:02:27.266"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 18:02:27.270" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 18:02:27.757" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 18:02:27.757" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 18:02:27.268" endtime="20230831 18:02:27.757"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 18:02:27.759" level="INFO"/>
<status status="PASS" starttime="20230831 18:02:27.758" endtime="20230831 18:02:27.759"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 18:02:27.759" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 18:02:27.759" endtime="20230831 18:02:27.760"/>
</kw>
<status status="PASS" starttime="20230831 18:02:27.267" endtime="20230831 18:02:27.760"/>
</kw>
<msg timestamp="20230831 18:02:27.760" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 18:02:27.267" endtime="20230831 18:02:27.760"/>
</kw>
<status status="PASS" starttime="20230831 18:02:27.267" endtime="20230831 18:02:27.760"/>
</kw>
<status status="PASS" starttime="20230831 18:02:25.795" endtime="20230831 18:02:27.761"/>
</kw>
<status status="PASS" starttime="20230831 18:02:25.795" endtime="20230831 18:02:27.761"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230831 18:02:25.794" endtime="20230831 18:02:27.761"/>
</test>
<test id="s1-s3-t3" name="Read key created with Ozone Shell using S3 API" line="40">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 18:02:27.766" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket new1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 18:02:28.363" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 18:02:28.363" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 31 Aug 2023 17:58:42 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230831 18:02:27.764" endtime="20230831 18:02:28.363"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 18:02:28.364" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 31 Aug 2023 17:58:42 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 31 Aug 2023 18:02:28 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230831 18:02:28.364" endtime="20230831 18:02:28.364"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 18:02:28.365" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 18:02:28.365" endtime="20230831 18:02:28.365"/>
</kw>
<msg timestamp="20230831 18:02:28.365" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 31 Aug 2023 17:58:42 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230831 18:02:27.764" endtime="20230831 18:02:28.365"/>
</kw>
<msg timestamp="20230831 18:02:28.366" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 31 Aug 2023 17:58:42 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230831 18:02:27.763" endtime="20230831 18:02:28.366"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 18:02:28.366" endtime="20230831 18:02:28.366"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 18:02:28.369" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 18:02:28.372" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 18:02:28.372" level="INFO">${output} = new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230831 18:02:28.367" endtime="20230831 18:02:28.372"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 18:02:28.373" level="INFO">new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230831 18:02:28.372" endtime="20230831 18:02:28.373"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 18:02:28.373" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 18:02:28.373" endtime="20230831 18:02:28.373"/>
</kw>
<msg timestamp="20230831 18:02:28.374" level="INFO">${output} = new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230831 18:02:28.366" endtime="20230831 18:02:28.374"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 18:02:28.374" endtime="20230831 18:02:28.374"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 18:02:28.377" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 18:02:28.379" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 18:02:28.379" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 18:02:28.375" endtime="20230831 18:02:28.379"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 18:02:28.380" level="INFO"/>
<status status="PASS" starttime="20230831 18:02:28.380" endtime="20230831 18:02:28.380"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 18:02:28.381" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 18:02:28.380" endtime="20230831 18:02:28.381"/>
</kw>
<status status="PASS" starttime="20230831 18:02:28.374" endtime="20230831 18:02:28.381"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230831 18:02:27.762" endtime="20230831 18:02:28.381"/>
</test>
<test id="s1-s3-t4" name="Read key created with S3 API using S3 API" line="47">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 18:02:28.387" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket new1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 18:02:29.061" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 18:02:29.061" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 31 Aug 2023 17:58:46 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230831 18:02:28.385" endtime="20230831 18:02:29.061"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 18:02:29.062" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 31 Aug 2023 17:58:46 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 31 Aug 2023 18:02:28 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230831 18:02:29.061" endtime="20230831 18:02:29.062"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 18:02:29.063" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 18:02:29.062" endtime="20230831 18:02:29.063"/>
</kw>
<msg timestamp="20230831 18:02:29.063" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 31 Aug 2023 17:58:46 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230831 18:02:28.384" endtime="20230831 18:02:29.063"/>
</kw>
<msg timestamp="20230831 18:02:29.063" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 31 Aug 2023 17:58:46 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230831 18:02:28.384" endtime="20230831 18:02:29.064"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 18:02:29.064" endtime="20230831 18:02:29.064"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 18:02:29.067" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 18:02:29.070" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 18:02:29.070" level="INFO">${output} = new1: key created using S3 API</msg>
<status status="PASS" starttime="20230831 18:02:29.065" endtime="20230831 18:02:29.070"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 18:02:29.071" level="INFO">new1: key created using S3 API</msg>
<status status="PASS" starttime="20230831 18:02:29.070" endtime="20230831 18:02:29.071"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 18:02:29.071" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 18:02:29.071" endtime="20230831 18:02:29.071"/>
</kw>
<msg timestamp="20230831 18:02:29.072" level="INFO">${output} = new1: key created using S3 API</msg>
<status status="PASS" starttime="20230831 18:02:29.064" endtime="20230831 18:02:29.072"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 18:02:29.072" endtime="20230831 18:02:29.072"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 18:02:29.075" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 18:02:29.077" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 18:02:29.077" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 18:02:29.073" endtime="20230831 18:02:29.077"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 18:02:29.078" level="INFO"/>
<status status="PASS" starttime="20230831 18:02:29.078" endtime="20230831 18:02:29.078"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 18:02:29.079" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 18:02:29.078" endtime="20230831 18:02:29.079"/>
</kw>
<status status="PASS" starttime="20230831 18:02:29.072" endtime="20230831 18:02:29.079"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230831 18:02:28.383" endtime="20230831 18:02:29.079"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230831 18:02:21.510" endtime="20230831 18:02:29.081"/>
</suite>
<suite id="s1-s4" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s4-t1" name="Create a volume and bucket" line="28">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 18:02:32.090" level="INFO">Running command 'ozone sh volume create old2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 18:02:34.709" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 18:02:34.709" level="INFO">${output} = 2023-08-31 18:02:34,580 [main] INFO rpc.RpcClient: Creating Volume: old2-volume, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20230831 18:02:32.085" endtime="20230831 18:02:34.709"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 18:02:34.710" level="INFO">2023-08-31 18:02:34,580 [main] INFO rpc.RpcClient: Creating Volume: old2-volume, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20230831 18:02:34.709" endtime="20230831 18:02:34.710"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 18:02:34.711" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 18:02:34.711" endtime="20230831 18:02:34.711"/>
</kw>
<status status="PASS" starttime="20230831 18:02:32.085" endtime="20230831 18:02:34.712"/>
</kw>
<msg timestamp="20230831 18:02:34.712" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 18:02:32.085" endtime="20230831 18:02:34.713"/>
</kw>
<msg timestamp="20230831 18:02:34.713" level="INFO">${output} = 2023-08-31 18:02:34,580 [main] INFO rpc.RpcClient: Creating Volume: old2-volume, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20230831 18:02:32.084" endtime="20230831 18:02:34.713"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 18:02:34.713" endtime="20230831 18:02:34.714"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 18:02:34.722" level="INFO">Running command 'ozone sh bucket create /old2-volume/old2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 18:02:37.484" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 18:02:37.485" level="INFO">${output} = 2023-08-31 18:02:37,428 [main] INFO rpc.RpcClient: Creating Bucket: old2-volume/old2-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Enc...</msg>
<status status="PASS" starttime="20230831 18:02:34.718" endtime="20230831 18:02:37.485"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 18:02:37.487" level="INFO">2023-08-31 18:02:37,428 [main] INFO rpc.RpcClient: Creating Bucket: old2-volume/old2-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false </msg>
<status status="PASS" starttime="20230831 18:02:37.486" endtime="20230831 18:02:37.487"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 18:02:37.489" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 18:02:37.489" endtime="20230831 18:02:37.489"/>
</kw>
<status status="PASS" starttime="20230831 18:02:34.715" endtime="20230831 18:02:37.490"/>
</kw>
<msg timestamp="20230831 18:02:37.490" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 18:02:34.714" endtime="20230831 18:02:37.490"/>
</kw>
<msg timestamp="20230831 18:02:37.490" level="INFO">${output} = 2023-08-31 18:02:37,428 [main] INFO rpc.RpcClient: Creating Bucket: old2-volume/old2-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Enc...</msg>
<status status="PASS" starttime="20230831 18:02:34.714" endtime="20230831 18:02:37.490"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 18:02:37.491" endtime="20230831 18:02:37.491"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230831 18:02:32.083" endtime="20230831 18:02:37.491"/>
</test>
<test id="s1-s4-t2" name="Create key" line="35">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 18:02:37.496" level="INFO">Running command 'echo "old2: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230831 18:02:37.498" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 18:02:37.498" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 18:02:37.494" endtime="20230831 18:02:37.498"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 18:02:37.499" level="INFO"/>
<status status="PASS" starttime="20230831 18:02:37.498" endtime="20230831 18:02:37.499"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 18:02:37.500" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 18:02:37.499" endtime="20230831 18:02:37.500"/>
</kw>
<status status="PASS" starttime="20230831 18:02:37.493" endtime="20230831 18:02:37.500"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 18:02:37.504" level="INFO">Running command 'ozone sh key put /old2-volume/old2-bucket/old2-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 18:02:43.039" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 18:02:43.039" level="INFO">${output} = 2023-08-31 18:02:41,125 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-31 18:02:41,213 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230831 18:02:37.502" endtime="20230831 18:02:43.039"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 18:02:43.040" level="INFO">2023-08-31 18:02:41,125 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-31 18:02:41,213 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-08-31 18:02:41,213 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2023-08-31 18:02:41,510 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20230831 18:02:43.040" endtime="20230831 18:02:43.041"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 18:02:43.041" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 18:02:43.041" endtime="20230831 18:02:43.041"/>
</kw>
<status status="PASS" starttime="20230831 18:02:37.501" endtime="20230831 18:02:43.042"/>
</kw>
<msg timestamp="20230831 18:02:43.042" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 18:02:37.501" endtime="20230831 18:02:43.042"/>
</kw>
<msg timestamp="20230831 18:02:43.042" level="INFO">${output} = 2023-08-31 18:02:41,125 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-31 18:02:41,213 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230831 18:02:37.500" endtime="20230831 18:02:43.042"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 18:02:43.043" endtime="20230831 18:02:43.043"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 18:02:43.046" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 18:02:43.049" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 18:02:43.049" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 18:02:43.044" endtime="20230831 18:02:43.049"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 18:02:43.050" level="INFO"/>
<status status="PASS" starttime="20230831 18:02:43.049" endtime="20230831 18:02:43.050"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 18:02:43.051" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 18:02:43.050" endtime="20230831 18:02:43.051"/>
</kw>
<status status="PASS" starttime="20230831 18:02:43.043" endtime="20230831 18:02:43.051"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230831 18:02:37.492" endtime="20230831 18:02:43.051"/>
</test>
<test id="s1-s4-t3" name="Create a bucket in s3v volume" line="41">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /s3v/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 18:02:43.060" level="INFO">Running command 'ozone sh bucket create /s3v/old2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 18:02:45.590" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 18:02:45.590" level="INFO">${output} = 2023-08-31 18:02:45,537 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old2-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption ...</msg>
<status status="PASS" starttime="20230831 18:02:43.057" endtime="20230831 18:02:45.590"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 18:02:45.591" level="INFO">2023-08-31 18:02:45,537 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old2-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false </msg>
<status status="PASS" starttime="20230831 18:02:45.590" endtime="20230831 18:02:45.591"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 18:02:45.592" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 18:02:45.591" endtime="20230831 18:02:45.592"/>
</kw>
<status status="PASS" starttime="20230831 18:02:43.057" endtime="20230831 18:02:45.592"/>
</kw>
<msg timestamp="20230831 18:02:45.592" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 18:02:43.054" endtime="20230831 18:02:45.593"/>
</kw>
<msg timestamp="20230831 18:02:45.593" level="INFO">${output} = 2023-08-31 18:02:45,537 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old2-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption ...</msg>
<status status="PASS" starttime="20230831 18:02:43.053" endtime="20230831 18:02:45.593"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 18:02:45.593" endtime="20230831 18:02:45.594"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230831 18:02:43.053" endtime="20230831 18:02:45.594"/>
</test>
<test id="s1-s4-t4" name="Create key in the bucket in s3v volume" line="46">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: another key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 18:02:45.598" level="INFO">Running command 'echo "old2: another key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230831 18:02:45.600" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 18:02:45.600" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 18:02:45.596" endtime="20230831 18:02:45.600"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 18:02:45.601" level="INFO"/>
<status status="PASS" starttime="20230831 18:02:45.600" endtime="20230831 18:02:45.601"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 18:02:45.602" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 18:02:45.602" endtime="20230831 18:02:45.602"/>
</kw>
<status status="PASS" starttime="20230831 18:02:45.595" endtime="20230831 18:02:45.603"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /s3v/${PREFIX}-bucket/key1-shell /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 18:02:45.606" level="INFO">Running command 'ozone sh key put /s3v/old2-bucket/key1-shell /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 18:02:50.743" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 18:02:50.743" level="INFO">${output} = 2023-08-31 18:02:48,928 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-31 18:02:49,081 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230831 18:02:45.604" endtime="20230831 18:02:50.743"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 18:02:50.745" level="INFO">2023-08-31 18:02:48,928 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-31 18:02:49,081 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-08-31 18:02:49,081 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2023-08-31 18:02:49,419 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20230831 18:02:50.744" endtime="20230831 18:02:50.745"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 18:02:50.745" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 18:02:50.745" endtime="20230831 18:02:50.745"/>
</kw>
<status status="PASS" starttime="20230831 18:02:45.603" endtime="20230831 18:02:50.746"/>
</kw>
<msg timestamp="20230831 18:02:50.746" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 18:02:45.603" endtime="20230831 18:02:50.746"/>
</kw>
<msg timestamp="20230831 18:02:50.746" level="INFO">${output} = 2023-08-31 18:02:48,928 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-31 18:02:49,081 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230831 18:02:45.603" endtime="20230831 18:02:50.746"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 18:02:50.747" endtime="20230831 18:02:50.747"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 18:02:50.750" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 18:02:50.752" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 18:02:50.752" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 18:02:50.748" endtime="20230831 18:02:50.752"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 18:02:50.753" level="INFO"/>
<status status="PASS" starttime="20230831 18:02:50.753" endtime="20230831 18:02:50.754"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 18:02:50.754" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 18:02:50.754" endtime="20230831 18:02:50.754"/>
</kw>
<status status="PASS" starttime="20230831 18:02:50.747" endtime="20230831 18:02:50.755"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230831 18:02:45.595" endtime="20230831 18:02:50.755"/>
</test>
<test id="s1-s4-t5" name="Setup credentials for S3" line="52">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 18:02:50.761" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 18:02:51.252" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 18:02:51.252" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 18:02:50.758" endtime="20230831 18:02:51.252"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 18:02:51.253" level="INFO"/>
<status status="PASS" starttime="20230831 18:02:51.253" endtime="20230831 18:02:51.253"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 18:02:51.254" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 18:02:51.254" endtime="20230831 18:02:51.254"/>
</kw>
<status status="PASS" starttime="20230831 18:02:50.758" endtime="20230831 18:02:51.254"/>
</kw>
<msg timestamp="20230831 18:02:51.255" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 18:02:50.758" endtime="20230831 18:02:51.255"/>
</kw>
<status status="PASS" starttime="20230831 18:02:50.757" endtime="20230831 18:02:51.255"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 18:02:51.259" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 18:02:51.740" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 18:02:51.740" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 18:02:51.257" endtime="20230831 18:02:51.740"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 18:02:51.741" level="INFO"/>
<status status="PASS" starttime="20230831 18:02:51.741" endtime="20230831 18:02:51.741"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 18:02:51.742" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 18:02:51.741" endtime="20230831 18:02:51.742"/>
</kw>
<status status="PASS" starttime="20230831 18:02:51.256" endtime="20230831 18:02:51.742"/>
</kw>
<msg timestamp="20230831 18:02:51.742" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 18:02:51.256" endtime="20230831 18:02:51.743"/>
</kw>
<status status="PASS" starttime="20230831 18:02:51.255" endtime="20230831 18:02:51.743"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 18:02:51.747" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 18:02:52.234" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 18:02:52.234" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 18:02:51.745" endtime="20230831 18:02:52.234"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 18:02:52.235" level="INFO"/>
<status status="PASS" starttime="20230831 18:02:52.235" endtime="20230831 18:02:52.235"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 18:02:52.236" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 18:02:52.236" endtime="20230831 18:02:52.236"/>
</kw>
<status status="PASS" starttime="20230831 18:02:51.744" endtime="20230831 18:02:52.236"/>
</kw>
<msg timestamp="20230831 18:02:52.236" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 18:02:51.744" endtime="20230831 18:02:52.237"/>
</kw>
<status status="PASS" starttime="20230831 18:02:51.743" endtime="20230831 18:02:52.237"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 18:02:52.246" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 18:02:52.753" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 18:02:52.753" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 18:02:52.240" endtime="20230831 18:02:52.753"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 18:02:52.754" level="INFO"/>
<status status="PASS" starttime="20230831 18:02:52.754" endtime="20230831 18:02:52.755"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 18:02:52.755" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 18:02:52.755" endtime="20230831 18:02:52.755"/>
</kw>
<status status="PASS" starttime="20230831 18:02:52.239" endtime="20230831 18:02:52.755"/>
</kw>
<msg timestamp="20230831 18:02:52.756" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 18:02:52.239" endtime="20230831 18:02:52.756"/>
</kw>
<status status="PASS" starttime="20230831 18:02:52.239" endtime="20230831 18:02:52.756"/>
</kw>
<status status="PASS" starttime="20230831 18:02:50.757" endtime="20230831 18:02:52.756"/>
</kw>
<status status="PASS" starttime="20230831 18:02:50.757" endtime="20230831 18:02:52.756"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230831 18:02:50.756" endtime="20230831 18:02:52.757"/>
</test>
<test id="s1-s4-t6" name="Try to create a bucket using S3 API" line="56">
<kw name="Create bucket with name" library="commonawslib">
<var>${output}</var>
<arg>${PREFIX}-bucket</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 18:02:52.763" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket old2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 18:02:53.431" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 18:02:53.431" level="INFO">${output} = {
    "Location": "http://s3g:9878/old2-bucket"
}</msg>
<status status="PASS" starttime="20230831 18:02:52.760" endtime="20230831 18:02:53.431"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 18:02:53.432" level="INFO">{
    "Location": "http://s3g:9878/old2-bucket"
}</msg>
<status status="PASS" starttime="20230831 18:02:53.431" endtime="20230831 18:02:53.432"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 18:02:53.433" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 18:02:53.433" endtime="20230831 18:02:53.433"/>
</kw>
<status status="PASS" starttime="20230831 18:02:52.760" endtime="20230831 18:02:53.433"/>
</kw>
<msg timestamp="20230831 18:02:53.434" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 18:02:52.760" endtime="20230831 18:02:53.434"/>
</kw>
<msg timestamp="20230831 18:02:53.434" level="INFO">${output} = {
    "Location": "http://s3g:9878/old2-bucket"
}</msg>
<status status="PASS" starttime="20230831 18:02:52.759" endtime="20230831 18:02:53.434"/>
</kw>
<msg timestamp="20230831 18:02:53.435" level="INFO">${result} = {
    "Location": "http://s3g:9878/old2-bucket"
}</msg>
<status status="PASS" starttime="20230831 18:02:52.759" endtime="20230831 18:02:53.435"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 18:02:53.435" endtime="20230831 18:02:53.435"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 18:02:53.435" endtime="20230831 18:02:53.436"/>
</kw>
<msg timestamp="20230831 18:02:53.436" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20230831 18:02:52.758" endtime="20230831 18:02:53.436"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230831 18:02:53.436" endtime="20230831 18:02:53.437"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230831 18:02:52.758" endtime="20230831 18:02:53.437"/>
</test>
<test id="s1-s4-t7" name="Create key using S3 API" line="61">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using S3 API" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 18:02:53.442" level="INFO">Running command 'echo "old2: key created using S3 API" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230831 18:02:53.443" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 18:02:53.444" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 18:02:53.440" endtime="20230831 18:02:53.444"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 18:02:53.445" level="INFO"/>
<status status="PASS" starttime="20230831 18:02:53.444" endtime="20230831 18:02:53.445"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 18:02:53.445" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 18:02:53.445" endtime="20230831 18:02:53.445"/>
</kw>
<status status="PASS" starttime="20230831 18:02:53.439" endtime="20230831 18:02:53.446"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>put-object --bucket ${PREFIX}-bucket --key key2-s3api --body /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 18:02:53.450" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket old2-bucket --key key2-s3api --body /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 18:02:54.522" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 18:02:54.522" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 18:02:53.447" endtime="20230831 18:02:54.522"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 18:02:54.523" level="INFO"/>
<status status="PASS" starttime="20230831 18:02:54.522" endtime="20230831 18:02:54.523"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 18:02:54.524" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 18:02:54.523" endtime="20230831 18:02:54.524"/>
</kw>
<msg timestamp="20230831 18:02:54.524" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 18:02:53.446" endtime="20230831 18:02:54.524"/>
</kw>
<msg timestamp="20230831 18:02:54.525" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 18:02:53.446" endtime="20230831 18:02:54.525"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 18:02:54.525" endtime="20230831 18:02:54.525"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 18:02:54.528" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 18:02:54.531" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 18:02:54.531" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 18:02:54.526" endtime="20230831 18:02:54.531"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 18:02:54.532" level="INFO"/>
<status status="PASS" starttime="20230831 18:02:54.531" endtime="20230831 18:02:54.532"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 18:02:54.533" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 18:02:54.532" endtime="20230831 18:02:54.533"/>
</kw>
<status status="PASS" starttime="20230831 18:02:54.525" endtime="20230831 18:02:54.533"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230831 18:02:53.438" endtime="20230831 18:02:54.533"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230831 18:02:32.007" endtime="20230831 18:02:54.535"/>
</suite>
<suite id="s1-s5" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s5-t1" name="Read data from previously created key" line="28">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230831 18:02:57.448" level="INFO">${random} = 02899</msg>
<status status="PASS" starttime="20230831 18:02:57.447" endtime="20230831 18:02:57.448"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 18:02:57.456" level="INFO">Running command 'ozone sh key get /old2-volume/old2-bucket/old2-key /tmp/key-02899 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 18:03:01.796" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 18:03:01.796" level="INFO">${output} = 2023-08-31 18:03:00,616 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-31 18:03:00,691 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230831 18:02:57.451" endtime="20230831 18:03:01.796"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 18:03:01.797" level="INFO">2023-08-31 18:03:00,616 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-31 18:03:00,691 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-08-31 18:03:00,691 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started</msg>
<status status="PASS" starttime="20230831 18:03:01.796" endtime="20230831 18:03:01.797"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 18:03:01.798" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 18:03:01.797" endtime="20230831 18:03:01.798"/>
</kw>
<status status="PASS" starttime="20230831 18:02:57.450" endtime="20230831 18:03:01.799"/>
</kw>
<msg timestamp="20230831 18:03:01.799" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 18:02:57.449" endtime="20230831 18:03:01.800"/>
</kw>
<msg timestamp="20230831 18:03:01.800" level="INFO">${output} = 2023-08-31 18:03:00,616 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-31 18:03:00,691 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230831 18:02:57.448" endtime="20230831 18:03:01.800"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 18:03:01.800" endtime="20230831 18:03:01.801"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 18:03:01.804" level="INFO">Running command 'cat /tmp/key-02899 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 18:03:01.806" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 18:03:01.806" level="INFO">${output} = old2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230831 18:03:01.802" endtime="20230831 18:03:01.806"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 18:03:01.807" level="INFO">old2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230831 18:03:01.807" endtime="20230831 18:03:01.807"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 18:03:01.808" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 18:03:01.808" endtime="20230831 18:03:01.808"/>
</kw>
<msg timestamp="20230831 18:03:01.808" level="INFO">${output} = old2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230831 18:03:01.801" endtime="20230831 18:03:01.808"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 18:03:01.809" endtime="20230831 18:03:01.809"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 18:03:01.812" level="INFO">Running command 'rm /tmp/key-02899 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 18:03:01.814" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 18:03:01.814" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 18:03:01.810" endtime="20230831 18:03:01.814"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 18:03:01.815" level="INFO"/>
<status status="PASS" starttime="20230831 18:03:01.815" endtime="20230831 18:03:01.815"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 18:03:01.816" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 18:03:01.816" endtime="20230831 18:03:01.816"/>
</kw>
<status status="PASS" starttime="20230831 18:03:01.809" endtime="20230831 18:03:01.816"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230831 18:02:57.445" endtime="20230831 18:03:01.817"/>
</test>
<test id="s1-s5-t2" name="Setup credentials for S3" line="36">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 18:03:01.822" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 18:03:02.308" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 18:03:02.308" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 18:03:01.821" endtime="20230831 18:03:02.308"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 18:03:02.309" level="INFO"/>
<status status="PASS" starttime="20230831 18:03:02.308" endtime="20230831 18:03:02.309"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 18:03:02.310" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 18:03:02.309" endtime="20230831 18:03:02.310"/>
</kw>
<status status="PASS" starttime="20230831 18:03:01.820" endtime="20230831 18:03:02.310"/>
</kw>
<msg timestamp="20230831 18:03:02.310" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 18:03:01.820" endtime="20230831 18:03:02.311"/>
</kw>
<status status="PASS" starttime="20230831 18:03:01.819" endtime="20230831 18:03:02.311"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 18:03:02.314" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 18:03:02.796" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 18:03:02.796" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 18:03:02.312" endtime="20230831 18:03:02.796"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 18:03:02.797" level="INFO"/>
<status status="PASS" starttime="20230831 18:03:02.796" endtime="20230831 18:03:02.797"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 18:03:02.798" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 18:03:02.797" endtime="20230831 18:03:02.798"/>
</kw>
<status status="PASS" starttime="20230831 18:03:02.312" endtime="20230831 18:03:02.798"/>
</kw>
<msg timestamp="20230831 18:03:02.798" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 18:03:02.312" endtime="20230831 18:03:02.799"/>
</kw>
<status status="PASS" starttime="20230831 18:03:02.311" endtime="20230831 18:03:02.799"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 18:03:02.802" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 18:03:03.272" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 18:03:03.272" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 18:03:02.800" endtime="20230831 18:03:03.272"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 18:03:03.273" level="INFO"/>
<status status="PASS" starttime="20230831 18:03:03.272" endtime="20230831 18:03:03.273"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 18:03:03.274" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 18:03:03.273" endtime="20230831 18:03:03.274"/>
</kw>
<status status="PASS" starttime="20230831 18:03:02.800" endtime="20230831 18:03:03.274"/>
</kw>
<msg timestamp="20230831 18:03:03.274" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 18:03:02.800" endtime="20230831 18:03:03.275"/>
</kw>
<status status="PASS" starttime="20230831 18:03:02.799" endtime="20230831 18:03:03.275"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 18:03:03.278" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 18:03:03.762" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 18:03:03.762" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 18:03:03.276" endtime="20230831 18:03:03.763"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 18:03:03.764" level="INFO"/>
<status status="PASS" starttime="20230831 18:03:03.763" endtime="20230831 18:03:03.764"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 18:03:03.764" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 18:03:03.764" endtime="20230831 18:03:03.764"/>
</kw>
<status status="PASS" starttime="20230831 18:03:03.276" endtime="20230831 18:03:03.765"/>
</kw>
<msg timestamp="20230831 18:03:03.765" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 18:03:03.275" endtime="20230831 18:03:03.765"/>
</kw>
<status status="PASS" starttime="20230831 18:03:03.275" endtime="20230831 18:03:03.765"/>
</kw>
<status status="PASS" starttime="20230831 18:03:01.819" endtime="20230831 18:03:03.766"/>
</kw>
<status status="PASS" starttime="20230831 18:03:01.818" endtime="20230831 18:03:03.766"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230831 18:03:01.818" endtime="20230831 18:03:03.766"/>
</test>
<test id="s1-s5-t3" name="Read key created with Ozone Shell using S3 API" line="40">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 18:03:03.771" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old2-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 18:03:04.371" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 18:03:04.371" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 31 Aug 2023 18:02:50 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230831 18:03:03.769" endtime="20230831 18:03:04.371"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 18:03:04.373" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 31 Aug 2023 18:02:50 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 31 Aug 2023 18:03:04 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230831 18:03:04.372" endtime="20230831 18:03:04.373"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 18:03:04.373" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 18:03:04.373" endtime="20230831 18:03:04.374"/>
</kw>
<msg timestamp="20230831 18:03:04.374" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 31 Aug 2023 18:02:50 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230831 18:03:03.768" endtime="20230831 18:03:04.374"/>
</kw>
<msg timestamp="20230831 18:03:04.374" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 31 Aug 2023 18:02:50 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230831 18:03:03.767" endtime="20230831 18:03:04.374"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 18:03:04.374" endtime="20230831 18:03:04.375"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 18:03:04.378" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 18:03:04.381" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 18:03:04.382" level="INFO">${output} = old2: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230831 18:03:04.375" endtime="20230831 18:03:04.382"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 18:03:04.383" level="INFO">old2: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230831 18:03:04.383" endtime="20230831 18:03:04.384"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 18:03:04.384" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 18:03:04.384" endtime="20230831 18:03:04.384"/>
</kw>
<msg timestamp="20230831 18:03:04.384" level="INFO">${output} = old2: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230831 18:03:04.375" endtime="20230831 18:03:04.385"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 18:03:04.385" endtime="20230831 18:03:04.385"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 18:03:04.388" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 18:03:04.390" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 18:03:04.390" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 18:03:04.386" endtime="20230831 18:03:04.390"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 18:03:04.391" level="INFO"/>
<status status="PASS" starttime="20230831 18:03:04.391" endtime="20230831 18:03:04.391"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 18:03:04.392" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 18:03:04.392" endtime="20230831 18:03:04.392"/>
</kw>
<status status="PASS" starttime="20230831 18:03:04.385" endtime="20230831 18:03:04.392"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230831 18:03:03.767" endtime="20230831 18:03:04.393"/>
</test>
<test id="s1-s5-t4" name="Read key created with S3 API using S3 API" line="47">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 18:03:04.398" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old2-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 18:03:05.021" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 18:03:05.021" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 31 Aug 2023 18:02:54 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230831 18:03:04.396" endtime="20230831 18:03:05.021"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 18:03:05.022" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 31 Aug 2023 18:02:54 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 31 Aug 2023 18:03:04 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230831 18:03:05.022" endtime="20230831 18:03:05.022"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 18:03:05.023" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 18:03:05.023" endtime="20230831 18:03:05.023"/>
</kw>
<msg timestamp="20230831 18:03:05.023" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 31 Aug 2023 18:02:54 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230831 18:03:04.395" endtime="20230831 18:03:05.024"/>
</kw>
<msg timestamp="20230831 18:03:05.024" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 31 Aug 2023 18:02:54 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230831 18:03:04.395" endtime="20230831 18:03:05.024"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 18:03:05.024" endtime="20230831 18:03:05.024"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 18:03:05.027" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 18:03:05.030" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 18:03:05.030" level="INFO">${output} = old2: key created using S3 API</msg>
<status status="PASS" starttime="20230831 18:03:05.025" endtime="20230831 18:03:05.030"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 18:03:05.031" level="INFO">old2: key created using S3 API</msg>
<status status="PASS" starttime="20230831 18:03:05.030" endtime="20230831 18:03:05.031"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 18:03:05.032" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 18:03:05.031" endtime="20230831 18:03:05.032"/>
</kw>
<msg timestamp="20230831 18:03:05.032" level="INFO">${output} = old2: key created using S3 API</msg>
<status status="PASS" starttime="20230831 18:03:05.025" endtime="20230831 18:03:05.032"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 18:03:05.032" endtime="20230831 18:03:05.032"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 18:03:05.035" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 18:03:05.037" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 18:03:05.037" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 18:03:05.033" endtime="20230831 18:03:05.037"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 18:03:05.038" level="INFO"/>
<status status="PASS" starttime="20230831 18:03:05.038" endtime="20230831 18:03:05.038"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 18:03:05.039" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 18:03:05.038" endtime="20230831 18:03:05.039"/>
</kw>
<status status="PASS" starttime="20230831 18:03:05.033" endtime="20230831 18:03:05.039"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230831 18:03:04.394" endtime="20230831 18:03:05.040"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230831 18:02:57.369" endtime="20230831 18:03:05.041"/>
</suite>
<suite id="s1-s6" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s6-t1" name="Create key" line="35">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 18:03:07.978" level="INFO">Running command 'echo "old1: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230831 18:03:07.979" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 18:03:07.979" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 18:03:07.973" endtime="20230831 18:03:07.979"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 18:03:07.980" level="INFO"/>
<status status="PASS" starttime="20230831 18:03:07.980" endtime="20230831 18:03:07.980"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 18:03:07.981" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 18:03:07.981" endtime="20230831 18:03:07.981"/>
</kw>
<status status="PASS" starttime="20230831 18:03:07.972" endtime="20230831 18:03:07.981"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 18:03:07.985" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 18:03:12.854" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 18:03:12.854" level="INFO">${output} = 2023-08-31 18:03:11,449 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-31 18:03:11,527 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230831 18:03:07.983" endtime="20230831 18:03:12.854"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 18:03:12.855" level="INFO">2023-08-31 18:03:11,449 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-31 18:03:11,527 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-08-31 18:03:11,527 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2023-08-31 18:03:11,782 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20230831 18:03:12.854" endtime="20230831 18:03:12.855"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 18:03:12.856" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 18:03:12.856" endtime="20230831 18:03:12.856"/>
</kw>
<status status="PASS" starttime="20230831 18:03:07.983" endtime="20230831 18:03:12.857"/>
</kw>
<msg timestamp="20230831 18:03:12.857" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 18:03:07.982" endtime="20230831 18:03:12.858"/>
</kw>
<msg timestamp="20230831 18:03:12.858" level="INFO">${output} = 2023-08-31 18:03:11,449 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-31 18:03:11,527 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230831 18:03:07.982" endtime="20230831 18:03:12.858"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 18:03:12.858" endtime="20230831 18:03:12.859"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 18:03:12.862" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 18:03:12.865" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 18:03:12.865" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 18:03:12.860" endtime="20230831 18:03:12.865"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 18:03:12.866" level="INFO"/>
<status status="PASS" starttime="20230831 18:03:12.866" endtime="20230831 18:03:12.866"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 18:03:12.867" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 18:03:12.867" endtime="20230831 18:03:12.867"/>
</kw>
<status status="PASS" starttime="20230831 18:03:12.859" endtime="20230831 18:03:12.867"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230831 18:03:07.971" endtime="20230831 18:03:12.868"/>
</test>
<test id="s1-s6-t2" name="Create key in the bucket in s3v volume" line="46">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: another key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 18:03:12.874" level="INFO">Running command 'echo "old1: another key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230831 18:03:12.875" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 18:03:12.875" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 18:03:12.871" endtime="20230831 18:03:12.876"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 18:03:12.877" level="INFO"/>
<status status="PASS" starttime="20230831 18:03:12.876" endtime="20230831 18:03:12.877"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 18:03:12.877" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 18:03:12.877" endtime="20230831 18:03:12.877"/>
</kw>
<status status="PASS" starttime="20230831 18:03:12.870" endtime="20230831 18:03:12.878"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /s3v/${PREFIX}-bucket/key1-shell /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 18:03:12.881" level="INFO">Running command 'ozone sh key put /s3v/old1-bucket/key1-shell /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 18:03:17.878" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 18:03:17.878" level="INFO">${output} = 2023-08-31 18:03:16,236 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-31 18:03:16,361 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230831 18:03:12.879" endtime="20230831 18:03:17.878"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 18:03:17.879" level="INFO">2023-08-31 18:03:16,236 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-31 18:03:16,361 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-08-31 18:03:16,361 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2023-08-31 18:03:16,808 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20230831 18:03:17.879" endtime="20230831 18:03:17.879"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 18:03:17.880" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 18:03:17.880" endtime="20230831 18:03:17.880"/>
</kw>
<status status="PASS" starttime="20230831 18:03:12.879" endtime="20230831 18:03:17.880"/>
</kw>
<msg timestamp="20230831 18:03:17.880" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 18:03:12.879" endtime="20230831 18:03:17.881"/>
</kw>
<msg timestamp="20230831 18:03:17.881" level="INFO">${output} = 2023-08-31 18:03:16,236 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-31 18:03:16,361 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230831 18:03:12.878" endtime="20230831 18:03:17.881"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 18:03:17.881" endtime="20230831 18:03:17.882"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 18:03:17.885" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 18:03:17.887" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 18:03:17.887" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 18:03:17.882" endtime="20230831 18:03:17.887"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 18:03:17.888" level="INFO"/>
<status status="PASS" starttime="20230831 18:03:17.887" endtime="20230831 18:03:17.888"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 18:03:17.889" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 18:03:17.888" endtime="20230831 18:03:17.889"/>
</kw>
<status status="PASS" starttime="20230831 18:03:17.882" endtime="20230831 18:03:17.889"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230831 18:03:12.869" endtime="20230831 18:03:17.890"/>
</test>
<test id="s1-s6-t3" name="Setup credentials for S3" line="52">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 18:03:17.895" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 18:03:18.387" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 18:03:18.387" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 18:03:17.893" endtime="20230831 18:03:18.387"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 18:03:18.388" level="INFO"/>
<status status="PASS" starttime="20230831 18:03:18.387" endtime="20230831 18:03:18.388"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 18:03:18.389" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 18:03:18.388" endtime="20230831 18:03:18.389"/>
</kw>
<status status="PASS" starttime="20230831 18:03:17.892" endtime="20230831 18:03:18.389"/>
</kw>
<msg timestamp="20230831 18:03:18.389" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 18:03:17.892" endtime="20230831 18:03:18.390"/>
</kw>
<status status="PASS" starttime="20230831 18:03:17.892" endtime="20230831 18:03:18.390"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 18:03:18.394" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 18:03:18.887" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 18:03:18.888" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 18:03:18.391" endtime="20230831 18:03:18.888"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 18:03:18.889" level="INFO"/>
<status status="PASS" starttime="20230831 18:03:18.888" endtime="20230831 18:03:18.889"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 18:03:18.890" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 18:03:18.889" endtime="20230831 18:03:18.890"/>
</kw>
<status status="PASS" starttime="20230831 18:03:18.391" endtime="20230831 18:03:18.890"/>
</kw>
<msg timestamp="20230831 18:03:18.890" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 18:03:18.390" endtime="20230831 18:03:18.891"/>
</kw>
<status status="PASS" starttime="20230831 18:03:18.390" endtime="20230831 18:03:18.891"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 18:03:18.895" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 18:03:19.374" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 18:03:19.374" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 18:03:18.892" endtime="20230831 18:03:19.374"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 18:03:19.375" level="INFO"/>
<status status="PASS" starttime="20230831 18:03:19.374" endtime="20230831 18:03:19.375"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 18:03:19.376" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 18:03:19.375" endtime="20230831 18:03:19.376"/>
</kw>
<status status="PASS" starttime="20230831 18:03:18.892" endtime="20230831 18:03:19.376"/>
</kw>
<msg timestamp="20230831 18:03:19.376" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 18:03:18.891" endtime="20230831 18:03:19.377"/>
</kw>
<status status="PASS" starttime="20230831 18:03:18.891" endtime="20230831 18:03:19.377"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 18:03:19.381" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 18:03:19.892" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 18:03:19.893" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 18:03:19.379" endtime="20230831 18:03:19.893"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 18:03:19.894" level="INFO"/>
<status status="PASS" starttime="20230831 18:03:19.893" endtime="20230831 18:03:19.894"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 18:03:19.894" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 18:03:19.894" endtime="20230831 18:03:19.895"/>
</kw>
<status status="PASS" starttime="20230831 18:03:19.378" endtime="20230831 18:03:19.895"/>
</kw>
<msg timestamp="20230831 18:03:19.895" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 18:03:19.378" endtime="20230831 18:03:19.895"/>
</kw>
<status status="PASS" starttime="20230831 18:03:19.377" endtime="20230831 18:03:19.896"/>
</kw>
<status status="PASS" starttime="20230831 18:03:17.891" endtime="20230831 18:03:19.896"/>
</kw>
<status status="PASS" starttime="20230831 18:03:17.891" endtime="20230831 18:03:19.896"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230831 18:03:17.890" endtime="20230831 18:03:19.896"/>
</test>
<test id="s1-s6-t4" name="Try to create a bucket using S3 API" line="56">
<kw name="Create bucket with name" library="commonawslib">
<var>${output}</var>
<arg>${PREFIX}-bucket</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 18:03:19.903" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 18:03:20.531" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 18:03:20.531" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230831 18:03:19.901" endtime="20230831 18:03:20.531"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 18:03:20.533" level="INFO">{
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230831 18:03:20.532" endtime="20230831 18:03:20.533"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 18:03:20.533" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 18:03:20.533" endtime="20230831 18:03:20.533"/>
</kw>
<status status="PASS" starttime="20230831 18:03:19.900" endtime="20230831 18:03:20.534"/>
</kw>
<msg timestamp="20230831 18:03:20.534" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 18:03:19.900" endtime="20230831 18:03:20.535"/>
</kw>
<msg timestamp="20230831 18:03:20.535" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230831 18:03:19.899" endtime="20230831 18:03:20.535"/>
</kw>
<msg timestamp="20230831 18:03:20.535" level="INFO">${result} = {
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230831 18:03:19.899" endtime="20230831 18:03:20.535"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 18:03:20.536" endtime="20230831 18:03:20.536"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 18:03:20.536" endtime="20230831 18:03:20.537"/>
</kw>
<msg timestamp="20230831 18:03:20.537" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20230831 18:03:19.898" endtime="20230831 18:03:20.537"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230831 18:03:20.537" endtime="20230831 18:03:20.538"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230831 18:03:19.897" endtime="20230831 18:03:20.538"/>
</test>
<test id="s1-s6-t5" name="Create key using S3 API" line="61">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using S3 API" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 18:03:20.545" level="INFO">Running command 'echo "old1: key created using S3 API" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230831 18:03:20.547" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 18:03:20.547" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 18:03:20.542" endtime="20230831 18:03:20.547"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 18:03:20.548" level="INFO"/>
<status status="PASS" starttime="20230831 18:03:20.547" endtime="20230831 18:03:20.548"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 18:03:20.548" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 18:03:20.548" endtime="20230831 18:03:20.549"/>
</kw>
<status status="PASS" starttime="20230831 18:03:20.539" endtime="20230831 18:03:20.549"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>put-object --bucket ${PREFIX}-bucket --key key2-s3api --body /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 18:03:20.552" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket old1-bucket --key key2-s3api --body /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 18:03:21.304" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 18:03:21.304" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 18:03:20.550" endtime="20230831 18:03:21.304"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 18:03:21.306" level="INFO"/>
<status status="PASS" starttime="20230831 18:03:21.305" endtime="20230831 18:03:21.306"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 18:03:21.307" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 18:03:21.306" endtime="20230831 18:03:21.307"/>
</kw>
<msg timestamp="20230831 18:03:21.307" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 18:03:20.550" endtime="20230831 18:03:21.307"/>
</kw>
<msg timestamp="20230831 18:03:21.307" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 18:03:20.549" endtime="20230831 18:03:21.307"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 18:03:21.308" endtime="20230831 18:03:21.308"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 18:03:21.311" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 18:03:21.314" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 18:03:21.314" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 18:03:21.309" endtime="20230831 18:03:21.314"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 18:03:21.315" level="INFO"/>
<status status="PASS" starttime="20230831 18:03:21.314" endtime="20230831 18:03:21.315"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 18:03:21.315" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 18:03:21.315" endtime="20230831 18:03:21.316"/>
</kw>
<status status="PASS" starttime="20230831 18:03:21.308" endtime="20230831 18:03:21.316"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230831 18:03:20.539" endtime="20230831 18:03:21.316"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230831 18:03:07.891" endtime="20230831 18:03:21.318"/>
</suite>
<suite id="s1-s7" name="Prepare" source="/opt/ozone/smoketest/upgrade/prepare.robot">
<test id="s1-s7-t1" name="Prepare Ozone Manager" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230831 18:03:24.282" endtime="20230831 18:03:24.283"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM prepare is skipped for version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230831 18:03:24.283" endtime="20230831 18:03:24.283"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 18:03:24.288" level="INFO">Running command 'ozone admin om prepare -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 18:08:24.283" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20230831 18:03:24.284" endtime="20230831 18:08:24.283"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230831 18:08:24.283" endtime="20230831 18:08:24.283"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20230831 18:08:24.283" endtime="20230831 18:08:24.284"/>
</kw>
<status status="FAIL" starttime="20230831 18:03:24.284" endtime="20230831 18:08:24.284"/>
</kw>
<msg timestamp="20230831 18:08:24.284" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20230831 18:03:24.284" endtime="20230831 18:08:24.285"/>
</kw>
<status status="FAIL" starttime="20230831 18:03:24.283" endtime="20230831 18:08:24.286"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20230831 18:08:24.287" endtime="20230831 18:08:24.287"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20230831 18:03:24.281" endtime="20230831 18:08:24.287">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Prepares OMs</doc>
<status status="FAIL" starttime="20230831 18:03:24.233" endtime="20230831 18:08:24.289"/>
</suite>
<suite id="s1-s8" name="Check-Finalization" source="/opt/ozone/smoketest/upgrade/check-finalization.robot">
<test id="s1-s8-t1" name="Check OM Finalized" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230831 17:54:15.122" endtime="20230831 17:54:15.122"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>env</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 17:54:15.128" level="INFO">Running command 'env 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 17:54:15.135" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 17:54:15.135" level="INFO">${output} = OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=b016d313a88b
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/ha...</msg>
<status status="PASS" starttime="20230831 17:54:15.124" endtime="20230831 17:54:15.135"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:54:15.136" level="INFO">OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=b016d313a88b
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/hadoop
LD_LIBRARY_PATH=/usr/local/lib
OZONE-SITE.XML_ozone.replication=3
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
ENSURE_SCM_INITIALIZED=/data/metadata/scm/current/VERSION
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OM_SERVICE_ID=omservice
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin
PWD=/opt/hadoop
OZONE-SITE.XML_ozone.scm.container.size=1GB
JAVA_HOME=/usr/lib/jvm/jre/
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE_UPGRADE_FROM=1.3.0
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
SHLVL=1
HOME=/opt/hadoop
OZONE_CONF_DIR=/etc/hadoop
OZONE-SITE.XML_ozone.om.ratis.enable=true
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
OZONE_UPGRADE_TO=1.4.0
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_ozone.scm.ratis.enable=true
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3
_=/usr/bin/env</msg>
<status status="PASS" starttime="20230831 17:54:15.135" endtime="20230831 17:54:15.136"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 17:54:15.137" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 17:54:15.136" endtime="20230831 17:54:15.137"/>
</kw>
<status status="PASS" starttime="20230831 17:54:15.123" endtime="20230831 17:54:15.137"/>
</kw>
<msg timestamp="20230831 17:54:15.137" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 17:54:15.123" endtime="20230831 17:54:15.138"/>
</kw>
<msg timestamp="20230831 17:54:15.139" level="INFO">${result} = OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=b016d313a88b
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/ha...</msg>
<status status="PASS" starttime="20230831 17:54:15.123" endtime="20230831 17:54:15.139"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:54:15.139" level="INFO">OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=b016d313a88b
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/hadoop
LD_LIBRARY_PATH=/usr/local/lib
OZONE-SITE.XML_ozone.replication=3
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
ENSURE_SCM_INITIALIZED=/data/metadata/scm/current/VERSION
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OM_SERVICE_ID=omservice
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin
PWD=/opt/hadoop
OZONE-SITE.XML_ozone.scm.container.size=1GB
JAVA_HOME=/usr/lib/jvm/jre/
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE_UPGRADE_FROM=1.3.0
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
SHLVL=1
HOME=/opt/hadoop
OZONE_CONF_DIR=/etc/hadoop
OZONE-SITE.XML_ozone.om.ratis.enable=true
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
OZONE_UPGRADE_TO=1.4.0
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_ozone.scm.ratis.enable=true
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3
_=/usr/bin/env</msg>
<status status="PASS" starttime="20230831 17:54:15.139" endtime="20230831 17:54:15.139"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230831 17:54:15.140" endtime="20230831 17:54:15.140"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 17:54:15.144" level="INFO">Running command 'ozone admin om finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 17:54:17.736" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 17:54:17.736" level="INFO">${output} = ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20230831 17:54:15.141" endtime="20230831 17:54:17.736"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:54:17.738" level="INFO">ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20230831 17:54:17.737" endtime="20230831 17:54:17.738"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 17:54:17.739" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 17:54:17.738" endtime="20230831 17:54:17.739"/>
</kw>
<status status="PASS" starttime="20230831 17:54:15.141" endtime="20230831 17:54:17.739"/>
</kw>
<msg timestamp="20230831 17:54:17.739" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 17:54:15.141" endtime="20230831 17:54:17.740"/>
</kw>
<msg timestamp="20230831 17:54:17.740" level="INFO">${result} = ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20230831 17:54:15.140" endtime="20230831 17:54:17.740"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:54:17.741" level="INFO">ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20230831 17:54:17.740" endtime="20230831 17:54:17.741"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20230831 17:54:17.741" endtime="20230831 17:54:17.741"/>
</kw>
<tag>finalized</tag>
<tag>om</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230831 17:54:15.120" endtime="20230831 17:54:17.741"/>
</test>
<test id="s1-s8-t2" name="Check SCM Finalized" line="32">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230831 17:54:17.743" endtime="20230831 17:54:17.743"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>HDDS finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230831 17:54:17.744" endtime="20230831 17:54:17.744"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 17:54:17.747" level="INFO">Running command 'ozone admin scm finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 17:54:20.574" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 17:54:20.574" level="INFO">${output} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230831 17:54:17.745" endtime="20230831 17:54:20.574"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:54:20.576" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230831 17:54:20.575" endtime="20230831 17:54:20.576"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 17:54:20.576" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 17:54:20.576" endtime="20230831 17:54:20.576"/>
</kw>
<status status="PASS" starttime="20230831 17:54:17.745" endtime="20230831 17:54:20.577"/>
</kw>
<msg timestamp="20230831 17:54:20.577" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 17:54:17.744" endtime="20230831 17:54:20.577"/>
</kw>
<msg timestamp="20230831 17:54:20.577" level="INFO">${result} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230831 17:54:17.744" endtime="20230831 17:54:20.577"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:54:20.578" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230831 17:54:20.578" endtime="20230831 17:54:20.578"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20230831 17:54:20.578" endtime="20230831 17:54:20.578"/>
</kw>
<tag>finalized</tag>
<tag>scm</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230831 17:54:17.742" endtime="20230831 17:54:20.579"/>
</test>
<doc>Finalize Upgrade of the Ozone cluster</doc>
<status status="PASS" starttime="20230831 17:54:15.052" endtime="20230831 17:54:20.580"/>
</suite>
<suite id="s1-s9" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s9-t1" name="Create a volume and bucket" line="28">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 17:54:23.579" level="INFO">Running command 'ozone sh volume create old1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 17:54:26.416" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 17:54:26.416" level="INFO">${output} = 2023-08-31 17:54:26,254 [main] INFO rpc.RpcClient: Creating Volume: old1-volume, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20230831 17:54:23.575" endtime="20230831 17:54:26.416"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:54:26.418" level="INFO">2023-08-31 17:54:26,254 [main] INFO rpc.RpcClient: Creating Volume: old1-volume, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20230831 17:54:26.417" endtime="20230831 17:54:26.418"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 17:54:26.419" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 17:54:26.418" endtime="20230831 17:54:26.419"/>
</kw>
<status status="PASS" starttime="20230831 17:54:23.574" endtime="20230831 17:54:26.419"/>
</kw>
<msg timestamp="20230831 17:54:26.419" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 17:54:23.574" endtime="20230831 17:54:26.421"/>
</kw>
<msg timestamp="20230831 17:54:26.428" level="INFO">${output} = 2023-08-31 17:54:26,254 [main] INFO rpc.RpcClient: Creating Volume: old1-volume, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20230831 17:54:23.573" endtime="20230831 17:54:26.428"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 17:54:26.428" endtime="20230831 17:54:26.431"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 17:54:26.442" level="INFO">Running command 'ozone sh bucket create /old1-volume/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 17:54:29.229" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 17:54:29.229" level="INFO">${output} = 2023-08-31 17:54:29,152 [main] INFO rpc.RpcClient: Creating Bucket: old1-volume/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Enc...</msg>
<status status="PASS" starttime="20230831 17:54:26.435" endtime="20230831 17:54:29.229"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:54:29.230" level="INFO">2023-08-31 17:54:29,152 [main] INFO rpc.RpcClient: Creating Bucket: old1-volume/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false </msg>
<status status="PASS" starttime="20230831 17:54:29.229" endtime="20230831 17:54:29.230"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 17:54:29.231" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 17:54:29.230" endtime="20230831 17:54:29.231"/>
</kw>
<status status="PASS" starttime="20230831 17:54:26.433" endtime="20230831 17:54:29.231"/>
</kw>
<msg timestamp="20230831 17:54:29.231" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 17:54:26.433" endtime="20230831 17:54:29.232"/>
</kw>
<msg timestamp="20230831 17:54:29.232" level="INFO">${output} = 2023-08-31 17:54:29,152 [main] INFO rpc.RpcClient: Creating Bucket: old1-volume/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Enc...</msg>
<status status="PASS" starttime="20230831 17:54:26.431" endtime="20230831 17:54:29.232"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 17:54:29.232" endtime="20230831 17:54:29.233"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230831 17:54:23.572" endtime="20230831 17:54:29.233"/>
</test>
<test id="s1-s9-t2" name="Create key" line="35">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 17:54:29.238" level="INFO">Running command 'echo "old1: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230831 17:54:29.240" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 17:54:29.240" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 17:54:29.236" endtime="20230831 17:54:29.240"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:54:29.241" level="INFO"/>
<status status="PASS" starttime="20230831 17:54:29.241" endtime="20230831 17:54:29.242"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 17:54:29.242" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 17:54:29.242" endtime="20230831 17:54:29.242"/>
</kw>
<status status="PASS" starttime="20230831 17:54:29.235" endtime="20230831 17:54:29.243"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 17:54:29.246" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 17:54:35.694" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 17:54:35.694" level="INFO">${output} = 2023-08-31 17:54:33,063 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-31 17:54:33,201 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230831 17:54:29.244" endtime="20230831 17:54:35.694"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:54:35.696" level="INFO">2023-08-31 17:54:33,063 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-31 17:54:33,201 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-08-31 17:54:33,202 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2023-08-31 17:54:33,476 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20230831 17:54:35.695" endtime="20230831 17:54:35.696"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 17:54:35.696" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 17:54:35.696" endtime="20230831 17:54:35.696"/>
</kw>
<status status="PASS" starttime="20230831 17:54:29.244" endtime="20230831 17:54:35.697"/>
</kw>
<msg timestamp="20230831 17:54:35.697" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 17:54:29.244" endtime="20230831 17:54:35.697"/>
</kw>
<msg timestamp="20230831 17:54:35.698" level="INFO">${output} = 2023-08-31 17:54:33,063 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-31 17:54:33,201 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230831 17:54:29.243" endtime="20230831 17:54:35.698"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 17:54:35.698" endtime="20230831 17:54:35.698"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 17:54:35.701" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 17:54:35.710" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 17:54:35.710" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 17:54:35.699" endtime="20230831 17:54:35.710"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:54:35.711" level="INFO"/>
<status status="PASS" starttime="20230831 17:54:35.711" endtime="20230831 17:54:35.711"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 17:54:35.712" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 17:54:35.712" endtime="20230831 17:54:35.712"/>
</kw>
<status status="PASS" starttime="20230831 17:54:35.698" endtime="20230831 17:54:35.713"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230831 17:54:29.234" endtime="20230831 17:54:35.713"/>
</test>
<test id="s1-s9-t3" name="Create a bucket in s3v volume" line="41">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /s3v/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 17:54:35.719" level="INFO">Running command 'ozone sh bucket create /s3v/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 17:54:38.445" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 17:54:38.445" level="INFO">${output} = 2023-08-31 17:54:38,376 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption ...</msg>
<status status="PASS" starttime="20230831 17:54:35.716" endtime="20230831 17:54:38.445"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:54:38.446" level="INFO">2023-08-31 17:54:38,376 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false </msg>
<status status="PASS" starttime="20230831 17:54:38.445" endtime="20230831 17:54:38.446"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 17:54:38.447" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 17:54:38.446" endtime="20230831 17:54:38.447"/>
</kw>
<status status="PASS" starttime="20230831 17:54:35.716" endtime="20230831 17:54:38.447"/>
</kw>
<msg timestamp="20230831 17:54:38.447" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 17:54:35.716" endtime="20230831 17:54:38.448"/>
</kw>
<msg timestamp="20230831 17:54:38.448" level="INFO">${output} = 2023-08-31 17:54:38,376 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption ...</msg>
<status status="PASS" starttime="20230831 17:54:35.715" endtime="20230831 17:54:38.448"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 17:54:38.448" endtime="20230831 17:54:38.448"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230831 17:54:35.714" endtime="20230831 17:54:38.449"/>
</test>
<test id="s1-s9-t4" name="Create key in the bucket in s3v volume" line="46">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: another key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 17:54:38.458" level="INFO">Running command 'echo "old1: another key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230831 17:54:38.459" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 17:54:38.459" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 17:54:38.451" endtime="20230831 17:54:38.459"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:54:38.460" level="INFO"/>
<status status="PASS" starttime="20230831 17:54:38.459" endtime="20230831 17:54:38.460"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 17:54:38.461" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 17:54:38.460" endtime="20230831 17:54:38.461"/>
</kw>
<status status="PASS" starttime="20230831 17:54:38.450" endtime="20230831 17:54:38.461"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /s3v/${PREFIX}-bucket/key1-shell /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 17:54:38.466" level="INFO">Running command 'ozone sh key put /s3v/old1-bucket/key1-shell /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 17:54:43.398" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 17:54:43.398" level="INFO">${output} = 2023-08-31 17:54:41,799 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-31 17:54:41,913 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230831 17:54:38.464" endtime="20230831 17:54:43.398"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:54:43.399" level="INFO">2023-08-31 17:54:41,799 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-31 17:54:41,913 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-08-31 17:54:41,913 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2023-08-31 17:54:42,265 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20230831 17:54:43.398" endtime="20230831 17:54:43.399"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 17:54:43.400" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 17:54:43.400" endtime="20230831 17:54:43.400"/>
</kw>
<status status="PASS" starttime="20230831 17:54:38.463" endtime="20230831 17:54:43.400"/>
</kw>
<msg timestamp="20230831 17:54:43.400" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 17:54:38.463" endtime="20230831 17:54:43.401"/>
</kw>
<msg timestamp="20230831 17:54:43.401" level="INFO">${output} = 2023-08-31 17:54:41,799 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-31 17:54:41,913 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230831 17:54:38.461" endtime="20230831 17:54:43.401"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 17:54:43.402" endtime="20230831 17:54:43.402"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 17:54:43.405" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 17:54:43.407" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 17:54:43.407" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 17:54:43.403" endtime="20230831 17:54:43.407"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:54:43.408" level="INFO"/>
<status status="PASS" starttime="20230831 17:54:43.408" endtime="20230831 17:54:43.408"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 17:54:43.409" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 17:54:43.408" endtime="20230831 17:54:43.409"/>
</kw>
<status status="PASS" starttime="20230831 17:54:43.402" endtime="20230831 17:54:43.409"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230831 17:54:38.449" endtime="20230831 17:54:43.410"/>
</test>
<test id="s1-s9-t5" name="Setup credentials for S3" line="52">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 17:54:43.416" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 17:54:44.084" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 17:54:44.084" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 17:54:43.414" endtime="20230831 17:54:44.085"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:54:44.086" level="INFO"/>
<status status="PASS" starttime="20230831 17:54:44.085" endtime="20230831 17:54:44.086"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 17:54:44.087" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 17:54:44.086" endtime="20230831 17:54:44.087"/>
</kw>
<status status="PASS" starttime="20230831 17:54:43.413" endtime="20230831 17:54:44.087"/>
</kw>
<msg timestamp="20230831 17:54:44.087" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 17:54:43.413" endtime="20230831 17:54:44.087"/>
</kw>
<status status="PASS" starttime="20230831 17:54:43.412" endtime="20230831 17:54:44.088"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 17:54:44.091" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 17:54:44.625" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 17:54:44.625" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 17:54:44.089" endtime="20230831 17:54:44.625"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:54:44.627" level="INFO"/>
<status status="PASS" starttime="20230831 17:54:44.626" endtime="20230831 17:54:44.627"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 17:54:44.627" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 17:54:44.627" endtime="20230831 17:54:44.627"/>
</kw>
<status status="PASS" starttime="20230831 17:54:44.089" endtime="20230831 17:54:44.628"/>
</kw>
<msg timestamp="20230831 17:54:44.628" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 17:54:44.088" endtime="20230831 17:54:44.628"/>
</kw>
<status status="PASS" starttime="20230831 17:54:44.088" endtime="20230831 17:54:44.629"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 17:54:44.633" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 17:54:45.139" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 17:54:45.139" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 17:54:44.630" endtime="20230831 17:54:45.139"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:54:45.140" level="INFO"/>
<status status="PASS" starttime="20230831 17:54:45.139" endtime="20230831 17:54:45.140"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 17:54:45.141" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 17:54:45.140" endtime="20230831 17:54:45.141"/>
</kw>
<status status="PASS" starttime="20230831 17:54:44.630" endtime="20230831 17:54:45.141"/>
</kw>
<msg timestamp="20230831 17:54:45.141" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 17:54:44.629" endtime="20230831 17:54:45.143"/>
</kw>
<status status="PASS" starttime="20230831 17:54:44.629" endtime="20230831 17:54:45.143"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 17:54:45.147" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 17:54:45.659" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 17:54:45.659" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 17:54:45.145" endtime="20230831 17:54:45.659"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:54:45.661" level="INFO"/>
<status status="PASS" starttime="20230831 17:54:45.660" endtime="20230831 17:54:45.661"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 17:54:45.661" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 17:54:45.661" endtime="20230831 17:54:45.661"/>
</kw>
<status status="PASS" starttime="20230831 17:54:45.144" endtime="20230831 17:54:45.662"/>
</kw>
<msg timestamp="20230831 17:54:45.662" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 17:54:45.144" endtime="20230831 17:54:45.662"/>
</kw>
<status status="PASS" starttime="20230831 17:54:45.143" endtime="20230831 17:54:45.662"/>
</kw>
<status status="PASS" starttime="20230831 17:54:43.412" endtime="20230831 17:54:45.663"/>
</kw>
<status status="PASS" starttime="20230831 17:54:43.412" endtime="20230831 17:54:45.663"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230831 17:54:43.411" endtime="20230831 17:54:45.663"/>
</test>
<test id="s1-s9-t6" name="Try to create a bucket using S3 API" line="56">
<kw name="Create bucket with name" library="commonawslib">
<var>${output}</var>
<arg>${PREFIX}-bucket</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 17:54:45.669" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 17:54:47.582" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 17:54:47.582" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230831 17:54:45.667" endtime="20230831 17:54:47.582"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:54:47.583" level="INFO">{
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230831 17:54:47.582" endtime="20230831 17:54:47.583"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 17:54:47.584" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 17:54:47.584" endtime="20230831 17:54:47.584"/>
</kw>
<status status="PASS" starttime="20230831 17:54:45.666" endtime="20230831 17:54:47.584"/>
</kw>
<msg timestamp="20230831 17:54:47.584" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 17:54:45.666" endtime="20230831 17:54:47.585"/>
</kw>
<msg timestamp="20230831 17:54:47.585" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230831 17:54:45.666" endtime="20230831 17:54:47.585"/>
</kw>
<msg timestamp="20230831 17:54:47.586" level="INFO">${result} = {
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230831 17:54:45.665" endtime="20230831 17:54:47.586"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 17:54:47.586" endtime="20230831 17:54:47.586"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 17:54:47.587" endtime="20230831 17:54:47.587"/>
</kw>
<msg timestamp="20230831 17:54:47.587" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20230831 17:54:45.665" endtime="20230831 17:54:47.587"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230831 17:54:47.587" endtime="20230831 17:54:47.588"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230831 17:54:45.664" endtime="20230831 17:54:47.588"/>
</test>
<test id="s1-s9-t7" name="Create key using S3 API" line="61">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using S3 API" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 17:54:47.592" level="INFO">Running command 'echo "old1: key created using S3 API" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230831 17:54:47.595" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 17:54:47.595" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 17:54:47.590" endtime="20230831 17:54:47.595"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:54:47.596" level="INFO"/>
<status status="PASS" starttime="20230831 17:54:47.595" endtime="20230831 17:54:47.596"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 17:54:47.597" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 17:54:47.596" endtime="20230831 17:54:47.597"/>
</kw>
<status status="PASS" starttime="20230831 17:54:47.589" endtime="20230831 17:54:47.597"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>put-object --bucket ${PREFIX}-bucket --key key2-s3api --body /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 17:54:47.601" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket old1-bucket --key key2-s3api --body /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 17:54:49.468" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 17:54:49.468" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 17:54:47.599" endtime="20230831 17:54:49.468"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:54:49.469" level="INFO"/>
<status status="PASS" starttime="20230831 17:54:49.468" endtime="20230831 17:54:49.469"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 17:54:49.470" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 17:54:49.469" endtime="20230831 17:54:49.470"/>
</kw>
<msg timestamp="20230831 17:54:49.470" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 17:54:47.598" endtime="20230831 17:54:49.470"/>
</kw>
<msg timestamp="20230831 17:54:49.471" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 17:54:47.597" endtime="20230831 17:54:49.471"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 17:54:49.471" endtime="20230831 17:54:49.471"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 17:54:49.474" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 17:54:49.477" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 17:54:49.477" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 17:54:49.472" endtime="20230831 17:54:49.477"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:54:49.478" level="INFO"/>
<status status="PASS" starttime="20230831 17:54:49.477" endtime="20230831 17:54:49.478"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 17:54:49.479" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 17:54:49.478" endtime="20230831 17:54:49.479"/>
</kw>
<status status="PASS" starttime="20230831 17:54:49.471" endtime="20230831 17:54:49.479"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230831 17:54:47.589" endtime="20230831 17:54:49.479"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230831 17:54:23.493" endtime="20230831 17:54:49.481"/>
</suite>
<suite id="s1-s10" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s10-t1" name="Read data from previously created key" line="28">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230831 17:54:52.476" level="INFO">${random} = 83389</msg>
<status status="PASS" starttime="20230831 17:54:52.475" endtime="20230831 17:54:52.476"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 17:54:52.482" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-83389 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 17:54:56.869" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 17:54:56.870" level="INFO">${output} = 2023-08-31 17:54:55,512 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-31 17:54:55,657 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230831 17:54:52.478" endtime="20230831 17:54:56.870"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:54:56.871" level="INFO">2023-08-31 17:54:55,512 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-31 17:54:55,657 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-08-31 17:54:55,657 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started</msg>
<status status="PASS" starttime="20230831 17:54:56.870" endtime="20230831 17:54:56.871"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 17:54:56.871" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 17:54:56.871" endtime="20230831 17:54:56.872"/>
</kw>
<status status="PASS" starttime="20230831 17:54:52.478" endtime="20230831 17:54:56.872"/>
</kw>
<msg timestamp="20230831 17:54:56.872" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 17:54:52.477" endtime="20230831 17:54:56.873"/>
</kw>
<msg timestamp="20230831 17:54:56.873" level="INFO">${output} = 2023-08-31 17:54:55,512 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-31 17:54:55,657 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230831 17:54:52.476" endtime="20230831 17:54:56.873"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 17:54:56.874" endtime="20230831 17:54:56.874"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 17:54:56.879" level="INFO">Running command 'cat /tmp/key-83389 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 17:54:56.883" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 17:54:56.883" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230831 17:54:56.875" endtime="20230831 17:54:56.883"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:54:56.884" level="INFO">old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230831 17:54:56.884" endtime="20230831 17:54:56.885"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 17:54:56.886" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 17:54:56.885" endtime="20230831 17:54:56.886"/>
</kw>
<msg timestamp="20230831 17:54:56.886" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230831 17:54:56.874" endtime="20230831 17:54:56.886"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 17:54:56.886" endtime="20230831 17:54:56.887"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 17:54:56.890" level="INFO">Running command 'rm /tmp/key-83389 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 17:54:56.893" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 17:54:56.893" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 17:54:56.888" endtime="20230831 17:54:56.893"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:54:56.894" level="INFO"/>
<status status="PASS" starttime="20230831 17:54:56.893" endtime="20230831 17:54:56.894"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 17:54:56.894" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 17:54:56.894" endtime="20230831 17:54:56.894"/>
</kw>
<status status="PASS" starttime="20230831 17:54:56.887" endtime="20230831 17:54:56.895"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230831 17:54:52.474" endtime="20230831 17:54:56.895"/>
</test>
<test id="s1-s10-t2" name="Setup credentials for S3" line="36">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 17:54:56.900" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 17:54:57.388" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 17:54:57.388" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 17:54:56.898" endtime="20230831 17:54:57.388"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:54:57.389" level="INFO"/>
<status status="PASS" starttime="20230831 17:54:57.389" endtime="20230831 17:54:57.389"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 17:54:57.390" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 17:54:57.390" endtime="20230831 17:54:57.390"/>
</kw>
<status status="PASS" starttime="20230831 17:54:56.898" endtime="20230831 17:54:57.390"/>
</kw>
<msg timestamp="20230831 17:54:57.390" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 17:54:56.898" endtime="20230831 17:54:57.391"/>
</kw>
<status status="PASS" starttime="20230831 17:54:56.897" endtime="20230831 17:54:57.391"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 17:54:57.395" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 17:54:57.876" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 17:54:57.876" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 17:54:57.392" endtime="20230831 17:54:57.876"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:54:57.877" level="INFO"/>
<status status="PASS" starttime="20230831 17:54:57.876" endtime="20230831 17:54:57.878"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 17:54:57.878" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 17:54:57.878" endtime="20230831 17:54:57.878"/>
</kw>
<status status="PASS" starttime="20230831 17:54:57.392" endtime="20230831 17:54:57.879"/>
</kw>
<msg timestamp="20230831 17:54:57.879" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 17:54:57.392" endtime="20230831 17:54:57.879"/>
</kw>
<status status="PASS" starttime="20230831 17:54:57.391" endtime="20230831 17:54:57.879"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 17:54:57.883" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 17:54:58.375" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 17:54:58.375" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 17:54:57.881" endtime="20230831 17:54:58.375"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:54:58.377" level="INFO"/>
<status status="PASS" starttime="20230831 17:54:58.376" endtime="20230831 17:54:58.377"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 17:54:58.378" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 17:54:58.377" endtime="20230831 17:54:58.378"/>
</kw>
<status status="PASS" starttime="20230831 17:54:57.880" endtime="20230831 17:54:58.378"/>
</kw>
<msg timestamp="20230831 17:54:58.378" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 17:54:57.880" endtime="20230831 17:54:58.379"/>
</kw>
<status status="PASS" starttime="20230831 17:54:57.880" endtime="20230831 17:54:58.379"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 17:54:58.384" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 17:54:58.875" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 17:54:58.875" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 17:54:58.381" endtime="20230831 17:54:58.875"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:54:58.876" level="INFO"/>
<status status="PASS" starttime="20230831 17:54:58.876" endtime="20230831 17:54:58.876"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 17:54:58.877" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 17:54:58.876" endtime="20230831 17:54:58.877"/>
</kw>
<status status="PASS" starttime="20230831 17:54:58.380" endtime="20230831 17:54:58.877"/>
</kw>
<msg timestamp="20230831 17:54:58.877" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 17:54:58.380" endtime="20230831 17:54:58.878"/>
</kw>
<status status="PASS" starttime="20230831 17:54:58.379" endtime="20230831 17:54:58.878"/>
</kw>
<status status="PASS" starttime="20230831 17:54:56.897" endtime="20230831 17:54:58.878"/>
</kw>
<status status="PASS" starttime="20230831 17:54:56.896" endtime="20230831 17:54:58.878"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230831 17:54:56.896" endtime="20230831 17:54:58.878"/>
</test>
<test id="s1-s10-t3" name="Read key created with Ozone Shell using S3 API" line="40">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 17:54:58.884" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 17:54:59.653" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 17:54:59.653" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 31 Aug 2023 17:54:43 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230831 17:54:58.881" endtime="20230831 17:54:59.654"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:54:59.655" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 31 Aug 2023 17:54:43 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 31 Aug 2023 17:54:59 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230831 17:54:59.654" endtime="20230831 17:54:59.655"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 17:54:59.655" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 17:54:59.655" endtime="20230831 17:54:59.655"/>
</kw>
<msg timestamp="20230831 17:54:59.656" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 31 Aug 2023 17:54:43 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230831 17:54:58.881" endtime="20230831 17:54:59.656"/>
</kw>
<msg timestamp="20230831 17:54:59.656" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 31 Aug 2023 17:54:43 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230831 17:54:58.880" endtime="20230831 17:54:59.656"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 17:54:59.656" endtime="20230831 17:54:59.657"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 17:54:59.660" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 17:54:59.662" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 17:54:59.662" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230831 17:54:59.657" endtime="20230831 17:54:59.662"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:54:59.663" level="INFO">old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230831 17:54:59.663" endtime="20230831 17:54:59.663"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 17:54:59.664" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 17:54:59.663" endtime="20230831 17:54:59.664"/>
</kw>
<msg timestamp="20230831 17:54:59.664" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230831 17:54:59.657" endtime="20230831 17:54:59.664"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 17:54:59.664" endtime="20230831 17:54:59.665"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 17:54:59.669" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 17:54:59.670" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 17:54:59.670" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 17:54:59.665" endtime="20230831 17:54:59.670"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:54:59.671" level="INFO"/>
<status status="PASS" starttime="20230831 17:54:59.671" endtime="20230831 17:54:59.671"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 17:54:59.672" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 17:54:59.672" endtime="20230831 17:54:59.672"/>
</kw>
<status status="PASS" starttime="20230831 17:54:59.665" endtime="20230831 17:54:59.672"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230831 17:54:58.879" endtime="20230831 17:54:59.673"/>
</test>
<test id="s1-s10-t4" name="Read key created with S3 API using S3 API" line="47">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 17:54:59.678" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 17:55:00.330" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 17:55:00.330" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 31 Aug 2023 17:54:49 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230831 17:54:59.676" endtime="20230831 17:55:00.330"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:55:00.331" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 31 Aug 2023 17:54:49 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 31 Aug 2023 17:55:00 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230831 17:55:00.331" endtime="20230831 17:55:00.332"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 17:55:00.332" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 17:55:00.332" endtime="20230831 17:55:00.332"/>
</kw>
<msg timestamp="20230831 17:55:00.333" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 31 Aug 2023 17:54:49 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230831 17:54:59.675" endtime="20230831 17:55:00.333"/>
</kw>
<msg timestamp="20230831 17:55:00.333" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 31 Aug 2023 17:54:49 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230831 17:54:59.675" endtime="20230831 17:55:00.333"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 17:55:00.333" endtime="20230831 17:55:00.334"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 17:55:00.337" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 17:55:00.339" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 17:55:00.339" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20230831 17:55:00.334" endtime="20230831 17:55:00.339"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:55:00.340" level="INFO">old1: key created using S3 API</msg>
<status status="PASS" starttime="20230831 17:55:00.339" endtime="20230831 17:55:00.340"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 17:55:00.341" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 17:55:00.340" endtime="20230831 17:55:00.341"/>
</kw>
<msg timestamp="20230831 17:55:00.341" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20230831 17:55:00.334" endtime="20230831 17:55:00.341"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 17:55:00.341" endtime="20230831 17:55:00.342"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 17:55:00.345" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 17:55:00.353" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 17:55:00.353" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 17:55:00.342" endtime="20230831 17:55:00.353"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:55:00.355" level="INFO"/>
<status status="PASS" starttime="20230831 17:55:00.354" endtime="20230831 17:55:00.355"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 17:55:00.356" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 17:55:00.355" endtime="20230831 17:55:00.356"/>
</kw>
<status status="PASS" starttime="20230831 17:55:00.342" endtime="20230831 17:55:00.356"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230831 17:54:59.674" endtime="20230831 17:55:00.356"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230831 17:54:52.395" endtime="20230831 17:55:00.359"/>
</suite>
<suite id="s1-s11" name="Prepare" source="/opt/ozone/smoketest/upgrade/prepare.robot">
<test id="s1-s11-t1" name="Prepare Ozone Manager" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230831 17:55:03.455" endtime="20230831 17:55:03.456"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM prepare is skipped for version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230831 17:55:03.456" endtime="20230831 17:55:03.456"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 17:55:03.461" level="INFO">Running command 'ozone admin om prepare -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 17:55:11.533" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 17:55:11.533" level="INFO">${output} = Ozone Manager Prepare Request successfully returned with Transaction Id : [23].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Cu...</msg>
<status status="PASS" starttime="20230831 17:55:03.458" endtime="20230831 17:55:11.533"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:55:11.534" level="INFO">Ozone Manager Prepare Request successfully returned with Transaction Id : [23].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [23]
OM : [om3], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [23]
OM : [om2], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [23]

OM Preparation successful! 
All OMs are prepared
No new write requests will be allowed until preparation is cancelled or upgrade/downgrade is done.</msg>
<status status="PASS" starttime="20230831 17:55:11.534" endtime="20230831 17:55:11.535"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 17:55:11.535" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 17:55:11.535" endtime="20230831 17:55:11.535"/>
</kw>
<status status="PASS" starttime="20230831 17:55:03.457" endtime="20230831 17:55:11.536"/>
</kw>
<msg timestamp="20230831 17:55:11.536" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 17:55:03.457" endtime="20230831 17:55:11.537"/>
</kw>
<msg timestamp="20230831 17:55:11.537" level="INFO">${result} = Ozone Manager Prepare Request successfully returned with Transaction Id : [23].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Cu...</msg>
<status status="PASS" starttime="20230831 17:55:03.456" endtime="20230831 17:55:11.537"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 17:55:11.538" endtime="20230831 17:55:11.538"/>
</kw>
<status status="PASS" starttime="20230831 17:55:11.537" endtime="20230831 17:55:11.538"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230831 17:55:03.454" endtime="20230831 17:55:11.539"/>
</test>
<doc>Prepares OMs</doc>
<status status="PASS" starttime="20230831 17:55:03.406" endtime="20230831 17:55:11.540"/>
</suite>
<suite id="s1-s12" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s12-t1" name="Read data from previously created key" line="28">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230831 17:57:35.621" level="INFO">${random} = 14747</msg>
<status status="PASS" starttime="20230831 17:57:35.620" endtime="20230831 17:57:35.622"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 17:57:35.627" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-14747 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 17:57:43.129" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 17:57:43.129" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 17:57:35.624" endtime="20230831 17:57:43.129"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:57:43.130" level="INFO"/>
<status status="PASS" starttime="20230831 17:57:43.130" endtime="20230831 17:57:43.130"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 17:57:43.131" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 17:57:43.130" endtime="20230831 17:57:43.131"/>
</kw>
<status status="PASS" starttime="20230831 17:57:35.623" endtime="20230831 17:57:43.131"/>
</kw>
<msg timestamp="20230831 17:57:43.131" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 17:57:35.623" endtime="20230831 17:57:43.131"/>
</kw>
<msg timestamp="20230831 17:57:43.131" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 17:57:35.622" endtime="20230831 17:57:43.132"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 17:57:43.132" endtime="20230831 17:57:43.132"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 17:57:43.136" level="INFO">Running command 'cat /tmp/key-14747 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 17:57:43.140" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 17:57:43.140" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230831 17:57:43.133" endtime="20230831 17:57:43.140"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:57:43.141" level="INFO">old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230831 17:57:43.141" endtime="20230831 17:57:43.141"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 17:57:43.143" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 17:57:43.141" endtime="20230831 17:57:43.143"/>
</kw>
<msg timestamp="20230831 17:57:43.143" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230831 17:57:43.132" endtime="20230831 17:57:43.143"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 17:57:43.144" endtime="20230831 17:57:43.144"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 17:57:43.147" level="INFO">Running command 'rm /tmp/key-14747 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 17:57:43.150" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 17:57:43.150" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 17:57:43.145" endtime="20230831 17:57:43.150"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:57:43.151" level="INFO"/>
<status status="PASS" starttime="20230831 17:57:43.151" endtime="20230831 17:57:43.152"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 17:57:43.152" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 17:57:43.152" endtime="20230831 17:57:43.152"/>
</kw>
<status status="PASS" starttime="20230831 17:57:43.144" endtime="20230831 17:57:43.153"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230831 17:57:35.619" endtime="20230831 17:57:43.153"/>
</test>
<test id="s1-s12-t2" name="Setup credentials for S3" line="36">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 17:57:43.161" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 17:57:44.190" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 17:57:44.191" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 17:57:43.157" endtime="20230831 17:57:44.191"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:57:44.192" level="INFO"/>
<status status="PASS" starttime="20230831 17:57:44.191" endtime="20230831 17:57:44.192"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 17:57:44.193" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 17:57:44.193" endtime="20230831 17:57:44.194"/>
</kw>
<status status="PASS" starttime="20230831 17:57:43.156" endtime="20230831 17:57:44.194"/>
</kw>
<msg timestamp="20230831 17:57:44.194" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 17:57:43.156" endtime="20230831 17:57:44.194"/>
</kw>
<status status="PASS" starttime="20230831 17:57:43.155" endtime="20230831 17:57:44.194"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 17:57:44.200" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 17:57:44.850" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 17:57:44.850" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 17:57:44.197" endtime="20230831 17:57:44.850"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:57:44.851" level="INFO"/>
<status status="PASS" starttime="20230831 17:57:44.851" endtime="20230831 17:57:44.852"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 17:57:44.852" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 17:57:44.852" endtime="20230831 17:57:44.852"/>
</kw>
<status status="PASS" starttime="20230831 17:57:44.196" endtime="20230831 17:57:44.853"/>
</kw>
<msg timestamp="20230831 17:57:44.853" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 17:57:44.195" endtime="20230831 17:57:44.853"/>
</kw>
<status status="PASS" starttime="20230831 17:57:44.195" endtime="20230831 17:57:44.853"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 17:57:44.858" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 17:57:45.455" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 17:57:45.455" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 17:57:44.855" endtime="20230831 17:57:45.455"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:57:45.457" level="INFO"/>
<status status="PASS" starttime="20230831 17:57:45.456" endtime="20230831 17:57:45.457"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 17:57:45.458" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 17:57:45.457" endtime="20230831 17:57:45.458"/>
</kw>
<status status="PASS" starttime="20230831 17:57:44.854" endtime="20230831 17:57:45.458"/>
</kw>
<msg timestamp="20230831 17:57:45.458" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 17:57:44.854" endtime="20230831 17:57:45.459"/>
</kw>
<status status="PASS" starttime="20230831 17:57:44.853" endtime="20230831 17:57:45.459"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 17:57:45.464" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 17:57:46.065" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 17:57:46.065" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 17:57:45.461" endtime="20230831 17:57:46.065"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:57:46.066" level="INFO"/>
<status status="PASS" starttime="20230831 17:57:46.066" endtime="20230831 17:57:46.066"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 17:57:46.067" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 17:57:46.067" endtime="20230831 17:57:46.067"/>
</kw>
<status status="PASS" starttime="20230831 17:57:45.460" endtime="20230831 17:57:46.067"/>
</kw>
<msg timestamp="20230831 17:57:46.067" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 17:57:45.459" endtime="20230831 17:57:46.067"/>
</kw>
<status status="PASS" starttime="20230831 17:57:45.459" endtime="20230831 17:57:46.068"/>
</kw>
<status status="PASS" starttime="20230831 17:57:43.155" endtime="20230831 17:57:46.068"/>
</kw>
<status status="PASS" starttime="20230831 17:57:43.155" endtime="20230831 17:57:46.068"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230831 17:57:43.154" endtime="20230831 17:57:46.068"/>
</test>
<test id="s1-s12-t3" name="Read key created with Ozone Shell using S3 API" line="40">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 17:57:46.073" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 17:57:50.502" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 17:57:50.502" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 31 Aug 2023 17:54:43 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230831 17:57:46.071" endtime="20230831 17:57:50.502"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:57:50.503" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 31 Aug 2023 17:54:43 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 31 Aug 2023 17:57:46 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230831 17:57:50.503" endtime="20230831 17:57:50.503"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 17:57:50.504" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 17:57:50.504" endtime="20230831 17:57:50.504"/>
</kw>
<msg timestamp="20230831 17:57:50.504" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 31 Aug 2023 17:54:43 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230831 17:57:46.070" endtime="20230831 17:57:50.504"/>
</kw>
<msg timestamp="20230831 17:57:50.505" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 31 Aug 2023 17:54:43 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230831 17:57:46.070" endtime="20230831 17:57:50.505"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 17:57:50.505" endtime="20230831 17:57:50.505"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 17:57:50.509" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 17:57:50.512" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 17:57:50.512" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230831 17:57:50.506" endtime="20230831 17:57:50.512"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:57:50.513" level="INFO">old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230831 17:57:50.512" endtime="20230831 17:57:50.513"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 17:57:50.514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 17:57:50.513" endtime="20230831 17:57:50.514"/>
</kw>
<msg timestamp="20230831 17:57:50.514" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230831 17:57:50.505" endtime="20230831 17:57:50.514"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 17:57:50.514" endtime="20230831 17:57:50.515"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 17:57:50.518" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 17:57:50.521" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 17:57:50.521" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 17:57:50.515" endtime="20230831 17:57:50.521"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:57:50.522" level="INFO"/>
<status status="PASS" starttime="20230831 17:57:50.521" endtime="20230831 17:57:50.522"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 17:57:50.523" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 17:57:50.523" endtime="20230831 17:57:50.523"/>
</kw>
<status status="PASS" starttime="20230831 17:57:50.515" endtime="20230831 17:57:50.523"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230831 17:57:46.069" endtime="20230831 17:57:50.523"/>
</test>
<test id="s1-s12-t4" name="Read key created with S3 API using S3 API" line="47">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 17:57:50.529" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 17:57:51.319" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 17:57:51.319" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 31 Aug 2023 17:54:49 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230831 17:57:50.527" endtime="20230831 17:57:51.319"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:57:51.321" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 31 Aug 2023 17:54:49 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 31 Aug 2023 17:57:51 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230831 17:57:51.320" endtime="20230831 17:57:51.321"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 17:57:51.321" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 17:57:51.321" endtime="20230831 17:57:51.322"/>
</kw>
<msg timestamp="20230831 17:57:51.322" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 31 Aug 2023 17:54:49 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230831 17:57:50.526" endtime="20230831 17:57:51.322"/>
</kw>
<msg timestamp="20230831 17:57:51.322" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 31 Aug 2023 17:54:49 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230831 17:57:50.526" endtime="20230831 17:57:51.322"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 17:57:51.322" endtime="20230831 17:57:51.323"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 17:57:51.327" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 17:57:51.330" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 17:57:51.330" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20230831 17:57:51.324" endtime="20230831 17:57:51.330"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:57:51.331" level="INFO">old1: key created using S3 API</msg>
<status status="PASS" starttime="20230831 17:57:51.331" endtime="20230831 17:57:51.331"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 17:57:51.332" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 17:57:51.332" endtime="20230831 17:57:51.332"/>
</kw>
<msg timestamp="20230831 17:57:51.332" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20230831 17:57:51.323" endtime="20230831 17:57:51.332"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 17:57:51.333" endtime="20230831 17:57:51.333"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 17:57:51.337" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 17:57:51.340" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 17:57:51.340" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 17:57:51.334" endtime="20230831 17:57:51.340"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:57:51.341" level="INFO"/>
<status status="PASS" starttime="20230831 17:57:51.340" endtime="20230831 17:57:51.341"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 17:57:51.342" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 17:57:51.341" endtime="20230831 17:57:51.342"/>
</kw>
<status status="PASS" starttime="20230831 17:57:51.333" endtime="20230831 17:57:51.342"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230831 17:57:50.525" endtime="20230831 17:57:51.342"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230831 17:57:35.509" endtime="20230831 17:57:51.344"/>
</suite>
<suite id="s1-s13" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s13-t1" name="Create key" line="35">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 17:57:54.608" level="INFO">Running command 'echo "old1: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230831 17:57:54.611" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 17:57:54.611" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 17:57:54.606" endtime="20230831 17:57:54.611"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:57:54.613" level="INFO"/>
<status status="PASS" starttime="20230831 17:57:54.612" endtime="20230831 17:57:54.613"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 17:57:54.613" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 17:57:54.613" endtime="20230831 17:57:54.614"/>
</kw>
<status status="PASS" starttime="20230831 17:57:54.605" endtime="20230831 17:57:54.614"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 17:57:54.618" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 17:58:03.378" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 17:58:03.378" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 17:57:54.616" endtime="20230831 17:58:03.378"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:58:03.380" level="INFO"/>
<status status="PASS" starttime="20230831 17:58:03.379" endtime="20230831 17:58:03.380"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 17:58:03.381" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 17:58:03.380" endtime="20230831 17:58:03.382"/>
</kw>
<status status="PASS" starttime="20230831 17:57:54.615" endtime="20230831 17:58:03.382"/>
</kw>
<msg timestamp="20230831 17:58:03.382" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 17:57:54.615" endtime="20230831 17:58:03.382"/>
</kw>
<msg timestamp="20230831 17:58:03.383" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 17:57:54.614" endtime="20230831 17:58:03.383"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 17:58:03.383" endtime="20230831 17:58:03.384"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 17:58:03.389" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 17:58:03.393" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 17:58:03.393" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 17:58:03.385" endtime="20230831 17:58:03.393"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:58:03.395" level="INFO"/>
<status status="PASS" starttime="20230831 17:58:03.394" endtime="20230831 17:58:03.395"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 17:58:03.396" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 17:58:03.395" endtime="20230831 17:58:03.396"/>
</kw>
<status status="PASS" starttime="20230831 17:58:03.384" endtime="20230831 17:58:03.396"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230831 17:57:54.604" endtime="20230831 17:58:03.397"/>
</test>
<test id="s1-s13-t2" name="Create key in the bucket in s3v volume" line="46">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: another key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 17:58:03.405" level="INFO">Running command 'echo "old1: another key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230831 17:58:03.407" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 17:58:03.407" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 17:58:03.403" endtime="20230831 17:58:03.407"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:58:03.408" level="INFO"/>
<status status="PASS" starttime="20230831 17:58:03.408" endtime="20230831 17:58:03.408"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 17:58:03.409" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 17:58:03.409" endtime="20230831 17:58:03.409"/>
</kw>
<status status="PASS" starttime="20230831 17:58:03.402" endtime="20230831 17:58:03.409"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /s3v/${PREFIX}-bucket/key1-shell /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 17:58:03.414" level="INFO">Running command 'ozone sh key put /s3v/old1-bucket/key1-shell /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 17:58:10.216" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 17:58:10.216" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 17:58:03.411" endtime="20230831 17:58:10.216"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:58:10.218" level="INFO"/>
<status status="PASS" starttime="20230831 17:58:10.217" endtime="20230831 17:58:10.218"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 17:58:10.219" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 17:58:10.218" endtime="20230831 17:58:10.219"/>
</kw>
<status status="PASS" starttime="20230831 17:58:03.411" endtime="20230831 17:58:10.219"/>
</kw>
<msg timestamp="20230831 17:58:10.219" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 17:58:03.410" endtime="20230831 17:58:10.219"/>
</kw>
<msg timestamp="20230831 17:58:10.220" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 17:58:03.410" endtime="20230831 17:58:10.220"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 17:58:10.220" endtime="20230831 17:58:10.220"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 17:58:10.224" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 17:58:10.227" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 17:58:10.227" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 17:58:10.221" endtime="20230831 17:58:10.227"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:58:10.229" level="INFO"/>
<status status="PASS" starttime="20230831 17:58:10.228" endtime="20230831 17:58:10.229"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 17:58:10.229" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 17:58:10.229" endtime="20230831 17:58:10.230"/>
</kw>
<status status="PASS" starttime="20230831 17:58:10.220" endtime="20230831 17:58:10.230"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230831 17:58:03.399" endtime="20230831 17:58:10.230"/>
</test>
<test id="s1-s13-t3" name="Setup credentials for S3" line="52">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 17:58:10.237" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 17:58:10.762" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 17:58:10.762" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 17:58:10.234" endtime="20230831 17:58:10.762"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:58:10.764" level="INFO"/>
<status status="PASS" starttime="20230831 17:58:10.763" endtime="20230831 17:58:10.764"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 17:58:10.765" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 17:58:10.764" endtime="20230831 17:58:10.765"/>
</kw>
<status status="PASS" starttime="20230831 17:58:10.234" endtime="20230831 17:58:10.765"/>
</kw>
<msg timestamp="20230831 17:58:10.765" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 17:58:10.233" endtime="20230831 17:58:10.765"/>
</kw>
<status status="PASS" starttime="20230831 17:58:10.233" endtime="20230831 17:58:10.765"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 17:58:10.770" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 17:58:11.307" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 17:58:11.307" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 17:58:10.767" endtime="20230831 17:58:11.308"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:58:11.310" level="INFO"/>
<status status="PASS" starttime="20230831 17:58:11.309" endtime="20230831 17:58:11.310"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 17:58:11.311" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 17:58:11.310" endtime="20230831 17:58:11.311"/>
</kw>
<status status="PASS" starttime="20230831 17:58:10.766" endtime="20230831 17:58:11.311"/>
</kw>
<msg timestamp="20230831 17:58:11.311" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 17:58:10.766" endtime="20230831 17:58:11.312"/>
</kw>
<status status="PASS" starttime="20230831 17:58:10.765" endtime="20230831 17:58:11.312"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 17:58:11.317" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 17:58:11.886" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 17:58:11.886" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 17:58:11.314" endtime="20230831 17:58:11.886"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:58:11.888" level="INFO"/>
<status status="PASS" starttime="20230831 17:58:11.887" endtime="20230831 17:58:11.888"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 17:58:11.889" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 17:58:11.888" endtime="20230831 17:58:11.889"/>
</kw>
<status status="PASS" starttime="20230831 17:58:11.313" endtime="20230831 17:58:11.889"/>
</kw>
<msg timestamp="20230831 17:58:11.890" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 17:58:11.313" endtime="20230831 17:58:11.890"/>
</kw>
<status status="PASS" starttime="20230831 17:58:11.312" endtime="20230831 17:58:11.890"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 17:58:11.895" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 17:58:12.505" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 17:58:12.505" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 17:58:11.892" endtime="20230831 17:58:12.505"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:58:12.506" level="INFO"/>
<status status="PASS" starttime="20230831 17:58:12.505" endtime="20230831 17:58:12.506"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 17:58:12.507" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 17:58:12.507" endtime="20230831 17:58:12.507"/>
</kw>
<status status="PASS" starttime="20230831 17:58:11.891" endtime="20230831 17:58:12.508"/>
</kw>
<msg timestamp="20230831 17:58:12.508" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 17:58:11.891" endtime="20230831 17:58:12.508"/>
</kw>
<status status="PASS" starttime="20230831 17:58:11.890" endtime="20230831 17:58:12.508"/>
</kw>
<status status="PASS" starttime="20230831 17:58:10.232" endtime="20230831 17:58:12.508"/>
</kw>
<status status="PASS" starttime="20230831 17:58:10.232" endtime="20230831 17:58:12.508"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230831 17:58:10.231" endtime="20230831 17:58:12.508"/>
</test>
<test id="s1-s13-t4" name="Try to create a bucket using S3 API" line="56">
<kw name="Create bucket with name" library="commonawslib">
<var>${output}</var>
<arg>${PREFIX}-bucket</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 17:58:12.517" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 17:58:13.242" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 17:58:13.242" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230831 17:58:12.514" endtime="20230831 17:58:13.242"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:58:13.243" level="INFO">{
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230831 17:58:13.242" endtime="20230831 17:58:13.243"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 17:58:13.244" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 17:58:13.243" endtime="20230831 17:58:13.244"/>
</kw>
<status status="PASS" starttime="20230831 17:58:12.513" endtime="20230831 17:58:13.244"/>
</kw>
<msg timestamp="20230831 17:58:13.244" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 17:58:12.513" endtime="20230831 17:58:13.244"/>
</kw>
<msg timestamp="20230831 17:58:13.245" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230831 17:58:12.512" endtime="20230831 17:58:13.245"/>
</kw>
<msg timestamp="20230831 17:58:13.245" level="INFO">${result} = {
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230831 17:58:12.511" endtime="20230831 17:58:13.245"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 17:58:13.245" endtime="20230831 17:58:13.246"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 17:58:13.246" endtime="20230831 17:58:13.246"/>
</kw>
<msg timestamp="20230831 17:58:13.247" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20230831 17:58:12.511" endtime="20230831 17:58:13.247"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230831 17:58:13.247" endtime="20230831 17:58:13.247"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230831 17:58:12.510" endtime="20230831 17:58:13.248"/>
</test>
<test id="s1-s13-t5" name="Create key using S3 API" line="61">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using S3 API" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 17:58:13.254" level="INFO">Running command 'echo "old1: key created using S3 API" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230831 17:58:13.256" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 17:58:13.256" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 17:58:13.251" endtime="20230831 17:58:13.256"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:58:13.257" level="INFO"/>
<status status="PASS" starttime="20230831 17:58:13.257" endtime="20230831 17:58:13.257"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 17:58:13.258" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 17:58:13.258" endtime="20230831 17:58:13.258"/>
</kw>
<status status="PASS" starttime="20230831 17:58:13.250" endtime="20230831 17:58:13.259"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>put-object --bucket ${PREFIX}-bucket --key key2-s3api --body /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 17:58:13.262" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket old1-bucket --key key2-s3api --body /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 17:58:14.762" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 17:58:14.762" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 17:58:13.260" endtime="20230831 17:58:14.762"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:58:14.764" level="INFO"/>
<status status="PASS" starttime="20230831 17:58:14.762" endtime="20230831 17:58:14.764"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 17:58:14.765" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 17:58:14.764" endtime="20230831 17:58:14.765"/>
</kw>
<msg timestamp="20230831 17:58:14.765" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 17:58:13.259" endtime="20230831 17:58:14.765"/>
</kw>
<msg timestamp="20230831 17:58:14.766" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 17:58:13.259" endtime="20230831 17:58:14.767"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 17:58:14.767" endtime="20230831 17:58:14.767"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 17:58:14.771" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 17:58:14.774" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 17:58:14.774" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 17:58:14.768" endtime="20230831 17:58:14.774"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:58:14.775" level="INFO"/>
<status status="PASS" starttime="20230831 17:58:14.774" endtime="20230831 17:58:14.775"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 17:58:14.776" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 17:58:14.776" endtime="20230831 17:58:14.776"/>
</kw>
<status status="PASS" starttime="20230831 17:58:14.768" endtime="20230831 17:58:14.776"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230831 17:58:13.249" endtime="20230831 17:58:14.777"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230831 17:57:54.497" endtime="20230831 17:58:14.779"/>
</suite>
<suite id="s1-s14" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s14-t1" name="Create a volume and bucket" line="28">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 17:58:18.004" level="INFO">Running command 'ozone sh volume create new1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 17:58:21.909" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 17:58:21.910" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 17:58:18.000" endtime="20230831 17:58:21.910"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:58:21.911" level="INFO"/>
<status status="PASS" starttime="20230831 17:58:21.910" endtime="20230831 17:58:21.911"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 17:58:21.912" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 17:58:21.912" endtime="20230831 17:58:21.912"/>
</kw>
<status status="PASS" starttime="20230831 17:58:18.000" endtime="20230831 17:58:21.912"/>
</kw>
<msg timestamp="20230831 17:58:21.913" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 17:58:18.000" endtime="20230831 17:58:21.913"/>
</kw>
<msg timestamp="20230831 17:58:21.913" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 17:58:17.999" endtime="20230831 17:58:21.913"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 17:58:21.913" endtime="20230831 17:58:21.913"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 17:58:21.942" level="INFO">Running command 'ozone sh bucket create /new1-volume/new1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 17:58:25.812" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 17:58:25.812" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 17:58:21.933" endtime="20230831 17:58:25.812"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:58:25.813" level="INFO"/>
<status status="PASS" starttime="20230831 17:58:25.812" endtime="20230831 17:58:25.813"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 17:58:25.814" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 17:58:25.814" endtime="20230831 17:58:25.814"/>
</kw>
<status status="PASS" starttime="20230831 17:58:21.915" endtime="20230831 17:58:25.815"/>
</kw>
<msg timestamp="20230831 17:58:25.815" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 17:58:21.914" endtime="20230831 17:58:25.815"/>
</kw>
<msg timestamp="20230831 17:58:25.815" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 17:58:21.914" endtime="20230831 17:58:25.815"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 17:58:25.815" endtime="20230831 17:58:25.816"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230831 17:58:17.998" endtime="20230831 17:58:25.816"/>
</test>
<test id="s1-s14-t2" name="Create key" line="35">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 17:58:25.821" level="INFO">Running command 'echo "new1: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230831 17:58:25.823" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 17:58:25.824" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 17:58:25.819" endtime="20230831 17:58:25.824"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:58:25.825" level="INFO"/>
<status status="PASS" starttime="20230831 17:58:25.824" endtime="20230831 17:58:25.825"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 17:58:25.826" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 17:58:25.825" endtime="20230831 17:58:25.826"/>
</kw>
<status status="PASS" starttime="20230831 17:58:25.818" endtime="20230831 17:58:25.826"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 17:58:25.830" level="INFO">Running command 'ozone sh key put /new1-volume/new1-bucket/new1-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 17:58:32.349" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 17:58:32.349" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 17:58:25.828" endtime="20230831 17:58:32.349"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:58:32.351" level="INFO"/>
<status status="PASS" starttime="20230831 17:58:32.350" endtime="20230831 17:58:32.351"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 17:58:32.352" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 17:58:32.351" endtime="20230831 17:58:32.352"/>
</kw>
<status status="PASS" starttime="20230831 17:58:25.827" endtime="20230831 17:58:32.352"/>
</kw>
<msg timestamp="20230831 17:58:32.352" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 17:58:25.827" endtime="20230831 17:58:32.352"/>
</kw>
<msg timestamp="20230831 17:58:32.353" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 17:58:25.826" endtime="20230831 17:58:32.353"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 17:58:32.353" endtime="20230831 17:58:32.353"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 17:58:32.357" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 17:58:32.360" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 17:58:32.360" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 17:58:32.354" endtime="20230831 17:58:32.360"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:58:32.362" level="INFO"/>
<status status="PASS" starttime="20230831 17:58:32.361" endtime="20230831 17:58:32.362"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 17:58:32.362" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 17:58:32.362" endtime="20230831 17:58:32.363"/>
</kw>
<status status="PASS" starttime="20230831 17:58:32.353" endtime="20230831 17:58:32.363"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230831 17:58:25.817" endtime="20230831 17:58:32.363"/>
</test>
<test id="s1-s14-t3" name="Create a bucket in s3v volume" line="41">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /s3v/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 17:58:32.369" level="INFO">Running command 'ozone sh bucket create /s3v/new1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 17:58:36.386" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 17:58:36.386" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 17:58:32.367" endtime="20230831 17:58:36.386"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:58:36.388" level="INFO"/>
<status status="PASS" starttime="20230831 17:58:36.387" endtime="20230831 17:58:36.388"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 17:58:36.389" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 17:58:36.388" endtime="20230831 17:58:36.389"/>
</kw>
<status status="PASS" starttime="20230831 17:58:32.366" endtime="20230831 17:58:36.389"/>
</kw>
<msg timestamp="20230831 17:58:36.389" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 17:58:32.366" endtime="20230831 17:58:36.389"/>
</kw>
<msg timestamp="20230831 17:58:36.389" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 17:58:32.365" endtime="20230831 17:58:36.389"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 17:58:36.390" endtime="20230831 17:58:36.390"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230831 17:58:32.364" endtime="20230831 17:58:36.390"/>
</test>
<test id="s1-s14-t4" name="Create key in the bucket in s3v volume" line="46">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: another key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 17:58:36.396" level="INFO">Running command 'echo "new1: another key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230831 17:58:36.398" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 17:58:36.398" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 17:58:36.393" endtime="20230831 17:58:36.398"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:58:36.399" level="INFO"/>
<status status="PASS" starttime="20230831 17:58:36.399" endtime="20230831 17:58:36.400"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 17:58:36.400" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 17:58:36.400" endtime="20230831 17:58:36.400"/>
</kw>
<status status="PASS" starttime="20230831 17:58:36.392" endtime="20230831 17:58:36.401"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /s3v/${PREFIX}-bucket/key1-shell /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 17:58:36.405" level="INFO">Running command 'ozone sh key put /s3v/new1-bucket/key1-shell /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 17:58:42.684" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 17:58:42.684" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 17:58:36.403" endtime="20230831 17:58:42.684"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:58:42.686" level="INFO"/>
<status status="PASS" starttime="20230831 17:58:42.685" endtime="20230831 17:58:42.686"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 17:58:42.687" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 17:58:42.686" endtime="20230831 17:58:42.687"/>
</kw>
<status status="PASS" starttime="20230831 17:58:36.402" endtime="20230831 17:58:42.687"/>
</kw>
<msg timestamp="20230831 17:58:42.687" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 17:58:36.402" endtime="20230831 17:58:42.688"/>
</kw>
<msg timestamp="20230831 17:58:42.688" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 17:58:36.401" endtime="20230831 17:58:42.688"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 17:58:42.688" endtime="20230831 17:58:42.689"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 17:58:42.693" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 17:58:42.696" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 17:58:42.696" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 17:58:42.690" endtime="20230831 17:58:42.696"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:58:42.697" level="INFO"/>
<status status="PASS" starttime="20230831 17:58:42.696" endtime="20230831 17:58:42.697"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 17:58:42.698" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 17:58:42.697" endtime="20230831 17:58:42.698"/>
</kw>
<status status="PASS" starttime="20230831 17:58:42.689" endtime="20230831 17:58:42.698"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230831 17:58:36.391" endtime="20230831 17:58:42.698"/>
</test>
<test id="s1-s14-t5" name="Setup credentials for S3" line="52">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 17:58:42.706" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 17:58:43.246" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 17:58:43.246" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 17:58:42.703" endtime="20230831 17:58:43.246"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:58:43.247" level="INFO"/>
<status status="PASS" starttime="20230831 17:58:43.246" endtime="20230831 17:58:43.247"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 17:58:43.248" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 17:58:43.247" endtime="20230831 17:58:43.248"/>
</kw>
<status status="PASS" starttime="20230831 17:58:42.703" endtime="20230831 17:58:43.248"/>
</kw>
<msg timestamp="20230831 17:58:43.248" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 17:58:42.702" endtime="20230831 17:58:43.248"/>
</kw>
<status status="PASS" starttime="20230831 17:58:42.701" endtime="20230831 17:58:43.248"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 17:58:43.252" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 17:58:43.794" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 17:58:43.794" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 17:58:43.250" endtime="20230831 17:58:43.794"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:58:43.795" level="INFO"/>
<status status="PASS" starttime="20230831 17:58:43.794" endtime="20230831 17:58:43.795"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 17:58:43.796" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 17:58:43.795" endtime="20230831 17:58:43.796"/>
</kw>
<status status="PASS" starttime="20230831 17:58:43.249" endtime="20230831 17:58:43.796"/>
</kw>
<msg timestamp="20230831 17:58:43.796" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 17:58:43.249" endtime="20230831 17:58:43.796"/>
</kw>
<status status="PASS" starttime="20230831 17:58:43.248" endtime="20230831 17:58:43.796"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 17:58:43.801" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 17:58:44.461" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 17:58:44.462" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 17:58:43.798" endtime="20230831 17:58:44.462"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:58:44.463" level="INFO"/>
<status status="PASS" starttime="20230831 17:58:44.462" endtime="20230831 17:58:44.463"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 17:58:44.464" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 17:58:44.463" endtime="20230831 17:58:44.464"/>
</kw>
<status status="PASS" starttime="20230831 17:58:43.797" endtime="20230831 17:58:44.464"/>
</kw>
<msg timestamp="20230831 17:58:44.464" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 17:58:43.797" endtime="20230831 17:58:44.464"/>
</kw>
<status status="PASS" starttime="20230831 17:58:43.797" endtime="20230831 17:58:44.464"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 17:58:44.469" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 17:58:45.065" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 17:58:45.065" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 17:58:44.466" endtime="20230831 17:58:45.065"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:58:45.067" level="INFO"/>
<status status="PASS" starttime="20230831 17:58:45.066" endtime="20230831 17:58:45.067"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 17:58:45.067" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 17:58:45.067" endtime="20230831 17:58:45.067"/>
</kw>
<status status="PASS" starttime="20230831 17:58:44.465" endtime="20230831 17:58:45.068"/>
</kw>
<msg timestamp="20230831 17:58:45.068" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 17:58:44.465" endtime="20230831 17:58:45.068"/>
</kw>
<status status="PASS" starttime="20230831 17:58:44.464" endtime="20230831 17:58:45.068"/>
</kw>
<status status="PASS" starttime="20230831 17:58:42.701" endtime="20230831 17:58:45.068"/>
</kw>
<status status="PASS" starttime="20230831 17:58:42.701" endtime="20230831 17:58:45.068"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230831 17:58:42.700" endtime="20230831 17:58:45.068"/>
</test>
<test id="s1-s14-t6" name="Try to create a bucket using S3 API" line="56">
<kw name="Create bucket with name" library="commonawslib">
<var>${output}</var>
<arg>${PREFIX}-bucket</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 17:58:45.076" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket new1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 17:58:45.826" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 17:58:45.826" level="INFO">${output} = {
    "Location": "http://s3g:9878/new1-bucket"
}</msg>
<status status="PASS" starttime="20230831 17:58:45.073" endtime="20230831 17:58:45.826"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:58:45.827" level="INFO">{
    "Location": "http://s3g:9878/new1-bucket"
}</msg>
<status status="PASS" starttime="20230831 17:58:45.826" endtime="20230831 17:58:45.827"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 17:58:45.828" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 17:58:45.827" endtime="20230831 17:58:45.828"/>
</kw>
<status status="PASS" starttime="20230831 17:58:45.072" endtime="20230831 17:58:45.828"/>
</kw>
<msg timestamp="20230831 17:58:45.828" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 17:58:45.072" endtime="20230831 17:58:45.828"/>
</kw>
<msg timestamp="20230831 17:58:45.828" level="INFO">${output} = {
    "Location": "http://s3g:9878/new1-bucket"
}</msg>
<status status="PASS" starttime="20230831 17:58:45.071" endtime="20230831 17:58:45.828"/>
</kw>
<msg timestamp="20230831 17:58:45.829" level="INFO">${result} = {
    "Location": "http://s3g:9878/new1-bucket"
}</msg>
<status status="PASS" starttime="20230831 17:58:45.071" endtime="20230831 17:58:45.829"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 17:58:45.829" endtime="20230831 17:58:45.829"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 17:58:45.829" endtime="20230831 17:58:45.830"/>
</kw>
<msg timestamp="20230831 17:58:45.830" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20230831 17:58:45.070" endtime="20230831 17:58:45.830"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230831 17:58:45.830" endtime="20230831 17:58:45.831"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230831 17:58:45.069" endtime="20230831 17:58:45.831"/>
</test>
<test id="s1-s14-t7" name="Create key using S3 API" line="61">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using S3 API" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 17:58:45.836" level="INFO">Running command 'echo "new1: key created using S3 API" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230831 17:58:45.838" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 17:58:45.838" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 17:58:45.833" endtime="20230831 17:58:45.838"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:58:45.839" level="INFO"/>
<status status="PASS" starttime="20230831 17:58:45.838" endtime="20230831 17:58:45.839"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 17:58:45.840" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 17:58:45.839" endtime="20230831 17:58:45.840"/>
</kw>
<status status="PASS" starttime="20230831 17:58:45.832" endtime="20230831 17:58:45.840"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>put-object --bucket ${PREFIX}-bucket --key key2-s3api --body /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 17:58:45.844" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket new1-bucket --key key2-s3api --body /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 17:58:47.012" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 17:58:47.012" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 17:58:45.842" endtime="20230831 17:58:47.012"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:58:47.013" level="INFO"/>
<status status="PASS" starttime="20230831 17:58:47.012" endtime="20230831 17:58:47.013"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 17:58:47.014" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 17:58:47.014" endtime="20230831 17:58:47.014"/>
</kw>
<msg timestamp="20230831 17:58:47.015" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 17:58:45.841" endtime="20230831 17:58:47.015"/>
</kw>
<msg timestamp="20230831 17:58:47.015" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 17:58:45.840" endtime="20230831 17:58:47.015"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 17:58:47.015" endtime="20230831 17:58:47.015"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 17:58:47.019" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 17:58:47.022" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 17:58:47.022" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 17:58:47.016" endtime="20230831 17:58:47.023"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:58:47.024" level="INFO"/>
<status status="PASS" starttime="20230831 17:58:47.023" endtime="20230831 17:58:47.024"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 17:58:47.024" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 17:58:47.024" endtime="20230831 17:58:47.025"/>
</kw>
<status status="PASS" starttime="20230831 17:58:47.016" endtime="20230831 17:58:47.025"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230831 17:58:45.832" endtime="20230831 17:58:47.025"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230831 17:58:17.911" endtime="20230831 17:58:47.026"/>
</suite>
<suite id="s1-s15" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s15-t1" name="Read data from previously created key" line="28">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230831 17:58:50.297" level="INFO">${random} = 08880</msg>
<status status="PASS" starttime="20230831 17:58:50.297" endtime="20230831 17:58:50.297"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 17:58:50.302" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-08880 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 17:58:55.999" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 17:58:55.999" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 17:58:50.299" endtime="20230831 17:58:55.999"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:58:56.001" level="INFO"/>
<status status="PASS" starttime="20230831 17:58:56.000" endtime="20230831 17:58:56.001"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 17:58:56.002" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 17:58:56.001" endtime="20230831 17:58:56.002"/>
</kw>
<status status="PASS" starttime="20230831 17:58:50.298" endtime="20230831 17:58:56.002"/>
</kw>
<msg timestamp="20230831 17:58:56.002" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 17:58:50.298" endtime="20230831 17:58:56.002"/>
</kw>
<msg timestamp="20230831 17:58:56.002" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 17:58:50.297" endtime="20230831 17:58:56.002"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 17:58:56.003" endtime="20230831 17:58:56.003"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 17:58:56.007" level="INFO">Running command 'cat /tmp/key-08880 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 17:58:56.010" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 17:58:56.010" level="INFO">${output} = new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230831 17:58:56.004" endtime="20230831 17:58:56.010"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:58:56.012" level="INFO">new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230831 17:58:56.011" endtime="20230831 17:58:56.012"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 17:58:56.013" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 17:58:56.012" endtime="20230831 17:58:56.013"/>
</kw>
<msg timestamp="20230831 17:58:56.013" level="INFO">${output} = new1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230831 17:58:56.003" endtime="20230831 17:58:56.013"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 17:58:56.013" endtime="20230831 17:58:56.014"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 17:58:56.017" level="INFO">Running command 'rm /tmp/key-08880 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 17:58:56.020" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 17:58:56.020" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 17:58:56.015" endtime="20230831 17:58:56.021"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:58:56.022" level="INFO"/>
<status status="PASS" starttime="20230831 17:58:56.021" endtime="20230831 17:58:56.022"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 17:58:56.022" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 17:58:56.022" endtime="20230831 17:58:56.023"/>
</kw>
<status status="PASS" starttime="20230831 17:58:56.014" endtime="20230831 17:58:56.023"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230831 17:58:50.296" endtime="20230831 17:58:56.023"/>
</test>
<test id="s1-s15-t2" name="Setup credentials for S3" line="36">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 17:58:56.029" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 17:58:56.646" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 17:58:56.646" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 17:58:56.027" endtime="20230831 17:58:56.646"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:58:56.648" level="INFO"/>
<status status="PASS" starttime="20230831 17:58:56.647" endtime="20230831 17:58:56.648"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 17:58:56.649" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 17:58:56.648" endtime="20230831 17:58:56.649"/>
</kw>
<status status="PASS" starttime="20230831 17:58:56.027" endtime="20230831 17:58:56.649"/>
</kw>
<msg timestamp="20230831 17:58:56.649" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 17:58:56.026" endtime="20230831 17:58:56.650"/>
</kw>
<status status="PASS" starttime="20230831 17:58:56.026" endtime="20230831 17:58:56.650"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 17:58:56.655" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 17:58:57.284" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 17:58:57.284" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 17:58:56.652" endtime="20230831 17:58:57.284"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:58:57.286" level="INFO"/>
<status status="PASS" starttime="20230831 17:58:57.285" endtime="20230831 17:58:57.287"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 17:58:57.288" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 17:58:57.287" endtime="20230831 17:58:57.288"/>
</kw>
<status status="PASS" starttime="20230831 17:58:56.651" endtime="20230831 17:58:57.288"/>
</kw>
<msg timestamp="20230831 17:58:57.288" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 17:58:56.651" endtime="20230831 17:58:57.288"/>
</kw>
<status status="PASS" starttime="20230831 17:58:56.650" endtime="20230831 17:58:57.289"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 17:58:57.294" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 17:58:57.849" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 17:58:57.849" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 17:58:57.291" endtime="20230831 17:58:57.850"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:58:57.851" level="INFO"/>
<status status="PASS" starttime="20230831 17:58:57.850" endtime="20230831 17:58:57.851"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 17:58:57.852" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 17:58:57.852" endtime="20230831 17:58:57.852"/>
</kw>
<status status="PASS" starttime="20230831 17:58:57.290" endtime="20230831 17:58:57.853"/>
</kw>
<msg timestamp="20230831 17:58:57.853" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 17:58:57.289" endtime="20230831 17:58:57.853"/>
</kw>
<status status="PASS" starttime="20230831 17:58:57.289" endtime="20230831 17:58:57.853"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 17:58:57.859" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 17:58:58.430" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 17:58:58.430" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 17:58:57.855" endtime="20230831 17:58:58.430"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:58:58.432" level="INFO"/>
<status status="PASS" starttime="20230831 17:58:58.431" endtime="20230831 17:58:58.432"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 17:58:58.432" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 17:58:58.432" endtime="20230831 17:58:58.433"/>
</kw>
<status status="PASS" starttime="20230831 17:58:57.854" endtime="20230831 17:58:58.433"/>
</kw>
<msg timestamp="20230831 17:58:58.433" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 17:58:57.854" endtime="20230831 17:58:58.433"/>
</kw>
<status status="PASS" starttime="20230831 17:58:57.853" endtime="20230831 17:58:58.433"/>
</kw>
<status status="PASS" starttime="20230831 17:58:56.026" endtime="20230831 17:58:58.433"/>
</kw>
<status status="PASS" starttime="20230831 17:58:56.025" endtime="20230831 17:58:58.433"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230831 17:58:56.024" endtime="20230831 17:58:58.433"/>
</test>
<test id="s1-s15-t3" name="Read key created with Ozone Shell using S3 API" line="40">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 17:58:58.439" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket new1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 17:58:59.259" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 17:58:59.259" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 31 Aug 2023 17:58:42 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230831 17:58:58.437" endtime="20230831 17:58:59.259"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:58:59.260" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 31 Aug 2023 17:58:42 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 31 Aug 2023 17:58:59 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230831 17:58:59.259" endtime="20230831 17:58:59.261"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 17:58:59.261" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 17:58:59.261" endtime="20230831 17:58:59.262"/>
</kw>
<msg timestamp="20230831 17:58:59.262" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 31 Aug 2023 17:58:42 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230831 17:58:58.436" endtime="20230831 17:58:59.262"/>
</kw>
<msg timestamp="20230831 17:58:59.262" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 31 Aug 2023 17:58:42 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230831 17:58:58.435" endtime="20230831 17:58:59.262"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 17:58:59.262" endtime="20230831 17:58:59.263"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 17:58:59.266" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 17:58:59.269" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 17:58:59.269" level="INFO">${output} = new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230831 17:58:59.264" endtime="20230831 17:58:59.269"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:58:59.271" level="INFO">new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230831 17:58:59.270" endtime="20230831 17:58:59.271"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 17:58:59.272" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 17:58:59.272" endtime="20230831 17:58:59.272"/>
</kw>
<msg timestamp="20230831 17:58:59.273" level="INFO">${output} = new1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230831 17:58:59.263" endtime="20230831 17:58:59.273"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 17:58:59.273" endtime="20230831 17:58:59.275"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 17:58:59.278" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 17:58:59.281" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 17:58:59.282" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 17:58:59.276" endtime="20230831 17:58:59.282"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:58:59.283" level="INFO"/>
<status status="PASS" starttime="20230831 17:58:59.282" endtime="20230831 17:58:59.283"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 17:58:59.284" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 17:58:59.284" endtime="20230831 17:58:59.284"/>
</kw>
<status status="PASS" starttime="20230831 17:58:59.275" endtime="20230831 17:58:59.284"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230831 17:58:58.434" endtime="20230831 17:58:59.288"/>
</test>
<test id="s1-s15-t4" name="Read key created with S3 API using S3 API" line="47">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 17:58:59.294" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket new1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 17:59:00.100" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 17:59:00.100" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 31 Aug 2023 17:58:46 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230831 17:58:59.291" endtime="20230831 17:59:00.100"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:59:00.101" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 31 Aug 2023 17:58:46 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 31 Aug 2023 17:58:59 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230831 17:59:00.101" endtime="20230831 17:59:00.102"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 17:59:00.102" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 17:59:00.102" endtime="20230831 17:59:00.102"/>
</kw>
<msg timestamp="20230831 17:59:00.103" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 31 Aug 2023 17:58:46 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230831 17:58:59.290" endtime="20230831 17:59:00.103"/>
</kw>
<msg timestamp="20230831 17:59:00.103" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 31 Aug 2023 17:58:46 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230831 17:58:59.290" endtime="20230831 17:59:00.103"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 17:59:00.103" endtime="20230831 17:59:00.104"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 17:59:00.107" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 17:59:00.110" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 17:59:00.110" level="INFO">${output} = new1: key created using S3 API</msg>
<status status="PASS" starttime="20230831 17:59:00.104" endtime="20230831 17:59:00.110"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:59:00.112" level="INFO">new1: key created using S3 API</msg>
<status status="PASS" starttime="20230831 17:59:00.111" endtime="20230831 17:59:00.112"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 17:59:00.113" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 17:59:00.112" endtime="20230831 17:59:00.113"/>
</kw>
<msg timestamp="20230831 17:59:00.113" level="INFO">${output} = new1: key created using S3 API</msg>
<status status="PASS" starttime="20230831 17:59:00.104" endtime="20230831 17:59:00.113"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 17:59:00.113" endtime="20230831 17:59:00.114"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 17:59:00.117" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 17:59:00.130" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 17:59:00.130" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 17:59:00.115" endtime="20230831 17:59:00.130"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:59:00.131" level="INFO"/>
<status status="PASS" starttime="20230831 17:59:00.130" endtime="20230831 17:59:00.131"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 17:59:00.132" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 17:59:00.131" endtime="20230831 17:59:00.132"/>
</kw>
<status status="PASS" starttime="20230831 17:59:00.114" endtime="20230831 17:59:00.132"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230831 17:58:59.289" endtime="20230831 17:59:00.132"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230831 17:58:50.213" endtime="20230831 17:59:00.134"/>
</suite>
<suite id="s1-s16" name="Check-Finalization" source="/opt/hadoop/smoketest/upgrade/check-finalization.robot">
<test id="s1-s16-t1" name="Check OM Pre Finalized" line="39">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230831 17:59:03.409" endtime="20230831 17:59:03.409"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 17:59:03.414" level="INFO">Running command 'ozone admin om finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 17:59:07.916" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 17:59:07.916" level="INFO">${output} = FINALIZATION_REQUIRED</msg>
<status status="PASS" starttime="20230831 17:59:03.411" endtime="20230831 17:59:07.916"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:59:07.917" level="INFO">FINALIZATION_REQUIRED</msg>
<status status="PASS" starttime="20230831 17:59:07.917" endtime="20230831 17:59:07.918"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 17:59:07.918" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 17:59:07.918" endtime="20230831 17:59:07.918"/>
</kw>
<status status="PASS" starttime="20230831 17:59:03.410" endtime="20230831 17:59:07.919"/>
</kw>
<msg timestamp="20230831 17:59:07.919" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 17:59:03.410" endtime="20230831 17:59:07.919"/>
</kw>
<msg timestamp="20230831 17:59:07.919" level="INFO">${result} = FINALIZATION_REQUIRED</msg>
<status status="PASS" starttime="20230831 17:59:03.409" endtime="20230831 17:59:07.919"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:59:07.920" level="INFO">FINALIZATION_REQUIRED</msg>
<status status="PASS" starttime="20230831 17:59:07.919" endtime="20230831 17:59:07.920"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>FINALIZATION_REQUIRED</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20230831 17:59:07.920" endtime="20230831 17:59:07.920"/>
</kw>
<tag>om</tag>
<tag>pre-finalized</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230831 17:59:03.402" endtime="20230831 17:59:07.920"/>
</test>
<test id="s1-s16-t2" name="Check SCM Pre Finalized" line="45">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230831 17:59:07.922" endtime="20230831 17:59:07.923"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 17:59:07.927" level="INFO">Running command 'ozone admin scm finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 17:59:12.279" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 17:59:12.279" level="INFO">${output} = FINALIZATION_REQUIRED</msg>
<status status="PASS" starttime="20230831 17:59:07.924" endtime="20230831 17:59:12.279"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:59:12.281" level="INFO">FINALIZATION_REQUIRED</msg>
<status status="PASS" starttime="20230831 17:59:12.280" endtime="20230831 17:59:12.281"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 17:59:12.282" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 17:59:12.281" endtime="20230831 17:59:12.282"/>
</kw>
<status status="PASS" starttime="20230831 17:59:07.924" endtime="20230831 17:59:12.282"/>
</kw>
<msg timestamp="20230831 17:59:12.282" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 17:59:07.923" endtime="20230831 17:59:12.282"/>
</kw>
<msg timestamp="20230831 17:59:12.283" level="INFO">${result} = FINALIZATION_REQUIRED</msg>
<status status="PASS" starttime="20230831 17:59:07.923" endtime="20230831 17:59:12.283"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:59:12.283" level="INFO">FINALIZATION_REQUIRED</msg>
<status status="PASS" starttime="20230831 17:59:12.283" endtime="20230831 17:59:12.283"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>FINALIZATION_REQUIRED</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20230831 17:59:12.284" endtime="20230831 17:59:12.284"/>
</kw>
<tag>pre-finalized</tag>
<tag>scm</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230831 17:59:07.921" endtime="20230831 17:59:12.284"/>
</test>
<doc>Finalize Upgrade of the Ozone cluster</doc>
<status status="PASS" starttime="20230831 17:59:03.341" endtime="20230831 17:59:12.286"/>
</suite>
<suite id="s1-s17" name="Upgrade-Snapshot-Check" source="/opt/hadoop/smoketest/snapshot/upgrade-snapshot-check.robot">
<test id="s1-s17-t1" name="Attempt to create snapshot when snapshot feature is disabled" line="28">
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>ozone sh volume create snapvolume-2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 17:59:15.484" level="INFO">Running command 'ozone sh volume create snapvolume-2 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 17:59:19.424" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 17:59:19.424" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 17:59:15.480" endtime="20230831 17:59:19.425"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:59:19.426" level="INFO"/>
<status status="PASS" starttime="20230831 17:59:19.425" endtime="20230831 17:59:19.427"/>
</kw>
<msg timestamp="20230831 17:59:19.427" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 17:59:15.479" endtime="20230831 17:59:19.427"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 17:59:19.427" endtime="20230831 17:59:19.428"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /snapvolume-2/snapbucket-1</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 17:59:19.432" level="INFO">Running command 'ozone sh bucket create /snapvolume-2/snapbucket-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 17:59:23.058" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 17:59:23.059" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 17:59:19.429" endtime="20230831 17:59:23.059"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:59:23.060" level="INFO"/>
<status status="PASS" starttime="20230831 17:59:23.059" endtime="20230831 17:59:23.060"/>
</kw>
<msg timestamp="20230831 17:59:23.060" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 17:59:19.428" endtime="20230831 17:59:23.060"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 17:59:23.061" endtime="20230831 17:59:23.061"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>ozone sh snapshot create /snapvolume-2/snapbucket-1 snapshot1</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 17:59:23.066" level="INFO">Running command 'ozone sh snapshot create /snapvolume-2/snapbucket-1 snapshot1 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 17:59:26.914" level="INFO">${rc} = 255</msg>
<msg timestamp="20230831 17:59:26.914" level="INFO">${output} = NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OMSnapshotCreateRequest.preExecute(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layout ve...</msg>
<status status="PASS" starttime="20230831 17:59:23.062" endtime="20230831 17:59:26.914"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:59:26.916" level="INFO">NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OMSnapshotCreateRequest.preExecute(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layout version is 5. Current Layout version is 3</msg>
<status status="PASS" starttime="20230831 17:59:26.915" endtime="20230831 17:59:26.916"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 17:59:26.917" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 17:59:26.916" endtime="20230831 17:59:26.917"/>
</kw>
<msg timestamp="20230831 17:59:26.917" level="INFO">${output} = NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OMSnapshotCreateRequest.preExecute(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layout ve...</msg>
<status status="PASS" starttime="20230831 17:59:23.061" endtime="20230831 17:59:26.917"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>NOT_SUPPORTED_OPERATION</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 17:59:26.918" endtime="20230831 17:59:26.918"/>
</kw>
<tag>pre-finalized-snapshot-tests</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230831 17:59:15.478" endtime="20230831 17:59:26.918"/>
</test>
<test id="s1-s17-t2" name="Attempt to list snapshot when snapshot feature is disabled" line="36">
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>ozone sh snapshot ls /snapvolume-2/snapbucket-1</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 17:59:26.924" level="INFO">Running command 'ozone sh snapshot ls /snapvolume-2/snapbucket-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 17:59:31.000" level="INFO">${rc} = 255</msg>
<msg timestamp="20230831 17:59:31.000" level="INFO">${output} = NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OzoneManagerRequestHandler.getSnapshots(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layo...</msg>
<status status="PASS" starttime="20230831 17:59:26.922" endtime="20230831 17:59:31.000"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:59:31.002" level="INFO">NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OzoneManagerRequestHandler.getSnapshots(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layout version is 5. Current Layout version is 3</msg>
<status status="PASS" starttime="20230831 17:59:31.001" endtime="20230831 17:59:31.002"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 17:59:31.003" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 17:59:31.002" endtime="20230831 17:59:31.003"/>
</kw>
<msg timestamp="20230831 17:59:31.003" level="INFO">${output} = NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OzoneManagerRequestHandler.getSnapshots(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layo...</msg>
<status status="PASS" starttime="20230831 17:59:26.921" endtime="20230831 17:59:31.003"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>NOT_SUPPORTED_OPERATION</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 17:59:31.004" endtime="20230831 17:59:31.004"/>
</kw>
<tag>pre-finalized-snapshot-tests</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230831 17:59:26.920" endtime="20230831 17:59:31.004"/>
</test>
<test id="s1-s17-t3" name="Attempt to snapshotDiff when snapshot feature is disabled" line="40">
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>ozone sh snapshot snapshotDiff /snapvolume-2/snapbucket-1 snapshot1 snapshot2</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 17:59:31.011" level="INFO">Running command 'ozone sh snapshot snapshotDiff /snapvolume-2/snapbucket-1 snapshot1 snapshot2 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 17:59:34.702" level="INFO">${rc} = 255</msg>
<msg timestamp="20230831 17:59:34.703" level="INFO">${output} = NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OzoneManagerRequestHandler.snapshotDiff(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layo...</msg>
<status status="PASS" starttime="20230831 17:59:31.008" endtime="20230831 17:59:34.703"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:59:34.704" level="INFO">NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OzoneManagerRequestHandler.snapshotDiff(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layout version is 5. Current Layout version is 3</msg>
<status status="PASS" starttime="20230831 17:59:34.703" endtime="20230831 17:59:34.704"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 17:59:34.705" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 17:59:34.704" endtime="20230831 17:59:34.705"/>
</kw>
<msg timestamp="20230831 17:59:34.705" level="INFO">${output} = NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OzoneManagerRequestHandler.snapshotDiff(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layo...</msg>
<status status="PASS" starttime="20230831 17:59:31.007" endtime="20230831 17:59:34.705"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>NOT_SUPPORTED_OPERATION</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 17:59:34.706" endtime="20230831 17:59:34.706"/>
</kw>
<tag>pre-finalized-snapshot-tests</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230831 17:59:31.006" endtime="20230831 17:59:34.706"/>
</test>
<test id="s1-s17-t4" name="Attempt to delete when snapshot feature is disabled" line="44">
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>ozone sh snapshot delete /snapvolume-2/snapbucket-1 snapshot1</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 17:59:34.712" level="INFO">Running command 'ozone sh snapshot delete /snapvolume-2/snapbucket-1 snapshot1 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 17:59:38.593" level="INFO">${rc} = 255</msg>
<msg timestamp="20230831 17:59:38.594" level="INFO">${output} = NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OMSnapshotDeleteRequest.preExecute(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layout ve...</msg>
<status status="PASS" starttime="20230831 17:59:34.709" endtime="20230831 17:59:38.594"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:59:38.596" level="INFO">NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OMSnapshotDeleteRequest.preExecute(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layout version is 5. Current Layout version is 3</msg>
<status status="PASS" starttime="20230831 17:59:38.594" endtime="20230831 17:59:38.596"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 17:59:38.596" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 17:59:38.596" endtime="20230831 17:59:38.596"/>
</kw>
<msg timestamp="20230831 17:59:38.597" level="INFO">${output} = NOT_SUPPORTED_OPERATION_PRIOR_FINALIZATION Operation OMSnapshotDeleteRequest.preExecute(..) cannot be invoked before finalization. It belongs to the layout feature FILESYSTEM_SNAPSHOT, whose layout ve...</msg>
<status status="PASS" starttime="20230831 17:59:34.708" endtime="20230831 17:59:38.597"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>NOT_SUPPORTED_OPERATION</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 17:59:38.597" endtime="20230831 17:59:38.597"/>
</kw>
<tag>pre-finalized-snapshot-tests</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230831 17:59:34.707" endtime="20230831 17:59:38.598"/>
</test>
<doc>Smoketest ozone cluster snapshot feature</doc>
<status status="PASS" starttime="20230831 17:59:15.419" endtime="20230831 17:59:38.600"/>
</suite>
<suite id="s1-s18" name="Prepare" source="/opt/hadoop/smoketest/upgrade/prepare.robot">
<test id="s1-s18-t1" name="Prepare Ozone Manager" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230831 17:59:41.910" endtime="20230831 17:59:41.911"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM prepare is skipped for version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230831 17:59:41.911" endtime="20230831 17:59:41.911"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 17:59:41.920" level="INFO">Running command 'ozone admin om prepare -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 17:59:51.629" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 17:59:51.630" level="INFO">${output} = Ozone Manager Prepare Request successfully returned with Transaction Id : [67].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Cu...</msg>
<status status="PASS" starttime="20230831 17:59:41.913" endtime="20230831 17:59:51.630"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 17:59:51.632" level="INFO">Ozone Manager Prepare Request successfully returned with Transaction Id : [67].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [67]
OM : [om3], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [67]
OM : [om2], Prepare Status : [PREPARE_COMPLETED], Current Transaction Id : [67]

OM Preparation successful! 
All OMs are prepared
No new write requests will be allowed until preparation is cancelled or upgrade/downgrade is done.</msg>
<status status="PASS" starttime="20230831 17:59:51.630" endtime="20230831 17:59:51.632"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 17:59:51.633" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 17:59:51.632" endtime="20230831 17:59:51.633"/>
</kw>
<status status="PASS" starttime="20230831 17:59:41.913" endtime="20230831 17:59:51.633"/>
</kw>
<msg timestamp="20230831 17:59:51.634" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 17:59:41.912" endtime="20230831 17:59:51.634"/>
</kw>
<msg timestamp="20230831 17:59:51.634" level="INFO">${result} = Ozone Manager Prepare Request successfully returned with Transaction Id : [67].

Checking individual OM instances for prepare request completion...
OM : [om1], Prepare Status : [PREPARE_COMPLETED], Cu...</msg>
<status status="PASS" starttime="20230831 17:59:41.911" endtime="20230831 17:59:51.634"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 17:59:51.635" endtime="20230831 17:59:51.636"/>
</kw>
<status status="PASS" starttime="20230831 17:59:51.635" endtime="20230831 17:59:51.636"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230831 17:59:41.909" endtime="20230831 17:59:51.636"/>
</test>
<doc>Prepares OMs</doc>
<status status="PASS" starttime="20230831 17:59:41.840" endtime="20230831 17:59:51.639"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="533158"/>
</suite>
<statistics>
<total>
<stat pass="67" fail="1" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="6" fail="0" skip="0">create-volume-and-bucket</stat>
<stat pass="4" fail="0" skip="0">finalized</stat>
<stat pass="3" fail="0" skip="0">om</stat>
<stat pass="2" fail="0" skip="0">pre-finalized</stat>
<stat pass="4" fail="0" skip="0">pre-finalized-snapshot-tests</stat>
<stat pass="3" fail="0" skip="0">scm</stat>
</tag>
<suite>
<stat pass="67" fail="1" skip="0" id="s1" name="upgrade">upgrade</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1" name="Check-Finalization">upgrade.Check-Finalization</stat>
<stat pass="4" fail="0" skip="0" id="s1-s2" name="Validate">upgrade.Validate</stat>
<stat pass="4" fail="0" skip="0" id="s1-s3" name="Validate">upgrade.Validate</stat>
<stat pass="7" fail="0" skip="0" id="s1-s4" name="Generate">upgrade.Generate</stat>
<stat pass="4" fail="0" skip="0" id="s1-s5" name="Validate">upgrade.Validate</stat>
<stat pass="5" fail="0" skip="0" id="s1-s6" name="Generate">upgrade.Generate</stat>
<stat pass="0" fail="1" skip="0" id="s1-s7" name="Prepare">upgrade.Prepare</stat>
<stat pass="2" fail="0" skip="0" id="s1-s8" name="Check-Finalization">upgrade.Check-Finalization</stat>
<stat pass="7" fail="0" skip="0" id="s1-s9" name="Generate">upgrade.Generate</stat>
<stat pass="4" fail="0" skip="0" id="s1-s10" name="Validate">upgrade.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s11" name="Prepare">upgrade.Prepare</stat>
<stat pass="4" fail="0" skip="0" id="s1-s12" name="Validate">upgrade.Validate</stat>
<stat pass="5" fail="0" skip="0" id="s1-s13" name="Generate">upgrade.Generate</stat>
<stat pass="7" fail="0" skip="0" id="s1-s14" name="Generate">upgrade.Generate</stat>
<stat pass="4" fail="0" skip="0" id="s1-s15" name="Validate">upgrade.Validate</stat>
<stat pass="2" fail="0" skip="0" id="s1-s16" name="Check-Finalization">upgrade.Check-Finalization</stat>
<stat pass="4" fail="0" skip="0" id="s1-s17" name="Upgrade-Snapshot-Check">upgrade.Upgrade-Snapshot-Check</stat>
<stat pass="1" fail="0" skip="0" id="s1-s18" name="Prepare">upgrade.Prepare</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
