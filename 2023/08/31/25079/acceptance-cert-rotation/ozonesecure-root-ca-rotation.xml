<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20230831 13:47:43.083" rpa="false" schemaversion="4">
<suite id="s1" name="ozonesecure-root-ca-rotation">
<suite id="s1-s1" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s1-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 13:44:48.985" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 13:44:48.992" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 13:44:48.992" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230831 13:44:48.978" endtime="20230831 13:44:48.992"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 13:44:48.995" level="INFO">scm</msg>
<status status="PASS" starttime="20230831 13:44:48.995" endtime="20230831 13:44:48.996"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 13:44:48.996" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 13:44:48.996" endtime="20230831 13:44:48.998"/>
</kw>
<status status="PASS" starttime="20230831 13:44:48.976" endtime="20230831 13:44:48.998"/>
</kw>
<msg timestamp="20230831 13:44:48.998" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 13:44:48.976" endtime="20230831 13:44:48.998"/>
</kw>
<msg timestamp="20230831 13:44:48.999" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230831 13:44:48.974" endtime="20230831 13:44:48.999"/>
</kw>
<msg timestamp="20230831 13:44:49.000" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230831 13:44:48.973" endtime="20230831 13:44:49.000"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230831 13:44:49.003" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230831 13:44:49.001" endtime="20230831 13:44:49.003"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 13:44:49.021" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 13:44:49.128" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 13:44:49.128" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 13:44:49.008" endtime="20230831 13:44:49.128"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 13:44:49.139" level="INFO"/>
<status status="PASS" starttime="20230831 13:44:49.131" endtime="20230831 13:44:49.143"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 13:44:49.146" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 13:44:49.145" endtime="20230831 13:44:49.150"/>
</kw>
<status status="PASS" starttime="20230831 13:44:49.007" endtime="20230831 13:44:49.151"/>
</kw>
<msg timestamp="20230831 13:44:49.151" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 13:44:49.005" endtime="20230831 13:44:49.151"/>
</kw>
<status status="PASS" starttime="20230831 13:44:49.005" endtime="20230831 13:44:49.151"/>
</kw>
<status status="PASS" starttime="20230831 13:44:49.003" endtime="20230831 13:44:49.151"/>
</kw>
<status status="PASS" starttime="20230831 13:44:48.971" endtime="20230831 13:44:49.151"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230831 13:44:48.969" endtime="20230831 13:44:49.151"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20230831 13:44:48.786" endtime="20230831 13:44:49.163"/>
</suite>
<suite id="s1-s2" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s2-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 13:45:08.890" level="INFO">Running command 'ozone sh volume create rootca-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 13:45:17.898" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 13:45:17.898" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 13:45:08.887" endtime="20230831 13:45:17.898"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 13:45:17.899" level="INFO"/>
<status status="PASS" starttime="20230831 13:45:17.899" endtime="20230831 13:45:17.900"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 13:45:17.900" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 13:45:17.900" endtime="20230831 13:45:17.900"/>
</kw>
<status status="PASS" starttime="20230831 13:45:08.886" endtime="20230831 13:45:17.901"/>
</kw>
<msg timestamp="20230831 13:45:17.901" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 13:45:08.886" endtime="20230831 13:45:17.901"/>
</kw>
<msg timestamp="20230831 13:45:17.901" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 13:45:08.885" endtime="20230831 13:45:17.901"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 13:45:17.901" endtime="20230831 13:45:17.902"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 13:45:17.907" level="INFO">Running command 'ozone sh bucket create /rootca-volume/rootca-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 13:45:23.997" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 13:45:23.998" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 13:45:17.903" endtime="20230831 13:45:23.998"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 13:45:23.999" level="INFO"/>
<status status="PASS" starttime="20230831 13:45:23.998" endtime="20230831 13:45:23.999"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 13:45:24.000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 13:45:23.999" endtime="20230831 13:45:24.000"/>
</kw>
<status status="PASS" starttime="20230831 13:45:17.903" endtime="20230831 13:45:24.000"/>
</kw>
<msg timestamp="20230831 13:45:24.000" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 13:45:17.902" endtime="20230831 13:45:24.000"/>
</kw>
<msg timestamp="20230831 13:45:24.001" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 13:45:17.902" endtime="20230831 13:45:24.001"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 13:45:24.001" endtime="20230831 13:45:24.001"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230831 13:45:08.884" endtime="20230831 13:45:24.002"/>
</test>
<test id="s1-s2-t2" name="Create key" line="34">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 13:45:24.007" level="INFO">Running command 'echo "rootca: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230831 13:45:24.009" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 13:45:24.009" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 13:45:24.003" endtime="20230831 13:45:24.009"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 13:45:24.010" level="INFO"/>
<status status="PASS" starttime="20230831 13:45:24.010" endtime="20230831 13:45:24.010"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 13:45:24.011" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 13:45:24.011" endtime="20230831 13:45:24.011"/>
</kw>
<status status="PASS" starttime="20230831 13:45:24.003" endtime="20230831 13:45:24.011"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 13:45:24.016" level="INFO">Running command 'ozone sh key put /rootca-volume/rootca-bucket/rootca-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 13:45:37.207" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 13:45:37.207" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 13:45:24.014" endtime="20230831 13:45:37.207"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 13:45:37.208" level="INFO"/>
<status status="PASS" starttime="20230831 13:45:37.207" endtime="20230831 13:45:37.209"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 13:45:37.209" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 13:45:37.209" endtime="20230831 13:45:37.210"/>
</kw>
<status status="PASS" starttime="20230831 13:45:24.013" endtime="20230831 13:45:37.210"/>
</kw>
<msg timestamp="20230831 13:45:37.210" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 13:45:24.013" endtime="20230831 13:45:37.210"/>
</kw>
<msg timestamp="20230831 13:45:37.210" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 13:45:24.012" endtime="20230831 13:45:37.210"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 13:45:37.210" endtime="20230831 13:45:37.211"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 13:45:37.214" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 13:45:37.218" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 13:45:37.218" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 13:45:37.212" endtime="20230831 13:45:37.218"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 13:45:37.221" level="INFO"/>
<status status="PASS" starttime="20230831 13:45:37.219" endtime="20230831 13:45:37.221"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 13:45:37.221" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 13:45:37.221" endtime="20230831 13:45:37.222"/>
</kw>
<status status="PASS" starttime="20230831 13:45:37.211" endtime="20230831 13:45:37.222"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230831 13:45:24.002" endtime="20230831 13:45:37.222"/>
</test>
<test id="s1-s2-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230831 13:45:37.225" level="INFO">${random} = 59326</msg>
<status status="PASS" starttime="20230831 13:45:37.224" endtime="20230831 13:45:37.225"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 13:45:37.232" level="INFO">Running command 'ozone sh key get /rootca-volume/rootca-bucket/rootca-key /tmp/key-59326 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 13:45:48.366" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 13:45:48.366" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 13:45:37.229" endtime="20230831 13:45:48.366"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 13:45:48.368" level="INFO"/>
<status status="PASS" starttime="20230831 13:45:48.367" endtime="20230831 13:45:48.368"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 13:45:48.369" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 13:45:48.368" endtime="20230831 13:45:48.369"/>
</kw>
<status status="PASS" starttime="20230831 13:45:37.228" endtime="20230831 13:45:48.369"/>
</kw>
<msg timestamp="20230831 13:45:48.369" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 13:45:37.228" endtime="20230831 13:45:48.369"/>
</kw>
<msg timestamp="20230831 13:45:48.369" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 13:45:37.225" endtime="20230831 13:45:48.369"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 13:45:48.370" endtime="20230831 13:45:48.370"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 13:45:48.374" level="INFO">Running command 'cat /tmp/key-59326 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 13:45:48.378" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 13:45:48.378" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230831 13:45:48.371" endtime="20230831 13:45:48.378"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 13:45:48.379" level="INFO">rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230831 13:45:48.378" endtime="20230831 13:45:48.379"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 13:45:48.380" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 13:45:48.379" endtime="20230831 13:45:48.380"/>
</kw>
<msg timestamp="20230831 13:45:48.380" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230831 13:45:48.370" endtime="20230831 13:45:48.380"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 13:45:48.381" endtime="20230831 13:45:48.381"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 13:45:48.385" level="INFO">Running command 'rm /tmp/key-59326 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 13:45:48.388" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 13:45:48.388" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 13:45:48.382" endtime="20230831 13:45:48.388"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 13:45:48.390" level="INFO"/>
<status status="PASS" starttime="20230831 13:45:48.389" endtime="20230831 13:45:48.390"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 13:45:48.391" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 13:45:48.390" endtime="20230831 13:45:48.391"/>
</kw>
<status status="PASS" starttime="20230831 13:45:48.381" endtime="20230831 13:45:48.391"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230831 13:45:37.223" endtime="20230831 13:45:48.391"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230831 13:45:08.826" endtime="20230831 13:45:48.393"/>
</suite>
<suite id="s1-s3" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s3-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 13:46:41.046" level="INFO">Running command 'ozone sh volume create rootca2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 13:46:48.954" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 13:46:48.954" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 13:46:41.043" endtime="20230831 13:46:48.954"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 13:46:48.956" level="INFO"/>
<status status="PASS" starttime="20230831 13:46:48.955" endtime="20230831 13:46:48.956"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 13:46:48.957" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 13:46:48.956" endtime="20230831 13:46:48.957"/>
</kw>
<status status="PASS" starttime="20230831 13:46:41.042" endtime="20230831 13:46:48.957"/>
</kw>
<msg timestamp="20230831 13:46:48.957" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 13:46:41.042" endtime="20230831 13:46:48.957"/>
</kw>
<msg timestamp="20230831 13:46:48.958" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 13:46:41.041" endtime="20230831 13:46:48.958"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 13:46:48.958" endtime="20230831 13:46:48.958"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 13:46:48.963" level="INFO">Running command 'ozone sh bucket create /rootca2-volume/rootca2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 13:46:55.616" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 13:46:55.616" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 13:46:48.960" endtime="20230831 13:46:55.617"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 13:46:55.618" level="INFO"/>
<status status="PASS" starttime="20230831 13:46:55.617" endtime="20230831 13:46:55.618"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 13:46:55.619" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 13:46:55.619" endtime="20230831 13:46:55.619"/>
</kw>
<status status="PASS" starttime="20230831 13:46:48.960" endtime="20230831 13:46:55.620"/>
</kw>
<msg timestamp="20230831 13:46:55.620" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 13:46:48.959" endtime="20230831 13:46:55.620"/>
</kw>
<msg timestamp="20230831 13:46:55.620" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 13:46:48.958" endtime="20230831 13:46:55.620"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 13:46:55.620" endtime="20230831 13:46:55.621"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230831 13:46:41.041" endtime="20230831 13:46:55.621"/>
</test>
<test id="s1-s3-t2" name="Create key" line="34">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 13:46:55.627" level="INFO">Running command 'echo "rootca2: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230831 13:46:55.630" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 13:46:55.630" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 13:46:55.624" endtime="20230831 13:46:55.630"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 13:46:55.631" level="INFO"/>
<status status="PASS" starttime="20230831 13:46:55.630" endtime="20230831 13:46:55.631"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 13:46:55.632" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 13:46:55.631" endtime="20230831 13:46:55.632"/>
</kw>
<status status="PASS" starttime="20230831 13:46:55.623" endtime="20230831 13:46:55.632"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 13:46:55.637" level="INFO">Running command 'ozone sh key put /rootca2-volume/rootca2-bucket/rootca2-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 13:47:07.078" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 13:47:07.078" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 13:46:55.634" endtime="20230831 13:47:07.078"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 13:47:07.079" level="INFO"/>
<status status="PASS" starttime="20230831 13:47:07.078" endtime="20230831 13:47:07.079"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 13:47:07.080" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 13:47:07.080" endtime="20230831 13:47:07.081"/>
</kw>
<status status="PASS" starttime="20230831 13:46:55.634" endtime="20230831 13:47:07.081"/>
</kw>
<msg timestamp="20230831 13:47:07.081" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 13:46:55.633" endtime="20230831 13:47:07.081"/>
</kw>
<msg timestamp="20230831 13:47:07.081" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 13:46:55.632" endtime="20230831 13:47:07.081"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 13:47:07.081" endtime="20230831 13:47:07.082"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 13:47:07.086" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 13:47:07.090" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 13:47:07.090" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 13:47:07.083" endtime="20230831 13:47:07.090"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 13:47:07.091" level="INFO"/>
<status status="PASS" starttime="20230831 13:47:07.090" endtime="20230831 13:47:07.091"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 13:47:07.092" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 13:47:07.091" endtime="20230831 13:47:07.092"/>
</kw>
<status status="PASS" starttime="20230831 13:47:07.082" endtime="20230831 13:47:07.092"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230831 13:46:55.622" endtime="20230831 13:47:07.093"/>
</test>
<test id="s1-s3-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230831 13:47:07.095" level="INFO">${random} = 99033</msg>
<status status="PASS" starttime="20230831 13:47:07.094" endtime="20230831 13:47:07.095"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 13:47:07.100" level="INFO">Running command 'ozone sh key get /rootca2-volume/rootca2-bucket/rootca2-key /tmp/key-99033 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 13:47:17.249" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 13:47:17.249" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 13:47:07.097" endtime="20230831 13:47:17.249"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 13:47:17.251" level="INFO"/>
<status status="PASS" starttime="20230831 13:47:17.250" endtime="20230831 13:47:17.251"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 13:47:17.251" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 13:47:17.251" endtime="20230831 13:47:17.251"/>
</kw>
<status status="PASS" starttime="20230831 13:47:07.097" endtime="20230831 13:47:17.252"/>
</kw>
<msg timestamp="20230831 13:47:17.252" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 13:47:07.096" endtime="20230831 13:47:17.252"/>
</kw>
<msg timestamp="20230831 13:47:17.252" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 13:47:07.095" endtime="20230831 13:47:17.252"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 13:47:17.252" endtime="20230831 13:47:17.253"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 13:47:17.257" level="INFO">Running command 'cat /tmp/key-99033 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 13:47:17.260" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 13:47:17.261" level="INFO">${output} = rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230831 13:47:17.253" endtime="20230831 13:47:17.261"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 13:47:17.262" level="INFO">rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230831 13:47:17.261" endtime="20230831 13:47:17.262"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 13:47:17.263" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 13:47:17.262" endtime="20230831 13:47:17.263"/>
</kw>
<msg timestamp="20230831 13:47:17.263" level="INFO">${output} = rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230831 13:47:17.253" endtime="20230831 13:47:17.263"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 13:47:17.263" endtime="20230831 13:47:17.264"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 13:47:17.268" level="INFO">Running command 'rm /tmp/key-99033 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 13:47:17.271" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 13:47:17.271" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 13:47:17.265" endtime="20230831 13:47:17.271"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 13:47:17.272" level="INFO"/>
<status status="PASS" starttime="20230831 13:47:17.272" endtime="20230831 13:47:17.273"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 13:47:17.273" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 13:47:17.273" endtime="20230831 13:47:17.273"/>
</kw>
<status status="PASS" starttime="20230831 13:47:17.264" endtime="20230831 13:47:17.274"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230831 13:47:07.093" endtime="20230831 13:47:17.274"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230831 13:46:40.982" endtime="20230831 13:47:17.276"/>
</suite>
<suite id="s1-s4" name="Root-Ca-Rotation" source="/opt/hadoop/smoketest/scmha/root-ca-rotation.robot">
<test id="s1-s4-t1" name="Verify root CA rotation metrics" line="26">
<kw name="Execute" library="os">
<var>${successRotationLine}</var>
<arg>curl -sS 'http://localhost:9876/jmx' | grep NumSuccessRotation</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 13:47:21.347" level="INFO">Running command 'curl -sS 'http://localhost:9876/jmx' | grep NumSuccessRotation 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 13:47:22.041" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 13:47:22.042" level="INFO">${output} =     "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230831 13:47:21.343" endtime="20230831 13:47:22.042"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 13:47:22.044" level="INFO">    "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230831 13:47:22.042" endtime="20230831 13:47:22.044"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 13:47:22.044" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 13:47:22.044" endtime="20230831 13:47:22.045"/>
</kw>
<status status="PASS" starttime="20230831 13:47:21.342" endtime="20230831 13:47:22.045"/>
</kw>
<msg timestamp="20230831 13:47:22.045" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 13:47:21.342" endtime="20230831 13:47:22.045"/>
</kw>
<msg timestamp="20230831 13:47:22.045" level="INFO">${successRotationLine} =     "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230831 13:47:21.342" endtime="20230831 13:47:22.045"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${successRotationLine}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 13:47:22.046" level="INFO">    "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230831 13:47:22.046" endtime="20230831 13:47:22.046"/>
</kw>
<kw name="Split String" library="String">
<var>${temp_1}</var>
<arg>${successRotationLine}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230831 13:47:22.047" level="INFO">${temp_1} = ['    "NumSuccessRotation" ', ' 2,']</msg>
<status status="PASS" starttime="20230831 13:47:22.046" endtime="20230831 13:47:22.047"/>
</kw>
<kw name="Strip String" library="String">
<var>${temp_2}</var>
<arg>${temp_1[1]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230831 13:47:22.052" level="INFO">${temp_2} = 2,</msg>
<status status="PASS" starttime="20230831 13:47:22.047" endtime="20230831 13:47:22.052"/>
</kw>
<kw name="Split String" library="String">
<var>${temp_3}</var>
<arg>${temp_2}</arg>
<arg>,</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230831 13:47:22.053" level="INFO">${temp_3} = ['2', '']</msg>
<status status="PASS" starttime="20230831 13:47:22.052" endtime="20230831 13:47:22.053"/>
</kw>
<kw name="Strip String" library="String">
<var>${successRotation}</var>
<arg>${temp_3[0]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230831 13:47:22.055" level="INFO">${successRotation} = 2</msg>
<status status="PASS" starttime="20230831 13:47:22.053" endtime="20230831 13:47:22.055"/>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<var>${successRotation}</var>
<arg>${successRotation}</arg>
<doc>Converts the given item to a floating point number.</doc>
<msg timestamp="20230831 13:47:22.055" level="INFO">${successRotation} = 2.0</msg>
<status status="PASS" starttime="20230831 13:47:22.055" endtime="20230831 13:47:22.055"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${successRotation} &gt;= 1</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230831 13:47:22.056" endtime="20230831 13:47:22.057"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230831 13:47:21.341" endtime="20230831 13:47:22.057"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230831 13:47:21.283" endtime="20230831 13:47:22.059"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="77014"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="2" fail="0" skip="0">create-volume-and-bucket</stat>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="ozonesecure-root-ca-rotation">ozonesecure-root-ca-rotation</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Kinit">ozonesecure-root-ca-rotation.Kinit</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Root-Ca-Rotation-Client-Checks">ozonesecure-root-ca-rotation.Root-Ca-Rotation-Client-Checks</stat>
<stat pass="3" fail="0" skip="0" id="s1-s3" name="Root-Ca-Rotation-Client-Checks">ozonesecure-root-ca-rotation.Root-Ca-Rotation-Client-Checks</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Root-Ca-Rotation">ozonesecure-root-ca-rotation.Root-Ca-Rotation</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
