<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20230831 10:40:16.465" rpa="false" schemaversion="4">
<suite id="s1" name="upgrade">
<suite id="s1-s1" name="Check-Finalization" source="/opt/ozone/smoketest/upgrade/check-finalization.robot">
<test id="s1-s1-t1" name="Check OM Finalized" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230831 10:33:39.378" endtime="20230831 10:33:39.379"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>env</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 10:33:39.387" level="INFO">Running command 'env 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 10:33:39.389" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 10:33:39.390" level="INFO">${output} = OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=6c57aa201c86
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/ha...</msg>
<status status="PASS" starttime="20230831 10:33:39.381" endtime="20230831 10:33:39.390"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 10:33:39.391" level="INFO">OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=6c57aa201c86
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/hadoop
LD_LIBRARY_PATH=/usr/local/lib
OZONE-SITE.XML_ozone.replication=3
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
ENSURE_SCM_INITIALIZED=/data/metadata/scm/current/VERSION
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OM_SERVICE_ID=omservice
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin
PWD=/opt/hadoop
OZONE-SITE.XML_ozone.scm.container.size=1GB
JAVA_HOME=/usr/lib/jvm/jre/
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE_UPGRADE_FROM=1.3.0
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
SHLVL=1
HOME=/opt/hadoop
OZONE_CONF_DIR=/etc/hadoop
OZONE-SITE.XML_ozone.om.ratis.enable=true
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
OZONE_UPGRADE_TO=1.4.0
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_ozone.scm.ratis.enable=true
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3
_=/usr/bin/env</msg>
<status status="PASS" starttime="20230831 10:33:39.390" endtime="20230831 10:33:39.391"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 10:33:39.391" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 10:33:39.391" endtime="20230831 10:33:39.392"/>
</kw>
<status status="PASS" starttime="20230831 10:33:39.381" endtime="20230831 10:33:39.392"/>
</kw>
<msg timestamp="20230831 10:33:39.392" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 10:33:39.380" endtime="20230831 10:33:39.393"/>
</kw>
<msg timestamp="20230831 10:33:39.394" level="INFO">${result} = OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=6c57aa201c86
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/ha...</msg>
<status status="PASS" starttime="20230831 10:33:39.380" endtime="20230831 10:33:39.394"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 10:33:39.394" level="INFO">OZONE-SITE.XML_ozone.recon.db.dir=/data/metadata/recon
OZONE-SITE.XML_ozone.client.failover.max.attempts=6
HOSTNAME=6c57aa201c86
OZONE-SITE.XML_ozone.recon.address=recon:9891
OZONE_LOG_DIR=/var/log/hadoop
LD_LIBRARY_PATH=/usr/local/lib
OZONE-SITE.XML_ozone.replication=3
OZONE-SITE.XML_ozone.om.nodes.omservice=om1,om2,om3
ENSURE_SCM_INITIALIZED=/data/metadata/scm/current/VERSION
OZONE-SITE.XML_ozone.filesystem.snapshot.enabled=true
OM_SERVICE_ID=omservice
OZONE-SITE.XML_ozone.recon.om.snapshot.task.interval.delay=1m
OZONE-SITE.XML_hdds.scm.wait.time.after.safemode.exit=5s
OZONE-SITE.XML_ozone.metadata.dirs=/data/metadata
PATH=/opt/hadoop/libexec:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/hadoop/bin
PWD=/opt/hadoop
OZONE-SITE.XML_ozone.scm.container.size=1GB
JAVA_HOME=/usr/lib/jvm/jre/
OZONE-SITE.XML_hdds.scm.safemode.min.datanode=3
OZONE-SITE.XML_ozone.scm.pipeline.creation.interval=30s
OZONE-SITE.XML_ozone.om.service.ids=omservice
OZONE-SITE.XML_ozone.scm.pipeline.allocated.timeout=2m
OZONE-SITE.XML_ozone.scm.primordial.node.id=scm1
OZONE-SITE.XML_ozone.scm.pipeline.owner.container.count=1
OZONE_UPGRADE_FROM=1.3.0
OZONE-SITE.XML_ozone.scm.pipeline.scrub.interval=1m
SHLVL=1
HOME=/opt/hadoop
OZONE_CONF_DIR=/etc/hadoop
OZONE-SITE.XML_ozone.om.ratis.enable=true
no_proxy=om1,om2,om3,scm1,scm2,scm3,s3g,kdc,localhost,127.0.0.1
OZONE-SITE.XML_hdds.datanode.dir=/data/hdds
OZONE-SITE.XML_ozone.scm.nodes.scmservice=scm1,scm2,scm3
OZONE-SITE.XML_ozone.scm.datanode.id.dir=/data
OZONE_UPGRADE_TO=1.4.0
OZONE-SITE.XML_ozone.scm.service.ids=scmservice
OZONE-SITE.XML_ozone.om.address.omservice.om3=om3
OZONE-SITE.XML_ozone.scm.address.scmservice.scm1=scm1
OZONE-SITE.XML_ozone.om.address.omservice.om2=om2
OZONE-SITE.XML_ozone.scm.address.scmservice.scm2=scm2
OZONE-SITE.XML_ozone.om.address.omservice.om1=om1
OZONE-SITE.XML_ozone.scm.ratis.enable=true
OZONE-SITE.XML_ozone.scm.address.scmservice.scm3=scm3
_=/usr/bin/env</msg>
<status status="PASS" starttime="20230831 10:33:39.394" endtime="20230831 10:33:39.395"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230831 10:33:39.395" endtime="20230831 10:33:39.395"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 10:33:39.399" level="INFO">Running command 'ozone admin om finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 10:33:42.883" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 10:33:42.883" level="INFO">${output} = ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20230831 10:33:39.397" endtime="20230831 10:33:42.883"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 10:33:42.885" level="INFO">ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20230831 10:33:42.884" endtime="20230831 10:33:42.885"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 10:33:42.885" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 10:33:42.885" endtime="20230831 10:33:42.886"/>
</kw>
<status status="PASS" starttime="20230831 10:33:39.396" endtime="20230831 10:33:42.886"/>
</kw>
<msg timestamp="20230831 10:33:42.886" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 10:33:39.396" endtime="20230831 10:33:42.886"/>
</kw>
<msg timestamp="20230831 10:33:42.887" level="INFO">${result} = ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20230831 10:33:39.395" endtime="20230831 10:33:42.887"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 10:33:42.888" level="INFO">ALREADY_FINALIZED</msg>
<status status="PASS" starttime="20230831 10:33:42.887" endtime="20230831 10:33:42.888"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20230831 10:33:42.888" endtime="20230831 10:33:42.888"/>
</kw>
<tag>finalized</tag>
<tag>om</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230831 10:33:39.377" endtime="20230831 10:33:42.888"/>
</test>
<test id="s1-s1-t2" name="Check SCM Finalized" line="32">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230831 10:33:42.891" endtime="20230831 10:33:42.892"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>HDDS finalization not supported in version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230831 10:33:42.892" endtime="20230831 10:33:42.892"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizationstatus</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 10:33:42.897" level="INFO">Running command 'ozone admin scm finalizationstatus 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 10:33:46.514" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 10:33:46.514" level="INFO">${output} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230831 10:33:42.894" endtime="20230831 10:33:46.515"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 10:33:46.516" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230831 10:33:46.515" endtime="20230831 10:33:46.516"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 10:33:46.517" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 10:33:46.516" endtime="20230831 10:33:46.517"/>
</kw>
<status status="PASS" starttime="20230831 10:33:42.893" endtime="20230831 10:33:46.517"/>
</kw>
<msg timestamp="20230831 10:33:46.517" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 10:33:42.893" endtime="20230831 10:33:46.518"/>
</kw>
<msg timestamp="20230831 10:33:46.518" level="INFO">${result} = FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230831 10:33:42.892" endtime="20230831 10:33:46.518"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 10:33:46.519" level="INFO">FINALIZATION_DONE</msg>
<status status="PASS" starttime="20230831 10:33:46.518" endtime="20230831 10:33:46.519"/>
</kw>
<kw name="Should Contain Any" library="BuiltIn">
<arg>${result}</arg>
<arg>ALREADY_FINALIZED</arg>
<arg>FINALIZATION_DONE</arg>
<doc>Fails if ``container`` does not contain any of the ``*items``.</doc>
<status status="PASS" starttime="20230831 10:33:46.519" endtime="20230831 10:33:46.519"/>
</kw>
<tag>finalized</tag>
<tag>scm</tag>
<timeout value="10 minutes"/>
<status status="PASS" starttime="20230831 10:33:42.890" endtime="20230831 10:33:46.520"/>
</test>
<doc>Finalize Upgrade of the Ozone cluster</doc>
<status status="PASS" starttime="20230831 10:33:39.308" endtime="20230831 10:33:46.522"/>
</suite>
<suite id="s1-s2" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s2-t1" name="Create a volume and bucket" line="28">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 10:33:50.198" level="INFO">Running command 'ozone sh volume create old1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 10:33:53.174" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 10:33:53.174" level="INFO">${output} = 2023-08-31 10:33:53,042 [main] INFO rpc.RpcClient: Creating Volume: old1-volume, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20230831 10:33:50.193" endtime="20230831 10:33:53.175"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 10:33:53.176" level="INFO">2023-08-31 10:33:53,042 [main] INFO rpc.RpcClient: Creating Volume: old1-volume, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20230831 10:33:53.175" endtime="20230831 10:33:53.176"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 10:33:53.185" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 10:33:53.184" endtime="20230831 10:33:53.185"/>
</kw>
<status status="PASS" starttime="20230831 10:33:50.193" endtime="20230831 10:33:53.186"/>
</kw>
<msg timestamp="20230831 10:33:53.186" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 10:33:50.192" endtime="20230831 10:33:53.188"/>
</kw>
<msg timestamp="20230831 10:33:53.189" level="INFO">${output} = 2023-08-31 10:33:53,042 [main] INFO rpc.RpcClient: Creating Volume: old1-volume, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1</msg>
<status status="PASS" starttime="20230831 10:33:50.192" endtime="20230831 10:33:53.189"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 10:33:53.189" endtime="20230831 10:33:53.189"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 10:33:53.211" level="INFO">Running command 'ozone sh bucket create /old1-volume/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 10:33:56.422" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 10:33:56.422" level="INFO">${output} = 2023-08-31 10:33:56,318 [main] INFO rpc.RpcClient: Creating Bucket: old1-volume/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Enc...</msg>
<status status="PASS" starttime="20230831 10:33:53.204" endtime="20230831 10:33:56.422"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 10:33:56.424" level="INFO">2023-08-31 10:33:56,318 [main] INFO rpc.RpcClient: Creating Bucket: old1-volume/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false </msg>
<status status="PASS" starttime="20230831 10:33:56.422" endtime="20230831 10:33:56.424"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 10:33:56.425" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 10:33:56.424" endtime="20230831 10:33:56.425"/>
</kw>
<status status="PASS" starttime="20230831 10:33:53.204" endtime="20230831 10:33:56.426"/>
</kw>
<msg timestamp="20230831 10:33:56.426" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 10:33:53.190" endtime="20230831 10:33:56.426"/>
</kw>
<msg timestamp="20230831 10:33:56.426" level="INFO">${output} = 2023-08-31 10:33:56,318 [main] INFO rpc.RpcClient: Creating Bucket: old1-volume/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Enc...</msg>
<status status="PASS" starttime="20230831 10:33:53.190" endtime="20230831 10:33:56.426"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 10:33:56.427" endtime="20230831 10:33:56.427"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230831 10:33:50.191" endtime="20230831 10:33:56.427"/>
</test>
<test id="s1-s2-t2" name="Create key" line="35">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 10:33:56.433" level="INFO">Running command 'echo "old1: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230831 10:33:56.436" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 10:33:56.436" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 10:33:56.431" endtime="20230831 10:33:56.436"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 10:33:56.437" level="INFO"/>
<status status="PASS" starttime="20230831 10:33:56.436" endtime="20230831 10:33:56.437"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 10:33:56.438" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 10:33:56.438" endtime="20230831 10:33:56.438"/>
</kw>
<status status="PASS" starttime="20230831 10:33:56.430" endtime="20230831 10:33:56.439"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 10:33:56.444" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 10:34:03.979" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 10:34:03.979" level="INFO">${output} = 2023-08-31 10:34:00,949 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-31 10:34:01,135 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230831 10:33:56.441" endtime="20230831 10:34:03.979"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 10:34:03.981" level="INFO">2023-08-31 10:34:00,949 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-31 10:34:01,135 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-08-31 10:34:01,135 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2023-08-31 10:34:01,557 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20230831 10:34:03.980" endtime="20230831 10:34:03.981"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 10:34:03.981" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 10:34:03.981" endtime="20230831 10:34:03.982"/>
</kw>
<status status="PASS" starttime="20230831 10:33:56.440" endtime="20230831 10:34:03.982"/>
</kw>
<msg timestamp="20230831 10:34:03.983" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 10:33:56.440" endtime="20230831 10:34:03.984"/>
</kw>
<msg timestamp="20230831 10:34:03.984" level="INFO">${output} = 2023-08-31 10:34:00,949 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-31 10:34:01,135 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230831 10:33:56.439" endtime="20230831 10:34:03.984"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 10:34:03.984" endtime="20230831 10:34:03.985"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 10:34:03.989" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 10:34:03.991" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 10:34:03.992" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 10:34:03.986" endtime="20230831 10:34:03.992"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 10:34:03.998" level="INFO"/>
<status status="PASS" starttime="20230831 10:34:03.997" endtime="20230831 10:34:03.998"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 10:34:03.999" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 10:34:03.998" endtime="20230831 10:34:03.999"/>
</kw>
<status status="PASS" starttime="20230831 10:34:03.985" endtime="20230831 10:34:03.999"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230831 10:33:56.428" endtime="20230831 10:34:03.999"/>
</test>
<test id="s1-s2-t3" name="Create a bucket in s3v volume" line="41">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /s3v/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 10:34:04.006" level="INFO">Running command 'ozone sh bucket create /s3v/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 10:34:06.905" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 10:34:06.906" level="INFO">${output} = 2023-08-31 10:34:06,849 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption ...</msg>
<status status="PASS" starttime="20230831 10:34:04.003" endtime="20230831 10:34:06.906"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 10:34:06.908" level="INFO">2023-08-31 10:34:06,849 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption set to false </msg>
<status status="PASS" starttime="20230831 10:34:06.906" endtime="20230831 10:34:06.908"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 10:34:06.908" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 10:34:06.908" endtime="20230831 10:34:06.909"/>
</kw>
<status status="PASS" starttime="20230831 10:34:04.002" endtime="20230831 10:34:06.909"/>
</kw>
<msg timestamp="20230831 10:34:06.909" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 10:34:04.002" endtime="20230831 10:34:06.909"/>
</kw>
<msg timestamp="20230831 10:34:06.910" level="INFO">${output} = 2023-08-31 10:34:06,849 [main] INFO rpc.RpcClient: Creating Bucket: s3v/old1-bucket, with server-side default bucket layout, hadoop as owner, Versioning false, Storage Type set to DISK and Encryption ...</msg>
<status status="PASS" starttime="20230831 10:34:04.001" endtime="20230831 10:34:06.910"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 10:34:06.910" endtime="20230831 10:34:06.910"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230831 10:34:04.000" endtime="20230831 10:34:06.911"/>
</test>
<test id="s1-s2-t4" name="Create key in the bucket in s3v volume" line="46">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: another key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 10:34:06.917" level="INFO">Running command 'echo "old1: another key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230831 10:34:06.919" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 10:34:06.919" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 10:34:06.914" endtime="20230831 10:34:06.919"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 10:34:06.920" level="INFO"/>
<status status="PASS" starttime="20230831 10:34:06.919" endtime="20230831 10:34:06.920"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 10:34:06.921" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 10:34:06.920" endtime="20230831 10:34:06.921"/>
</kw>
<status status="PASS" starttime="20230831 10:34:06.913" endtime="20230831 10:34:06.921"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /s3v/${PREFIX}-bucket/key1-shell /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 10:34:06.930" level="INFO">Running command 'ozone sh key put /s3v/old1-bucket/key1-shell /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 10:34:13.569" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 10:34:13.569" level="INFO">${output} = 2023-08-31 10:34:11,329 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-31 10:34:11,539 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230831 10:34:06.925" endtime="20230831 10:34:13.569"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 10:34:13.571" level="INFO">2023-08-31 10:34:11,329 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-31 10:34:11,539 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-08-31 10:34:11,539 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started
2023-08-31 10:34:11,953 [main] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl</msg>
<status status="PASS" starttime="20230831 10:34:13.570" endtime="20230831 10:34:13.571"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 10:34:13.572" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 10:34:13.571" endtime="20230831 10:34:13.572"/>
</kw>
<status status="PASS" starttime="20230831 10:34:06.924" endtime="20230831 10:34:13.572"/>
</kw>
<msg timestamp="20230831 10:34:13.572" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 10:34:06.924" endtime="20230831 10:34:13.573"/>
</kw>
<msg timestamp="20230831 10:34:13.573" level="INFO">${output} = 2023-08-31 10:34:11,329 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-31 10:34:11,539 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230831 10:34:06.922" endtime="20230831 10:34:13.573"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 10:34:13.573" endtime="20230831 10:34:13.573"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 10:34:13.578" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 10:34:13.582" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 10:34:13.582" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 10:34:13.574" endtime="20230831 10:34:13.582"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 10:34:13.583" level="INFO"/>
<status status="PASS" starttime="20230831 10:34:13.582" endtime="20230831 10:34:13.583"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 10:34:13.584" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 10:34:13.583" endtime="20230831 10:34:13.584"/>
</kw>
<status status="PASS" starttime="20230831 10:34:13.574" endtime="20230831 10:34:13.584"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230831 10:34:06.912" endtime="20230831 10:34:13.585"/>
</test>
<test id="s1-s2-t5" name="Setup credentials for S3" line="52">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 10:34:13.594" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 10:34:14.434" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 10:34:14.434" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 10:34:13.591" endtime="20230831 10:34:14.434"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 10:34:14.436" level="INFO"/>
<status status="PASS" starttime="20230831 10:34:14.435" endtime="20230831 10:34:14.436"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 10:34:14.437" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 10:34:14.436" endtime="20230831 10:34:14.437"/>
</kw>
<status status="PASS" starttime="20230831 10:34:13.588" endtime="20230831 10:34:14.437"/>
</kw>
<msg timestamp="20230831 10:34:14.437" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 10:34:13.588" endtime="20230831 10:34:14.438"/>
</kw>
<status status="PASS" starttime="20230831 10:34:13.587" endtime="20230831 10:34:14.438"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 10:34:14.443" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 10:34:15.073" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 10:34:15.073" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 10:34:14.440" endtime="20230831 10:34:15.073"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 10:34:15.075" level="INFO"/>
<status status="PASS" starttime="20230831 10:34:15.074" endtime="20230831 10:34:15.075"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 10:34:15.076" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 10:34:15.075" endtime="20230831 10:34:15.076"/>
</kw>
<status status="PASS" starttime="20230831 10:34:14.439" endtime="20230831 10:34:15.076"/>
</kw>
<msg timestamp="20230831 10:34:15.076" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 10:34:14.439" endtime="20230831 10:34:15.077"/>
</kw>
<status status="PASS" starttime="20230831 10:34:14.438" endtime="20230831 10:34:15.078"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 10:34:15.082" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 10:34:15.691" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 10:34:15.691" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 10:34:15.080" endtime="20230831 10:34:15.691"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 10:34:15.692" level="INFO"/>
<status status="PASS" starttime="20230831 10:34:15.691" endtime="20230831 10:34:15.692"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 10:34:15.693" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 10:34:15.692" endtime="20230831 10:34:15.693"/>
</kw>
<status status="PASS" starttime="20230831 10:34:15.079" endtime="20230831 10:34:15.694"/>
</kw>
<msg timestamp="20230831 10:34:15.694" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 10:34:15.078" endtime="20230831 10:34:15.694"/>
</kw>
<status status="PASS" starttime="20230831 10:34:15.078" endtime="20230831 10:34:15.694"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 10:34:15.702" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 10:34:16.295" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 10:34:16.295" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 10:34:15.696" endtime="20230831 10:34:16.295"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 10:34:16.297" level="INFO"/>
<status status="PASS" starttime="20230831 10:34:16.296" endtime="20230831 10:34:16.297"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 10:34:16.298" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 10:34:16.297" endtime="20230831 10:34:16.298"/>
</kw>
<status status="PASS" starttime="20230831 10:34:15.696" endtime="20230831 10:34:16.298"/>
</kw>
<msg timestamp="20230831 10:34:16.299" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 10:34:15.695" endtime="20230831 10:34:16.299"/>
</kw>
<status status="PASS" starttime="20230831 10:34:15.695" endtime="20230831 10:34:16.299"/>
</kw>
<status status="PASS" starttime="20230831 10:34:13.587" endtime="20230831 10:34:16.300"/>
</kw>
<status status="PASS" starttime="20230831 10:34:13.586" endtime="20230831 10:34:16.300"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230831 10:34:13.586" endtime="20230831 10:34:16.300"/>
</test>
<test id="s1-s2-t6" name="Try to create a bucket using S3 API" line="56">
<kw name="Create bucket with name" library="commonawslib">
<var>${output}</var>
<arg>${PREFIX}-bucket</arg>
<kw name="Execute AWSS3APICli" library="commonawslib">
<var>${result}</var>
<arg>create-bucket --bucket ${bucket}</arg>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 10:34:16.308" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 create-bucket --bucket old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 10:34:18.997" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 10:34:18.997" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230831 10:34:16.305" endtime="20230831 10:34:18.997"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 10:34:18.999" level="INFO">{
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230831 10:34:18.998" endtime="20230831 10:34:18.999"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 10:34:19.000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 10:34:18.999" endtime="20230831 10:34:19.000"/>
</kw>
<status status="PASS" starttime="20230831 10:34:16.304" endtime="20230831 10:34:19.000"/>
</kw>
<msg timestamp="20230831 10:34:19.000" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 10:34:16.304" endtime="20230831 10:34:19.001"/>
</kw>
<msg timestamp="20230831 10:34:19.001" level="INFO">${output} = {
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230831 10:34:16.303" endtime="20230831 10:34:19.001"/>
</kw>
<msg timestamp="20230831 10:34:19.002" level="INFO">${result} = {
    "Location": "http://s3g:9878/old1-bucket"
}</msg>
<status status="PASS" starttime="20230831 10:34:16.302" endtime="20230831 10:34:19.002"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Location</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 10:34:19.002" endtime="20230831 10:34:19.002"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${bucket}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 10:34:19.002" endtime="20230831 10:34:19.003"/>
</kw>
<msg timestamp="20230831 10:34:19.003" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20230831 10:34:16.302" endtime="20230831 10:34:19.003"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${output}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230831 10:34:19.003" endtime="20230831 10:34:19.004"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230831 10:34:16.301" endtime="20230831 10:34:19.004"/>
</test>
<test id="s1-s2-t7" name="Create key using S3 API" line="61">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using S3 API" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 10:34:19.010" level="INFO">Running command 'echo "old1: key created using S3 API" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230831 10:34:19.013" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 10:34:19.013" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 10:34:19.007" endtime="20230831 10:34:19.013"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 10:34:19.015" level="INFO"/>
<status status="PASS" starttime="20230831 10:34:19.014" endtime="20230831 10:34:19.015"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 10:34:19.015" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 10:34:19.015" endtime="20230831 10:34:19.015"/>
</kw>
<status status="PASS" starttime="20230831 10:34:19.006" endtime="20230831 10:34:19.016"/>
</kw>
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>put-object --bucket ${PREFIX}-bucket --key key2-s3api --body /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 10:34:19.021" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 put-object --bucket old1-bucket --key key2-s3api --body /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 10:34:20.999" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 10:34:20.999" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 10:34:19.018" endtime="20230831 10:34:20.999"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 10:34:21.001" level="INFO"/>
<status status="PASS" starttime="20230831 10:34:21.000" endtime="20230831 10:34:21.001"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 10:34:21.002" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 10:34:21.001" endtime="20230831 10:34:21.002"/>
</kw>
<msg timestamp="20230831 10:34:21.002" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 10:34:19.017" endtime="20230831 10:34:21.002"/>
</kw>
<msg timestamp="20230831 10:34:21.003" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 10:34:19.016" endtime="20230831 10:34:21.003"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>error</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 10:34:21.003" endtime="20230831 10:34:21.004"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 10:34:21.007" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 10:34:21.010" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 10:34:21.010" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 10:34:21.005" endtime="20230831 10:34:21.010"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 10:34:21.011" level="INFO"/>
<status status="PASS" starttime="20230831 10:34:21.011" endtime="20230831 10:34:21.011"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 10:34:21.012" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 10:34:21.012" endtime="20230831 10:34:21.012"/>
</kw>
<status status="PASS" starttime="20230831 10:34:21.004" endtime="20230831 10:34:21.012"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230831 10:34:19.005" endtime="20230831 10:34:21.013"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230831 10:33:50.093" endtime="20230831 10:34:21.016"/>
</suite>
<suite id="s1-s3" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s3-t1" name="Read data from previously created key" line="28">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230831 10:34:24.741" level="INFO">${random} = 07292</msg>
<status status="PASS" starttime="20230831 10:34:24.740" endtime="20230831 10:34:24.741"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 10:34:24.748" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-07292 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 10:34:30.177" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 10:34:30.177" level="INFO">${output} = 2023-08-31 10:34:28,670 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-31 10:34:28,769 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230831 10:34:24.743" endtime="20230831 10:34:30.177"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 10:34:30.179" level="INFO">2023-08-31 10:34:28,670 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-31 10:34:28,769 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-08-31 10:34:28,769 [main] INFO impl.MetricsSystemImpl: XceiverClientMetrics metrics system started</msg>
<status status="PASS" starttime="20230831 10:34:30.178" endtime="20230831 10:34:30.179"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 10:34:30.180" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 10:34:30.179" endtime="20230831 10:34:30.180"/>
</kw>
<status status="PASS" starttime="20230831 10:34:24.743" endtime="20230831 10:34:30.180"/>
</kw>
<msg timestamp="20230831 10:34:30.180" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 10:34:24.742" endtime="20230831 10:34:30.182"/>
</kw>
<msg timestamp="20230831 10:34:30.183" level="INFO">${output} = 2023-08-31 10:34:28,670 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-31 10:34:28,769 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230831 10:34:24.741" endtime="20230831 10:34:30.183"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 10:34:30.183" endtime="20230831 10:34:30.183"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 10:34:30.188" level="INFO">Running command 'cat /tmp/key-07292 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 10:34:30.191" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 10:34:30.191" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230831 10:34:30.185" endtime="20230831 10:34:30.191"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 10:34:30.192" level="INFO">old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230831 10:34:30.191" endtime="20230831 10:34:30.192"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 10:34:30.193" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 10:34:30.192" endtime="20230831 10:34:30.193"/>
</kw>
<msg timestamp="20230831 10:34:30.193" level="INFO">${output} = old1: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230831 10:34:30.184" endtime="20230831 10:34:30.193"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 10:34:30.193" endtime="20230831 10:34:30.194"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 10:34:30.198" level="INFO">Running command 'rm /tmp/key-07292 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 10:34:30.201" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 10:34:30.201" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 10:34:30.195" endtime="20230831 10:34:30.201"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 10:34:30.202" level="INFO"/>
<status status="PASS" starttime="20230831 10:34:30.201" endtime="20230831 10:34:30.202"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 10:34:30.203" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 10:34:30.202" endtime="20230831 10:34:30.203"/>
</kw>
<status status="PASS" starttime="20230831 10:34:30.194" endtime="20230831 10:34:30.203"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230831 10:34:24.739" endtime="20230831 10:34:30.204"/>
</test>
<test id="s1-s3-t2" name="Setup credentials for S3" line="36">
<kw name="Run Keyword" library="BuiltIn">
<arg>Setup dummy credentials for S3</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Setup dummy credentials for S3" library="commonawslib">
<kw name="Execute" library="os">
<arg>aws configure set default.s3.signature_version s3v4</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 10:34:30.211" level="INFO">Running command 'aws configure set default.s3.signature_version s3v4 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 10:34:30.824" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 10:34:30.824" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 10:34:30.209" endtime="20230831 10:34:30.824"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 10:34:30.826" level="INFO"/>
<status status="PASS" starttime="20230831 10:34:30.825" endtime="20230831 10:34:30.826"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 10:34:30.826" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 10:34:30.826" endtime="20230831 10:34:30.827"/>
</kw>
<status status="PASS" starttime="20230831 10:34:30.208" endtime="20230831 10:34:30.827"/>
</kw>
<msg timestamp="20230831 10:34:30.827" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 10:34:30.208" endtime="20230831 10:34:30.828"/>
</kw>
<status status="PASS" starttime="20230831 10:34:30.207" endtime="20230831 10:34:30.828"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_access_key_id dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 10:34:30.832" level="INFO">Running command 'aws configure set aws_access_key_id dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 10:34:31.453" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 10:34:31.453" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 10:34:30.829" endtime="20230831 10:34:31.453"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 10:34:31.454" level="INFO"/>
<status status="PASS" starttime="20230831 10:34:31.453" endtime="20230831 10:34:31.454"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 10:34:31.455" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 10:34:31.454" endtime="20230831 10:34:31.455"/>
</kw>
<status status="PASS" starttime="20230831 10:34:30.829" endtime="20230831 10:34:31.455"/>
</kw>
<msg timestamp="20230831 10:34:31.455" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 10:34:30.828" endtime="20230831 10:34:31.456"/>
</kw>
<status status="PASS" starttime="20230831 10:34:30.828" endtime="20230831 10:34:31.456"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set aws_secret_access_key dlfknslnfslf</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 10:34:31.461" level="INFO">Running command 'aws configure set aws_secret_access_key dlfknslnfslf 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 10:34:32.058" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 10:34:32.058" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 10:34:31.458" endtime="20230831 10:34:32.059"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 10:34:32.060" level="INFO"/>
<status status="PASS" starttime="20230831 10:34:32.059" endtime="20230831 10:34:32.060"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 10:34:32.061" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 10:34:32.060" endtime="20230831 10:34:32.061"/>
</kw>
<status status="PASS" starttime="20230831 10:34:31.457" endtime="20230831 10:34:32.061"/>
</kw>
<msg timestamp="20230831 10:34:32.061" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 10:34:31.457" endtime="20230831 10:34:32.062"/>
</kw>
<status status="PASS" starttime="20230831 10:34:31.456" endtime="20230831 10:34:32.062"/>
</kw>
<kw name="Execute" library="os">
<arg>aws configure set region us-west-1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 10:34:32.067" level="INFO">Running command 'aws configure set region us-west-1 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 10:34:32.689" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 10:34:32.689" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 10:34:32.064" endtime="20230831 10:34:32.689"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 10:34:32.691" level="INFO"/>
<status status="PASS" starttime="20230831 10:34:32.690" endtime="20230831 10:34:32.691"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 10:34:32.692" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 10:34:32.691" endtime="20230831 10:34:32.692"/>
</kw>
<status status="PASS" starttime="20230831 10:34:32.064" endtime="20230831 10:34:32.692"/>
</kw>
<msg timestamp="20230831 10:34:32.692" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 10:34:32.063" endtime="20230831 10:34:32.693"/>
</kw>
<status status="PASS" starttime="20230831 10:34:32.062" endtime="20230831 10:34:32.693"/>
</kw>
<status status="PASS" starttime="20230831 10:34:30.206" endtime="20230831 10:34:32.693"/>
</kw>
<status status="PASS" starttime="20230831 10:34:30.206" endtime="20230831 10:34:32.693"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230831 10:34:30.205" endtime="20230831 10:34:32.693"/>
</test>
<test id="s1-s3-t3" name="Read key created with Ozone Shell using S3 API" line="40">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key1-shell /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 10:34:32.700" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key1-shell /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 10:34:33.652" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 10:34:33.652" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 31 Aug 2023 10:34:13 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230831 10:34:32.697" endtime="20230831 10:34:33.652"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 10:34:33.653" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 31 Aug 2023 10:34:13 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 31 Aug 2023 10:34:33 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230831 10:34:33.653" endtime="20230831 10:34:33.654"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 10:34:33.654" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 10:34:33.654" endtime="20230831 10:34:33.654"/>
</kw>
<msg timestamp="20230831 10:34:33.655" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 31 Aug 2023 10:34:13 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230831 10:34:32.697" endtime="20230831 10:34:33.655"/>
</kw>
<msg timestamp="20230831 10:34:33.655" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 31 Aug 2023 10:34:13 GMT",
    "ContentLength": 44,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230831 10:34:32.696" endtime="20230831 10:34:33.655"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 10:34:33.655" endtime="20230831 10:34:33.656"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 10:34:33.660" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 10:34:33.663" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 10:34:33.663" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230831 10:34:33.657" endtime="20230831 10:34:33.663"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 10:34:33.665" level="INFO">old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230831 10:34:33.664" endtime="20230831 10:34:33.665"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 10:34:33.666" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 10:34:33.665" endtime="20230831 10:34:33.666"/>
</kw>
<msg timestamp="20230831 10:34:33.666" level="INFO">${output} = old1: another key created using Ozone Shell</msg>
<status status="PASS" starttime="20230831 10:34:33.656" endtime="20230831 10:34:33.666"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: another key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 10:34:33.667" endtime="20230831 10:34:33.667"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 10:34:33.670" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 10:34:33.673" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 10:34:33.673" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 10:34:33.668" endtime="20230831 10:34:33.673"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 10:34:33.674" level="INFO"/>
<status status="PASS" starttime="20230831 10:34:33.674" endtime="20230831 10:34:33.675"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 10:34:33.675" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 10:34:33.675" endtime="20230831 10:34:33.675"/>
</kw>
<status status="PASS" starttime="20230831 10:34:33.667" endtime="20230831 10:34:33.676"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230831 10:34:32.695" endtime="20230831 10:34:33.676"/>
</test>
<test id="s1-s3-t4" name="Read key created with S3 API using S3 API" line="47">
<kw name="Execute AWSS3APICli and checkrc" library="commonawslib">
<var>${output}</var>
<arg>get-object --bucket ${PREFIX}-bucket --key key2-s3api /tmp/get-result</arg>
<arg>0</arg>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>aws s3api --endpoint-url ${ENDPOINT_URL} ${command}</arg>
<arg>${expected_error_code}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 10:34:33.682" level="INFO">Running command 'aws s3api --endpoint-url http://s3g:9878 get-object --bucket old1-bucket --key key2-s3api /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 10:34:34.435" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 10:34:34.435" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 31 Aug 2023 10:34:20 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230831 10:34:33.680" endtime="20230831 10:34:34.435"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 10:34:34.436" level="INFO">{
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 31 Aug 2023 10:34:20 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires": "Thu, 31 Aug 2023 10:34:34 GMT",
    "Metadata": {}
}</msg>
<status status="PASS" starttime="20230831 10:34:34.435" endtime="20230831 10:34:34.437"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 10:34:34.437" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 10:34:34.437" endtime="20230831 10:34:34.437"/>
</kw>
<msg timestamp="20230831 10:34:34.438" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 31 Aug 2023 10:34:20 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230831 10:34:33.679" endtime="20230831 10:34:34.438"/>
</kw>
<msg timestamp="20230831 10:34:34.438" level="INFO">${output} = {
    "AcceptRanges": "bytes",
    "LastModified": "Thu, 31 Aug 2023 10:34:20 GMT",
    "ContentLength": 31,
    "CacheControl": "no-cache",
    "ContentType": "application/octet-stream",
    "Expires...</msg>
<status status="PASS" starttime="20230831 10:34:33.679" endtime="20230831 10:34:34.438"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>"ContentLength"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 10:34:34.439" endtime="20230831 10:34:34.439"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 10:34:34.442" level="INFO">Running command 'cat /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 10:34:34.446" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 10:34:34.446" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20230831 10:34:34.440" endtime="20230831 10:34:34.446"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 10:34:34.447" level="INFO">old1: key created using S3 API</msg>
<status status="PASS" starttime="20230831 10:34:34.446" endtime="20230831 10:34:34.447"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 10:34:34.448" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 10:34:34.447" endtime="20230831 10:34:34.448"/>
</kw>
<msg timestamp="20230831 10:34:34.448" level="INFO">${output} = old1: key created using S3 API</msg>
<status status="PASS" starttime="20230831 10:34:34.439" endtime="20230831 10:34:34.448"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using S3 API</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 10:34:34.448" endtime="20230831 10:34:34.449"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/get-result</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 10:34:34.452" level="INFO">Running command 'rm /tmp/get-result 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 10:34:34.454" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 10:34:34.454" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 10:34:34.450" endtime="20230831 10:34:34.455"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 10:34:34.456" level="INFO"/>
<status status="PASS" starttime="20230831 10:34:34.455" endtime="20230831 10:34:34.456"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 10:34:34.457" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 10:34:34.456" endtime="20230831 10:34:34.457"/>
</kw>
<status status="PASS" starttime="20230831 10:34:34.449" endtime="20230831 10:34:34.457"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230831 10:34:33.678" endtime="20230831 10:34:34.457"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230831 10:34:24.651" endtime="20230831 10:34:34.459"/>
</suite>
<suite id="s1-s4" name="Prepare" source="/opt/ozone/smoketest/upgrade/prepare.robot">
<test id="s1-s4-t1" name="Prepare Ozone Manager" line="23">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230831 10:34:38.114" endtime="20230831 10:34:38.115"/>
</kw>
<kw name="Pass Execution If" library="BuiltIn">
<arg>'%{OZONE_UPGRADE_FROM}' == '1.1.0'</arg>
<arg>OM prepare is skipped for version %{OZONE_UPGRADE_FROM}</arg>
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230831 10:34:38.115" endtime="20230831 10:34:38.116"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om prepare -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 10:34:38.122" level="INFO">Running command 'ozone admin om prepare -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 10:39:38.114" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20230831 10:34:38.117" endtime="20230831 10:39:38.115"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230831 10:39:38.115" endtime="20230831 10:39:38.115"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20230831 10:39:38.115" endtime="20230831 10:39:38.116"/>
</kw>
<status status="FAIL" starttime="20230831 10:34:38.117" endtime="20230831 10:39:38.116"/>
</kw>
<msg timestamp="20230831 10:39:38.116" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20230831 10:34:38.116" endtime="20230831 10:39:38.118"/>
</kw>
<status status="FAIL" starttime="20230831 10:34:38.116" endtime="20230831 10:39:38.119"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>OM Preparation successful!</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20230831 10:39:38.119" endtime="20230831 10:39:38.119"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20230831 10:34:38.113" endtime="20230831 10:39:38.120">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Prepares OMs</doc>
<status status="FAIL" starttime="20230831 10:34:38.054" endtime="20230831 10:39:38.123"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="348014"/>
</suite>
<statistics>
<total>
<stat pass="13" fail="1" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="2" fail="0" skip="0">create-volume-and-bucket</stat>
<stat pass="2" fail="0" skip="0">finalized</stat>
<stat pass="1" fail="0" skip="0">om</stat>
<stat pass="1" fail="0" skip="0">scm</stat>
</tag>
<suite>
<stat pass="13" fail="1" skip="0" id="s1" name="upgrade">upgrade</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1" name="Check-Finalization">upgrade.Check-Finalization</stat>
<stat pass="7" fail="0" skip="0" id="s1-s2" name="Generate">upgrade.Generate</stat>
<stat pass="4" fail="0" skip="0" id="s1-s3" name="Validate">upgrade.Validate</stat>
<stat pass="0" fail="1" skip="0" id="s1-s4" name="Prepare">upgrade.Prepare</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
