<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20230831 10:50:14.448" rpa="false" schemaversion="4">
<suite id="s1" name="ozonesecure-root-ca-rotation">
<suite id="s1-s1" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s1-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 10:47:18.790" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 10:47:18.794" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 10:47:18.794" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230831 10:47:18.787" endtime="20230831 10:47:18.794"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 10:47:18.795" level="INFO">scm</msg>
<status status="PASS" starttime="20230831 10:47:18.795" endtime="20230831 10:47:18.795"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 10:47:18.796" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 10:47:18.795" endtime="20230831 10:47:18.796"/>
</kw>
<status status="PASS" starttime="20230831 10:47:18.787" endtime="20230831 10:47:18.796"/>
</kw>
<msg timestamp="20230831 10:47:18.796" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 10:47:18.786" endtime="20230831 10:47:18.796"/>
</kw>
<msg timestamp="20230831 10:47:18.797" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230831 10:47:18.786" endtime="20230831 10:47:18.797"/>
</kw>
<msg timestamp="20230831 10:47:18.797" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230831 10:47:18.786" endtime="20230831 10:47:18.797"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230831 10:47:18.797" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230831 10:47:18.797" endtime="20230831 10:47:18.797"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 10:47:18.802" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 10:47:18.821" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 10:47:18.821" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 10:47:18.799" endtime="20230831 10:47:18.821"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 10:47:18.822" level="INFO"/>
<status status="PASS" starttime="20230831 10:47:18.821" endtime="20230831 10:47:18.822"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 10:47:18.823" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 10:47:18.822" endtime="20230831 10:47:18.823"/>
</kw>
<status status="PASS" starttime="20230831 10:47:18.799" endtime="20230831 10:47:18.823"/>
</kw>
<msg timestamp="20230831 10:47:18.823" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 10:47:18.799" endtime="20230831 10:47:18.823"/>
</kw>
<status status="PASS" starttime="20230831 10:47:18.798" endtime="20230831 10:47:18.823"/>
</kw>
<status status="PASS" starttime="20230831 10:47:18.798" endtime="20230831 10:47:18.823"/>
</kw>
<status status="PASS" starttime="20230831 10:47:18.785" endtime="20230831 10:47:18.823"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230831 10:47:18.784" endtime="20230831 10:47:18.824"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20230831 10:47:18.731" endtime="20230831 10:47:18.824"/>
</suite>
<suite id="s1-s2" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s2-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 10:47:43.114" level="INFO">Running command 'ozone sh volume create rootca-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 10:47:48.572" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 10:47:48.573" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 10:47:43.111" endtime="20230831 10:47:48.573"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 10:47:48.574" level="INFO"/>
<status status="PASS" starttime="20230831 10:47:48.573" endtime="20230831 10:47:48.574"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 10:47:48.575" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 10:47:48.574" endtime="20230831 10:47:48.575"/>
</kw>
<status status="PASS" starttime="20230831 10:47:43.110" endtime="20230831 10:47:48.575"/>
</kw>
<msg timestamp="20230831 10:47:48.575" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 10:47:43.110" endtime="20230831 10:47:48.576"/>
</kw>
<msg timestamp="20230831 10:47:48.576" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 10:47:43.109" endtime="20230831 10:47:48.576"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 10:47:48.576" endtime="20230831 10:47:48.576"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 10:47:48.581" level="INFO">Running command 'ozone sh bucket create /rootca-volume/rootca-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 10:47:55.345" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 10:47:55.345" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 10:47:48.578" endtime="20230831 10:47:55.345"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 10:47:55.347" level="INFO"/>
<status status="PASS" starttime="20230831 10:47:55.346" endtime="20230831 10:47:55.347"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 10:47:55.348" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 10:47:55.347" endtime="20230831 10:47:55.348"/>
</kw>
<status status="PASS" starttime="20230831 10:47:48.578" endtime="20230831 10:47:55.348"/>
</kw>
<msg timestamp="20230831 10:47:55.348" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 10:47:48.577" endtime="20230831 10:47:55.348"/>
</kw>
<msg timestamp="20230831 10:47:55.348" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 10:47:48.577" endtime="20230831 10:47:55.348"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 10:47:55.349" endtime="20230831 10:47:55.349"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230831 10:47:43.108" endtime="20230831 10:47:55.349"/>
</test>
<test id="s1-s2-t2" name="Create key" line="34">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 10:47:55.357" level="INFO">Running command 'echo "rootca: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230831 10:47:55.360" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 10:47:55.360" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 10:47:55.353" endtime="20230831 10:47:55.360"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 10:47:55.362" level="INFO"/>
<status status="PASS" starttime="20230831 10:47:55.361" endtime="20230831 10:47:55.362"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 10:47:55.362" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 10:47:55.362" endtime="20230831 10:47:55.363"/>
</kw>
<status status="PASS" starttime="20230831 10:47:55.353" endtime="20230831 10:47:55.363"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 10:47:55.368" level="INFO">Running command 'ozone sh key put /rootca-volume/rootca-bucket/rootca-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 10:48:06.666" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 10:48:06.666" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 10:47:55.365" endtime="20230831 10:48:06.666"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 10:48:06.667" level="INFO"/>
<status status="PASS" starttime="20230831 10:48:06.667" endtime="20230831 10:48:06.668"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 10:48:06.668" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 10:48:06.668" endtime="20230831 10:48:06.669"/>
</kw>
<status status="PASS" starttime="20230831 10:47:55.364" endtime="20230831 10:48:06.669"/>
</kw>
<msg timestamp="20230831 10:48:06.669" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 10:47:55.364" endtime="20230831 10:48:06.669"/>
</kw>
<msg timestamp="20230831 10:48:06.669" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 10:47:55.363" endtime="20230831 10:48:06.669"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 10:48:06.669" endtime="20230831 10:48:06.670"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 10:48:06.673" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 10:48:06.676" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 10:48:06.677" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 10:48:06.671" endtime="20230831 10:48:06.677"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 10:48:06.678" level="INFO"/>
<status status="PASS" starttime="20230831 10:48:06.677" endtime="20230831 10:48:06.678"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 10:48:06.678" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 10:48:06.678" endtime="20230831 10:48:06.678"/>
</kw>
<status status="PASS" starttime="20230831 10:48:06.670" endtime="20230831 10:48:06.679"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230831 10:47:55.352" endtime="20230831 10:48:06.679"/>
</test>
<test id="s1-s2-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230831 10:48:06.682" level="INFO">${random} = 07404</msg>
<status status="PASS" starttime="20230831 10:48:06.681" endtime="20230831 10:48:06.682"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 10:48:06.686" level="INFO">Running command 'ozone sh key get /rootca-volume/rootca-bucket/rootca-key /tmp/key-07404 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 10:48:16.960" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 10:48:16.960" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 10:48:06.684" endtime="20230831 10:48:16.960"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 10:48:16.961" level="INFO"/>
<status status="PASS" starttime="20230831 10:48:16.960" endtime="20230831 10:48:16.962"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 10:48:16.962" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 10:48:16.962" endtime="20230831 10:48:16.962"/>
</kw>
<status status="PASS" starttime="20230831 10:48:06.683" endtime="20230831 10:48:16.963"/>
</kw>
<msg timestamp="20230831 10:48:16.963" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 10:48:06.682" endtime="20230831 10:48:16.963"/>
</kw>
<msg timestamp="20230831 10:48:16.963" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 10:48:06.682" endtime="20230831 10:48:16.963"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 10:48:16.963" endtime="20230831 10:48:16.964"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 10:48:16.968" level="INFO">Running command 'cat /tmp/key-07404 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 10:48:16.971" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 10:48:16.971" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230831 10:48:16.965" endtime="20230831 10:48:16.971"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 10:48:16.972" level="INFO">rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230831 10:48:16.972" endtime="20230831 10:48:16.972"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 10:48:16.973" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 10:48:16.973" endtime="20230831 10:48:16.973"/>
</kw>
<msg timestamp="20230831 10:48:16.973" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230831 10:48:16.964" endtime="20230831 10:48:16.973"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 10:48:16.974" endtime="20230831 10:48:16.974"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 10:48:16.978" level="INFO">Running command 'rm /tmp/key-07404 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 10:48:16.981" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 10:48:16.981" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 10:48:16.975" endtime="20230831 10:48:16.981"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 10:48:16.982" level="INFO"/>
<status status="PASS" starttime="20230831 10:48:16.981" endtime="20230831 10:48:16.982"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 10:48:16.983" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 10:48:16.982" endtime="20230831 10:48:16.983"/>
</kw>
<status status="PASS" starttime="20230831 10:48:16.974" endtime="20230831 10:48:16.983"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230831 10:48:06.680" endtime="20230831 10:48:16.983"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230831 10:47:43.052" endtime="20230831 10:48:16.985"/>
</suite>
<suite id="s1-s3" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s3-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 10:49:18.379" level="INFO">Running command 'ozone sh volume create rootca2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 10:49:24.606" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 10:49:24.606" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 10:49:18.377" endtime="20230831 10:49:24.606"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 10:49:24.608" level="INFO"/>
<status status="PASS" starttime="20230831 10:49:24.607" endtime="20230831 10:49:24.608"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 10:49:24.608" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 10:49:24.608" endtime="20230831 10:49:24.609"/>
</kw>
<status status="PASS" starttime="20230831 10:49:18.376" endtime="20230831 10:49:24.609"/>
</kw>
<msg timestamp="20230831 10:49:24.609" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 10:49:18.376" endtime="20230831 10:49:24.609"/>
</kw>
<msg timestamp="20230831 10:49:24.609" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 10:49:18.375" endtime="20230831 10:49:24.609"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 10:49:24.610" endtime="20230831 10:49:24.610"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 10:49:24.615" level="INFO">Running command 'ozone sh bucket create /rootca2-volume/rootca2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 10:49:30.999" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 10:49:31.000" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 10:49:24.612" endtime="20230831 10:49:31.000"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 10:49:31.001" level="INFO"/>
<status status="PASS" starttime="20230831 10:49:31.000" endtime="20230831 10:49:31.001"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 10:49:31.002" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 10:49:31.001" endtime="20230831 10:49:31.002"/>
</kw>
<status status="PASS" starttime="20230831 10:49:24.611" endtime="20230831 10:49:31.002"/>
</kw>
<msg timestamp="20230831 10:49:31.002" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 10:49:24.611" endtime="20230831 10:49:31.003"/>
</kw>
<msg timestamp="20230831 10:49:31.003" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 10:49:24.610" endtime="20230831 10:49:31.003"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 10:49:31.003" endtime="20230831 10:49:31.003"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230831 10:49:18.374" endtime="20230831 10:49:31.004"/>
</test>
<test id="s1-s3-t2" name="Create key" line="34">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 10:49:31.009" level="INFO">Running command 'echo "rootca2: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230831 10:49:31.012" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 10:49:31.012" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 10:49:31.006" endtime="20230831 10:49:31.012"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 10:49:31.013" level="INFO"/>
<status status="PASS" starttime="20230831 10:49:31.012" endtime="20230831 10:49:31.013"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 10:49:31.013" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 10:49:31.013" endtime="20230831 10:49:31.014"/>
</kw>
<status status="PASS" starttime="20230831 10:49:31.005" endtime="20230831 10:49:31.014"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 10:49:31.019" level="INFO">Running command 'ozone sh key put /rootca2-volume/rootca2-bucket/rootca2-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 10:49:40.256" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 10:49:40.256" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 10:49:31.016" endtime="20230831 10:49:40.256"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 10:49:40.259" level="INFO"/>
<status status="PASS" starttime="20230831 10:49:40.257" endtime="20230831 10:49:40.261"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 10:49:40.262" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 10:49:40.261" endtime="20230831 10:49:40.262"/>
</kw>
<status status="PASS" starttime="20230831 10:49:31.016" endtime="20230831 10:49:40.263"/>
</kw>
<msg timestamp="20230831 10:49:40.263" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 10:49:31.015" endtime="20230831 10:49:40.263"/>
</kw>
<msg timestamp="20230831 10:49:40.263" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 10:49:31.014" endtime="20230831 10:49:40.263"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 10:49:40.264" endtime="20230831 10:49:40.266"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 10:49:40.270" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 10:49:40.280" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 10:49:40.280" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 10:49:40.266" endtime="20230831 10:49:40.280"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 10:49:40.282" level="INFO"/>
<status status="PASS" starttime="20230831 10:49:40.281" endtime="20230831 10:49:40.282"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 10:49:40.282" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 10:49:40.282" endtime="20230831 10:49:40.283"/>
</kw>
<status status="PASS" starttime="20230831 10:49:40.266" endtime="20230831 10:49:40.283"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230831 10:49:31.005" endtime="20230831 10:49:40.283"/>
</test>
<test id="s1-s3-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230831 10:49:40.287" level="INFO">${random} = 36054</msg>
<status status="PASS" starttime="20230831 10:49:40.286" endtime="20230831 10:49:40.287"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 10:49:40.316" level="INFO">Running command 'ozone sh key get /rootca2-volume/rootca2-bucket/rootca2-key /tmp/key-36054 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 10:49:49.332" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 10:49:49.332" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 10:49:40.291" endtime="20230831 10:49:49.332"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 10:49:49.334" level="INFO"/>
<status status="PASS" starttime="20230831 10:49:49.333" endtime="20230831 10:49:49.334"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 10:49:49.334" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 10:49:49.334" endtime="20230831 10:49:49.334"/>
</kw>
<status status="PASS" starttime="20230831 10:49:40.291" endtime="20230831 10:49:49.335"/>
</kw>
<msg timestamp="20230831 10:49:49.335" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 10:49:40.290" endtime="20230831 10:49:49.335"/>
</kw>
<msg timestamp="20230831 10:49:49.335" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 10:49:40.287" endtime="20230831 10:49:49.335"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 10:49:49.335" endtime="20230831 10:49:49.336"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 10:49:49.340" level="INFO">Running command 'cat /tmp/key-36054 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 10:49:49.343" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 10:49:49.343" level="INFO">${output} = rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230831 10:49:49.337" endtime="20230831 10:49:49.343"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 10:49:49.344" level="INFO">rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230831 10:49:49.344" endtime="20230831 10:49:49.345"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 10:49:49.345" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 10:49:49.345" endtime="20230831 10:49:49.345"/>
</kw>
<msg timestamp="20230831 10:49:49.346" level="INFO">${output} = rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230831 10:49:49.336" endtime="20230831 10:49:49.346"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230831 10:49:49.346" endtime="20230831 10:49:49.346"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 10:49:49.350" level="INFO">Running command 'rm /tmp/key-36054 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 10:49:49.353" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 10:49:49.353" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230831 10:49:49.347" endtime="20230831 10:49:49.353"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 10:49:49.354" level="INFO"/>
<status status="PASS" starttime="20230831 10:49:49.353" endtime="20230831 10:49:49.354"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 10:49:49.355" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 10:49:49.354" endtime="20230831 10:49:49.355"/>
</kw>
<status status="PASS" starttime="20230831 10:49:49.347" endtime="20230831 10:49:49.355"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230831 10:49:40.285" endtime="20230831 10:49:49.355"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230831 10:49:18.318" endtime="20230831 10:49:49.357"/>
</suite>
<suite id="s1-s4" name="Root-Ca-Rotation" source="/opt/hadoop/smoketest/scmha/root-ca-rotation.robot">
<test id="s1-s4-t1" name="Verify root CA rotation metrics" line="26">
<kw name="Execute" library="os">
<var>${successRotationLine}</var>
<arg>curl -sS 'http://localhost:9876/jmx' | grep NumSuccessRotation</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230831 10:49:53.463" level="INFO">Running command 'curl -sS 'http://localhost:9876/jmx' | grep NumSuccessRotation 2&gt;&amp;1'.</msg>
<msg timestamp="20230831 10:49:54.011" level="INFO">${rc} = 0</msg>
<msg timestamp="20230831 10:49:54.011" level="INFO">${output} =     "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230831 10:49:53.460" endtime="20230831 10:49:54.011"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 10:49:54.012" level="INFO">    "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230831 10:49:54.012" endtime="20230831 10:49:54.012"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230831 10:49:54.013" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230831 10:49:54.013" endtime="20230831 10:49:54.013"/>
</kw>
<status status="PASS" starttime="20230831 10:49:53.459" endtime="20230831 10:49:54.013"/>
</kw>
<msg timestamp="20230831 10:49:54.014" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230831 10:49:53.458" endtime="20230831 10:49:54.014"/>
</kw>
<msg timestamp="20230831 10:49:54.014" level="INFO">${successRotationLine} =     "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230831 10:49:53.458" endtime="20230831 10:49:54.014"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${successRotationLine}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 10:49:54.014" level="INFO">    "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230831 10:49:54.014" endtime="20230831 10:49:54.015"/>
</kw>
<kw name="Split String" library="String">
<var>${temp_1}</var>
<arg>${successRotationLine}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230831 10:49:54.015" level="INFO">${temp_1} = ['    "NumSuccessRotation" ', ' 2,']</msg>
<status status="PASS" starttime="20230831 10:49:54.015" endtime="20230831 10:49:54.015"/>
</kw>
<kw name="Strip String" library="String">
<var>${temp_2}</var>
<arg>${temp_1[1]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230831 10:49:54.019" level="INFO">${temp_2} = 2,</msg>
<status status="PASS" starttime="20230831 10:49:54.015" endtime="20230831 10:49:54.019"/>
</kw>
<kw name="Split String" library="String">
<var>${temp_3}</var>
<arg>${temp_2}</arg>
<arg>,</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230831 10:49:54.020" level="INFO">${temp_3} = ['2', '']</msg>
<status status="PASS" starttime="20230831 10:49:54.019" endtime="20230831 10:49:54.020"/>
</kw>
<kw name="Strip String" library="String">
<var>${successRotation}</var>
<arg>${temp_3[0]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230831 10:49:54.021" level="INFO">${successRotation} = 2</msg>
<status status="PASS" starttime="20230831 10:49:54.020" endtime="20230831 10:49:54.021"/>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<var>${successRotation}</var>
<arg>${successRotation}</arg>
<doc>Converts the given item to a floating point number.</doc>
<msg timestamp="20230831 10:49:54.022" level="INFO">${successRotation} = 2.0</msg>
<status status="PASS" starttime="20230831 10:49:54.022" endtime="20230831 10:49:54.022"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${successRotation} &gt;= 1</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230831 10:49:54.022" endtime="20230831 10:49:54.023"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230831 10:49:53.457" endtime="20230831 10:49:54.023"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230831 10:49:53.403" endtime="20230831 10:49:54.025"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="65687"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="2" fail="0" skip="0">create-volume-and-bucket</stat>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="ozonesecure-root-ca-rotation">ozonesecure-root-ca-rotation</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Kinit">ozonesecure-root-ca-rotation.Kinit</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Root-Ca-Rotation-Client-Checks">ozonesecure-root-ca-rotation.Root-Ca-Rotation-Client-Checks</stat>
<stat pass="3" fail="0" skip="0" id="s1-s3" name="Root-Ca-Rotation-Client-Checks">ozonesecure-root-ca-rotation.Root-Ca-Rotation-Client-Checks</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Root-Ca-Rotation">ozonesecure-root-ca-rotation.Root-Ca-Rotation</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
