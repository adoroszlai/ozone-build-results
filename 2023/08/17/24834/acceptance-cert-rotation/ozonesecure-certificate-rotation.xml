<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20230817 21:24:20.789" rpa="false" schemaversion="4">
<suite id="s1" name="ozonesecure-certificate-rotation" source="/opt/hadoop/smoketest/certrotation">
<suite id="s1-s1" name="Cert-Rotation" source="/opt/hadoop/smoketest/certrotation/cert-rotation.robot">
<kw name="Setup Test" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230817 21:22:16.554" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230817 21:22:16.568" level="INFO">${rc} = 0</msg>
<msg timestamp="20230817 21:22:16.568" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230817 21:22:16.548" endtime="20230817 21:22:16.568"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230817 21:22:16.570" level="INFO">scm</msg>
<status status="PASS" starttime="20230817 21:22:16.569" endtime="20230817 21:22:16.570"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230817 21:22:16.570" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230817 21:22:16.570" endtime="20230817 21:22:16.571"/>
</kw>
<status status="PASS" starttime="20230817 21:22:16.543" endtime="20230817 21:22:16.571"/>
</kw>
<msg timestamp="20230817 21:22:16.571" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230817 21:22:16.542" endtime="20230817 21:22:16.571"/>
</kw>
<msg timestamp="20230817 21:22:16.571" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230817 21:22:16.533" endtime="20230817 21:22:16.571"/>
</kw>
<msg timestamp="20230817 21:22:16.582" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230817 21:22:16.533" endtime="20230817 21:22:16.582"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230817 21:22:16.583" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230817 21:22:16.583" endtime="20230817 21:22:16.583"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230817 21:22:16.598" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230817 21:22:16.703" level="INFO">${rc} = 0</msg>
<msg timestamp="20230817 21:22:16.703" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230817 21:22:16.590" endtime="20230817 21:22:16.703"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230817 21:22:16.705" level="INFO"/>
<status status="PASS" starttime="20230817 21:22:16.704" endtime="20230817 21:22:16.705"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230817 21:22:16.705" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230817 21:22:16.705" endtime="20230817 21:22:16.705"/>
</kw>
<status status="PASS" starttime="20230817 21:22:16.589" endtime="20230817 21:22:16.706"/>
</kw>
<msg timestamp="20230817 21:22:16.706" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230817 21:22:16.589" endtime="20230817 21:22:16.706"/>
</kw>
<status status="PASS" starttime="20230817 21:22:16.585" endtime="20230817 21:22:16.706"/>
</kw>
<status status="PASS" starttime="20230817 21:22:16.583" endtime="20230817 21:22:16.706"/>
</kw>
<status status="PASS" starttime="20230817 21:22:16.532" endtime="20230817 21:22:16.706"/>
</kw>
<status status="PASS" starttime="20230817 21:22:16.531" endtime="20230817 21:22:16.707"/>
</kw>
<status status="PASS" starttime="20230817 21:22:16.530" endtime="20230817 21:22:16.707"/>
</kw>
<test id="s1-s1-t1" name="Test datanode functions before and after certificate rotation" line="55">
<kw name="Basic key generation and validation">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>10</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230817 21:22:16.717" level="INFO">${random} = MP4L8xwFqg</msg>
<status status="PASS" starttime="20230817 21:22:16.711" endtime="20230817 21:22:16.717"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230817 21:22:16.724" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p MP4L8xwFqg  2&gt;&amp;1'.</msg>
<msg timestamp="20230817 21:22:37.958" level="INFO">${rc} = 0</msg>
<msg timestamp="20230817 21:22:37.958" level="INFO">${output} = 2023-08-17 21:22:23,304 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-17 21:22:23,586 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230817 21:22:16.721" endtime="20230817 21:22:37.959"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230817 21:22:37.960" level="INFO">2023-08-17 21:22:23,304 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-17 21:22:23,586 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-08-17 21:22:23,586 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-08-17 21:22:23,738 [main] INFO freon.BaseFreonGenerator: Executing test with prefix MP4L8xwFqg and number-of-tests 1
2023-08-17 21:22:23,850 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-17 21:22:24,852 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-17 21:22:25,852 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-17 21:22:26,855 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-17 21:22:27,757 [main] INFO rpc.RpcClient: Creating Volume: vol1, with testuser as owner and space quota set to -1 bytes, counts quota set to -1
2023-08-17 21:22:27,856 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-17 21:22:28,341 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with server-side default bucket layout, testuser as owner, Versioning false, Storage Type set to DISK and Encryption set to false, Replication Type set to server-side default replication type, Namespace Quota set to -1, Space Quota set to -1 
2023-08-17 21:22:28,860 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-17 21:22:29,620 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-08-17 21:22:29,724 [pool-2-thread-1] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig0-
2023-08-17 21:22:29,860 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-17 21:22:30,125 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-08-17 21:22:30,861 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-17 21:22:31,863 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-17 21:22:32,864 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-17 21:22:33,864 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-17 21:22:34,865 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-17 21:22:35,871 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-17 21:22:36,871 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-08-17 21:22:37,506 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=7958.220898, max=7958.220898, mean=7958.220898, stddev=0.0, median=7958.220898, p75=7958.220898, p95=7958.220898, p98=7958.220898, p99=7958.220898, p999=7958.220898, mean_rate=0.11161501423196685, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-08-17 21:22:37,508 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 14
2023-08-17 21:22:37,508 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-08-17 21:22:37,508 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230817 21:22:37.959" endtime="20230817 21:22:37.960"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230817 21:22:37.961" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230817 21:22:37.961" endtime="20230817 21:22:37.961"/>
</kw>
<status status="PASS" starttime="20230817 21:22:16.720" endtime="20230817 21:22:37.962"/>
</kw>
<msg timestamp="20230817 21:22:37.962" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230817 21:22:16.720" endtime="20230817 21:22:37.962"/>
</kw>
<msg timestamp="20230817 21:22:37.963" level="INFO">${result} = 2023-08-17 21:22:23,304 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-17 21:22:23,586 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230817 21:22:16.719" endtime="20230817 21:22:37.963"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230817 21:22:37.963" endtime="20230817 21:22:37.963"/>
</kw>
<status status="PASS" starttime="20230817 21:22:16.717" endtime="20230817 21:22:37.964"/>
</kw>
<kw name="Freon OCKV" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230817 21:22:37.975" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p MP4L8xwFqg  2&gt;&amp;1'.</msg>
<msg timestamp="20230817 21:22:50.802" level="INFO">${rc} = 0</msg>
<msg timestamp="20230817 21:22:50.802" level="INFO">${output} = 2023-08-17 21:22:42,749 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-17 21:22:42,919 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230817 21:22:37.972" endtime="20230817 21:22:50.802"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230817 21:22:50.804" level="INFO">2023-08-17 21:22:42,749 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-17 21:22:42,919 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-08-17 21:22:42,919 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-08-17 21:22:43,030 [main] INFO freon.BaseFreonGenerator: Executing test with prefix MP4L8xwFqg and number-of-tests 1
2023-08-17 21:22:43,110 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-17 21:22:44,113 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-17 21:22:45,113 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-17 21:22:46,116 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-17 21:22:46,479 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-08-17 21:22:47,117 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-17 21:22:48,117 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-17 21:22:49,119 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-17 21:22:50,119 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-08-17 21:22:50,392 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=242.925908, max=242.925908, mean=242.925908, stddev=0.0, median=242.925908, p75=242.925908, p95=242.925908, p98=242.925908, p99=242.925908, p999=242.925908, mean_rate=0.8919086736356991, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-08-17 21:22:50,397 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 7
2023-08-17 21:22:50,398 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-08-17 21:22:50,398 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230817 21:22:50.803" endtime="20230817 21:22:50.804"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230817 21:22:50.805" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230817 21:22:50.804" endtime="20230817 21:22:50.805"/>
</kw>
<status status="PASS" starttime="20230817 21:22:37.967" endtime="20230817 21:22:50.805"/>
</kw>
<msg timestamp="20230817 21:22:50.805" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230817 21:22:37.967" endtime="20230817 21:22:50.806"/>
</kw>
<msg timestamp="20230817 21:22:50.806" level="INFO">${result} = 2023-08-17 21:22:42,749 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-17 21:22:42,919 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230817 21:22:37.966" endtime="20230817 21:22:50.806"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230817 21:22:50.806" endtime="20230817 21:22:50.807"/>
</kw>
<status status="PASS" starttime="20230817 21:22:37.964" endtime="20230817 21:22:50.807"/>
</kw>
<status status="PASS" starttime="20230817 21:22:16.710" endtime="20230817 21:22:50.807"/>
</kw>
<kw name="Find certificate duration">
<var>${certDuration}</var>
<kw name="Execute" library="os">
<var>${waitTime}</var>
<arg>ozone getconf confKey hdds.x509.default.duration | sed 's/PT//'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230817 21:22:50.814" level="INFO">Running command 'ozone getconf confKey hdds.x509.default.duration | sed 's/PT//' 2&gt;&amp;1'.</msg>
<msg timestamp="20230817 21:22:54.552" level="INFO">${rc} = 0</msg>
<msg timestamp="20230817 21:22:54.552" level="INFO">${output} = 40s</msg>
<status status="PASS" starttime="20230817 21:22:50.810" endtime="20230817 21:22:54.552"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230817 21:22:54.556" level="INFO">40s</msg>
<status status="PASS" starttime="20230817 21:22:54.553" endtime="20230817 21:22:54.557"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230817 21:22:54.558" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230817 21:22:54.557" endtime="20230817 21:22:54.558"/>
</kw>
<status status="PASS" starttime="20230817 21:22:50.809" endtime="20230817 21:22:54.561"/>
</kw>
<msg timestamp="20230817 21:22:54.561" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230817 21:22:50.809" endtime="20230817 21:22:54.561"/>
</kw>
<msg timestamp="20230817 21:22:54.562" level="INFO">${waitTime} = 40s</msg>
<status status="PASS" starttime="20230817 21:22:50.808" endtime="20230817 21:22:54.562"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>"${waitTime}" != "${EMPTY}"</arg>
<arg>${waitTime}</arg>
<arg>0s</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230817 21:22:54.564" level="INFO">${result} = 40s</msg>
<status status="PASS" starttime="20230817 21:22:54.562" endtime="20230817 21:22:54.564"/>
</kw>
<msg timestamp="20230817 21:22:54.565" level="INFO">${certDuration} = 40s</msg>
<status status="PASS" starttime="20230817 21:22:50.807" endtime="20230817 21:22:54.565"/>
</kw>
<kw name="Double duration">
<var>${doubleDuration}</var>
<arg>${certDuration}</arg>
<kw name="Add Time To Time" library="DateTime">
<var>${doubleDuration}</var>
<arg>${duration}</arg>
<arg>${duration}</arg>
<doc>Adds time to another time and returns the resulting time.</doc>
<msg timestamp="20230817 21:22:54.567" level="INFO">${doubleDuration} = 80.0</msg>
<status status="PASS" starttime="20230817 21:22:54.566" endtime="20230817 21:22:54.567"/>
</kw>
<msg timestamp="20230817 21:22:54.567" level="INFO">${doubleDuration} = 80.0</msg>
<status status="PASS" starttime="20230817 21:22:54.565" endtime="20230817 21:22:54.567"/>
</kw>
<kw name="Get datanode cert serial">
<var>${certId1}</var>
<kw name="Execute" library="os">
<var>${certSerial}</var>
<arg>openssl s_client -connect "${datanode}":"${port}" -showcerts | openssl x509 -noout -serial | grep serial | sed 's/serial=//'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230817 21:22:54.574" level="INFO">Running command 'openssl s_client -connect "datanode":"9859" -showcerts | openssl x509 -noout -serial | grep serial | sed 's/serial=//' 2&gt;&amp;1'.</msg>
<msg timestamp="20230817 21:22:54.801" level="INFO">${rc} = 0</msg>
<msg timestamp="20230817 21:22:54.802" level="INFO">${output} = E3EEA804BD</msg>
<status status="PASS" starttime="20230817 21:22:54.570" endtime="20230817 21:22:54.802"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230817 21:22:54.804" level="INFO">E3EEA804BD</msg>
<status status="PASS" starttime="20230817 21:22:54.803" endtime="20230817 21:22:54.805"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230817 21:22:54.806" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230817 21:22:54.805" endtime="20230817 21:22:54.806"/>
</kw>
<status status="PASS" starttime="20230817 21:22:54.569" endtime="20230817 21:22:54.806"/>
</kw>
<msg timestamp="20230817 21:22:54.806" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230817 21:22:54.569" endtime="20230817 21:22:54.806"/>
</kw>
<msg timestamp="20230817 21:22:54.807" level="INFO">${certSerial} = E3EEA804BD</msg>
<status status="PASS" starttime="20230817 21:22:54.568" endtime="20230817 21:22:54.807"/>
</kw>
<msg timestamp="20230817 21:22:54.807" level="INFO">${certId1} = E3EEA804BD</msg>
<status status="PASS" starttime="20230817 21:22:54.568" endtime="20230817 21:22:54.807"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${doubleDuration}</arg>
<arg>5sec</arg>
<arg>Datanode has new certificate</arg>
<arg>${certId1}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Datanode has new certificate">
<arg>${certId1}</arg>
<kw name="Get datanode cert serial">
<var>${newCertId}</var>
<kw name="Execute" library="os">
<var>${certSerial}</var>
<arg>openssl s_client -connect "${datanode}":"${port}" -showcerts | openssl x509 -noout -serial | grep serial | sed 's/serial=//'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230817 21:22:54.829" level="INFO">Running command 'openssl s_client -connect "datanode":"9859" -showcerts | openssl x509 -noout -serial | grep serial | sed 's/serial=//' 2&gt;&amp;1'.</msg>
<msg timestamp="20230817 21:22:55.000" level="INFO">${rc} = 0</msg>
<msg timestamp="20230817 21:22:55.001" level="INFO">${output} = E3DFBEA599</msg>
<status status="PASS" starttime="20230817 21:22:54.819" endtime="20230817 21:22:55.001"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230817 21:22:55.002" level="INFO">E3DFBEA599</msg>
<status status="PASS" starttime="20230817 21:22:55.001" endtime="20230817 21:22:55.003"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230817 21:22:55.006" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230817 21:22:55.006" endtime="20230817 21:22:55.006"/>
</kw>
<status status="PASS" starttime="20230817 21:22:54.817" endtime="20230817 21:22:55.007"/>
</kw>
<msg timestamp="20230817 21:22:55.007" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230817 21:22:54.815" endtime="20230817 21:22:55.007"/>
</kw>
<msg timestamp="20230817 21:22:55.007" level="INFO">${certSerial} = E3DFBEA599</msg>
<status status="PASS" starttime="20230817 21:22:54.813" endtime="20230817 21:22:55.007"/>
</kw>
<msg timestamp="20230817 21:22:55.008" level="INFO">${newCertId} = E3DFBEA599</msg>
<status status="PASS" starttime="20230817 21:22:54.811" endtime="20230817 21:22:55.008"/>
</kw>
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${certId}</arg>
<arg>${newCertId}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="PASS" starttime="20230817 21:22:55.008" endtime="20230817 21:22:55.012"/>
</kw>
<status status="PASS" starttime="20230817 21:22:54.809" endtime="20230817 21:22:55.012"/>
</kw>
<status status="PASS" starttime="20230817 21:22:54.808" endtime="20230817 21:22:55.012"/>
</kw>
<kw name="Basic key generation and validation">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>10</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230817 21:22:55.014" level="INFO">${random} = w6ITCjqihT</msg>
<status status="PASS" starttime="20230817 21:22:55.013" endtime="20230817 21:22:55.014"/>
</kw>
<kw name="Freon OCKG" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockg ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230817 21:22:55.034" level="INFO">Running command 'ozone freon ockg  -t 1 -n1 -p w6ITCjqihT  2&gt;&amp;1'.</msg>
<msg timestamp="20230817 21:23:06.328" level="INFO">${rc} = 0</msg>
<msg timestamp="20230817 21:23:06.328" level="INFO">${output} = 2023-08-17 21:22:58,470 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-17 21:22:58,613 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230817 21:22:55.022" endtime="20230817 21:23:06.328"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230817 21:23:06.330" level="INFO">2023-08-17 21:22:58,470 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-17 21:22:58,613 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-08-17 21:22:58,613 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-08-17 21:22:58,713 [main] INFO freon.BaseFreonGenerator: Executing test with prefix w6ITCjqihT and number-of-tests 1
2023-08-17 21:22:58,796 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-17 21:22:59,804 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-17 21:23:00,804 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-17 21:23:01,798 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-08-17 21:23:01,805 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-17 21:23:01,864 [pool-2-thread-1] INFO netty.NettyConfigKeys$DataStream: setTlsConf GrpcTlsConfig0-
2023-08-17 21:23:02,485 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2023-08-17 21:23:02,807 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-17 21:23:03,807 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-17 21:23:04,825 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-17 21:23:05,826 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-08-17 21:23:05,961 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-create, count=1, min=3446.797105, max=3446.797105, mean=3446.797105, stddev=0.0, median=3446.797105, p75=3446.797105, p95=3446.797105, p98=3446.797105, p99=3446.797105, p999=3446.797105, mean_rate=0.22098882519863017, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-08-17 21:23:05,962 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 7
2023-08-17 21:23:05,965 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-08-17 21:23:05,965 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230817 21:23:06.329" endtime="20230817 21:23:06.330"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230817 21:23:06.331" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230817 21:23:06.330" endtime="20230817 21:23:06.331"/>
</kw>
<status status="PASS" starttime="20230817 21:22:55.022" endtime="20230817 21:23:06.331"/>
</kw>
<msg timestamp="20230817 21:23:06.331" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230817 21:22:55.020" endtime="20230817 21:23:06.331"/>
</kw>
<msg timestamp="20230817 21:23:06.332" level="INFO">${result} = 2023-08-17 21:22:58,470 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-17 21:22:58,613 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230817 21:22:55.016" endtime="20230817 21:23:06.332"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230817 21:23:06.332" endtime="20230817 21:23:06.332"/>
</kw>
<status status="PASS" starttime="20230817 21:22:55.014" endtime="20230817 21:23:06.333"/>
</kw>
<kw name="Freon OCKV" library="freon">
<arg>prefix=${random}</arg>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon ockv ${OM_HA_PARAM} -t ${threads} -n${n} -p ${prefix} ${args}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230817 21:23:06.340" level="INFO">Running command 'ozone freon ockv  -t 1 -n1 -p w6ITCjqihT  2&gt;&amp;1'.</msg>
<msg timestamp="20230817 21:23:19.115" level="INFO">${rc} = 0</msg>
<msg timestamp="20230817 21:23:19.115" level="INFO">${output} = 2023-08-17 21:23:10,487 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-17 21:23:10,739 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230817 21:23:06.336" endtime="20230817 21:23:19.115"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230817 21:23:19.117" level="INFO">2023-08-17 21:23:10,487 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-17 21:23:10,739 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2023-08-17 21:23:10,739 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2023-08-17 21:23:10,853 [main] INFO freon.BaseFreonGenerator: Executing test with prefix w6ITCjqihT and number-of-tests 1
2023-08-17 21:23:10,939 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-17 21:23:11,941 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-17 21:23:12,943 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-17 21:23:13,946 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-17 21:23:14,949 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-17 21:23:15,950 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-17 21:23:15,958 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2023-08-17 21:23:16,950 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2023-08-17 21:23:17,951 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2023-08-17 21:23:18,709 [shutdown-hook-0] INFO metrics: type=TIMER, name=key-validate, count=1, min=80.944661, max=80.944661, mean=80.944661, stddev=0.0, median=80.944661, p75=80.944661, p95=80.944661, p98=80.944661, p99=80.944661, p999=80.944661, mean_rate=0.8754839303086075, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2023-08-17 21:23:18,711 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Total execution time (sec): 8
2023-08-17 21:23:18,712 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Failures: 0
2023-08-17 21:23:18,712 [shutdown-hook-0] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" starttime="20230817 21:23:19.116" endtime="20230817 21:23:19.117"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230817 21:23:19.118" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230817 21:23:19.117" endtime="20230817 21:23:19.118"/>
</kw>
<status status="PASS" starttime="20230817 21:23:06.336" endtime="20230817 21:23:19.118"/>
</kw>
<msg timestamp="20230817 21:23:19.118" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230817 21:23:06.335" endtime="20230817 21:23:19.119"/>
</kw>
<msg timestamp="20230817 21:23:19.119" level="INFO">${result} = 2023-08-17 21:23:10,487 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2023-08-17 21:23:10,739 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" starttime="20230817 21:23:06.335" endtime="20230817 21:23:19.119"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Successful executions: ${n}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230817 21:23:19.119" endtime="20230817 21:23:19.120"/>
</kw>
<status status="PASS" starttime="20230817 21:23:06.333" endtime="20230817 21:23:19.120"/>
</kw>
<status status="PASS" starttime="20230817 21:22:55.012" endtime="20230817 21:23:19.120"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230817 21:22:16.707" endtime="20230817 21:23:19.120"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230817 21:22:16.196" endtime="20230817 21:23:19.123"/>
</suite>
<suite id="s1-s2" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s2-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230817 21:23:19.148" level="INFO">Running command 'ozone sh volume create rootca-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230817 21:23:27.255" level="INFO">${rc} = 0</msg>
<msg timestamp="20230817 21:23:27.255" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230817 21:23:19.145" endtime="20230817 21:23:27.255"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230817 21:23:27.257" level="INFO"/>
<status status="PASS" starttime="20230817 21:23:27.256" endtime="20230817 21:23:27.257"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230817 21:23:27.258" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230817 21:23:27.258" endtime="20230817 21:23:27.258"/>
</kw>
<status status="PASS" starttime="20230817 21:23:19.144" endtime="20230817 21:23:27.259"/>
</kw>
<msg timestamp="20230817 21:23:27.259" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230817 21:23:19.144" endtime="20230817 21:23:27.259"/>
</kw>
<msg timestamp="20230817 21:23:27.259" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230817 21:23:19.143" endtime="20230817 21:23:27.259"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230817 21:23:27.260" endtime="20230817 21:23:27.260"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230817 21:23:27.267" level="INFO">Running command 'ozone sh bucket create /rootca-volume/rootca-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230817 21:23:36.838" level="INFO">${rc} = 0</msg>
<msg timestamp="20230817 21:23:36.838" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230817 21:23:27.263" endtime="20230817 21:23:36.839"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230817 21:23:36.840" level="INFO"/>
<status status="PASS" starttime="20230817 21:23:36.839" endtime="20230817 21:23:36.840"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230817 21:23:36.841" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230817 21:23:36.841" endtime="20230817 21:23:36.841"/>
</kw>
<status status="PASS" starttime="20230817 21:23:27.262" endtime="20230817 21:23:36.841"/>
</kw>
<msg timestamp="20230817 21:23:36.842" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230817 21:23:27.262" endtime="20230817 21:23:36.842"/>
</kw>
<msg timestamp="20230817 21:23:36.842" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230817 21:23:27.261" endtime="20230817 21:23:36.842"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230817 21:23:36.842" endtime="20230817 21:23:36.843"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230817 21:23:19.142" endtime="20230817 21:23:36.843"/>
</test>
<test id="s1-s2-t2" name="Create key" line="34">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230817 21:23:36.849" level="INFO">Running command 'echo "rootca: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230817 21:23:36.852" level="INFO">${rc} = 0</msg>
<msg timestamp="20230817 21:23:36.852" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230817 21:23:36.846" endtime="20230817 21:23:36.852"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230817 21:23:36.854" level="INFO"/>
<status status="PASS" starttime="20230817 21:23:36.853" endtime="20230817 21:23:36.854"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230817 21:23:36.855" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230817 21:23:36.854" endtime="20230817 21:23:36.855"/>
</kw>
<status status="PASS" starttime="20230817 21:23:36.845" endtime="20230817 21:23:36.855"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230817 21:23:36.861" level="INFO">Running command 'ozone sh key put /rootca-volume/rootca-bucket/rootca-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230817 21:23:49.073" level="INFO">${rc} = 0</msg>
<msg timestamp="20230817 21:23:49.073" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230817 21:23:36.858" endtime="20230817 21:23:49.073"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230817 21:23:49.076" level="INFO"/>
<status status="PASS" starttime="20230817 21:23:49.075" endtime="20230817 21:23:49.076"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230817 21:23:49.076" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230817 21:23:49.076" endtime="20230817 21:23:49.077"/>
</kw>
<status status="PASS" starttime="20230817 21:23:36.857" endtime="20230817 21:23:49.077"/>
</kw>
<msg timestamp="20230817 21:23:49.077" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230817 21:23:36.856" endtime="20230817 21:23:49.077"/>
</kw>
<msg timestamp="20230817 21:23:49.078" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230817 21:23:36.856" endtime="20230817 21:23:49.078"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230817 21:23:49.078" endtime="20230817 21:23:49.078"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230817 21:23:49.083" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230817 21:23:49.086" level="INFO">${rc} = 0</msg>
<msg timestamp="20230817 21:23:49.087" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230817 21:23:49.079" endtime="20230817 21:23:49.087"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230817 21:23:49.088" level="INFO"/>
<status status="PASS" starttime="20230817 21:23:49.087" endtime="20230817 21:23:49.088"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230817 21:23:49.094" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230817 21:23:49.089" endtime="20230817 21:23:49.094"/>
</kw>
<status status="PASS" starttime="20230817 21:23:49.079" endtime="20230817 21:23:49.095"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230817 21:23:36.844" endtime="20230817 21:23:49.095"/>
</test>
<test id="s1-s2-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230817 21:23:49.098" level="INFO">${random} = 51863</msg>
<status status="PASS" starttime="20230817 21:23:49.098" endtime="20230817 21:23:49.098"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230817 21:23:49.104" level="INFO">Running command 'ozone sh key get /rootca-volume/rootca-bucket/rootca-key /tmp/key-51863 2&gt;&amp;1'.</msg>
<msg timestamp="20230817 21:24:01.281" level="INFO">${rc} = 0</msg>
<msg timestamp="20230817 21:24:01.281" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230817 21:23:49.101" endtime="20230817 21:24:01.282"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230817 21:24:01.284" level="INFO"/>
<status status="PASS" starttime="20230817 21:24:01.283" endtime="20230817 21:24:01.284"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230817 21:24:01.285" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230817 21:24:01.284" endtime="20230817 21:24:01.285"/>
</kw>
<status status="PASS" starttime="20230817 21:23:49.100" endtime="20230817 21:24:01.286"/>
</kw>
<msg timestamp="20230817 21:24:01.286" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230817 21:23:49.099" endtime="20230817 21:24:01.286"/>
</kw>
<msg timestamp="20230817 21:24:01.286" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230817 21:23:49.099" endtime="20230817 21:24:01.286"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230817 21:24:01.287" endtime="20230817 21:24:01.287"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230817 21:24:01.292" level="INFO">Running command 'cat /tmp/key-51863 2&gt;&amp;1'.</msg>
<msg timestamp="20230817 21:24:01.295" level="INFO">${rc} = 0</msg>
<msg timestamp="20230817 21:24:01.295" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230817 21:24:01.288" endtime="20230817 21:24:01.295"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230817 21:24:01.297" level="INFO">rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230817 21:24:01.296" endtime="20230817 21:24:01.297"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230817 21:24:01.298" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230817 21:24:01.297" endtime="20230817 21:24:01.298"/>
</kw>
<msg timestamp="20230817 21:24:01.299" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230817 21:24:01.287" endtime="20230817 21:24:01.299"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230817 21:24:01.299" endtime="20230817 21:24:01.300"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230817 21:24:01.303" level="INFO">Running command 'rm /tmp/key-51863 2&gt;&amp;1'.</msg>
<msg timestamp="20230817 21:24:01.307" level="INFO">${rc} = 0</msg>
<msg timestamp="20230817 21:24:01.307" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230817 21:24:01.301" endtime="20230817 21:24:01.307"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230817 21:24:01.308" level="INFO"/>
<status status="PASS" starttime="20230817 21:24:01.307" endtime="20230817 21:24:01.308"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230817 21:24:01.309" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230817 21:24:01.309" endtime="20230817 21:24:01.309"/>
</kw>
<status status="PASS" starttime="20230817 21:24:01.300" endtime="20230817 21:24:01.310"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230817 21:23:49.096" endtime="20230817 21:24:01.310"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230817 21:23:19.126" endtime="20230817 21:24:01.312"/>
</suite>
<status status="PASS" starttime="20230817 21:22:15.828" endtime="20230817 21:24:01.315"/>
</suite>
<statistics>
<total>
<stat pass="4" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">create-volume-and-bucket</stat>
</tag>
<suite>
<stat pass="4" fail="0" skip="0" id="s1" name="ozonesecure-certificate-rotation">ozonesecure-certificate-rotation</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Cert-Rotation">ozonesecure-certificate-rotation.Cert-Rotation</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Root-Ca-Rotation-Client-Checks">ozonesecure-certificate-rotation.Root-Ca-Rotation-Client-Checks</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
