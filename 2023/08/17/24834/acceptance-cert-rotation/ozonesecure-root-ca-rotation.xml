<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.1.1 (Python 3.8.10 on linux)" generated="20230817 21:30:00.488" rpa="false" schemaversion="4">
<suite id="s1" name="ozonesecure-root-ca-rotation">
<suite id="s1-s1" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s1-t1" name="Kinit" line="27">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Get test user principal" library="commonlib">
<var>${TEST_USER}</var>
<arg>${user}</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230817 21:26:56.597" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20230817 21:26:56.624" level="INFO">${rc} = 0</msg>
<msg timestamp="20230817 21:26:56.624" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20230817 21:26:56.581" endtime="20230817 21:26:56.624"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230817 21:26:56.626" level="INFO">scm</msg>
<status status="PASS" starttime="20230817 21:26:56.625" endtime="20230817 21:26:56.627"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230817 21:26:56.628" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230817 21:26:56.627" endtime="20230817 21:26:56.628"/>
</kw>
<status status="PASS" starttime="20230817 21:26:56.580" endtime="20230817 21:26:56.630"/>
</kw>
<msg timestamp="20230817 21:26:56.630" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230817 21:26:56.578" endtime="20230817 21:26:56.630"/>
</kw>
<msg timestamp="20230817 21:26:56.630" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20230817 21:26:56.577" endtime="20230817 21:26:56.630"/>
</kw>
<msg timestamp="20230817 21:26:56.632" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230817 21:26:56.575" endtime="20230817 21:26:56.632"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230817 21:26:56.636" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20230817 21:26:56.632" endtime="20230817 21:26:56.636"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k -t /etc/security/keytabs/${keytab} ${TEST_USER}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230817 21:26:56.665" level="INFO">Running command 'kinit -k -t /etc/security/keytabs/testuser.keytab testuser/scm@EXAMPLE.COM 2&gt;&amp;1'.</msg>
<msg timestamp="20230817 21:26:56.759" level="INFO">${rc} = 0</msg>
<msg timestamp="20230817 21:26:56.759" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230817 21:26:56.646" endtime="20230817 21:26:56.759"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230817 21:26:56.764" level="INFO"/>
<status status="PASS" starttime="20230817 21:26:56.761" endtime="20230817 21:26:56.764"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230817 21:26:56.767" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230817 21:26:56.764" endtime="20230817 21:26:56.767"/>
</kw>
<status status="PASS" starttime="20230817 21:26:56.645" endtime="20230817 21:26:56.770"/>
</kw>
<msg timestamp="20230817 21:26:56.770" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230817 21:26:56.641" endtime="20230817 21:26:56.770"/>
</kw>
<status status="PASS" starttime="20230817 21:26:56.637" endtime="20230817 21:26:56.770"/>
</kw>
<status status="PASS" starttime="20230817 21:26:56.636" endtime="20230817 21:26:56.770"/>
</kw>
<status status="PASS" starttime="20230817 21:26:56.572" endtime="20230817 21:26:56.770"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20230817 21:26:56.570" endtime="20230817 21:26:56.771"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20230817 21:26:56.246" endtime="20230817 21:26:56.783"/>
</suite>
<suite id="s1-s2" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s2-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230817 21:27:21.317" level="INFO">Running command 'ozone sh volume create rootca-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230817 21:27:29.161" level="INFO">${rc} = 0</msg>
<msg timestamp="20230817 21:27:29.162" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230817 21:27:21.314" endtime="20230817 21:27:29.162"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230817 21:27:29.163" level="INFO"/>
<status status="PASS" starttime="20230817 21:27:29.162" endtime="20230817 21:27:29.163"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230817 21:27:29.164" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230817 21:27:29.163" endtime="20230817 21:27:29.164"/>
</kw>
<status status="PASS" starttime="20230817 21:27:21.313" endtime="20230817 21:27:29.165"/>
</kw>
<msg timestamp="20230817 21:27:29.165" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230817 21:27:21.312" endtime="20230817 21:27:29.165"/>
</kw>
<msg timestamp="20230817 21:27:29.165" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230817 21:27:21.311" endtime="20230817 21:27:29.165"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230817 21:27:29.165" endtime="20230817 21:27:29.166"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230817 21:27:29.171" level="INFO">Running command 'ozone sh bucket create /rootca-volume/rootca-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230817 21:27:36.216" level="INFO">${rc} = 0</msg>
<msg timestamp="20230817 21:27:36.217" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230817 21:27:29.168" endtime="20230817 21:27:36.217"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230817 21:27:36.218" level="INFO"/>
<status status="PASS" starttime="20230817 21:27:36.217" endtime="20230817 21:27:36.218"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230817 21:27:36.219" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230817 21:27:36.218" endtime="20230817 21:27:36.219"/>
</kw>
<status status="PASS" starttime="20230817 21:27:29.167" endtime="20230817 21:27:36.219"/>
</kw>
<msg timestamp="20230817 21:27:36.219" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230817 21:27:29.167" endtime="20230817 21:27:36.219"/>
</kw>
<msg timestamp="20230817 21:27:36.220" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230817 21:27:29.166" endtime="20230817 21:27:36.220"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230817 21:27:36.220" endtime="20230817 21:27:36.220"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230817 21:27:21.310" endtime="20230817 21:27:36.221"/>
</test>
<test id="s1-s2-t2" name="Create key" line="34">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230817 21:27:36.227" level="INFO">Running command 'echo "rootca: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230817 21:27:36.229" level="INFO">${rc} = 0</msg>
<msg timestamp="20230817 21:27:36.229" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230817 21:27:36.224" endtime="20230817 21:27:36.229"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230817 21:27:36.230" level="INFO"/>
<status status="PASS" starttime="20230817 21:27:36.229" endtime="20230817 21:27:36.230"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230817 21:27:36.231" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230817 21:27:36.231" endtime="20230817 21:27:36.231"/>
</kw>
<status status="PASS" starttime="20230817 21:27:36.223" endtime="20230817 21:27:36.232"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230817 21:27:36.239" level="INFO">Running command 'ozone sh key put /rootca-volume/rootca-bucket/rootca-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230817 21:27:50.181" level="INFO">${rc} = 0</msg>
<msg timestamp="20230817 21:27:50.181" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230817 21:27:36.236" endtime="20230817 21:27:50.181"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230817 21:27:50.182" level="INFO"/>
<status status="PASS" starttime="20230817 21:27:50.182" endtime="20230817 21:27:50.182"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230817 21:27:50.183" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230817 21:27:50.183" endtime="20230817 21:27:50.184"/>
</kw>
<status status="PASS" starttime="20230817 21:27:36.234" endtime="20230817 21:27:50.184"/>
</kw>
<msg timestamp="20230817 21:27:50.184" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230817 21:27:36.233" endtime="20230817 21:27:50.184"/>
</kw>
<msg timestamp="20230817 21:27:50.184" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230817 21:27:36.232" endtime="20230817 21:27:50.184"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230817 21:27:50.185" endtime="20230817 21:27:50.185"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230817 21:27:50.189" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230817 21:27:50.193" level="INFO">${rc} = 0</msg>
<msg timestamp="20230817 21:27:50.193" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230817 21:27:50.186" endtime="20230817 21:27:50.193"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230817 21:27:50.194" level="INFO"/>
<status status="PASS" starttime="20230817 21:27:50.194" endtime="20230817 21:27:50.194"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230817 21:27:50.195" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230817 21:27:50.195" endtime="20230817 21:27:50.195"/>
</kw>
<status status="PASS" starttime="20230817 21:27:50.185" endtime="20230817 21:27:50.196"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230817 21:27:36.222" endtime="20230817 21:27:50.196"/>
</test>
<test id="s1-s2-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230817 21:27:50.199" level="INFO">${random} = 08526</msg>
<status status="PASS" starttime="20230817 21:27:50.198" endtime="20230817 21:27:50.199"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230817 21:27:50.204" level="INFO">Running command 'ozone sh key get /rootca-volume/rootca-bucket/rootca-key /tmp/key-08526 2&gt;&amp;1'.</msg>
<msg timestamp="20230817 21:28:01.442" level="INFO">${rc} = 0</msg>
<msg timestamp="20230817 21:28:01.442" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230817 21:27:50.201" endtime="20230817 21:28:01.442"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230817 21:28:01.443" level="INFO"/>
<status status="PASS" starttime="20230817 21:28:01.442" endtime="20230817 21:28:01.444"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230817 21:28:01.444" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230817 21:28:01.444" endtime="20230817 21:28:01.445"/>
</kw>
<status status="PASS" starttime="20230817 21:27:50.201" endtime="20230817 21:28:01.445"/>
</kw>
<msg timestamp="20230817 21:28:01.446" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230817 21:27:50.200" endtime="20230817 21:28:01.446"/>
</kw>
<msg timestamp="20230817 21:28:01.446" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230817 21:27:50.199" endtime="20230817 21:28:01.446"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230817 21:28:01.447" endtime="20230817 21:28:01.447"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230817 21:28:01.451" level="INFO">Running command 'cat /tmp/key-08526 2&gt;&amp;1'.</msg>
<msg timestamp="20230817 21:28:01.455" level="INFO">${rc} = 0</msg>
<msg timestamp="20230817 21:28:01.455" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230817 21:28:01.448" endtime="20230817 21:28:01.455"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230817 21:28:01.457" level="INFO">rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230817 21:28:01.456" endtime="20230817 21:28:01.457"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230817 21:28:01.458" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230817 21:28:01.457" endtime="20230817 21:28:01.458"/>
</kw>
<msg timestamp="20230817 21:28:01.458" level="INFO">${output} = rootca: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230817 21:28:01.447" endtime="20230817 21:28:01.458"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230817 21:28:01.458" endtime="20230817 21:28:01.459"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230817 21:28:01.463" level="INFO">Running command 'rm /tmp/key-08526 2&gt;&amp;1'.</msg>
<msg timestamp="20230817 21:28:01.466" level="INFO">${rc} = 0</msg>
<msg timestamp="20230817 21:28:01.468" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230817 21:28:01.460" endtime="20230817 21:28:01.468"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230817 21:28:01.469" level="INFO"/>
<status status="PASS" starttime="20230817 21:28:01.468" endtime="20230817 21:28:01.469"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230817 21:28:01.470" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230817 21:28:01.470" endtime="20230817 21:28:01.471"/>
</kw>
<status status="PASS" starttime="20230817 21:28:01.459" endtime="20230817 21:28:01.471"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230817 21:27:50.197" endtime="20230817 21:28:01.471"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230817 21:27:21.188" endtime="20230817 21:28:01.473"/>
</suite>
<suite id="s1-s3" name="Root-Ca-Rotation-Client-Checks" source="/opt/hadoop/smoketest/certrotation/root-ca-rotation-client-checks.robot">
<test id="s1-s3-t1" name="Create a volume and bucket" line="27">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230817 21:28:51.976" level="INFO">Running command 'ozone sh volume create rootca2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20230817 21:28:59.835" level="INFO">${rc} = 0</msg>
<msg timestamp="20230817 21:28:59.835" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230817 21:28:51.973" endtime="20230817 21:28:59.835"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230817 21:28:59.836" level="INFO"/>
<status status="PASS" starttime="20230817 21:28:59.835" endtime="20230817 21:28:59.837"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230817 21:28:59.837" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230817 21:28:59.837" endtime="20230817 21:28:59.838"/>
</kw>
<status status="PASS" starttime="20230817 21:28:51.972" endtime="20230817 21:28:59.838"/>
</kw>
<msg timestamp="20230817 21:28:59.838" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230817 21:28:51.972" endtime="20230817 21:28:59.838"/>
</kw>
<msg timestamp="20230817 21:28:59.838" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230817 21:28:51.971" endtime="20230817 21:28:59.839"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230817 21:28:59.839" endtime="20230817 21:28:59.839"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230817 21:28:59.845" level="INFO">Running command 'ozone sh bucket create /rootca2-volume/rootca2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20230817 21:29:08.838" level="INFO">${rc} = 0</msg>
<msg timestamp="20230817 21:29:08.838" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230817 21:28:59.842" endtime="20230817 21:29:08.838"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230817 21:29:08.840" level="INFO"/>
<status status="PASS" starttime="20230817 21:29:08.839" endtime="20230817 21:29:08.840"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230817 21:29:08.840" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230817 21:29:08.840" endtime="20230817 21:29:08.841"/>
</kw>
<status status="PASS" starttime="20230817 21:28:59.841" endtime="20230817 21:29:08.841"/>
</kw>
<msg timestamp="20230817 21:29:08.841" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230817 21:28:59.840" endtime="20230817 21:29:08.841"/>
</kw>
<msg timestamp="20230817 21:29:08.841" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230817 21:28:59.839" endtime="20230817 21:29:08.841"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230817 21:29:08.842" endtime="20230817 21:29:08.842"/>
</kw>
<tag>create-volume-and-bucket</tag>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230817 21:28:51.970" endtime="20230817 21:29:08.843"/>
</test>
<test id="s1-s3-t2" name="Create key" line="34">
<kw name="Execute and checkrc" library="os">
<arg>echo "${PREFIX}: key created using Ozone Shell" &gt; /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230817 21:29:08.852" level="INFO">Running command 'echo "rootca2: key created using Ozone Shell" &gt; /tmp/sourcekey'.</msg>
<msg timestamp="20230817 21:29:08.855" level="INFO">${rc} = 0</msg>
<msg timestamp="20230817 21:29:08.855" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230817 21:29:08.847" endtime="20230817 21:29:08.855"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230817 21:29:08.857" level="INFO"/>
<status status="PASS" starttime="20230817 21:29:08.855" endtime="20230817 21:29:08.857"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230817 21:29:08.858" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230817 21:29:08.857" endtime="20230817 21:29:08.858"/>
</kw>
<status status="PASS" starttime="20230817 21:29:08.846" endtime="20230817 21:29:08.858"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/sourcekey</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230817 21:29:08.870" level="INFO">Running command 'ozone sh key put /rootca2-volume/rootca2-bucket/rootca2-key /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230817 21:29:19.114" level="INFO">${rc} = 0</msg>
<msg timestamp="20230817 21:29:19.114" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230817 21:29:08.862" endtime="20230817 21:29:19.114"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230817 21:29:19.116" level="INFO"/>
<status status="PASS" starttime="20230817 21:29:19.115" endtime="20230817 21:29:19.116"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230817 21:29:19.118" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230817 21:29:19.117" endtime="20230817 21:29:19.118"/>
</kw>
<status status="PASS" starttime="20230817 21:29:08.861" endtime="20230817 21:29:19.118"/>
</kw>
<msg timestamp="20230817 21:29:19.119" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230817 21:29:08.860" endtime="20230817 21:29:19.119"/>
</kw>
<msg timestamp="20230817 21:29:19.119" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230817 21:29:08.859" endtime="20230817 21:29:19.119"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230817 21:29:19.119" endtime="20230817 21:29:19.120"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/sourcekey</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230817 21:29:19.131" level="INFO">Running command 'rm /tmp/sourcekey 2&gt;&amp;1'.</msg>
<msg timestamp="20230817 21:29:19.135" level="INFO">${rc} = 0</msg>
<msg timestamp="20230817 21:29:19.135" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230817 21:29:19.126" endtime="20230817 21:29:19.135"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230817 21:29:19.136" level="INFO"/>
<status status="PASS" starttime="20230817 21:29:19.135" endtime="20230817 21:29:19.136"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230817 21:29:19.137" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230817 21:29:19.137" endtime="20230817 21:29:19.137"/>
</kw>
<status status="PASS" starttime="20230817 21:29:19.121" endtime="20230817 21:29:19.138"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230817 21:29:08.844" endtime="20230817 21:29:19.138"/>
</test>
<test id="s1-s3-t3" name="Read data from previously created key" line="40">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20230817 21:29:19.143" level="INFO">${random} = 48769</msg>
<status status="PASS" starttime="20230817 21:29:19.142" endtime="20230817 21:29:19.144"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230817 21:29:19.151" level="INFO">Running command 'ozone sh key get /rootca2-volume/rootca2-bucket/rootca2-key /tmp/key-48769 2&gt;&amp;1'.</msg>
<msg timestamp="20230817 21:29:32.044" level="INFO">${rc} = 0</msg>
<msg timestamp="20230817 21:29:32.044" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230817 21:29:19.147" endtime="20230817 21:29:32.044"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230817 21:29:32.046" level="INFO"/>
<status status="PASS" starttime="20230817 21:29:32.045" endtime="20230817 21:29:32.046"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230817 21:29:32.047" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230817 21:29:32.046" endtime="20230817 21:29:32.047"/>
</kw>
<status status="PASS" starttime="20230817 21:29:19.146" endtime="20230817 21:29:32.047"/>
</kw>
<msg timestamp="20230817 21:29:32.047" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230817 21:29:19.145" endtime="20230817 21:29:32.047"/>
</kw>
<msg timestamp="20230817 21:29:32.048" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230817 21:29:19.144" endtime="20230817 21:29:32.048"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230817 21:29:32.048" endtime="20230817 21:29:32.048"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${output}</var>
<arg>cat /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230817 21:29:32.055" level="INFO">Running command 'cat /tmp/key-48769 2&gt;&amp;1'.</msg>
<msg timestamp="20230817 21:29:32.060" level="INFO">${rc} = 0</msg>
<msg timestamp="20230817 21:29:32.060" level="INFO">${output} = rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230817 21:29:32.050" endtime="20230817 21:29:32.060"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230817 21:29:32.062" level="INFO">rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230817 21:29:32.061" endtime="20230817 21:29:32.062"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230817 21:29:32.064" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230817 21:29:32.062" endtime="20230817 21:29:32.064"/>
</kw>
<msg timestamp="20230817 21:29:32.064" level="INFO">${output} = rootca2: key created using Ozone Shell</msg>
<status status="PASS" starttime="20230817 21:29:32.049" endtime="20230817 21:29:32.064"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${PREFIX}: key created using Ozone Shell</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230817 21:29:32.065" endtime="20230817 21:29:32.065"/>
</kw>
<kw name="Execute and checkrc" library="os">
<arg>rm /tmp/key-${random}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230817 21:29:32.070" level="INFO">Running command 'rm /tmp/key-48769 2&gt;&amp;1'.</msg>
<msg timestamp="20230817 21:29:32.074" level="INFO">${rc} = 0</msg>
<msg timestamp="20230817 21:29:32.074" level="INFO">${output} = </msg>
<status status="PASS" starttime="20230817 21:29:32.066" endtime="20230817 21:29:32.074"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230817 21:29:32.075" level="INFO"/>
<status status="PASS" starttime="20230817 21:29:32.074" endtime="20230817 21:29:32.075"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230817 21:29:32.076" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230817 21:29:32.076" endtime="20230817 21:29:32.077"/>
</kw>
<status status="PASS" starttime="20230817 21:29:32.065" endtime="20230817 21:29:32.077"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230817 21:29:19.141" endtime="20230817 21:29:32.078"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20230817 21:28:51.898" endtime="20230817 21:29:32.081"/>
</suite>
<suite id="s1-s4" name="Root-Ca-Rotation" source="/opt/hadoop/smoketest/scmha/root-ca-rotation.robot">
<test id="s1-s4-t1" name="Verify root CA rotation metrics" line="26">
<kw name="Execute" library="os">
<var>${successRotationLine}</var>
<arg>curl -sS 'http://localhost:9876/jmx' | grep NumSuccessRotation</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20230817 21:29:36.680" level="INFO">Running command 'curl -sS 'http://localhost:9876/jmx' | grep NumSuccessRotation 2&gt;&amp;1'.</msg>
<msg timestamp="20230817 21:29:37.802" level="INFO">${rc} = 0</msg>
<msg timestamp="20230817 21:29:37.802" level="INFO">${output} =     "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230817 21:29:36.677" endtime="20230817 21:29:37.802"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230817 21:29:37.804" level="INFO">    "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230817 21:29:37.803" endtime="20230817 21:29:37.804"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20230817 21:29:37.805" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230817 21:29:37.804" endtime="20230817 21:29:37.805"/>
</kw>
<status status="PASS" starttime="20230817 21:29:36.676" endtime="20230817 21:29:37.805"/>
</kw>
<msg timestamp="20230817 21:29:37.805" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230817 21:29:36.676" endtime="20230817 21:29:37.806"/>
</kw>
<msg timestamp="20230817 21:29:37.806" level="INFO">${successRotationLine} =     "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230817 21:29:36.675" endtime="20230817 21:29:37.806"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${successRotationLine}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230817 21:29:37.807" level="INFO">    "NumSuccessRotation" : 2,</msg>
<status status="PASS" starttime="20230817 21:29:37.806" endtime="20230817 21:29:37.807"/>
</kw>
<kw name="Split String" library="String">
<var>${temp_1}</var>
<arg>${successRotationLine}</arg>
<arg>:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230817 21:29:37.810" level="INFO">${temp_1} = ['    "NumSuccessRotation" ', ' 2,']</msg>
<status status="PASS" starttime="20230817 21:29:37.809" endtime="20230817 21:29:37.810"/>
</kw>
<kw name="Strip String" library="String">
<var>${temp_2}</var>
<arg>${temp_1[1]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230817 21:29:37.813" level="INFO">${temp_2} = 2,</msg>
<status status="PASS" starttime="20230817 21:29:37.810" endtime="20230817 21:29:37.813"/>
</kw>
<kw name="Split String" library="String">
<var>${temp_3}</var>
<arg>${temp_2}</arg>
<arg>,</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230817 21:29:37.814" level="INFO">${temp_3} = ['2', '']</msg>
<status status="PASS" starttime="20230817 21:29:37.813" endtime="20230817 21:29:37.814"/>
</kw>
<kw name="Strip String" library="String">
<var>${successRotation}</var>
<arg>${temp_3[0]}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230817 21:29:37.816" level="INFO">${successRotation} = 2</msg>
<status status="PASS" starttime="20230817 21:29:37.814" endtime="20230817 21:29:37.816"/>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<var>${successRotation}</var>
<arg>${successRotation}</arg>
<doc>Converts the given item to a floating point number.</doc>
<msg timestamp="20230817 21:29:37.817" level="INFO">${successRotation} = 2.0</msg>
<status status="PASS" starttime="20230817 21:29:37.816" endtime="20230817 21:29:37.817"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${successRotation} &gt;= 1</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230817 21:29:37.817" endtime="20230817 21:29:37.818"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20230817 21:29:36.672" endtime="20230817 21:29:37.818"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20230817 21:29:36.600" endtime="20230817 21:29:37.821"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="82226"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="2" fail="0" skip="0">create-volume-and-bucket</stat>
</tag>
<suite>
<stat pass="8" fail="0" skip="0" id="s1" name="ozonesecure-root-ca-rotation">ozonesecure-root-ca-rotation</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Kinit">ozonesecure-root-ca-rotation.Kinit</stat>
<stat pass="3" fail="0" skip="0" id="s1-s2" name="Root-Ca-Rotation-Client-Checks">ozonesecure-root-ca-rotation.Root-Ca-Rotation-Client-Checks</stat>
<stat pass="3" fail="0" skip="0" id="s1-s3" name="Root-Ca-Rotation-Client-Checks">ozonesecure-root-ca-rotation.Root-Ca-Rotation-Client-Checks</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Root-Ca-Rotation">ozonesecure-root-ca-rotation.Root-Ca-Rotation</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
